SNR-ERD-3s DEFINITIONS ::= BEGIN

IMPORTS
	MODULE-IDENTITY, OBJECT-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE
		FROM SNMPv2-SMI
	enterprises, IpAddress, Counter, Opaque					
		FROM RFC1155-SMI
	DisplayString
		FROM RFC1213-MIB
	NOTIFICATION-GROUP
		FROM SNMPv2-CONF
	TEXTUAL-CONVENTION
		FROM SNMPv2-TC
	; 

snr MODULE-IDENTITY
	LAST-UPDATED	"201504291200Z"
	ORGANIZATION	"NAG "
	CONTACT-INFO	"erd@nag.ru"
	DESCRIPTION
		"The MIB module for SNR-ERD"
	REVISION		"201504291200Z"
	DESCRIPTION
		"Initial revision." 
	::= { enterprises 40418 }


snr-erd		OBJECT IDENTIFIER	::= { snr 2 }
snr-erd-3s	OBJECT IDENTIFIER	::= { snr-erd 4}
ipAddressEntry	OBJECT IDENTIFIER	::= { snr-erd-3s 1 }
resetsSet	OBJECT IDENTIFIER	::= { snr-erd-3s 2 }
sensesSet1	OBJECT IDENTIFIER	::= { snr-erd-3s 3 }
sensesSet2	OBJECT IDENTIFIER	::= { snr-erd-3s 4 }
commS		OBJECT IDENTIFIER	::= { snr-erd-3s 5 }
upsMonitoring	OBJECT IDENTIFIER	::= { snr-erd-3s 6 }

temperatureSensorsOut	OBJECT IDENTIFIER	::= { sensesSet2 2 }

erd3sTraps	OBJECT IDENTIFIER	::= { snr-erd-3s 0 }

Float ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
        "A single precision floating-point number.  The semantics
        and encoding are identical for type 'single' defined in
        IEEE Standard for Binary Floating-Point,
        ANSI/IEEE Std 754-1985.
        The value is restricted to the BER serialization of
        the following ASN.1 type:
            FLOATTYPE ::= [120] IMPLICIT FloatType
        (note: the value 120 is the sum of '30'h and '48'h)
        The BER serialization of the length for values of
        this type must use the definite length, short
        encoding form.

        For example, the BER serialization of value 123
        of type FLOATTYPE is '9f780442f60000'h.  (The tag
        is '9f78'h; the length is '04'h; and the value is
        '42f60000'h.) The BER serialization of value
        '9f780442f60000'h of data type Opaque is
        '44079f780442f60000'h. (The tag is '44'h; the length
        is '07'h; and the value is '9f780442f60000'h."
	    SYNTAX      Opaque (SIZE(7))



-- Traps

temperatureSensorAlarm	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps  0 }

temperatureSensorRelease	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 1 }

signal1Contact8Alarm	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 2 }

signal1Contact8Ok	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 3 }

signal2Contact9Alarm	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 4 }

signal2Contact9Ok	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 5 }

voltageSignal1Alarm	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 6 }

voltageSignal1Ok	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 7 }

voltageSignal2Alarm	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 8 }

voltageSignal2Ok	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 9 }

anySensorSignal1contact5Alarm	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 10 }

anySensorSignal1contact5Ok	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 11 }

anySensorSignal2contact6Alarm	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 12 }

anySensorSignal2contact6Ok	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 13 }

anySensorSignal3contact7Alarm	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 14 }

anySensorSignal3contact7Ok	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 15 }

voltageAlarm		NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 16 }

voltageOk		NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 17 }

remoteControlContact11On	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 18 }

remoteControlContact11Off	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 19 }

resetedSmartContact10	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 20 }

temperatureSensorOutAlarm	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 23 }

temperatureSensorOutRelease	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 24 }

temperatureSensorOutFail	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 25 }

temperatureSensorOutOk	NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 26 }

upsUtilityFail		NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 30 }

upsUtilityOk		NOTIFICATION-TYPE
	STATUS		current
	DESCRIPTION	"Check the text of message"		
::= { erd3sTraps 31 }

erd3sTrapGroup		NOTIFICATION-GROUP  
	NOTIFICATIONS 
	{
		temperatureSensorAlarm,
		temperatureSensorRelease,   
		signal1Contact8Alarm,

		signal1Contact8Ok,
		signal2Contact9Alarm,

		signal2Contact9Ok,
		voltageSignal1Alarm,
		voltageSignal1Ok,
		voltageSignal2Alarm,
		voltageSignal2Ok,
		anySensorSignal1contact5Alarm,
		anySensorSignal1contact5Ok,
		anySensorSignal2contact6Alarm,
		anySensorSignal2contact6Ok,
		anySensorSignal3contact7Alarm,
		anySensorSignal3contact7Ok,
		voltageAlarm,
		voltageOk,
		remoteControlContact11On,
		remoteControlContact11Off,
		resetedSmartContact10,
		temperatureSensorOutAlarm,
		temperatureSensorOutRelease,
		temperatureSensorOutFail,
		temperatureSensorOutOk,
		upsUtilityFail,
		upsUtilityOk
	}
  
	STATUS current

	DESCRIPTION

		" "

::= { snr-erd-3s 99 }


-- ipAddressEntry

ipAddress		OBJECT-TYPE
	SYNTAX		IpAddress
        MAX-ACCESS	read-write
        STATUS		current
        DESCRIPTION	"myIp"
::= {ipAddressEntry 1}

ipGatewayAddress	OBJECT-TYPE
	SYNTAX		IpAddress
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"DGIp"
::= {ipAddressEntry 2}

ipMonitoringDevice	OBJECT-TYPE
	SYNTAX		IpAddress
        MAX-ACCESS	read-write 
        STATUS		current
        DESCRIPTION	"monitoredIP"
::= {ipAddressEntry 3}

ipForTrap		OBJECT-TYPE
	SYNTAX		IpAddress 
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"ipForTrap"
::= {ipAddressEntry 4}


-- resetsSet

resetSmartContact10	OBJECT-TYPE
	SYNTAX		INTEGER  
			{
				reset	(1),
				bypass	(0)
			}
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"    
::= { resetsSet 1}

numberOfResetPositives	OBJECT-TYPE
	SYNTAX		INTEGER {resetPositives (0)}
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= { resetsSet 2 }


remoteControlContact11	OBJECT-TYPE
	SYNTAX		INTEGER 
			{
				termostatSetON	(3),
				switch			(4),
				manualSetON		(2),
				manOFF			(1),
				manON			(0),
				autoOFF		(6),
				autoON			(5) 
			}
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= { resetsSet 3 }


-- sensesSet1

monitorAlarmSignal1Contact8	OBJECT-TYPE
	SYNTAX			INTEGER 
				{
					sensorOn	(3),
					doorIsClose	(1),
					doorIsOpen	(2),       
					sensorOff	(0)
				}
	MAX-ACCESS		read-write
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet1 1}

monitorAlarmSignal2Contact9	OBJECT-TYPE
	SYNTAX			INTEGER 
				{
					sensorOn	(3),
					doorIsClose	(1),
					doorIsOpen	(2),       
					sensorOff	(0)
				}
	MAX-ACCESS		read-write
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet1 2 }

numberOfAlarmPositives		OBJECT-TYPE
	SYNTAX			INTEGER {resetPositives (0)}
	MAX-ACCESS		read-write
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet1 3 }

monitorAnySensorSignal1contact5	OBJECT-TYPE
	SYNTAX			INTEGER 
				{
					sensorOn	(3),
					sensorIs0	(1),
					sensorIs1	(2),       
					sensorOff	(0)
				}
	MAX-ACCESS		read-write
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet1 4 }

monitorAnySensorSignal2contact6	OBJECT-TYPE
	SYNTAX			INTEGER 
				{
					sensorOn	(3),
					sensorIs0	(1),
					sensorIs1	(2),       
					sensorOff	(0)
				}
	MAX-ACCESS		read-write
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet1 5 }

monitorAnySensorSignal3contact7	OBJECT-TYPE
	SYNTAX			INTEGER 
				{
					sensorOn	(3),
					sensorIs0	(1),
					sensorIs1	(2),       
					sensorOff	(0)
				}
	MAX-ACCESS		read-write
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet1 6 }

monitorVoltageSignal1		OBJECT-TYPE
	SYNTAX			INTEGER 
				{
					sensorOn	(3),
					voltageIsYes	(2),
					voltageIsNo	(1),       
					sensorOff	(0)
				}
	MAX-ACCESS		read-write
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet1 7 }

monitorVoltageSignal2		OBJECT-TYPE
	SYNTAX			INTEGER 
				{
					sensorOn(3),
					voltageIsYes (2),
					voltageIsNo (1),       
					sensorOff (0)
				}
	MAX-ACCESS		read-write
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet1 8 }


-- sensesSet2

temperatureSensor		OBJECT-TYPE
	SYNTAX			INTEGER 
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet2 1 }


temperatureSensorOutSerial1	OBJECT-TYPE
	SYNTAX			OCTET STRING
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 1 }

temperatureSensorOut1		OBJECT-TYPE
	SYNTAX			INTEGER
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 2 }

temperatureSensorOutSerial2	OBJECT-TYPE
	SYNTAX			OCTET STRING
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 3 }

temperatureSensorOut2		OBJECT-TYPE
	SYNTAX			INTEGER
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 4 }

temperatureSensorOutSerial3	OBJECT-TYPE
	SYNTAX			OCTET STRING
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 5 }

temperatureSensorOut3		OBJECT-TYPE
	SYNTAX			INTEGER
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 6 }

temperatureSensorOutSerial4	OBJECT-TYPE
	SYNTAX			OCTET STRING
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 7 }

temperatureSensorOut4		OBJECT-TYPE
	SYNTAX			INTEGER
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 8 }

temperatureSensorOutSerial5	OBJECT-TYPE
	SYNTAX			OCTET STRING
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 9 }

temperatureSensorOut5		OBJECT-TYPE
	SYNTAX			INTEGER
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { temperatureSensorsOut 10 }

voltageSensorContact12		OBJECT-TYPE
	SYNTAX			INTEGER 
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet2 3 }

sysVoltageAlarm			OBJECT-TYPE
	SYNTAX			INTEGER 
	MAX-ACCESS		read-write
	STATUS			current
	DESCRIPTION		"qwerty"
::= { sensesSet2 4 }


-- commS

communityString		OBJECT-TYPE
	SYNTAX		DisplayString (SIZE(0..10))
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= {commS 1}

trapMode		OBJECT-TYPE
	SYNTAX		INTEGER 
			{
				once		(1),      
				cyclically	(0)
			}
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= {commS 2}

alarmSense1Name		OBJECT-TYPE
	SYNTAX		DisplayString (SIZE(0..10))
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= {commS 3}

alarmSense2Name		OBJECT-TYPE
	SYNTAX		DisplayString (SIZE(0..10))
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= {commS 4}

userSense1Name		OBJECT-TYPE
	SYNTAX		DisplayString (SIZE(0..10))
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= {commS 5}

userSense2Name		OBJECT-TYPE
	SYNTAX		DisplayString (SIZE(0..10))
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= {commS 6}

userSense3Name		OBJECT-TYPE
	SYNTAX		DisplayString (SIZE(0..10))
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= {commS 7}


dataType		OBJECT-TYPE
	SYNTAX		INTEGER 
			{
				integer	(0),      
				float	(1),
				uni	(2)
			}
	MAX-ACCESS	read-write
	STATUS		current
	DESCRIPTION	"qwerty"
::= {commS 10}



-- upsMonitoring

batteryVoltage			OBJECT-TYPE
	SYNTAX			Float
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { upsMonitoring 1 }

upsTemperature			OBJECT-TYPE
	SYNTAX			Float 
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { upsMonitoring 2 }

inputVoltage			OBJECT-TYPE
	SYNTAX			Float 
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { upsMonitoring 3 }

outputVoltage			OBJECT-TYPE
	SYNTAX			Float 
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { upsMonitoring 4 }

upsLoading			OBJECT-TYPE
	SYNTAX			INTEGER 
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { upsMonitoring 5 }

upsStatus			OBJECT-TYPE
	SYNTAX			INTEGER 
				{
					unknown		(2),
					utilityFail	(1),      
					utilityOk	(0)
				}
	MAX-ACCESS		read-only
	STATUS			current
	DESCRIPTION		"qwerty"
::= { upsMonitoring 6 }


END

