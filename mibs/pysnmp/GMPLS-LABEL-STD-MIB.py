#
# PySNMP MIB module GMPLS-LABEL-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GMPLS-LABEL-STD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:06:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
IndexIntegerNextFree, = mibBuilder.importSymbols("DIFFSERV-MIB", "IndexIntegerNextFree")
GmplsLabelTypeTC, GmplsFreeformLabelTC = mibBuilder.importSymbols("GMPLS-TC-STD-MIB", "GmplsLabelTypeTC", "GmplsFreeformLabelTC")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
MplsLabel, mplsStdMIB = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsLabel", "mplsStdMIB")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, Gauge32, IpAddress, MibIdentifier, Bits, Unsigned32, iso, ModuleIdentity, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "IpAddress", "MibIdentifier", "Bits", "Unsigned32", "iso", "ModuleIdentity", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "ObjectIdentity")
TextualConvention, StorageType, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "StorageType", "DisplayString", "RowStatus")
gmplsLabelStdMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 166, 16))
gmplsLabelStdMIB.setRevisions(('2007-02-27 00:00',))
if mibBuilder.loadTexts: gmplsLabelStdMIB.setLastUpdated('200702270000Z')
if mibBuilder.loadTexts: gmplsLabelStdMIB.setOrganization('IETF Common Control and Measurement Plane (CCAMP) Working Group')
gmplsLabelObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 16, 1))
gmplsLabelConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 16, 2))
gmplsLabelIndexNext = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsLabelIndexNext.setStatus('current')
gmplsLabelTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2), )
if mibBuilder.loadTexts: gmplsLabelTable.setStatus('current')
gmplsLabelEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1), ).setIndexNames((0, "GMPLS-LABEL-STD-MIB", "gmplsLabelInterface"), (0, "GMPLS-LABEL-STD-MIB", "gmplsLabelIndex"), (0, "GMPLS-LABEL-STD-MIB", "gmplsLabelSubindex"))
if mibBuilder.loadTexts: gmplsLabelEntry.setStatus('current')
gmplsLabelInterface = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: gmplsLabelInterface.setStatus('current')
gmplsLabelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: gmplsLabelIndex.setStatus('current')
gmplsLabelSubindex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: gmplsLabelSubindex.setStatus('current')
gmplsLabelType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 4), GmplsLabelTypeTC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelType.setStatus('current')
gmplsLabelMplsLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 5), MplsLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelMplsLabel.setStatus('current')
gmplsLabelPortWavelength = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelPortWavelength.setStatus('current')
gmplsLabelFreeform = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 7), GmplsFreeformLabelTC().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelFreeform.setStatus('current')
gmplsLabelSonetSdhSignalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelSonetSdhSignalIndex.setStatus('current')
gmplsLabelSdhVc = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelSdhVc.setStatus('current')
gmplsLabelSdhVcBranch = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelSdhVcBranch.setStatus('current')
gmplsLabelSonetSdhBranch = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelSonetSdhBranch.setStatus('current')
gmplsLabelSonetSdhGroupBranch = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelSonetSdhGroupBranch.setStatus('current')
gmplsLabelWavebandId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelWavebandId.setStatus('current')
gmplsLabelWavebandStart = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelWavebandStart.setStatus('current')
gmplsLabelWavebandEnd = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelWavebandEnd.setStatus('current')
gmplsLabelStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 16), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelStorageType.setStatus('current')
gmplsLabelRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 16, 1, 2, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsLabelRowStatus.setStatus('current')
gmplsLabelGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1))
gmplsLabelCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 2))
gmplsLabelModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 2, 1)).setObjects(("GMPLS-LABEL-STD-MIB", "gmplsLabelTableGroup"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelPacketGroup"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelPortWavelengthGroup"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelFreeformGroup"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelSonetSdhGroup"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelWavebandGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsLabelModuleReadOnlyCompliance = gmplsLabelModuleReadOnlyCompliance.setStatus('current')
gmplsLabelModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 2, 2)).setObjects(("GMPLS-LABEL-STD-MIB", "gmplsLabelTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsLabelModuleFullCompliance = gmplsLabelModuleFullCompliance.setStatus('current')
gmplsLabelTableGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 1)).setObjects(("GMPLS-LABEL-STD-MIB", "gmplsLabelIndexNext"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelType"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelStorageType"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsLabelTableGroup = gmplsLabelTableGroup.setStatus('current')
gmplsLabelPacketGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 2)).setObjects(("GMPLS-LABEL-STD-MIB", "gmplsLabelMplsLabel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsLabelPacketGroup = gmplsLabelPacketGroup.setStatus('current')
gmplsLabelPortWavelengthGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 3)).setObjects(("GMPLS-LABEL-STD-MIB", "gmplsLabelPortWavelength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsLabelPortWavelengthGroup = gmplsLabelPortWavelengthGroup.setStatus('current')
gmplsLabelFreeformGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 4)).setObjects(("GMPLS-LABEL-STD-MIB", "gmplsLabelFreeform"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsLabelFreeformGroup = gmplsLabelFreeformGroup.setStatus('current')
gmplsLabelSonetSdhGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 5)).setObjects(("GMPLS-LABEL-STD-MIB", "gmplsLabelSonetSdhSignalIndex"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelSdhVc"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelSdhVcBranch"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelSonetSdhBranch"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelSonetSdhGroupBranch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsLabelSonetSdhGroup = gmplsLabelSonetSdhGroup.setStatus('current')
gmplsLabelWavebandGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 16, 2, 1, 6)).setObjects(("GMPLS-LABEL-STD-MIB", "gmplsLabelWavebandId"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelWavebandStart"), ("GMPLS-LABEL-STD-MIB", "gmplsLabelWavebandEnd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsLabelWavebandGroup = gmplsLabelWavebandGroup.setStatus('current')
mibBuilder.exportSymbols("GMPLS-LABEL-STD-MIB", gmplsLabelCompliances=gmplsLabelCompliances, gmplsLabelObjects=gmplsLabelObjects, gmplsLabelIndexNext=gmplsLabelIndexNext, gmplsLabelFreeform=gmplsLabelFreeform, gmplsLabelStorageType=gmplsLabelStorageType, gmplsLabelWavebandEnd=gmplsLabelWavebandEnd, gmplsLabelPortWavelengthGroup=gmplsLabelPortWavelengthGroup, gmplsLabelWavebandGroup=gmplsLabelWavebandGroup, gmplsLabelMplsLabel=gmplsLabelMplsLabel, gmplsLabelRowStatus=gmplsLabelRowStatus, gmplsLabelWavebandStart=gmplsLabelWavebandStart, gmplsLabelSonetSdhGroupBranch=gmplsLabelSonetSdhGroupBranch, gmplsLabelType=gmplsLabelType, gmplsLabelTable=gmplsLabelTable, gmplsLabelSonetSdhSignalIndex=gmplsLabelSonetSdhSignalIndex, gmplsLabelSonetSdhBranch=gmplsLabelSonetSdhBranch, gmplsLabelInterface=gmplsLabelInterface, gmplsLabelPortWavelength=gmplsLabelPortWavelength, gmplsLabelPacketGroup=gmplsLabelPacketGroup, gmplsLabelSubindex=gmplsLabelSubindex, gmplsLabelTableGroup=gmplsLabelTableGroup, gmplsLabelSonetSdhGroup=gmplsLabelSonetSdhGroup, gmplsLabelWavebandId=gmplsLabelWavebandId, gmplsLabelModuleReadOnlyCompliance=gmplsLabelModuleReadOnlyCompliance, gmplsLabelEntry=gmplsLabelEntry, gmplsLabelConformance=gmplsLabelConformance, PYSNMP_MODULE_ID=gmplsLabelStdMIB, gmplsLabelGroups=gmplsLabelGroups, gmplsLabelModuleFullCompliance=gmplsLabelModuleFullCompliance, gmplsLabelIndex=gmplsLabelIndex, gmplsLabelSdhVc=gmplsLabelSdhVc, gmplsLabelSdhVcBranch=gmplsLabelSdhVcBranch, gmplsLabelStdMIB=gmplsLabelStdMIB, gmplsLabelFreeformGroup=gmplsLabelFreeformGroup)
