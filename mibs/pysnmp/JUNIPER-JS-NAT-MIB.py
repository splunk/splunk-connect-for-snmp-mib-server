#
# PySNMP MIB module JUNIPER-JS-NAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-JS-NAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddressIPv4, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddressIPv4", "InetAddress")
jnxJsNAT, = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsNAT")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Gauge32, Unsigned32, NotificationType, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier, TimeTicks, Integer32, Counter64, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "Unsigned32", "NotificationType", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier", "TimeTicks", "Integer32", "Counter64", "IpAddress", "ModuleIdentity")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
jnxJsNatMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1))
jnxJsNatMIB.setRevisions(('2007-04-13 20:22', '2012-03-01 11:22',))
if mibBuilder.loadTexts: jnxJsNatMIB.setLastUpdated('201203011122Z')
if mibBuilder.loadTexts: jnxJsNatMIB.setOrganization('Juniper Networks, Inc.')
jnxJsNatNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 0))
jnxJsNatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1))
jnxJsNatTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 2))
jnxJsSrcNatNumOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSrcNatNumOfEntries.setStatus('current')
jnxJsSrcNatTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2), )
if mibBuilder.loadTexts: jnxJsSrcNatTable.setStatus('deprecated')
jnxJsSrcNatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1), ).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcIpPoolName"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcGlobalAddr"))
if mibBuilder.loadTexts: jnxJsSrcNatEntry.setStatus('deprecated')
jnxJsNatSrcIpPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsNatSrcIpPoolName.setStatus('deprecated')
jnxJsNatSrcGlobalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 2), InetAddressIPv4())
if mibBuilder.loadTexts: jnxJsNatSrcGlobalAddr.setStatus('deprecated')
jnxJsNatSrcPortPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("withPAT", 1), ("withoutPAT", 2), ("static", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcPortPoolType.setStatus('deprecated')
jnxJsNatSrcNumOfPortInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcNumOfPortInuse.setStatus('deprecated')
jnxJsNatSrcNumOfSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcNumOfSessions.setStatus('deprecated')
jnxJsNatSrcAssocatedIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 2, 1, 6), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcAssocatedIf.setStatus('deprecated')
jnxJsNatIfSrcPoolPortTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3), )
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolPortTable.setStatus('current')
jnxJsNatIfSrcPoolPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1), ).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatIfSrcPoolIndex"))
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolPortEntry.setStatus('current')
jnxJsNatIfSrcPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolIndex.setStatus('current')
jnxJsNatIfSrcPoolTotalSinglePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolTotalSinglePorts.setStatus('current')
jnxJsNatIfSrcPoolAllocSinglePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolAllocSinglePorts.setStatus('current')
jnxJsNatIfSrcPoolTotalTwinPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolTotalTwinPorts.setStatus('current')
jnxJsNatIfSrcPoolAllocTwinPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatIfSrcPoolAllocTwinPorts.setStatus('current')
jnxJsSrcNatStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4), )
if mibBuilder.loadTexts: jnxJsSrcNatStatsTable.setStatus('current')
jnxJsSrcNatStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1), ).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcPoolName"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcXlatedAddrType"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatSrcXlatedAddr"))
if mibBuilder.loadTexts: jnxJsSrcNatStatsEntry.setStatus('current')
jnxJsNatSrcPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsNatSrcPoolName.setStatus('current')
jnxJsNatSrcXlatedAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 2), InetAddressType())
if mibBuilder.loadTexts: jnxJsNatSrcXlatedAddrType.setStatus('current')
jnxJsNatSrcXlatedAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 3), InetAddress())
if mibBuilder.loadTexts: jnxJsNatSrcXlatedAddr.setStatus('current')
jnxJsNatSrcPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("withPAT", 1), ("withoutPAT", 2), ("static", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcPoolType.setStatus('current')
jnxJsNatSrcNumPortInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcNumPortInuse.setStatus('current')
jnxJsNatSrcNumSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatSrcNumSessions.setStatus('current')
jnxJsNatRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5), )
if mibBuilder.loadTexts: jnxJsNatRuleTable.setStatus('current')
jnxJsNatRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1), ).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatRuleName"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatRuleType"))
if mibBuilder.loadTexts: jnxJsNatRuleEntry.setStatus('current')
jnxJsNatRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatRuleName.setStatus('current')
jnxJsNatRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("source", 1), ("destination", 2), ("static", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatRuleType.setStatus('current')
jnxJsNatRuleTransHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatRuleTransHits.setStatus('deprecated')
jnxJsNatRuleHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatRuleHits.setStatus('current')
jnxJsNatPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6), )
if mibBuilder.loadTexts: jnxJsNatPoolTable.setStatus('current')
jnxJsNatPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1), ).setIndexNames((0, "JUNIPER-JS-NAT-MIB", "jnxJsNatPoolName"), (0, "JUNIPER-JS-NAT-MIB", "jnxJsNatPoolType"))
if mibBuilder.loadTexts: jnxJsNatPoolEntry.setStatus('current')
jnxJsNatPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatPoolName.setStatus('current')
jnxJsNatPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("source", 1), ("destination", 2), ("static", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatPoolType.setStatus('current')
jnxJsNatPoolTransHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatPoolTransHits.setStatus('deprecated')
jnxJsNatPoolHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNatPoolHits.setStatus('current')
jnxJsNatAddrPoolThresholdStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 0, 1)).setObjects(("JUNIPER-JS-NAT-MIB", "jnxJsNatSrcIpPoolName"), ("JUNIPER-JS-NAT-MIB", "jnxJsNatAddrPoolUtil"))
if mibBuilder.loadTexts: jnxJsNatAddrPoolThresholdStatus.setStatus('deprecated')
jnxJsNatAddrPoolUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsNatAddrPoolUtil.setStatus('current')
jnxJsNatTrapPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxJsNatTrapPoolName.setStatus('current')
jnxJsSrcNatPoolThresholdStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 7, 1, 0, 2)).setObjects(("JUNIPER-JS-NAT-MIB", "jnxJsNatTrapPoolName"), ("JUNIPER-JS-NAT-MIB", "jnxJsNatAddrPoolUtil"))
if mibBuilder.loadTexts: jnxJsSrcNatPoolThresholdStatus.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-JS-NAT-MIB", jnxJsNatSrcNumSessions=jnxJsNatSrcNumSessions, jnxJsNatSrcGlobalAddr=jnxJsNatSrcGlobalAddr, jnxJsSrcNatTable=jnxJsSrcNatTable, jnxJsSrcNatEntry=jnxJsSrcNatEntry, jnxJsSrcNatStatsEntry=jnxJsSrcNatStatsEntry, jnxJsNatRuleType=jnxJsNatRuleType, jnxJsNatPoolName=jnxJsNatPoolName, jnxJsNatRuleTable=jnxJsNatRuleTable, jnxJsNatPoolEntry=jnxJsNatPoolEntry, jnxJsNatSrcIpPoolName=jnxJsNatSrcIpPoolName, jnxJsNatTrapVars=jnxJsNatTrapVars, jnxJsNatIfSrcPoolIndex=jnxJsNatIfSrcPoolIndex, jnxJsNatSrcPoolName=jnxJsNatSrcPoolName, jnxJsNatIfSrcPoolAllocSinglePorts=jnxJsNatIfSrcPoolAllocSinglePorts, jnxJsNatMIB=jnxJsNatMIB, jnxJsNatSrcNumPortInuse=jnxJsNatSrcNumPortInuse, jnxJsSrcNatPoolThresholdStatus=jnxJsSrcNatPoolThresholdStatus, jnxJsNatNotifications=jnxJsNatNotifications, jnxJsNatIfSrcPoolAllocTwinPorts=jnxJsNatIfSrcPoolAllocTwinPorts, jnxJsNatSrcPoolType=jnxJsNatSrcPoolType, jnxJsNatSrcXlatedAddr=jnxJsNatSrcXlatedAddr, jnxJsNatPoolTable=jnxJsNatPoolTable, jnxJsNatIfSrcPoolTotalSinglePorts=jnxJsNatIfSrcPoolTotalSinglePorts, jnxJsNatSrcPortPoolType=jnxJsNatSrcPortPoolType, jnxJsNatSrcNumOfPortInuse=jnxJsNatSrcNumOfPortInuse, PYSNMP_MODULE_ID=jnxJsNatMIB, jnxJsSrcNatNumOfEntries=jnxJsSrcNatNumOfEntries, jnxJsNatObjects=jnxJsNatObjects, jnxJsNatIfSrcPoolTotalTwinPorts=jnxJsNatIfSrcPoolTotalTwinPorts, jnxJsNatAddrPoolUtil=jnxJsNatAddrPoolUtil, jnxJsNatSrcXlatedAddrType=jnxJsNatSrcXlatedAddrType, jnxJsNatPoolTransHits=jnxJsNatPoolTransHits, jnxJsSrcNatStatsTable=jnxJsSrcNatStatsTable, jnxJsNatAddrPoolThresholdStatus=jnxJsNatAddrPoolThresholdStatus, jnxJsNatRuleEntry=jnxJsNatRuleEntry, jnxJsNatIfSrcPoolPortEntry=jnxJsNatIfSrcPoolPortEntry, jnxJsNatSrcAssocatedIf=jnxJsNatSrcAssocatedIf, jnxJsNatIfSrcPoolPortTable=jnxJsNatIfSrcPoolPortTable, jnxJsNatPoolType=jnxJsNatPoolType, jnxJsNatSrcNumOfSessions=jnxJsNatSrcNumOfSessions, jnxJsNatPoolHits=jnxJsNatPoolHits, jnxJsNatRuleName=jnxJsNatRuleName, jnxJsNatRuleTransHits=jnxJsNatRuleTransHits, jnxJsNatRuleHits=jnxJsNatRuleHits, jnxJsNatTrapPoolName=jnxJsNatTrapPoolName)
