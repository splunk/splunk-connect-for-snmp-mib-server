#
# PySNMP MIB module CISCO-LWAPP-MOBILITY-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-MOBILITY-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
cLWlanIndex, = mibBuilder.importSymbols("CISCO-LWAPP-WLAN-MIB", "cLWlanIndex")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, ModuleIdentity, Unsigned32, Counter32, MibIdentifier, Gauge32, NotificationType, Integer32, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "Unsigned32", "Counter32", "MibIdentifier", "Gauge32", "NotificationType", "Integer32", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "ObjectIdentity")
DisplayString, TruthValue, TextualConvention, DateAndTime, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "DateAndTime", "MacAddress", "RowStatus")
ciscoLwappMobilityExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 999999))
ciscoLwappMobilityExtMIB.setRevisions(('2014-04-14 00:00', '2013-01-09 01:00',))
if mibBuilder.loadTexts: ciscoLwappMobilityExtMIB.setLastUpdated('201404210000Z')
if mibBuilder.loadTexts: ciscoLwappMobilityExtMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappMobilityExtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 0))
ciscoLwappMobilityExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1))
ciscoLwappMobilityExtMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 2))
ciscoLwappMobilityExtGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1))
ciscoLwappMobilityExtTableObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2))
ciscoLwappMobilityExtNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 3))
ciscoLwappMobilityExtMCGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1))
ciscoLwappMobilityExtMCMAGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2))
ciscoLwappMobilityExtMAGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3))
ciscoLwappMobilityExtMCStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4))
class CiscoAbsZeroBasedCounter64(TextualConvention, Counter64):
    status = 'current'

cLMobilityExtMCMOEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCMOEnableStatus.setStatus('current')
cLMobilityExtMCMOAdminEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCMOAdminEnableStatus.setStatus('current')
cLMobilityExtMCEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCEnableStatus.setStatus('current')
cLMobilityExtMCAdminEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCAdminEnableStatus.setStatus('current')
cLMobilityExtMCMulticastMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCMulticastMode.setStatus('current')
cLMobilityExtMCKeepAliveCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 20)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCKeepAliveCount.setStatus('current')
cLMobilityExtMCKeepAliveInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCKeepAliveInterval.setStatus('current')
cLMobilityExtMCDscpValue = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCDscpValue.setStatus('current')
cLMobilityExtMCMOPublicAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 9), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCMOPublicAddressType.setStatus('current')
cLMobilityExtMCMOPublicAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 10), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCMOPublicAddress.setStatus('current')
cLMobilityExtMCApCountLicensesInUse = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCApCountLicensesInUse.setStatus('current')
cLMobilityExtMCOwnGroupMulticastAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 12), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCOwnGroupMulticastAddressType.setStatus('current')
cLMobilityExtMCOwnGroupMulticastAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 13), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCOwnGroupMulticastAddress.setStatus('current')
cLMobilityExtMCMobilityGroupName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 1, 14), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMCMobilityGroupName.setStatus('current')
cLMobilityExtMgrAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMgrAddressType.setStatus('current')
cLMobilityExtMgrAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMgrAddress.setStatus('current')
cLMobilityExtMgrNetmaskType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMgrNetmaskType.setStatus('current')
cLMobilityExtMgrNetmask = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMgrNetmask.setStatus('current')
cLMobilityExtMgrMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMgrMacAddress.setStatus('current')
cLMobilityExtMgrVlanId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMgrVlanId.setStatus('current')
cLMobilityExtMgrName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 7), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMgrName.setStatus('current')
cLMobilityExtMgrInterfaceType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("management", 1), ("ap", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMgrInterfaceType.setStatus('current')
cLMobilityExtNewArchitectureEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtNewArchitectureEnableStatus.setStatus('current')
cLMobilityExtNewArchitectureAdminEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 2, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtNewArchitectureAdminEnableStatus.setStatus('current')
cLMobilityExtSpgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1), )
if mibBuilder.loadTexts: cLMobilityExtSpgTable.setStatus('current')
cLMobilityExtSpgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgGroupName"))
if mibBuilder.loadTexts: cLMobilityExtSpgEntry.setStatus('current')
cLMobilityExtSpgGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cLMobilityExtSpgGroupName.setStatus('current')
cLMobilityExtSpgGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtSpgGroupId.setStatus('current')
cLMobilityExtSpgBridgeDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtSpgBridgeDomainId.setStatus('current')
cLMobilityExtSpgMemberCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtSpgMemberCount.setStatus('current')
cLMobilityExtSpgMulticastAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtSpgMulticastAddressType.setStatus('current')
cLMobilityExtSpgMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtSpgMulticastAddress.setStatus('current')
cLMobilityExtSpgMulticastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtSpgMulticastMode.setStatus('current')
cLMobilityExtSpgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtSpgRowStatus.setStatus('current')
cLMobilityExtSpgMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 2), )
if mibBuilder.loadTexts: cLMobilityExtSpgMemberTable.setStatus('current')
cLMobilityExtSpgMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgGroupName"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberPrivateAddressType"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberPrivateAddress"))
if mibBuilder.loadTexts: cLMobilityExtSpgMemberEntry.setStatus('current')
cLMobilityExtSpgMemberPrivateAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLMobilityExtSpgMemberPrivateAddressType.setStatus('current')
cLMobilityExtSpgMemberPrivateAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLMobilityExtSpgMemberPrivateAddress.setStatus('current')
cLMobilityExtSpgMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notconfigured", 0), ("datapathdown", 1), ("controlpathdown", 2), ("bothdown", 3), ("up", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtSpgMemberStatus.setStatus('current')
cLMobilityExtSpgMemberPublicAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 2, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtSpgMemberPublicAddressType.setStatus('current')
cLMobilityExtSpgMemberPublicAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 2, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtSpgMemberPublicAddress.setStatus('current')
cLMobilityExtSpgMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtSpgMemberRowStatus.setStatus('current')
cLMobilityExtGroupMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3), )
if mibBuilder.loadTexts: cLMobilityExtGroupMemberTable.setStatus('current')
cLMobilityExtGroupMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberPrivateAddressType"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberPrivateAddress"))
if mibBuilder.loadTexts: cLMobilityExtGroupMemberEntry.setStatus('current')
cLMobilityExtGroupMemberPrivateAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLMobilityExtGroupMemberPrivateAddressType.setStatus('current')
cLMobilityExtGroupMemberPrivateAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLMobilityExtGroupMemberPrivateAddress.setStatus('current')
cLMobilityExtGroupMemberGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtGroupMemberGroupName.setStatus('current')
cLMobilityExtGroupMemberPublicAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtGroupMemberPublicAddressType.setStatus('current')
cLMobilityExtGroupMemberPublicAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtGroupMemberPublicAddress.setStatus('current')
cLMobilityExtGroupMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notconfigured", 0), ("datapathdown", 1), ("controlpathdown", 2), ("bothdown", 3), ("up", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtGroupMemberStatus.setStatus('current')
cLMobilityExtGroupMemberMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 7), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtGroupMemberMacAddress.setStatus('current')
cLMobilityExtGroupMemberMulticastAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtGroupMemberMulticastAddressType.setStatus('current')
cLMobilityExtGroupMemberMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtGroupMemberMulticastAddress.setStatus('current')
cLMobilityExtGroupMemberHashKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtGroupMemberHashKey.setStatus('current')
cLMobilityExtGroupMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 3, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtGroupMemberRowStatus.setStatus('current')
cLMobilityExtAnchorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 4), )
if mibBuilder.loadTexts: cLMobilityExtAnchorTable.setStatus('current')
cLMobilityExtAnchorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-LWAPP-WLAN-MIB", "cLWlanIndex"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtAnchorAssociatedMCAddressType"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtAnchorAssociatedMCAddress"))
if mibBuilder.loadTexts: cLMobilityExtAnchorEntry.setStatus('current')
cLMobilityExtAnchorAssociatedMCAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLMobilityExtAnchorAssociatedMCAddressType.setStatus('current')
cLMobilityExtAnchorAssociatedMCAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLMobilityExtAnchorAssociatedMCAddress.setStatus('current')
cLMobilityExtAnchorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notconfigured", 0), ("datapathdown", 1), ("controlpathdown", 2), ("bothdown", 3), ("up", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtAnchorStatus.setStatus('current')
cLMobilityExtAnchorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtAnchorRowStatus.setStatus('current')
cLMobilityExtMOMCTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 5), )
if mibBuilder.loadTexts: cLMobilityExtMOMCTable.setStatus('current')
cLMobilityExtMOMCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOMCAddressType"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOMCAddress"))
if mibBuilder.loadTexts: cLMobilityExtMOMCEntry.setStatus('current')
cLMobilityExtMOMCAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLMobilityExtMOMCAddressType.setStatus('current')
cLMobilityExtMOMCAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLMobilityExtMOMCAddress.setStatus('current')
cLMobilityExtMOMCMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 5, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOMCMacAddress.setStatus('current')
cLMobilityExtMOMCLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notconfigured", 0), ("datapathdown", 1), ("controlpathdown", 2), ("bothdown", 3), ("up", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOMCLinkStatus.setStatus('current')
cLMobilityExtMOMCClientCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOMCClientCount.setStatus('current')
cLMobilityExtMCClientTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6), )
if mibBuilder.loadTexts: cLMobilityExtMCClientTable.setStatus('current')
cLMobilityExtMCClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientMacAddress"))
if mibBuilder.loadTexts: cLMobilityExtMCClientEntry.setStatus('current')
cLMobilityExtMCClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLMobilityExtMCClientMacAddress.setStatus('current')
cLMobilityExtMCClientAnchorMCPrivateAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAnchorMCPrivateAddressType.setStatus('current')
cLMobilityExtMCClientAnchorMCPrivateAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAnchorMCPrivateAddress.setStatus('current')
cLMobilityExtMCClientAssociatedMCAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAssociatedMCAddressType.setStatus('current')
cLMobilityExtMCClientAssociatedMCAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAssociatedMCAddress.setStatus('current')
cLMobilityExtMCClientAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAddressType.setStatus('current')
cLMobilityExtMCClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAddress.setStatus('current')
cLMobilityExtMCClientState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("init", 0), ("local", 1), ("foreign", 2), ("anchor", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientState.setStatus('current')
cLMobilityExtMCClientAssociationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAssociationTime.setStatus('deprecated')
cLMobilityExtMCClientLocalClient = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientLocalClient.setStatus('current')
cLMobilityExtMCClientAnchorMCGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAnchorMCGroupId.setStatus('current')
cLMobilityExtMCClientAssociatedMCGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAssociatedMCGroupId.setStatus('current')
cLMobilityExtMCClientAssociatedMAAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 13), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAssociatedMAAddressType.setStatus('current')
cLMobilityExtMCClientAssociatedMAAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 14), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAssociatedMAAddress.setStatus('current')
cLMobilityExtMCClientAnchorMAAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 15), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAnchorMAAddressType.setStatus('current')
cLMobilityExtMCClientAnchorMAAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 16), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientAnchorMAAddress.setStatus('current')
cLMobilityExtMCClientUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 6, 1, 17), CiscoAbsZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCClientUpTime.setStatus('current')
cLMobilityExtMOClientTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7), )
if mibBuilder.loadTexts: cLMobilityExtMOClientTable.setStatus('current')
cLMobilityExtMOClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientMacAddress"))
if mibBuilder.loadTexts: cLMobilityExtMOClientEntry.setStatus('current')
cLMobilityExtMOClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLMobilityExtMOClientMacAddress.setStatus('current')
cLMobilityExtMOClientAnchorMCPublicAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAnchorMCPublicAddressType.setStatus('current')
cLMobilityExtMOClientAnchorMCPublicAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAnchorMCPublicAddress.setStatus('current')
cLMobilityExtMOClientAnchorMCPrivateAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAnchorMCPrivateAddressType.setStatus('current')
cLMobilityExtMOClientAnchorMCPrivateAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAnchorMCPrivateAddress.setStatus('current')
cLMobilityExtMOClientAssociatedMCPublicAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAssociatedMCPublicAddressType.setStatus('current')
cLMobilityExtMOClientAssociatedMCPublicAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAssociatedMCPublicAddress.setStatus('current')
cLMobilityExtMOClientAssociatedMCPrivateAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAssociatedMCPrivateAddressType.setStatus('current')
cLMobilityExtMOClientAssociatedMCPrivateAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAssociatedMCPrivateAddress.setStatus('current')
cLMobilityExtMOClientAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAddressType.setStatus('current')
cLMobilityExtMOClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 11), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAddress.setStatus('current')
cLMobilityExtMOClientLocalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientLocalTime.setStatus('current')
cLMobilityExtMOClientAssociationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 13), DateAndTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientAssociationTime.setStatus('deprecated')
cLMobilityExtMOClientUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 7, 1, 14), CiscoAbsZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMOClientUpTime.setStatus('current')
cLMobilityExtApMgrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8), )
if mibBuilder.loadTexts: cLMobilityExtApMgrTable.setStatus('current')
cLMobilityExtApMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrName"))
if mibBuilder.loadTexts: cLMobilityExtApMgrEntry.setStatus('current')
cLMobilityExtApMgrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: cLMobilityExtApMgrName.setStatus('current')
cLMobilityExtApMgrAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtApMgrAddressType.setStatus('current')
cLMobilityExtApMgrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtApMgrAddress.setStatus('current')
cLMobilityExtApMgrNetmaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtApMgrNetmaskType.setStatus('current')
cLMobilityExtApMgrNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtApMgrNetmask.setStatus('current')
cLMobilityExtApMgrMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtApMgrMacAddress.setStatus('current')
cLMobilityExtApMgrVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtApMgrVlanId.setStatus('current')
cLMobilityExtApMgrInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("management", 1), ("ap", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtApMgrInterfaceType.setStatus('current')
cLMobilityExtApMgrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 8, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtApMgrRowStatus.setStatus('current')
cLMobilityExtForeignWlcMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 9), )
if mibBuilder.loadTexts: cLMobilityExtForeignWlcMapTable.setStatus('current')
cLMobilityExtForeignWlcMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 9, 1), ).setIndexNames((0, "CISCO-LWAPP-WLAN-MIB", "cLWlanIndex"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtForeignWlcAddressType"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtForeignWlcAddress"))
if mibBuilder.loadTexts: cLMobilityExtForeignWlcMapEntry.setStatus('current')
cLMobilityExtForeignWlcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 9, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLMobilityExtForeignWlcAddressType.setStatus('current')
cLMobilityExtForeignWlcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 9, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLMobilityExtForeignWlcAddress.setStatus('current')
cLMobilityExtForeignWlcMapIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 9, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtForeignWlcMapIf.setStatus('current')
cLMobilityExtForeignWlcMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityExtForeignWlcMapRowStatus.setStatus('current')
cLMobilityExtGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 10), )
if mibBuilder.loadTexts: cLMobilityExtGroupTable.setStatus('current')
cLMobilityExtGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 10, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupName"))
if mibBuilder.loadTexts: cLMobilityExtGroupEntry.setStatus('current')
cLMobilityExtGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 10, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: cLMobilityExtGroupName.setStatus('current')
cLMobilityExtGroupMulticastAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 10, 1, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtGroupMulticastAddressType.setStatus('current')
cLMobilityExtGroupMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 10, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtGroupMulticastAddress.setStatus('current')
cLMobilityExtMAPeerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 11), )
if mibBuilder.loadTexts: cLMobilityExtMAPeerTable.setStatus('current')
cLMobilityExtMAPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 11, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAPeerPrivateAddressType"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAPeerPrivateAddress"))
if mibBuilder.loadTexts: cLMobilityExtMAPeerEntry.setStatus('current')
cLMobilityExtMAPeerPrivateAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 11, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLMobilityExtMAPeerPrivateAddressType.setStatus('current')
cLMobilityExtMAPeerPrivateAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 11, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLMobilityExtMAPeerPrivateAddress.setStatus('current')
cLMobilityExtMAPeerPublicAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 11, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMAPeerPublicAddressType.setStatus('current')
cLMobilityExtMAPeerPublicAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 11, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMAPeerPublicAddress.setStatus('current')
cLMobilityExtMAPeerLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notconfigured", 0), ("datapathdown", 1), ("controlpathdown", 2), ("bothdown", 3), ("up", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMAPeerLinkStatus.setStatus('current')
cLMobilityExtMCMAStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 12), )
if mibBuilder.loadTexts: cLMobilityExtMCMAStatisticsTable.setStatus('current')
cLMobilityExtMCMAStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 12, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMAPrivateAddressType"), (0, "CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMAPrivateAddress"))
if mibBuilder.loadTexts: cLMobilityExtMCMAStatisticsEntry.setStatus('current')
cLMobilityExtMCMAPrivateAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 12, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLMobilityExtMCMAPrivateAddressType.setStatus('current')
cLMobilityExtMCMAPrivateAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 12, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLMobilityExtMCMAPrivateAddress.setStatus('current')
cLMobilityExtMCMAClientCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 2, 12, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCMAClientCount.setStatus('current')
cLMobilityExtMAMCPublicAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMAMCPublicAddressType.setStatus('current')
cLMobilityExtMAMCPublicAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMAMCPublicAddress.setStatus('current')
cLMobilityExtMAMCPrivateAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMAMCPrivateAddressType.setStatus('current')
cLMobilityExtMAMCPrivateAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityExtMAMCPrivateAddress.setStatus('current')
cLMobilityExtMAToMCLinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notconfigured", 0), ("datapathdown", 1), ("controlpathdown", 2), ("bothdown", 3), ("up", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMAToMCLinkStatus.setStatus('current')
cLMobilityExtMASpgPeerCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMASpgPeerCount.setStatus('current')
cLMobilityExtMASpgName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMASpgName.setStatus('current')
cLMobilityExtMAOwnMulticastAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMAOwnMulticastAddressType.setStatus('current')
cLMobilityExtMAOwnMulticastAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMAOwnMulticastAddress.setStatus('current')
cLMobilityExtMAKeepAliveCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 20)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMAKeepAliveCount.setStatus('current')
cLMobilityExtMAKeepAliveInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMAKeepAliveInterval.setStatus('current')
cLMobilityExtMADscpValue = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 3, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMADscpValue.setStatus('current')
cLMobilityExtMCReceivedTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCReceivedTotal.setStatus('current')
cLMobilityExtMCReceivedDrops = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCReceivedDrops.setStatus('current')
cLMobilityExtMCProtocolReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCProtocolReceiveErrors.setStatus('current')
cLMobilityExtMCProtocolTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCProtocolTransmitErrors.setStatus('current')
cLMobilityExtMCStateErrors = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCStateErrors.setStatus('current')
cLMobilityExtMCProtocolRetransmitted = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCProtocolRetransmitted.setStatus('current')
cLMobilityExtMCHandoffRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCHandoffRequestsReceived.setStatus('current')
cLMobilityExtMCHandoffCmplReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCHandoffCmplReceived.setStatus('current')
cLMobilityExtMCHandoffClientDeleteReceived = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCHandoffClientDeleteReceived.setStatus('current')
cLMobilityExtMCHandoffRequestsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCHandoffRequestsTransmitted.setStatus('current')
cLMobilityExtMCHandoffCmplTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCHandoffCmplTransmitted.setStatus('current')
cLMobilityExtMCHandoffClientDeleteTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCHandoffClientDeleteTransmitted.setStatus('current')
cLMobilityExtMCTotalClientCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCTotalClientCount.setStatus('current')
cLMobilityExtMCWgbCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 1, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityExtMCWgbCount.setStatus('current')
cLMobilityExtNotifyObjectSourceIPAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 3, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLMobilityExtNotifyObjectSourceIPAddressType.setStatus('current')
cLMobilityExtNotifyObjectSourceIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 3, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLMobilityExtNotifyObjectSourceIPAddress.setStatus('current')
cLMobilityExtNotifyObjectSourceType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("mobilityAgent", 1), ("mobilityController", 2), ("mobilityOracle", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLMobilityExtNotifyObjectSourceType.setStatus('current')
cLMobilityExtNotifyObjectDestinationType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 999999, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("mobilityAgent", 1), ("mobilityController", 2), ("mobilityOracle", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLMobilityExtNotifyObjectDestinationType.setStatus('current')
ciscoLwappMobilityControlPathDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 999999, 0, 1)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectDestinationType"))
if mibBuilder.loadTexts: ciscoLwappMobilityControlPathDown.setStatus('current')
ciscoLwappMobilityControlPathUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 999999, 0, 2)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectDestinationType"))
if mibBuilder.loadTexts: ciscoLwappMobilityControlPathUp.setStatus('current')
ciscoLwappMobilityDataPathDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 999999, 0, 3)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectDestinationType"))
if mibBuilder.loadTexts: ciscoLwappMobilityDataPathDown.setStatus('current')
ciscoLwappMobilityDataPathUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 999999, 0, 4)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectDestinationType"))
if mibBuilder.loadTexts: ciscoLwappMobilityDataPathUp.setStatus('current')
ciscoLwappMobilityExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 2, 1))
ciscoLwappMobilityExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 999999, 2, 2))
ciscoLwappMobilityExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 999999, 2, 1, 1)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtConfigGroup"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "ciscoLwappMobilityExtNotifyObjectsGroup"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "ciscoLwappMobilityExtNotifsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappMobilityExtMIBCompliance = ciscoLwappMobilityExtMIBCompliance.setStatus('deprecated')
ciscoLwappMobilityExtMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 999999, 2, 1, 2)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtConfigGroupRev1"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "ciscoLwappMobilityExtNotifyObjectsGroup"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "ciscoLwappMobilityExtNotifsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappMobilityExtMIBComplianceRev1 = ciscoLwappMobilityExtMIBComplianceRev1.setStatus('current')
cLMobilityExtConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 999999, 2, 2, 1)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMOEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMOAdminEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCAdminEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMulticastMode"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCKeepAliveCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCKeepAliveInterval"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCDscpValue"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMOPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMOPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCApCountLicensesInUse"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCOwnGroupMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCOwnGroupMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMobilityGroupName"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrNetmaskType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrNetmask"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrMacAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrVlanId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrName"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrInterfaceType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNewArchitectureEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNewArchitectureAdminEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMCPrivateAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMCPrivateAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMCGroupId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMCGroupId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMAAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMAAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMAAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMAAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgGroupId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgBridgeDomainId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMulticastMode"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberGroupName"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberMacAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberHashKey"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtAnchorStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtAnchorRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOMCMacAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOMCLinkStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOMCClientCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMCAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMCAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientState"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociationTime"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientLocalClient"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAnchorMCPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAnchorMCPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAnchorMCPrivateAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAnchorMCPrivateAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAssociatedMCPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAssociatedMCPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAssociatedMCPrivateAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAssociatedMCPrivateAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientLocalTime"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAssociationTime"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrNetmaskType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrNetmask"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrMacAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrVlanId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrInterfaceType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtForeignWlcMapIf"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtForeignWlcMapRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAPeerPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAPeerPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAPeerLinkStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMAClientCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAMCPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAMCPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAMCPrivateAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAMCPrivateAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAToMCLinkStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMASpgPeerCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMASpgName"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAOwnMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAOwnMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAKeepAliveCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAKeepAliveInterval"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMADscpValue"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCReceivedTotal"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCReceivedDrops"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCProtocolReceiveErrors"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCProtocolTransmitErrors"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCStateErrors"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCProtocolRetransmitted"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffRequestsReceived"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffCmplReceived"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffClientDeleteReceived"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffRequestsTransmitted"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffCmplTransmitted"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffClientDeleteTransmitted"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCTotalClientCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCWgbCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLMobilityExtConfigGroup = cLMobilityExtConfigGroup.setStatus('deprecated')
ciscoLwappMobilityExtNotifyObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 999999, 2, 2, 2)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceIPAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectSourceType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNotifyObjectDestinationType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappMobilityExtNotifyObjectsGroup = ciscoLwappMobilityExtNotifyObjectsGroup.setStatus('current')
ciscoLwappMobilityExtNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 999999, 2, 2, 3)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "ciscoLwappMobilityControlPathDown"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "ciscoLwappMobilityControlPathUp"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "ciscoLwappMobilityDataPathDown"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "ciscoLwappMobilityDataPathUp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappMobilityExtNotifsGroup = ciscoLwappMobilityExtNotifsGroup.setStatus('current')
cLMobilityExtConfigGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 999999, 2, 2, 4)).setObjects(("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMOEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMOAdminEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCAdminEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMulticastMode"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCKeepAliveCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCKeepAliveInterval"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCDscpValue"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMOPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMOPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCApCountLicensesInUse"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCOwnGroupMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCOwnGroupMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMobilityGroupName"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrNetmaskType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrNetmask"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrMacAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrVlanId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrName"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMgrInterfaceType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNewArchitectureEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtNewArchitectureAdminEnableStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMCPrivateAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMCPrivateAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMCGroupId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMCGroupId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMAAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMAAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMAAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAnchorMAAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgGroupId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgBridgeDomainId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMulticastMode"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtSpgMemberRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberGroupName"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberMacAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberHashKey"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMemberRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtAnchorStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtAnchorRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOMCMacAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOMCLinkStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOMCClientCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMCAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAssociatedMCAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientState"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientLocalClient"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAnchorMCPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAnchorMCPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAnchorMCPrivateAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAnchorMCPrivateAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAssociatedMCPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAssociatedMCPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAssociatedMCPrivateAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAssociatedMCPrivateAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientLocalTime"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrNetmaskType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrNetmask"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrMacAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrVlanId"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrInterfaceType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtApMgrRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtForeignWlcMapIf"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtForeignWlcMapRowStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtGroupMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAPeerPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAPeerPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAPeerLinkStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCMAClientCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAMCPublicAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAMCPublicAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAMCPrivateAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAMCPrivateAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAToMCLinkStatus"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMASpgPeerCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMASpgName"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAOwnMulticastAddressType"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAOwnMulticastAddress"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAKeepAliveCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMAKeepAliveInterval"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMADscpValue"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCReceivedTotal"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCReceivedDrops"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCProtocolReceiveErrors"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCProtocolTransmitErrors"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCStateErrors"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCProtocolRetransmitted"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffRequestsReceived"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffCmplReceived"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffClientDeleteReceived"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffRequestsTransmitted"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffCmplTransmitted"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCHandoffClientDeleteTransmitted"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCTotalClientCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCWgbCount"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMOClientUpTime"), ("CISCO-LWAPP-MOBILITY-EXT-MIB", "cLMobilityExtMCClientUpTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLMobilityExtConfigGroupRev1 = cLMobilityExtConfigGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-MOBILITY-EXT-MIB", cLMobilityExtMgrInterfaceType=cLMobilityExtMgrInterfaceType, cLMobilityExtGroupEntry=cLMobilityExtGroupEntry, cLMobilityExtNotifyObjectSourceType=cLMobilityExtNotifyObjectSourceType, cLMobilityExtMgrNetmask=cLMobilityExtMgrNetmask, cLMobilityExtMAPeerPublicAddressType=cLMobilityExtMAPeerPublicAddressType, cLMobilityExtSpgMemberRowStatus=cLMobilityExtSpgMemberRowStatus, cLMobilityExtForeignWlcMapIf=cLMobilityExtForeignWlcMapIf, cLMobilityExtGroupMemberPrivateAddressType=cLMobilityExtGroupMemberPrivateAddressType, cLMobilityExtGroupMemberEntry=cLMobilityExtGroupMemberEntry, cLMobilityExtMCEnableStatus=cLMobilityExtMCEnableStatus, cLMobilityExtMOClientAssociatedMCPublicAddressType=cLMobilityExtMOClientAssociatedMCPublicAddressType, cLMobilityExtApMgrNetmaskType=cLMobilityExtApMgrNetmaskType, cLMobilityExtMAKeepAliveCount=cLMobilityExtMAKeepAliveCount, cLMobilityExtSpgGroupName=cLMobilityExtSpgGroupName, ciscoLwappMobilityDataPathUp=ciscoLwappMobilityDataPathUp, ciscoLwappMobilityExtMIBConform=ciscoLwappMobilityExtMIBConform, cLMobilityExtMCClientAddressType=cLMobilityExtMCClientAddressType, cLMobilityExtMCClientAnchorMCPrivateAddress=cLMobilityExtMCClientAnchorMCPrivateAddress, ciscoLwappMobilityExtMAGlobalObjects=ciscoLwappMobilityExtMAGlobalObjects, cLMobilityExtMCClientMacAddress=cLMobilityExtMCClientMacAddress, ciscoLwappMobilityExtTableObjects=ciscoLwappMobilityExtTableObjects, cLMobilityExtMOClientAssociatedMCPrivateAddressType=cLMobilityExtMOClientAssociatedMCPrivateAddressType, cLMobilityExtMAPeerPrivateAddressType=cLMobilityExtMAPeerPrivateAddressType, ciscoLwappMobilityExtMIBNotifs=ciscoLwappMobilityExtMIBNotifs, cLMobilityExtMCHandoffCmplReceived=cLMobilityExtMCHandoffCmplReceived, cLMobilityExtMCMulticastMode=cLMobilityExtMCMulticastMode, ciscoLwappMobilityExtNotifObjects=ciscoLwappMobilityExtNotifObjects, cLMobilityExtGroupMemberMulticastAddress=cLMobilityExtGroupMemberMulticastAddress, cLMobilityExtApMgrName=cLMobilityExtApMgrName, cLMobilityExtSpgMulticastAddressType=cLMobilityExtSpgMulticastAddressType, cLMobilityExtMASpgName=cLMobilityExtMASpgName, ciscoLwappMobilityExtMIBCompliance=ciscoLwappMobilityExtMIBCompliance, CiscoAbsZeroBasedCounter64=CiscoAbsZeroBasedCounter64, cLMobilityExtAnchorRowStatus=cLMobilityExtAnchorRowStatus, cLMobilityExtMCClientAnchorMCPrivateAddressType=cLMobilityExtMCClientAnchorMCPrivateAddressType, cLMobilityExtMCHandoffClientDeleteReceived=cLMobilityExtMCHandoffClientDeleteReceived, cLMobilityExtGroupMemberGroupName=cLMobilityExtGroupMemberGroupName, cLMobilityExtMCOwnGroupMulticastAddressType=cLMobilityExtMCOwnGroupMulticastAddressType, ciscoLwappMobilityControlPathUp=ciscoLwappMobilityControlPathUp, cLMobilityExtMOMCClientCount=cLMobilityExtMOMCClientCount, cLMobilityExtMOClientAddressType=cLMobilityExtMOClientAddressType, cLMobilityExtMOClientEntry=cLMobilityExtMOClientEntry, cLMobilityExtNotifyObjectSourceIPAddressType=cLMobilityExtNotifyObjectSourceIPAddressType, ciscoLwappMobilityDataPathDown=ciscoLwappMobilityDataPathDown, cLMobilityExtMCMAClientCount=cLMobilityExtMCMAClientCount, cLMobilityExtMOClientAnchorMCPrivateAddress=cLMobilityExtMOClientAnchorMCPrivateAddress, cLMobilityExtSpgGroupId=cLMobilityExtSpgGroupId, cLMobilityExtGroupMemberPublicAddressType=cLMobilityExtGroupMemberPublicAddressType, cLMobilityExtMCClientUpTime=cLMobilityExtMCClientUpTime, cLMobilityExtMCClientAddress=cLMobilityExtMCClientAddress, cLMobilityExtForeignWlcMapRowStatus=cLMobilityExtForeignWlcMapRowStatus, cLMobilityExtMAPeerEntry=cLMobilityExtMAPeerEntry, cLMobilityExtMOClientUpTime=cLMobilityExtMOClientUpTime, cLMobilityExtMCProtocolReceiveErrors=cLMobilityExtMCProtocolReceiveErrors, cLMobilityExtGroupMemberHashKey=cLMobilityExtGroupMemberHashKey, cLMobilityExtNewArchitectureEnableStatus=cLMobilityExtNewArchitectureEnableStatus, cLMobilityExtMCClientEntry=cLMobilityExtMCClientEntry, cLMobilityExtForeignWlcAddressType=cLMobilityExtForeignWlcAddressType, cLMobilityExtAnchorStatus=cLMobilityExtAnchorStatus, cLMobilityExtSpgRowStatus=cLMobilityExtSpgRowStatus, cLMobilityExtMOClientAssociationTime=cLMobilityExtMOClientAssociationTime, cLMobilityExtMCReceivedDrops=cLMobilityExtMCReceivedDrops, cLMobilityExtSpgMemberPublicAddressType=cLMobilityExtSpgMemberPublicAddressType, cLMobilityExtMOClientTable=cLMobilityExtMOClientTable, cLMobilityExtMCMOPublicAddressType=cLMobilityExtMCMOPublicAddressType, cLMobilityExtSpgMemberPublicAddress=cLMobilityExtSpgMemberPublicAddress, ciscoLwappMobilityExtMCMAGlobalObjects=ciscoLwappMobilityExtMCMAGlobalObjects, cLMobilityExtApMgrTable=cLMobilityExtApMgrTable, cLMobilityExtSpgMemberStatus=cLMobilityExtSpgMemberStatus, cLMobilityExtMCClientAssociatedMAAddressType=cLMobilityExtMCClientAssociatedMAAddressType, cLMobilityExtMAKeepAliveInterval=cLMobilityExtMAKeepAliveInterval, cLMobilityExtMASpgPeerCount=cLMobilityExtMASpgPeerCount, cLMobilityExtMAPeerTable=cLMobilityExtMAPeerTable, cLMobilityExtMCMAPrivateAddress=cLMobilityExtMCMAPrivateAddress, cLMobilityExtApMgrNetmask=cLMobilityExtApMgrNetmask, cLMobilityExtSpgMemberPrivateAddressType=cLMobilityExtSpgMemberPrivateAddressType, cLMobilityExtAnchorEntry=cLMobilityExtAnchorEntry, cLMobilityExtMAOwnMulticastAddressType=cLMobilityExtMAOwnMulticastAddressType, cLMobilityExtMCMOEnableStatus=cLMobilityExtMCMOEnableStatus, cLMobilityExtGroupName=cLMobilityExtGroupName, cLMobilityExtMAPeerPublicAddress=cLMobilityExtMAPeerPublicAddress, cLMobilityExtMCClientAssociationTime=cLMobilityExtMCClientAssociationTime, cLMobilityExtSpgMemberTable=cLMobilityExtSpgMemberTable, cLMobilityExtGroupMemberMacAddress=cLMobilityExtGroupMemberMacAddress, cLMobilityExtGroupMulticastAddress=cLMobilityExtGroupMulticastAddress, cLMobilityExtMCMOPublicAddress=cLMobilityExtMCMOPublicAddress, cLMobilityExtMCHandoffClientDeleteTransmitted=cLMobilityExtMCHandoffClientDeleteTransmitted, cLMobilityExtMOClientMacAddress=cLMobilityExtMOClientMacAddress, ciscoLwappMobilityExtMIBGroups=ciscoLwappMobilityExtMIBGroups, ciscoLwappMobilityExtMIBObjects=ciscoLwappMobilityExtMIBObjects, cLMobilityExtMCHandoffCmplTransmitted=cLMobilityExtMCHandoffCmplTransmitted, PYSNMP_MODULE_ID=ciscoLwappMobilityExtMIB, cLMobilityExtMCHandoffRequestsTransmitted=cLMobilityExtMCHandoffRequestsTransmitted, cLMobilityExtMCMAStatisticsTable=cLMobilityExtMCMAStatisticsTable, cLMobilityExtGroupMemberStatus=cLMobilityExtGroupMemberStatus, cLMobilityExtSpgMulticastMode=cLMobilityExtSpgMulticastMode, cLMobilityExtMCDscpValue=cLMobilityExtMCDscpValue, cLMobilityExtAnchorTable=cLMobilityExtAnchorTable, cLMobilityExtSpgMemberPrivateAddress=cLMobilityExtSpgMemberPrivateAddress, cLMobilityExtMCClientAnchorMAAddress=cLMobilityExtMCClientAnchorMAAddress, cLMobilityExtMCProtocolTransmitErrors=cLMobilityExtMCProtocolTransmitErrors, cLMobilityExtMOMCTable=cLMobilityExtMOMCTable, cLMobilityExtForeignWlcAddress=cLMobilityExtForeignWlcAddress, cLMobilityExtSpgEntry=cLMobilityExtSpgEntry, cLMobilityExtMCTotalClientCount=cLMobilityExtMCTotalClientCount, cLMobilityExtMCWgbCount=cLMobilityExtMCWgbCount, cLMobilityExtApMgrRowStatus=cLMobilityExtApMgrRowStatus, cLMobilityExtAnchorAssociatedMCAddressType=cLMobilityExtAnchorAssociatedMCAddressType, cLMobilityExtMCClientAssociatedMAAddress=cLMobilityExtMCClientAssociatedMAAddress, cLMobilityExtGroupMemberRowStatus=cLMobilityExtGroupMemberRowStatus, cLMobilityExtGroupMemberTable=cLMobilityExtGroupMemberTable, cLMobilityExtMCClientTable=cLMobilityExtMCClientTable, cLMobilityExtMgrVlanId=cLMobilityExtMgrVlanId, cLMobilityExtMCReceivedTotal=cLMobilityExtMCReceivedTotal, cLMobilityExtApMgrVlanId=cLMobilityExtApMgrVlanId, cLMobilityExtMCMOAdminEnableStatus=cLMobilityExtMCMOAdminEnableStatus, cLMobilityExtApMgrAddress=cLMobilityExtApMgrAddress, cLMobilityExtSpgMemberEntry=cLMobilityExtSpgMemberEntry, ciscoLwappMobilityExtMIB=ciscoLwappMobilityExtMIB, cLMobilityExtMCOwnGroupMulticastAddress=cLMobilityExtMCOwnGroupMulticastAddress, cLMobilityExtMCClientState=cLMobilityExtMCClientState, cLMobilityExtGroupMemberPublicAddress=cLMobilityExtGroupMemberPublicAddress, cLMobilityExtMAMCPublicAddressType=cLMobilityExtMAMCPublicAddressType, cLMobilityExtMCClientAssociatedMCAddress=cLMobilityExtMCClientAssociatedMCAddress, cLMobilityExtMOMCMacAddress=cLMobilityExtMOMCMacAddress, cLMobilityExtMOClientAnchorMCPublicAddress=cLMobilityExtMOClientAnchorMCPublicAddress, cLMobilityExtMADscpValue=cLMobilityExtMADscpValue, cLMobilityExtMOMCAddressType=cLMobilityExtMOMCAddressType, cLMobilityExtMAMCPrivateAddressType=cLMobilityExtMAMCPrivateAddressType, cLMobilityExtMCStateErrors=cLMobilityExtMCStateErrors, cLMobilityExtNotifyObjectDestinationType=cLMobilityExtNotifyObjectDestinationType, cLMobilityExtConfigGroup=cLMobilityExtConfigGroup, cLMobilityExtMCClientLocalClient=cLMobilityExtMCClientLocalClient, cLMobilityExtMOClientLocalTime=cLMobilityExtMOClientLocalTime, cLMobilityExtMgrNetmaskType=cLMobilityExtMgrNetmaskType, cLMobilityExtMAPeerPrivateAddress=cLMobilityExtMAPeerPrivateAddress, cLMobilityExtMOClientAssociatedMCPublicAddress=cLMobilityExtMOClientAssociatedMCPublicAddress, cLMobilityExtMCClientAssociatedMCAddressType=cLMobilityExtMCClientAssociatedMCAddressType, cLMobilityExtMCAdminEnableStatus=cLMobilityExtMCAdminEnableStatus, ciscoLwappMobilityExtNotifyObjectsGroup=ciscoLwappMobilityExtNotifyObjectsGroup, ciscoLwappMobilityExtNotifsGroup=ciscoLwappMobilityExtNotifsGroup, cLMobilityExtMCClientAnchorMAAddressType=cLMobilityExtMCClientAnchorMAAddressType, cLMobilityExtMOMCAddress=cLMobilityExtMOMCAddress, ciscoLwappMobilityExtMCGlobalObjects=ciscoLwappMobilityExtMCGlobalObjects, cLMobilityExtMCKeepAliveInterval=cLMobilityExtMCKeepAliveInterval, cLMobilityExtForeignWlcMapTable=cLMobilityExtForeignWlcMapTable, cLMobilityExtSpgMulticastAddress=cLMobilityExtSpgMulticastAddress, cLMobilityExtMCApCountLicensesInUse=cLMobilityExtMCApCountLicensesInUse, cLMobilityExtMOClientAssociatedMCPrivateAddress=cLMobilityExtMOClientAssociatedMCPrivateAddress, cLMobilityExtMgrAddressType=cLMobilityExtMgrAddressType, cLMobilityExtGroupTable=cLMobilityExtGroupTable, ciscoLwappMobilityExtMCStats=ciscoLwappMobilityExtMCStats, ciscoLwappMobilityExtMIBComplianceRev1=ciscoLwappMobilityExtMIBComplianceRev1, cLMobilityExtSpgTable=cLMobilityExtSpgTable, cLMobilityExtMOClientAnchorMCPublicAddressType=cLMobilityExtMOClientAnchorMCPublicAddressType, cLMobilityExtConfigGroupRev1=cLMobilityExtConfigGroupRev1, cLMobilityExtAnchorAssociatedMCAddress=cLMobilityExtAnchorAssociatedMCAddress, cLMobilityExtGroupMemberMulticastAddressType=cLMobilityExtGroupMemberMulticastAddressType, cLMobilityExtMOClientAnchorMCPrivateAddressType=cLMobilityExtMOClientAnchorMCPrivateAddressType, cLMobilityExtMAMCPrivateAddress=cLMobilityExtMAMCPrivateAddress, cLMobilityExtGroupMulticastAddressType=cLMobilityExtGroupMulticastAddressType, ciscoLwappMobilityExtMIBCompliances=ciscoLwappMobilityExtMIBCompliances, cLMobilityExtMAOwnMulticastAddress=cLMobilityExtMAOwnMulticastAddress, cLMobilityExtMCClientAssociatedMCGroupId=cLMobilityExtMCClientAssociatedMCGroupId, cLMobilityExtNewArchitectureAdminEnableStatus=cLMobilityExtNewArchitectureAdminEnableStatus, cLMobilityExtMCProtocolRetransmitted=cLMobilityExtMCProtocolRetransmitted, cLMobilityExtMOClientAddress=cLMobilityExtMOClientAddress, ciscoLwappMobilityExtGlobalObjects=ciscoLwappMobilityExtGlobalObjects, cLMobilityExtMOMCEntry=cLMobilityExtMOMCEntry, cLMobilityExtApMgrInterfaceType=cLMobilityExtApMgrInterfaceType, cLMobilityExtMCClientAnchorMCGroupId=cLMobilityExtMCClientAnchorMCGroupId, cLMobilityExtMCMAStatisticsEntry=cLMobilityExtMCMAStatisticsEntry, cLMobilityExtMAToMCLinkStatus=cLMobilityExtMAToMCLinkStatus, cLMobilityExtMCHandoffRequestsReceived=cLMobilityExtMCHandoffRequestsReceived, cLMobilityExtMCMobilityGroupName=cLMobilityExtMCMobilityGroupName, cLMobilityExtSpgBridgeDomainId=cLMobilityExtSpgBridgeDomainId, cLMobilityExtNotifyObjectSourceIPAddress=cLMobilityExtNotifyObjectSourceIPAddress, ciscoLwappMobilityControlPathDown=ciscoLwappMobilityControlPathDown, cLMobilityExtMCKeepAliveCount=cLMobilityExtMCKeepAliveCount, cLMobilityExtMCMAPrivateAddressType=cLMobilityExtMCMAPrivateAddressType, cLMobilityExtMAPeerLinkStatus=cLMobilityExtMAPeerLinkStatus, cLMobilityExtMgrMacAddress=cLMobilityExtMgrMacAddress, cLMobilityExtApMgrEntry=cLMobilityExtApMgrEntry, cLMobilityExtSpgMemberCount=cLMobilityExtSpgMemberCount, cLMobilityExtForeignWlcMapEntry=cLMobilityExtForeignWlcMapEntry, cLMobilityExtMgrName=cLMobilityExtMgrName, cLMobilityExtMAMCPublicAddress=cLMobilityExtMAMCPublicAddress, cLMobilityExtGroupMemberPrivateAddress=cLMobilityExtGroupMemberPrivateAddress, cLMobilityExtApMgrMacAddress=cLMobilityExtApMgrMacAddress, cLMobilityExtMgrAddress=cLMobilityExtMgrAddress, cLMobilityExtMOMCLinkStatus=cLMobilityExtMOMCLinkStatus, cLMobilityExtApMgrAddressType=cLMobilityExtApMgrAddressType)
