#
# PySNMP MIB module VLAN-COUNTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VLAN-COUNTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:27:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Gauge32, IpAddress, Bits, ObjectIdentity, iso, Unsigned32, ModuleIdentity, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "IpAddress", "Bits", "ObjectIdentity", "iso", "Unsigned32", "ModuleIdentity", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "TimeTicks")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
swVLANCounterMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 65))
if mibBuilder.loadTexts: swVLANCounterMIB.setLastUpdated('200810280000Z')
if mibBuilder.loadTexts: swVLANCounterMIB.setOrganization('D-Link Corp.')
class PortList(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

swVLANCounterCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 65, 1))
swVLANCounterInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 65, 2))
swVLANCounterMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 65, 3))
swVLANCounterTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1), )
if mibBuilder.loadTexts: swVLANCounterTable.setStatus('current')
swVLANCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1), ).setIndexNames((0, "VLAN-COUNTER-MIB", "swVLANCounterVID"), (0, "VLAN-COUNTER-MIB", "swVLANCounterPort"), (0, "VLAN-COUNTER-MIB", "swVLANCounterPktType"), (0, "VLAN-COUNTER-MIB", "swVLANCounterLevel"))
if mibBuilder.loadTexts: swVLANCounterEntry.setStatus('current')
swVLANCounterVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterVID.setStatus('current')
swVLANCounterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterPort.setStatus('current')
swVLANCounterPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("broadcast", 1), ("multicast", 2), ("unicast", 3), ("all_frame", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterPktType.setStatus('current')
swVLANCounterLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packet", 1), ("byte", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterLevel.setStatus('current')
swVLANCounterTotalStats = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterTotalStats.setStatus('current')
swVLANCounterRateStats = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterRateStats.setStatus('current')
swVLANCounterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swVLANCounterRowStatus.setStatus('current')
swVLANCounterClearTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 2), )
if mibBuilder.loadTexts: swVLANCounterClearTable.setStatus('current')
swVLANCounterClearEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 2, 1), ).setIndexNames((0, "VLAN-COUNTER-MIB", "swVLANCounterVID"), (0, "VLAN-COUNTER-MIB", "swVLANCounterPort"))
if mibBuilder.loadTexts: swVLANCounterClearEntry.setStatus('current')
swVLANCounterClearAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swVLANCounterClearAction.setStatus('current')
mibBuilder.exportSymbols("VLAN-COUNTER-MIB", swVLANCounterVID=swVLANCounterVID, swVLANCounterPktType=swVLANCounterPktType, swVLANCounterRowStatus=swVLANCounterRowStatus, swVLANCounterInfo=swVLANCounterInfo, swVLANCounterEntry=swVLANCounterEntry, swVLANCounterCtrl=swVLANCounterCtrl, swVLANCounterClearEntry=swVLANCounterClearEntry, PYSNMP_MODULE_ID=swVLANCounterMIB, PortList=PortList, swVLANCounterLevel=swVLANCounterLevel, swVLANCounterClearTable=swVLANCounterClearTable, swVLANCounterTable=swVLANCounterTable, swVLANCounterMIB=swVLANCounterMIB, swVLANCounterTotalStats=swVLANCounterTotalStats, swVLANCounterPort=swVLANCounterPort, swVLANCounterMgmt=swVLANCounterMgmt, swVLANCounterRateStats=swVLANCounterRateStats, swVLANCounterClearAction=swVLANCounterClearAction)
