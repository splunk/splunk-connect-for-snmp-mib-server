#
# PySNMP MIB module REDSTONE-DS1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDSTONE-DS1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:47:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
rsMgmt, = mibBuilder.importSymbols("REDSTONE-SMI", "rsMgmt")
RsTimeSlotMap, = mibBuilder.importSymbols("REDSTONE-TC", "RsTimeSlotMap")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, ModuleIdentity, Integer32, Bits, Counter32, MibIdentifier, NotificationType, TimeTicks, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "ModuleIdentity", "Integer32", "Bits", "Counter32", "MibIdentifier", "NotificationType", "TimeTicks", "IpAddress", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rsDs1MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2773, 2, 5))
rsDs1MIB.setRevisions(('1999-06-17 00:00',))
if mibBuilder.loadTexts: rsDs1MIB.setLastUpdated('9906170000Z')
if mibBuilder.loadTexts: rsDs1MIB.setOrganization('Redstone Communications, Inc.')
rsDs1Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1))
rsDsx1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1), )
if mibBuilder.loadTexts: rsDsx1ConfigTable.setStatus('current')
rsDsx1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rsDsx1ConfigEntry.setStatus('current')
rsDsx1TimeSlotMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1, 1, 1), RsTimeSlotMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsDsx1TimeSlotMap.setStatus('current')
rsDsx1Ds1ChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsDsx1Ds1ChannelNumber.setStatus('current')
rsDsx1Capabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsDsx1Capabilities.setStatus('current')
rsDsx1Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2), ("j1", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsDsx1Mode.setStatus('current')
rsDsx1LineBuildOutCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsDsx1LineBuildOutCapabilities.setStatus('current')
rsDsx1LineBuildOutType = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("shortHaul", 1), ("longHaul", 2), ("notSupported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsDsx1LineBuildOutType.setStatus('current')
rsDsx1LineAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("db0", 1), ("dbMinus7Point5", 2), ("dbMinus15", 3), ("dbMinus22Point5", 4), ("notSupported", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsDsx1LineAttenuation.setStatus('current')
rsDsx1LineLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 5, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setUnits('meters').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsDsx1LineLength.setStatus('current')
rsDs1Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 5, 4))
rsDs1Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 5, 4, 1))
rsDs1Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 5, 4, 2))
rsDs1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2773, 2, 5, 4, 1, 1)).setObjects(("REDSTONE-DS1-MIB", "rsDs1Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsDs1Compliance = rsDs1Compliance.setStatus('current')
rsDs1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 5, 4, 2, 1)).setObjects(("REDSTONE-DS1-MIB", "rsDsx1TimeSlotMap"), ("REDSTONE-DS1-MIB", "rsDsx1Ds1ChannelNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsDs1Group = rsDs1Group.setStatus('current')
mibBuilder.exportSymbols("REDSTONE-DS1-MIB", rsDsx1ConfigEntry=rsDsx1ConfigEntry, rsDsx1LineBuildOutCapabilities=rsDsx1LineBuildOutCapabilities, rsDs1Objects=rsDs1Objects, rsDs1Group=rsDs1Group, rsDs1Conformance=rsDs1Conformance, PYSNMP_MODULE_ID=rsDs1MIB, rsDs1Compliance=rsDs1Compliance, rsDs1Groups=rsDs1Groups, rsDsx1Ds1ChannelNumber=rsDsx1Ds1ChannelNumber, rsDsx1Mode=rsDsx1Mode, rsDs1Compliances=rsDs1Compliances, rsDsx1ConfigTable=rsDsx1ConfigTable, rsDsx1LineBuildOutType=rsDsx1LineBuildOutType, rsDsx1LineAttenuation=rsDsx1LineAttenuation, rsDsx1LineLength=rsDsx1LineLength, rsDsx1Capabilities=rsDsx1Capabilities, rsDs1MIB=rsDs1MIB, rsDsx1TimeSlotMap=rsDsx1TimeSlotMap)
