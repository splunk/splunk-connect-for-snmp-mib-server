#
# PySNMP MIB module NMS-EAPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-EAPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:11:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
nmslocal, = mibBuilder.importSymbols("NMS-SMI", "nmslocal")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, TimeTicks, ObjectIdentity, NotificationType, Bits, iso, MibIdentifier, ModuleIdentity, Counter32, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "TimeTicks", "ObjectIdentity", "NotificationType", "Bits", "iso", "MibIdentifier", "ModuleIdentity", "Counter32", "IpAddress", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nmsEAPS = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230))
nmsEAPSRings = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRings.setStatus('mandatory')
nmsEAPSPduRx = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSPduRx.setStatus('mandatory')
nmsEAPSPduTx = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSPduTx.setStatus('mandatory')
nmsEAPSRingTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4), )
if mibBuilder.loadTexts: nmsEAPSRingTable.setStatus('mandatory')
nmsEAPSRingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1), ).setIndexNames((0, "NMS-EAPS-MIB", "nmsEAPSRingID"))
if mibBuilder.loadTexts: nmsEAPSRingTableEntry.setStatus('mandatory')
nmsEAPSRingID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingID.setStatus('mandatory')
nmsEAPSRingNodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("masterNode", 1), ("transitNode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsEAPSRingNodeType.setStatus('mandatory')
nmsEAPSRingControlVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsEAPSRingControlVlan.setStatus('mandatory')
nmsEAPSRingPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPorts.setStatus('mandatory')
nmsEAPSRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("complete", 1), ("ringFault", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingState.setStatus('mandatory')
nmsEAPSRingHealthCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingHealthCheck.setStatus('mandatory')
nmsEAPSRingHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsEAPSRingHelloTime.setStatus('mandatory')
nmsEAPSRingFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsEAPSRingFailTime.setStatus('mandatory')
nmsEAPSRingPreforwardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsEAPSRingPreforwardTime.setStatus('mandatory')
nmsEAPSRingAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("running", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsEAPSRingAdminStatus.setStatus('mandatory')
nmsEAPSRingPrimaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsEAPSRingPrimaryPort.setStatus('mandatory')
nmsEAPSRingPrimaryPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("forwarding", 1), ("preforwarding", 2), ("blocking", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPrimaryPortState.setStatus('mandatory')
nmsEAPSRingPrimaryPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPrimaryPortStatus.setStatus('mandatory')
nmsEAPSRingSecondaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsEAPSRingSecondaryPort.setStatus('mandatory')
nmsEAPSRingSecondaryPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("forwarding", 1), ("preforwarding", 2), ("blocking", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingSecondaryPortState.setStatus('mandatory')
nmsEAPSRingSecondaryPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingSecondaryPortStatus.setStatus('mandatory')
nmsEAPSRingPortTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5), )
if mibBuilder.loadTexts: nmsEAPSRingPortTable.setStatus('mandatory')
nmsEAPSRingPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5, 1), ).setIndexNames((0, "NMS-EAPS-MIB", "nmsEAPSRingPortRingID"), (0, "NMS-EAPS-MIB", "nmsEAPSRingPort"))
if mibBuilder.loadTexts: nmsEAPSRingPortTableEntry.setStatus('mandatory')
nmsEAPSRingPortRingID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPortRingID.setStatus('mandatory')
nmsEAPSRingPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPort.setStatus('mandatory')
nmsEAPSRingPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("primaryPort", 1), ("secondaryPort", 2), ("transitPort", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPortType.setStatus('mandatory')
nmsEAPSRingPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("forwarding", 1), ("preforwarding", 2), ("blocking", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPortState.setStatus('mandatory')
nmsEAPSRingPortForwards = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPortForwards.setStatus('mandatory')
nmsEAPSRingPortRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPortRx.setStatus('mandatory')
nmsEAPSRingPortTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPortTx.setStatus('mandatory')
nmsEAPSRingPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsEAPSRingPortStatus.setStatus('mandatory')
nmsEAPSRingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 6))
nmsEAPSRingNotification = NotificationType((1, 3, 6, 1, 4, 1, 11606, 10, 2, 230, 6, 1)).setObjects(("NMS-EAPS-MIB", "nmsEAPSRingID"), ("NMS-EAPS-MIB", "nmsEAPSRingNodeType"), ("NMS-EAPS-MIB", "nmsEAPSRingState"))
if mibBuilder.loadTexts: nmsEAPSRingNotification.setStatus('current')
mibBuilder.exportSymbols("NMS-EAPS-MIB", nmsEAPSRingTable=nmsEAPSRingTable, nmsEAPSRingSecondaryPortState=nmsEAPSRingSecondaryPortState, nmsEAPSRingPrimaryPortState=nmsEAPSRingPrimaryPortState, nmsEAPSRings=nmsEAPSRings, nmsEAPSRingNotification=nmsEAPSRingNotification, nmsEAPSPduTx=nmsEAPSPduTx, nmsEAPSRingPreforwardTime=nmsEAPSRingPreforwardTime, nmsEAPSRingPrimaryPortStatus=nmsEAPSRingPrimaryPortStatus, nmsEAPSRingPortForwards=nmsEAPSRingPortForwards, nmsEAPS=nmsEAPS, nmsEAPSRingPortTx=nmsEAPSRingPortTx, nmsEAPSRingNotifications=nmsEAPSRingNotifications, nmsEAPSRingPrimaryPort=nmsEAPSRingPrimaryPort, nmsEAPSRingPortState=nmsEAPSRingPortState, nmsEAPSRingSecondaryPort=nmsEAPSRingSecondaryPort, nmsEAPSRingFailTime=nmsEAPSRingFailTime, nmsEAPSRingControlVlan=nmsEAPSRingControlVlan, nmsEAPSRingAdminStatus=nmsEAPSRingAdminStatus, nmsEAPSRingTableEntry=nmsEAPSRingTableEntry, nmsEAPSRingPort=nmsEAPSRingPort, nmsEAPSRingPortRx=nmsEAPSRingPortRx, nmsEAPSRingPorts=nmsEAPSRingPorts, nmsEAPSRingPortRingID=nmsEAPSRingPortRingID, nmsEAPSRingSecondaryPortStatus=nmsEAPSRingSecondaryPortStatus, nmsEAPSRingHelloTime=nmsEAPSRingHelloTime, nmsEAPSRingHealthCheck=nmsEAPSRingHealthCheck, nmsEAPSRingPortStatus=nmsEAPSRingPortStatus, nmsEAPSRingPortTable=nmsEAPSRingPortTable, nmsEAPSRingState=nmsEAPSRingState, nmsEAPSRingPortTableEntry=nmsEAPSRingPortTableEntry, nmsEAPSRingPortType=nmsEAPSRingPortType, nmsEAPSRingNodeType=nmsEAPSRingNodeType, nmsEAPSPduRx=nmsEAPSPduRx, nmsEAPSRingID=nmsEAPSRingID)
