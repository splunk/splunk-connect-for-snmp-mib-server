#
# PySNMP MIB module STN-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-POLICY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, Unsigned32, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64, Counter32, Bits, MibIdentifier, ObjectIdentity, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Unsigned32", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64", "Counter32", "Bits", "MibIdentifier", "ObjectIdentity", "NotificationType", "IpAddress")
RowStatus, TextualConvention, TruthValue, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "TimeStamp", "DisplayString")
stnSystems, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnSystems")
stnRouterIndex, = mibBuilder.importSymbols("STN-ROUTER-MIB", "stnRouterIndex")
stnPm = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 11))
stnPm.setRevisions(('1900-05-12 00:00',))
if mibBuilder.loadTexts: stnPm.setLastUpdated('0012060000Z')
if mibBuilder.loadTexts: stnPm.setOrganization('Spring Tide Networks, Inc.')
stnPmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1))
stnPmMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 2))
stnPmService = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1))
stnPmPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2))
stnPmPreference = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3))
stnPmIPsec = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4))
stnPmEncaps = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 5))
stnPmManualSa = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6))
stnPmMarker = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 7))
stnPmProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8))
stnPmQueue = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9))
stnPmTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10))
stnPmFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11))
stnPmFirewallAction = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 12))
stnPmServiceList = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 13))
stnPmSLService = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14))
stnPmClass = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15))
stnPMProxyTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 16))
stnPmFirewallTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 1))
stnPmQosTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2))
stnPmFirewallTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 1, 1))
stnPmFirewallNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 1, 2))
stnPmFirewallNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 1, 2, 0))
stnPmQosTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2, 1))
stnPmQosNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2, 2))
stnPmQosNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2, 2, 0))
class StnPmPolicyMatchType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("any", 1), ("single", 2), ("range", 3), ("dynamic", 4), ("subnet", 5))

class StnPmSelectorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("policy", 1), ("packet", 2))

class StnPmAuthAlg(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("hmac-md5", 2), ("hmac-sha", 3))

class StnPmEncrAlg(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("des", 2), ("des3", 3))

class StnPmDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

class StnPmBitRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

stnPmServiceTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1, 1), )
if mibBuilder.loadTexts: stnPmServiceTable.setStatus('current')
stnPmServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmServiceIndex"))
if mibBuilder.loadTexts: stnPmServiceEntry.setStatus('current')
stnPmServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceIndex.setStatus('current')
stnPmServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceName.setStatus('current')
stnPmServiceIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceIdleTimeout.setStatus('current')
stnPmServiceNumPolicies = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceNumPolicies.setStatus('current')
stnPmServiceEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceEnabled.setStatus('current')
stnPmServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vpn", 1), ("firewall", 2), ("ip-fileter", 3), ("forwarding", 4), ("qos", 5), ("mpls", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceType.setStatus('current')
stnPmServiceFirewallID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceFirewallID.setStatus('current')
stnPmPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1), )
if mibBuilder.loadTexts: stnPmPolicyTable.setStatus('current')
stnPmPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmPolicyServiceIndex"), (0, "STN-POLICY-MIB", "stnPmPolicyIndex"))
if mibBuilder.loadTexts: stnPmPolicyEntry.setStatus('current')
stnPmPolicyServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyServiceIndex.setStatus('current')
stnPmPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyIndex.setStatus('current')
stnPmPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyName.setStatus('current')
stnPmPolicySrcAddrMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 4), StnPmPolicyMatchType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicySrcAddrMatchType.setStatus('current')
stnPmPolicySrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicySrcAddr.setStatus('current')
stnPmPolicySrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicySrcMask.setStatus('current')
stnPmPolicySrcEndAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicySrcEndAddr.setStatus('current')
stnPmPolicyDestAddrMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 8), StnPmPolicyMatchType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyDestAddrMatchType.setStatus('current')
stnPmPolicyDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyDestAddr.setStatus('current')
stnPmPolicyDestMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyDestMask.setStatus('current')
stnPmPolicyDestEndAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyDestEndAddr.setStatus('current')
stnPmPolicySrcPortMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 12), StnPmPolicyMatchType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicySrcPortMatchType.setStatus('current')
stnPmPolicySrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicySrcPort.setStatus('current')
stnPmPolicySrcEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicySrcEndPort.setStatus('current')
stnPmPolicyDestPortMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 15), StnPmPolicyMatchType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyDestPortMatchType.setStatus('current')
stnPmPolicyDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyDestPort.setStatus('current')
stnPmPolicyDestEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyDestEndPort.setStatus('current')
stnPmPolicyProtocolMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 18), StnPmPolicyMatchType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyProtocolMatchType.setStatus('current')
stnPmPolicyProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 17, 50, 51, 108))).clone(namedValues=NamedValues(("icmp", 1), ("tcp", 6), ("udp", 17), ("esp", 50), ("ah", 51), ("ipcomp", 108)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyProtocol.setStatus('current')
stnPmPolicyAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2), ("secure", 3), ("encaps", 4), ("reject", 5), ("fec", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyAction.setStatus('current')
stnPmPolicyActionID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyActionID.setStatus('current')
stnPmPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 22), StnPmDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyDirection.setStatus('current')
stnPmPolicyCreateMirror = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyCreateMirror.setStatus('current')
stnPmPolicySrcAddrSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 24), StnPmSelectorType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicySrcAddrSelector.setStatus('current')
stnPmPolicyDestAddrSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 25), StnPmSelectorType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyDestAddrSelector.setStatus('current')
stnPmPolicyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyEnabled.setStatus('current')
stnPmPolicyMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyMatches.setStatus('current')
stnPmPolicyMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyMisses.setStatus('current')
stnPmPolicyMarkedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyMarkedOctets.setStatus('current')
stnPmPolicyMarkedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyMarkedPkts.setStatus('current')
stnPmPolicyIcmpTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyIcmpTypes.setStatus('current')
stnPmPolicyTosByteMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 32), StnPmPolicyMatchType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyTosByteMatchType.setStatus('current')
stnPmPolicyTosByteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyTosByteValue.setStatus('current')
stnPmPolicyTosByteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyTosByteMask.setStatus('current')
stnPmPolicyMarkerID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyMarkerID.setStatus('current')
stnPmPolicyTxclassID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 2, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPolicyTxclassID.setStatus('current')
stnPmPreferenceTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1), )
if mibBuilder.loadTexts: stnPmPreferenceTable.setStatus('current')
stnPmPreferenceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmPreferenceIndex"))
if mibBuilder.loadTexts: stnPmPreferenceEntry.setStatus('current')
stnPmPreferenceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferenceIndex.setStatus('current')
stnPmPreferenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferenceNum.setStatus('current')
stnPmPreferenceAhAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 3), StnPmAuthAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferenceAhAlg.setStatus('current')
stnPmPreferenceEspAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 4), StnPmAuthAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferenceEspAuthAlg.setStatus('current')
stnPmPreferenceEspEncrAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 5), StnPmEncrAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferenceEspEncrAlg.setStatus('current')
stnPmPreferenceLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferenceLifeTime.setStatus('current')
stnPmPreferenceLifeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferenceLifeBytes.setStatus('current')
stnPmPreferenceIPsecID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferenceIPsecID.setStatus('current')
stnPmPreferencePFSGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5))).clone(namedValues=NamedValues(("group1", 1), ("group2", 2), ("group5", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferencePFSGroup.setStatus('current')
stnPmPreferenceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 3, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmPreferenceDescription.setStatus('current')
stnPmIPsecTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1), )
if mibBuilder.loadTexts: stnPmIPsecTable.setStatus('current')
stnPmIPsecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmIPsecIndex"))
if mibBuilder.loadTexts: stnPmIPsecEntry.setStatus('current')
stnPmIPsecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIPsecIndex.setStatus('current')
stnPmIPsecPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIPsecPeerIpAddr.setStatus('current')
stnPmIPsecLocalIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIPsecLocalIpAddr.setStatus('current')
stnPmIPsecMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tunnel", 1), ("transport", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIPsecMode.setStatus('current')
stnPmIPsecKeyNegType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ike", 1), ("manual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIPsecKeyNegType.setStatus('current')
stnPmIPsecName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIPsecName.setStatus('current')
stnPmIPsecNumManualSAs = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIPsecNumManualSAs.setStatus('current')
stnPmIPsecNumPreferences = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIPsecNumPreferences.setStatus('current')
stnPmIPsecReplayDetectionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 4, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIPsecReplayDetectionEnabled.setStatus('current')
stnPmEncapsTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 5, 1), )
if mibBuilder.loadTexts: stnPmEncapsTable.setStatus('current')
stnPmEncapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 5, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmEncapsIndex"))
if mibBuilder.loadTexts: stnPmEncapsEntry.setStatus('current')
stnPmEncapsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmEncapsIndex.setStatus('current')
stnPmEncapsPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 5, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmEncapsPeerIpAddr.setStatus('current')
stnPmEncapsLocalIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 5, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmEncapsLocalIpAddr.setStatus('current')
stnPmEncapsType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip-ip", 1), ("ip-gre", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmEncapsType.setStatus('current')
stnPmEncapsGREKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmEncapsGREKey.setStatus('current')
stnPmEncapsName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 5, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmEncapsName.setStatus('current')
stnPmManualSaTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1), )
if mibBuilder.loadTexts: stnPmManualSaTable.setStatus('current')
stnPmManualSaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmManualSaIndex"))
if mibBuilder.loadTexts: stnPmManualSaEntry.setStatus('current')
stnPmManualSaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaIndex.setStatus('current')
stnPmManualSaPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaPeerIpAddr.setStatus('current')
stnPmManualSaDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 3), StnPmDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaDirection.setStatus('current')
stnPmManualSaSPI = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaSPI.setStatus('current')
stnPmManualSaAhAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 5), StnPmAuthAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaAhAlg.setStatus('current')
stnPmManualSaAhKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaAhKey.setStatus('current')
stnPmManualSaEspAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 7), StnPmAuthAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaEspAuthAlg.setStatus('current')
stnPmManualSaEspAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaEspAuthKey.setStatus('current')
stnPmManualSaEspEncrAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 9), StnPmEncrAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaEspEncrAlg.setStatus('current')
stnPmManualSaEspEncrKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaEspEncrKey.setStatus('current')
stnPmManualSaIPsecID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaIPsecID.setStatus('current')
stnPmManualSaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 6, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmManualSaDescription.setStatus('current')
stnPmQosLatestFlowCB = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQosLatestFlowCB.setStatus('current')
stnPmQosLastDroppedPacket = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQosLastDroppedPacket.setStatus('current')
stnPmQosFlowCBCreated = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2, 2, 0, 1)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-POLICY-MIB", "stnPmQosLatestFlowCB"))
if mibBuilder.loadTexts: stnPmQosFlowCBCreated.setStatus('current')
stnPmQosFlowCBRemoved = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2, 2, 0, 2)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-POLICY-MIB", "stnPmQosLatestFlowCB"))
if mibBuilder.loadTexts: stnPmQosFlowCBRemoved.setStatus('current')
stnPmQosShapingPacketDiscard = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2, 2, 0, 3)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-POLICY-MIB", "stnPmQosLastDroppedPacket"))
if mibBuilder.loadTexts: stnPmQosShapingPacketDiscard.setStatus('current')
stnPmQosThresholdPacketDiscard = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 2, 2, 0, 4)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-POLICY-MIB", "stnPmQosLastDroppedPacket"))
if mibBuilder.loadTexts: stnPmQosThresholdPacketDiscard.setStatus('current')
stnPmMarkerTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 7, 1), )
if mibBuilder.loadTexts: stnPmMarkerTable.setStatus('current')
stnPmMarkerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 7, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmMarkerIndex"))
if mibBuilder.loadTexts: stnPmMarkerEntry.setStatus('current')
stnPmMarkerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmMarkerIndex.setStatus('current')
stnPmMarkerName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmMarkerName.setStatus('current')
stnPmMarkerByteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmMarkerByteValue.setStatus('current')
stnPmMarkerByteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmMarkerByteMask.setStatus('current')
stnPmMarkerMarkedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 7, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmMarkerMarkedOctets.setStatus('current')
stnPmMarkerMarkedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 7, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmMarkerMarkedPkts.setStatus('current')
stnPmProfileTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1), )
if mibBuilder.loadTexts: stnPmProfileTable.setStatus('current')
stnPmProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmProfileIndex"))
if mibBuilder.loadTexts: stnPmProfileEntry.setStatus('current')
stnPmProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileIndex.setStatus('current')
stnPmProfileEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileEnabled.setStatus('current')
stnPmProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileName.setStatus('current')
stnPmProfileCommittedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileCommittedRate.setStatus('current')
stnPmProfileCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileCommittedBurst.setStatus('current')
stnPmProfileExcessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileExcessRate.setStatus('current')
stnPmProfileExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileExcessBurst.setStatus('current')
stnPmProfileConformAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2), ("markandforward", 3), ("shape", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileConformAction.setStatus('current')
stnPmProfileConformActionID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileConformActionID.setStatus('current')
stnPmProfileCautionAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2), ("markandforward", 3), ("shape", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileCautionAction.setStatus('current')
stnPmProfileConformOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileConformOctets.setStatus('current')
stnPmProfileConformPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileConformPkts.setStatus('current')
stnPmProfileCautionActionID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileCautionActionID.setStatus('current')
stnPmProfileExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2), ("markandforward", 3), ("shape", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileExceedAction.setStatus('current')
stnPmProfileCautionOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileCautionOctets.setStatus('current')
stnPmProfileCautionPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileCautionPkts.setStatus('current')
stnPmProfileExceedActionID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileExceedActionID.setStatus('current')
stnPmProfileExceedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileExceedOctets.setStatus('current')
stnPmProfileExceedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 8, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmProfileExceedPkts.setStatus('current')
stnPmQueueTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1), )
if mibBuilder.loadTexts: stnPmQueueTable.setStatus('current')
stnPmQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmQueueIndex"))
if mibBuilder.loadTexts: stnPmQueueEntry.setStatus('current')
stnPmQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQueueIndex.setStatus('current')
stnPmQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQueueName.setStatus('current')
stnPmQueueThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQueueThreshold.setStatus('current')
stnPmQueueDropType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("tailDrop", 2), ("headDrop", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQueueDropType.setStatus('current')
stnPmQueueDropHCOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQueueDropHCOctets.setStatus('current')
stnPmQueueDropHCPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQueueDropHCPkts.setStatus('current')
stnPmQueueQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQueueQueueLen.setStatus('current')
stnPmQueueMaxQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 9, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmQueueMaxQueueLen.setStatus('current')
stnPmFirewallEventLogMsg = MibScalar((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallEventLogMsg.setStatus('current')
stnPmFirewallLog = NotificationType((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 10, 1, 2, 0, 1)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-POLICY-MIB", "stnPmServiceIndex"), ("STN-POLICY-MIB", "stnPmPolicyIndex"), ("STN-POLICY-MIB", "stnPmFirewallEventLogMsg"))
if mibBuilder.loadTexts: stnPmFirewallLog.setStatus('current')
stnPmFirewallTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1), )
if mibBuilder.loadTexts: stnPmFirewallTable.setStatus('current')
stnPmFirewallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmFirewallIndex"))
if mibBuilder.loadTexts: stnPmFirewallEntry.setStatus('current')
stnPmFirewallIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallIndex.setStatus('current')
stnPmFirewallName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallName.setStatus('current')
stnPmFirewallAcceptOtherIPOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallAcceptOtherIPOptions.setStatus('current')
stnPmFirewallAcceptSourceRouting = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallAcceptSourceRouting.setStatus('current')
stnPmFirewallTcpAckLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallTcpAckLifeTime.setStatus('current')
stnPmFirewallTcpSynLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallTcpSynLifeTime.setStatus('current')
stnPmFirewallTcpFinLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallTcpFinLifeTime.setStatus('current')
stnPmFirewallTcpRstLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallTcpRstLifeTime.setStatus('current')
stnPmFirewallTcpInactivityLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallTcpInactivityLifeTime.setStatus('current')
stnPmFirewallUdpInactivityLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallUdpInactivityLifeTime.setStatus('current')
stnPmFirewallSynAttackDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallSynAttackDetection.setStatus('current')
stnPmFirewallLandAttackDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallLandAttackDetection.setStatus('current')
stnPmFirewallPingFloodingDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallPingFloodingDetection.setStatus('current')
stnPmFirewallPingOfDeathDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallPingOfDeathDetection.setStatus('current')
stnPmFirewallPortScanDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallPortScanDetection.setStatus('current')
stnPmFirewallPingScanDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallPingScanDetection.setStatus('current')
stnPmFirewallTcpSynBacklogQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallTcpSynBacklogQueueSize.setStatus('current')
stnPmFirewallPingsPerMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallPingsPerMinute.setStatus('current')
stnPmFirewallMaxPingSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallMaxPingSize.setStatus('current')
stnPmFirewallEnableDynamicPortApps = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallEnableDynamicPortApps.setStatus('current')
stnPmFirewallMaxDynHashTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallMaxDynHashTableSize.setStatus('current')
stnPmFirewallMinLogPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 11, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallMinLogPeriod.setStatus('current')
stnPmFirewallActionTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 12, 1), )
if mibBuilder.loadTexts: stnPmFirewallActionTable.setStatus('current')
stnPmFirewallActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 12, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmFirewallActionIndex"))
if mibBuilder.loadTexts: stnPmFirewallActionEntry.setStatus('current')
stnPmFirewallActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallActionIndex.setStatus('current')
stnPmFirewallActionName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 12, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallActionName.setStatus('current')
stnPmFirewallActionTrackingType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("short", 2), ("long", 3), ("trap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallActionTrackingType.setStatus('current')
stnPmFirewallActionStateful = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 12, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallActionStateful.setStatus('current')
stnPmFirewallActionInactivityLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 12, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallActionInactivityLifeTime.setStatus('current')
stnPmFirewallActionRejectAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("icmpUnreachPort", 2), ("tcpReset", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmFirewallActionRejectAction.setStatus('current')
stnPmServiceListTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 13, 1), )
if mibBuilder.loadTexts: stnPmServiceListTable.setStatus('current')
stnPmServiceListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 13, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmServiceListIndex"))
if mibBuilder.loadTexts: stnPmServiceListEntry.setStatus('current')
stnPmServiceListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceListIndex.setStatus('current')
stnPmServiceListName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 13, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceListName.setStatus('current')
stnPmServiceListConnIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 13, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceListConnIdleTimeout.setStatus('current')
stnPmServiceListNumServices = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 13, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceListNumServices.setStatus('current')
stnPmServiceListEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 13, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmServiceListEnabled.setStatus('current')
stnPmSLServiceTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1), )
if mibBuilder.loadTexts: stnPmSLServiceTable.setStatus('current')
stnPmSLServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmSLIndex"), (0, "STN-POLICY-MIB", "stnPmSLServiceIndex"))
if mibBuilder.loadTexts: stnPmSLServiceEntry.setStatus('current')
stnPmSLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmSLIndex.setStatus('current')
stnPmSLServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmSLServiceIndex.setStatus('current')
stnPmSLServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 65))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmSLServiceName.setStatus('current')
stnPmSLServiceIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmSLServiceIdleTimeout.setStatus('current')
stnPmSLServiceNumPolicies = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmSLServiceNumPolicies.setStatus('current')
stnPmSLServiceEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmSLServiceEnabled.setStatus('current')
stnPmSLServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vpn", 1), ("firewall", 2), ("ip-fileter", 3), ("forwarding", 4), ("qos", 5), ("mpls", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmSLServiceType.setStatus('current')
stnPmSLServiceFirewallID = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 14, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmSLServiceFirewallID.setStatus('current')
stnPmClassTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1), )
if mibBuilder.loadTexts: stnPmClassTable.setStatus('current')
stnPmClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1), ).setIndexNames((0, "STN-POLICY-MIB", "stnPmIfIndex"), (0, "STN-POLICY-MIB", "stnPmTxclassInstance"))
if mibBuilder.loadTexts: stnPmClassEntry.setStatus('current')
stnPmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmIfIndex.setStatus('current')
stnPmTxclassInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmTxclassInstance.setStatus('current')
stnPmClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassName.setStatus('current')
stnPmClassParent = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)).clone('interface')).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassParent.setStatus('current')
stnPmClassRate = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 5), StnPmBitRate()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassRate.setStatus('current')
stnPmClassPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassPriority.setStatus('current')
stnPmClassMaxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 7), Integer32()).setUnits('tens of nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassMaxIdle.setStatus('current')
stnPmClassMinIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 8), Integer32()).setUnits('tens of nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassMinIdle.setStatus('current')
stnPmClassMaxQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200)).clone(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassMaxQueueLen.setStatus('current')
stnPmClassOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("downConflict", 3), ("autoClassActive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassOperStatus.setStatus('current')
stnPmClassBwUse = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("atLimit", 1), ("underLimit", 2), ("overLimit", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassBwUse.setStatus('current')
stnPmClassUnsatisfied = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassUnsatisfied.setStatus('current')
stnPmClassQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassQueueSize.setStatus('current')
stnPmClassMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 14), StnPmBitRate()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassMaxRate.setStatus('current')
stnPmClassDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassDescription.setStatus('current')
stnPmClassStatsHighWater = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsHighWater.setStatus('current')
stnPmClassStatsIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 17), Integer32()).setUnits('tens of nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsIdle.setStatus('current')
stnPmClassStatsQueuedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsQueuedPkts.setStatus('current')
stnPmClassStatsOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsOctets.setStatus('current')
stnPmClassStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsPkts.setStatus('current')
stnPmClassStatsOverLimits = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsOverLimits.setStatus('current')
stnPmClassStatsBorrowAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsBorrowAttempts.setStatus('current')
stnPmClassStatsDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsDroppedOctets.setStatus('current')
stnPmClassStatsDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsDroppedPkts.setStatus('current')
stnPmClassStatsThrottles = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsThrottles.setStatus('current')
stnPmClassStatsUnsatisfieds = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsUnsatisfieds.setStatus('current')
stnPmClassStatsAggrOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsAggrOctets.setStatus('current')
stnPmClassStatsAggrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 11, 1, 15, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPmClassStatsAggrPkts.setStatus('current')
mibBuilder.exportSymbols("STN-POLICY-MIB", stnPmPolicySrcEndPort=stnPmPolicySrcEndPort, stnPmMarkerIndex=stnPmMarkerIndex, stnPmPolicyDestAddrSelector=stnPmPolicyDestAddrSelector, stnPmPolicyDestAddr=stnPmPolicyDestAddr, stnPmQosFlowCBCreated=stnPmQosFlowCBCreated, stnPmFirewallAcceptOtherIPOptions=stnPmFirewallAcceptOtherIPOptions, stnPmFirewallActionIndex=stnPmFirewallActionIndex, stnPmServiceType=stnPmServiceType, stnPmFirewallActionTrackingType=stnPmFirewallActionTrackingType, stnPmServiceTable=stnPmServiceTable, stnPmServiceListIndex=stnPmServiceListIndex, stnPmSLServiceIdleTimeout=stnPmSLServiceIdleTimeout, stnPmSLServiceEnabled=stnPmSLServiceEnabled, stnPmPreferencePFSGroup=stnPmPreferencePFSGroup, stnPmManualSaPeerIpAddr=stnPmManualSaPeerIpAddr, stnPmPreferenceTable=stnPmPreferenceTable, stnPmFirewallIndex=stnPmFirewallIndex, stnPmIPsecReplayDetectionEnabled=stnPmIPsecReplayDetectionEnabled, stnPmFirewallNotificationPrefix=stnPmFirewallNotificationPrefix, stnPmIPsecPeerIpAddr=stnPmIPsecPeerIpAddr, stnPmManualSaEspEncrKey=stnPmManualSaEspEncrKey, stnPmClassTable=stnPmClassTable, stnPmPolicyTxclassID=stnPmPolicyTxclassID, stnPmPolicySrcAddrSelector=stnPmPolicySrcAddrSelector, stnPmManualSaSPI=stnPmManualSaSPI, stnPmQueueDropType=stnPmQueueDropType, stnPmQueueDropHCPkts=stnPmQueueDropHCPkts, stnPmPreferenceIPsecID=stnPmPreferenceIPsecID, stnPmSLServiceIndex=stnPmSLServiceIndex, stnPmQosTrapVars=stnPmQosTrapVars, stnPmIPsecKeyNegType=stnPmIPsecKeyNegType, stnPmClassRate=stnPmClassRate, StnPmPolicyMatchType=StnPmPolicyMatchType, stnPmManualSaEspAuthAlg=stnPmManualSaEspAuthAlg, StnPmAuthAlg=StnPmAuthAlg, stnPmPolicyCreateMirror=stnPmPolicyCreateMirror, stnPmClassName=stnPmClassName, stnPmClassStatsUnsatisfieds=stnPmClassStatsUnsatisfieds, stnPmPolicyDestEndPort=stnPmPolicyDestEndPort, stnPmPolicyEnabled=stnPmPolicyEnabled, stnPmMarkerByteValue=stnPmMarkerByteValue, stnPmServiceListTable=stnPmServiceListTable, stnPmFirewallPingFloodingDetection=stnPmFirewallPingFloodingDetection, stnPmPolicySrcPort=stnPmPolicySrcPort, stnPmFirewallPingsPerMinute=stnPmFirewallPingsPerMinute, stnPmPreference=stnPmPreference, stnPmQosNotificationPrefix=stnPmQosNotificationPrefix, stnPmFirewallTrap=stnPmFirewallTrap, stnPmIPsecTable=stnPmIPsecTable, stnPmEncapsGREKey=stnPmEncapsGREKey, stnPmFirewallLandAttackDetection=stnPmFirewallLandAttackDetection, stnPmSLServiceFirewallID=stnPmSLServiceFirewallID, stnPmClassStatsOverLimits=stnPmClassStatsOverLimits, stnPmManualSaEntry=stnPmManualSaEntry, stnPmServiceEnabled=stnPmServiceEnabled, stnPmQueueTable=stnPmQueueTable, StnPmDirection=StnPmDirection, stnPmProfileExcessRate=stnPmProfileExcessRate, stnPmIPsecNumManualSAs=stnPmIPsecNumManualSAs, stnPmQosShapingPacketDiscard=stnPmQosShapingPacketDiscard, stnPmQueueMaxQueueLen=stnPmQueueMaxQueueLen, stnPmTxclassInstance=stnPmTxclassInstance, stnPmClassMaxIdle=stnPmClassMaxIdle, stnPmQueueThreshold=stnPmQueueThreshold, stnPmEncapsTable=stnPmEncapsTable, stnPmProfileExceedAction=stnPmProfileExceedAction, stnPmIPsecIndex=stnPmIPsecIndex, stnPmPolicyDestMask=stnPmPolicyDestMask, stnPmServiceListEnabled=stnPmServiceListEnabled, stnPmClass=stnPmClass, stnPmFirewallActionStateful=stnPmFirewallActionStateful, stnPmClassEntry=stnPmClassEntry, stnPmClassUnsatisfied=stnPmClassUnsatisfied, stnPmPreferenceLifeBytes=stnPmPreferenceLifeBytes, stnPmPolicy=stnPmPolicy, stnPmPolicyMarkedPkts=stnPmPolicyMarkedPkts, stnPmProfileCommittedRate=stnPmProfileCommittedRate, stnPmEncapsIndex=stnPmEncapsIndex, stnPmQueueEntry=stnPmQueueEntry, stnPmQosNotification=stnPmQosNotification, stnPmQueueName=stnPmQueueName, stnPmClassStatsHighWater=stnPmClassStatsHighWater, stnPmClassStatsAggrPkts=stnPmClassStatsAggrPkts, stnPmPreferenceEspAuthAlg=stnPmPreferenceEspAuthAlg, stnPmManualSaIndex=stnPmManualSaIndex, stnPmQueueIndex=stnPmQueueIndex, stnPmServiceListConnIdleTimeout=stnPmServiceListConnIdleTimeout, stnPmProfileCautionPkts=stnPmProfileCautionPkts, stnPmProfileExceedActionID=stnPmProfileExceedActionID, stnPmProfileName=stnPmProfileName, stnPmPolicyMarkedOctets=stnPmPolicyMarkedOctets, stnPmPolicySrcMask=stnPmPolicySrcMask, stnPmFirewallTcpAckLifeTime=stnPmFirewallTcpAckLifeTime, stnPmPreferenceNum=stnPmPreferenceNum, stnPmServiceIdleTimeout=stnPmServiceIdleTimeout, stnPmEncapsLocalIpAddr=stnPmEncapsLocalIpAddr, stnPmFirewallPingOfDeathDetection=stnPmFirewallPingOfDeathDetection, stnPmFirewallActionName=stnPmFirewallActionName, stnPmClassStatsQueuedPkts=stnPmClassStatsQueuedPkts, stnPmProfileCommittedBurst=stnPmProfileCommittedBurst, stnPmFirewallLog=stnPmFirewallLog, stnPmPreferenceIndex=stnPmPreferenceIndex, StnPmEncrAlg=StnPmEncrAlg, stnPmManualSaAhKey=stnPmManualSaAhKey, stnPmClassMinIdle=stnPmClassMinIdle, stnPmServiceName=stnPmServiceName, stnPmProfileExceedOctets=stnPmProfileExceedOctets, stnPmServiceList=stnPmServiceList, stnPmQueueQueueLen=stnPmQueueQueueLen, stnPmClassPriority=stnPmClassPriority, stnPmClassQueueSize=stnPmClassQueueSize, stnPmClassStatsOctets=stnPmClassStatsOctets, stnPmServiceNumPolicies=stnPmServiceNumPolicies, stnPmSLServiceEntry=stnPmSLServiceEntry, stnPmPolicyTable=stnPmPolicyTable, stnPmQueueDropHCOctets=stnPmQueueDropHCOctets, stnPmPreferenceLifeTime=stnPmPreferenceLifeTime, stnPmProfileConformActionID=stnPmProfileConformActionID, PYSNMP_MODULE_ID=stnPm, stnPmPolicySrcAddr=stnPmPolicySrcAddr, stnPmSLServiceName=stnPmSLServiceName, stnPmPolicyTosByteMatchType=stnPmPolicyTosByteMatchType, stnPmQosThresholdPacketDiscard=stnPmQosThresholdPacketDiscard, stnPmSLService=stnPmSLService, stnPmClassDescription=stnPmClassDescription, stnPmManualSaDescription=stnPmManualSaDescription, stnPmFirewallPortScanDetection=stnPmFirewallPortScanDetection, stnPmClassOperStatus=stnPmClassOperStatus, stnPmClassStatsThrottles=stnPmClassStatsThrottles, stnPmProfileConformOctets=stnPmProfileConformOctets, stnPmFirewallMaxDynHashTableSize=stnPmFirewallMaxDynHashTableSize, stnPmMarkerMarkedPkts=stnPmMarkerMarkedPkts, stnPmProfileExcessBurst=stnPmProfileExcessBurst, stnPmPolicyMarkerID=stnPmPolicyMarkerID, stnPmFirewallNotification=stnPmFirewallNotification, stnPmFirewallPingScanDetection=stnPmFirewallPingScanDetection, stnPmSLIndex=stnPmSLIndex, stnPmManualSa=stnPmManualSa, stnPmService=stnPmService, stnPmTraps=stnPmTraps, stnPmClassMaxQueueLen=stnPmClassMaxQueueLen, stnPmPolicyDirection=stnPmPolicyDirection, stnPmFirewallActionEntry=stnPmFirewallActionEntry, stnPmQosLatestFlowCB=stnPmQosLatestFlowCB, stnPmPreferenceEspEncrAlg=stnPmPreferenceEspEncrAlg, stnPmFirewallActionTable=stnPmFirewallActionTable, stnPmMarker=stnPmMarker, stnPmPreferenceEntry=stnPmPreferenceEntry, stnPmServiceListNumServices=stnPmServiceListNumServices, stnPmMarkerTable=stnPmMarkerTable, stnPmFirewallAcceptSourceRouting=stnPmFirewallAcceptSourceRouting, stnPmManualSaDirection=stnPmManualSaDirection, stnPmClassStatsIdle=stnPmClassStatsIdle, stnPmIPsecMode=stnPmIPsecMode, stnPmFirewallEnableDynamicPortApps=stnPmFirewallEnableDynamicPortApps, stnPmProfileIndex=stnPmProfileIndex, stnPmPolicyEntry=stnPmPolicyEntry, stnPmFirewallMaxPingSize=stnPmFirewallMaxPingSize, stnPmProfileCautionActionID=stnPmProfileCautionActionID, stnPmFirewall=stnPmFirewall, stnPmServiceFirewallID=stnPmServiceFirewallID, stnPmServiceListName=stnPmServiceListName, stnPmManualSaIPsecID=stnPmManualSaIPsecID, stnPmPolicyIndex=stnPmPolicyIndex, stnPmQosFlowCBRemoved=stnPmQosFlowCBRemoved, stnPmClassStatsDroppedOctets=stnPmClassStatsDroppedOctets, stnPmFirewallTable=stnPmFirewallTable, StnPmBitRate=StnPmBitRate, stnPmPolicyDestAddrMatchType=stnPmPolicyDestAddrMatchType, stnPmFirewallEventLogMsg=stnPmFirewallEventLogMsg, stnPmPolicyProtocol=stnPmPolicyProtocol, stnPmPreferenceDescription=stnPmPreferenceDescription, stnPmClassBwUse=stnPmClassBwUse, stnPmFirewallUdpInactivityLifeTime=stnPmFirewallUdpInactivityLifeTime, stnPmIPsec=stnPmIPsec, stnPmFirewallTcpInactivityLifeTime=stnPmFirewallTcpInactivityLifeTime, stnPmProfileCautionAction=stnPmProfileCautionAction, stnPmMarkerEntry=stnPmMarkerEntry, stnPmSLServiceTable=stnPmSLServiceTable, stnPmProfileEntry=stnPmProfileEntry, stnPmSLServiceType=stnPmSLServiceType, stnPmPolicyAction=stnPmPolicyAction, stnPmIPsecLocalIpAddr=stnPmIPsecLocalIpAddr, stnPmFirewallEntry=stnPmFirewallEntry, stnPmPolicyTosByteMask=stnPmPolicyTosByteMask, stnPmManualSaAhAlg=stnPmManualSaAhAlg, stnPmPolicyTosByteValue=stnPmPolicyTosByteValue, stnPmEncapsPeerIpAddr=stnPmEncapsPeerIpAddr, stnPmFirewallName=stnPmFirewallName, stnPmPolicyMisses=stnPmPolicyMisses, stnPmClassStatsAggrOctets=stnPmClassStatsAggrOctets, stnPmQosLastDroppedPacket=stnPmQosLastDroppedPacket, stnPmPolicyIcmpTypes=stnPmPolicyIcmpTypes, stnPmClassParent=stnPmClassParent, stnPmFirewallTrapVars=stnPmFirewallTrapVars, stnPmPolicySrcEndAddr=stnPmPolicySrcEndAddr, stnPmPreferenceAhAlg=stnPmPreferenceAhAlg, stnPmManualSaTable=stnPmManualSaTable, stnPmClassMaxRate=stnPmClassMaxRate, stnPmFirewallTcpRstLifeTime=stnPmFirewallTcpRstLifeTime, stnPmPolicyMatches=stnPmPolicyMatches, stnPmProfileConformPkts=stnPmProfileConformPkts, stnPmEncapsType=stnPmEncapsType, stnPmMibConformance=stnPmMibConformance, stnPmPolicyName=stnPmPolicyName, stnPmFirewallSynAttackDetection=stnPmFirewallSynAttackDetection, stnPmIPsecNumPreferences=stnPmIPsecNumPreferences, stnPmFirewallActionInactivityLifeTime=stnPmFirewallActionInactivityLifeTime, stnPmPolicyDestPortMatchType=stnPmPolicyDestPortMatchType, stnPmIPsecName=stnPmIPsecName, stnPmSLServiceNumPolicies=stnPmSLServiceNumPolicies, stnPmProfileConformAction=stnPmProfileConformAction, stnPmPolicyServiceIndex=stnPmPolicyServiceIndex, stnPmPolicyDestPort=stnPmPolicyDestPort, stnPmPolicySrcAddrMatchType=stnPmPolicySrcAddrMatchType, stnPmQosTrap=stnPmQosTrap, stnPmEncapsEntry=stnPmEncapsEntry, stnPmFirewallTcpSynLifeTime=stnPmFirewallTcpSynLifeTime, stnPmIfIndex=stnPmIfIndex, stnPmServiceEntry=stnPmServiceEntry, stnPmObjects=stnPmObjects, stnPmProfileTable=stnPmProfileTable, stnPmFirewallTcpFinLifeTime=stnPmFirewallTcpFinLifeTime, stnPmFirewallTcpSynBacklogQueueSize=stnPmFirewallTcpSynBacklogQueueSize, stnPmPolicySrcPortMatchType=stnPmPolicySrcPortMatchType, stnPmClassStatsPkts=stnPmClassStatsPkts, stnPmPolicyDestEndAddr=stnPmPolicyDestEndAddr, stnPm=stnPm, stnPmEncaps=stnPmEncaps, stnPmPolicyActionID=stnPmPolicyActionID, stnPMProxyTunnel=stnPMProxyTunnel, stnPmQueue=stnPmQueue, stnPmProfileExceedPkts=stnPmProfileExceedPkts, stnPmManualSaEspEncrAlg=stnPmManualSaEspEncrAlg, stnPmServiceListEntry=stnPmServiceListEntry, stnPmEncapsName=stnPmEncapsName, stnPmFirewallMinLogPeriod=stnPmFirewallMinLogPeriod, stnPmProfileEnabled=stnPmProfileEnabled, stnPmClassStatsDroppedPkts=stnPmClassStatsDroppedPkts, stnPmProfile=stnPmProfile, StnPmSelectorType=StnPmSelectorType, stnPmPolicyProtocolMatchType=stnPmPolicyProtocolMatchType, stnPmManualSaEspAuthKey=stnPmManualSaEspAuthKey, stnPmFirewallAction=stnPmFirewallAction, stnPmIPsecEntry=stnPmIPsecEntry, stnPmMarkerName=stnPmMarkerName, stnPmClassStatsBorrowAttempts=stnPmClassStatsBorrowAttempts, stnPmMarkerByteMask=stnPmMarkerByteMask, stnPmMarkerMarkedOctets=stnPmMarkerMarkedOctets, stnPmServiceIndex=stnPmServiceIndex, stnPmFirewallActionRejectAction=stnPmFirewallActionRejectAction, stnPmProfileCautionOctets=stnPmProfileCautionOctets)
