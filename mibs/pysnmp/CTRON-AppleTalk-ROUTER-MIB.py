#
# PySNMP MIB module CTRON-AppleTalk-ROUTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CTRON-AppleTalk-ROUTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:26:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
nwRtrProtoSuites, nwRouter = mibBuilder.importSymbols("ROUTER-OIDS", "nwRtrProtoSuites", "nwRouter")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, TimeTicks, MibIdentifier, ObjectIdentity, ModuleIdentity, Gauge32, Integer32, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "TimeTicks", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "Gauge32", "Integer32", "Counter32", "Counter64")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
nwRtrExperimental = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 4))
nwAtRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4))
nwAtMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 1))
nwAtComponents = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2))
nwAtSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 1))
nwAtForwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2))
nwAtTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4))
nwAtFib = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 5))
nwAtEndSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6))
nwAtAccessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7))
nwAtFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 8))
nwAtRedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 9))
nwAtEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10))
nwAtWorkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 11))
nwAtNetDiag = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12))
nwAtSysConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 1, 1))
nwAtSysAdministration = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 1, 2))
nwAtFwdSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1))
nwAtFwdInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2))
nwAtFwdCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1))
nwAtFwdIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1))
nwAtFwdIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2))
nwAtDistanceVector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1))
nwAtLinkState = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 2))
nwAtProto = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1))
nwAtProtoSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1))
nwAtProtoInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2))
nwAtProtoConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1))
nwAtProtoCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2))
nwAtProtoIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1))
nwAtProtoIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2))
nwAtHostsSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 1))
nwAtHostsInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2))
nwAtHostsToMedia = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3))
nwAtEventLogConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 1))
nwAtEventLogFilterTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 2))
nwAtEventLogTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3))
nwAtNetDiagPing = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 1))
nwAtNetDiagTelnet = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 2))
nwAtNetDiagOutbound = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3))
class AtNetworkNumber(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

class AtDdpNodeAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

class AtName(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

nwAtMibRevText = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtMibRevText.setStatus('mandatory')
nwAtSysRouterId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 1, 1, 1), AtNetworkNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtSysRouterId.setStatus('mandatory')
nwAtSysAdminSTATUS = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtSysAdminSTATUS.setStatus('mandatory')
nwAtSysOperSTATUS = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtSysOperSTATUS.setStatus('mandatory')
nwAtSysAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtSysAdminReset.setStatus('mandatory')
nwAtSysOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtSysOperationalTime.setStatus('mandatory')
nwAtSysVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 1, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtSysVersion.setStatus('mandatory')
nwAtFwdCtrAdminSTATUS = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdCtrAdminSTATUS.setStatus('mandatory')
nwAtFwdCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdCtrReset.setStatus('mandatory')
nwAtFwdCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrOperationalTime.setStatus('mandatory')
nwAtFwdCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrInPkts.setStatus('mandatory')
nwAtFwdCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrOutPkts.setStatus('mandatory')
nwAtFwdCtrFwdPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrFwdPkts.setStatus('mandatory')
nwAtFwdCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrFilteredPkts.setStatus('mandatory')
nwAtFwdCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrDiscardPkts.setStatus('mandatory')
nwAtFwdCtrAddrErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrAddrErrPkts.setStatus('mandatory')
nwAtFwdCtrLenErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrLenErrPkts.setStatus('mandatory')
nwAtFwdCtrHdrErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrHdrErrPkts.setStatus('mandatory')
nwAtFwdCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrInBytes.setStatus('mandatory')
nwAtFwdCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrOutBytes.setStatus('mandatory')
nwAtFwdCtrFwdBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrFwdBytes.setStatus('mandatory')
nwAtFwdCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrFilteredBytes.setStatus('mandatory')
nwAtFwdCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrDiscardBytes.setStatus('mandatory')
nwAtFwdCtrHostInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrHostInPkts.setStatus('mandatory')
nwAtFwdCtrHostOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrHostOutPkts.setStatus('mandatory')
nwAtFwdCtrHostDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrHostDiscardPkts.setStatus('mandatory')
nwAtFwdCtrHostInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrHostInBytes.setStatus('mandatory')
nwAtFwdCtrHostOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrHostOutBytes.setStatus('mandatory')
nwAtFwdCtrHostDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdCtrHostDiscardBytes.setStatus('mandatory')
nwAtFwdIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1), )
if mibBuilder.loadTexts: nwAtFwdIfTable.setStatus('mandatory')
nwAtFwdIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtFwdIfIndex"))
if mibBuilder.loadTexts: nwAtFwdIfEntry.setStatus('mandatory')
nwAtFwdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfIndex.setStatus('mandatory')
nwAtFwdIfAdminSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfAdminSTATUS.setStatus('mandatory')
nwAtFwdIfOperSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfOperSTATUS.setStatus('mandatory')
nwAtFwdIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfOperationalTime.setStatus('mandatory')
nwAtFwdIfControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("add", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfControl.setStatus('mandatory')
nwAtFwdIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfMtu.setStatus('mandatory')
nwAtFwdIfForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfForwarding.setStatus('mandatory')
nwAtFwdIfFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 8, 9, 11, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("snap", 3), ("nativewan", 8), ("encapenet", 9), ("encapenetsnap", 11), ("encapfddisnap", 16), ("canonical", 17))).clone('snap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfFrameType.setStatus('mandatory')
nwAtFwdIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfAclIdentifier.setStatus('mandatory')
nwAtFwdIfAclSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfAclSTATUS.setStatus('mandatory')
nwAtFwdIfCacheControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfCacheControl.setStatus('mandatory')
nwAtFwdIfCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCacheEntries.setStatus('mandatory')
nwAtFwdIfCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCacheHits.setStatus('mandatory')
nwAtFwdIfCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCacheMisses.setStatus('mandatory')
nwAtportTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2), )
if mibBuilder.loadTexts: nwAtportTable.setStatus('mandatory')
nwAtportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtportIndex"))
if mibBuilder.loadTexts: nwAtportEntry.setStatus('mandatory')
nwAtportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtportIndex.setStatus('mandatory')
nwAtportDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportDescr.setStatus('mandatory')
nwAtportType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("other", 1), ("localtalk", 2), ("ethertalk1", 3), ("ethertalk2", 4), ("tokentalk", 5), ("iptalk", 6), ("serialPPP", 7), ("serialNonstandard", 8), ("virtual", 9), ("fdditalk", 10), ("arctalk", 11), ("smdstalk", 12), ("aurp", 13), ("frameRelay", 14), ("x25", 15), ("ip", 16), ("osi", 17), ("decnetIV", 18), ("arap", 19), ("isdnInThePacketMode", 20), ("nonAppleTalk3Com", 21), ("ipx", 22), ("arns", 23), ("hdlc", 24)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportType.setStatus('mandatory')
nwAtportNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 4), AtNetworkNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportNetStart.setStatus('mandatory')
nwAtportNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 5), AtNetworkNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportNetEnd.setStatus('mandatory')
nwAtportNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 6), AtDdpNodeAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportNetAddress.setStatus('mandatory')
nwAtportSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("routing", 1), ("unconfigured", 2), ("off", 3), ("invalid", 4), ("endNode", 5), ("offDueToConflict", 6), ("other", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportSTATUS.setStatus('mandatory')
nwAtportNetConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("conflictOrientedSeed", 1), ("garnered", 2), ("guessed", 3), ("unconfigured", 4), ("conflictAverseSeed", 5), ("softSeed", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportNetConfig.setStatus('mandatory')
nwAtportZoneConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("conflictOrientedSeed", 1), ("garnered", 2), ("guessed", 3), ("unconfigured", 4), ("conflictAverseSeed", 5), ("softSeed", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportZoneConfig.setStatus('mandatory')
nwAtportZoneDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 10), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportZoneDefault.setStatus('mandatory')
nwAtportIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportIfIndex.setStatus('mandatory')
nwAtportNetFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 12), AtDdpNodeAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtportNetFrom.setStatus('mandatory')
nwAtportZoneFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 13), AtDdpNodeAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtportZoneFrom.setStatus('mandatory')
nwAtportInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtportInPkts.setStatus('mandatory')
nwAtportOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtportOutPkts.setStatus('mandatory')
nwAtportHome = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("home", 1), ("notHome", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtportHome.setStatus('mandatory')
nwAtportCurrentZone = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 17), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportCurrentZone.setStatus('mandatory')
nwAtportConflictPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 1, 2, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtportConflictPhysAddr.setStatus('mandatory')
nwAtFwdIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1), )
if mibBuilder.loadTexts: nwAtFwdIfCtrTable.setStatus('mandatory')
nwAtFwdIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtFwdIfCtrIfIndex"))
if mibBuilder.loadTexts: nwAtFwdIfCtrEntry.setStatus('mandatory')
nwAtFwdIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrIfIndex.setStatus('mandatory')
nwAtFwdIfCtrAdminSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfCtrAdminSTATUS.setStatus('mandatory')
nwAtFwdIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtFwdIfCtrReset.setStatus('mandatory')
nwAtFwdIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrOperationalTime.setStatus('mandatory')
nwAtFwdIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrInPkts.setStatus('mandatory')
nwAtFwdIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrOutPkts.setStatus('mandatory')
nwAtFwdIfCtrFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrFwdPkts.setStatus('mandatory')
nwAtFwdIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrFilteredPkts.setStatus('mandatory')
nwAtFwdIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrDiscardPkts.setStatus('mandatory')
nwAtFwdIfCtrAddrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrAddrErrPkts.setStatus('mandatory')
nwAtFwdIfCtrLenErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrLenErrPkts.setStatus('mandatory')
nwAtFwdIfCtrHdrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrHdrErrPkts.setStatus('mandatory')
nwAtFwdIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrInBytes.setStatus('mandatory')
nwAtFwdIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrOutBytes.setStatus('mandatory')
nwAtFwdIfCtrFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrFwdBytes.setStatus('mandatory')
nwAtFwdIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrFilteredBytes.setStatus('mandatory')
nwAtFwdIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrDiscardBytes.setStatus('mandatory')
nwAtFwdIfCtrHostInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrHostInPkts.setStatus('mandatory')
nwAtFwdIfCtrHostOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrHostOutPkts.setStatus('mandatory')
nwAtFwdIfCtrHostDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrHostDiscardPkts.setStatus('mandatory')
nwAtFwdIfCtrHostInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrHostInBytes.setStatus('mandatory')
nwAtFwdIfCtrHostOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrHostOutBytes.setStatus('mandatory')
nwAtFwdIfCtrHostDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 2, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFwdIfCtrHostDiscardBytes.setStatus('mandatory')
nwAtProtoAdminSTATUS = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoAdminSTATUS.setStatus('mandatory')
nwAtProtoOperSTATUS = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoOperSTATUS.setStatus('mandatory')
nwAtProtoAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoAdminReset.setStatus('mandatory')
nwAtProtoOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoOperationalTime.setStatus('mandatory')
nwAtProtoVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoVersion.setStatus('mandatory')
nwAtProtoStackSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoStackSize.setStatus('mandatory')
nwAtProtoThreadPriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoThreadPriority.setStatus('mandatory')
nwAtProtoDatabaseThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoDatabaseThreshold.setStatus('mandatory')
nwAtProtoAgeOut = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoAgeOut.setStatus('mandatory')
nwAtProtoHoldDown = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoHoldDown.setStatus('mandatory')
nwAtProtoCtrAdminSTATUS = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoCtrAdminSTATUS.setStatus('mandatory')
nwAtProtoCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoCtrReset.setStatus('mandatory')
nwAtProtoCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoCtrOperationalTime.setStatus('mandatory')
nwAtProtoCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoCtrInPkts.setStatus('mandatory')
nwAtProtoCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoCtrOutPkts.setStatus('mandatory')
nwAtProtoCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoCtrFilteredPkts.setStatus('mandatory')
nwAtProtoCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoCtrDiscardPkts.setStatus('mandatory')
nwAtProtoCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoCtrInBytes.setStatus('mandatory')
nwAtProtoCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoCtrOutBytes.setStatus('mandatory')
nwAtProtoCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoCtrFilteredBytes.setStatus('mandatory')
nwAtProtoCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoCtrDiscardBytes.setStatus('mandatory')
nwAtProtoIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: nwAtProtoIfTable.setStatus('mandatory')
nwAtProtoIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtProtoIfIndex"))
if mibBuilder.loadTexts: nwAtProtoIfEntry.setStatus('mandatory')
nwAtProtoIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfIndex.setStatus('mandatory')
nwAtProtoIfAdminSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfAdminSTATUS.setStatus('mandatory')
nwAtProtoIfOperSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfOperSTATUS.setStatus('mandatory')
nwAtProtoIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfOperationalTime.setStatus('mandatory')
nwAtProtoIfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfVersion.setStatus('mandatory')
nwAtProtoIfAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 6), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfAdvertisement.setStatus('mandatory')
nwAtProtoIfFloodDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfFloodDelay.setStatus('mandatory')
nwAtProtoIfRequestDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfRequestDelay.setStatus('mandatory')
nwAtProtoIfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfPriority.setStatus('mandatory')
nwAtProtoIfHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfHelloTimer.setStatus('mandatory')
nwAtProtoIfSplitHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfSplitHorizon.setStatus('mandatory')
nwAtProtoIfPoisonReverse = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfPoisonReverse.setStatus('mandatory')
nwAtProtoIfSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfSnooping.setStatus('mandatory')
nwAtProtoIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bma", 2), ("nbma", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfType.setStatus('mandatory')
nwAtProtoIfXmitCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfXmitCost.setStatus('mandatory')
nwAtProtoIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfAclIdentifier.setStatus('mandatory')
nwAtProtoIfAclSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfAclSTATUS.setStatus('mandatory')
nwAtProtoIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: nwAtProtoIfCtrTable.setStatus('mandatory')
nwAtProtoIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtProtoIfCtrIfIndex"))
if mibBuilder.loadTexts: nwAtProtoIfCtrEntry.setStatus('mandatory')
nwAtProtoIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrIfIndex.setStatus('mandatory')
nwAtProtoIfCtrAdminSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfCtrAdminSTATUS.setStatus('mandatory')
nwAtProtoIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtProtoIfCtrReset.setStatus('mandatory')
nwAtProtoIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrOperationalTime.setStatus('mandatory')
nwAtProtoIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrInPkts.setStatus('mandatory')
nwAtProtoIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrOutPkts.setStatus('mandatory')
nwAtProtoIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrFilteredPkts.setStatus('mandatory')
nwAtProtoIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrDiscardPkts.setStatus('mandatory')
nwAtProtoIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrInBytes.setStatus('mandatory')
nwAtProtoIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrOutBytes.setStatus('mandatory')
nwAtProtoIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrFilteredBytes.setStatus('mandatory')
nwAtProtoIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 4, 1, 1, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtProtoIfCtrDiscardBytes.setStatus('mandatory')
nwAtFibTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 5, 1), )
if mibBuilder.loadTexts: nwAtFibTable.setStatus('mandatory')
nwAtFibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 5, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtFibStartNet"))
if mibBuilder.loadTexts: nwAtFibEntry.setStatus('mandatory')
nwAtFibStartNet = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 5, 1, 1, 1), AtNetworkNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFibStartNet.setStatus('mandatory')
nwAtFibEndNet = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 5, 1, 1, 2), AtNetworkNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFibEndNet.setStatus('mandatory')
nwAtFibNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 5, 1, 1, 3), AtDdpNodeAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFibNextHop.setStatus('mandatory')
nwAtFibNextHopIf = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFibNextHopIf.setStatus('mandatory')
nwAtFibHops = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFibHops.setStatus('mandatory')
nwAtFibRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("appleTalk", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtFibRouteType.setStatus('mandatory')
nwAtHostsTimeToLive = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostsTimeToLive.setStatus('mandatory')
nwAtHostsRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostsRetryCount.setStatus('mandatory')
nwAtHostCtlTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1), )
if mibBuilder.loadTexts: nwAtHostCtlTable.setStatus('mandatory')
nwAtHostCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtHostCtlIfIndex"))
if mibBuilder.loadTexts: nwAtHostCtlEntry.setStatus('mandatory')
nwAtHostCtlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostCtlIfIndex.setStatus('mandatory')
nwAtHostCtlAdminSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostCtlAdminSTATUS.setStatus('mandatory')
nwAtHostCtlOperSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostCtlOperSTATUS.setStatus('mandatory')
nwAtHostCtlOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostCtlOperationalTime.setStatus('mandatory')
nwAtHostCtlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostCtlProtocol.setStatus('mandatory')
nwAtHostCtlSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostCtlSnooping.setStatus('mandatory')
nwAtHostCtlProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostCtlProxy.setStatus('mandatory')
nwAtHostCtlCacheMax = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostCtlCacheMax.setStatus('mandatory')
nwAtHostCtlCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostCtlCacheSize.setStatus('mandatory')
nwAtHostCtlNumStatics = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostCtlNumStatics.setStatus('mandatory')
nwAtHostCtlNumDynamics = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostCtlNumDynamics.setStatus('mandatory')
nwAtHostCtlCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostCtlCacheHits.setStatus('mandatory')
nwAtHostCtlCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostCtlCacheMisses.setStatus('mandatory')
nwAtAclValidEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtAclValidEntries.setStatus('mandatory')
nwAtAclTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7, 2), )
if mibBuilder.loadTexts: nwAtAclTable.setStatus('mandatory')
nwAtAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7, 2, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtAclIdentifier"), (0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtAclSequence"))
if mibBuilder.loadTexts: nwAtAclEntry.setStatus('mandatory')
nwAtAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtAclIdentifier.setStatus('mandatory')
nwAtAclSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtAclSequence.setStatus('mandatory')
nwAtAclPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permit", 3), ("deny", 4), ("permit-bidirectional", 5), ("deny-bidirectional", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtAclPermission.setStatus('mandatory')
nwAtAclMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtAclMatches.setStatus('mandatory')
nwAtAclDestZone = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7, 2, 1, 5), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtAclDestZone.setStatus('mandatory')
nwAtAclSrcZone = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 7, 2, 1, 6), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtAclSrcZone.setStatus('mandatory')
nwAtEventAdminSTATUS = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtEventAdminSTATUS.setStatus('mandatory')
nwAtEventMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtEventMaxEntries.setStatus('mandatory')
nwAtEventTraceAll = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtEventTraceAll.setStatus('mandatory')
nwAtEventFilterTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 2, 1), )
if mibBuilder.loadTexts: nwAtEventFilterTable.setStatus('mandatory')
nwAtEventFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 2, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtEventFltrProtocol"), (0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtEventFltrIfNum"))
if mibBuilder.loadTexts: nwAtEventFilterEntry.setStatus('mandatory')
nwAtEventFltrProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtEventFltrProtocol.setStatus('mandatory')
nwAtEventFltrIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtEventFltrIfNum.setStatus('mandatory')
nwAtEventFltrControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("delete", 2), ("add", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtEventFltrControl.setStatus('mandatory')
nwAtEventFltrType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("error", 32)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtEventFltrType.setStatus('mandatory')
nwAtEventFltrSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtEventFltrSeverity.setStatus('mandatory')
nwAtEventFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("log", 1), ("trap", 2), ("log-trap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtEventFltrAction.setStatus('mandatory')
nwAtEventTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3, 1), )
if mibBuilder.loadTexts: nwAtEventTable.setStatus('mandatory')
nwAtEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtEventNumber"))
if mibBuilder.loadTexts: nwAtEventEntry.setStatus('mandatory')
nwAtEventNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtEventNumber.setStatus('mandatory')
nwAtEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtEventTime.setStatus('mandatory')
nwAtEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("error", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtEventType.setStatus('mandatory')
nwAtEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtEventSeverity.setStatus('mandatory')
nwAtEventProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtEventProtocol.setStatus('mandatory')
nwAtEventIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtEventIfNum.setStatus('mandatory')
nwAtEventTextString = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 10, 3, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtEventTextString.setStatus('mandatory')
nwAtNetDiagOutboundNetAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 1), AtDdpNodeAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundNetAddress.setStatus('mandatory')
nwAtNetDiagOutboundPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundPort.setStatus('mandatory')
nwAtNetDiagOutboundTimeout = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundTimeout.setStatus('mandatory')
nwAtNetDiagOutboundRetries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundRetries.setStatus('mandatory')
nwAtNetDiagOutboundATEchoType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("sendEchoRequest", 2), ("other", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundATEchoType.setStatus('mandatory')
nwAtNetDiagOutboundATEchoStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inactive", 1), ("inProgress", 2), ("timeout", 3), ("success", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundATEchoStatus.setStatus('mandatory')
nwAtNetDiagOutboundNBPEntityObject = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 7), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundNBPEntityObject.setStatus('mandatory')
nwAtNetDiagOutboundNBPEntityType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 8), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundNBPEntityType.setStatus('mandatory')
nwAtNetDiagOutboundNBPEntityZone = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 9), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundNBPEntityZone.setStatus('mandatory')
nwAtNetDiagOutboundNBPType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("noAction", 1), ("localRequest", 2), ("lookupMcast", 3), ("lookupBcast", 4), ("lookupDirect", 5), ("bcastRequestBcast", 6), ("bcastRequestDirect", 7), ("forwardRequestBcast", 8), ("forwardRequestDirect", 9), ("other", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundNBPType.setStatus('mandatory')
nwAtNetDiagOutboundNBPStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("inProgress", 2), ("done", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundNBPStatus.setStatus('mandatory')
nwAtNetDiagOutboundRTMPType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("noAction", 1), ("sendRequest", 2), ("bcastRequest", 3), ("sendRDRequestSplitHorizon", 4), ("bcastRDRequestSplitHorizon", 5), ("sendRDRequestFullTable", 6), ("bcastRDRequestFullTable", 7), ("other", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundRTMPType.setStatus('mandatory')
nwAtNetDiagOutboundRTMPStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("inProgress", 2), ("done", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundRTMPStatus.setStatus('mandatory')
nwAtNetDiagOutboundRTMPNetStart = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 14), AtNetworkNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundRTMPNetStart.setStatus('mandatory')
nwAtNetDiagOutboundRTMPNetEnd = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 15), AtNetworkNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundRTMPNetEnd.setStatus('mandatory')
nwAtNetDiagOutboundZIPType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("noAction", 1), ("sendQuery", 2), ("bcastQuery", 3), ("sendGetZonesList", 4), ("sendGetLocalZones", 5), ("sendGetMyZone", 6), ("sendGetNetInfo", 7), ("bcastGetNetInfo", 8), ("other", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundZIPType.setStatus('mandatory')
nwAtNetDiagOutboundZIPStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inactive", 1), ("queryInProgress", 2), ("atpInProgress", 3), ("gniInProgress", 4), ("done", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundZIPStatus.setStatus('mandatory')
nwAtNetDiagOutboundZIPQueryNet = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 18), AtNetworkNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundZIPQueryNet.setStatus('mandatory')
nwAtNetDiagOutboundZIPQueryZone = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 19), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundZIPQueryZone.setStatus('mandatory')
nwAtNetDiagOutboundZIPGetNetInfoZone = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 20), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundZIPGetNetInfoZone.setStatus('mandatory')
nwAtNetDiagOutboundZIPGetNetInfoNetStart = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 21), AtNetworkNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundZIPGetNetInfoNetStart.setStatus('mandatory')
nwAtNetDiagOutboundZIPGetNetInfoNetEnd = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 22), AtNetworkNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundZIPGetNetInfoNetEnd.setStatus('mandatory')
nwAtNetDiagOutboundZIPGetNetInfoMulticast = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 23), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundZIPGetNetInfoMulticast.setStatus('mandatory')
nwAtNetDiagOutboundZIPGetNetInfoDefaultZone = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 12, 3, 24), AtName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtNetDiagOutboundZIPGetNetInfoDefaultZone.setStatus('mandatory')
nwAtportZoneTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 4, 1), )
if mibBuilder.loadTexts: nwAtportZoneTable.setStatus('mandatory')
nwAtportZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 4, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtportZonePort"), (0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtportZoneName"))
if mibBuilder.loadTexts: nwAtportZoneEntry.setStatus('mandatory')
nwAtportZonePort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtportZonePort.setStatus('mandatory')
nwAtportZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 4, 1, 1, 2), AtName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtportZoneName.setStatus('mandatory')
nwAtportZoneStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtportZoneStatus.setStatus('mandatory')
nwAtHostMapTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3, 1), )
if mibBuilder.loadTexts: nwAtHostMapTable.setStatus('mandatory')
nwAtHostMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3, 1, 1), ).setIndexNames((0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtHostMapIfIndex"), (0, "CTRON-AppleTalk-ROUTER-MIB", "nwAtHostMapAtAddr"))
if mibBuilder.loadTexts: nwAtHostMapEntry.setStatus('mandatory')
nwAtHostMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostMapIfIndex.setStatus('mandatory')
nwAtHostMapAtAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3, 1, 1, 2), AtDdpNodeAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostMapAtAddr.setStatus('mandatory')
nwAtHostMapPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3, 1, 1, 3), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostMapPhysAddr.setStatus('mandatory')
nwAtHostMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4), ("inactive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostMapType.setStatus('mandatory')
nwAtHostMapCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostMapCircuitID.setStatus('mandatory')
nwAtHostMapFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 8, 9, 11, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("snap", 3), ("nativewan", 8), ("encapenet", 9), ("encapenetsnap", 11), ("encapfddisnap", 16), ("canonical", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAtHostMapFraming.setStatus('mandatory')
nwAtHostMapPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 4, 2, 6, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAtHostMapPortNumber.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-AppleTalk-ROUTER-MIB", nwAtEventTraceAll=nwAtEventTraceAll, nwAtRedirector=nwAtRedirector, nwAtSysAdministration=nwAtSysAdministration, nwAtFwdCtrAdminSTATUS=nwAtFwdCtrAdminSTATUS, nwAtProtoIfCtrTable=nwAtProtoIfCtrTable, nwAtEventNumber=nwAtEventNumber, nwAtFwdCtrInPkts=nwAtFwdCtrInPkts, nwAtNetDiagOutboundZIPGetNetInfoDefaultZone=nwAtNetDiagOutboundZIPGetNetInfoDefaultZone, nwAtProtoIfAdminSTATUS=nwAtProtoIfAdminSTATUS, nwAtHostCtlProtocol=nwAtHostCtlProtocol, nwAtSysOperSTATUS=nwAtSysOperSTATUS, nwAtMibs=nwAtMibs, nwAtFwdIfCtrIfIndex=nwAtFwdIfCtrIfIndex, nwAtSysRouterId=nwAtSysRouterId, nwAtProtoIfPriority=nwAtProtoIfPriority, nwAtFibHops=nwAtFibHops, nwAtHostCtlNumDynamics=nwAtHostCtlNumDynamics, nwAtNetDiagOutboundATEchoStatus=nwAtNetDiagOutboundATEchoStatus, nwAtProtoDatabaseThreshold=nwAtProtoDatabaseThreshold, nwAtProtoIfSnooping=nwAtProtoIfSnooping, nwAtAclEntry=nwAtAclEntry, nwAtFibTable=nwAtFibTable, nwAtportZonePort=nwAtportZonePort, nwAtProtoSystem=nwAtProtoSystem, nwAtportZoneName=nwAtportZoneName, nwAtFwdCtrFwdPkts=nwAtFwdCtrFwdPkts, nwAtProtoIfXmitCost=nwAtProtoIfXmitCost, nwAtFwdCtrHostOutPkts=nwAtFwdCtrHostOutPkts, nwAtHostMapFraming=nwAtHostMapFraming, nwAtFwdIfCacheMisses=nwAtFwdIfCacheMisses, nwRtrExperimental=nwRtrExperimental, nwAtProtoIfAclIdentifier=nwAtProtoIfAclIdentifier, nwAtProtoIfVersion=nwAtProtoIfVersion, nwAtProtoIfCtrDiscardBytes=nwAtProtoIfCtrDiscardBytes, nwAtFibStartNet=nwAtFibStartNet, nwAtAclIdentifier=nwAtAclIdentifier, nwAtFwdIfAclIdentifier=nwAtFwdIfAclIdentifier, nwAtFwdSystem=nwAtFwdSystem, nwAtProtoAdminReset=nwAtProtoAdminReset, nwAtportNetEnd=nwAtportNetEnd, nwAtHostCtlOperSTATUS=nwAtHostCtlOperSTATUS, nwAtFwdIfCtrReset=nwAtFwdIfCtrReset, nwAtProtoCtrDiscardBytes=nwAtProtoCtrDiscardBytes, nwAtFwdIfOperationalTime=nwAtFwdIfOperationalTime, nwAtEventMaxEntries=nwAtEventMaxEntries, nwAtNetDiagOutboundNBPEntityType=nwAtNetDiagOutboundNBPEntityType, nwAtNetDiagOutboundNBPEntityZone=nwAtNetDiagOutboundNBPEntityZone, nwAtProto=nwAtProto, nwAtFwdIfCtrOutPkts=nwAtFwdIfCtrOutPkts, nwAtportType=nwAtportType, nwAtportInPkts=nwAtportInPkts, nwAtNetDiagOutboundRetries=nwAtNetDiagOutboundRetries, nwAtNetDiagOutboundRTMPNetStart=nwAtNetDiagOutboundRTMPNetStart, nwAtFwdIfCtrLenErrPkts=nwAtFwdIfCtrLenErrPkts, nwAtMibRevText=nwAtMibRevText, nwAtHostCtlNumStatics=nwAtHostCtlNumStatics, nwAtEventSeverity=nwAtEventSeverity, nwAtFwdIfMtu=nwAtFwdIfMtu, nwAtForwarding=nwAtForwarding, nwAtFwdCtrOperationalTime=nwAtFwdCtrOperationalTime, nwAtEventFltrSeverity=nwAtEventFltrSeverity, nwAtNetDiagOutboundZIPGetNetInfoNetEnd=nwAtNetDiagOutboundZIPGetNetInfoNetEnd, nwAtFwdCtrDiscardBytes=nwAtFwdCtrDiscardBytes, nwAtFwdIfCtrAdminSTATUS=nwAtFwdIfCtrAdminSTATUS, nwAtHostCtlIfIndex=nwAtHostCtlIfIndex, nwAtNetDiagOutboundZIPGetNetInfoZone=nwAtNetDiagOutboundZIPGetNetInfoZone, nwAtFwdCtrOutPkts=nwAtFwdCtrOutPkts, nwAtEventType=nwAtEventType, nwAtFwdIfCacheEntries=nwAtFwdIfCacheEntries, nwAtportTable=nwAtportTable, nwAtEventLogConfig=nwAtEventLogConfig, nwAtFwdIfCtrTable=nwAtFwdIfCtrTable, nwAtProtoIfSplitHorizon=nwAtProtoIfSplitHorizon, nwAtFwdIfAdminSTATUS=nwAtFwdIfAdminSTATUS, nwAtFwdIfTable=nwAtFwdIfTable, nwAtFilters=nwAtFilters, nwAtHostMapCircuitID=nwAtHostMapCircuitID, nwAtHostCtlCacheMax=nwAtHostCtlCacheMax, nwAtFwdIfCtrFwdPkts=nwAtFwdIfCtrFwdPkts, nwAtNetDiagOutboundNetAddress=nwAtNetDiagOutboundNetAddress, nwAtportNetConfig=nwAtportNetConfig, nwAtEventLogFilterTable=nwAtEventLogFilterTable, nwAtProtoIfCtrInBytes=nwAtProtoIfCtrInBytes, nwAtProtoCtrFilteredBytes=nwAtProtoCtrFilteredBytes, nwAtFwdIfCtrHostOutBytes=nwAtFwdIfCtrHostOutBytes, nwAtNetDiagOutboundATEchoType=nwAtNetDiagOutboundATEchoType, nwAtFwdCtrHdrErrPkts=nwAtFwdCtrHdrErrPkts, nwAtProtoCounters=nwAtProtoCounters, nwAtportDescr=nwAtportDescr, nwAtHostMapTable=nwAtHostMapTable, nwAtProtoIfConfig=nwAtProtoIfConfig, nwAtProtoVersion=nwAtProtoVersion, nwAtProtoHoldDown=nwAtProtoHoldDown, nwAtHostCtlProxy=nwAtHostCtlProxy, nwAtHostMapAtAddr=nwAtHostMapAtAddr, nwAtFwdIfConfig=nwAtFwdIfConfig, nwAtFwdIfCtrDiscardBytes=nwAtFwdIfCtrDiscardBytes, nwAtNetDiagOutboundZIPStatus=nwAtNetDiagOutboundZIPStatus, nwAtFwdIfCacheControl=nwAtFwdIfCacheControl, nwAtFwdIfCtrFwdBytes=nwAtFwdIfCtrFwdBytes, AtName=AtName, nwAtProtoIfFloodDelay=nwAtProtoIfFloodDelay, nwAtFwdIfCtrHdrErrPkts=nwAtFwdIfCtrHdrErrPkts, nwAtFwdCtrInBytes=nwAtFwdCtrInBytes, nwAtFwdIfCtrHostDiscardBytes=nwAtFwdIfCtrHostDiscardBytes, nwAtEventTable=nwAtEventTable, nwAtFwdCtrAddrErrPkts=nwAtFwdCtrAddrErrPkts, nwAtProtoIfPoisonReverse=nwAtProtoIfPoisonReverse, nwAtProtoIfCtrDiscardPkts=nwAtProtoIfCtrDiscardPkts, nwAtProtoCtrReset=nwAtProtoCtrReset, nwAtEndSystems=nwAtEndSystems, nwAtFwdIfOperSTATUS=nwAtFwdIfOperSTATUS, nwAtFwdIfCtrOperationalTime=nwAtFwdIfCtrOperationalTime, nwAtProtoConfig=nwAtProtoConfig, nwAtProtoAgeOut=nwAtProtoAgeOut, nwAtFwdCounters=nwAtFwdCounters, nwAtNetDiagOutboundNBPEntityObject=nwAtNetDiagOutboundNBPEntityObject, nwAtHostsInterfaces=nwAtHostsInterfaces, nwAtTopology=nwAtTopology, nwAtEvent=nwAtEvent, nwAtFwdIfCtrHostInBytes=nwAtFwdIfCtrHostInBytes, nwAtEventFilterEntry=nwAtEventFilterEntry, nwAtEventIfNum=nwAtEventIfNum, nwAtNetDiagOutboundZIPType=nwAtNetDiagOutboundZIPType, nwAtHostCtlEntry=nwAtHostCtlEntry, nwAtFwdCtrFilteredPkts=nwAtFwdCtrFilteredPkts, nwAtNetDiagOutboundTimeout=nwAtNetDiagOutboundTimeout, nwAtHostsSystem=nwAtHostsSystem, nwAtProtoIfCounters=nwAtProtoIfCounters, nwAtportCurrentZone=nwAtportCurrentZone, nwAtEventFltrAction=nwAtEventFltrAction, nwAtEventTextString=nwAtEventTextString, nwAtEventAdminSTATUS=nwAtEventAdminSTATUS, nwAtEventProtocol=nwAtEventProtocol, nwAtFwdCtrFilteredBytes=nwAtFwdCtrFilteredBytes, AtDdpNodeAddress=AtDdpNodeAddress, nwAtProtoIfCtrEntry=nwAtProtoIfCtrEntry, nwAtNetDiagOutboundZIPQueryNet=nwAtNetDiagOutboundZIPQueryNet, nwAtFwdIfIndex=nwAtFwdIfIndex, nwAtFibEntry=nwAtFibEntry, nwAtProtoCtrAdminSTATUS=nwAtProtoCtrAdminSTATUS, nwAtProtoIfCtrFilteredBytes=nwAtProtoIfCtrFilteredBytes, nwAtSysAdminSTATUS=nwAtSysAdminSTATUS, nwAtProtoIfCtrFilteredPkts=nwAtProtoIfCtrFilteredPkts, nwAtHostMapPortNumber=nwAtHostMapPortNumber, nwAtportZoneFrom=nwAtportZoneFrom, nwAtProtoIfOperSTATUS=nwAtProtoIfOperSTATUS, nwAtAclDestZone=nwAtAclDestZone, nwAtportZoneTable=nwAtportZoneTable, nwAtProtoIfAdvertisement=nwAtProtoIfAdvertisement, AtNetworkNumber=AtNetworkNumber, nwAtFwdIfFrameType=nwAtFwdIfFrameType, nwAtHostCtlCacheSize=nwAtHostCtlCacheSize, nwAtFwdCtrHostDiscardPkts=nwAtFwdCtrHostDiscardPkts, nwAtProtoIfRequestDelay=nwAtProtoIfRequestDelay, nwAtNetDiagOutboundZIPQueryZone=nwAtNetDiagOutboundZIPQueryZone, nwAtFwdIfCacheHits=nwAtFwdIfCacheHits, nwAtHostCtlAdminSTATUS=nwAtHostCtlAdminSTATUS, nwAtProtoIfEntry=nwAtProtoIfEntry, nwAtHostCtlSnooping=nwAtHostCtlSnooping, nwAtFibEndNet=nwAtFibEndNet, nwAtAclSrcZone=nwAtAclSrcZone, nwAtAclSequence=nwAtAclSequence, nwAtSysOperationalTime=nwAtSysOperationalTime, nwAtLinkState=nwAtLinkState, nwAtportHome=nwAtportHome, nwAtProtoIfType=nwAtProtoIfType, nwAtProtoCtrFilteredPkts=nwAtProtoCtrFilteredPkts, nwAtHostMapEntry=nwAtHostMapEntry, nwAtportIndex=nwAtportIndex, nwAtProtoCtrDiscardPkts=nwAtProtoCtrDiscardPkts, nwAtNetDiagOutboundRTMPType=nwAtNetDiagOutboundRTMPType, nwAtProtoIfCtrIfIndex=nwAtProtoIfCtrIfIndex, nwAtFwdIfCtrInBytes=nwAtFwdIfCtrInBytes, nwAtNetDiagOutboundPort=nwAtNetDiagOutboundPort, nwAtHostsToMedia=nwAtHostsToMedia, nwAtFwdCtrOutBytes=nwAtFwdCtrOutBytes, nwAtFwdCtrHostDiscardBytes=nwAtFwdCtrHostDiscardBytes, nwAtHostCtlTable=nwAtHostCtlTable, nwAtFwdIfCtrAddrErrPkts=nwAtFwdIfCtrAddrErrPkts, nwAtFwdIfCtrOutBytes=nwAtFwdIfCtrOutBytes, nwAtFwdIfCtrInPkts=nwAtFwdIfCtrInPkts, nwAtSystem=nwAtSystem, nwAtFwdIfCtrEntry=nwAtFwdIfCtrEntry, nwAtProtoCtrInPkts=nwAtProtoCtrInPkts, nwAtHostCtlCacheMisses=nwAtHostCtlCacheMisses, nwAtNetDiagOutboundZIPGetNetInfoMulticast=nwAtNetDiagOutboundZIPGetNetInfoMulticast, nwAtEventTime=nwAtEventTime, nwAtFwdIfCounters=nwAtFwdIfCounters, nwAtportConflictPhysAddr=nwAtportConflictPhysAddr, nwAtNetDiagOutboundRTMPNetEnd=nwAtNetDiagOutboundRTMPNetEnd, nwAtSysVersion=nwAtSysVersion, nwAtProtoIfCtrOutBytes=nwAtProtoIfCtrOutBytes, nwAtportNetAddress=nwAtportNetAddress, nwAtRouter=nwAtRouter, nwAtSysAdminReset=nwAtSysAdminReset, nwAtFwdIfCtrHostInPkts=nwAtFwdIfCtrHostInPkts, nwAtAclValidEntries=nwAtAclValidEntries, nwAtProtoAdminSTATUS=nwAtProtoAdminSTATUS, nwAtEventFltrProtocol=nwAtEventFltrProtocol, nwAtNetDiagOutboundZIPGetNetInfoNetStart=nwAtNetDiagOutboundZIPGetNetInfoNetStart, nwAtFwdIfAclSTATUS=nwAtFwdIfAclSTATUS, nwAtProtoIfOperationalTime=nwAtProtoIfOperationalTime, nwAtProtoIfCtrAdminSTATUS=nwAtProtoIfCtrAdminSTATUS, nwAtHostsTimeToLive=nwAtHostsTimeToLive, nwAtAccessControl=nwAtAccessControl, nwAtportZoneDefault=nwAtportZoneDefault, nwAtFibRouteType=nwAtFibRouteType, nwAtEventFltrType=nwAtEventFltrType, nwAtportNetStart=nwAtportNetStart, nwAtportZoneStatus=nwAtportZoneStatus, nwAtHostMapIfIndex=nwAtHostMapIfIndex, nwAtProtoIfCtrInPkts=nwAtProtoIfCtrInPkts, nwAtFib=nwAtFib, nwAtFwdInterfaces=nwAtFwdInterfaces, nwAtFwdCtrDiscardPkts=nwAtFwdCtrDiscardPkts, nwAtProtoOperSTATUS=nwAtProtoOperSTATUS, nwAtProtoIfCtrOperationalTime=nwAtProtoIfCtrOperationalTime, nwAtEventFilterTable=nwAtEventFilterTable, nwAtportEntry=nwAtportEntry, nwAtNetDiagOutboundNBPType=nwAtNetDiagOutboundNBPType, nwAtHostsRetryCount=nwAtHostsRetryCount, nwAtProtoIfCtrReset=nwAtProtoIfCtrReset, nwAtFwdCtrReset=nwAtFwdCtrReset, nwAtAclTable=nwAtAclTable, nwAtFwdIfEntry=nwAtFwdIfEntry, nwAtAclPermission=nwAtAclPermission, nwAtportSTATUS=nwAtportSTATUS, nwAtportIfIndex=nwAtportIfIndex, nwAtNetDiagOutbound=nwAtNetDiagOutbound, nwAtFibNextHop=nwAtFibNextHop, nwAtNetDiag=nwAtNetDiag, nwAtWorkGroup=nwAtWorkGroup, nwAtFwdIfCtrHostDiscardPkts=nwAtFwdIfCtrHostDiscardPkts, nwAtFwdCtrHostOutBytes=nwAtFwdCtrHostOutBytes, nwAtFwdCtrHostInBytes=nwAtFwdCtrHostInBytes, nwAtProtoIfAclSTATUS=nwAtProtoIfAclSTATUS, nwAtFibNextHopIf=nwAtFibNextHopIf, nwAtHostCtlOperationalTime=nwAtHostCtlOperationalTime, nwAtProtoIfTable=nwAtProtoIfTable, nwAtportNetFrom=nwAtportNetFrom, nwAtEventFltrControl=nwAtEventFltrControl, nwAtProtoInterface=nwAtProtoInterface, nwAtProtoIfHelloTimer=nwAtProtoIfHelloTimer, nwAtEventEntry=nwAtEventEntry, nwAtProtoCtrOutBytes=nwAtProtoCtrOutBytes, nwAtHostMapType=nwAtHostMapType, nwAtNetDiagOutboundRTMPStatus=nwAtNetDiagOutboundRTMPStatus, nwAtEventLogTable=nwAtEventLogTable, nwAtProtoIfIndex=nwAtProtoIfIndex, nwAtFwdIfForwarding=nwAtFwdIfForwarding, nwAtProtoStackSize=nwAtProtoStackSize, nwAtProtoCtrOperationalTime=nwAtProtoCtrOperationalTime, nwAtNetDiagTelnet=nwAtNetDiagTelnet)
mibBuilder.exportSymbols("CTRON-AppleTalk-ROUTER-MIB", nwAtFwdIfControl=nwAtFwdIfControl, nwAtportZoneConfig=nwAtportZoneConfig, nwAtFwdCtrHostInPkts=nwAtFwdCtrHostInPkts, nwAtFwdIfCtrHostOutPkts=nwAtFwdIfCtrHostOutPkts, nwAtSysConfig=nwAtSysConfig, nwAtAclMatches=nwAtAclMatches, nwAtFwdIfCtrFilteredPkts=nwAtFwdIfCtrFilteredPkts, nwAtProtoCtrOutPkts=nwAtProtoCtrOutPkts, nwAtProtoThreadPriority=nwAtProtoThreadPriority, nwAtHostMapPhysAddr=nwAtHostMapPhysAddr, nwAtComponents=nwAtComponents, nwAtProtoOperationalTime=nwAtProtoOperationalTime, nwAtHostCtlCacheHits=nwAtHostCtlCacheHits, nwAtProtoIfCtrOutPkts=nwAtProtoIfCtrOutPkts, nwAtFwdIfCtrFilteredBytes=nwAtFwdIfCtrFilteredBytes, nwAtProtoCtrInBytes=nwAtProtoCtrInBytes, nwAtNetDiagOutboundNBPStatus=nwAtNetDiagOutboundNBPStatus, nwAtportZoneEntry=nwAtportZoneEntry, nwAtFwdIfCtrDiscardPkts=nwAtFwdIfCtrDiscardPkts, nwAtFwdCtrFwdBytes=nwAtFwdCtrFwdBytes, nwAtEventFltrIfNum=nwAtEventFltrIfNum, nwAtFwdCtrLenErrPkts=nwAtFwdCtrLenErrPkts, nwAtDistanceVector=nwAtDistanceVector, nwAtNetDiagPing=nwAtNetDiagPing, nwAtportOutPkts=nwAtportOutPkts)
