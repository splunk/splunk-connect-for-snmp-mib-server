#
# PySNMP MIB module IPX-RIP-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IPX-RIP-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:45:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
cjnProtocol, = mibBuilder.importSymbols("Cajun-ROOT", "cjnProtocol")
cjnIpxIfIndex, = mibBuilder.importSymbols("IPX-INTERFACE-MANAGEMENT-PRIVATE-MIB", "cjnIpxIfIndex")
NetNumber, = mibBuilder.importSymbols("IPX-PRIVATE-MIB", "NetNumber")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Bits, Unsigned32, Counter64, MibIdentifier, iso, Gauge32, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "Unsigned32", "Counter64", "MibIdentifier", "iso", "Gauge32", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "Integer32", "ModuleIdentity")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
cjnIpxRip = ModuleIdentity((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20))
if mibBuilder.loadTexts: cjnIpxRip.setLastUpdated('9904010000Z')
if mibBuilder.loadTexts: cjnIpxRip.setOrganization("Lucent's Concord Technology Center (CTC)")
class FilterPrec(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 9999)

cjnIpxRipGlobalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 1))
cjnIpxRipEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpxRipEnabled.setStatus('current')
cjnIpxRipFilterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2))
cjnIpxRipFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1), )
if mibBuilder.loadTexts: cjnIpxRipFilterTable.setStatus('current')
cjnIpxRipFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1, 1), ).setIndexNames((0, "IPX-INTERFACE-MANAGEMENT-PRIVATE-MIB", "cjnIpxIfIndex"), (0, "IPX-RIP-PRIVATE-MIB", "cjnIpxRipFilterPrec"))
if mibBuilder.loadTexts: cjnIpxRipFilterEntry.setStatus('current')
cjnIpxRipFilterPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1, 1, 1), FilterPrec()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnIpxRipFilterPrec.setStatus('current')
cjnIpxRipFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipFilterRowStatus.setStatus('current')
cjnIpxRipFilterNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1, 1, 3), NetNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipFilterNetStart.setStatus('current')
cjnIpxRipFilterNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1, 1, 4), NetNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipFilterNetEnd.setStatus('current')
cjnIpxRipFilterDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipFilterDirection.setStatus('current')
cjnIpxRipFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("filter", 1), ("allow", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipFilterAction.setStatus('current')
cjnIpxRipFilterTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipFilterTicks.setStatus('current')
cjnIpxRipFilterHops = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 2, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipFilterHops.setStatus('current')
cjnIpxRipIfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3))
cjnIpxRipIfTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1), )
if mibBuilder.loadTexts: cjnIpxRipIfTable.setStatus('current')
cjnIpxRipIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1, 1), ).setIndexNames((0, "IPX-INTERFACE-MANAGEMENT-PRIVATE-MIB", "cjnIpxIfIndex"))
if mibBuilder.loadTexts: cjnIpxRipIfEntry.setStatus('current')
cjnIpxRipIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipIfRowStatus.setStatus('current')
cjnIpxRipIfInterpacketGap = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipIfInterpacketGap.setStatus('current')
cjnIpxRipIfUseMaximumPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipIfUseMaximumPacketSize.setStatus('current')
cjnIpxRipIfUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1, 1, 4), Integer32().clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipIfUpdateInterval.setStatus('current')
cjnIpxRipIfAgeMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1, 1, 5), Integer32().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipIfAgeMultiplier.setStatus('current')
cjnIpxRipIfTriggeredUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipIfTriggeredUpdates.setStatus('current')
cjnIpxRipIfAdvertiseDefaultRouteOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipIfAdvertiseDefaultRouteOnly.setStatus('current')
cjnIpxRipIfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("talk", 1), ("listen", 2), ("both", 3))).clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpxRipIfMode.setStatus('current')
cjnIpxRipIfStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 4))
cjnIpxRipIfStatTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 4, 1), )
if mibBuilder.loadTexts: cjnIpxRipIfStatTable.setStatus('current')
cjnIpxRipIfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 4, 1, 1), ).setIndexNames((0, "IPX-INTERFACE-MANAGEMENT-PRIVATE-MIB", "cjnIpxIfIndex"))
if mibBuilder.loadTexts: cjnIpxRipIfStatEntry.setStatus('current')
cjnIpxRipIfStatTriggeredUpdatesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnIpxRipIfStatTriggeredUpdatesSent.setStatus('current')
cjnIpxRipIfStatPeriodicUpdatesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnIpxRipIfStatPeriodicUpdatesSent.setStatus('current')
cjnIpxRipIfStatUpdatesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnIpxRipIfStatUpdatesReceived.setStatus('current')
cjnIpxRipIfStatRequestsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnIpxRipIfStatRequestsReceived.setStatus('current')
cjnIpxRipIfStatBadPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnIpxRipIfStatBadPacketsReceived.setStatus('current')
cjnIpxRipIfStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 20, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpxRipIfStatsReset.setStatus('current')
mibBuilder.exportSymbols("IPX-RIP-PRIVATE-MIB", cjnIpxRipFilterNetStart=cjnIpxRipFilterNetStart, cjnIpxRipIfRowStatus=cjnIpxRipIfRowStatus, cjnIpxRipIfStatEntry=cjnIpxRipIfStatEntry, cjnIpxRipIfStatBadPacketsReceived=cjnIpxRipIfStatBadPacketsReceived, cjnIpxRip=cjnIpxRip, cjnIpxRipIfStatTable=cjnIpxRipIfStatTable, cjnIpxRipIfAgeMultiplier=cjnIpxRipIfAgeMultiplier, cjnIpxRipIfGroup=cjnIpxRipIfGroup, cjnIpxRipFilterTicks=cjnIpxRipFilterTicks, cjnIpxRipFilterGroup=cjnIpxRipFilterGroup, cjnIpxRipFilterEntry=cjnIpxRipFilterEntry, cjnIpxRipFilterTable=cjnIpxRipFilterTable, cjnIpxRipEnabled=cjnIpxRipEnabled, cjnIpxRipFilterDirection=cjnIpxRipFilterDirection, cjnIpxRipFilterHops=cjnIpxRipFilterHops, cjnIpxRipIfInterpacketGap=cjnIpxRipIfInterpacketGap, cjnIpxRipIfAdvertiseDefaultRouteOnly=cjnIpxRipIfAdvertiseDefaultRouteOnly, cjnIpxRipIfTriggeredUpdates=cjnIpxRipIfTriggeredUpdates, cjnIpxRipIfStatTriggeredUpdatesSent=cjnIpxRipIfStatTriggeredUpdatesSent, cjnIpxRipIfStatPeriodicUpdatesSent=cjnIpxRipIfStatPeriodicUpdatesSent, cjnIpxRipIfUseMaximumPacketSize=cjnIpxRipIfUseMaximumPacketSize, cjnIpxRipGlobalGroup=cjnIpxRipGlobalGroup, cjnIpxRipIfStatUpdatesReceived=cjnIpxRipIfStatUpdatesReceived, PYSNMP_MODULE_ID=cjnIpxRip, cjnIpxRipFilterNetEnd=cjnIpxRipFilterNetEnd, cjnIpxRipIfTable=cjnIpxRipIfTable, FilterPrec=FilterPrec, cjnIpxRipFilterRowStatus=cjnIpxRipFilterRowStatus, cjnIpxRipIfStatGroup=cjnIpxRipIfStatGroup, cjnIpxRipIfUpdateInterval=cjnIpxRipIfUpdateInterval, cjnIpxRipIfStatsReset=cjnIpxRipIfStatsReset, cjnIpxRipFilterAction=cjnIpxRipFilterAction, cjnIpxRipIfEntry=cjnIpxRipIfEntry, cjnIpxRipIfMode=cjnIpxRipIfMode, cjnIpxRipIfStatRequestsReceived=cjnIpxRipIfStatRequestsReceived, cjnIpxRipFilterPrec=cjnIpxRipFilterPrec)
