#
# PySNMP MIB module BGP4-V2-MIB-JUNIPER (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BGP4-V2-MIB-JUNIPER
# Produced by pysmi-0.3.4 at Mon Apr 29 17:20:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
InetAddressType, InetAutonomousSystemNumber, InetAddressPrefixLength, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAutonomousSystemNumber", "InetAddressPrefixLength", "InetAddress", "InetPortNumber")
jnxBgpM2Experiment, = mibBuilder.importSymbols("JUNIPER-EXPERIMENT-MIB", "jnxBgpM2Experiment")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, Unsigned32, Integer32, TimeTicks, Counter32, IpAddress, Gauge32, iso, MibIdentifier, ObjectIdentity, Counter64, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "Integer32", "TimeTicks", "Counter32", "IpAddress", "Gauge32", "iso", "MibIdentifier", "ObjectIdentity", "Counter64", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, RowPointer, DisplayString, StorageType, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowPointer", "DisplayString", "StorageType", "TruthValue", "RowStatus")
jnxBgpM2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1))
jnxBgpM2.setRevisions(('2012-12-17 00:00', '2003-09-09 15:08', '2002-11-04 00:00',))
if mibBuilder.loadTexts: jnxBgpM2.setLastUpdated('200309091508Z')
if mibBuilder.loadTexts: jnxBgpM2.setOrganization('IETF IDR Working Group')
class JnxBgpM2Identifier(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1d.'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class JnxBgpM2Safi(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class JnxBgpM2Community(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2d:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class JnxBgpM2ExtendedCommunity(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

jnxBgpM2BaseScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1))
jnxBgpM2BaseNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 0))
jnxBgpM2Established = NotificationType((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 0, 1)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalAddrType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalAddr"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemoteAddrType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemoteAddr"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorReceived"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerState"))
if mibBuilder.loadTexts: jnxBgpM2Established.setStatus('current')
jnxBgpM2BackwardTransition = NotificationType((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 0, 2)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalAddrType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalAddr"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemoteAddrType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemoteAddr"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorReceived"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorReceivedText"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerState"))
if mibBuilder.loadTexts: jnxBgpM2BackwardTransition.setStatus('current')
jnxBgpM2Version = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 1))
jnxBgpM2VersionTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 1, 1), )
if mibBuilder.loadTexts: jnxBgpM2VersionTable.setStatus('current')
jnxBgpM2VersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 1, 1, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2VersionIndex"))
if mibBuilder.loadTexts: jnxBgpM2VersionEntry.setStatus('current')
jnxBgpM2VersionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2VersionIndex.setStatus('current')
jnxBgpM2VersionSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2VersionSupported.setStatus('current')
jnxBgpM2SupportedAuthentication = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 2))
jnxBgpM2SupportedAuthTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: jnxBgpM2SupportedAuthTable.setStatus('current')
jnxBgpM2SupportedAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2SupportedAuthCode"))
if mibBuilder.loadTexts: jnxBgpM2SupportedAuthEntry.setStatus('current')
jnxBgpM2SupportedAuthCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2SupportedAuthCode.setStatus('current')
jnxBgpM2SupportedAuthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2SupportedAuthValue.setStatus('current')
jnxBgpM2SupportedCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 3))
jnxBgpM2CapabilitySupportAvailable = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 3, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2CapabilitySupportAvailable.setStatus('current')
jnxBgpM2SupportedCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 3, 2), )
if mibBuilder.loadTexts: jnxBgpM2SupportedCapabilitiesTable.setStatus('current')
jnxBgpM2SupportedCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 3, 2, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2SupportedCapabilityCode"))
if mibBuilder.loadTexts: jnxBgpM2SupportedCapabilitiesEntry.setStatus('current')
jnxBgpM2SupportedCapabilityCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2SupportedCapabilityCode.setStatus('current')
jnxBgpM2SupportedCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 3, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2SupportedCapability.setStatus('current')
jnxBgpM2AsSize = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("twoOctet", 1), ("fourOctet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsSize.setStatus('current')
jnxBgpM2LocalAs = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 5), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2LocalAs.setStatus('current')
jnxBgpM2LocalIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 6), JnxBgpM2Identifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2LocalIdentifier.setStatus('current')
jnxBgpM2BaseScalarExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 7))
jnxBgpM2BaseScalarNonCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 7, 1))
jnxBgpM2BaseScalarCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 7, 2))
jnxBgpM2BaseScalarRouteReflectExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 7, 1, 2796))
jnxBgpM2RouteReflector = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 7, 1, 2796, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2RouteReflector.setStatus('current')
jnxBgpM2ClusterId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 7, 1, 2796, 2), JnxBgpM2Identifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2ClusterId.setStatus('current')
jnxBgpM2BaseScalarASConfedExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 7, 1, 3065))
jnxBgpM2ConfederationRouter = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 7, 1, 3065, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2ConfederationRouter.setStatus('current')
jnxBgpM2ConfederationId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 7, 1, 3065, 2), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2ConfederationId.setStatus('current')
jnxBgpM2BaseScalarConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8))
jnxBgpM2CfgBaseScalarStorageType = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 1), StorageType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxBgpM2CfgBaseScalarStorageType.setStatus('current')
jnxBgpM2CfgLocalAs = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 2), InetAutonomousSystemNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxBgpM2CfgLocalAs.setStatus('current')
jnxBgpM2CfgLocalIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 3), JnxBgpM2Identifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxBgpM2CfgLocalIdentifier.setStatus('current')
jnxBgpM2CfgBaseScalarExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 4))
jnxBgpM2CfgBaseScalarNonCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 4, 1))
jnxBgpM2CfgBaseScalarCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 4, 2))
jnxBgpM2CfgBaseScalarReflectorExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 4, 1, 2796))
jnxBgpM2CfgRouteReflector = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 4, 1, 2796, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxBgpM2CfgRouteReflector.setStatus('current')
jnxBgpM2CfgClusterId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 4, 1, 2796, 2), JnxBgpM2Identifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxBgpM2CfgClusterId.setStatus('current')
jnxBgpM2CfgBaseScalarASConfedExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 4, 1, 3065))
jnxBgpM2CfgConfederationRouter = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 4, 1, 3065, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxBgpM2CfgConfederationRouter.setStatus('current')
jnxBgpM2CfgConfederationId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 1, 8, 4, 1, 3065, 2), InetAutonomousSystemNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxBgpM2CfgConfederationId.setStatus('current')
jnxBgpM2Peer = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2))
jnxBgpM2PeerData = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1))
jnxBgpM2PeerTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: jnxBgpM2PeerTable.setStatus('current')
jnxBgpM2PeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRoutingInstance"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalAddrType"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalAddr"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemoteAddrType"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemoteAddr"))
if mibBuilder.loadTexts: jnxBgpM2PeerEntry.setStatus('current')
jnxBgpM2PeerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 1), JnxBgpM2Identifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerIdentifier.setStatus('current')
jnxBgpM2PeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("opensent", 4), ("openconfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerState.setStatus('current')
jnxBgpM2PeerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("halted", 1), ("running", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerStatus.setStatus('current')
jnxBgpM2PeerConfiguredVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerConfiguredVersion.setStatus('current')
jnxBgpM2PeerNegotiatedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerNegotiatedVersion.setStatus('current')
jnxBgpM2PeerLocalAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLocalAddrType.setStatus('current')
jnxBgpM2PeerLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 7), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLocalAddr.setStatus('current')
jnxBgpM2PeerLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 8), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLocalPort.setStatus('current')
jnxBgpM2PeerLocalAs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 9), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLocalAs.setStatus('current')
jnxBgpM2PeerRemoteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerRemoteAddrType.setStatus('current')
jnxBgpM2PeerRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 11), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerRemoteAddr.setStatus('current')
jnxBgpM2PeerRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 12), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerRemotePort.setStatus('current')
jnxBgpM2PeerRemoteAs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 13), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerRemoteAs.setStatus('current')
jnxBgpM2PeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerIndex.setStatus('current')
jnxBgpM2PeerRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 1, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerRoutingInstance.setStatus('current')
jnxBgpM2PeerErrors = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2))
jnxBgpM2PeerErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: jnxBgpM2PeerErrorsTable.setStatus('current')
jnxBgpM2PeerErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1, 1), )
jnxBgpM2PeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerErrorsEntry"))
jnxBgpM2PeerErrorsEntry.setIndexNames(*jnxBgpM2PeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2PeerErrorsEntry.setStatus('current')
jnxBgpM2PeerLastErrorReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLastErrorReceived.setStatus('current')
jnxBgpM2PeerLastErrorSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLastErrorSent.setStatus('current')
jnxBgpM2PeerLastErrorReceivedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLastErrorReceivedTime.setStatus('current')
jnxBgpM2PeerLastErrorSentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLastErrorSentTime.setStatus('current')
jnxBgpM2PeerLastErrorReceivedText = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLastErrorReceivedText.setStatus('current')
jnxBgpM2PeerLastErrorSentText = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLastErrorSentText.setStatus('current')
jnxBgpM2PeerLastErrorReceivedData = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4075))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLastErrorReceivedData.setStatus('current')
jnxBgpM2PeerLastErrorSentData = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 2, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4075))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerLastErrorSentData.setStatus('current')
jnxBgpM2PeerAuthentication = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 3))
jnxBgpM2PeerAuthTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 3, 1), )
if mibBuilder.loadTexts: jnxBgpM2PeerAuthTable.setStatus('current')
jnxBgpM2PeerAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 3, 1, 1), )
jnxBgpM2PeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerAuthEntry"))
jnxBgpM2PeerAuthEntry.setIndexNames(*jnxBgpM2PeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2PeerAuthEntry.setStatus('current')
jnxBgpM2PeerAuthSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerAuthSent.setStatus('current')
jnxBgpM2PeerAuthSentCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerAuthSentCode.setStatus('current')
jnxBgpM2PeerAuthSentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 252))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerAuthSentValue.setStatus('current')
jnxBgpM2PeerAuthRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 3, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerAuthRcvd.setStatus('current')
jnxBgpM2PeerAuthRcvdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 3, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerAuthRcvdCode.setStatus('current')
jnxBgpM2PeerAuthRcvdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 252))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerAuthRcvdValue.setStatus('current')
jnxBgpM2PeerTimers = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4))
jnxBgpM2PeerEventTimesTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 1), )
if mibBuilder.loadTexts: jnxBgpM2PeerEventTimesTable.setStatus('current')
jnxBgpM2PeerEventTimesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 1, 1), )
jnxBgpM2PeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerEventTimesEntry"))
jnxBgpM2PeerEventTimesEntry.setIndexNames(*jnxBgpM2PeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2PeerEventTimesEntry.setStatus('current')
jnxBgpM2PeerFsmEstablishedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerFsmEstablishedTime.setStatus('current')
jnxBgpM2PeerInUpdatesElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerInUpdatesElapsedTime.setStatus('current')
jnxBgpM2PeerConfiguredTimersTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 2), )
if mibBuilder.loadTexts: jnxBgpM2PeerConfiguredTimersTable.setStatus('current')
jnxBgpM2PeerConfiguredTimersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 2, 1), )
jnxBgpM2PeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerConfiguredTimersEntry"))
jnxBgpM2PeerConfiguredTimersEntry.setIndexNames(*jnxBgpM2PeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2PeerConfiguredTimersEntry.setStatus('current')
jnxBgpM2PeerConnectRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerConnectRetryInterval.setStatus('current')
jnxBgpM2PeerHoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerHoldTimeConfigured.setStatus('current')
jnxBgpM2PeerKeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerKeepAliveConfigured.setStatus('current')
jnxBgpM2PeerMinASOrigInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerMinASOrigInterval.setStatus('current')
jnxBgpM2PeerMinRouteAdverInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerMinRouteAdverInterval.setStatus('current')
jnxBgpM2PeerNegotiatedTimersTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 3), )
if mibBuilder.loadTexts: jnxBgpM2PeerNegotiatedTimersTable.setStatus('current')
jnxBgpM2PeerNegotiatedTimersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 3, 1), )
jnxBgpM2PeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerNegotiatedTimersEntry"))
jnxBgpM2PeerNegotiatedTimersEntry.setIndexNames(*jnxBgpM2PeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2PeerNegotiatedTimersEntry.setStatus('current')
jnxBgpM2PeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerHoldTime.setStatus('current')
jnxBgpM2PeerKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 4, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerKeepAlive.setStatus('current')
jnxBgpM2PeerCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5))
jnxBgpM2PeerCapsAnnouncedTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 1), )
if mibBuilder.loadTexts: jnxBgpM2PeerCapsAnnouncedTable.setStatus('current')
jnxBgpM2PeerCapsAnnouncedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 1, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapAnnouncedCode"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapAnnouncedIndex"))
if mibBuilder.loadTexts: jnxBgpM2PeerCapsAnnouncedEntry.setStatus('current')
jnxBgpM2PeerCapAnnouncedCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerCapAnnouncedCode.setStatus('current')
jnxBgpM2PeerCapAnnouncedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerCapAnnouncedIndex.setStatus('current')
jnxBgpM2PeerCapAnnouncedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerCapAnnouncedValue.setStatus('current')
jnxBgpM2PeerCapsReceivedTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 2), )
if mibBuilder.loadTexts: jnxBgpM2PeerCapsReceivedTable.setStatus('current')
jnxBgpM2PeerCapsReceivedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 2, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapReceivedCode"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapReceivedIndex"))
if mibBuilder.loadTexts: jnxBgpM2PeerCapsReceivedEntry.setStatus('current')
jnxBgpM2PeerCapReceivedCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerCapReceivedCode.setStatus('current')
jnxBgpM2PeerCapReceivedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerCapReceivedIndex.setStatus('current')
jnxBgpM2PeerCapReceivedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 5, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerCapReceivedValue.setStatus('current')
jnxBgpM2PeerCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6))
jnxBgpM2PeerCountersTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 1), )
if mibBuilder.loadTexts: jnxBgpM2PeerCountersTable.setStatus('current')
jnxBgpM2PeerCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 1, 1), )
jnxBgpM2PeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCountersEntry"))
jnxBgpM2PeerCountersEntry.setIndexNames(*jnxBgpM2PeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2PeerCountersEntry.setStatus('current')
jnxBgpM2PeerInUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerInUpdates.setStatus('current')
jnxBgpM2PeerOutUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerOutUpdates.setStatus('current')
jnxBgpM2PeerInTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerInTotalMessages.setStatus('current')
jnxBgpM2PeerOutTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerOutTotalMessages.setStatus('current')
jnxBgpM2PeerFsmEstablishedTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerFsmEstablishedTrans.setStatus('current')
jnxBgpM2PrefixCountersTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 2), )
if mibBuilder.loadTexts: jnxBgpM2PrefixCountersTable.setStatus('current')
jnxBgpM2PrefixCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 2, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PrefixCountersAfi"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PrefixCountersSafi"))
if mibBuilder.loadTexts: jnxBgpM2PrefixCountersEntry.setStatus('current')
jnxBgpM2PrefixCountersAfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 2, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PrefixCountersAfi.setStatus('current')
jnxBgpM2PrefixCountersSafi = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 2, 1, 2), JnxBgpM2Safi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PrefixCountersSafi.setStatus('current')
jnxBgpM2PrefixInPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PrefixInPrefixes.setStatus('current')
jnxBgpM2PrefixInPrefixesAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PrefixInPrefixesAccepted.setStatus('current')
jnxBgpM2PrefixInPrefixesRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PrefixInPrefixesRejected.setStatus('current')
jnxBgpM2PrefixOutPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PrefixOutPrefixes.setStatus('current')
jnxBgpM2PrefixInPrefixesActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 6, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PrefixInPrefixesActive.setStatus('current')
jnxBgpM2PeerExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7))
jnxBgpM2PeerNonCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 1))
jnxBgpM2PeerCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 2))
jnxBgpM2PeerRouteReflectionExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 1, 2796))
jnxBgpM2PeerReflectorClientTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 1, 2796, 1), )
if mibBuilder.loadTexts: jnxBgpM2PeerReflectorClientTable.setStatus('current')
jnxBgpM2PeerReflectorClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 1, 2796, 1, 1), )
jnxBgpM2PeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerReflectorClientEntry"))
jnxBgpM2PeerReflectorClientEntry.setIndexNames(*jnxBgpM2PeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2PeerReflectorClientEntry.setStatus('current')
jnxBgpM2PeerReflectorClient = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 1, 2796, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("nonClient", 0), ("client", 1), ("meshedClient", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerReflectorClient.setStatus('current')
jnxBgpM2PeerASConfederationExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 1, 3065))
jnxBgpM2PeerConfedMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 1, 3065, 1), )
if mibBuilder.loadTexts: jnxBgpM2PeerConfedMemberTable.setStatus('current')
jnxBgpM2PeerConfedMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 1, 3065, 1, 1), )
jnxBgpM2PeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerConfedMemberEntry"))
jnxBgpM2PeerConfedMemberEntry.setIndexNames(*jnxBgpM2PeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2PeerConfedMemberEntry.setStatus('current')
jnxBgpM2PeerConfedMember = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 7, 1, 3065, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PeerConfedMember.setStatus('current')
jnxBgpM2PeerConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8))
jnxBgpM2CfgPeerAdminStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 1), )
if mibBuilder.loadTexts: jnxBgpM2CfgPeerAdminStatusTable.setStatus('current')
jnxBgpM2CfgPeerAdminStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 1, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerIndex"))
if mibBuilder.loadTexts: jnxBgpM2CfgPeerAdminStatusEntry.setStatus('current')
jnxBgpM2CfgPeerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stop", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerAdminStatus.setStatus('current')
jnxBgpM2CfgPeerNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerNextIndex.setStatus('current')
jnxBgpM2CfgPeerTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3), )
if mibBuilder.loadTexts: jnxBgpM2CfgPeerTable.setStatus('current')
jnxBgpM2CfgPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerIndex"))
if mibBuilder.loadTexts: jnxBgpM2CfgPeerEntry.setStatus('current')
jnxBgpM2CfgPeerConfiguredVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerConfiguredVersion.setStatus('current')
jnxBgpM2CfgAllowVersionNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgAllowVersionNegotiation.setStatus('current')
jnxBgpM2CfgPeerLocalAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerLocalAddrType.setStatus('current')
jnxBgpM2CfgPeerLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 4), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerLocalAddr.setStatus('current')
jnxBgpM2CfgPeerLocalAs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 5), InetAutonomousSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerLocalAs.setStatus('current')
jnxBgpM2CfgPeerRemoteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerRemoteAddrType.setStatus('current')
jnxBgpM2CfgPeerRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 7), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerRemoteAddr.setStatus('current')
jnxBgpM2CfgPeerRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 65535), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerRemotePort.setStatus('current')
jnxBgpM2CfgPeerRemoteAs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 9), InetAutonomousSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerRemoteAs.setStatus('current')
jnxBgpM2CfgPeerEntryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 10), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerEntryStorageType.setStatus('current')
jnxBgpM2CfgPeerError = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("notActivated", 1), ("errDuplicatePeeringSession", 2), ("activated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerError.setStatus('current')
jnxBgpM2CfgPeerBgpPeerEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 12), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerBgpPeerEntry.setStatus('current')
jnxBgpM2CfgPeerRowEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerRowEntryStatus.setStatus('current')
jnxBgpM2CfgPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: jnxBgpM2CfgPeerIndex.setStatus('current')
jnxBgpM2CfgPeerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("halted", 1), ("running", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerStatus.setStatus('current')
jnxBgpM2CfgPeerRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 3, 1, 16), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerRoutingInstance.setStatus('current')
jnxBgpM2CfgPeerAuthTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 4), )
if mibBuilder.loadTexts: jnxBgpM2CfgPeerAuthTable.setStatus('current')
jnxBgpM2CfgPeerAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 4, 1), )
jnxBgpM2CfgPeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerAuthEntry"))
jnxBgpM2CfgPeerAuthEntry.setIndexNames(*jnxBgpM2CfgPeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2CfgPeerAuthEntry.setStatus('current')
jnxBgpM2CfgPeerAuthEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerAuthEnabled.setStatus('current')
jnxBgpM2CfgPeerAuthCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerAuthCode.setStatus('current')
jnxBgpM2CfgPeerAuthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 252))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerAuthValue.setStatus('current')
jnxBgpM2CfgPeerTimersTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 5), )
if mibBuilder.loadTexts: jnxBgpM2CfgPeerTimersTable.setStatus('current')
jnxBgpM2CfgPeerTimersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 5, 1), )
jnxBgpM2CfgPeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerTimersEntry"))
jnxBgpM2CfgPeerTimersEntry.setIndexNames(*jnxBgpM2CfgPeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2CfgPeerTimersEntry.setStatus('current')
jnxBgpM2CfgPeerConnectRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(120)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerConnectRetryInterval.setStatus('current')
jnxBgpM2CfgPeerHoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), )).clone(90)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerHoldTimeConfigured.setStatus('current')
jnxBgpM2CfgPeerKeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), )).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerKeepAliveConfigured.setStatus('current')
jnxBgpM2CfgPeerMinASOrigInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerMinASOrigInterval.setStatus('current')
jnxBgpM2CfgPeerMinRouteAdverInter = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerMinRouteAdverInter.setStatus('current')
jnxBgpM2CfgPeerExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6))
jnxBgpM2CfgPeerNonCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 1))
jnxBgpM2CfgPeerCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 2))
jnxBgpM2CfgPeerRouteReflectionExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 1, 2796))
jnxBgpM2CfgPeerReflectorClientTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 1, 2796, 1), )
if mibBuilder.loadTexts: jnxBgpM2CfgPeerReflectorClientTable.setStatus('current')
jnxBgpM2CfgPeerReflectorClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 1, 2796, 1, 1), )
jnxBgpM2CfgPeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerReflectorClientEntry"))
jnxBgpM2CfgPeerReflectorClientEntry.setIndexNames(*jnxBgpM2CfgPeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2CfgPeerReflectorClientEntry.setStatus('current')
jnxBgpM2CfgPeerReflectorClient = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 1, 2796, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("nonClient", 0), ("client", 1), ("meshedClient", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerReflectorClient.setStatus('current')
jnxBgpM2CfgPeerASConfederationExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 1, 3065))
jnxBgpM2CfgPeerConfedMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 1, 3065, 1), )
if mibBuilder.loadTexts: jnxBgpM2CfgPeerConfedMemberTable.setStatus('current')
jnxBgpM2CfgPeerConfedMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 1, 3065, 1, 1), )
jnxBgpM2CfgPeerEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerConfedMemberEntry"))
jnxBgpM2CfgPeerConfedMemberEntry.setIndexNames(*jnxBgpM2CfgPeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2CfgPeerConfedMemberEntry.setStatus('current')
jnxBgpM2CfgPeerConfedMember = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 2, 8, 6, 1, 3065, 1, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxBgpM2CfgPeerConfedMember.setStatus('current')
jnxBgpM2Rib = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3))
jnxBgpM2NlriTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1), )
if mibBuilder.loadTexts: jnxBgpM2NlriTable.setStatus('current')
jnxBgpM2NlriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriAfi"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriSafi"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriPrefix"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriPrefixLen"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriIndex"))
if mibBuilder.loadTexts: jnxBgpM2NlriEntry.setStatus('current')
jnxBgpM2NlriIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2NlriIndex.setStatus('current')
jnxBgpM2NlriAfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2NlriAfi.setStatus('current')
jnxBgpM2NlriSafi = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 3), JnxBgpM2Safi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2NlriSafi.setStatus('current')
jnxBgpM2NlriPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 4), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2NlriPrefix.setStatus('current')
jnxBgpM2NlriPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 5), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2NlriPrefixLen.setStatus('current')
jnxBgpM2NlriBest = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2NlriBest.setStatus('current')
jnxBgpM2NlriCalcLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2NlriCalcLocalPref.setStatus('current')
jnxBgpM2PathAttrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrIndex.setStatus('current')
jnxBgpM2NlriOpaqueType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("bgpMplsLabelStack", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2NlriOpaqueType.setStatus('current')
jnxBgpM2NlriOpaquePointer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 1, 1, 10), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2NlriOpaquePointer.setStatus('current')
jnxBgpM2AdjRibsOutTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 2), )
if mibBuilder.loadTexts: jnxBgpM2AdjRibsOutTable.setStatus('current')
jnxBgpM2AdjRibsOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 2, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriAfi"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriSafi"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriPrefix"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriPrefixLen"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2AdjRibsOutIndex"))
if mibBuilder.loadTexts: jnxBgpM2AdjRibsOutEntry.setStatus('current')
jnxBgpM2AdjRibsOutIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AdjRibsOutIndex.setStatus('current')
jnxBgpM2AdjRibsOutRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 2, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AdjRibsOutRoute.setStatus('current')
jnxBgpM2PathAttrCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrCount.setStatus('current')
jnxBgpM2PathAttrTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4), )
if mibBuilder.loadTexts: jnxBgpM2PathAttrTable.setStatus('current')
jnxBgpM2PathAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrIndex"))
if mibBuilder.loadTexts: jnxBgpM2PathAttrEntry.setStatus('current')
jnxBgpM2PathAttrOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrOrigin.setStatus('current')
jnxBgpM2PathAttrNextHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrNextHopAddrType.setStatus('current')
jnxBgpM2PathAttrNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrNextHop.setStatus('current')
jnxBgpM2PathAttrMedPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrMedPresent.setStatus('current')
jnxBgpM2PathAttrMed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrMed.setStatus('current')
jnxBgpM2PathAttrLocalPrefPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrLocalPrefPresent.setStatus('current')
jnxBgpM2PathAttrLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrLocalPref.setStatus('current')
jnxBgpM2PathAttrAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("atomicAggregatePresent", 1), ("atomicAggregateMissing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrAtomicAggregate.setStatus('current')
jnxBgpM2PathAttrAggregatorAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 9), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrAggregatorAS.setStatus('current')
jnxBgpM2PathAttrAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 10), JnxBgpM2Identifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrAggregatorAddr.setStatus('current')
jnxBgpM2AsPathCalcLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPathCalcLength.setStatus('current')
jnxBgpM2AsPathString = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPathString.setStatus('current')
jnxBgpM2AsPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 4, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPathIndex.setStatus('current')
jnxBgpM2AsPath4byteTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 5), )
if mibBuilder.loadTexts: jnxBgpM2AsPath4byteTable.setStatus('current')
jnxBgpM2AsPath4byteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 5, 1), )
jnxBgpM2PathAttrEntry.registerAugmentions(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPath4byteEntry"))
jnxBgpM2AsPath4byteEntry.setIndexNames(*jnxBgpM2PathAttrEntry.getIndexNames())
if mibBuilder.loadTexts: jnxBgpM2AsPath4byteEntry.setStatus('current')
jnxBgpM2AsPath4bytePathPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 5, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPath4bytePathPresent.setStatus('current')
jnxBgpM2AsPath4byteAggregatorAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 5, 1, 2), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPath4byteAggregatorAS.setStatus('current')
jnxBgpM2AsPath4byteCalcLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPath4byteCalcLength.setStatus('current')
jnxBgpM2AsPath4byteString = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 5, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPath4byteString.setStatus('current')
jnxBgpM2AsPath4byteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPath4byteIndex.setStatus('current')
jnxBgpM2AsPathTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 6), )
if mibBuilder.loadTexts: jnxBgpM2AsPathTable.setStatus('current')
jnxBgpM2AsPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 6, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathSegmentIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathElementIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathElementValue"))
if mibBuilder.loadTexts: jnxBgpM2AsPathEntry.setStatus('current')
jnxBgpM2AsPathSegmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPathSegmentIndex.setStatus('current')
jnxBgpM2AsPathElementIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPathElementIndex.setStatus('current')
jnxBgpM2AsPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("asSet", 1), ("asSequence", 2), ("confedSequence", 3), ("confedSet", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPathType.setStatus('current')
jnxBgpM2AsPathElementValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 6, 1, 4), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2AsPathElementValue.setStatus('current')
jnxBgpM2PathAttrUnknownTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 7), )
if mibBuilder.loadTexts: jnxBgpM2PathAttrUnknownTable.setStatus('current')
jnxBgpM2PathAttrUnknownEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 7, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrUnknownIndex"))
if mibBuilder.loadTexts: jnxBgpM2PathAttrUnknownEntry.setStatus('current')
jnxBgpM2PathAttrUnknownIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrUnknownIndex.setStatus('current')
jnxBgpM2PathAttrUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 7, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrUnknownType.setStatus('current')
jnxBgpM2PathAttrUnknownValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4070))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrUnknownValue.setStatus('current')
jnxBgpM2PathAttrExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8))
jnxBgpM2PathAttrNonCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1))
jnxBgpM2PathAttrCapExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 2))
jnxBgpM2PathAttrRouteReflectionExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2796))
jnxBgpM2PathAttrOriginatorIdTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2796, 1), )
if mibBuilder.loadTexts: jnxBgpM2PathAttrOriginatorIdTable.setStatus('current')
jnxBgpM2PathAttrOriginatorIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2796, 1, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrIndex"))
if mibBuilder.loadTexts: jnxBgpM2PathAttrOriginatorIdEntry.setStatus('current')
jnxBgpM2PathAttrOriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2796, 1, 1, 1), JnxBgpM2Identifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrOriginatorId.setStatus('current')
jnxBgpM2PathAttrClusterTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2796, 2), )
if mibBuilder.loadTexts: jnxBgpM2PathAttrClusterTable.setStatus('current')
jnxBgpM2PathAttrClusterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2796, 2, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrClusterIndex"))
if mibBuilder.loadTexts: jnxBgpM2PathAttrClusterEntry.setStatus('current')
jnxBgpM2PathAttrClusterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2796, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrClusterIndex.setStatus('current')
jnxBgpM2PathAttrClusterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2796, 2, 1, 2), JnxBgpM2Identifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrClusterValue.setStatus('current')
jnxBgpM2PathAttrCommunityExts = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 1997))
jnxBgpM2PathAttrCommTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 1997, 1), )
if mibBuilder.loadTexts: jnxBgpM2PathAttrCommTable.setStatus('current')
jnxBgpM2PathAttrCommEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 1997, 1, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrCommIndex"))
if mibBuilder.loadTexts: jnxBgpM2PathAttrCommEntry.setStatus('current')
jnxBgpM2PathAttrCommIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 1997, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrCommIndex.setStatus('current')
jnxBgpM2PathAttrCommValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 1997, 1, 1, 2), JnxBgpM2Community()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrCommValue.setStatus('current')
jnxBgpM2PathAttrExtCommTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 65001), )
if mibBuilder.loadTexts: jnxBgpM2PathAttrExtCommTable.setStatus('current')
jnxBgpM2PathAttrExtCommEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 65001, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrIndex"), (0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrExtCommIndex"))
if mibBuilder.loadTexts: jnxBgpM2PathAttrExtCommEntry.setStatus('current')
jnxBgpM2PathAttrExtCommIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 65001, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrExtCommIndex.setStatus('current')
jnxBgpM2PathAttrExtCommValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 65001, 1, 2), JnxBgpM2ExtendedCommunity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2PathAttrExtCommValue.setStatus('current')
jnxBgpM2LinkLocalNextHopTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2545), )
if mibBuilder.loadTexts: jnxBgpM2LinkLocalNextHopTable.setStatus('current')
jnxBgpM2LinkLocalNextHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2545, 1), ).setIndexNames((0, "BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrIndex"))
if mibBuilder.loadTexts: jnxBgpM2LinkLocalNextHopEntry.setStatus('current')
jnxBgpM2LinkLocalNextHopPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2545, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2LinkLocalNextHopPresent.setStatus('current')
jnxBgpM2LinkLocalNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 3, 8, 1, 2545, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxBgpM2LinkLocalNextHop.setStatus('current')
jnxBgpM2Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4))
jnxBgpM2MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 1))
jnxBgpM2MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2))
jnxBgpM2MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 1, 1)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2TimersGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CountersGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CapabilitiesGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2As4byteGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2BaseGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2ErrorsGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttributesGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2MIBNotificationsGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AuthenticationGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CommunitiesGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2ExtCommunitiesGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2RouteReflectionGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsConfederationGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerConfigurationGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerAuthConfigurationGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRouteReflectorCfgGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerAsConfederationCfgGroup"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2Rfc2545Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2MIBCompliance = jnxBgpM2MIBCompliance.setStatus('current')
jnxBgpM2AuthenticationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 1)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2SupportedAuthCode"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2SupportedAuthValue"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerAuthSent"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerAuthSentCode"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerAuthSentValue"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerAuthRcvd"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerAuthRcvdCode"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerAuthRcvdValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2AuthenticationGroup = jnxBgpM2AuthenticationGroup.setStatus('current')
jnxBgpM2CommunitiesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 2)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrCommIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrCommValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2CommunitiesGroup = jnxBgpM2CommunitiesGroup.setStatus('current')
jnxBgpM2ExtCommunitiesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 3)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrExtCommIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrExtCommValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2ExtCommunitiesGroup = jnxBgpM2ExtCommunitiesGroup.setStatus('current')
jnxBgpM2RouteReflectionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 4)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2RouteReflector"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2ClusterId"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerReflectorClient"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrOriginatorId"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrClusterIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrClusterValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2RouteReflectionGroup = jnxBgpM2RouteReflectionGroup.setStatus('current')
jnxBgpM2AsConfederationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 5)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2ConfederationRouter"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2ConfederationId"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerConfedMember"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2AsConfederationGroup = jnxBgpM2AsConfederationGroup.setStatus('current')
jnxBgpM2TimersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 6)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerFsmEstablishedTime"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerInUpdatesElapsedTime"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerConnectRetryInterval"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerHoldTimeConfigured"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerKeepAliveConfigured"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerMinASOrigInterval"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerMinRouteAdverInterval"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerHoldTime"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerKeepAlive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2TimersGroup = jnxBgpM2TimersGroup.setStatus('current')
jnxBgpM2CountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 7)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerInUpdates"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerOutUpdates"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerInTotalMessages"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerOutTotalMessages"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerFsmEstablishedTrans"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PrefixCountersAfi"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PrefixCountersSafi"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PrefixInPrefixes"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PrefixInPrefixesAccepted"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PrefixInPrefixesRejected"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PrefixOutPrefixes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2CountersGroup = jnxBgpM2CountersGroup.setStatus('current')
jnxBgpM2CapabilitiesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 8)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CapabilitySupportAvailable"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2SupportedCapabilityCode"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2SupportedCapability"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapAnnouncedCode"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapAnnouncedIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapAnnouncedValue"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapReceivedCode"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapReceivedIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerCapReceivedValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2CapabilitiesGroup = jnxBgpM2CapabilitiesGroup.setStatus('current')
jnxBgpM2AsPathGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 9)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathSegmentIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathElementIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathElementValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2AsPathGroup = jnxBgpM2AsPathGroup.setStatus('current')
jnxBgpM2As4byteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 10)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsSize"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPath4bytePathPresent"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPath4byteAggregatorAS"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPath4byteCalcLength"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPath4byteString"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPath4byteIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2As4byteGroup = jnxBgpM2As4byteGroup.setStatus('current')
jnxBgpM2BaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 11)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2LocalAs"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2LocalIdentifier"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2VersionIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2VersionSupported"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2BaseGroup = jnxBgpM2BaseGroup.setStatus('current')
jnxBgpM2ErrorsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 12)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorReceived"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorReceivedData"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorReceivedTime"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorReceivedText"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorSent"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorSentData"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorSentTime"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLastErrorSentText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2ErrorsGroup = jnxBgpM2ErrorsGroup.setStatus('current')
jnxBgpM2PeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 13)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerIdentifier"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerState"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerStatus"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerConfiguredVersion"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerNegotiatedVersion"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalAddrType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalAddr"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalPort"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerLocalAs"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemoteAddrType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemoteAddr"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemotePort"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRemoteAs"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerRoutingInstance"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PeerIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2PeerGroup = jnxBgpM2PeerGroup.setStatus('current')
jnxBgpM2PathAttributesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 14)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrCount"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathCalcLength"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathElementValue"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathString"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AsPathType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriAfi"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriBest"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriPrefix"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriPrefixLen"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriSafi"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriOpaqueType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriOpaquePointer"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2NlriCalcLocalPref"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AdjRibsOutIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2AdjRibsOutRoute"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrAggregatorAS"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrAggregatorAddr"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrAtomicAggregate"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrLocalPref"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrLocalPrefPresent"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrMed"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrMedPresent"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrNextHop"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrNextHopAddrType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrOrigin"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrUnknownIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrUnknownType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2PathAttrUnknownValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2PathAttributesGroup = jnxBgpM2PathAttributesGroup.setStatus('current')
jnxBgpM2PeerConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 15)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgBaseScalarStorageType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgLocalAs"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgLocalIdentifier"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerAdminStatus"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerNextIndex"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerConfiguredVersion"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgAllowVersionNegotiation"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerLocalAddrType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerLocalAddr"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerLocalAs"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerRemoteAddrType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerRemoteAddr"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerRemotePort"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerRemoteAs"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerEntryStorageType"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerError"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerBgpPeerEntry"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerRowEntryStatus"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerStatus"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerConnectRetryInterval"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerHoldTimeConfigured"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerKeepAliveConfigured"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerMinASOrigInterval"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerMinRouteAdverInter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2PeerConfigurationGroup = jnxBgpM2PeerConfigurationGroup.setStatus('current')
jnxBgpM2PeerAuthConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 16)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerAuthEnabled"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerAuthCode"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerAuthValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2PeerAuthConfigurationGroup = jnxBgpM2PeerAuthConfigurationGroup.setStatus('current')
jnxBgpM2PeerRouteReflectorCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 17)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgRouteReflector"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgClusterId"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerReflectorClient"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2PeerRouteReflectorCfgGroup = jnxBgpM2PeerRouteReflectorCfgGroup.setStatus('current')
jnxBgpM2PeerAsConfederationCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 18)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgConfederationRouter"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgConfederationId"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2CfgPeerConfedMember"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2PeerAsConfederationCfgGroup = jnxBgpM2PeerAsConfederationCfgGroup.setStatus('current')
jnxBgpM2MIBNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 19)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2Established"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2BackwardTransition"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2MIBNotificationsGroup = jnxBgpM2MIBNotificationsGroup.setStatus('current')
jnxBgpM2Rfc2545Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 5, 1, 1, 4, 2, 20)).setObjects(("BGP4-V2-MIB-JUNIPER", "jnxBgpM2LinkLocalNextHopPresent"), ("BGP4-V2-MIB-JUNIPER", "jnxBgpM2LinkLocalNextHop"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxBgpM2Rfc2545Group = jnxBgpM2Rfc2545Group.setStatus('current')
mibBuilder.exportSymbols("BGP4-V2-MIB-JUNIPER", jnxBgpM2CfgPeerEntryStorageType=jnxBgpM2CfgPeerEntryStorageType, jnxBgpM2AsPathCalcLength=jnxBgpM2AsPathCalcLength, jnxBgpM2CfgPeerCapExts=jnxBgpM2CfgPeerCapExts, jnxBgpM2CfgBaseScalarStorageType=jnxBgpM2CfgBaseScalarStorageType, jnxBgpM2MIBCompliance=jnxBgpM2MIBCompliance, jnxBgpM2PeerConfiguration=jnxBgpM2PeerConfiguration, jnxBgpM2CfgPeerConfedMember=jnxBgpM2CfgPeerConfedMember, jnxBgpM2PrefixInPrefixesActive=jnxBgpM2PrefixInPrefixesActive, jnxBgpM2PeerCapAnnouncedCode=jnxBgpM2PeerCapAnnouncedCode, jnxBgpM2AsPathSegmentIndex=jnxBgpM2AsPathSegmentIndex, jnxBgpM2PeerAuthRcvdCode=jnxBgpM2PeerAuthRcvdCode, jnxBgpM2PathAttrClusterTable=jnxBgpM2PathAttrClusterTable, jnxBgpM2CfgPeerAuthCode=jnxBgpM2CfgPeerAuthCode, jnxBgpM2PathAttrClusterIndex=jnxBgpM2PathAttrClusterIndex, jnxBgpM2PeerGroup=jnxBgpM2PeerGroup, jnxBgpM2CfgBaseScalarASConfedExts=jnxBgpM2CfgBaseScalarASConfedExts, jnxBgpM2PeerAuthConfigurationGroup=jnxBgpM2PeerAuthConfigurationGroup, jnxBgpM2SupportedAuthentication=jnxBgpM2SupportedAuthentication, jnxBgpM2CfgPeerRemoteAddr=jnxBgpM2CfgPeerRemoteAddr, jnxBgpM2PeerCounters=jnxBgpM2PeerCounters, jnxBgpM2AsPath4byteAggregatorAS=jnxBgpM2AsPath4byteAggregatorAS, jnxBgpM2PathAttrUnknownTable=jnxBgpM2PathAttrUnknownTable, jnxBgpM2CfgPeerAdminStatus=jnxBgpM2CfgPeerAdminStatus, jnxBgpM2PeerRemoteAs=jnxBgpM2PeerRemoteAs, jnxBgpM2PathAttrAggregatorAS=jnxBgpM2PathAttrAggregatorAS, jnxBgpM2TimersGroup=jnxBgpM2TimersGroup, jnxBgpM2MIBCompliances=jnxBgpM2MIBCompliances, jnxBgpM2PeerLocalPort=jnxBgpM2PeerLocalPort, jnxBgpM2ConfederationId=jnxBgpM2ConfederationId, jnxBgpM2PathAttrCommunityExts=jnxBgpM2PathAttrCommunityExts, jnxBgpM2PeerLastErrorSent=jnxBgpM2PeerLastErrorSent, jnxBgpM2PeerCapAnnouncedIndex=jnxBgpM2PeerCapAnnouncedIndex, jnxBgpM2Version=jnxBgpM2Version, jnxBgpM2SupportedAuthTable=jnxBgpM2SupportedAuthTable, jnxBgpM2PeerEntry=jnxBgpM2PeerEntry, jnxBgpM2AsPathType=jnxBgpM2AsPathType, jnxBgpM2PathAttrCommValue=jnxBgpM2PathAttrCommValue, jnxBgpM2PeerKeepAlive=jnxBgpM2PeerKeepAlive, jnxBgpM2AsPath4byteIndex=jnxBgpM2AsPath4byteIndex, jnxBgpM2CfgConfederationId=jnxBgpM2CfgConfederationId, jnxBgpM2CfgPeerConfedMemberEntry=jnxBgpM2CfgPeerConfedMemberEntry, jnxBgpM2PeerMinRouteAdverInterval=jnxBgpM2PeerMinRouteAdverInterval, jnxBgpM2PathAttrOrigin=jnxBgpM2PathAttrOrigin, jnxBgpM2BaseScalarCapExts=jnxBgpM2BaseScalarCapExts, jnxBgpM2VersionSupported=jnxBgpM2VersionSupported, jnxBgpM2AsPathString=jnxBgpM2AsPathString, jnxBgpM2PeerCapReceivedIndex=jnxBgpM2PeerCapReceivedIndex, jnxBgpM2CfgPeerLocalAddrType=jnxBgpM2CfgPeerLocalAddrType, jnxBgpM2Rib=jnxBgpM2Rib, jnxBgpM2AsPathEntry=jnxBgpM2AsPathEntry, jnxBgpM2CfgPeerReflectorClientTable=jnxBgpM2CfgPeerReflectorClientTable, jnxBgpM2CfgPeerNextIndex=jnxBgpM2CfgPeerNextIndex, jnxBgpM2PathAttrOriginatorId=jnxBgpM2PathAttrOriginatorId, jnxBgpM2PeerLastErrorReceivedData=jnxBgpM2PeerLastErrorReceivedData, jnxBgpM2PrefixInPrefixesRejected=jnxBgpM2PrefixInPrefixesRejected, jnxBgpM2PeerMinASOrigInterval=jnxBgpM2PeerMinASOrigInterval, jnxBgpM2CfgPeerExtensions=jnxBgpM2CfgPeerExtensions, jnxBgpM2ErrorsGroup=jnxBgpM2ErrorsGroup, jnxBgpM2BaseScalarNonCapExts=jnxBgpM2BaseScalarNonCapExts, jnxBgpM2PathAttrNextHopAddrType=jnxBgpM2PathAttrNextHopAddrType, jnxBgpM2PathAttrClusterEntry=jnxBgpM2PathAttrClusterEntry, jnxBgpM2NlriOpaqueType=jnxBgpM2NlriOpaqueType, jnxBgpM2PeerCapsAnnouncedTable=jnxBgpM2PeerCapsAnnouncedTable, jnxBgpM2PathAttrCommIndex=jnxBgpM2PathAttrCommIndex, jnxBgpM2SupportedCapabilities=jnxBgpM2SupportedCapabilities, jnxBgpM2PeerData=jnxBgpM2PeerData, JnxBgpM2ExtendedCommunity=JnxBgpM2ExtendedCommunity, jnxBgpM2SupportedAuthValue=jnxBgpM2SupportedAuthValue, jnxBgpM2NlriPrefix=jnxBgpM2NlriPrefix, jnxBgpM2PeerConfiguredVersion=jnxBgpM2PeerConfiguredVersion, jnxBgpM2PathAttrNonCapExts=jnxBgpM2PathAttrNonCapExts, jnxBgpM2PrefixCountersSafi=jnxBgpM2PrefixCountersSafi, PYSNMP_MODULE_ID=jnxBgpM2, jnxBgpM2PeerIdentifier=jnxBgpM2PeerIdentifier, jnxBgpM2PeerEventTimesTable=jnxBgpM2PeerEventTimesTable, jnxBgpM2NlriOpaquePointer=jnxBgpM2NlriOpaquePointer, jnxBgpM2CfgPeerRemoteAs=jnxBgpM2CfgPeerRemoteAs, jnxBgpM2PathAttrExtCommEntry=jnxBgpM2PathAttrExtCommEntry, jnxBgpM2CfgPeerConfiguredVersion=jnxBgpM2CfgPeerConfiguredVersion, jnxBgpM2PeerConfigurationGroup=jnxBgpM2PeerConfigurationGroup, jnxBgpM2PathAttrCount=jnxBgpM2PathAttrCount, jnxBgpM2SupportedAuthCode=jnxBgpM2SupportedAuthCode, jnxBgpM2PathAttrExtCommIndex=jnxBgpM2PathAttrExtCommIndex, jnxBgpM2SupportedCapabilitiesEntry=jnxBgpM2SupportedCapabilitiesEntry, jnxBgpM2PathAttrCapExts=jnxBgpM2PathAttrCapExts, jnxBgpM2PeerErrors=jnxBgpM2PeerErrors, jnxBgpM2CfgPeerTable=jnxBgpM2CfgPeerTable, jnxBgpM2PeerCountersEntry=jnxBgpM2PeerCountersEntry, jnxBgpM2PrefixInPrefixesAccepted=jnxBgpM2PrefixInPrefixesAccepted, jnxBgpM2CfgPeerIndex=jnxBgpM2CfgPeerIndex, jnxBgpM2PathAttrTable=jnxBgpM2PathAttrTable, jnxBgpM2CfgPeerNonCapExts=jnxBgpM2CfgPeerNonCapExts, jnxBgpM2CommunitiesGroup=jnxBgpM2CommunitiesGroup, jnxBgpM2CountersGroup=jnxBgpM2CountersGroup, jnxBgpM2RouteReflector=jnxBgpM2RouteReflector, jnxBgpM2CfgPeerConnectRetryInterval=jnxBgpM2CfgPeerConnectRetryInterval, jnxBgpM2LocalIdentifier=jnxBgpM2LocalIdentifier, jnxBgpM2CfgPeerAdminStatusTable=jnxBgpM2CfgPeerAdminStatusTable, jnxBgpM2PeerEventTimesEntry=jnxBgpM2PeerEventTimesEntry, jnxBgpM2CfgPeerEntry=jnxBgpM2CfgPeerEntry, jnxBgpM2CfgPeerLocalAs=jnxBgpM2CfgPeerLocalAs, jnxBgpM2PeerCapReceivedCode=jnxBgpM2PeerCapReceivedCode, jnxBgpM2PeerAuthSent=jnxBgpM2PeerAuthSent, jnxBgpM2NlriBest=jnxBgpM2NlriBest, jnxBgpM2CfgConfederationRouter=jnxBgpM2CfgConfederationRouter, jnxBgpM2PeerNegotiatedVersion=jnxBgpM2PeerNegotiatedVersion, jnxBgpM2PeerAuthRcvd=jnxBgpM2PeerAuthRcvd, jnxBgpM2NlriTable=jnxBgpM2NlriTable, jnxBgpM2AdjRibsOutTable=jnxBgpM2AdjRibsOutTable, jnxBgpM2Rfc2545Group=jnxBgpM2Rfc2545Group, jnxBgpM2PeerRouteReflectionExts=jnxBgpM2PeerRouteReflectionExts, jnxBgpM2NlriIndex=jnxBgpM2NlriIndex, jnxBgpM2PathAttrCommEntry=jnxBgpM2PathAttrCommEntry, jnxBgpM2PathAttrOriginatorIdTable=jnxBgpM2PathAttrOriginatorIdTable, jnxBgpM2PathAttrLocalPrefPresent=jnxBgpM2PathAttrLocalPrefPresent, jnxBgpM2PeerLastErrorReceivedText=jnxBgpM2PeerLastErrorReceivedText, jnxBgpM2VersionTable=jnxBgpM2VersionTable, jnxBgpM2PathAttrMedPresent=jnxBgpM2PathAttrMedPresent, jnxBgpM2PathAttrUnknownValue=jnxBgpM2PathAttrUnknownValue, jnxBgpM2PathAttrIndex=jnxBgpM2PathAttrIndex, jnxBgpM2PeerASConfederationExts=jnxBgpM2PeerASConfederationExts, jnxBgpM2PathAttrExtensions=jnxBgpM2PathAttrExtensions, jnxBgpM2SupportedCapability=jnxBgpM2SupportedCapability, jnxBgpM2PeerAuthentication=jnxBgpM2PeerAuthentication, jnxBgpM2AdjRibsOutRoute=jnxBgpM2AdjRibsOutRoute, jnxBgpM2PeerReflectorClientTable=jnxBgpM2PeerReflectorClientTable, jnxBgpM2PeerCapAnnouncedValue=jnxBgpM2PeerCapAnnouncedValue, jnxBgpM2BaseScalarRouteReflectExts=jnxBgpM2BaseScalarRouteReflectExts, jnxBgpM2PathAttrLocalPref=jnxBgpM2PathAttrLocalPref, jnxBgpM2PathAttrExtCommValue=jnxBgpM2PathAttrExtCommValue, jnxBgpM2CfgPeerConfedMemberTable=jnxBgpM2CfgPeerConfedMemberTable, JnxBgpM2Identifier=JnxBgpM2Identifier, jnxBgpM2LinkLocalNextHopPresent=jnxBgpM2LinkLocalNextHopPresent, jnxBgpM2LinkLocalNextHopTable=jnxBgpM2LinkLocalNextHopTable, jnxBgpM2CfgPeerAuthTable=jnxBgpM2CfgPeerAuthTable, jnxBgpM2PeerCapsAnnouncedEntry=jnxBgpM2PeerCapsAnnouncedEntry, jnxBgpM2PeerErrorsTable=jnxBgpM2PeerErrorsTable, jnxBgpM2CfgPeerRoutingInstance=jnxBgpM2CfgPeerRoutingInstance, jnxBgpM2CfgPeerTimersTable=jnxBgpM2CfgPeerTimersTable, jnxBgpM2PeerOutTotalMessages=jnxBgpM2PeerOutTotalMessages, jnxBgpM2PathAttrAggregatorAddr=jnxBgpM2PathAttrAggregatorAddr, jnxBgpM2PeerTable=jnxBgpM2PeerTable, jnxBgpM2PathAttrExtCommTable=jnxBgpM2PathAttrExtCommTable, jnxBgpM2PeerRoutingInstance=jnxBgpM2PeerRoutingInstance, jnxBgpM2PeerAuthTable=jnxBgpM2PeerAuthTable, jnxBgpM2LocalAs=jnxBgpM2LocalAs, jnxBgpM2PrefixCountersAfi=jnxBgpM2PrefixCountersAfi, jnxBgpM2CapabilitySupportAvailable=jnxBgpM2CapabilitySupportAvailable, jnxBgpM2PathAttrUnknownEntry=jnxBgpM2PathAttrUnknownEntry, jnxBgpM2SupportedCapabilityCode=jnxBgpM2SupportedCapabilityCode, jnxBgpM2CfgRouteReflector=jnxBgpM2CfgRouteReflector, jnxBgpM2PeerInTotalMessages=jnxBgpM2PeerInTotalMessages, jnxBgpM2BaseNotifications=jnxBgpM2BaseNotifications, jnxBgpM2PrefixCountersEntry=jnxBgpM2PrefixCountersEntry, jnxBgpM2Conformance=jnxBgpM2Conformance, jnxBgpM2AsPath4bytePathPresent=jnxBgpM2AsPath4bytePathPresent, jnxBgpM2PeerNonCapExts=jnxBgpM2PeerNonCapExts, jnxBgpM2PeerCapExts=jnxBgpM2PeerCapExts, jnxBgpM2PeerAuthSentValue=jnxBgpM2PeerAuthSentValue, jnxBgpM2PathAttrUnknownType=jnxBgpM2PathAttrUnknownType, jnxBgpM2PathAttrAtomicAggregate=jnxBgpM2PathAttrAtomicAggregate, jnxBgpM2AsPathElementValue=jnxBgpM2AsPathElementValue, jnxBgpM2PeerLastErrorSentTime=jnxBgpM2PeerLastErrorSentTime, jnxBgpM2CfgPeerRemotePort=jnxBgpM2CfgPeerRemotePort, jnxBgpM2PeerAuthEntry=jnxBgpM2PeerAuthEntry, jnxBgpM2AdjRibsOutEntry=jnxBgpM2AdjRibsOutEntry, jnxBgpM2CfgPeerBgpPeerEntry=jnxBgpM2CfgPeerBgpPeerEntry, jnxBgpM2PeerFsmEstablishedTrans=jnxBgpM2PeerFsmEstablishedTrans, jnxBgpM2PeerKeepAliveConfigured=jnxBgpM2PeerKeepAliveConfigured, jnxBgpM2PeerLocalAddrType=jnxBgpM2PeerLocalAddrType, jnxBgpM2PeerConfedMemberEntry=jnxBgpM2PeerConfedMemberEntry, jnxBgpM2PeerConfedMember=jnxBgpM2PeerConfedMember, jnxBgpM2CfgPeerReflectorClientEntry=jnxBgpM2CfgPeerReflectorClientEntry, jnxBgpM2As4byteGroup=jnxBgpM2As4byteGroup, jnxBgpM2PeerConnectRetryInterval=jnxBgpM2PeerConnectRetryInterval, jnxBgpM2PeerInUpdatesElapsedTime=jnxBgpM2PeerInUpdatesElapsedTime, jnxBgpM2PeerLastErrorSentText=jnxBgpM2PeerLastErrorSentText, jnxBgpM2NlriAfi=jnxBgpM2NlriAfi, jnxBgpM2SupportedAuthEntry=jnxBgpM2SupportedAuthEntry, jnxBgpM2BackwardTransition=jnxBgpM2BackwardTransition, jnxBgpM2PeerFsmEstablishedTime=jnxBgpM2PeerFsmEstablishedTime, jnxBgpM2PeerNegotiatedTimersEntry=jnxBgpM2PeerNegotiatedTimersEntry, jnxBgpM2PeerHoldTime=jnxBgpM2PeerHoldTime, jnxBgpM2ClusterId=jnxBgpM2ClusterId, jnxBgpM2PeerCapabilities=jnxBgpM2PeerCapabilities, jnxBgpM2CfgPeerMinASOrigInterval=jnxBgpM2CfgPeerMinASOrigInterval, jnxBgpM2CfgBaseScalarNonCapExts=jnxBgpM2CfgBaseScalarNonCapExts, jnxBgpM2MIBNotificationsGroup=jnxBgpM2MIBNotificationsGroup, jnxBgpM2PeerLastErrorReceived=jnxBgpM2PeerLastErrorReceived, jnxBgpM2PeerIndex=jnxBgpM2PeerIndex, JnxBgpM2Safi=JnxBgpM2Safi, jnxBgpM2NlriSafi=jnxBgpM2NlriSafi, jnxBgpM2Peer=jnxBgpM2Peer, jnxBgpM2CfgPeerHoldTimeConfigured=jnxBgpM2CfgPeerHoldTimeConfigured, jnxBgpM2VersionIndex=jnxBgpM2VersionIndex, jnxBgpM2MIBGroups=jnxBgpM2MIBGroups, jnxBgpM2PathAttrMed=jnxBgpM2PathAttrMed, jnxBgpM2PeerAsConfederationCfgGroup=jnxBgpM2PeerAsConfederationCfgGroup, jnxBgpM2SupportedCapabilitiesTable=jnxBgpM2SupportedCapabilitiesTable, jnxBgpM2PeerReflectorClient=jnxBgpM2PeerReflectorClient, jnxBgpM2PeerRemoteAddr=jnxBgpM2PeerRemoteAddr, jnxBgpM2PeerErrorsEntry=jnxBgpM2PeerErrorsEntry, jnxBgpM2CfgBaseScalarExtensions=jnxBgpM2CfgBaseScalarExtensions, jnxBgpM2PeerRemotePort=jnxBgpM2PeerRemotePort, jnxBgpM2PeerHoldTimeConfigured=jnxBgpM2PeerHoldTimeConfigured, jnxBgpM2PrefixInPrefixes=jnxBgpM2PrefixInPrefixes, jnxBgpM2CfgPeerError=jnxBgpM2CfgPeerError, jnxBgpM2CfgPeerRowEntryStatus=jnxBgpM2CfgPeerRowEntryStatus, jnxBgpM2CfgPeerAuthEnabled=jnxBgpM2CfgPeerAuthEnabled, jnxBgpM2AsPath4byteEntry=jnxBgpM2AsPath4byteEntry, jnxBgpM2PathAttrRouteReflectionExts=jnxBgpM2PathAttrRouteReflectionExts, jnxBgpM2PeerState=jnxBgpM2PeerState, jnxBgpM2PeerAuthRcvdValue=jnxBgpM2PeerAuthRcvdValue, jnxBgpM2PathAttrOriginatorIdEntry=jnxBgpM2PathAttrOriginatorIdEntry, jnxBgpM2CfgPeerAuthEntry=jnxBgpM2CfgPeerAuthEntry, jnxBgpM2CfgClusterId=jnxBgpM2CfgClusterId, jnxBgpM2PathAttrNextHop=jnxBgpM2PathAttrNextHop, jnxBgpM2PathAttrCommTable=jnxBgpM2PathAttrCommTable, jnxBgpM2BaseScalarConfiguration=jnxBgpM2BaseScalarConfiguration, jnxBgpM2AsPathIndex=jnxBgpM2AsPathIndex, jnxBgpM2Established=jnxBgpM2Established, jnxBgpM2PeerAuthSentCode=jnxBgpM2PeerAuthSentCode, jnxBgpM2AsPath4byteString=jnxBgpM2AsPath4byteString, jnxBgpM2AsConfederationGroup=jnxBgpM2AsConfederationGroup, jnxBgpM2CfgLocalIdentifier=jnxBgpM2CfgLocalIdentifier, jnxBgpM2CfgBaseScalarReflectorExts=jnxBgpM2CfgBaseScalarReflectorExts, jnxBgpM2AsSize=jnxBgpM2AsSize, jnxBgpM2AsPath4byteTable=jnxBgpM2AsPath4byteTable, jnxBgpM2CfgLocalAs=jnxBgpM2CfgLocalAs, jnxBgpM2ConfederationRouter=jnxBgpM2ConfederationRouter, jnxBgpM2PeerStatus=jnxBgpM2PeerStatus, jnxBgpM2AsPathTable=jnxBgpM2AsPathTable, jnxBgpM2PeerNegotiatedTimersTable=jnxBgpM2PeerNegotiatedTimersTable, jnxBgpM2AuthenticationGroup=jnxBgpM2AuthenticationGroup, jnxBgpM2NlriPrefixLen=jnxBgpM2NlriPrefixLen, jnxBgpM2PathAttributesGroup=jnxBgpM2PathAttributesGroup, jnxBgpM2PeerExtensions=jnxBgpM2PeerExtensions, jnxBgpM2CfgPeerRemoteAddrType=jnxBgpM2CfgPeerRemoteAddrType, jnxBgpM2PeerCapsReceivedEntry=jnxBgpM2PeerCapsReceivedEntry, jnxBgpM2VersionEntry=jnxBgpM2VersionEntry, jnxBgpM2BaseScalarExtensions=jnxBgpM2BaseScalarExtensions, jnxBgpM2PeerConfiguredTimersEntry=jnxBgpM2PeerConfiguredTimersEntry, jnxBgpM2CfgPeerLocalAddr=jnxBgpM2CfgPeerLocalAddr, jnxBgpM2CfgPeerTimersEntry=jnxBgpM2CfgPeerTimersEntry, jnxBgpM2PeerLocalAddr=jnxBgpM2PeerLocalAddr, jnxBgpM2NlriCalcLocalPref=jnxBgpM2NlriCalcLocalPref, jnxBgpM2PeerInUpdates=jnxBgpM2PeerInUpdates, jnxBgpM2PeerReflectorClientEntry=jnxBgpM2PeerReflectorClientEntry, jnxBgpM2AdjRibsOutIndex=jnxBgpM2AdjRibsOutIndex, jnxBgpM2AsPathElementIndex=jnxBgpM2AsPathElementIndex, jnxBgpM2PeerLocalAs=jnxBgpM2PeerLocalAs, jnxBgpM2CfgPeerRouteReflectionExts=jnxBgpM2CfgPeerRouteReflectionExts, jnxBgpM2PrefixOutPrefixes=jnxBgpM2PrefixOutPrefixes, jnxBgpM2PeerLastErrorReceivedTime=jnxBgpM2PeerLastErrorReceivedTime)
mibBuilder.exportSymbols("BGP4-V2-MIB-JUNIPER", jnxBgpM2PathAttrEntry=jnxBgpM2PathAttrEntry, jnxBgpM2=jnxBgpM2, jnxBgpM2PeerCapsReceivedTable=jnxBgpM2PeerCapsReceivedTable, jnxBgpM2NlriEntry=jnxBgpM2NlriEntry, jnxBgpM2BaseScalars=jnxBgpM2BaseScalars, jnxBgpM2PrefixCountersTable=jnxBgpM2PrefixCountersTable, jnxBgpM2LinkLocalNextHop=jnxBgpM2LinkLocalNextHop, jnxBgpM2PeerLastErrorSentData=jnxBgpM2PeerLastErrorSentData, jnxBgpM2CfgPeerKeepAliveConfigured=jnxBgpM2CfgPeerKeepAliveConfigured, jnxBgpM2CfgPeerASConfederationExts=jnxBgpM2CfgPeerASConfederationExts, jnxBgpM2CfgBaseScalarCapExts=jnxBgpM2CfgBaseScalarCapExts, jnxBgpM2PeerTimers=jnxBgpM2PeerTimers, jnxBgpM2PeerRouteReflectorCfgGroup=jnxBgpM2PeerRouteReflectorCfgGroup, JnxBgpM2Community=JnxBgpM2Community, jnxBgpM2ExtCommunitiesGroup=jnxBgpM2ExtCommunitiesGroup, jnxBgpM2BaseGroup=jnxBgpM2BaseGroup, jnxBgpM2BaseScalarASConfedExts=jnxBgpM2BaseScalarASConfedExts, jnxBgpM2AsPath4byteCalcLength=jnxBgpM2AsPath4byteCalcLength, jnxBgpM2CfgPeerMinRouteAdverInter=jnxBgpM2CfgPeerMinRouteAdverInter, jnxBgpM2PeerCountersTable=jnxBgpM2PeerCountersTable, jnxBgpM2PathAttrClusterValue=jnxBgpM2PathAttrClusterValue, jnxBgpM2LinkLocalNextHopEntry=jnxBgpM2LinkLocalNextHopEntry, jnxBgpM2RouteReflectionGroup=jnxBgpM2RouteReflectionGroup, jnxBgpM2PeerConfiguredTimersTable=jnxBgpM2PeerConfiguredTimersTable, jnxBgpM2CfgPeerStatus=jnxBgpM2CfgPeerStatus, jnxBgpM2AsPathGroup=jnxBgpM2AsPathGroup, jnxBgpM2PeerOutUpdates=jnxBgpM2PeerOutUpdates, jnxBgpM2PeerRemoteAddrType=jnxBgpM2PeerRemoteAddrType, jnxBgpM2CfgPeerAdminStatusEntry=jnxBgpM2CfgPeerAdminStatusEntry, jnxBgpM2CfgPeerReflectorClient=jnxBgpM2CfgPeerReflectorClient, jnxBgpM2PathAttrUnknownIndex=jnxBgpM2PathAttrUnknownIndex, jnxBgpM2PeerCapReceivedValue=jnxBgpM2PeerCapReceivedValue, jnxBgpM2CfgAllowVersionNegotiation=jnxBgpM2CfgAllowVersionNegotiation, jnxBgpM2CapabilitiesGroup=jnxBgpM2CapabilitiesGroup, jnxBgpM2PeerConfedMemberTable=jnxBgpM2PeerConfedMemberTable, jnxBgpM2CfgPeerAuthValue=jnxBgpM2CfgPeerAuthValue)
