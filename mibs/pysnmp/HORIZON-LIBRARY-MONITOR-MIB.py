#
# PySNMP MIB module HORIZON-LIBRARY-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HORIZON-LIBRARY-MONITOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:20:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, ModuleIdentity, NotificationType, Integer32, Counter64, TimeTicks, MibIdentifier, enterprises, Counter32, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "ModuleIdentity", "NotificationType", "Integer32", "Counter64", "TimeTicks", "MibIdentifier", "enterprises", "Counter32", "iso", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
storagetek = MibIdentifier((1, 3, 6, 1, 4, 1, 1211))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 1211, 1))
horizonLibraryMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 1211, 1, 5))
hlmAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 1211, 1, 5, 1))
hlmTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 1211, 1, 5, 2))
hlmHardware = MibIdentifier((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3))
class HlmSenseCode(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39))
    namedValues = NamedValues(("unknown", 1), ("nrNotReportable", 2), ("nrInProcess", 3), ("nrManIntervReq", 4), ("nrMaintenance", 5), ("nrCapOpen", 6), ("hwGeneral", 7), ("hwTapeDrive", 8), ("hwCap", 9), ("hwMicroCode", 10), ("irParamLength", 11), ("irInvalidCommand", 12), ("irInvalidElt", 13), ("irInvalidCDB", 14), ("irInvalidLun", 15), ("irInvalidField", 16), ("irIncompatibleMedia", 17), ("irSavingParamNotSupported", 18), ("irMediumNotPresent", 19), ("irDestEltFull", 20), ("irSrcEltEmpty", 21), ("uaPowerOn", 22), ("uaNotReady", 23), ("uaIoEltAccess", 24), ("uaModeParamChanged", 25), ("uaMicroCodeChanged", 26), ("acSCSIParity", 27), ("acInitiator", 28), ("acCommandOverlap", 29), ("nrCleaningCartridgeInstalled", 30), ("irInvalidReleaseOfPersistentReservation", 31), ("irMediumMagazineRemoved", 32), ("irInsufficientReservationResources", 33), ("uaPowerOnOccured", 34), ("uaReservationPreempted", 35), ("uaReservationReleased", 36), ("uaRegistrationPreempted", 37), ("uaSCSIBusReset", 38), ("uaBusDeviceResetMessageOccured", 39))

hlmAgtRelease = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmAgtRelease.setStatus('mandatory')
hlmAgtStatus = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initializing", 1), ("running", 2), ("expiring", 3), ("expired", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmAgtStatus.setStatus('mandatory')
hlmAgtBootDate = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmAgtBootDate.setStatus('mandatory')
hlmAgtUrl = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hlmAgtUrl.setStatus('mandatory')
hlmTrpMinPollingRate = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmTrpMinPollingRate.setStatus('mandatory')
hlmTrpCurPollingRate = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hlmTrpCurPollingRate.setStatus('mandatory')
hlmTrpMsg = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmTrpMsg.setStatus('mandatory')
hlmTrpOid = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 2, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmTrpOid.setStatus('mandatory')
hlmTrpLogReportLevel = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("silent", 1), ("error", 2), ("warning", 3), ("info", 4), ("unclassified", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hlmTrpLogReportLevel.setStatus('mandatory')
hlmTrpErr = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,1)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpMsg"))
hlmTrpWar = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,2)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpMsg"))
hlmTrpInfo = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,3)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpMsg"))
hlmTrpUncl = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,4)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpMsg"))
hlmTrpNorStatus = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,5)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpOid"))
hlmTrpUnkStatus = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,6)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpOid"))
hlmTrpWarStatus = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,7)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpOid"))
hlmTrpMinStatus = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,8)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpOid"))
hlmTrpMajStatus = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,9)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpOid"))
hlmTrpCriStatus = NotificationType((1, 3, 6, 1, 4, 1, 1211, 1, 5) + (0,10)).setObjects(("HORIZON-LIBRARY-MONITOR-MIB", "hlmTrpOid"))
hlmLibrary = MibIdentifier((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1))
hlmLibCount = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibCount.setStatus('mandatory')
hlmLibTable = MibTable((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2), )
if mibBuilder.loadTexts: hlmLibTable.setStatus('mandatory')
hlmLibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1), ).setIndexNames((0, "HORIZON-LIBRARY-MONITOR-MIB", "hlmLibIndex"))
if mibBuilder.loadTexts: hlmLibEntry.setStatus('mandatory')
hlmLibIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibIndex.setStatus('mandatory')
hlmLibType = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibType.setStatus('mandatory')
hlmLibVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibVendor.setStatus('mandatory')
hlmLibStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("error", 3), ("busy", 4), ("reservConflict", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibStatus.setStatus('mandatory')
hlmLibSense = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 5), HlmSenseCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibSense.setStatus('mandatory')
hlmLibMicLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibMicLevel.setStatus('mandatory')
hlmLibSlotCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibSlotCount.setStatus('mandatory')
hlmLibCapCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibCapCount.setStatus('mandatory')
hlmLibDriveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibDriveCount.setStatus('mandatory')
hlmLibSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibSerialNumber.setStatus('mandatory')
hlmLibSenseText = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmLibSenseText.setStatus('mandatory')
hlmLibUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 1, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hlmLibUrl.setStatus('mandatory')
hlmDrive = MibIdentifier((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2))
hlmDrvCount = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvCount.setStatus('mandatory')
hlmDrvTable = MibTable((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2), )
if mibBuilder.loadTexts: hlmDrvTable.setStatus('mandatory')
hlmDrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1), ).setIndexNames((0, "HORIZON-LIBRARY-MONITOR-MIB", "hlmDrvLibIndex"), (0, "HORIZON-LIBRARY-MONITOR-MIB", "hlmDrvIndex"))
if mibBuilder.loadTexts: hlmDrvEntry.setStatus('mandatory')
hlmDrvLibIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvLibIndex.setStatus('mandatory')
hlmDrvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvIndex.setStatus('mandatory')
hlmDrvType = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("undetermined", 1), ("dlt2000", 2), ("dlt2000XT", 3), ("dlt4000", 4), ("dlt7000", 5), ("dlt12000", 6), ("dlt20000", 7), ("drive9840", 8), ("twinPeaks4890", 9), ("silverton4490or4791", 10), ("redWoodSD3", 11), ("timberLine9490", 12), ("timberLine9491", 13), ("drve4781or4480", 14), ("dlt8000", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvType.setStatus('mandatory')
hlmDrvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvStatus.setStatus('mandatory')
hlmDrvSense = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 5), HlmSenseCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvSense.setStatus('mandatory')
hlmDrvContent = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("empty", 2), ("full", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvContent.setStatus('mandatory')
hlmDrvVolType = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("undetermined", 1), ("dltCompactIIIOrdltCleaning", 2), ("dltCompactIV", 3), ("dltCompactIIIXT", 4), ("normalOrCleaning3480", 5), ("extendedLengthCartridge3490E", 6), ("shortLengthRedWoodDD3A", 7), ("standardLengthRedWoodDD3B", 8), ("longLengthRedWoodDD3C", 9), ("cleaningRedWoodDD3D", 10), ("standard9840", 11), ("cleaning9840", 12), ("extendedEnhanced3490", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvVolType.setStatus('mandatory')
hlmDrvVolLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvVolLabel.setStatus('mandatory')
hlmDrvTypeText = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvTypeText.setStatus('mandatory')
hlmDrvVolTypeText = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvVolTypeText.setStatus('mandatory')
hlmDrvSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvSerialNumber.setStatus('mandatory')
hlmDrvSenseText = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 2, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmDrvSenseText.setStatus('mandatory')
hlmCap = MibIdentifier((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3))
hlmCapCount = MibScalar((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmCapCount.setStatus('mandatory')
hlmCapTable = MibTable((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 2), )
if mibBuilder.loadTexts: hlmCapTable.setStatus('mandatory')
hlmCapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 2, 1), ).setIndexNames((0, "HORIZON-LIBRARY-MONITOR-MIB", "hlmCapLibIndex"), (0, "HORIZON-LIBRARY-MONITOR-MIB", "hlmCapIndex"))
if mibBuilder.loadTexts: hlmCapEntry.setStatus('mandatory')
hlmCapLibIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmCapLibIndex.setStatus('mandatory')
hlmCapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmCapIndex.setStatus('mandatory')
hlmCapHandAccessibility = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("open", 2), ("close", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmCapHandAccessibility.setStatus('mandatory')
hlmCapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("error", 3), ("warning", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmCapStatus.setStatus('mandatory')
hlmCapSense = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 2, 1, 5), HlmSenseCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmCapSense.setStatus('mandatory')
hlmCapCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmCapCellCount.setStatus('mandatory')
hlmCapSenseText = MibTableColumn((1, 3, 6, 1, 4, 1, 1211, 1, 5, 3, 3, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlmCapSenseText.setStatus('mandatory')
mibBuilder.exportSymbols("HORIZON-LIBRARY-MONITOR-MIB", hlmTrpWar=hlmTrpWar, hlmAgent=hlmAgent, hlmDrvSerialNumber=hlmDrvSerialNumber, hlmDrvSenseText=hlmDrvSenseText, hlmCapTable=hlmCapTable, hlmDrvTypeText=hlmDrvTypeText, products=products, hlmCapStatus=hlmCapStatus, hlmDrvStatus=hlmDrvStatus, hlmAgtRelease=hlmAgtRelease, horizonLibraryMonitor=horizonLibraryMonitor, hlmDrvCount=hlmDrvCount, hlmTrpOid=hlmTrpOid, hlmDrvVolType=hlmDrvVolType, hlmDrvVolTypeText=hlmDrvVolTypeText, hlmDrive=hlmDrive, hlmLibTable=hlmLibTable, hlmCapSenseText=hlmCapSenseText, hlmCapLibIndex=hlmCapLibIndex, HlmSenseCode=HlmSenseCode, hlmDrvVolLabel=hlmDrvVolLabel, hlmTrap=hlmTrap, hlmTrpNorStatus=hlmTrpNorStatus, hlmTrpMajStatus=hlmTrpMajStatus, hlmTrpErr=hlmTrpErr, hlmTrpCriStatus=hlmTrpCriStatus, hlmLibEntry=hlmLibEntry, hlmLibIndex=hlmLibIndex, hlmLibType=hlmLibType, hlmLibStatus=hlmLibStatus, hlmLibrary=hlmLibrary, hlmLibCapCount=hlmLibCapCount, hlmTrpUnkStatus=hlmTrpUnkStatus, hlmLibVendor=hlmLibVendor, hlmLibSerialNumber=hlmLibSerialNumber, hlmLibSenseText=hlmLibSenseText, hlmTrpUncl=hlmTrpUncl, hlmLibSlotCount=hlmLibSlotCount, hlmDrvLibIndex=hlmDrvLibIndex, hlmLibDriveCount=hlmLibDriveCount, hlmTrpWarStatus=hlmTrpWarStatus, hlmAgtUrl=hlmAgtUrl, hlmAgtStatus=hlmAgtStatus, hlmLibSense=hlmLibSense, hlmDrvIndex=hlmDrvIndex, hlmCapSense=hlmCapSense, storagetek=storagetek, hlmTrpInfo=hlmTrpInfo, hlmDrvTable=hlmDrvTable, hlmCap=hlmCap, hlmTrpLogReportLevel=hlmTrpLogReportLevel, hlmCapCount=hlmCapCount, hlmLibMicLevel=hlmLibMicLevel, hlmHardware=hlmHardware, hlmLibUrl=hlmLibUrl, hlmTrpMinPollingRate=hlmTrpMinPollingRate, hlmCapCellCount=hlmCapCellCount, hlmCapEntry=hlmCapEntry, hlmTrpMsg=hlmTrpMsg, hlmCapHandAccessibility=hlmCapHandAccessibility, hlmTrpCurPollingRate=hlmTrpCurPollingRate, hlmDrvSense=hlmDrvSense, hlmCapIndex=hlmCapIndex, hlmDrvContent=hlmDrvContent, hlmDrvType=hlmDrvType, hlmLibCount=hlmLibCount, hlmTrpMinStatus=hlmTrpMinStatus, hlmDrvEntry=hlmDrvEntry, hlmAgtBootDate=hlmAgtBootDate)
