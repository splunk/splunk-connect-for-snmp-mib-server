#
# PySNMP MIB module SMA-NOTIFICATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SMA-NOTIFICATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:59:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
snmpTraps, = mibBuilder.importSymbols("SNMPv2-MIB", "snmpTraps")
Gauge32, IpAddress, NotificationType, ObjectIdentity, ModuleIdentity, enterprises, Counter64, iso, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, mib_2, Counter32, Integer32, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "NotificationType", "ObjectIdentity", "ModuleIdentity", "enterprises", "Counter64", "iso", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "mib-2", "Counter32", "Integer32", "MibIdentifier", "TimeTicks")
TruthValue, TestAndIncr, PhysAddress, TextualConvention, RowStatus, AutonomousType, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TestAndIncr", "PhysAddress", "TextualConvention", "RowStatus", "AutonomousType", "TimeStamp", "DisplayString")
notifications = ModuleIdentity((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3))
if mibBuilder.loadTexts: notifications.setLastUpdated('9808040000Z')
if mibBuilder.loadTexts: notifications.setOrganization('Sun Microsystems Inc.')
sun = MibIdentifier((1, 3, 6, 1, 4, 1, 42))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2))
management = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 2))
sma = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 2, 4))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 0))
trapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1))
statusChange = NotificationType((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 0, 1)).setObjects(("SMA-NOTIFICATION-MIB", "hostName"), ("SMA-NOTIFICATION-MIB", "moduleName"), ("SMA-NOTIFICATION-MIB", "statusOID"), ("SMA-NOTIFICATION-MIB", "statusOIDContext"), ("SMA-NOTIFICATION-MIB", "status"), ("SMA-NOTIFICATION-MIB", "description"), ("SMA-NOTIFICATION-MIB", "dataValue"), ("SMA-NOTIFICATION-MIB", "dataValueType"))
if mibBuilder.loadTexts: statusChange.setStatus('current')
hostName = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hostName.setStatus('current')
moduleName = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: moduleName.setStatus('current')
statusOID = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 3), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: statusOID.setStatus('current')
statusOIDContext = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: statusOIDContext.setStatus('current')
status = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: status.setStatus('current')
description = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: description.setStatus('current')
dataValue = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dataValue.setStatus('current')
dataValueType = MibScalar((1, 3, 6, 1, 4, 1, 42, 2, 2, 4, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 100))).clone(namedValues=NamedValues(("none", 0), ("integer", 1), ("octetString", 2), ("objectIdentifier", 3), ("integer32", 4), ("ipAddress", 5), ("counter32", 6), ("gauge32", 7), ("unsigned32", 8), ("timeTicks", 9), ("opaque", 10), ("counter64", 11), ("displayString", 12), ("physAddress", 13), ("macAddress", 14), ("truthValue", 15), ("testAndIncr", 16), ("autonomousType", 17), ("variablePointer", 18), ("rowPointer", 19), ("rowStatus", 20), ("storageType", 21), ("tDomain", 22), ("tAddress", 23), ("other", 100)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dataValueType.setStatus('current')
mibBuilder.exportSymbols("SMA-NOTIFICATION-MIB", status=status, statusOID=statusOID, traps=traps, moduleName=moduleName, PYSNMP_MODULE_ID=notifications, products=products, description=description, dataValue=dataValue, hostName=hostName, trapInfo=trapInfo, statusOIDContext=statusOIDContext, sun=sun, notifications=notifications, statusChange=statusChange, sma=sma, dataValueType=dataValueType, management=management)
