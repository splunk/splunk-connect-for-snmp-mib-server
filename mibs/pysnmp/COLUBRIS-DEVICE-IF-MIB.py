#
# PySNMP MIB module COLUBRIS-DEVICE-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/COLUBRIS-DEVICE-IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:09:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
coDevDisIndex, = mibBuilder.importSymbols("COLUBRIS-DEVICE-MIB", "coDevDisIndex")
colubrisMgmtV2, = mibBuilder.importSymbols("COLUBRIS-SMI", "colubrisMgmtV2")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter64, Bits, TimeTicks, ObjectIdentity, ModuleIdentity, IpAddress, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, Unsigned32, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "IpAddress", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "Unsigned32", "iso", "Gauge32")
TruthValue, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "MacAddress", "DisplayString", "TextualConvention")
colubrisDeviceIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 8744, 5, 24))
if mibBuilder.loadTexts: colubrisDeviceIfMIB.setLastUpdated('200901140000Z')
if mibBuilder.loadTexts: colubrisDeviceIfMIB.setOrganization('Colubris Networks, Inc.')
colubrisDeviceIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1))
coDeviceIfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1))
coDeviceIfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2))
coDeviceIfFdbGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 3))
coDeviceIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1), )
if mibBuilder.loadTexts: coDeviceIfStatusTable.setStatus('current')
coDeviceIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1), ).setIndexNames((0, "COLUBRIS-DEVICE-MIB", "coDevDisIndex"), (0, "COLUBRIS-DEVICE-IF-MIB", "coDevIfStaIfIndex"))
if mibBuilder.loadTexts: coDeviceIfStatusEntry.setStatus('current')
coDevIfStaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevIfStaIfIndex.setStatus('current')
coDevIfStaFriendlyInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaFriendlyInterfaceName.setStatus('current')
coDevIfStaType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("l2vlan", 3), ("bridge", 4), ("ieee80211", 5), ("ieee80211Wds", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaType.setStatus('current')
coDevIfStaVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaVLAN.setStatus('current')
coDevIfStaIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaIpAddress.setStatus('current')
coDevIfStaNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaNetworkMask.setStatus('current')
coDevIfStaMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaMACAddress.setStatus('current')
coDevIfStaState = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaState.setStatus('current')
coDevIfStaPowerForwardingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaPowerForwardingStatus.setStatus('current')
coDeviceIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1), )
if mibBuilder.loadTexts: coDeviceIfStatsTable.setStatus('current')
coDeviceIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1), )
coDeviceIfStatusEntry.registerAugmentions(("COLUBRIS-DEVICE-IF-MIB", "coDeviceIfStatsEntry"))
coDeviceIfStatsEntry.setIndexNames(*coDeviceIfStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceIfStatsEntry.setStatus('current')
coDevIfStsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxBytes.setStatus('current')
coDevIfStsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxPackets.setStatus('current')
coDevIfStsRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxErrors.setStatus('current')
coDevIfStsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxBytes.setStatus('current')
coDevIfStsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxPackets.setStatus('current')
coDevIfStsTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxErrors.setStatus('current')
coDeviceIfFdbTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 3, 1), )
if mibBuilder.loadTexts: coDeviceIfFdbTable.setStatus('current')
coDeviceIfFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 3, 1, 1), ).setIndexNames((0, "COLUBRIS-DEVICE-MIB", "coDevDisIndex"), (0, "COLUBRIS-DEVICE-IF-MIB", "coDevIfStaIfIndex"), (0, "COLUBRIS-DEVICE-IF-MIB", "coDevIfFdbMacIndex"))
if mibBuilder.loadTexts: coDeviceIfFdbEntry.setStatus('current')
coDevIfFdbMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevIfFdbMacIndex.setStatus('current')
coDevIfFdbMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 3, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfFdbMACAddress.setStatus('current')
coDevIfFdbAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 3, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfFdbAuthorized.setStatus('current')
coDevIfFdbAgeing = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 3, 1, 1, 4), Integer32()).setUnits('msec').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfFdbAgeing.setStatus('current')
colubrisDeviceIfMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 2))
colubrisDeviceIfMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 2, 0))
colubrisDeviceIfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3))
colubrisDeviceIfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 1))
colubrisDeviceIfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2))
colubrisDeviceIfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 1, 1)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "colubrisDeviceIfStatusMIBGroup"), ("COLUBRIS-DEVICE-IF-MIB", "colubrisDeviceIfStatsMIBGroup"), ("COLUBRIS-DEVICE-IF-MIB", "colubrisDeviceIfFdbMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfMIBCompliance = colubrisDeviceIfMIBCompliance.setStatus('current')
colubrisDeviceIfStatusMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2, 1)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaFriendlyInterfaceName"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaType"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaVLAN"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaIpAddress"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaNetworkMask"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaMACAddress"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaState"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaPowerForwardingStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfStatusMIBGroup = colubrisDeviceIfStatusMIBGroup.setStatus('current')
colubrisDeviceIfStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2, 2)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsRxBytes"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsRxPackets"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsRxErrors"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsTxBytes"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsTxPackets"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsTxErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfStatsMIBGroup = colubrisDeviceIfStatsMIBGroup.setStatus('current')
colubrisDeviceIfFdbMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2, 3)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "coDevIfFdbMACAddress"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfFdbAuthorized"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfFdbAgeing"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfFdbMIBGroup = colubrisDeviceIfFdbMIBGroup.setStatus('current')
mibBuilder.exportSymbols("COLUBRIS-DEVICE-IF-MIB", colubrisDeviceIfMIBConformance=colubrisDeviceIfMIBConformance, colubrisDeviceIfFdbMIBGroup=colubrisDeviceIfFdbMIBGroup, coDevIfStaType=coDevIfStaType, coDevIfStaIpAddress=coDevIfStaIpAddress, colubrisDeviceIfMIBNotifications=colubrisDeviceIfMIBNotifications, coDevIfStsTxPackets=coDevIfStsTxPackets, colubrisDeviceIfMIBCompliance=colubrisDeviceIfMIBCompliance, coDevIfStaVLAN=coDevIfStaVLAN, coDeviceIfStatsGroup=coDeviceIfStatsGroup, coDevIfStaIfIndex=coDevIfStaIfIndex, coDevIfFdbMACAddress=coDevIfFdbMACAddress, coDeviceIfFdbTable=coDeviceIfFdbTable, coDevIfFdbAgeing=coDevIfFdbAgeing, colubrisDeviceIfMIBNotificationPrefix=colubrisDeviceIfMIBNotificationPrefix, coDevIfStsRxBytes=coDevIfStsRxBytes, colubrisDeviceIfMIBObjects=colubrisDeviceIfMIBObjects, coDevIfStaNetworkMask=coDevIfStaNetworkMask, coDevIfStaState=coDevIfStaState, coDeviceIfStatusGroup=coDeviceIfStatusGroup, coDevIfStaFriendlyInterfaceName=coDevIfStaFriendlyInterfaceName, coDeviceIfFdbEntry=coDeviceIfFdbEntry, coDevIfStsTxErrors=coDevIfStsTxErrors, colubrisDeviceIfStatsMIBGroup=colubrisDeviceIfStatsMIBGroup, coDeviceIfFdbGroup=coDeviceIfFdbGroup, PYSNMP_MODULE_ID=colubrisDeviceIfMIB, colubrisDeviceIfStatusMIBGroup=colubrisDeviceIfStatusMIBGroup, coDeviceIfStatusEntry=coDeviceIfStatusEntry, coDevIfStsRxPackets=coDevIfStsRxPackets, colubrisDeviceIfMIBGroups=colubrisDeviceIfMIBGroups, coDevIfStaPowerForwardingStatus=coDevIfStaPowerForwardingStatus, coDeviceIfStatsTable=coDeviceIfStatsTable, coDevIfFdbMacIndex=coDevIfFdbMacIndex, coDevIfStsRxErrors=coDevIfStsRxErrors, colubrisDeviceIfMIB=colubrisDeviceIfMIB, coDeviceIfStatusTable=coDeviceIfStatusTable, coDevIfStsTxBytes=coDevIfStsTxBytes, coDevIfFdbAuthorized=coDevIfFdbAuthorized, coDeviceIfStatsEntry=coDeviceIfStatsEntry, coDevIfStaMACAddress=coDevIfStaMACAddress, colubrisDeviceIfMIBCompliances=colubrisDeviceIfMIBCompliances)
