#
# PySNMP MIB module WILAN-120-58-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WILAN-120-58-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, ModuleIdentity, enterprises, IpAddress, Bits, Counter32, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Integer32, Gauge32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "enterprises", "IpAddress", "Bits", "Counter32", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Integer32", "Gauge32", "Unsigned32")
PhysAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "TextualConvention", "DisplayString")
wilan = MibIdentifier((1, 3, 6, 1, 4, 1, 2686))
awe120_58 = MibIdentifier((1, 3, 6, 1, 4, 1, 2686, 2)).setLabel("awe120-58")
config = MibIdentifier((1, 3, 6, 1, 4, 1, 2686, 2, 1))
serialNumber = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialNumber.setStatus('current')
productionDate = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: productionDate.setStatus('current')
macAddress = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macAddress.setStatus('current')
systemName = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemName.setStatus('current')
unitLocation = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: unitLocation.setStatus('current')
contactName = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: contactName.setStatus('current')
config7 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config7.setStatus('current')
config8 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config8.setStatus('current')
config9 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config9.setStatus('current')
ipAddress = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAddress.setStatus('current')
ipNewAddress = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipNewAddress.setStatus('current')
ipSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSubnetMask.setStatus('current')
ipGatewayAddr = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipGatewayAddr.setStatus('current')
ipNetmanAddr = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipNetmanAddr.setStatus('current')
ipPacketFiltering = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipPacketFiltering.setStatus('current')
ipAddressFiltering = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipAddressFiltering.setStatus('current')
ipFilter1Range = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter1Range.setStatus('current')
ipFilter1Base = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter1Base.setStatus('current')
ipFilter2Range = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter2Range.setStatus('current')
ipFilter2Base = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter2Base.setStatus('current')
ipFilter3Range = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter3Range.setStatus('current')
ipFilter3Base = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 22), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter3Base.setStatus('current')
ipFilter4Range = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter4Range.setStatus('current')
ipFilter4Base = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 24), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter4Base.setStatus('current')
ipFilter5Range = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter5Range.setStatus('current')
ipFilter5Base = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 26), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipFilter5Base.setStatus('current')
macFilterEntryAge = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macFilterEntryAge.setStatus('current')
config28 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config28.setStatus('current')
config29 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config29.setStatus('current')
stationType = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("remote", 0), ("base-stn", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationType.setStatus('current')
stationRank = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationRank.setStatus('current')
centerFreq = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(57410, 58338))).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerFreq.setStatus('current')
securityWord1 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: securityWord1.setStatus('current')
securityWord2 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: securityWord2.setStatus('current')
securityWord3 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: securityWord3.setStatus('current')
securityWord4 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: securityWord4.setStatus('current')
securityWord5 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: securityWord5.setStatus('current')
scramblingCode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scramblingCode.setStatus('current')
acquisitionCode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acquisitionCode.setStatus('current')
configMinutes = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configMinutes.setStatus('current')
repeaterMode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: repeaterMode.setStatus('current')
systemType = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("asymmetric", 0), ("symmetric", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemType.setStatus('current')
remoteGroup = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteGroup.setStatus('current')
numOfPollRounds = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: numOfPollRounds.setStatus('current')
txPwrLevelAdj = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0))).clone(namedValues=NamedValues(("dB0", 31), ("dB-1", 30), ("dB-2", 29), ("dB-3", 28), ("dB-4", 27), ("dB-5", 26), ("dB-6", 25), ("dB-7", 24), ("dB-8", 23), ("dB-9", 22), ("dB-10", 21), ("dB-11", 20), ("dB-12", 19), ("dB-13", 18), ("dB-14", 17), ("dB-15", 16), ("dB-16", 15), ("dB-17", 14), ("dB-18", 13), ("dB-19", 12), ("dB-20", 11), ("dB-21", 10), ("dB-22", 9), ("dB-23", 8), ("dB-24", 7), ("dB-25", 6), ("dB-26", 5), ("dB-27", 4), ("dB-28", 3), ("dB-29", 2), ("dB-30", 1), ("dB-31", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPwrLevelAdj.setStatus('current')
defStationType = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("remote", 0), ("base-stn", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defStationType.setStatus('current')
defStationRank = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defStationRank.setStatus('current')
defCenterFreq = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(57410, 58338))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defCenterFreq.setStatus('current')
defSecurityWord1 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: defSecurityWord1.setStatus('current')
defSecurityWord2 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: defSecurityWord2.setStatus('current')
defSecurityWord3 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: defSecurityWord3.setStatus('current')
defSecurityWord4 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: defSecurityWord4.setStatus('current')
defSecurityWord5 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: defSecurityWord5.setStatus('current')
defScramblingCode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: defScramblingCode.setStatus('current')
defAcquisitionCode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defAcquisitionCode.setStatus('current')
defConfigMinutes = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defConfigMinutes.setStatus('current')
defRepeaterMode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defRepeaterMode.setStatus('current')
defSystemType = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("asymmetric", 0), ("symmetric", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defSystemType.setStatus('current')
defRemoteGroup = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defRemoteGroup.setStatus('current')
defNumOfPollRounds = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defNumOfPollRounds.setStatus('current')
defTxPwrLevelAdj = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0))).clone(namedValues=NamedValues(("dB0", 31), ("dB-1", 30), ("dB-2", 29), ("dB-3", 28), ("dB-4", 27), ("dB-5", 26), ("dB-6", 25), ("dB-7", 24), ("dB-8", 23), ("dB-9", 22), ("dB-10", 21), ("dB-11", 20), ("dB-12", 19), ("dB-13", 18), ("dB-14", 17), ("dB-15", 16), ("dB-16", 15), ("dB-17", 14), ("dB-18", 13), ("dB-19", 12), ("dB-20", 11), ("dB-21", 10), ("dB-22", 9), ("dB-23", 8), ("dB-24", 7), ("dB-25", 6), ("dB-26", 5), ("dB-27", 4), ("dB-28", 3), ("dB-29", 2), ("dB-30", 1), ("dB-31", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defTxPwrLevelAdj.setStatus('current')
newStationType = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("remote", 0), ("base-stn", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newStationType.setStatus('current')
newStationRank = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newStationRank.setStatus('current')
newCenterFreq = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(57410, 58338))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newCenterFreq.setStatus('current')
newSecurityWord1 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 65), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newSecurityWord1.setStatus('current')
newSecurityWord2 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 66), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newSecurityWord2.setStatus('current')
newSecurityWord3 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 67), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newSecurityWord3.setStatus('current')
newSecurityWord4 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 68), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newSecurityWord4.setStatus('current')
newSecurityWord5 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 69), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newSecurityWord5.setStatus('current')
newScramblingCode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 70), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newScramblingCode.setStatus('current')
newAcquisitionCode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newAcquisitionCode.setStatus('current')
newConfigMinutes = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newConfigMinutes.setStatus('current')
newRepeaterMode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newRepeaterMode.setStatus('current')
newSystemType = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("asymmetric", 0), ("symmetric", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newSystemType.setStatus('current')
newRemoteGroup = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newRemoteGroup.setStatus('current')
newNumOfPollRounds = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 76), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newNumOfPollRounds.setStatus('current')
newTxPwrLevelAdj = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 77), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0))).clone(namedValues=NamedValues(("dB0", 31), ("dB-1", 30), ("dB-2", 29), ("dB-3", 28), ("dB-4", 27), ("dB-5", 26), ("dB-6", 25), ("dB-7", 24), ("dB-8", 23), ("dB-9", 22), ("dB-10", 21), ("dB-11", 20), ("dB-12", 19), ("dB-13", 18), ("dB-14", 17), ("dB-15", 16), ("dB-16", 15), ("dB-17", 14), ("dB-18", 13), ("dB-19", 12), ("dB-20", 11), ("dB-21", 10), ("dB-22", 9), ("dB-23", 8), ("dB-24", 7), ("dB-25", 6), ("dB-26", 5), ("dB-27", 4), ("dB-28", 3), ("dB-29", 2), ("dB-30", 1), ("dB-31", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: newTxPwrLevelAdj.setStatus('current')
stationMode = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("normal", 0), ("rx-test", 1), ("tx-test", 2), ("rssi-test", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationMode.setStatus('current')
rfTransmitStatus = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("blocked", 0), ("unblocked", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rfTransmitStatus.setStatus('current')
linkMonitorPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkMonitorPeriod.setStatus('current')
testModeTimer = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 81), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: testModeTimer.setStatus('current')
remoteDistance = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("km05", 1), ("km10", 2), ("km15", 3), ("km20", 4), ("km25", 5), ("km30", 6), ("km35", 7), ("km40", 8), ("km45", 9), ("km50", 10), ("km55", 11), ("km60", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteDistance.setStatus('current')
linkMonitorRank = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 83), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkMonitorRank.setStatus('current')
throttleEnable = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: throttleEnable.setStatus('current')
throttleLevel = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 85), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: throttleLevel.setStatus('current')
config86 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 86), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config86.setStatus('current')
config87 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 87), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config87.setStatus('current')
config88 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 88), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config88.setStatus('current')
config89 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 89), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config89.setStatus('current')
communityName1 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 90), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: communityName1.setStatus('current')
communityName2 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 91), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: communityName2.setStatus('current')
ethernetAccess = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 92), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetAccess.setStatus('current')
wirelessAccess = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 93), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessAccess.setStatus('current')
config94 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 94), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config94.setStatus('current')
currentImage = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 95), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentImage.setStatus('current')
defaultImage = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 96), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultImage.setStatus('current')
prevDefaultImage = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 97), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prevDefaultImage.setStatus('current')
config98 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 98), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config98.setStatus('current')
config99 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 99), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config99.setStatus('current')
systemImageList = MibTable((1, 3, 6, 1, 4, 1, 2686, 2, 1, 100), )
if mibBuilder.loadTexts: systemImageList.setStatus('current')
systemImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2686, 2, 1, 100, 1), ).setIndexNames((0, "WILAN-120-58-MIB", "systemImageNumber"))
if mibBuilder.loadTexts: systemImageEntry.setStatus('current')
systemImageNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2686, 2, 1, 100, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemImageNumber.setStatus('current')
systemImageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2686, 2, 1, 100, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemImageName.setStatus('current')
systemImageRevn = MibTableColumn((1, 3, 6, 1, 4, 1, 2686, 2, 1, 100, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemImageRevn.setStatus('current')
systemImageDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2686, 2, 1, 100, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemImageDate.setStatus('current')
systemImageTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2686, 2, 1, 100, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemImageTime.setStatus('current')
systemImageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2686, 2, 1, 100, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemImageSize.setStatus('current')
systemImageText = MibTableColumn((1, 3, 6, 1, 4, 1, 2686, 2, 1, 100, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemImageText.setStatus('current')
config101 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 101), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config101.setStatus('current')
config102 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config102.setStatus('current')
config103 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 103), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config103.setStatus('current')
config104 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 1, 104), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: config104.setStatus('current')
status = MibIdentifier((1, 3, 6, 1, 4, 1, 2686, 2, 2))
totalHours = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalHours.setStatus('current')
systemHours = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHours.setStatus('current')
loginOkays = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: loginOkays.setStatus('current')
loginFails = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: loginFails.setStatus('current')
localUser = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("user", 1), ("supervisor", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: localUser.setStatus('current')
telnetUser = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("user", 1), ("supervisor", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: telnetUser.setStatus('current')
ftpUser = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("user", 1), ("supervisor", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpUser.setStatus('current')
statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2686, 2, 3))
etherRxTotalPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherRxTotalPkts.setStatus('current')
etherRxLocalPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherRxLocalPkts.setStatus('current')
etherRxErrorPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherRxErrorPkts.setStatus('current')
etherRxDroppedPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherRxDroppedPkts.setStatus('current')
etherRxDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherRxDiscardPkts.setStatus('current')
etherRxTotalKbytes = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherRxTotalKbytes.setStatus('current')
etherRxBcastKbytes = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherRxBcastKbytes.setStatus('current')
etherTxTotalPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherTxTotalPkts.setStatus('current')
etherTxDroppedPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherTxDroppedPkts.setStatus('current')
etherTxTotalKbytes = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherTxTotalKbytes.setStatus('current')
etherTxBcastKbytes = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherTxBcastKbytes.setStatus('current')
rfRxTotalPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxTotalPkts.setStatus('current')
rfRxLocalPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxLocalPkts.setStatus('current')
rfRxDroppedPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxDroppedPkts.setStatus('current')
rfRxDiscardedPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxDiscardedPkts.setStatus('current')
rfTxTotalPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfTxTotalPkts.setStatus('current')
rfTxLocalPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfTxLocalPkts.setStatus('current')
rfTxDroppedPkts = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfTxDroppedPkts.setStatus('current')
rfRxSframeCount = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxSframeCount.setStatus('current')
rfRxOverrunErrors = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxOverrunErrors.setStatus('current')
rfRxSFrameErrors = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxSFrameErrors.setStatus('current')
rfRxChecksumErrors = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxChecksumErrors.setStatus('current')
rfRxPacketErrors = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxPacketErrors.setStatus('current')
rfRxLengthErrors = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfRxLengthErrors.setStatus('current')
rfTxSuperFrameCnt = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfTxSuperFrameCnt.setStatus('current')
rfEtoIThroughput = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfEtoIThroughput.setStatus('current')
rfItoEThroughput = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rfItoEThroughput.setStatus('current')
statistics24 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: statistics24.setStatus('current')
linkMonitorRank1 = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkMonitorRank1.setStatus('current')
linkMonRtoBber = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkMonRtoBber.setStatus('current')
linkMonBtoRber = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkMonBtoRber.setStatus('current')
linkMonMissPktCnt = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkMonMissPktCnt.setStatus('current')
linkMonEnvPBtoR = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkMonEnvPBtoR.setStatus('current')
linkMonEnvPRtoB = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkMonEnvPRtoB.setStatus('current')
linkMonCorrPBtoR = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkMonCorrPBtoR.setStatus('current')
linkMonCorrPRtoB = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 3, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkMonCorrPRtoB.setStatus('current')
commands = MibIdentifier((1, 3, 6, 1, 4, 1, 2686, 2, 4))
rebootCurrent = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rebootCurrent.setStatus('current')
rebootImage = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rebootImage.setStatus('current')
rebootNewRfConfig = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rebootNewRfConfig.setStatus('current')
restFactConfReboot = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("restore", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restFactConfReboot.setStatus('current')
saveConfToFlash = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("save", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saveConfToFlash.setStatus('current')
resetRadioStats = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetRadioStats.setStatus('current')
resetEthernetStats = MibScalar((1, 3, 6, 1, 4, 1, 2686, 2, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetEthernetStats.setStatus('current')
mibBuilder.exportSymbols("WILAN-120-58-MIB", awe120_58=awe120_58, systemHours=systemHours, securityWord1=securityWord1, configMinutes=configMinutes, securityWord3=securityWord3, ipFilter4Base=ipFilter4Base, macFilterEntryAge=macFilterEntryAge, defRemoteGroup=defRemoteGroup, etherRxDiscardPkts=etherRxDiscardPkts, ipSubnetMask=ipSubnetMask, communityName2=communityName2, rfTxSuperFrameCnt=rfTxSuperFrameCnt, newSecurityWord1=newSecurityWord1, ipFilter3Base=ipFilter3Base, productionDate=productionDate, systemName=systemName, config=config, statistics24=statistics24, linkMonBtoRber=linkMonBtoRber, rfTxDroppedPkts=rfTxDroppedPkts, linkMonEnvPBtoR=linkMonEnvPBtoR, defTxPwrLevelAdj=defTxPwrLevelAdj, linkMonitorPeriod=linkMonitorPeriod, repeaterMode=repeaterMode, rfRxSframeCount=rfRxSframeCount, rebootCurrent=rebootCurrent, rfTransmitStatus=rfTransmitStatus, saveConfToFlash=saveConfToFlash, newStationType=newStationType, systemImageName=systemImageName, defNumOfPollRounds=defNumOfPollRounds, telnetUser=telnetUser, ipFilter2Range=ipFilter2Range, restFactConfReboot=restFactConfReboot, systemImageNumber=systemImageNumber, config86=config86, config88=config88, stationMode=stationMode, loginFails=loginFails, ftpUser=ftpUser, systemImageText=systemImageText, throttleEnable=throttleEnable, rfRxTotalPkts=rfRxTotalPkts, localUser=localUser, etherTxTotalPkts=etherTxTotalPkts, rfRxSFrameErrors=rfRxSFrameErrors, loginOkays=loginOkays, rfRxLocalPkts=rfRxLocalPkts, newNumOfPollRounds=newNumOfPollRounds, newSecurityWord4=newSecurityWord4, newSecurityWord2=newSecurityWord2, securityWord4=securityWord4, ipNewAddress=ipNewAddress, newStationRank=newStationRank, securityWord2=securityWord2, systemType=systemType, etherTxBcastKbytes=etherTxBcastKbytes, ipFilter5Range=ipFilter5Range, stationRank=stationRank, scramblingCode=scramblingCode, defStationType=defStationType, rfRxPacketErrors=rfRxPacketErrors, ipPacketFiltering=ipPacketFiltering, ipNetmanAddr=ipNetmanAddr, config87=config87, rfRxLengthErrors=rfRxLengthErrors, config103=config103, remoteDistance=remoteDistance, stationType=stationType, config101=config101, etherTxTotalKbytes=etherTxTotalKbytes, linkMonMissPktCnt=linkMonMissPktCnt, status=status, serialNumber=serialNumber, currentImage=currentImage, testModeTimer=testModeTimer, config99=config99, contactName=contactName, defAcquisitionCode=defAcquisitionCode, newAcquisitionCode=newAcquisitionCode, ethernetAccess=ethernetAccess, systemImageTime=systemImageTime, resetRadioStats=resetRadioStats, newSecurityWord5=newSecurityWord5, defSecurityWord5=defSecurityWord5, linkMonCorrPBtoR=linkMonCorrPBtoR, defStationRank=defStationRank, communityName1=communityName1, rfRxOverrunErrors=rfRxOverrunErrors, newConfigMinutes=newConfigMinutes, config7=config7, newScramblingCode=newScramblingCode, newSecurityWord3=newSecurityWord3, config29=config29, defRepeaterMode=defRepeaterMode, ipFilter4Range=ipFilter4Range, remoteGroup=remoteGroup, defaultImage=defaultImage, config8=config8, ipFilter1Base=ipFilter1Base, statistics=statistics, macAddress=macAddress, defConfigMinutes=defConfigMinutes, commands=commands, linkMonRtoBber=linkMonRtoBber, resetEthernetStats=resetEthernetStats, acquisitionCode=acquisitionCode, numOfPollRounds=numOfPollRounds, etherRxTotalPkts=etherRxTotalPkts, ipFilter1Range=ipFilter1Range, etherRxErrorPkts=etherRxErrorPkts, rebootNewRfConfig=rebootNewRfConfig, ipFilter5Base=ipFilter5Base, ipGatewayAddr=ipGatewayAddr, rfRxDiscardedPkts=rfRxDiscardedPkts, etherTxDroppedPkts=etherTxDroppedPkts, linkMonitorRank1=linkMonitorRank1, newSystemType=newSystemType, rebootImage=rebootImage, txPwrLevelAdj=txPwrLevelAdj, newRepeaterMode=newRepeaterMode, centerFreq=centerFreq, systemImageList=systemImageList, defScramblingCode=defScramblingCode, securityWord5=securityWord5, newRemoteGroup=newRemoteGroup, config94=config94, etherRxLocalPkts=etherRxLocalPkts, ipFilter2Base=ipFilter2Base, linkMonCorrPRtoB=linkMonCorrPRtoB, ipAddress=ipAddress, newTxPwrLevelAdj=newTxPwrLevelAdj, wirelessAccess=wirelessAccess, config9=config9, wilan=wilan, unitLocation=unitLocation, systemImageEntry=systemImageEntry, defSecurityWord2=defSecurityWord2, config104=config104, config98=config98, prevDefaultImage=prevDefaultImage, config28=config28, linkMonitorRank=linkMonitorRank, rfTxTotalPkts=rfTxTotalPkts, defCenterFreq=defCenterFreq, totalHours=totalHours, config89=config89, rfTxLocalPkts=rfTxLocalPkts, etherRxDroppedPkts=etherRxDroppedPkts, rfRxDroppedPkts=rfRxDroppedPkts, ipAddressFiltering=ipAddressFiltering, rfRxChecksumErrors=rfRxChecksumErrors, rfItoEThroughput=rfItoEThroughput, systemImageDate=systemImageDate, defSecurityWord4=defSecurityWord4, defSecurityWord3=defSecurityWord3, systemImageSize=systemImageSize, ipFilter3Range=ipFilter3Range, defSystemType=defSystemType, throttleLevel=throttleLevel, defSecurityWord1=defSecurityWord1, rfEtoIThroughput=rfEtoIThroughput, etherRxTotalKbytes=etherRxTotalKbytes, linkMonEnvPRtoB=linkMonEnvPRtoB, config102=config102, newCenterFreq=newCenterFreq, etherRxBcastKbytes=etherRxBcastKbytes, systemImageRevn=systemImageRevn)
