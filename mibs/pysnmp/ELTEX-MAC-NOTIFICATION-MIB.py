#
# PySNMP MIB module ELTEX-MAC-NOTIFICATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MAC-NOTIFICATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:46:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
VlanIndex, = mibBuilder.importSymbols("CISCO-VTP-MIB", "VlanIndex")
eltexLtd, = mibBuilder.importSymbols("ELTEX-SMI-ACTUAL", "eltexLtd")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier, Counter64, IpAddress, ObjectIdentity, ModuleIdentity, TimeTicks, NotificationType, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier", "Counter64", "IpAddress", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "NotificationType", "Unsigned32", "Counter32")
MacAddress, TimeStamp, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TimeStamp", "DisplayString", "TruthValue", "TextualConvention")
eltexMacNotificationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 33))
eltexMacNotificationMIB.setRevisions(('2015-11-05 00:00',))
if mibBuilder.loadTexts: eltexMacNotificationMIB.setLastUpdated('201511050000Z')
if mibBuilder.loadTexts: eltexMacNotificationMIB.setOrganization('Eltex Enterprise Co, Ltd.')
eltexMacNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 33, 1))
eltexMnFlappingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 33, 1, 1))
eltexMnFlappingFeatureEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 33, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexMnFlappingFeatureEnabled.setStatus('current')
eltexMnFlappingNotificationsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 33, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexMnFlappingNotificationsEnabled.setStatus('current')
eltexMnFlappingAddress = MibScalar((1, 3, 6, 1, 4, 1, 35265, 33, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexMnFlappingAddress.setStatus('current')
eltexMnFlappingVlanNumber = MibScalar((1, 3, 6, 1, 4, 1, 35265, 33, 1, 1, 4), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexMnFlappingVlanNumber.setStatus('current')
eltexMnFlappingFirstPortId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 33, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexMnFlappingFirstPortId.setStatus('current')
eltexMnFlappingSecondPortId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 33, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexMnFlappingSecondPortId.setStatus('current')
eltexMnFlappingTime = MibScalar((1, 3, 6, 1, 4, 1, 35265, 33, 1, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexMnFlappingTime.setStatus('current')
eltexMnNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 33, 2))
eltexMnNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 33, 2, 0))
eltexMnFlappingNotification = NotificationType((1, 3, 6, 1, 4, 1, 35265, 33, 2, 0, 1)).setObjects(("ELTEX-MAC-NOTIFICATION-MIB", "eltexMnFlappingAddress"), ("ELTEX-MAC-NOTIFICATION-MIB", "eltexMnFlappingVlanNumber"), ("ELTEX-MAC-NOTIFICATION-MIB", "eltexMnFlappingFirstPortId"), ("ELTEX-MAC-NOTIFICATION-MIB", "eltexMnFlappingSecondPortId"), ("ELTEX-MAC-NOTIFICATION-MIB", "eltexMnFlappingTime"))
if mibBuilder.loadTexts: eltexMnFlappingNotification.setStatus('current')
mibBuilder.exportSymbols("ELTEX-MAC-NOTIFICATION-MIB", eltexMnFlappingAddress=eltexMnFlappingAddress, eltexMnNotifications=eltexMnNotifications, eltexMnFlappingVlanNumber=eltexMnFlappingVlanNumber, eltexMnNotificationPrefix=eltexMnNotificationPrefix, eltexMacNotificationMIB=eltexMacNotificationMIB, eltexMnFlappingNotification=eltexMnFlappingNotification, eltexMnFlappingFirstPortId=eltexMnFlappingFirstPortId, eltexMnFlappingSecondPortId=eltexMnFlappingSecondPortId, eltexMacNotificationObjects=eltexMacNotificationObjects, eltexMnFlappingNotificationsEnabled=eltexMnFlappingNotificationsEnabled, PYSNMP_MODULE_ID=eltexMacNotificationMIB, eltexMnFlappingFeatureEnabled=eltexMnFlappingFeatureEnabled, eltexMnFlappingTime=eltexMnFlappingTime, eltexMnFlappingObjects=eltexMnFlappingObjects)
