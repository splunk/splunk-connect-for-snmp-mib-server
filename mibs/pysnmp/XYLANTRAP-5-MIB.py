#
# PySNMP MIB module XYLANTRAP-5-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLANTRAP-5-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:39:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
chasControlSlot, chasControlState, chasModuleSlot, chasModuleSubUnit, chasPowerSupply1State, chasPowerSupply2State, chasModuleType, chasModuleOperStatus = mibBuilder.importSymbols("CHASSIS-MIB", "chasControlSlot", "chasControlState", "chasModuleSlot", "chasModuleSubUnit", "chasPowerSupply1State", "chasPowerSupply2State", "chasModuleType", "chasModuleOperStatus")
fddimibSMTIndex, fddimibSMTCFState = mibBuilder.importSymbols("FDDI-SMT73-MIB", "fddimibSMTIndex", "fddimibSMTCFState")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, NotificationType, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, Counter64, Gauge32, NotificationType, ModuleIdentity, IpAddress, MibIdentifier, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "Counter64", "Gauge32", "NotificationType", "ModuleIdentity", "IpAddress", "MibIdentifier", "Unsigned32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
atmxServicePortIndex, atmxServiceAdmStatus, atmxPortPortIndex, atmxVccPortIndex, atmxServiceSlotIndex, atmxServiceNumber, atmxVccVci, atmxVccAdmStatus, atmxPortSlotIndex, atmxVccSlotIndex, atmxPortEnableILMI, atmxVccVpi = mibBuilder.importSymbols("XYLAN-ATM-MIB", "atmxServicePortIndex", "atmxServiceAdmStatus", "atmxPortPortIndex", "atmxVccPortIndex", "atmxServiceSlotIndex", "atmxServiceNumber", "atmxVccVci", "atmxVccAdmStatus", "atmxPortSlotIndex", "atmxVccSlotIndex", "atmxPortEnableILMI", "atmxVccVpi")
omniswitch5, xylanSwitchDevice, omniswitch9, microSwitch, xylan, pizzaSwitch = mibBuilder.importSymbols("XYLAN-BASE-MIB", "omniswitch5", "xylanSwitchDevice", "omniswitch9", "microSwitch", "xylan", "pizzaSwitch")
frxVcControlPortIndex, frxVcControlSlotIndex, frxVcControlDlci = mibBuilder.importSymbols("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex", "frxVcControlSlotIndex", "frxVcControlDlci")
healthThreshModTrapCount, healthThreshModTrapData, healthThreshDevTrapData = mibBuilder.importSymbols("XYLAN-HEALTH-MIB", "healthThreshModTrapCount", "healthThreshModTrapData", "healthThreshDevTrapData")
xylanIpAssocMac, xylanIpAssocDupSlot, xylanIpAssocAddr, xylanIpAssocIntf, xylanIpAssocDupMac, xylanIpAssocSlot, xylanIpAssocDupIntf = mibBuilder.importSymbols("XYLAN-IP-MIB", "xylanIpAssocMac", "xylanIpAssocDupSlot", "xylanIpAssocAddr", "xylanIpAssocIntf", "xylanIpAssocDupMac", "xylanIpAssocSlot", "xylanIpAssocDupIntf")
systemEventTrapNumber, = mibBuilder.importSymbols("XYLAN-MGMTSTN-MIB", "systemEventTrapNumber")
vportFuncType, vportSlot, vportFuncTypeInstance, vportAdmStatus, vportIF = mibBuilder.importSymbols("XYLAN-PORT-MIB", "vportFuncType", "vportSlot", "vportFuncTypeInstance", "vportAdmStatus", "vportIF")
atVLANGroupId, atVLANId, vDupMacSlot, vDupMacIntf, vBrdgTpFdbAddress, vLanAdmStatus, vDupMacMac, vLanNumber, atVLANAdminStatus, vDupMacTime = mibBuilder.importSymbols("XYLAN-VLAN-MIB", "atVLANGroupId", "atVLANId", "vDupMacSlot", "vDupMacIntf", "vBrdgTpFdbAddress", "vLanAdmStatus", "vDupMacMac", "vLanNumber", "atVLANAdminStatus", "vDupMacTime")
tempAlarm5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,1))
moduleChange5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,2)).setObjects(("CHASSIS-MIB", "chasModuleSlot"), ("CHASSIS-MIB", "chasModuleSubUnit"), ("CHASSIS-MIB", "chasModuleType"))
powerEvent5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,3)).setObjects(("CHASSIS-MIB", "chasPowerSupply1State"), ("CHASSIS-MIB", "chasPowerSupply2State"))
controllerEvent5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,4)).setObjects(("CHASSIS-MIB", "chasControlSlot"), ("CHASSIS-MIB", "chasControlState"))
loginViolation5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,5))
macVlanViolation5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,6)).setObjects(("XYLAN-VLAN-MIB", "vBrdgTpFdbAddress"))
macDuplicatePort5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,7)).setObjects(("XYLAN-VLAN-MIB", "vBrdgTpFdbAddress"))
portLinkUpEvent5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,8)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
portLinkDownEvent5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,9)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
portPartitioned5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,10)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
portRecordMismatch5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,11)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
groupChange5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,14)).setObjects(("XYLAN-VLAN-MIB", "vLanNumber"), ("XYLAN-VLAN-MIB", "vLanAdmStatus"))
vlanChange5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,15)).setObjects(("XYLAN-VLAN-MIB", "atVLANGroupId"), ("XYLAN-VLAN-MIB", "atVLANId"), ("XYLAN-VLAN-MIB", "atVLANAdminStatus"))
portMove5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,16)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"), ("XYLAN-PORT-MIB", "vportAdmStatus"))
moduleResetReload5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,17)).setObjects(("CHASSIS-MIB", "chasModuleSlot"), ("CHASSIS-MIB", "chasModuleSubUnit"), ("CHASSIS-MIB", "chasModuleType"), ("CHASSIS-MIB", "chasModuleOperStatus"))
systemEvent5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,18)).setObjects(("XYLAN-MGMTSTN-MIB", "systemEventTrapNumber"))
vlanRouteTableFull5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,19))
sapTableFull5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,20))
atmSSCOPstate5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,21)).setObjects(("XYLAN-ATM-MIB", "atmxPortSlotIndex"), ("XYLAN-ATM-MIB", "atmxPortPortIndex"))
ilmiState5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,22)).setObjects(("XYLAN-ATM-MIB", "atmxPortSlotIndex"), ("XYLAN-ATM-MIB", "atmxPortPortIndex"), ("XYLAN-ATM-MIB", "atmxPortEnableILMI"))
atmConnection5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,23)).setObjects(("XYLAN-ATM-MIB", "atmxVccSlotIndex"), ("XYLAN-ATM-MIB", "atmxVccPortIndex"), ("XYLAN-ATM-MIB", "atmxVccVpi"), ("XYLAN-ATM-MIB", "atmxVccVci"), ("XYLAN-ATM-MIB", "atmxVccAdmStatus"))
atmService5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,24)).setObjects(("XYLAN-ATM-MIB", "atmxServiceSlotIndex"), ("XYLAN-ATM-MIB", "atmxServicePortIndex"), ("XYLAN-ATM-MIB", "atmxServiceNumber"), ("XYLAN-ATM-MIB", "atmxServiceAdmStatus"))
dlciNew5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,27)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
dlciDel5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,28)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
dlciUp5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,29)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
dlciDn5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,30)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
portManualForwardingMode5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,31)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
fddiCFStateChange5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,32)).setObjects(("FDDI-SMT73-MIB", "fddimibSMTIndex"), ("FDDI-SMT73-MIB", "fddimibSMTCFState"))
duplicateIPaddress5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,35)).setObjects(("XYLAN-IP-MIB", "xylanIpAssocAddr"), ("XYLAN-IP-MIB", "xylanIpAssocMac"), ("XYLAN-IP-MIB", "xylanIpAssocSlot"), ("XYLAN-IP-MIB", "xylanIpAssocIntf"), ("XYLAN-IP-MIB", "xylanIpAssocDupMac"), ("XYLAN-IP-MIB", "xylanIpAssocDupSlot"), ("XYLAN-IP-MIB", "xylanIpAssocDupIntf"))
duplicateMACaddress5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,36)).setObjects(("XYLAN-VLAN-MIB", "vDupMacMac"), ("XYLAN-VLAN-MIB", "vDupMacSlot"), ("XYLAN-VLAN-MIB", "vDupMacIntf"), ("XYLAN-VLAN-MIB", "vDupMacTime"))
healthThresholdRising5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,37))
healthThresholdFalling5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,38))
healthThresholdDevice5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,39)).setObjects(("XYLAN-HEALTH-MIB", "healthThreshDevTrapData"))
healthThresholdModule5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,40)).setObjects(("XYLAN-HEALTH-MIB", "healthThreshModTrapCount"), ("XYLAN-HEALTH-MIB", "healthThreshModTrapData"))
pnniRouteConflictPort5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,50))
pnniRouteConflictSamePG5 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 1) + (0,51))
mibBuilder.exportSymbols("XYLANTRAP-5-MIB", duplicateMACaddress5=duplicateMACaddress5, duplicateIPaddress5=duplicateIPaddress5, portMove5=portMove5, atmSSCOPstate5=atmSSCOPstate5, macDuplicatePort5=macDuplicatePort5, pnniRouteConflictSamePG5=pnniRouteConflictSamePG5, powerEvent5=powerEvent5, healthThresholdRising5=healthThresholdRising5, groupChange5=groupChange5, moduleResetReload5=moduleResetReload5, loginViolation5=loginViolation5, sapTableFull5=sapTableFull5, dlciDel5=dlciDel5, portLinkUpEvent5=portLinkUpEvent5, vlanRouteTableFull5=vlanRouteTableFull5, dlciUp5=dlciUp5, portRecordMismatch5=portRecordMismatch5, healthThresholdFalling5=healthThresholdFalling5, pnniRouteConflictPort5=pnniRouteConflictPort5, atmService5=atmService5, vlanChange5=vlanChange5, healthThresholdModule5=healthThresholdModule5, controllerEvent5=controllerEvent5, portPartitioned5=portPartitioned5, tempAlarm5=tempAlarm5, macVlanViolation5=macVlanViolation5, ilmiState5=ilmiState5, fddiCFStateChange5=fddiCFStateChange5, portManualForwardingMode5=portManualForwardingMode5, portLinkDownEvent5=portLinkDownEvent5, systemEvent5=systemEvent5, atmConnection5=atmConnection5, healthThresholdDevice5=healthThresholdDevice5, moduleChange5=moduleChange5, dlciNew5=dlciNew5, dlciDn5=dlciDn5)
