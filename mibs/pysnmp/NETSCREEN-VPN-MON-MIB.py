#
# PySNMP MIB module NETSCREEN-VPN-MON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VPN-MON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
netscreenVpn, netscreenVpnMibModule = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpn", "netscreenVpnMibModule")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, iso, ObjectIdentity, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, MibIdentifier, Counter64, NotificationType, ModuleIdentity, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "ObjectIdentity", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "MibIdentifier", "Counter64", "NotificationType", "ModuleIdentity", "Bits", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
netscreenVpnMonMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 4, 0, 1))
netscreenVpnMonMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-13 00:00', '2001-09-28 00:00', '2000-08-27 00:00',))
if mibBuilder.loadTexts: netscreenVpnMonMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenVpnMonMibModule.setOrganization('Juniper Networks, Inc.')
netscreenVpnMon = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 1))
nsVpnMonTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1), )
if mibBuilder.loadTexts: nsVpnMonTable.setStatus('current')
nsVpnMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1), ).setIndexNames((0, "NETSCREEN-VPN-MON-MIB", "nsVpnMonIndex"))
if mibBuilder.loadTexts: nsVpnMonEntry.setStatus('current')
nsVpnMonIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonIndex.setStatus('current')
nsVpnMonInPlyId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonInPlyId.setStatus('current')
nsVpnMonOutPlyId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonOutPlyId.setStatus('current')
nsVpnMonVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonVpnName.setStatus('current')
nsVpnMonVsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonVsysName.setStatus('current')
nsVpnMonTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("reserved", 0), ("proto-isakmp", 1), ("proto-ipsec-ah", 2), ("proto-ipsec-esp", 3), ("proto-ipcomp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonTunnelType.setStatus('current')
nsVpnMonEspEncAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21))).clone(namedValues=NamedValues(("reserved", 0), ("esp-des-iv64", 1), ("esp-des", 2), ("esp-3des", 3), ("esp-rc5", 4), ("esp-idea", 5), ("esp-cast", 6), ("esp-blowfish", 7), ("esp-3idea", 8), ("esp-des-iv32", 9), ("esp-rc4", 10), ("esp-null", 11), ("esp-aes", 12), ("esp-aes192", 20), ("esp-aes256", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonEspEncAlg.setStatus('current')
nsVpnMonEspAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("reserved", 0), ("hmac-md5", 1), ("hmac-sha", 2), ("des-mac", 3), ("ipdk", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonEspAuthAlg.setStatus('current')
nsVpnMonAhAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4))).clone(namedValues=NamedValues(("reserved", 0), ("ah-md5", 2), ("ah-sha", 3), ("ah-des", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonAhAlg.setStatus('current')
nsVpnMonKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("manual", 0), ("auto-ike", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonKeyType.setStatus('current')
nsVpnMonP1Auth = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unused", 0), ("preshared-key", 1), ("dss-Signature", 2), ("rsa-Signature", 3), ("rsa-Encryption1", 4), ("rsa-Encryption2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonP1Auth.setStatus('current')
nsVpnMonVpnType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("reserved", 0), ("dialup", 1), ("site-to-site", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonVpnType.setStatus('current')
nsVpnMonRmtGwIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonRmtGwIp.setStatus('current')
nsVpnMonRmtGwId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonRmtGwId.setStatus('current')
nsVpnMonMyGwIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonMyGwIp.setStatus('current')
nsVpnMonMyGwId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonMyGwId.setStatus('current')
nsVpnMonOutSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonOutSpi.setStatus('current')
nsVpnMonInSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonInSpi.setStatus('current')
nsVpnMonMonState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonMonState.setStatus('current')
nsVpnMonTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonTunnelState.setStatus('current')
nsVpnMonP1State = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonP1State.setStatus('current')
nsVpnMonP1LifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonP1LifeTime.setStatus('current')
nsVpnMonP2State = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonP2State.setStatus('current')
nsVpnMonP2LifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonP2LifeTime.setStatus('current')
nsVpnMonP2LifeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonP2LifeBytes.setStatus('current')
nsVpnMonDelayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonDelayAvg.setStatus('current')
nsVpnMonDelayLast = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonDelayLast.setStatus('current')
nsVpnMonAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonAvail.setStatus('current')
nsVpnMonSaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonSaId.setStatus('current')
nsVpnMonGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonGroupId.setStatus('current')
nsVpnMonUsrId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonUsrId.setStatus('current')
nsVpnMonStartSessRequestTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 32), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonStartSessRequestTime.setStatus('current')
nsVpnMonStartSessEstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 33), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonStartSessEstTime.setStatus('current')
nsVpnMonEndSessTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 34), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonEndSessTime.setStatus('current')
nsVpnMonBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonBytesIn.setStatus('current')
nsVpnMonBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonBytesOut.setStatus('current')
nsVpnMonPacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonPacketsIn.setStatus('current')
nsVpnMonPacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonPacketsOut.setStatus('current')
nsVpnMonIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonIfIndex.setStatus('current')
nsVpnMonUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 40), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonUpdateTime.setStatus('current')
nsVpnMonDN = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonDN.setStatus('current')
nsVpnMonIfInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 1, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnMonIfInfo.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-VPN-MON-MIB", nsVpnMonBytesIn=nsVpnMonBytesIn, nsVpnMonOutPlyId=nsVpnMonOutPlyId, nsVpnMonInPlyId=nsVpnMonInPlyId, nsVpnMonP1Auth=nsVpnMonP1Auth, nsVpnMonIfInfo=nsVpnMonIfInfo, nsVpnMonOutSpi=nsVpnMonOutSpi, nsVpnMonGroupId=nsVpnMonGroupId, nsVpnMonStartSessEstTime=nsVpnMonStartSessEstTime, netscreenVpnMonMibModule=netscreenVpnMonMibModule, nsVpnMonInSpi=nsVpnMonInSpi, nsVpnMonBytesOut=nsVpnMonBytesOut, nsVpnMonKeyType=nsVpnMonKeyType, nsVpnMonMyGwIp=nsVpnMonMyGwIp, nsVpnMonAhAlg=nsVpnMonAhAlg, nsVpnMonP2State=nsVpnMonP2State, nsVpnMonStartSessRequestTime=nsVpnMonStartSessRequestTime, nsVpnMonIndex=nsVpnMonIndex, nsVpnMonMyGwId=nsVpnMonMyGwId, nsVpnMonP1LifeTime=nsVpnMonP1LifeTime, nsVpnMonTable=nsVpnMonTable, nsVpnMonP2LifeBytes=nsVpnMonP2LifeBytes, nsVpnMonRmtGwIp=nsVpnMonRmtGwIp, PYSNMP_MODULE_ID=netscreenVpnMonMibModule, nsVpnMonEntry=nsVpnMonEntry, nsVpnMonEndSessTime=nsVpnMonEndSessTime, nsVpnMonEspEncAlg=nsVpnMonEspEncAlg, nsVpnMonTunnelState=nsVpnMonTunnelState, nsVpnMonAvail=nsVpnMonAvail, nsVpnMonDelayAvg=nsVpnMonDelayAvg, nsVpnMonEspAuthAlg=nsVpnMonEspAuthAlg, nsVpnMonPacketsOut=nsVpnMonPacketsOut, nsVpnMonVpnType=nsVpnMonVpnType, nsVpnMonUpdateTime=nsVpnMonUpdateTime, nsVpnMonMonState=nsVpnMonMonState, nsVpnMonPacketsIn=nsVpnMonPacketsIn, nsVpnMonDelayLast=nsVpnMonDelayLast, netscreenVpnMon=netscreenVpnMon, nsVpnMonVsysName=nsVpnMonVsysName, nsVpnMonTunnelType=nsVpnMonTunnelType, nsVpnMonP1State=nsVpnMonP1State, nsVpnMonRmtGwId=nsVpnMonRmtGwId, nsVpnMonSaId=nsVpnMonSaId, nsVpnMonUsrId=nsVpnMonUsrId, nsVpnMonP2LifeTime=nsVpnMonP2LifeTime, nsVpnMonIfIndex=nsVpnMonIfIndex, nsVpnMonDN=nsVpnMonDN, nsVpnMonVpnName=nsVpnMonVpnName)
