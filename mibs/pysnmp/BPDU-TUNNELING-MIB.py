#
# PySNMP MIB module BPDU-TUNNELING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BPDU-TUNNELING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:23:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Bits, MibIdentifier, Unsigned32, TimeTicks, Gauge32, ModuleIdentity, Counter64, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Bits", "MibIdentifier", "Unsigned32", "TimeTicks", "Gauge32", "ModuleIdentity", "Counter64", "ObjectIdentity", "IpAddress")
TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString")
swBPDUTunnelMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 60))
if mibBuilder.loadTexts: swBPDUTunnelMIB.setLastUpdated('200802260000Z')
if mibBuilder.loadTexts: swBPDUTunnelMIB.setOrganization('D-Link Corp.')
swBPDUTunnelCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 60, 1))
swBPDUTunnelInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 60, 2))
swBPDUTunnelMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 60, 3))
swBPDUTunnelState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 60, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swBPDUTunnelState.setStatus('current')
swBPDUTunnelSTPMcastAddress = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 60, 2, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBPDUTunnelSTPMcastAddress.setStatus('current')
swBPDUTunnelGVRPMcastAddress = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 60, 2, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBPDUTunnelGVRPMcastAddress.setStatus('current')
swBPDUTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 60, 3, 1), )
if mibBuilder.loadTexts: swBPDUTunnelTable.setStatus('current')
swBPDUTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 60, 3, 1, 1), ).setIndexNames((0, "BPDU-TUNNELING-MIB", "swBPDUTunnelPortIndex"))
if mibBuilder.loadTexts: swBPDUTunnelEntry.setStatus('current')
swBPDUTunnelPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 60, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBPDUTunnelPortIndex.setStatus('current')
swBPDUTunnelPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 60, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("tunnel", 2), ("uplink", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swBPDUTunnelPortType.setStatus('current')
swBPDUTunnelSTPState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 60, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swBPDUTunnelSTPState.setStatus('current')
swBPDUTunnelGVRPState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 60, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swBPDUTunnelGVRPState.setStatus('current')
mibBuilder.exportSymbols("BPDU-TUNNELING-MIB", swBPDUTunnelMIB=swBPDUTunnelMIB, swBPDUTunnelInfo=swBPDUTunnelInfo, swBPDUTunnelEntry=swBPDUTunnelEntry, swBPDUTunnelGVRPState=swBPDUTunnelGVRPState, swBPDUTunnelCtrl=swBPDUTunnelCtrl, swBPDUTunnelPortType=swBPDUTunnelPortType, swBPDUTunnelSTPState=swBPDUTunnelSTPState, swBPDUTunnelMgmt=swBPDUTunnelMgmt, swBPDUTunnelGVRPMcastAddress=swBPDUTunnelGVRPMcastAddress, swBPDUTunnelTable=swBPDUTunnelTable, swBPDUTunnelState=swBPDUTunnelState, PYSNMP_MODULE_ID=swBPDUTunnelMIB, swBPDUTunnelSTPMcastAddress=swBPDUTunnelSTPMcastAddress, swBPDUTunnelPortIndex=swBPDUTunnelPortIndex)
