#
# PySNMP MIB module Wellfleet-DCMMW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-DCMMW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Integer32, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, Counter64, Gauge32, MibIdentifier, iso, ModuleIdentity, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "Counter64", "Gauge32", "MibIdentifier", "iso", "ModuleIdentity", "Unsigned32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfDCMmwGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfDCMmwGroup")
wfDCMmw = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1))
wfDCMmwDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwDelete.setStatus('obsolete')
wfDCMmwDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwDisable.setStatus('obsolete')
wfDCMmwImageName = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwImageName.setStatus('obsolete')
wfDCMmwBootOption = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("download", 2))).clone('local')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwBootOption.setStatus('obsolete')
wfDCMmwImageSaveMode = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("save", 1), ("nosave", 2))).clone('save')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwImageSaveMode.setStatus('obsolete')
wfDCMmwCfgMode = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("shmem", 2))).clone('local')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwCfgMode.setStatus('obsolete')
wfDCMmwWriteConfigInfo = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("save", 1), ("nosave", 2))).clone('save')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwWriteConfigInfo.setStatus('obsolete')
wfDCMmwRMONMaxHost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 8128)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwRMONMaxHost.setStatus('obsolete')
wfDCMmwRMONDfltHost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwRMONDfltHost.setStatus('obsolete')
wfDCMmwRMONDfltMtrix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMmwRMONDfltMtrix.setStatus('obsolete')
wfDCMmwRMONHost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMmwRMONHost.setStatus('obsolete')
wfDCMRmonAgent = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMRmonAgent.setStatus('obsolete')
wfDCMMemSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMMemSize.setStatus('obsolete')
wfDCMHwRev = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMHwRev.setStatus('obsolete')
wfDCMFwRev = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMFwRev.setStatus('obsolete')
wfDCMAgentImageVersion = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMAgentImageVersion.setStatus('obsolete')
wfDCMmwNumDCM = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMmwNumDCM.setStatus('obsolete')
wfDCMTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2), )
if mibBuilder.loadTexts: wfDCMTable.setStatus('mandatory')
wfDCMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1), ).setIndexNames((0, "Wellfleet-DCMMW-MIB", "wfDCMIndex"))
if mibBuilder.loadTexts: wfDCMEntry.setStatus('mandatory')
wfDCMDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMDelete.setStatus('mandatory')
wfDCMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMIndex.setStatus('mandatory')
wfDCMDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMDisable.setStatus('mandatory')
wfDCMOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMOperStatus.setStatus('mandatory')
wfDCMStreamCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMStreamCount.setStatus('mandatory')
wfDCMIntfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 9))).clone(namedValues=NamedValues(("ether", 6), ("tokenring", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMIntfType.setStatus('mandatory')
wfDCMImageName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMImageName.setStatus('mandatory')
wfDCMBootOption = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("download", 2))).clone('local')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMBootOption.setStatus('mandatory')
wfDCMImageSaveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("save", 1), ("nosave", 2))).clone('save')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMImageSaveMode.setStatus('mandatory')
wfDCMCfgMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("shmem", 2))).clone('local')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMCfgMode.setStatus('mandatory')
wfDCMSaveConfigInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("save", 1), ("nosave", 2))).clone('save')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMSaveConfigInfo.setStatus('mandatory')
wfDCMRMONMaxHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 8128)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMRMONMaxHost.setStatus('mandatory')
wfDCMRMONDfltHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMRMONDfltHost.setStatus('mandatory')
wfDCMRMONDfltMtrix = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMRMONDfltMtrix.setStatus('mandatory')
wfDCMRMONHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMRMONHost.setStatus('mandatory')
wfDCMmemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMmemSize.setStatus('mandatory')
wfDCMhwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMhwRev.setStatus('mandatory')
wfDCMfwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMfwRev.setStatus('mandatory')
wfDCMagentImageVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMagentImageVersion.setStatus('mandatory')
wfDCMRmonObjectSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rmon", 1), ("rmon2", 2))).clone('rmon')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDCMRmonObjectSupport.setStatus('mandatory')
wfDCMStreamTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 3), )
if mibBuilder.loadTexts: wfDCMStreamTable.setStatus('obsolete')
wfDCMStreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 3, 1), ).setIndexNames((0, "Wellfleet-DCMMW-MIB", "wfDCMStreamDCMIndex"), (0, "Wellfleet-DCMMW-MIB", "wfDCMStreamIndex"))
if mibBuilder.loadTexts: wfDCMStreamEntry.setStatus('obsolete')
wfDCMStreamDCMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMStreamDCMIndex.setStatus('obsolete')
wfDCMStreamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMStreamIndex.setStatus('obsolete')
wfDCMStreamDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMStreamDisable.setStatus('obsolete')
wfDCMStreamDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 16, 3, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDCMStreamDataSource.setStatus('obsolete')
mibBuilder.exportSymbols("Wellfleet-DCMMW-MIB", wfDCMfwRev=wfDCMfwRev, wfDCMRMONHost=wfDCMRMONHost, wfDCMmwDisable=wfDCMmwDisable, wfDCMagentImageVersion=wfDCMagentImageVersion, wfDCMStreamDCMIndex=wfDCMStreamDCMIndex, wfDCMBootOption=wfDCMBootOption, wfDCMRMONDfltHost=wfDCMRMONDfltHost, wfDCMFwRev=wfDCMFwRev, wfDCMmwDelete=wfDCMmwDelete, wfDCMmwNumDCM=wfDCMmwNumDCM, wfDCMIndex=wfDCMIndex, wfDCMmwRMONHost=wfDCMmwRMONHost, wfDCMStreamCount=wfDCMStreamCount, wfDCMRmonAgent=wfDCMRmonAgent, wfDCMTable=wfDCMTable, wfDCMCfgMode=wfDCMCfgMode, wfDCMSaveConfigInfo=wfDCMSaveConfigInfo, wfDCMmwImageName=wfDCMmwImageName, wfDCMmw=wfDCMmw, wfDCMmwCfgMode=wfDCMmwCfgMode, wfDCMIntfType=wfDCMIntfType, wfDCMStreamDisable=wfDCMStreamDisable, wfDCMmemSize=wfDCMmemSize, wfDCMmwRMONDfltHost=wfDCMmwRMONDfltHost, wfDCMRmonObjectSupport=wfDCMRmonObjectSupport, wfDCMStreamEntry=wfDCMStreamEntry, wfDCMmwRMONDfltMtrix=wfDCMmwRMONDfltMtrix, wfDCMRMONDfltMtrix=wfDCMRMONDfltMtrix, wfDCMStreamDataSource=wfDCMStreamDataSource, wfDCMOperStatus=wfDCMOperStatus, wfDCMImageName=wfDCMImageName, wfDCMmwImageSaveMode=wfDCMmwImageSaveMode, wfDCMAgentImageVersion=wfDCMAgentImageVersion, wfDCMStreamTable=wfDCMStreamTable, wfDCMImageSaveMode=wfDCMImageSaveMode, wfDCMMemSize=wfDCMMemSize, wfDCMmwRMONMaxHost=wfDCMmwRMONMaxHost, wfDCMStreamIndex=wfDCMStreamIndex, wfDCMDelete=wfDCMDelete, wfDCMHwRev=wfDCMHwRev, wfDCMhwRev=wfDCMhwRev, wfDCMRMONMaxHost=wfDCMRMONMaxHost, wfDCMmwWriteConfigInfo=wfDCMmwWriteConfigInfo, wfDCMEntry=wfDCMEntry, wfDCMDisable=wfDCMDisable, wfDCMmwBootOption=wfDCMmwBootOption)
