#
# PySNMP MIB module NBS-CMMC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NBS-CMMC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:05:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, NotificationType, Unsigned32, Gauge32, Bits, iso, enterprises, IpAddress, ModuleIdentity, Counter64, Integer32, MibIdentifier, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "Unsigned32", "Gauge32", "Bits", "iso", "enterprises", "IpAddress", "ModuleIdentity", "Counter64", "Integer32", "MibIdentifier", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nbsCmmcMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 200))
if mibBuilder.loadTexts: nbsCmmcMib.setLastUpdated('201008251300Z')
if mibBuilder.loadTexts: nbsCmmcMib.setOrganization('NBS')
class InterfaceIndex(Integer32):
    pass

nbs = ObjectIdentity((1, 3, 6, 1, 4, 1, 629))
if mibBuilder.loadTexts: nbs.setStatus('current')
nbsCmmcObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 1))
if mibBuilder.loadTexts: nbsCmmcObjects.setStatus('current')
nbsCmmcSystemGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 2))
if mibBuilder.loadTexts: nbsCmmcSystemGrp.setStatus('current')
nbsCmmcIpSnmpGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 3))
if mibBuilder.loadTexts: nbsCmmcIpSnmpGrp.setStatus('current')
nbsCmmcTftpGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 4))
if mibBuilder.loadTexts: nbsCmmcTftpGrp.setStatus('current')
nbsCmmcChassisGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 6))
if mibBuilder.loadTexts: nbsCmmcChassisGrp.setStatus('current')
nbsCmmcSlotGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 7))
if mibBuilder.loadTexts: nbsCmmcSlotGrp.setStatus('current')
nbsCmmcPortGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 8))
if mibBuilder.loadTexts: nbsCmmcPortGrp.setStatus('current')
nbsCmmcNtpGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 9))
if mibBuilder.loadTexts: nbsCmmcNtpGrp.setStatus('current')
nbsCmmcSmtpGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 10))
if mibBuilder.loadTexts: nbsCmmcSmtpGrp.setStatus('current')
nbsCmmcSysLogGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 11))
if mibBuilder.loadTexts: nbsCmmcSysLogGrp.setStatus('current')
nbsCmmcTrapGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 12))
if mibBuilder.loadTexts: nbsCmmcTrapGrp.setStatus('current')
nbsCmmcTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 13))
if mibBuilder.loadTexts: nbsCmmcTraps.setStatus('current')
nbsCmmcTraps0 = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 200, 13, 0))
if mibBuilder.loadTexts: nbsCmmcTraps0.setStatus('current')
nbsCmmcSysFwDescr = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFwDescr.setStatus('current')
nbsCmmcSysFwVers = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFwVers.setStatus('current')
nbsCmmcSysRestart = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("running", 1), ("coldRestart", 2), ("warmRestart", 3), ("upgrRestart", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysRestart.setStatus('current')
nbsCmmcSysNumRestarts = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNumRestarts.setStatus('current')
nbsCmmcSysErrUptime = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysErrUptime.setStatus('current')
nbsCmmcSysSetNvramDefaults = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("setDefaults", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSetNvramDefaults.setStatus('current')
nbsCmmcSysSelftestLevel = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ststNone", 1), ("ststShort", 2), ("ststLong", 3), ("ststDiagnostics", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSelftestLevel.setStatus('deprecated')
nbsCmmcSysCurrentTime = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2208988800, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysCurrentTime.setStatus('current')
nbsCmmcSysCurrentDateTime = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysCurrentDateTime.setStatus('current')
nbsCmmcSysNvramTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 2, 10), )
if mibBuilder.loadTexts: nbsCmmcSysNvramTable.setStatus('current')
nbsCmmcSysNvramEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 2, 10, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysNvramIndex"))
if mibBuilder.loadTexts: nbsCmmcSysNvramEntry.setStatus('current')
nbsCmmcSysNvramIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramIndex.setStatus('current')
nbsCmmcSysNvramBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 10, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysNvramBlock.setStatus('current')
nbsCmmcSysWriteConfig = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("supported", 2), ("write", 3), ("copyTempFile", 4))).clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysWriteConfig.setStatus('current')
nbsCmmcSysUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysUpgrade.setStatus('deprecated')
nbsCmmcSysLoginIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 400000)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLoginIdleTimeout.setStatus('current')
nbsCmmcSysDiscovery = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysDiscovery.setStatus('current')
nbsCmmcSysDiscoveryHostTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 2, 15), )
if mibBuilder.loadTexts: nbsCmmcSysDiscoveryHostTable.setStatus('current')
nbsCmmcSysDiscoveryHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 2, 15, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysDiscoveryHostMACAddress"))
if mibBuilder.loadTexts: nbsCmmcSysDiscoveryHostEntry.setStatus('current')
nbsCmmcSysDiscoveryHostMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 15, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysDiscoveryHostMACAddress.setStatus('current')
nbsCmmcSysDiscoveryHostDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysDiscoveryHostDistance.setStatus('current')
nbsCmmcSysDiscoveryHostIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 15, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysDiscoveryHostIPAddress.setStatus('current')
nbsCmmcSysLastSetFailure = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysLastSetFailure.setStatus('current')
nbsCmmcSysTimeProtocol = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTimeProtocol.setStatus('current')
nbsCmmcSysTimeServer = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTimeServer.setStatus('current')
nbsCmmcSysFirmwareTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 2, 19), )
if mibBuilder.loadTexts: nbsCmmcSysFirmwareTable.setStatus('current')
nbsCmmcSysFirmwareEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysFirmwareIndex"))
if mibBuilder.loadTexts: nbsCmmcSysFirmwareEntry.setStatus('current')
nbsCmmcSysFirmwareIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareIndex.setStatus('current')
nbsCmmcSysFirmwareDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareDescr.setStatus('current')
nbsCmmcSysFirmwareFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareFilename.setStatus('current')
nbsCmmcSysFirmwareSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareSize.setStatus('current')
nbsCmmcSysFirmwareMTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareMTime.setStatus('current')
nbsCmmcSysFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareVersion.setStatus('current')
nbsCmmcSysFirmwareDate = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareDate.setStatus('current')
nbsCmmcSysFirmwareType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("chassis", 2), ("slot", 3), ("port", 4), ("deleted", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareType.setStatus('current')
nbsCmmcSysFirmwareIDCs = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareIDCs.setStatus('current')
nbsCmmcSysFirmwareCksum = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 19, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareCksum.setStatus('current')
nbsCmmcSysTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))).clone(namedValues=NamedValues(("notSupported", 1), ("gmtMinus1200", 2), ("gmtMinus1100", 3), ("gmtMinus1000", 4), ("gmtMinus0900", 5), ("gmtMinus0800", 6), ("gmtMinus0700", 7), ("gmtMinus0600", 8), ("gmtMinus0500", 9), ("gmtMinus0400", 10), ("gmtMinus0300", 11), ("gmtMinus0200", 12), ("gmtMinus0100", 13), ("gmt", 14), ("gmtPlus0100", 15), ("gmtPlus0200", 16), ("gmtPlus0300", 17), ("gmtPlus0400", 18), ("gmtPlus0500", 19), ("gmtPlus0600", 20), ("gmtPlus0700", 21), ("gmtPlus0800", 22), ("gmtPlus0900", 23), ("gmtPlus1000", 24), ("gmtPlus1100", 25), ("gmtPlus1200", 26))).clone('gmt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTimeZone.setStatus('current')
nbsCmmcSysSnmpV1 = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSnmpV1.setStatus('current')
nbsCmmcSysSnmpV2c = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSnmpV2c.setStatus('current')
nbsCmmcSysSnmpV3 = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSnmpV3.setStatus('current')
nbsCmmcSysLmp = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLmp.setStatus('current')
nbsCmmcSysLockTypes = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLockTypes.setStatus('current')
nbsCmmcSysSerialTerminalType = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone('vt102')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSerialTerminalType.setStatus('current')
nbsCmmcSysCrossConnect = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("operating", 2), ("clearing", 3))).clone('operating')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysCrossConnect.setStatus('current')
nbsCmmcSysCountersState = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("counting", 2), ("clearing", 3))).clone('counting')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysCountersState.setStatus('current')
nbsCmmcSysProtoTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 1001), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysProtoTableSize.setStatus('current')
nbsCmmcSysProtoTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 2, 1002), )
if mibBuilder.loadTexts: nbsCmmcSysProtoTable.setStatus('current')
nbsCmmcSysProtoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 2, 1002, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysProtoIndex"))
if mibBuilder.loadTexts: nbsCmmcSysProtoEntry.setStatus('current')
nbsCmmcSysProtoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1002, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysProtoIndex.setStatus('current')
nbsCmmcSysProtoFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1002, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysProtoFamily.setStatus('current')
nbsCmmcSysProtoRate = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1002, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysProtoRate.setStatus('current')
nbsCmmcSysTimeZoneTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 1003), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTimeZoneTableSize.setStatus('current')
nbsCmmcSysTimeZoneTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 2, 1004), )
if mibBuilder.loadTexts: nbsCmmcSysTimeZoneTable.setStatus('current')
nbsCmmcSysTimeZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 2, 1004, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysTimeZoneIndex"))
if mibBuilder.loadTexts: nbsCmmcSysTimeZoneEntry.setStatus('current')
nbsCmmcSysTimeZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1004, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTimeZoneIndex.setStatus('current')
nbsCmmcSysTimeZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1004, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTimeZoneName.setStatus('current')
nbsCmmcSysLoaderTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 1010), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysLoaderTableSize.setStatus('current')
nbsCmmcSysLoaderTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 2, 1011), )
if mibBuilder.loadTexts: nbsCmmcSysLoaderTable.setStatus('current')
nbsCmmcSysLoaderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 2, 1011, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysLoaderIndex"))
if mibBuilder.loadTexts: nbsCmmcSysLoaderEntry.setStatus('current')
nbsCmmcSysLoaderIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1011, 1, 1), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(100000, 9999999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysLoaderIndex.setStatus('current')
nbsCmmcSysLoaderFileId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1011, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysLoaderFileId.setStatus('current')
nbsCmmcSysLoaderProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1011, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysLoaderProgress.setStatus('current')
nbsCmmcSysLoaderStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1011, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("transferring", 2), ("completed", 3), ("aborted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysLoaderStatus.setStatus('current')
nbsCmmcSysLoaderAbort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1011, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("supported", 2), ("abort", 3))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLoaderAbort.setStatus('current')
nbsCmmcSysLoaderAck = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1011, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("supported", 2), ("acknowledge", 3))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLoaderAck.setStatus('current')
nbsCmmcSysLoaderFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 1011, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysLoaderFilename.setStatus('current')
nbsCmmcSysFirmwareURL = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 1020), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareURL.setStatus('current')
nbsCmmcSysFirmwareURLStatus = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 1021), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("idle", 2), ("transferring", 3), ("completed", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysFirmwareURLStatus.setStatus('current')
nbsCmmcSysNVAreaTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 2, 3000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNVAreaTableSize.setStatus('current')
nbsCmmcSysNVAreaTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 2, 3001), )
if mibBuilder.loadTexts: nbsCmmcSysNVAreaTable.setStatus('current')
nbsCmmcSysNVAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 2, 3001, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysNVAreaIfIndex"), (0, "NBS-CMMC-MIB", "nbsCmmcSysNVAreaBank"))
if mibBuilder.loadTexts: nbsCmmcSysNVAreaEntry.setStatus('current')
nbsCmmcSysNVAreaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 3001, 1, 1), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(100000, 9999999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNVAreaIfIndex.setStatus('current')
nbsCmmcSysNVAreaBank = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 3001, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNVAreaBank.setStatus('current')
nbsCmmcSysNVAreaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 3001, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("primary", 2), ("backup", 3), ("erased", 4), ("busy", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNVAreaStatus.setStatus('current')
nbsCmmcSysNVAreaDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 3001, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNVAreaDescr.setStatus('current')
nbsCmmcSysNVAreaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 3001, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNVAreaVersion.setStatus('current')
nbsCmmcSysNVAreaCksum = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 2, 3001, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNVAreaCksum.setStatus('current')
nbsCmmcIpCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 200, 3, 1))
nbsCmmcSnmpCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 200, 3, 2))
nbsCmmcPrvIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPrvIpAddr.setStatus('deprecated')
nbsCmmcPrvNetMask = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPrvNetMask.setStatus('deprecated')
nbsCmmcPrvBcastAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPrvBcastAddr.setStatus('deprecated')
nbsCmmcSysIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysIpAddr.setStatus('current')
nbsCmmcSysNetMask = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysNetMask.setStatus('current')
nbsCmmcSysBcastAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysBcastAddr.setStatus('current')
nbsCmmcSysObIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysObIpAddr.setStatus('current')
nbsCmmcSysObNetMask = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysObNetMask.setStatus('current')
nbsCmmcSysObBcastAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysObBcastAddr.setStatus('current')
nbsCmmcSysDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysDefaultGateway.setStatus('current')
nbsCmmcSysAdminBootpState = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysAdminBootpState.setStatus('current')
nbsCmmcSysRunBootpState = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysRunBootpState.setStatus('current')
nbsCmmcSysSerialLineMode = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("adminIf", 1), ("slipIf", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSerialLineMode.setStatus('current')
nbsCmmcSysSerialSlipBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b9600", 1), ("b19200", 2), ("b38400", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSerialSlipBaudRate.setStatus('current')
nbsCmmcSysArpAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysArpAgingTime.setStatus('current')
nbsCmmcSysMaxTelnetSessions = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysMaxTelnetSessions.setStatus('current')
nbsCmmcSysTelnetTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17), )
if mibBuilder.loadTexts: nbsCmmcSysTelnetTable.setStatus('current')
nbsCmmcSysTelnetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysTelnetSessionIndex"))
if mibBuilder.loadTexts: nbsCmmcSysTelnetEntry.setStatus('current')
nbsCmmcSysTelnetSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTelnetSessionIndex.setStatus('current')
nbsCmmcSysTelnetSessionStat = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("disconnect", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTelnetSessionStat.setStatus('current')
nbsCmmcSysTelnetHost = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTelnetHost.setStatus('current')
nbsCmmcSysTelnetHostPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTelnetHostPort.setStatus('current')
nbsCmmcSysTelnetLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTelnetLocal.setStatus('current')
nbsCmmcSysTelnetLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTelnetLocalPort.setStatus('current')
nbsCmmcSysTelnetSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTelnetSessionId.setStatus('current')
nbsCmmcSysTelnetConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 17, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTelnetConnectTime.setStatus('current')
nbsCmmcSysMaxPingSessions = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysMaxPingSessions.setStatus('current')
nbsCmmcSysPingTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 19), )
if mibBuilder.loadTexts: nbsCmmcSysPingTable.setStatus('current')
nbsCmmcSysPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 19, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysPingSessionIndex"))
if mibBuilder.loadTexts: nbsCmmcSysPingEntry.setStatus('current')
nbsCmmcSysPingSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysPingSessionIndex.setStatus('current')
nbsCmmcSysPingSessionStat = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idlePing", 1), ("runPing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysPingSessionStat.setStatus('current')
nbsCmmcSysPingAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 19, 1, 3), IpAddress().clone(hexValue="7F000001")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysPingAddr.setStatus('current')
nbsCmmcSysPingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 19, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysPingNumber.setStatus('current')
nbsCmmcSysPingOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 19, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("adminInterface", 2), ("snmpAgent", 3), ("webManager", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysPingOwner.setStatus('current')
nbsCmmcSysPingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 19, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysPingRequests.setStatus('current')
nbsCmmcSysPingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 19, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysPingResponses.setStatus('current')
nbsCmmcSysTelnetServer = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTelnetServer.setStatus('current')
nbsCmmcSysSshServer = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSshServer.setStatus('current')
nbsCmmcSysIpAddrOper = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 22), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysIpAddrOper.setStatus('current')
nbsCmmcSysNetMaskOper = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 23), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNetMaskOper.setStatus('current')
nbsCmmcSysBcastAddrOper = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 24), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysBcastAddrOper.setStatus('current')
nbsCmmcSysDefaultGatewayOper = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysDefaultGatewayOper.setStatus('current')
nbsCmmcSysWebServer = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysWebServer.setStatus('current')
nbsCmmcSysWebPort = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysWebPort.setStatus('current')
nbsCmmcSysTelnetPort = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(23)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTelnetPort.setStatus('current')
nbsCmmcSysSshPort = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSshPort.setStatus('current')
nbsCmmcSysWriteCommunity = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysWriteCommunity.setStatus('current')
nbsCmmcSysReadCommunity = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysReadCommunity.setStatus('current')
nbsCmmcSysTrapTblMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTrapTblMaxSize.setStatus('current')
nbsCmmcSysTrapTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 4), )
if mibBuilder.loadTexts: nbsCmmcSysTrapTable.setStatus('current')
nbsCmmcSysTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 4, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysTrapTblEntIndex"))
if mibBuilder.loadTexts: nbsCmmcSysTrapEntry.setStatus('current')
nbsCmmcSysTrapTblEntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysTrapTblEntIndex.setStatus('current')
nbsCmmcSysTrapTblEntStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTrapTblEntStatus.setStatus('current')
nbsCmmcSysTrapTblEntIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTrapTblEntIpAddr.setStatus('current')
nbsCmmcSysTrapTblEntComm = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTrapTblEntComm.setStatus('current')
nbsCmmcSysTrapTblEntLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disabled", 1), ("fatal", 2), ("error", 3), ("warning", 4), ("deprecated5", 5), ("deprecated6", 6), ("alarm", 7))).clone('warning')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTrapTblEntLevel.setStatus('current')
nbsCmmcSysTrapTblEntPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(162)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTrapTblEntPort.setStatus('current')
nbsCmmcSysEnablePowerSupplyTraps = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysEnablePowerSupplyTraps.setStatus('current')
nbsCmmcSysEnableModuleTraps = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysEnableModuleTraps.setStatus('current')
nbsCmmcSysEnableBridgeTraps = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysEnableBridgeTraps.setStatus('current')
nbsCmmcSysEnableIpAccessTraps = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysEnableIpAccessTraps.setStatus('current')
nbsCmmcSysSnmpPortAdmin = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(161)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysSnmpPortAdmin.setStatus('current')
nbsCmmcSysSnmpPortOper = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 3, 2, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(161)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysSnmpPortOper.setStatus('current')
nbsCmmcSysTftpHostIP = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 4, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysTftpHostIP.setStatus('current')
nbsCmmcTftpMaxSessionNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 4, 2), Integer32().clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcTftpMaxSessionNum.setStatus('current')
nbsCmmcTftpSessTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 4, 3), )
if mibBuilder.loadTexts: nbsCmmcTftpSessTable.setStatus('current')
nbsCmmcTftpSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 4, 3, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcTftpSessIndex"))
if mibBuilder.loadTexts: nbsCmmcTftpSessEntry.setStatus('current')
nbsCmmcTftpSessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcTftpSessIndex.setStatus('current')
nbsCmmcTftpSessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inactive", 1), ("create", 2), ("underCreation", 3), ("active", 4), ("transferEnded", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcTftpSessStatus.setStatus('current')
nbsCmmcTftpSessHostIp = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 4, 3, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcTftpSessHostIp.setStatus('current')
nbsCmmcTftpSessModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 4, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcTftpSessModuleId.setStatus('deprecated')
nbsCmmcTftpSessAction = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("inactive", 1), ("downloadNM", 2), ("uploadNM", 3), ("downloadPar", 4), ("uploadPar", 5), ("downloadFile", 6), ("uploadFile", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcTftpSessAction.setStatus('current')
nbsCmmcTftpSessFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 4, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcTftpSessFileName.setStatus('current')
nbsCmmcTftpSessFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 4, 3, 1, 7), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcTftpSessFileSize.setStatus('deprecated')
nbsCmmcTftpSessProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 4, 3, 1, 8), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcTftpSessProgress.setStatus('deprecated')
nbsCmmcChassisTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 6, 1), )
if mibBuilder.loadTexts: nbsCmmcChassisTable.setStatus('current')
nbsCmmcChassisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcChassisIndex"))
if mibBuilder.loadTexts: nbsCmmcChassisEntry.setStatus('current')
nbsCmmcChassisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisIndex.setStatus('current')
nbsCmmcChassisType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("bu16", 2), ("bu4", 3), ("bu1", 4), ("bu5", 5), ("bu3", 6), ("bu2", 7), ("fCpe", 8), ("bmc", 9), ("virtual16", 10), ("bu21", 11), ("bu42", 12), ("virtual1", 13), ("virtual2", 14), ("virtual3", 15), ("virtual4", 16), ("bu22", 17), ("bu82", 18), ("bu3v", 19), ("virtual3v", 20), ("bu12", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisType.setStatus('current')
nbsCmmcChassisModel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisModel.setStatus('current')
nbsCmmcChassisObjectId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisObjectId.setStatus('current')
nbsCmmcChassisNumberOfSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisNumberOfSlots.setStatus('current')
nbsCmmcChassisHardwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisHardwareRevision.setStatus('current')
nbsCmmcChassisPS1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notInstalled", 1), ("acBad", 2), ("dcBad", 3), ("acGood", 4), ("dcGood", 5), ("notSupported", 6), ("good", 7), ("bad", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisPS1Status.setStatus('current')
nbsCmmcChassisPS2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notInstalled", 1), ("acBad", 2), ("dcBad", 3), ("acGood", 4), ("dcGood", 5), ("notSupported", 6), ("good", 7), ("bad", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisPS2Status.setStatus('current')
nbsCmmcChassisPS3Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notInstalled", 1), ("acBad", 2), ("dcBad", 3), ("acGood", 4), ("dcGood", 5), ("notSupported", 6), ("good", 7), ("bad", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisPS3Status.setStatus('current')
nbsCmmcChassisPS4Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notInstalled", 1), ("acBad", 2), ("dcBad", 3), ("acGood", 4), ("dcGood", 5), ("notSupported", 6), ("good", 7), ("bad", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisPS4Status.setStatus('current')
nbsCmmcChassisFan1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("bad", 2), ("good", 3), ("notInstalled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFan1Status.setStatus('current')
nbsCmmcChassisFan2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("bad", 2), ("good", 3), ("notInstalled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFan2Status.setStatus('current')
nbsCmmcChassisFan3Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("bad", 2), ("good", 3), ("notInstalled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFan3Status.setStatus('current')
nbsCmmcChassisFan4Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("bad", 2), ("good", 3), ("notInstalled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFan4Status.setStatus('current')
nbsCmmcChassisTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-2147483648)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisTemperature.setStatus('current')
nbsCmmcChassisTemperatureLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100)).clone(45)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisTemperatureLimit.setStatus('current')
nbsCmmcChassisTemperatureMin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisTemperatureMin.setStatus('current')
nbsCmmcChassisSignalStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisSignalStrength.setStatus('deprecated')
nbsCmmcChassisSignalStrengthMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisSignalStrengthMinimum.setStatus('deprecated')
nbsCmmcChassisEnableAutoReset = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("deprecatedoff", 2), ("deprecatedon", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnableAutoReset.setStatus('current')
nbsCmmcChassisEnableLinkTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnableLinkTraps.setStatus('current')
nbsCmmcChassisEnableChassisTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnableChassisTraps.setStatus('current')
nbsCmmcChassisEnableLoopbackTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnableLoopbackTraps.setStatus('current')
nbsCmmcChassisEnableSlotChangeTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnableSlotChangeTraps.setStatus('current')
nbsCmmcChassisEnablePortTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnablePortTraps.setStatus('current')
nbsCmmcChassisResetAllModules = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("deprecatedOperating", 2), ("deprecatedReset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisResetAllModules.setStatus('current')
nbsCmmcChassisEnableModuleSpecificTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnableModuleSpecificTraps.setStatus('current')
nbsCmmcChassisLoopbackTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisLoopbackTimeout.setStatus('current')
nbsCmmcChassisPortInfoBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisPortInfoBitMap.setStatus('current')
nbsCmmcChassisSlotListBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 30), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisSlotListBitMap.setStatus('current')
nbsCmmcChassisNumberOfPortsBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 31), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisNumberOfPortsBitMap.setStatus('current')
nbsCmmcChassisName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisName.setStatus('current')
nbsCmmcChassisEnableLINTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnableLINTraps.setStatus('current')
nbsCmmcChassisEnablePortChangeTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnablePortChangeTraps.setStatus('current')
nbsCmmcChassisEnablePortDiagsTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnablePortDiagsTraps.setStatus('current')
nbsCmmcChassisFan5Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("bad", 2), ("good", 3), ("notInstalled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFan5Status.setStatus('current')
nbsCmmcChassisFan6Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("bad", 2), ("good", 3), ("notInstalled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFan6Status.setStatus('current')
nbsCmmcChassisFan7Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("bad", 2), ("good", 3), ("notInstalled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFan7Status.setStatus('current')
nbsCmmcChassisFan8Status = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("bad", 2), ("good", 3), ("notInstalled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFan8Status.setStatus('current')
nbsCmmcChassisEnableSwitchoverTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisEnableSwitchoverTraps.setStatus('current')
nbsCmmcChassisCrossConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("operating", 2), ("clearing", 3))).clone('operating')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisCrossConnect.setStatus('current')
nbsCmmcChassisNVAreaBanks = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisNVAreaBanks.setStatus('current')
nbsCmmcChassisFirmwareCaps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 43), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFirmwareCaps.setStatus('current')
nbsCmmcChassisFirmwareLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 44), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisFirmwareLoad.setStatus('current')
nbsCmmcChassisNVAreaAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 45), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisNVAreaAdmin.setStatus('current')
nbsCmmcChassisNVAreaOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisNVAreaOper.setStatus('current')
nbsCmmcChassisLoader = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisLoader.setStatus('current')
nbsCmmcChassisSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisSerialNum.setStatus('current')
nbsCmmcChassisFace = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 49), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisFace.setStatus('current')
nbsCmmcChassisCountersState = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 6, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("counting", 2), ("clearing", 3))).clone('counting')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcChassisCountersState.setStatus('current')
nbsCmmcChassisCount = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcChassisCount.setStatus('current')
nbsCmmcSlotTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 7, 1), )
if mibBuilder.loadTexts: nbsCmmcSlotTable.setStatus('current')
nbsCmmcSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSlotChassisIndex"), (0, "NBS-CMMC-MIB", "nbsCmmcSlotIndex"))
if mibBuilder.loadTexts: nbsCmmcSlotEntry.setStatus('current')
nbsCmmcSlotChassisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotChassisIndex.setStatus('current')
nbsCmmcSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotIndex.setStatus('current')
nbsCmmcSlotType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotType.setStatus('current')
nbsCmmcSlotModel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotModel.setStatus('current')
nbsCmmcSlotObjectId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotObjectId.setStatus('current')
nbsCmmcSlotNumberOfPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotNumberOfPorts.setStatus('current')
nbsCmmcSlotHardwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotHardwareRevision.setStatus('current')
nbsCmmcSlotOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38))).clone(namedValues=NamedValues(("other", 1), ("management", 2), ("converter", 3), ("repeater", 4), ("switch", 5), ("splitterCombiner", 6), ("fastRepeater", 7), ("gigabitRepeater", 8), ("monitor", 9), ("opticSwitch", 10), ("remote", 11), ("redundant", 12), ("centralOffice", 13), ("customerPremise", 14), ("multiplexer", 15), ("deprecated16", 16), ("deprecated17", 17), ("deprecated18", 18), ("optAmpBoosterAGC", 19), ("optAmpBoosterAPC", 20), ("optAmpInlineAGC", 21), ("optAmpInlineAPC", 22), ("optAmpPreampAGC", 23), ("optAmpPreampAPC", 24), ("coDualActive", 25), ("coDualInactive", 26), ("physLayerSwitch", 27), ("packetMux", 28), ("optAmpVariableGain", 29), ("optAmpMidstageAGC", 30), ("optAmpMidstageAPC", 31), ("multiCO1g", 32), ("multiCO10g", 33), ("addDropMux", 34), ("multicast", 35), ("optAttenuator", 36), ("repeater40G", 37), ("multiplexer4x10G", 38))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotOperationType.setStatus('current')
nbsCmmcSlotReset = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notSupported", 1), ("operating", 2), ("deprecatedPhy", 3), ("deprecatedQueue", 4), ("resetSlot", 5), ("initSlot", 6), ("resetWarm", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotReset.setStatus('current')
nbsCmmcSlotName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotName.setStatus('current')
nbsCmmcSlotModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotModuleType.setStatus('current')
nbsCmmcSlotModuleSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 12), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotModuleSlot.setStatus('current')
nbsCmmcSlotSwConfigurable = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("no", 2), ("yes", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotSwConfigurable.setStatus('current')
nbsCmmcSlotConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotConfiguration.setStatus('current')
nbsCmmcSlotMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotMacAddress.setStatus('current')
nbsCmmcSlotIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotIPAddress.setStatus('current')
nbsCmmcSlotSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 17), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotSubnetMask.setStatus('current')
nbsCmmcSlotBroadcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotBroadcastAddr.setStatus('current')
nbsCmmcSlotDefGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 19), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotDefGateway.setStatus('current')
nbsCmmcSlotHoming = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("singleCO", 2), ("dualCOs", 3))).clone('singleCO')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotHoming.setStatus('current')
nbsCmmcSlotRedundancy = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotRedundancy.setStatus('current')
nbsCmmcSlotDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotDescr.setStatus('current')
nbsCmmcSlotUpgradable = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notSupported", 1), ("supported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotUpgradable.setStatus('current')
nbsCmmcSlotCrossConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("operating", 2), ("clearing", 3))).clone('operating')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotCrossConnect.setStatus('current')
nbsCmmcSlotClearType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("idle", 2), ("clearType", 3))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotClearType.setStatus('current')
nbsCmmcSlotNVAreaBanks = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotNVAreaBanks.setStatus('current')
nbsCmmcSlotFirmwareCaps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotFirmwareCaps.setStatus('current')
nbsCmmcSlotFirmwareLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotFirmwareLoad.setStatus('current')
nbsCmmcSlotNVAreaAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotNVAreaAdmin.setStatus('current')
nbsCmmcSlotNVAreaOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotNVAreaOper.setStatus('current')
nbsCmmcSlotLoader = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotLoader.setStatus('current')
nbsCmmcSlotSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotSerialNum.setStatus('current')
nbsCmmcSlotToggleRate = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotToggleRate.setStatus('current')
nbsCmmcSlotTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-2147483648)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotTemperature.setStatus('current')
nbsCmmcSlotCountersState = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("counting", 2), ("clearing", 3))).clone('counting')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSlotCountersState.setStatus('current')
nbsCmmcSlotRedundancyOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotRedundancyOper.setStatus('current')
nbsCmmcLedTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 7, 2), )
if mibBuilder.loadTexts: nbsCmmcLedTable.setStatus('current')
nbsCmmcLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 7, 2, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcLedChassisIndex"), (0, "NBS-CMMC-MIB", "nbsCmmcLedSlotIndex"), (0, "NBS-CMMC-MIB", "nbsCmmcLedIndex"))
if mibBuilder.loadTexts: nbsCmmcLedEntry.setStatus('current')
nbsCmmcLedChassisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcLedChassisIndex.setStatus('current')
nbsCmmcLedSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcLedSlotIndex.setStatus('current')
nbsCmmcLedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcLedIndex.setStatus('current')
nbsCmmcLedColor = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 1), ("green", 2), ("amber", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcLedColor.setStatus('current')
nbsCmmcLedDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcLedDescription.setStatus('current')
nbsCmmcSlotFaceTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 7, 3), )
if mibBuilder.loadTexts: nbsCmmcSlotFaceTable.setStatus('current')
nbsCmmcSlotFaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 7, 3, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSlotFaceChassisIndex"), (0, "NBS-CMMC-MIB", "nbsCmmcSlotFaceSlotIndex"), (0, "NBS-CMMC-MIB", "nbsCmmcSlotFaceRowIndex"))
if mibBuilder.loadTexts: nbsCmmcSlotFaceEntry.setStatus('current')
nbsCmmcSlotFaceChassisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotFaceChassisIndex.setStatus('current')
nbsCmmcSlotFaceSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotFaceSlotIndex.setStatus('current')
nbsCmmcSlotFaceRowIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotFaceRowIndex.setStatus('current')
nbsCmmcSlotFaceSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 7, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSlotFaceSummary.setStatus('current')
nbsCmmcPortTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 8, 1), )
if mibBuilder.loadTexts: nbsCmmcPortTable.setStatus('current')
nbsCmmcPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcPortChassisIndex"), (0, "NBS-CMMC-MIB", "nbsCmmcPortSlotIndex"), (0, "NBS-CMMC-MIB", "nbsCmmcPortIndex"))
if mibBuilder.loadTexts: nbsCmmcPortEntry.setStatus('current')
nbsCmmcPortChassisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortChassisIndex.setStatus('current')
nbsCmmcPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortSlotIndex.setStatus('current')
nbsCmmcPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortIndex.setStatus('current')
nbsCmmcPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortType.setStatus('current')
nbsCmmcPortObjectId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortObjectId.setStatus('current')
nbsCmmcPortLink = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("noSignal", 2), ("signalDetect", 3), ("link", 4), ("lock", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortLink.setStatus('current')
nbsCmmcPortAutoNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3), ("deprecated4", 4), ("deprecated5", 5))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortAutoNegotiation.setStatus('current')
nbsCmmcPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("half", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortDuplex.setStatus('current')
nbsCmmcPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("spd10Mbps", 2), ("spd100Mbps", 3), ("spdGigabit", 4), ("spd10Gbps", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortSpeed.setStatus('current')
nbsCmmcPortRxActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortRxActivity.setStatus('current')
nbsCmmcPortTxActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortTxActivity.setStatus('current')
nbsCmmcPortCollisionActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortCollisionActivity.setStatus('current')
nbsCmmcPortLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortLoopback.setStatus('current')
nbsCmmcPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("disable", 2), ("enable", 3), ("deprecatedAuto", 4))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortEnable.setStatus('current')
nbsCmmcPortSelectLink = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notSupported", 1), ("standby", 2), ("active", 3), ("deprecatedAuto", 4), ("deprecatedStandbyPreferred", 5), ("deprecatedActivePreferred", 6))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortSelectLink.setStatus('current')
nbsCmmcPortLIN = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disable", 2), ("enable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortLIN.setStatus('current')
nbsCmmcPortAging = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortAging.setStatus('current')
nbsCmmcPortMaxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("max1518", 2), ("max1536", 3), ("max6k", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortMaxPacketSize.setStatus('current')
nbsCmmcPortRemoteLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortRemoteLoopback.setStatus('current')
nbsCmmcPortErrorActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortErrorActivity.setStatus('current')
nbsCmmcPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortName.setStatus('current')
nbsCmmcPortValue = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortValue.setStatus('current')
nbsCmmcPortThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-2147483648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortThreshold.setStatus('current')
nbsCmmcPortThresholdAction = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 24), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortThresholdAction.setStatus('current')
nbsCmmcPortRMChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortRMChassis.setStatus('current')
nbsCmmcPortRMSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortRMSlot.setStatus('current')
nbsCmmcPortRMPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortRMPort.setStatus('current')
nbsCmmcPortSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortSerialNumber.setStatus('current')
nbsCmmcPortVendorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortVendorInfo.setStatus('current')
nbsCmmcPortTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-2147483648)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortTemperature.setStatus('current')
nbsCmmcPortTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-2147483648)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortTxPower.setStatus('current')
nbsCmmcPortRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-2147483648)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortRxPower.setStatus('current')
nbsCmmcPortBiasAmps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 33), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortBiasAmps.setStatus('current')
nbsCmmcPortSupplyVolts = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 34), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortSupplyVolts.setStatus('current')
nbsCmmcPortMedium = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("coax", 2), ("twistedPair", 3), ("singleMode", 4), ("multiMode", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortMedium.setStatus('current')
nbsCmmcPortConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("unknown", 1), ("removed", 2), ("foDSC", 3), ("foSC", 4), ("cuRj45", 5), ("foLC", 6), ("coaxF", 7), ("coaxBNC", 8), ("coax2BNC", 9), ("cuRj45wLEDs", 10), ("cuRj11", 11), ("cuDb9", 12), ("cuHssdc", 13), ("coaxHeader", 14), ("foFiberJack", 15), ("foMtRj", 16), ("foMu", 17), ("sg", 18), ("foPigtail", 19), ("cuPigtail", 20), ("smb", 21), ("firewireA", 22), ("firewireB", 23), ("cuRj48", 24), ("fo1LC", 25), ("fo2ST", 26), ("sataDevicePlug", 27), ("sataHostPlug", 28), ("miniCoax", 29), ("mpo", 30), ("miniSAS4x", 31), ("cxp", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortConnector.setStatus('current')
nbsCmmcPortWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 37), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortWavelength.setStatus('current')
nbsCmmcPortDigitalDiags = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("diagsOk", 2), ("diagsWarning", 3), ("diagsAlarm", 4))).clone('diagsOk')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortDigitalDiags.setStatus('current')
nbsCmmcPortZoneIdAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortZoneIdAdmin.setStatus('current')
nbsCmmcPortNominalBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 40), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortNominalBitRate.setStatus('current')
nbsCmmcPortModulePort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortModulePort.setStatus('current')
nbsCmmcPortPartRev = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortPartRev.setStatus('current')
nbsCmmcPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortIfIndex.setStatus('current')
nbsCmmcPortLinked = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortLinked.setStatus('current')
nbsCmmcPortOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortOperational.setStatus('current')
nbsCmmcPortZoneChassisAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortZoneChassisAdmin.setStatus('current')
nbsCmmcPortZoneSlotAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 47), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortZoneSlotAdmin.setStatus('current')
nbsCmmcPortAlarmCause = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortAlarmCause.setStatus('current')
nbsCmmcPortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortFlowControl.setStatus('current')
nbsCmmcPortAutoNegAd = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 50), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortAutoNegAd.setStatus('current')
nbsCmmcPortAutoNegEditable = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 51), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortAutoNegEditable.setStatus('current')
nbsCmmcPortWavelengthX = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 52), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 150))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortWavelengthX.setStatus('current')
nbsCmmcPortZoneIdOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortZoneIdOper.setStatus('current')
nbsCmmcPortZoneSlotOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortZoneSlotOper.setStatus('current')
nbsCmmcPortZoneChassisOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortZoneChassisOper.setStatus('current')
nbsCmmcPortLinkMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortLinkMatch.setStatus('current')
nbsCmmcPortMDIPinoutAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("mdi", 2), ("mdix", 3), ("autoSense", 4))).clone('autoSense')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortMDIPinoutAdmin.setStatus('current')
nbsCmmcPortMDIPinoutOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("mdi", 2), ("mdix", 3))).clone('mdi')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortMDIPinoutOper.setStatus('current')
nbsCmmcPortFCRecvAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("drop", 2), ("comply", 3), ("passThru", 4))).clone('comply')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortFCRecvAdmin.setStatus('current')
nbsCmmcPortFCRecvOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("drop", 2), ("comply", 3), ("passThru", 4))).clone('comply')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortFCRecvOper.setStatus('current')
nbsCmmcPortFCSendAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortFCSendAdmin.setStatus('current')
nbsCmmcPortFCSendOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortFCSendOper.setStatus('current')
nbsCmmcPortAutoNegWait = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortAutoNegWait.setStatus('current')
nbsCmmcPortTemperatureLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notSupported", 1), ("lowAlarm", 2), ("lowWarning", 3), ("ok", 4), ("highWarning", 5), ("highAlarm", 6))).clone('ok')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortTemperatureLevel.setStatus('current')
nbsCmmcPortTxPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notSupported", 1), ("lowAlarm", 2), ("lowWarning", 3), ("ok", 4), ("highWarning", 5), ("highAlarm", 6))).clone('ok')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortTxPowerLevel.setStatus('current')
nbsCmmcPortRxPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notSupported", 1), ("lowAlarm", 2), ("lowWarning", 3), ("ok", 4), ("highWarning", 5), ("highAlarm", 6))).clone('ok')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortRxPowerLevel.setStatus('current')
nbsCmmcPortBiasAmpsLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notSupported", 1), ("lowAlarm", 2), ("lowWarning", 3), ("ok", 4), ("highWarning", 5), ("highAlarm", 6))).clone('ok')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortBiasAmpsLevel.setStatus('current')
nbsCmmcPortSupplyVoltsLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notSupported", 1), ("lowAlarm", 2), ("lowWarning", 3), ("ok", 4), ("highWarning", 5), ("highAlarm", 6))).clone('ok')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortSupplyVoltsLevel.setStatus('current')
nbsCmmcPortAmpGainOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 69), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortAmpGainOper.setStatus('current')
nbsCmmcPortAmpGainAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 70), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortAmpGainAdmin.setStatus('current')
nbsCmmcPortAmpOutputPwrAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-2147483648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortAmpOutputPwrAdmin.setStatus('current')
nbsCmmcPortProtoCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 72), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortProtoCapabilities.setStatus('current')
nbsCmmcPortProtoAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 73), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortProtoAdmin.setStatus('current')
nbsCmmcPortProtoOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortProtoOper.setStatus('current')
nbsCmmcPortPreambleLen = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("standard", 2), ("variable", 3))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortPreambleLen.setStatus('current')
nbsCmmcPortPreferred = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("no", 2), ("yes", 3))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortPreferred.setStatus('current')
nbsCmmcPortCableLen = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 77), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notSupported", 1), ("len133", 2), ("len266", 3), ("len399", 4), ("len533", 5), ("len655", 6), ("shortHaul", 7), ("longHaul", 8))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortCableLen.setStatus('current')
nbsCmmcPortRedundantTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("oneColonOne", 2), ("onePlusOne", 3))).clone('oneColonOne')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortRedundantTxMode.setStatus('current')
nbsCmmcPortTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("disable", 2), ("ohm120", 3), ("ohm100", 4), ("ohm75", 5))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortTermination.setStatus('current')
nbsCmmcPortDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 240))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortDescription.setStatus('current')
nbsCmmcPortTransmitUnmapped = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortTransmitUnmapped.setStatus('current')
nbsCmmcPortToggleMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortToggleMode.setStatus('current')
nbsCmmcPortCrossConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("operating", 2), ("clearing", 3))).clone('operating')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortCrossConnect.setStatus('current')
nbsCmmcPortZoneIfIndexAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 84), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortZoneIfIndexAdmin.setStatus('current')
nbsCmmcPortZoneIfIndexOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortZoneIfIndexOper.setStatus('current')
nbsCmmcPortEnableOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disable", 2), ("enable", 3))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortEnableOper.setStatus('current')
nbsCmmcPortMappingType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 87), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notSupported", 1), ("unavailable", 2), ("open", 3), ("source", 4), ("destination", 5), ("sourceHelper", 6), ("interChasLink", 7))).clone('open')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortMappingType.setStatus('current')
nbsCmmcPortCountersState = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("counting", 2), ("clearing", 3))).clone('counting')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortCountersState.setStatus('current')
nbsCmmcPortAmpGainMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortAmpGainMinimum.setStatus('current')
nbsCmmcPortAmpGainMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortAmpGainMaximum.setStatus('current')
nbsCmmcPortAmpGainStepSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 91), Integer32().clone(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcPortAmpGainStepSize.setStatus('current')
nbsCmmcPortSniffer = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 8, 1, 1, 92), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcPortSniffer.setStatus('current')
nbsCmmcSmtpDomainName = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSmtpDomainName.setStatus('current')
nbsCmmcSmtpServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 10, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSmtpServerAddress.setStatus('current')
nbsCmmcSmtpRcvrLevel = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 10, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSmtpRcvrLevel.setStatus('current')
nbsCmmcSmtpRcvrNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 10, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSmtpRcvrNum.setStatus('current')
nbsCmmcSmtpRcvrTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 10, 5), )
if mibBuilder.loadTexts: nbsCmmcSmtpRcvrTable.setStatus('current')
nbsCmmcSmtpRcvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 10, 5, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSmtpRcvrIndex"))
if mibBuilder.loadTexts: nbsCmmcSmtpRcvrEntry.setStatus('current')
nbsCmmcSmtpRcvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 10, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSmtpRcvrIndex.setStatus('current')
nbsCmmcSmtpRcvrEmailAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 10, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSmtpRcvrEmailAddress.setStatus('current')
nbsCmmcSmtpRcvrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 10, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSmtpRcvrStatus.setStatus('current')
nbsCmmcSysLogRunningLevel = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disabled", 1), ("fatal", 2), ("error", 3), ("warning", 4), ("info", 5), ("memo", 6), ("alarm", 7))).clone('warning')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLogRunningLevel.setStatus('current')
nbsCmmcSysLogNvLevel = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disabled", 1), ("fatal", 2), ("error", 3), ("warning", 4), ("info", 5), ("memo", 6), ("alarm", 7))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLogNvLevel.setStatus('current')
nbsCmmcSysLogTrapLevel = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disabled", 1), ("fatal", 2), ("error", 3), ("warning", 4), ("deprecated5", 5), ("deprecated6", 6), ("alarm", 7))).clone('warning')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLogTrapLevel.setStatus('current')
nbsCmmcSysLogEmailLevel = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("disabled", 1), ("fatal", 2), ("error", 3), ("warning", 4), ("deprecated5", 5), ("deprecated6", 6), ("alarm", 7), ("notSupported", 8))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLogEmailLevel.setStatus('current')
nbsCmmcSysLogMessageTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 11, 5), )
if mibBuilder.loadTexts: nbsCmmcSysLogMessageTable.setStatus('current')
nbsCmmcSysLogMessageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 11, 5, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysLogMessageType"))
if mibBuilder.loadTexts: nbsCmmcSysLogMessageEntry.setStatus('current')
nbsCmmcSysLogMessageType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sysReset", 1), ("snmp", 2), ("physTraps", 3), ("dot1dBridge", 4), ("sysAuthentic", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysLogMessageType.setStatus('current')
nbsCmmcSysLogMessageSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 10, 100, 1000, 10000))).clone(namedValues=NamedValues(("informational", 1), ("warnings", 10), ("errors", 100), ("emergencies", 1000), ("debugging", 10000)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysLogMessageSeverity.setStatus('current')
nbsCmmcSysRunningLogMessageTotal = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageTotal.setStatus('current')
nbsCmmcSysRunningLogMessageTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 11, 7), )
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageTable.setStatus('current')
nbsCmmcSysRunningLogMessageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 11, 7, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysRunningLogMessageIndex"))
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageEntry.setStatus('current')
nbsCmmcSysRunningLogMessageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageIndex.setStatus('current')
nbsCmmcSysRunningLogMessageSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageSeverity.setStatus('current')
nbsCmmcSysRunningLogMessageErrorID = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageErrorID.setStatus('current')
nbsCmmcSysRunningLogMessageSession = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageSession.setStatus('current')
nbsCmmcSysRunningLogMessageTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageTime.setStatus('current')
nbsCmmcSysRunningLogMessageModule = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageModule.setStatus('current')
nbsCmmcSysRunningLogMessageString = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageString.setStatus('current')
nbsCmmcSysNvramLogMessageTotal = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageTotal.setStatus('current')
nbsCmmcSysNvramLogMessageTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 11, 9), )
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageTable.setStatus('current')
nbsCmmcSysNvramLogMessageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysNvramLogMessageIndex"))
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageEntry.setStatus('current')
nbsCmmcSysNvramLogMessageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageIndex.setStatus('current')
nbsCmmcSysNvramLogMessageSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageSeverity.setStatus('current')
nbsCmmcSysNvramLogMessageErrorID = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageErrorID.setStatus('current')
nbsCmmcSysNvramLogMessageSession = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageSession.setStatus('current')
nbsCmmcSysNvramLogMessageTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageTime.setStatus('current')
nbsCmmcSysNvramLogMessageModule = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageModule.setStatus('current')
nbsCmmcSysNvramLogMessageString = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageString.setStatus('current')
nbsCmmcSysNvramLogMessagePTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessagePTime.setStatus('current')
nbsCmmcSysNvramLogMessageDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 9, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageDateTime.setStatus('current')
nbsCmmcSysAuditLogTotal = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysAuditLogTotal.setStatus('current')
nbsCmmcSysAuditLogTable = MibTable((1, 3, 6, 1, 4, 1, 629, 200, 11, 11), )
if mibBuilder.loadTexts: nbsCmmcSysAuditLogTable.setStatus('current')
nbsCmmcSysAuditLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 200, 11, 11, 1), ).setIndexNames((0, "NBS-CMMC-MIB", "nbsCmmcSysAuditLogIndex"))
if mibBuilder.loadTexts: nbsCmmcSysAuditLogEntry.setStatus('current')
nbsCmmcSysAuditLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysAuditLogIndex.setStatus('current')
nbsCmmcSysAuditLogUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysAuditLogUpTime.setStatus('current')
nbsCmmcSysAuditLogDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysAuditLogDateTime.setStatus('current')
nbsCmmcSysAuditLogString = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 200, 11, 11, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsCmmcSysAuditLogString.setStatus('current')
nbsCmmcSysLogRemoteServer = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLogRemoteServer.setStatus('current')
nbsCmmcSysLogRemoteLevel = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("disabled", 1), ("emerg", 2), ("alert", 3), ("crit", 4), ("error", 5), ("warning", 6), ("notice", 7), ("info", 8), ("debug", 9))).clone('notice')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLogRemoteLevel.setStatus('current')
nbsCmmcSysRunningLogMessageClear = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("operating", 2), ("clearing", 3))).clone('operating')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysRunningLogMessageClear.setStatus('current')
nbsCmmcSysNvramLogMessageClear = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("operating", 2), ("clearing", 3))).clone('operating')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysNvramLogMessageClear.setStatus('current')
nbsCmmcSysAuditLogClear = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("operating", 2), ("clearing", 3))).clone('operating')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysAuditLogClear.setStatus('current')
nbsCmmcSysLogNvSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 11, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 65535)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsCmmcSysLogNvSize.setStatus('current')
nbsCmmcTrapLastMessage = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 12, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nbsCmmcTrapLastMessage.setStatus('current')
nbsCmmcTrapPowerSupplyId = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 12, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nbsCmmcTrapPowerSupplyId.setStatus('current')
nbsCmmcTrapFanId = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 12, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nbsCmmcTrapFanId.setStatus('current')
nbsCmmcTrapPortIndex = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 12, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nbsCmmcTrapPortIndex.setStatus('current')
nbsCmmcTrapPortName = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 12, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nbsCmmcTrapPortName.setStatus('current')
nbsCmmcTrapShutdownReason = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 12, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nbsCmmcTrapShutdownReason.setStatus('current')
nbsCmmcTrapErrorInfo = MibScalar((1, 3, 6, 1, 4, 1, 629, 200, 12, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone('Ethernet.')).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nbsCmmcTrapErrorInfo.setStatus('current')
nbsCmmcTrapGenericTrap = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 1)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"))
if mibBuilder.loadTexts: nbsCmmcTrapGenericTrap.setStatus('deprecated')
nbsCmmcTrapSpecificTrap = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 2)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"))
if mibBuilder.loadTexts: nbsCmmcTrapSpecificTrap.setStatus('deprecated')
nbsCmmcTrapDeviceRebooted = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 3)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcTrapShutdownReason"))
if mibBuilder.loadTexts: nbsCmmcTrapDeviceRebooted.setStatus('current')
nbsCmmcTrapDeviceOnline = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 4)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"))
if mibBuilder.loadTexts: nbsCmmcTrapDeviceOnline.setStatus('current')
nbsCmmcTrapDeviceShuttingDown = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 5)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcTrapShutdownReason"))
if mibBuilder.loadTexts: nbsCmmcTrapDeviceShuttingDown.setStatus('current')
nbsCmmcTrapPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 6)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcTrapPowerSupplyId"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"))
if mibBuilder.loadTexts: nbsCmmcTrapPowerSupplyFailure.setStatus('current')
nbsCmmcTrapPowerSupplyRestored = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 7)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcTrapPowerSupplyId"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"))
if mibBuilder.loadTexts: nbsCmmcTrapPowerSupplyRestored.setStatus('current')
nbsCmmcTrapFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 8)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcTrapFanId"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"))
if mibBuilder.loadTexts: nbsCmmcTrapFanFailure.setStatus('current')
nbsCmmcTrapFanRestored = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 9)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcTrapFanId"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"))
if mibBuilder.loadTexts: nbsCmmcTrapFanRestored.setStatus('current')
nbsCmmcTrapChassisTooHot = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 10)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisTemperature"), ("NBS-CMMC-MIB", "nbsCmmcChassisTemperatureLimit"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"))
if mibBuilder.loadTexts: nbsCmmcTrapChassisTooHot.setStatus('current')
nbsCmmcTrapChassisTooCold = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 11)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisTemperature"), ("NBS-CMMC-MIB", "nbsCmmcChassisTemperatureMin"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"))
if mibBuilder.loadTexts: nbsCmmcTrapChassisTooCold.setStatus('current')
nbsCmmcTrapChassisTempOk = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 12)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisTemperature"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"))
if mibBuilder.loadTexts: nbsCmmcTrapChassisTempOk.setStatus('current')
nbsCmmcTrapSlotModuleIn = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 13)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotType"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapSlotModuleIn.setStatus('current')
nbsCmmcTrapSlotModuleOut = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 14)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotType"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapSlotModuleOut.setStatus('current')
nbsCmmcTrapPortEnabled = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 15)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortEnabled.setStatus('current')
nbsCmmcTrapPortDisabled = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 16)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortDisabled.setStatus('current')
nbsCmmcTrapPortLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 17)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortLink"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortLinkUp.setStatus('current')
nbsCmmcTrapPortLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 18)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortLinkDown.setStatus('current')
nbsCmmcTrapPortLINOn = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 19)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortLINOn.setStatus('current')
nbsCmmcTrapPortLINOff = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 20)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortLINOff.setStatus('current')
nbsCmmcTrapPortLoopbackOn = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 21)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortLoopbackOn.setStatus('current')
nbsCmmcTrapPortLoopbackOff = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 22)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortLoopbackOff.setStatus('current')
nbsCmmcTrapPortMaximumExceeded = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 23)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortValue"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortMaximumExceeded.setStatus('current')
nbsCmmcTrapPortRemoved = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 24)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortRemoved.setStatus('current')
nbsCmmcTrapPortInserted = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 25)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortConnector"), ("NBS-CMMC-MIB", "nbsCmmcPortWavelength"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortInserted.setStatus('current')
nbsCmmcTrapPortTempTooLow = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 26)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortTemperature"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortTemperatureLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortTempTooLow.setStatus('current')
nbsCmmcTrapPortTempTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 27)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortTemperature"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortTemperatureLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortTempTooHigh.setStatus('current')
nbsCmmcTrapPortRxPowerTooLow = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 28)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortRxPower"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortRxPowerLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortRxPowerTooLow.setStatus('current')
nbsCmmcTrapPortRxPowerTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 29)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortRxPower"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortRxPowerLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortRxPowerTooHigh.setStatus('current')
nbsCmmcTrapPortTxPowerTooLow = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 30)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortTxPower"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortTxPowerLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortTxPowerTooLow.setStatus('current')
nbsCmmcTrapPortTxPowerTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 31)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortTxPower"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortTxPowerLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortTxPowerTooHigh.setStatus('current')
nbsCmmcTrapPortAmpsTooLow = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 32)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortBiasAmps"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortBiasAmpsLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortAmpsTooLow.setStatus('current')
nbsCmmcTrapPortAmpsTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 33)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortBiasAmps"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortBiasAmpsLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortAmpsTooHigh.setStatus('current')
nbsCmmcTrapPortVoltsTooLow = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 34)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortSupplyVolts"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortSupplyVoltsLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortVoltsTooLow.setStatus('current')
nbsCmmcTrapPortVoltsTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 35)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortSupplyVolts"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcPortThreshold"), ("NBS-CMMC-MIB", "nbsCmmcPortSupplyVoltsLevel"))
if mibBuilder.loadTexts: nbsCmmcTrapPortVoltsTooHigh.setStatus('current')
nbsCmmcTrapSwitchover = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 36)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcTrapPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"), ("NBS-CMMC-MIB", "nbsCmmcTrapPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapSwitchover.setStatus('current')
nbsCmmcTrapSlotShuttingDown = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 37)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcTrapShutdownReason"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapSlotShuttingDown.setStatus('current')
nbsCmmcTrapPortCrcError = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 38)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortCrcError.setStatus('current')
nbsCmmcTrapCpeInManagedChassis = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 39)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapCpeInManagedChassis.setStatus('current')
nbsCmmcTrapCoWithoutCpe = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 40)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapCoWithoutCpe.setStatus('current')
nbsCmmcTrapCoTakesControl = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 41)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapCoTakesControl.setStatus('current')
nbsCmmcTrapCoYieldsControl = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 42)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapCoYieldsControl.setStatus('current')
nbsCmmcTrapCoLinkedToCo = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 43)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapCoLinkedToCo.setStatus('current')
nbsCmmcTrapCpeFound = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 44)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapCpeFound.setStatus('current')
nbsCmmcTrapPortReflectionDetected = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 45)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortReflectionDetected.setStatus('current')
nbsCmmcTrapPortReflectionCeased = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 46)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortReflectionCeased.setStatus('current')
nbsCmmcTrapPortTempOk = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 47)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortTemperature"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortTempOk.setStatus('current')
nbsCmmcTrapPortRxPowerOk = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 48)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortRxPower"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortRxPowerOk.setStatus('current')
nbsCmmcTrapPortTxPowerOk = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 49)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortTxPower"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortTxPowerOk.setStatus('current')
nbsCmmcTrapPortAmpsOk = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 50)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortBiasAmps"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortAmpsOk.setStatus('current')
nbsCmmcTrapPortVoltsOk = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 51)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortSupplyVolts"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortVoltsOk.setStatus('current')
nbsCmmcTrapSlotTempTooLow = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 52)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotTemperature"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapSlotTempTooLow.setStatus('current')
nbsCmmcTrapSlotTempTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 53)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotTemperature"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapSlotTempTooHigh.setStatus('current')
nbsCmmcTrapSlotTempOk = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 54)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotTemperature"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"))
if mibBuilder.loadTexts: nbsCmmcTrapSlotTempOk.setStatus('current')
nbsCmmcTrapPortErrorsDetected = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 55)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcTrapErrorInfo"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortErrorsDetected.setStatus('current')
nbsCmmcTrapPortErrorsStopped = NotificationType((1, 3, 6, 1, 4, 1, 629, 200, 13, 0, 56)).setObjects(("NBS-CMMC-MIB", "nbsCmmcTrapLastMessage"), ("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-CMMC-MIB", "nbsCmmcChassisName"), ("NBS-CMMC-MIB", "nbsCmmcSlotName"), ("NBS-CMMC-MIB", "nbsCmmcPortName"))
if mibBuilder.loadTexts: nbsCmmcTrapPortErrorsStopped.setStatus('current')
mibBuilder.exportSymbols("NBS-CMMC-MIB", nbsCmmcPortSerialNumber=nbsCmmcPortSerialNumber, nbsCmmcSysNetMask=nbsCmmcSysNetMask, nbsCmmcPortTable=nbsCmmcPortTable, nbsCmmcTrapSlotShuttingDown=nbsCmmcTrapSlotShuttingDown, nbsCmmcSysNvramLogMessageIndex=nbsCmmcSysNvramLogMessageIndex, nbsCmmcTrapDeviceShuttingDown=nbsCmmcTrapDeviceShuttingDown, nbsCmmcSysProtoTableSize=nbsCmmcSysProtoTableSize, nbsCmmcSlotCountersState=nbsCmmcSlotCountersState, nbsCmmcLedChassisIndex=nbsCmmcLedChassisIndex, nbsCmmcTrapPortDisabled=nbsCmmcTrapPortDisabled, nbsCmmcTrapPortIndex=nbsCmmcTrapPortIndex, nbsCmmcTrapPortMaximumExceeded=nbsCmmcTrapPortMaximumExceeded, nbsCmmcPortAmpOutputPwrAdmin=nbsCmmcPortAmpOutputPwrAdmin, nbsCmmcSysTelnetLocal=nbsCmmcSysTelnetLocal, nbsCmmcTrapSpecificTrap=nbsCmmcTrapSpecificTrap, nbsCmmcPortGrp=nbsCmmcPortGrp, nbsCmmcPortFCRecvAdmin=nbsCmmcPortFCRecvAdmin, nbsCmmcPortVendorInfo=nbsCmmcPortVendorInfo, nbsCmmcSysProtoIndex=nbsCmmcSysProtoIndex, nbsCmmcSysTelnetServer=nbsCmmcSysTelnetServer, nbsCmmcSlotIPAddress=nbsCmmcSlotIPAddress, nbsCmmcTrapFanId=nbsCmmcTrapFanId, nbsCmmcTrapChassisTempOk=nbsCmmcTrapChassisTempOk, nbsCmmcSlotBroadcastAddr=nbsCmmcSlotBroadcastAddr, nbsCmmcPortMaxPacketSize=nbsCmmcPortMaxPacketSize, nbsCmmcPortRMChassis=nbsCmmcPortRMChassis, nbsCmmcSlotFirmwareLoad=nbsCmmcSlotFirmwareLoad, nbsCmmcChassisEnableModuleSpecificTraps=nbsCmmcChassisEnableModuleSpecificTraps, nbsCmmcSysLogEmailLevel=nbsCmmcSysLogEmailLevel, nbsCmmcSlotCrossConnect=nbsCmmcSlotCrossConnect, nbsCmmcPortProtoAdmin=nbsCmmcPortProtoAdmin, nbsCmmcTrapPortAmpsTooHigh=nbsCmmcTrapPortAmpsTooHigh, nbsCmmcChassisCountersState=nbsCmmcChassisCountersState, nbsCmmcPortMappingType=nbsCmmcPortMappingType, nbsCmmcSysTrapTblEntStatus=nbsCmmcSysTrapTblEntStatus, nbsCmmcSysNVAreaTableSize=nbsCmmcSysNVAreaTableSize, nbsCmmcSysRunningLogMessageErrorID=nbsCmmcSysRunningLogMessageErrorID, nbsCmmcSysUpgrade=nbsCmmcSysUpgrade, nbsCmmcPortBiasAmpsLevel=nbsCmmcPortBiasAmpsLevel, nbsCmmcSysAuditLogEntry=nbsCmmcSysAuditLogEntry, nbsCmmcPortAutoNegAd=nbsCmmcPortAutoNegAd, nbsCmmcSysPingRequests=nbsCmmcSysPingRequests, nbsCmmcSysWriteConfig=nbsCmmcSysWriteConfig, nbsCmmcSysNvramLogMessageErrorID=nbsCmmcSysNvramLogMessageErrorID, nbsCmmcSlotNVAreaOper=nbsCmmcSlotNVAreaOper, nbsCmmcSystemGrp=nbsCmmcSystemGrp, nbsCmmcSysTimeZoneIndex=nbsCmmcSysTimeZoneIndex, nbsCmmcSlotRedundancy=nbsCmmcSlotRedundancy, nbsCmmcChassisTable=nbsCmmcChassisTable, nbsCmmcTrapSlotTempOk=nbsCmmcTrapSlotTempOk, nbsCmmcSysTrapTblEntComm=nbsCmmcSysTrapTblEntComm, nbsCmmcChassisNVAreaAdmin=nbsCmmcChassisNVAreaAdmin, nbsCmmcSysTrapEntry=nbsCmmcSysTrapEntry, nbsCmmcTrapPortRxPowerTooHigh=nbsCmmcTrapPortRxPowerTooHigh, nbsCmmcChassisFan6Status=nbsCmmcChassisFan6Status, nbsCmmcTrapPortLoopbackOff=nbsCmmcTrapPortLoopbackOff, nbsCmmcPortAmpGainStepSize=nbsCmmcPortAmpGainStepSize, nbsCmmcSysWebServer=nbsCmmcSysWebServer, nbsCmmcSysAuditLogTable=nbsCmmcSysAuditLogTable, nbsCmmcPortAutoNegotiation=nbsCmmcPortAutoNegotiation, nbsCmmcPortMDIPinoutAdmin=nbsCmmcPortMDIPinoutAdmin, nbsCmmcTrapCoTakesControl=nbsCmmcTrapCoTakesControl, nbsCmmcTrapChassisTooHot=nbsCmmcTrapChassisTooHot, nbsCmmcSysTelnetConnectTime=nbsCmmcSysTelnetConnectTime, nbsCmmcChassisSignalStrength=nbsCmmcChassisSignalStrength, nbsCmmcSnmpCfg=nbsCmmcSnmpCfg, nbsCmmcSysLogNvSize=nbsCmmcSysLogNvSize, nbsCmmcSysSnmpV2c=nbsCmmcSysSnmpV2c, nbsCmmcPortTransmitUnmapped=nbsCmmcPortTransmitUnmapped, nbsCmmcSlotReset=nbsCmmcSlotReset, nbsCmmcIpSnmpGrp=nbsCmmcIpSnmpGrp, nbsCmmcChassisNVAreaOper=nbsCmmcChassisNVAreaOper, nbsCmmcPortAging=nbsCmmcPortAging, nbsCmmcSysAuditLogClear=nbsCmmcSysAuditLogClear, nbsCmmcChassisType=nbsCmmcChassisType, nbsCmmcChassisSlotListBitMap=nbsCmmcChassisSlotListBitMap, nbsCmmcSysFirmwareCksum=nbsCmmcSysFirmwareCksum, nbsCmmcTrapPortReflectionCeased=nbsCmmcTrapPortReflectionCeased, nbsCmmcSysLoaderTableSize=nbsCmmcSysLoaderTableSize, nbsCmmcSysRunningLogMessageTime=nbsCmmcSysRunningLogMessageTime, nbsCmmcChassisFace=nbsCmmcChassisFace, nbsCmmcPortPreambleLen=nbsCmmcPortPreambleLen, nbsCmmcSysFwDescr=nbsCmmcSysFwDescr, nbsCmmcTrapPortTxPowerTooHigh=nbsCmmcTrapPortTxPowerTooHigh, nbsCmmcSysPingSessionIndex=nbsCmmcSysPingSessionIndex, nbsCmmcSysLoginIdleTimeout=nbsCmmcSysLoginIdleTimeout, nbsCmmcPortAlarmCause=nbsCmmcPortAlarmCause, nbsCmmcSysDiscoveryHostEntry=nbsCmmcSysDiscoveryHostEntry, nbsCmmcTrapGrp=nbsCmmcTrapGrp, nbsCmmcPortZoneIdAdmin=nbsCmmcPortZoneIdAdmin, nbsCmmcSmtpRcvrIndex=nbsCmmcSmtpRcvrIndex, nbsCmmcChassisTemperatureLimit=nbsCmmcChassisTemperatureLimit, nbsCmmcTrapPortErrorsDetected=nbsCmmcTrapPortErrorsDetected, nbsCmmcSysLoaderEntry=nbsCmmcSysLoaderEntry, nbsCmmcSysSshServer=nbsCmmcSysSshServer, nbsCmmcSysFirmwareIndex=nbsCmmcSysFirmwareIndex, nbsCmmcTftpSessModuleId=nbsCmmcTftpSessModuleId, nbsCmmcChassisEnableSlotChangeTraps=nbsCmmcChassisEnableSlotChangeTraps, nbsCmmcSysWebPort=nbsCmmcSysWebPort, nbsCmmcSysWriteCommunity=nbsCmmcSysWriteCommunity, nbsCmmcChassisPS1Status=nbsCmmcChassisPS1Status, nbsCmmcSysEnableBridgeTraps=nbsCmmcSysEnableBridgeTraps, nbsCmmcSmtpRcvrTable=nbsCmmcSmtpRcvrTable, nbsCmmcChassisEnablePortTraps=nbsCmmcChassisEnablePortTraps, nbsCmmcSysTrapTblEntIpAddr=nbsCmmcSysTrapTblEntIpAddr, nbsCmmcObjects=nbsCmmcObjects, nbsCmmcSysDiscovery=nbsCmmcSysDiscovery, nbsCmmcSlotSerialNum=nbsCmmcSlotSerialNum, nbsCmmcSysEnablePowerSupplyTraps=nbsCmmcSysEnablePowerSupplyTraps, nbsCmmcSysTimeServer=nbsCmmcSysTimeServer, nbsCmmcTrapCoYieldsControl=nbsCmmcTrapCoYieldsControl, nbsCmmcTrapErrorInfo=nbsCmmcTrapErrorInfo, InterfaceIndex=InterfaceIndex, nbsCmmcSysLogTrapLevel=nbsCmmcSysLogTrapLevel, nbsCmmcSysDiscoveryHostTable=nbsCmmcSysDiscoveryHostTable, nbsCmmcSmtpGrp=nbsCmmcSmtpGrp, nbsCmmcSysTimeProtocol=nbsCmmcSysTimeProtocol, nbsCmmcSysTimeZoneTableSize=nbsCmmcSysTimeZoneTableSize, nbsCmmcSysAuditLogUpTime=nbsCmmcSysAuditLogUpTime, nbsCmmcSysRunningLogMessageString=nbsCmmcSysRunningLogMessageString, nbsCmmcChassisNumberOfPortsBitMap=nbsCmmcChassisNumberOfPortsBitMap, nbsCmmcPortRMPort=nbsCmmcPortRMPort, nbsCmmcPortThresholdAction=nbsCmmcPortThresholdAction, nbsCmmcTrapPortRxPowerTooLow=nbsCmmcTrapPortRxPowerTooLow, nbsCmmcSysNvramLogMessagePTime=nbsCmmcSysNvramLogMessagePTime, nbsCmmcPortSupplyVolts=nbsCmmcPortSupplyVolts, nbsCmmcSmtpServerAddress=nbsCmmcSmtpServerAddress, nbsCmmcSysTelnetLocalPort=nbsCmmcSysTelnetLocalPort, nbsCmmcSysTimeZoneTable=nbsCmmcSysTimeZoneTable, nbsCmmcSysNvramLogMessageTime=nbsCmmcSysNvramLogMessageTime, nbsCmmcPortEntry=nbsCmmcPortEntry, nbsCmmcSlotNVAreaBanks=nbsCmmcSlotNVAreaBanks, nbsCmmcSlotSwConfigurable=nbsCmmcSlotSwConfigurable, nbsCmmcSlotFaceRowIndex=nbsCmmcSlotFaceRowIndex, nbsCmmcTftpMaxSessionNum=nbsCmmcTftpMaxSessionNum, nbsCmmcSysTrapTblEntIndex=nbsCmmcSysTrapTblEntIndex, nbsCmmcTrapCpeFound=nbsCmmcTrapCpeFound, nbsCmmcSysTimeZone=nbsCmmcSysTimeZone, nbsCmmcPortPartRev=nbsCmmcPortPartRev, nbsCmmcTrapPortVoltsTooLow=nbsCmmcTrapPortVoltsTooLow, nbsCmmcPortAmpGainAdmin=nbsCmmcPortAmpGainAdmin, nbsCmmcSysAdminBootpState=nbsCmmcSysAdminBootpState, nbsCmmcTrapLastMessage=nbsCmmcTrapLastMessage, nbsCmmcPortZoneChassisAdmin=nbsCmmcPortZoneChassisAdmin, nbsCmmcSysNVAreaIfIndex=nbsCmmcSysNVAreaIfIndex, nbsCmmcLedIndex=nbsCmmcLedIndex, nbsCmmcSysLoaderAck=nbsCmmcSysLoaderAck, nbsCmmcSysLogMessageEntry=nbsCmmcSysLogMessageEntry, nbsCmmcSysNvramLogMessageTable=nbsCmmcSysNvramLogMessageTable, nbsCmmcSysTrapTblMaxSize=nbsCmmcSysTrapTblMaxSize, nbsCmmcSysFirmwareDate=nbsCmmcSysFirmwareDate, nbsCmmcSlotSubnetMask=nbsCmmcSlotSubnetMask, nbsCmmcTrapPortVoltsTooHigh=nbsCmmcTrapPortVoltsTooHigh, nbsCmmcPortModulePort=nbsCmmcPortModulePort, nbsCmmcChassisNVAreaBanks=nbsCmmcChassisNVAreaBanks, nbsCmmcChassisModel=nbsCmmcChassisModel, nbsCmmcTrapShutdownReason=nbsCmmcTrapShutdownReason, nbsCmmcSysLastSetFailure=nbsCmmcSysLastSetFailure, nbsCmmcPortRxPowerLevel=nbsCmmcPortRxPowerLevel, nbsCmmcSlotMacAddress=nbsCmmcSlotMacAddress, nbsCmmcTrapGenericTrap=nbsCmmcTrapGenericTrap, nbsCmmcSmtpDomainName=nbsCmmcSmtpDomainName, nbsCmmcSysArpAgingTime=nbsCmmcSysArpAgingTime, nbsCmmcIpCfg=nbsCmmcIpCfg, nbsCmmcSysDiscoveryHostIPAddress=nbsCmmcSysDiscoveryHostIPAddress, nbsCmmcSlotName=nbsCmmcSlotName, nbsCmmcSysTelnetHost=nbsCmmcSysTelnetHost, nbsCmmcSysTimeZoneEntry=nbsCmmcSysTimeZoneEntry, nbsCmmcChassisEnableSwitchoverTraps=nbsCmmcChassisEnableSwitchoverTraps, nbsCmmcPortDigitalDiags=nbsCmmcPortDigitalDiags, nbsCmmcSmtpRcvrNum=nbsCmmcSmtpRcvrNum, nbsCmmcPortSniffer=nbsCmmcPortSniffer, nbsCmmcChassisEnableChassisTraps=nbsCmmcChassisEnableChassisTraps, nbsCmmcSlotType=nbsCmmcSlotType, nbsCmmcPortSupplyVoltsLevel=nbsCmmcPortSupplyVoltsLevel, nbsCmmcSysRunningLogMessageIndex=nbsCmmcSysRunningLogMessageIndex, nbsCmmcSysNVAreaTable=nbsCmmcSysNVAreaTable, nbsCmmcTrapPowerSupplyRestored=nbsCmmcTrapPowerSupplyRestored, nbsCmmcSmtpRcvrStatus=nbsCmmcSmtpRcvrStatus, nbsCmmcSysPingEntry=nbsCmmcSysPingEntry, nbsCmmcTrapPortCrcError=nbsCmmcTrapPortCrcError, nbsCmmcSysTelnetSessionIndex=nbsCmmcSysTelnetSessionIndex, nbsCmmcSysNvramLogMessageDateTime=nbsCmmcSysNvramLogMessageDateTime, nbsCmmcSysMaxTelnetSessions=nbsCmmcSysMaxTelnetSessions, nbsCmmcSysTelnetSessionStat=nbsCmmcSysTelnetSessionStat, nbsCmmcSysNvramLogMessageClear=nbsCmmcSysNvramLogMessageClear, nbsCmmcTrapCpeInManagedChassis=nbsCmmcTrapCpeInManagedChassis, nbsCmmcTrapPortLINOff=nbsCmmcTrapPortLINOff, nbsCmmcSysNvramTable=nbsCmmcSysNvramTable, nbsCmmcChassisEnableLINTraps=nbsCmmcChassisEnableLINTraps, nbsCmmcSysTftpHostIP=nbsCmmcSysTftpHostIP, nbsCmmcSysProtoRate=nbsCmmcSysProtoRate, nbsCmmcPortAmpGainMaximum=nbsCmmcPortAmpGainMaximum, nbsCmmcChassisFan3Status=nbsCmmcChassisFan3Status, nbsCmmcSlotDescr=nbsCmmcSlotDescr, nbsCmmcPortProtoOper=nbsCmmcPortProtoOper, nbsCmmcSysPingSessionStat=nbsCmmcSysPingSessionStat, nbsCmmcSysReadCommunity=nbsCmmcSysReadCommunity, nbsCmmcSysRunBootpState=nbsCmmcSysRunBootpState, nbsCmmcSysLoaderFilename=nbsCmmcSysLoaderFilename, nbsCmmcSlotFaceTable=nbsCmmcSlotFaceTable, nbsCmmcPortSpeed=nbsCmmcPortSpeed, nbsCmmcSysSerialSlipBaudRate=nbsCmmcSysSerialSlipBaudRate, nbsCmmcPrvBcastAddr=nbsCmmcPrvBcastAddr, nbsCmmcSysFwVers=nbsCmmcSysFwVers, nbsCmmcSysDiscoveryHostDistance=nbsCmmcSysDiscoveryHostDistance, nbsCmmcSlotHoming=nbsCmmcSlotHoming, nbsCmmcPortTxPower=nbsCmmcPortTxPower, nbsCmmcSysTrapTable=nbsCmmcSysTrapTable, nbsCmmcTftpGrp=nbsCmmcTftpGrp, nbsCmmcTftpSessIndex=nbsCmmcTftpSessIndex, nbsCmmcSysIpAddrOper=nbsCmmcSysIpAddrOper, nbsCmmcSysCrossConnect=nbsCmmcSysCrossConnect, nbsCmmcChassisSignalStrengthMinimum=nbsCmmcChassisSignalStrengthMinimum, nbsCmmcSysFirmwareMTime=nbsCmmcSysFirmwareMTime, nbsCmmcChassisPS2Status=nbsCmmcChassisPS2Status, nbsCmmcPortLinkMatch=nbsCmmcPortLinkMatch, nbsCmmcSysFirmwareIDCs=nbsCmmcSysFirmwareIDCs, nbsCmmcSysNvramLogMessageModule=nbsCmmcSysNvramLogMessageModule, nbsCmmcSysLockTypes=nbsCmmcSysLockTypes, nbsCmmcChassisPS4Status=nbsCmmcChassisPS4Status, nbsCmmcSlotIndex=nbsCmmcSlotIndex, nbsCmmcPortEnable=nbsCmmcPortEnable, nbsCmmcSlotHardwareRevision=nbsCmmcSlotHardwareRevision, nbsCmmcTrapPortTempTooLow=nbsCmmcTrapPortTempTooLow, nbsCmmcSysErrUptime=nbsCmmcSysErrUptime, nbsCmmcTrapSlotModuleIn=nbsCmmcTrapSlotModuleIn, nbsCmmcTrapCoLinkedToCo=nbsCmmcTrapCoLinkedToCo, nbsCmmcPortRMSlot=nbsCmmcPortRMSlot, nbsCmmcSysTelnetPort=nbsCmmcSysTelnetPort, nbsCmmcTrapPortEnabled=nbsCmmcTrapPortEnabled, nbsCmmcTrapPortInserted=nbsCmmcTrapPortInserted, nbsCmmcSysProtoFamily=nbsCmmcSysProtoFamily, nbsCmmcSysRunningLogMessageModule=nbsCmmcSysRunningLogMessageModule, nbsCmmcPortWavelengthX=nbsCmmcPortWavelengthX, nbsCmmcSysPingTable=nbsCmmcSysPingTable, nbsCmmcTrapPortReflectionDetected=nbsCmmcTrapPortReflectionDetected, nbsCmmcTrapChassisTooCold=nbsCmmcTrapChassisTooCold, nbsCmmcSysRunningLogMessageTable=nbsCmmcSysRunningLogMessageTable, nbsCmmcPortZoneSlotOper=nbsCmmcPortZoneSlotOper, nbsCmmcTrapPortLINOn=nbsCmmcTrapPortLINOn, nbsCmmcSysLoaderIndex=nbsCmmcSysLoaderIndex, nbsCmmcTrapPortTxPowerTooLow=nbsCmmcTrapPortTxPowerTooLow, nbsCmmcSysCurrentTime=nbsCmmcSysCurrentTime, nbsCmmcPortAmpGainOper=nbsCmmcPortAmpGainOper, nbsCmmcSysTelnetHostPort=nbsCmmcSysTelnetHostPort, nbsCmmcSysNvramIndex=nbsCmmcSysNvramIndex, nbsCmmcPortObjectId=nbsCmmcPortObjectId, nbsCmmcSlotFaceSlotIndex=nbsCmmcSlotFaceSlotIndex, nbsCmmcSysNvramLogMessageSeverity=nbsCmmcSysNvramLogMessageSeverity, nbsCmmcChassisFirmwareCaps=nbsCmmcChassisFirmwareCaps, nbsCmmcSysRunningLogMessageClear=nbsCmmcSysRunningLogMessageClear, nbsCmmcSysFirmwareEntry=nbsCmmcSysFirmwareEntry, nbsCmmcPortFCSendOper=nbsCmmcPortFCSendOper)
mibBuilder.exportSymbols("NBS-CMMC-MIB", nbsCmmcChassisFan4Status=nbsCmmcChassisFan4Status, nbsCmmcSlotNVAreaAdmin=nbsCmmcSlotNVAreaAdmin, nbsCmmcSysNVAreaEntry=nbsCmmcSysNVAreaEntry, nbsCmmcChassisEnableLoopbackTraps=nbsCmmcChassisEnableLoopbackTraps, nbsCmmcSlotGrp=nbsCmmcSlotGrp, nbsCmmcTftpSessFileSize=nbsCmmcTftpSessFileSize, nbsCmmcSysNVAreaDescr=nbsCmmcSysNVAreaDescr, nbsCmmcSlotTable=nbsCmmcSlotTable, nbsCmmcSysTrapTblEntPort=nbsCmmcSysTrapTblEntPort, nbsCmmcSysFirmwareDescr=nbsCmmcSysFirmwareDescr, nbsCmmcSlotDefGateway=nbsCmmcSlotDefGateway, nbsCmmcPortName=nbsCmmcPortName, nbsCmmcTrapFanRestored=nbsCmmcTrapFanRestored, nbsCmmcSysAuditLogTotal=nbsCmmcSysAuditLogTotal, nbsCmmcSlotFaceSummary=nbsCmmcSlotFaceSummary, nbsCmmcPortTemperatureLevel=nbsCmmcPortTemperatureLevel, nbsCmmcSysTelnetSessionId=nbsCmmcSysTelnetSessionId, nbsCmmcSysNvramLogMessageSession=nbsCmmcSysNvramLogMessageSession, nbsCmmcTrapFanFailure=nbsCmmcTrapFanFailure, nbsCmmcSmtpRcvrLevel=nbsCmmcSmtpRcvrLevel, nbsCmmcTftpSessProgress=nbsCmmcTftpSessProgress, nbsCmmcPortEnableOper=nbsCmmcPortEnableOper, nbsCmmcSysSelftestLevel=nbsCmmcSysSelftestLevel, nbsCmmcTrapPortAmpsOk=nbsCmmcTrapPortAmpsOk, nbsCmmcSlotModuleType=nbsCmmcSlotModuleType, nbsCmmcChassisFan5Status=nbsCmmcChassisFan5Status, nbsCmmcChassisName=nbsCmmcChassisName, nbsCmmcSmtpRcvrEmailAddress=nbsCmmcSmtpRcvrEmailAddress, nbsCmmcSysTrapTblEntLevel=nbsCmmcSysTrapTblEntLevel, nbsCmmcSlotRedundancyOper=nbsCmmcSlotRedundancyOper, nbsCmmcChassisGrp=nbsCmmcChassisGrp, nbsCmmcSysLogMessageTable=nbsCmmcSysLogMessageTable, nbsCmmcTrapPortName=nbsCmmcTrapPortName, nbsCmmcPortCollisionActivity=nbsCmmcPortCollisionActivity, nbsCmmcTrapPortVoltsOk=nbsCmmcTrapPortVoltsOk, nbsCmmcChassisHardwareRevision=nbsCmmcChassisHardwareRevision, nbsCmmcTrapPortTempOk=nbsCmmcTrapPortTempOk, nbsCmmcMib=nbsCmmcMib, nbsCmmcPortZoneChassisOper=nbsCmmcPortZoneChassisOper, nbsCmmcChassisIndex=nbsCmmcChassisIndex, nbsCmmcSysLoaderAbort=nbsCmmcSysLoaderAbort, nbsCmmcSysNvramLogMessageString=nbsCmmcSysNvramLogMessageString, nbsCmmcLedSlotIndex=nbsCmmcLedSlotIndex, nbsCmmcChassisEnablePortChangeTraps=nbsCmmcChassisEnablePortChangeTraps, nbsCmmcSysFirmwareTable=nbsCmmcSysFirmwareTable, nbsCmmcSysSnmpPortOper=nbsCmmcSysSnmpPortOper, nbsCmmcTrapPortLinkUp=nbsCmmcTrapPortLinkUp, nbsCmmcSysFirmwareURLStatus=nbsCmmcSysFirmwareURLStatus, nbsCmmcPortNominalBitRate=nbsCmmcPortNominalBitRate, nbsCmmcChassisEnablePortDiagsTraps=nbsCmmcChassisEnablePortDiagsTraps, nbsCmmcPortPreferred=nbsCmmcPortPreferred, nbsCmmcPortProtoCapabilities=nbsCmmcPortProtoCapabilities, nbsCmmcSysLogRemoteServer=nbsCmmcSysLogRemoteServer, nbsCmmcSysRunningLogMessageSession=nbsCmmcSysRunningLogMessageSession, nbsCmmcSlotModuleSlot=nbsCmmcSlotModuleSlot, nbsCmmcChassisPortInfoBitMap=nbsCmmcChassisPortInfoBitMap, nbsCmmcPortAmpGainMinimum=nbsCmmcPortAmpGainMinimum, nbsCmmcPortIndex=nbsCmmcPortIndex, nbsCmmcSysSnmpV3=nbsCmmcSysSnmpV3, nbsCmmcPortSlotIndex=nbsCmmcPortSlotIndex, nbsCmmcSysSetNvramDefaults=nbsCmmcSysSetNvramDefaults, nbsCmmcPortMDIPinoutOper=nbsCmmcPortMDIPinoutOper, nbsCmmcSlotTemperature=nbsCmmcSlotTemperature, nbsCmmcSysFirmwareSize=nbsCmmcSysFirmwareSize, nbsCmmcSlotChassisIndex=nbsCmmcSlotChassisIndex, nbsCmmcPortSelectLink=nbsCmmcPortSelectLink, nbsCmmcPortLIN=nbsCmmcPortLIN, nbsCmmcChassisTemperatureMin=nbsCmmcChassisTemperatureMin, nbsCmmcPortTemperature=nbsCmmcPortTemperature, nbsCmmcSysNVAreaBank=nbsCmmcSysNVAreaBank, nbsCmmcSysEnableIpAccessTraps=nbsCmmcSysEnableIpAccessTraps, nbsCmmcSlotConfiguration=nbsCmmcSlotConfiguration, nbsCmmcSysTelnetEntry=nbsCmmcSysTelnetEntry, nbsCmmcSysFirmwareVersion=nbsCmmcSysFirmwareVersion, nbsCmmcChassisFirmwareLoad=nbsCmmcChassisFirmwareLoad, nbsCmmcSlotNumberOfPorts=nbsCmmcSlotNumberOfPorts, nbsCmmcPortRxPower=nbsCmmcPortRxPower, nbsCmmcSlotFaceEntry=nbsCmmcSlotFaceEntry, nbsCmmcPortWavelength=nbsCmmcPortWavelength, nbsCmmcTrapPortTempTooHigh=nbsCmmcTrapPortTempTooHigh, nbsCmmcPortType=nbsCmmcPortType, nbsCmmcTftpSessStatus=nbsCmmcTftpSessStatus, nbsCmmcPortConnector=nbsCmmcPortConnector, nbsCmmcSysSnmpPortAdmin=nbsCmmcSysSnmpPortAdmin, nbsCmmcPortChassisIndex=nbsCmmcPortChassisIndex, nbsCmmcSysNvramBlock=nbsCmmcSysNvramBlock, nbsCmmcChassisEnableLinkTraps=nbsCmmcChassisEnableLinkTraps, nbsCmmcSlotUpgradable=nbsCmmcSlotUpgradable, nbsCmmcPortZoneIfIndexOper=nbsCmmcPortZoneIfIndexOper, nbsCmmcSysLogMessageType=nbsCmmcSysLogMessageType, nbsCmmcSysLogRunningLevel=nbsCmmcSysLogRunningLevel, nbsCmmcSysProtoEntry=nbsCmmcSysProtoEntry, nbsCmmcTrapCoWithoutCpe=nbsCmmcTrapCoWithoutCpe, nbsCmmcSysBcastAddrOper=nbsCmmcSysBcastAddrOper, nbsCmmcSysNumRestarts=nbsCmmcSysNumRestarts, nbsCmmcSlotToggleRate=nbsCmmcSlotToggleRate, nbsCmmcPortTermination=nbsCmmcPortTermination, nbsCmmcSysLogRemoteLevel=nbsCmmcSysLogRemoteLevel, nbsCmmcPortThreshold=nbsCmmcPortThreshold, nbsCmmcTrapPortTxPowerOk=nbsCmmcTrapPortTxPowerOk, nbsCmmcSysMaxPingSessions=nbsCmmcSysMaxPingSessions, nbsCmmcSysSnmpV1=nbsCmmcSysSnmpV1, nbsCmmcTrapPowerSupplyFailure=nbsCmmcTrapPowerSupplyFailure, nbsCmmcSlotLoader=nbsCmmcSlotLoader, nbsCmmcSysFirmwareType=nbsCmmcSysFirmwareType, nbsCmmcPrvIpAddr=nbsCmmcPrvIpAddr, nbsCmmcPortCountersState=nbsCmmcPortCountersState, nbsCmmcSysNVAreaCksum=nbsCmmcSysNVAreaCksum, nbsCmmcSysObBcastAddr=nbsCmmcSysObBcastAddr, nbsCmmcSysLogGrp=nbsCmmcSysLogGrp, nbsCmmcPortValue=nbsCmmcPortValue, nbsCmmcChassisSerialNum=nbsCmmcChassisSerialNum, nbsCmmcPortOperational=nbsCmmcPortOperational, nbsCmmcTraps=nbsCmmcTraps, nbsCmmcPortErrorActivity=nbsCmmcPortErrorActivity, nbsCmmcPortFCRecvOper=nbsCmmcPortFCRecvOper, nbsCmmcTrapDeviceRebooted=nbsCmmcTrapDeviceRebooted, nbsCmmcSysLoaderProgress=nbsCmmcSysLoaderProgress, nbsCmmcSysLoaderTable=nbsCmmcSysLoaderTable, nbsCmmcSysLogNvLevel=nbsCmmcSysLogNvLevel, nbsCmmcSysSerialLineMode=nbsCmmcSysSerialLineMode, nbsCmmcTftpSessEntry=nbsCmmcTftpSessEntry, nbsCmmcLedEntry=nbsCmmcLedEntry, nbsCmmcSysIpAddr=nbsCmmcSysIpAddr, PYSNMP_MODULE_ID=nbsCmmcMib, nbsCmmcSysFirmwareFilename=nbsCmmcSysFirmwareFilename, nbsCmmcSysNVAreaStatus=nbsCmmcSysNVAreaStatus, nbsCmmcTrapPortAmpsTooLow=nbsCmmcTrapPortAmpsTooLow, nbsCmmcChassisEnableAutoReset=nbsCmmcChassisEnableAutoReset, nbsCmmcPortLink=nbsCmmcPortLink, nbsCmmcNtpGrp=nbsCmmcNtpGrp, nbsCmmcSlotClearType=nbsCmmcSlotClearType, nbsCmmcTrapSwitchover=nbsCmmcTrapSwitchover, nbsCmmcPortAutoNegEditable=nbsCmmcPortAutoNegEditable, nbsCmmcSysRestart=nbsCmmcSysRestart, nbsCmmcPortFlowControl=nbsCmmcPortFlowControl, nbsCmmcPortToggleMode=nbsCmmcPortToggleMode, nbsCmmcTftpSessTable=nbsCmmcTftpSessTable, nbsCmmcLedColor=nbsCmmcLedColor, nbsCmmcPortAutoNegWait=nbsCmmcPortAutoNegWait, nbsCmmcPortIfIndex=nbsCmmcPortIfIndex, nbsCmmcSlotObjectId=nbsCmmcSlotObjectId, nbsCmmcSysNetMaskOper=nbsCmmcSysNetMaskOper, nbsCmmcPortZoneIdOper=nbsCmmcPortZoneIdOper, nbsCmmcSysLogMessageSeverity=nbsCmmcSysLogMessageSeverity, nbsCmmcSysSshPort=nbsCmmcSysSshPort, nbsCmmcSysDefaultGatewayOper=nbsCmmcSysDefaultGatewayOper, nbsCmmcPortZoneSlotAdmin=nbsCmmcPortZoneSlotAdmin, nbs=nbs, nbsCmmcSysPingResponses=nbsCmmcSysPingResponses, nbsCmmcTrapPortErrorsStopped=nbsCmmcTrapPortErrorsStopped, nbsCmmcTrapPortRxPowerOk=nbsCmmcTrapPortRxPowerOk, nbsCmmcSysRunningLogMessageEntry=nbsCmmcSysRunningLogMessageEntry, nbsCmmcTrapSlotTempTooLow=nbsCmmcTrapSlotTempTooLow, nbsCmmcPortRemoteLoopback=nbsCmmcPortRemoteLoopback, nbsCmmcPortZoneIfIndexAdmin=nbsCmmcPortZoneIfIndexAdmin, nbsCmmcPortTxPowerLevel=nbsCmmcPortTxPowerLevel, nbsCmmcTrapPowerSupplyId=nbsCmmcTrapPowerSupplyId, nbsCmmcPortMedium=nbsCmmcPortMedium, nbsCmmcSlotEntry=nbsCmmcSlotEntry, nbsCmmcPortFCSendAdmin=nbsCmmcPortFCSendAdmin, nbsCmmcPortDescription=nbsCmmcPortDescription, nbsCmmcTrapSlotTempTooHigh=nbsCmmcTrapSlotTempTooHigh, nbsCmmcChassisFan8Status=nbsCmmcChassisFan8Status, nbsCmmcSysNvramEntry=nbsCmmcSysNvramEntry, nbsCmmcPortRedundantTxMode=nbsCmmcPortRedundantTxMode, nbsCmmcSlotFaceChassisIndex=nbsCmmcSlotFaceChassisIndex, nbsCmmcSysDefaultGateway=nbsCmmcSysDefaultGateway, nbsCmmcPortTxActivity=nbsCmmcPortTxActivity, nbsCmmcSlotModel=nbsCmmcSlotModel, nbsCmmcSysNVAreaVersion=nbsCmmcSysNVAreaVersion, nbsCmmcTrapPortRemoved=nbsCmmcTrapPortRemoved, nbsCmmcSysAuditLogIndex=nbsCmmcSysAuditLogIndex, nbsCmmcSysLoaderFileId=nbsCmmcSysLoaderFileId, nbsCmmcSysCurrentDateTime=nbsCmmcSysCurrentDateTime, nbsCmmcSysObIpAddr=nbsCmmcSysObIpAddr, nbsCmmcChassisLoader=nbsCmmcChassisLoader, nbsCmmcSlotOperationType=nbsCmmcSlotOperationType, nbsCmmcSysSerialTerminalType=nbsCmmcSysSerialTerminalType, nbsCmmcSysAuditLogString=nbsCmmcSysAuditLogString, nbsCmmcSysLmp=nbsCmmcSysLmp, nbsCmmcSysObNetMask=nbsCmmcSysObNetMask, nbsCmmcTraps0=nbsCmmcTraps0, nbsCmmcTftpSessFileName=nbsCmmcTftpSessFileName, nbsCmmcSysPingAddr=nbsCmmcSysPingAddr, nbsCmmcSysProtoTable=nbsCmmcSysProtoTable, nbsCmmcChassisCount=nbsCmmcChassisCount, nbsCmmcSysLoaderStatus=nbsCmmcSysLoaderStatus, nbsCmmcSysTelnetTable=nbsCmmcSysTelnetTable, nbsCmmcSysEnableModuleTraps=nbsCmmcSysEnableModuleTraps, nbsCmmcPortRxActivity=nbsCmmcPortRxActivity, nbsCmmcSlotFirmwareCaps=nbsCmmcSlotFirmwareCaps, nbsCmmcSysFirmwareURL=nbsCmmcSysFirmwareURL, nbsCmmcLedDescription=nbsCmmcLedDescription, nbsCmmcChassisEntry=nbsCmmcChassisEntry, nbsCmmcSysNvramLogMessageEntry=nbsCmmcSysNvramLogMessageEntry, nbsCmmcChassisLoopbackTimeout=nbsCmmcChassisLoopbackTimeout, nbsCmmcTftpSessAction=nbsCmmcTftpSessAction, nbsCmmcPortLinked=nbsCmmcPortLinked, nbsCmmcChassisNumberOfSlots=nbsCmmcChassisNumberOfSlots, nbsCmmcPortBiasAmps=nbsCmmcPortBiasAmps, nbsCmmcSysRunningLogMessageTotal=nbsCmmcSysRunningLogMessageTotal, nbsCmmcTrapDeviceOnline=nbsCmmcTrapDeviceOnline, nbsCmmcSysCountersState=nbsCmmcSysCountersState, nbsCmmcSysPingNumber=nbsCmmcSysPingNumber, nbsCmmcPortDuplex=nbsCmmcPortDuplex, nbsCmmcPortCrossConnect=nbsCmmcPortCrossConnect, nbsCmmcSysAuditLogDateTime=nbsCmmcSysAuditLogDateTime, nbsCmmcPortLoopback=nbsCmmcPortLoopback, nbsCmmcPrvNetMask=nbsCmmcPrvNetMask, nbsCmmcChassisPS3Status=nbsCmmcChassisPS3Status, nbsCmmcTrapSlotModuleOut=nbsCmmcTrapSlotModuleOut, nbsCmmcChassisFan1Status=nbsCmmcChassisFan1Status, nbsCmmcTrapPortLoopbackOn=nbsCmmcTrapPortLoopbackOn, nbsCmmcChassisFan7Status=nbsCmmcChassisFan7Status, nbsCmmcChassisCrossConnect=nbsCmmcChassisCrossConnect, nbsCmmcSysTimeZoneName=nbsCmmcSysTimeZoneName, nbsCmmcSysDiscoveryHostMACAddress=nbsCmmcSysDiscoveryHostMACAddress, nbsCmmcTrapPortLinkDown=nbsCmmcTrapPortLinkDown, nbsCmmcChassisTemperature=nbsCmmcChassisTemperature, nbsCmmcSysNvramLogMessageTotal=nbsCmmcSysNvramLogMessageTotal, nbsCmmcPortCableLen=nbsCmmcPortCableLen, nbsCmmcLedTable=nbsCmmcLedTable, nbsCmmcChassisObjectId=nbsCmmcChassisObjectId, nbsCmmcTftpSessHostIp=nbsCmmcTftpSessHostIp, nbsCmmcSysBcastAddr=nbsCmmcSysBcastAddr, nbsCmmcSysRunningLogMessageSeverity=nbsCmmcSysRunningLogMessageSeverity, nbsCmmcSysPingOwner=nbsCmmcSysPingOwner, nbsCmmcChassisFan2Status=nbsCmmcChassisFan2Status, nbsCmmcSmtpRcvrEntry=nbsCmmcSmtpRcvrEntry, nbsCmmcChassisResetAllModules=nbsCmmcChassisResetAllModules)
