#
# PySNMP MIB module ENDRUNTECHNOLOGIES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENDRUNTECHNOLOGIES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:48:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, IpAddress, Counter64, MibIdentifier, enterprises, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, TimeTicks, Bits, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "IpAddress", "Counter64", "MibIdentifier", "enterprises", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "TimeTicks", "Bits", "NotificationType", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
endRunTechnologiesMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 13827))
endRunTechnologies = ModuleIdentity((1, 3, 6, 1, 4, 1, 13827, 0))
if mibBuilder.loadTexts: endRunTechnologies.setLastUpdated('0208190000Z')
if mibBuilder.loadTexts: endRunTechnologies.setOrganization('EndRun Technologies LLC')
praecisCntp = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 1))
cntp = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 1, 0))
cntptrap = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 1, 0, 0))
cdma = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 1, 1))
cdmatrap = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 1, 1, 0))
cntpTrapLeapIndBitsChange = NotificationType((1, 3, 6, 1, 4, 1, 13827, 1, 0, 0, 1)).setObjects(("ENDRUNTECHNOLOGIES-MIB", "cntpLeapIndBits"))
if mibBuilder.loadTexts: cntpTrapLeapIndBitsChange.setStatus('current')
cntpTrapStratumChange = NotificationType((1, 3, 6, 1, 4, 1, 13827, 1, 0, 0, 2)).setObjects(("ENDRUNTECHNOLOGIES-MIB", "cntpStratum"))
if mibBuilder.loadTexts: cntpTrapStratumChange.setStatus('current')
cntpRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpRxPkts.setStatus('current')
cntpTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpTxPkts.setStatus('current')
cntpIgnoredPkts = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpIgnoredPkts.setStatus('current')
cntpDroppedPkts = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpDroppedPkts.setStatus('current')
cntpAuthFail = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpAuthFail.setStatus('current')
cntpTimeFigureOfMerit = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 7, 8, 9))).clone(namedValues=NamedValues(("lessthan100us", 6), ("lessthan1ms", 7), ("lessthan10ms", 8), ("greaterthan10ms", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpTimeFigureOfMerit.setStatus('current')
cntpLeapIndBits = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noFaultorLeap", 0), ("leapInsWarning", 1), ("leapDelWarning", 2), ("unSynchronized", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpLeapIndBits.setStatus('current')
cntpSyncSource = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpSyncSource.setStatus('current')
cntpOffsetToCDMAReference = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpOffsetToCDMAReference.setStatus('current')
cntpStratum = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 11, 16))).clone(namedValues=NamedValues(("cntpStratumOne", 1), ("cntpStratumFlywheeling", 11), ("cntpStratumUnsync", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpStratum.setStatus('current')
cntpVersion = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 0, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cntpVersion.setStatus('current')
cdmaTrapFaultStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 13827, 1, 1, 0, 1)).setObjects(("ENDRUNTECHNOLOGIES-MIB", "cdmaFaultStatus"))
if mibBuilder.loadTexts: cdmaTrapFaultStatusChange.setStatus('current')
cdmaFaultStatus = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 1), Bits().clone(namedValues=NamedValues(("cdmaNotUsed", 0), ("cdmaNTPNotPolling", 1), ("cdmaLOFailure", 2), ("cdmaLOPLLFlt", 3), ("cdmaFLASHWriteFlt", 4), ("cdmaFPGACfgFlt", 5), ("cdmaNoSignalTimeout", 6), ("cdmaDACNearLimit", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaFaultStatus.setStatus('current')
cdmaTimeFigureOfMerit = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 7, 8, 9))).clone(namedValues=NamedValues(("lessthan100us", 6), ("lessthan1ms", 7), ("lessthan10ms", 8), ("greaterthan10ms", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaTimeFigureOfMerit.setStatus('current')
cdmaSigProcState = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 8))).clone(namedValues=NamedValues(("cdmaAcquiring", 0), ("cdmaDetected", 1), ("cdmaCodeLocking", 2), ("cdmaCarrierLocking", 4), ("cdmaLocked", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaSigProcState.setStatus('current')
cdmaChannel = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("priAbandclass0subclass0", 0), ("priBbandclass0subclass0", 1), ("secAbandclass0subclass0", 2), ("secBbandclass0subclass0", 3), ("priAbandclass0subclass1", 4), ("priBbandclass0subclass1", 5), ("secAbandclass0subclass1", 6), ("secBbandclass0subclass1", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaChannel.setStatus('current')
cdmaPNO = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaPNO.setStatus('current')
cdmaAGC = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaAGC.setStatus('current')
cdmaVCDAC = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaVCDAC.setStatus('current')
cdmaCarrierToNoiseRatio = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaCarrierToNoiseRatio.setStatus('current')
cdmaFrameErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaFrameErrorRate.setStatus('current')
cdmaLeapMode = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaLeapMode.setStatus('current')
cdmaCurrentLeapSeconds = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaCurrentLeapSeconds.setStatus('current')
cdmaFutureLeapSeconds = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaFutureLeapSeconds.setStatus('current')
cdmaVersion = MibScalar((1, 3, 6, 1, 4, 1, 13827, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmaVersion.setStatus('current')
praecisGntp = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 2))
gntp = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 2, 0))
gntptrap = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 2, 0, 0))
gps = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 2, 1))
gpstrap = MibIdentifier((1, 3, 6, 1, 4, 1, 13827, 2, 1, 0))
gntpTrapLeapIndBitsChange = NotificationType((1, 3, 6, 1, 4, 1, 13827, 2, 0, 0, 1)).setObjects(("ENDRUNTECHNOLOGIES-MIB", "gntpLeapIndBits"))
if mibBuilder.loadTexts: gntpTrapLeapIndBitsChange.setStatus('current')
gntpTrapStratumChange = NotificationType((1, 3, 6, 1, 4, 1, 13827, 2, 0, 0, 2)).setObjects(("ENDRUNTECHNOLOGIES-MIB", "gntpStratum"))
if mibBuilder.loadTexts: gntpTrapStratumChange.setStatus('current')
gntpRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpRxPkts.setStatus('current')
gntpTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpTxPkts.setStatus('current')
gntpIgnoredPkts = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpIgnoredPkts.setStatus('current')
gntpDroppedPkts = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpDroppedPkts.setStatus('current')
gntpAuthFail = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpAuthFail.setStatus('current')
gntpTimeFigureOfMerit = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("lessthan1us", 4), ("lessthan10us", 5), ("lessthan100us", 6), ("lessthan1ms", 7), ("lessthan10ms", 8), ("greaterthan10ms", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpTimeFigureOfMerit.setStatus('current')
gntpLeapIndBits = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noFaultorLeap", 0), ("leapInsWarning", 1), ("leapDelWarning", 2), ("unSynchronized", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpLeapIndBits.setStatus('current')
gntpSyncSource = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpSyncSource.setStatus('current')
gntpOffsetToGPSReference = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpOffsetToGPSReference.setStatus('current')
gntpStratum = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 11, 16))).clone(namedValues=NamedValues(("gntpStratumOne", 1), ("gntpStratumFlywheeling", 11), ("gntpStratumUnsync", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpStratum.setStatus('current')
gntpVersion = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 0, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gntpVersion.setStatus('current')
gpsTrapFaultStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 13827, 2, 1, 0, 1)).setObjects(("ENDRUNTECHNOLOGIES-MIB", "gpsFaultStatus"))
if mibBuilder.loadTexts: gpsTrapFaultStatusChange.setStatus('current')
gpsFaultStatus = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 1), Bits().clone(namedValues=NamedValues(("gpsAntennaFlt", 0), ("gpsNTPNotPolling", 1), ("gpsnotused0", 2), ("gpsnotused1", 3), ("gpsFLASHWriteFlt", 4), ("gpsFPGACfgFlt", 5), ("gpsNoSignalTimeout", 6), ("gpsDACNearLimit", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsFaultStatus.setStatus('current')
gpsTimeFigureOfMerit = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("lessthan1us", 4), ("lessthan10us", 5), ("lessthan100us", 6), ("lessthan1ms", 7), ("lessthan10ms", 8), ("greaterthan10ms", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsTimeFigureOfMerit.setStatus('current')
gpsSigProcState = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("gpsAcquiring", 0), ("gpsLocking", 1), ("gpsLocked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSigProcState.setStatus('current')
gpsNumTrackSats = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsNumTrackSats.setStatus('current')
gpsVCDAC = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsVCDAC.setStatus('current')
gpsAvgCarrierToNoiseRatiodB = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsAvgCarrierToNoiseRatiodB.setStatus('current')
gpsReferencePosition = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsReferencePosition.setStatus('current')
gpsRefPosSource = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsRefPosSource.setStatus('current')
gpsCurrentLeapSeconds = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsCurrentLeapSeconds.setStatus('current')
gpsFutureLeapSeconds = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsFutureLeapSeconds.setStatus('current')
gpsVersion = MibScalar((1, 3, 6, 1, 4, 1, 13827, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsVersion.setStatus('current')
mibBuilder.exportSymbols("ENDRUNTECHNOLOGIES-MIB", cntpTimeFigureOfMerit=cntpTimeFigureOfMerit, cntpStratum=cntpStratum, praecisCntp=praecisCntp, gntpDroppedPkts=gntpDroppedPkts, gpsSigProcState=gpsSigProcState, cntpOffsetToCDMAReference=cntpOffsetToCDMAReference, cdmaPNO=cdmaPNO, cntpRxPkts=cntpRxPkts, gntpIgnoredPkts=gntpIgnoredPkts, gntpTimeFigureOfMerit=gntpTimeFigureOfMerit, cdmaTrapFaultStatusChange=cdmaTrapFaultStatusChange, cdmaCurrentLeapSeconds=cdmaCurrentLeapSeconds, gntpLeapIndBits=gntpLeapIndBits, cdma=cdma, PYSNMP_MODULE_ID=endRunTechnologies, cdmaChannel=cdmaChannel, gntpRxPkts=gntpRxPkts, gntpTxPkts=gntpTxPkts, gpsReferencePosition=gpsReferencePosition, gpsVCDAC=gpsVCDAC, cntp=cntp, cdmaSigProcState=cdmaSigProcState, praecisGntp=praecisGntp, gpsNumTrackSats=gpsNumTrackSats, cdmaFutureLeapSeconds=cdmaFutureLeapSeconds, gntpStratum=gntpStratum, gntpTrapLeapIndBitsChange=gntpTrapLeapIndBitsChange, gntpOffsetToGPSReference=gntpOffsetToGPSReference, gpsTimeFigureOfMerit=gpsTimeFigureOfMerit, cntpVersion=cntpVersion, endRunTechnologiesMIB=endRunTechnologiesMIB, cdmaLeapMode=cdmaLeapMode, gpsCurrentLeapSeconds=gpsCurrentLeapSeconds, cdmaFaultStatus=cdmaFaultStatus, endRunTechnologies=endRunTechnologies, cntpAuthFail=cntpAuthFail, gpsTrapFaultStatusChange=gpsTrapFaultStatusChange, gpsFaultStatus=gpsFaultStatus, cdmaTimeFigureOfMerit=cdmaTimeFigureOfMerit, cntpTrapLeapIndBitsChange=cntpTrapLeapIndBitsChange, cntpDroppedPkts=cntpDroppedPkts, gntpAuthFail=gntpAuthFail, gpsAvgCarrierToNoiseRatiodB=gpsAvgCarrierToNoiseRatiodB, gntpTrapStratumChange=gntpTrapStratumChange, cntpSyncSource=cntpSyncSource, gps=gps, cdmaAGC=cdmaAGC, cdmatrap=cdmatrap, gntpVersion=gntpVersion, cdmaVersion=cdmaVersion, gntptrap=gntptrap, gpstrap=gpstrap, cntpLeapIndBits=cntpLeapIndBits, gpsRefPosSource=gpsRefPosSource, cdmaFrameErrorRate=cdmaFrameErrorRate, cntpTxPkts=cntpTxPkts, cntpIgnoredPkts=cntpIgnoredPkts, gntpSyncSource=gntpSyncSource, gpsFutureLeapSeconds=gpsFutureLeapSeconds, cdmaVCDAC=cdmaVCDAC, cntpTrapStratumChange=cntpTrapStratumChange, gntp=gntp, cntptrap=cntptrap, cdmaCarrierToNoiseRatio=cdmaCarrierToNoiseRatio, gpsVersion=gpsVersion)
