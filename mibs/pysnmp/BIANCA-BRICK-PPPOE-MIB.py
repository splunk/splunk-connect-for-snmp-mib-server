#
# PySNMP MIB module BIANCA-BRICK-PPPOE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-PPPOE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Unsigned32, Gauge32, IpAddress, Bits, iso, NotificationType, MibIdentifier, TimeTicks, Counter32, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "Gauge32", "IpAddress", "Bits", "iso", "NotificationType", "MibIdentifier", "TimeTicks", "Counter32", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
DisplayString, TextualConvention, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "PhysAddress")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
pppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 24))
pppoeCallTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 24, 1), )
if mibBuilder.loadTexts: pppoeCallTable.setStatus('mandatory')
pppoeCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1), ).setIndexNames((0, "BIANCA-BRICK-PPPOE-MIB", "pppoeCallId"))
if mibBuilder.loadTexts: pppoeCallEntry.setStatus('mandatory')
pppoeCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallId.setStatus('mandatory')
pppoeCallDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallDirection.setStatus('mandatory')
pppoeCallAge = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallAge.setStatus('mandatory')
pppoeCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("wait-pado", 2), ("wait-padr", 3), ("wait-pads", 4), ("established", 5), ("terminated", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeCallState.setStatus('mandatory')
pppoeCallRemotePhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 5), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallRemotePhysAddress.setStatus('mandatory')
pppoeCallLocalPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 6), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallLocalPhysAddress.setStatus('mandatory')
pppoeCallAcName = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallAcName.setStatus('mandatory')
pppoeCallService = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallService.setStatus('mandatory')
pppoeCallReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallReceivedPackets.setStatus('mandatory')
pppoeCallReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallReceivedOctets.setStatus('mandatory')
pppoeCallReceivedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallReceivedErrors.setStatus('mandatory')
pppoeCallTransmitPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallTransmitPackets.setStatus('mandatory')
pppoeCallTransmitOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallTransmitOctets.setStatus('mandatory')
pppoeCallTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallTransmitErrors.setStatus('mandatory')
pppoeCallInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCallInfo.setStatus('mandatory')
pppoeCreditsTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 24, 2), )
if mibBuilder.loadTexts: pppoeCreditsTable.setStatus('mandatory')
pppoeCreditsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1), ).setIndexNames((0, "BIANCA-BRICK-PPPOE-MIB", "pppoeCreditsService"))
if mibBuilder.loadTexts: pppoeCreditsEntry.setStatus('mandatory')
pppoeCreditsService = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeCreditsService.setStatus('mandatory')
pppoeCreditsSurveillance = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeCreditsSurveillance.setStatus('mandatory')
pppoeCreditsMeasuretime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeCreditsMeasuretime.setStatus('mandatory')
pppoeCreditsMaxInCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeCreditsMaxInCon.setStatus('mandatory')
pppoeCreditsMaxOutCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeCreditsMaxOutCon.setStatus('mandatory')
pppoeCreditsMaxInDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeCreditsMaxInDuration.setStatus('mandatory')
pppoeCreditsMaxOutDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeCreditsMaxOutDuration.setStatus('mandatory')
pppoeCreditsTimeleft = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeCreditsTimeleft.setStatus('mandatory')
pppoeCreditsCurrentInCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCreditsCurrentInCon.setStatus('mandatory')
pppoeCreditsCurrentOutCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCreditsCurrentOutCon.setStatus('mandatory')
pppoeCreditsTotalInCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCreditsTotalInCon.setStatus('mandatory')
pppoeCreditsTotalOutCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCreditsTotalOutCon.setStatus('mandatory')
pppoeCreditsTotalInDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCreditsTotalInDuration.setStatus('mandatory')
pppoeCreditsTotalOutDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCreditsTotalOutDuration.setStatus('mandatory')
pppoeCreditsCurrentAccount = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 24, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeCreditsCurrentAccount.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-PPPOE-MIB", pppoeCallLocalPhysAddress=pppoeCallLocalPhysAddress, private=private, pppoeCreditsCurrentInCon=pppoeCreditsCurrentInCon, bibo=bibo, pppoeCallReceivedOctets=pppoeCallReceivedOctets, pppoeCallTransmitErrors=pppoeCallTransmitErrors, pppoeCreditsMaxOutDuration=pppoeCreditsMaxOutDuration, bintec=bintec, org=org, pppoeCreditsService=pppoeCreditsService, pppoe=pppoe, pppoeCallDirection=pppoeCallDirection, pppoeCallReceivedPackets=pppoeCallReceivedPackets, dod=dod, pppoeCallTable=pppoeCallTable, pppoeCreditsMeasuretime=pppoeCreditsMeasuretime, pppoeCreditsEntry=pppoeCreditsEntry, pppoeCallEntry=pppoeCallEntry, pppoeCreditsTotalOutCon=pppoeCreditsTotalOutCon, pppoeCreditsTotalOutDuration=pppoeCreditsTotalOutDuration, pppoeCallRemotePhysAddress=pppoeCallRemotePhysAddress, pppoeCreditsSurveillance=pppoeCreditsSurveillance, pppoeCreditsCurrentAccount=pppoeCreditsCurrentAccount, pppoeCallState=pppoeCallState, pppoeCreditsMaxInCon=pppoeCreditsMaxInCon, pppoeCreditsMaxInDuration=pppoeCreditsMaxInDuration, pppoeCallAcName=pppoeCallAcName, pppoeCreditsCurrentOutCon=pppoeCreditsCurrentOutCon, pppoeCallInfo=pppoeCallInfo, pppoeCallService=pppoeCallService, pppoeCreditsMaxOutCon=pppoeCreditsMaxOutCon, pppoeCallReceivedErrors=pppoeCallReceivedErrors, pppoeCreditsTotalInDuration=pppoeCreditsTotalInDuration, pppoeCreditsTotalInCon=pppoeCreditsTotalInCon, pppoeCallId=pppoeCallId, pppoeCreditsTable=pppoeCreditsTable, pppoeCallTransmitOctets=pppoeCallTransmitOctets, pppoeCreditsTimeleft=pppoeCreditsTimeleft, enterprises=enterprises, pppoeCallTransmitPackets=pppoeCallTransmitPackets, pppoeCallAge=pppoeCallAge, internet=internet)
