#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-SnaMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-SnaMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
DisplayString, Counter32, Gauge32, Integer32, RowStatus, RowPointer, Unsigned32, StorageType = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "DisplayString", "Counter32", "Gauge32", "Integer32", "RowStatus", "RowPointer", "Unsigned32", "StorageType")
DashedHexString, NonReplicated, HexString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "DashedHexString", "NonReplicated", "HexString")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
mscVrIndex, mscVr, mscVrPp, mscVrPpIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex", "mscVr", "mscVrPp", "mscVrPpIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, Integer32, IpAddress, NotificationType, ModuleIdentity, Unsigned32, MibIdentifier, iso, ObjectIdentity, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "Integer32", "IpAddress", "NotificationType", "ModuleIdentity", "Unsigned32", "MibIdentifier", "iso", "ObjectIdentity", "TimeTicks", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snaMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56))
mscVrPpSnaPort = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15))
mscVrPpSnaPortRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 1), )
if mibBuilder.loadTexts: mscVrPpSnaPortRowStatusTable.setStatus('mandatory')
mscVrPpSnaPortRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortIndex"))
if mibBuilder.loadTexts: mscVrPpSnaPortRowStatusEntry.setStatus('mandatory')
mscVrPpSnaPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSnaPortRowStatus.setStatus('mandatory')
mscVrPpSnaPortComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortComponentName.setStatus('mandatory')
mscVrPpSnaPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortStorageType.setStatus('mandatory')
mscVrPpSnaPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpSnaPortIndex.setStatus('mandatory')
mscVrPpSnaPortAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 100), )
if mibBuilder.loadTexts: mscVrPpSnaPortAdminControlTable.setStatus('mandatory')
mscVrPpSnaPortAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortIndex"))
if mibBuilder.loadTexts: mscVrPpSnaPortAdminControlEntry.setStatus('mandatory')
mscVrPpSnaPortSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 100, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSnaPortSnmpAdminStatus.setStatus('mandatory')
mscVrPpSnaPortProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 101), )
if mibBuilder.loadTexts: mscVrPpSnaPortProvTable.setStatus('mandatory')
mscVrPpSnaPortProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortIndex"))
if mibBuilder.loadTexts: mscVrPpSnaPortProvEntry.setStatus('mandatory')
mscVrPpSnaPortVirtualSegmentLFSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 101, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(516, 516), ValueRangeConstraint(635, 635), ValueRangeConstraint(754, 754), ValueRangeConstraint(873, 873), ValueRangeConstraint(993, 993), ValueRangeConstraint(1112, 1112), ValueRangeConstraint(1231, 1231), ValueRangeConstraint(1350, 1350), ValueRangeConstraint(1470, 1470), ValueRangeConstraint(1542, 1542), ValueRangeConstraint(1615, 1615), ValueRangeConstraint(1688, 1688), ValueRangeConstraint(1761, 1761), ValueRangeConstraint(1833, 1833), ValueRangeConstraint(1906, 1906), ValueRangeConstraint(1979, 1979), ValueRangeConstraint(2052, 2052), ValueRangeConstraint(2345, 2345), ValueRangeConstraint(5331, 5331), ValueRangeConstraint(5798, 5798), ValueRangeConstraint(6264, 6264), ValueRangeConstraint(6730, 6730), ValueRangeConstraint(7197, 7197), ValueRangeConstraint(7663, 7663), ValueRangeConstraint(8130, 8130), ValueRangeConstraint(8539, 8539), ValueRangeConstraint(8949, 8949), ValueRangeConstraint(9358, 9358), ValueRangeConstraint(9768, 9768), ValueRangeConstraint(10178, 10178), ValueRangeConstraint(10587, 10587), ValueRangeConstraint(10997, 10997), ValueRangeConstraint(11407, 11407), ValueRangeConstraint(12199, 12199), ValueRangeConstraint(12992, 12992), ValueRangeConstraint(13785, 13785), ValueRangeConstraint(14578, 14578), ValueRangeConstraint(15370, 15370), ValueRangeConstraint(16163, 16163), ValueRangeConstraint(16956, 16956), ValueRangeConstraint(17749, 17749), ValueRangeConstraint(20730, 20730), ValueRangeConstraint(23711, 23711), ValueRangeConstraint(26693, 26693), ValueRangeConstraint(29674, 29674), ValueRangeConstraint(32655, 32655), ValueRangeConstraint(35637, 35637), ValueRangeConstraint(38618, 38618), ValueRangeConstraint(41600, 41600), ValueRangeConstraint(44591, 44591), ValueRangeConstraint(47583, 47583), ValueRangeConstraint(50575, 50575), ValueRangeConstraint(53567, 53567), ValueRangeConstraint(56559, 56559), ValueRangeConstraint(59551, 59551), ValueRangeConstraint(65535, 65535), )).clone(2345)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpSnaPortVirtualSegmentLFSize.setStatus('mandatory')
mscVrPpSnaPortStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 103), )
if mibBuilder.loadTexts: mscVrPpSnaPortStateTable.setStatus('mandatory')
mscVrPpSnaPortStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 103, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortIndex"))
if mibBuilder.loadTexts: mscVrPpSnaPortStateEntry.setStatus('mandatory')
mscVrPpSnaPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 103, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortAdminState.setStatus('mandatory')
mscVrPpSnaPortOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 103, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortOperationalState.setStatus('mandatory')
mscVrPpSnaPortUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 103, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortUsageState.setStatus('mandatory')
mscVrPpSnaPortOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 104), )
if mibBuilder.loadTexts: mscVrPpSnaPortOperStatusTable.setStatus('mandatory')
mscVrPpSnaPortOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 104, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortIndex"))
if mibBuilder.loadTexts: mscVrPpSnaPortOperStatusEntry.setStatus('mandatory')
mscVrPpSnaPortSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 104, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortSnmpOperStatus.setStatus('mandatory')
mscVrPpSnaPortCircuit = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2))
mscVrPpSnaPortCircuitRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 1), )
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitRowStatusTable.setStatus('mandatory')
mscVrPpSnaPortCircuitRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortCircuitS1MacIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortCircuitS1SapIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortCircuitS2MacIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortCircuitS2SapIndex"))
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitRowStatusEntry.setStatus('mandatory')
mscVrPpSnaPortCircuitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitRowStatus.setStatus('mandatory')
mscVrPpSnaPortCircuitComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitComponentName.setStatus('mandatory')
mscVrPpSnaPortCircuitStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitStorageType.setStatus('mandatory')
mscVrPpSnaPortCircuitS1MacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitS1MacIndex.setStatus('mandatory')
mscVrPpSnaPortCircuitS1SapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254)))
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitS1SapIndex.setStatus('mandatory')
mscVrPpSnaPortCircuitS2MacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 1, 1, 12), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitS2MacIndex.setStatus('mandatory')
mscVrPpSnaPortCircuitS2SapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254)))
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitS2SapIndex.setStatus('mandatory')
mscVrPpSnaPortCircuitOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 100), )
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitOperTable.setStatus('mandatory')
mscVrPpSnaPortCircuitOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortCircuitS1MacIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortCircuitS1SapIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortCircuitS2MacIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrPpSnaPortCircuitS2SapIndex"))
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitOperEntry.setStatus('mandatory')
mscVrPpSnaPortCircuitS1DlcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 100, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("na", 2), ("llc", 3), ("sdlc", 4), ("qllc", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitS1DlcType.setStatus('mandatory')
mscVrPpSnaPortCircuitS1RouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 100, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitS1RouteInfo.setStatus('mandatory')
mscVrPpSnaPortCircuitS2Location = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 100, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("internal", 2), ("remote", 3), ("local", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitS2Location.setStatus('mandatory')
mscVrPpSnaPortCircuitOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 100, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("s2", 0), ("s1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitOrigin.setStatus('mandatory')
mscVrPpSnaPortCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 100, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("disconnected", 1), ("circuitStart", 2), ("resolvePending", 3), ("circuitPending", 4), ("circuitEstablished", 5), ("connectPending", 6), ("contactPending", 7), ("connected", 8), ("disconnectPending", 9), ("haltPending", 10), ("haltPendingNoack", 11), ("circuitRestart", 12), ("restartPending", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitState.setStatus('mandatory')
mscVrPpSnaPortCircuitPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 100, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unsupported", 1), ("low", 2), ("medium", 3), ("high", 4), ("highest", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitPriority.setStatus('mandatory')
mscVrPpSnaPortCircuitVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 15, 2, 100, 1, 26), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpSnaPortCircuitVcId.setStatus('mandatory')
mscVrSna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14))
mscVrSnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 1), )
if mibBuilder.loadTexts: mscVrSnaRowStatusTable.setStatus('mandatory')
mscVrSnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrSnaIndex"))
if mibBuilder.loadTexts: mscVrSnaRowStatusEntry.setStatus('mandatory')
mscVrSnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrSnaRowStatus.setStatus('mandatory')
mscVrSnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaComponentName.setStatus('mandatory')
mscVrSnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaStorageType.setStatus('mandatory')
mscVrSnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrSnaIndex.setStatus('mandatory')
mscVrSnaAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 100), )
if mibBuilder.loadTexts: mscVrSnaAdminControlTable.setStatus('mandatory')
mscVrSnaAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrSnaIndex"))
if mibBuilder.loadTexts: mscVrSnaAdminControlEntry.setStatus('mandatory')
mscVrSnaSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 100, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrSnaSnmpAdminStatus.setStatus('mandatory')
mscVrSnaStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 101), )
if mibBuilder.loadTexts: mscVrSnaStateTable.setStatus('mandatory')
mscVrSnaStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrSnaIndex"))
if mibBuilder.loadTexts: mscVrSnaStateEntry.setStatus('mandatory')
mscVrSnaAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 101, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaAdminState.setStatus('mandatory')
mscVrSnaOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 101, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaOperationalState.setStatus('mandatory')
mscVrSnaUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 101, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaUsageState.setStatus('mandatory')
mscVrSnaOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 102), )
if mibBuilder.loadTexts: mscVrSnaOperStatusTable.setStatus('mandatory')
mscVrSnaOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 102, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrSnaIndex"))
if mibBuilder.loadTexts: mscVrSnaOperStatusEntry.setStatus('mandatory')
mscVrSnaSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaSnmpOperStatus.setStatus('mandatory')
mscVrSnaOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 103), )
if mibBuilder.loadTexts: mscVrSnaOperTable.setStatus('mandatory')
mscVrSnaOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 103, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrSnaIndex"))
if mibBuilder.loadTexts: mscVrSnaOperEntry.setStatus('mandatory')
mscVrSnaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 103, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaVersion.setStatus('mandatory')
mscVrSnaCircStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 104), )
if mibBuilder.loadTexts: mscVrSnaCircStatsTable.setStatus('mandatory')
mscVrSnaCircStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 104, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrSnaIndex"))
if mibBuilder.loadTexts: mscVrSnaCircStatsEntry.setStatus('mandatory')
mscVrSnaActives = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 104, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4292967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaActives.setStatus('mandatory')
mscVrSnaCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 104, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaCreates.setStatus('mandatory')
mscVrSnaDirStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 105), )
if mibBuilder.loadTexts: mscVrSnaDirStatsTable.setStatus('mandatory')
mscVrSnaDirStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 105, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-SnaMIB", "mscVrSnaIndex"))
if mibBuilder.loadTexts: mscVrSnaDirStatsEntry.setStatus('mandatory')
mscVrSnaMacEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 105, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaMacEntries.setStatus('mandatory')
mscVrSnaMacCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 105, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaMacCacheHits.setStatus('mandatory')
mscVrSnaMacCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 14, 105, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrSnaMacCacheMisses.setStatus('mandatory')
snaGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 1))
snaGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 1, 1))
snaGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 1, 1, 3))
snaGroupCA02DevelopmentLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 1, 1, 3, 1))
snaGroupCA0214 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 1, 1, 3, 1, 14))
snaGroupCA0214A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 1, 1, 3, 1, 14, 1))
snaCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 3))
snaCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 3, 1))
snaCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 3, 1, 3))
snaCapabilitiesCA02DevelopmentLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 3, 1, 3, 1))
snaCapabilitiesCA0214 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 3, 1, 3, 1, 14))
snaCapabilitiesCA0214A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 56, 3, 1, 3, 1, 14, 1))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-SnaMIB", snaMIB=snaMIB, mscVrSnaRowStatusTable=mscVrSnaRowStatusTable, mscVrSnaAdminControlTable=mscVrSnaAdminControlTable, mscVrPpSnaPortCircuitS1RouteInfo=mscVrPpSnaPortCircuitS1RouteInfo, mscVrSna=mscVrSna, mscVrSnaMacEntries=mscVrSnaMacEntries, snaGroupCA0214A=snaGroupCA0214A, mscVrSnaMacCacheMisses=mscVrSnaMacCacheMisses, mscVrPpSnaPortStateTable=mscVrPpSnaPortStateTable, snaCapabilitiesCA0214A=snaCapabilitiesCA0214A, mscVrPpSnaPortCircuitS2Location=mscVrPpSnaPortCircuitS2Location, mscVrPpSnaPortStateEntry=mscVrPpSnaPortStateEntry, snaGroupCA0214=snaGroupCA0214, mscVrPpSnaPortRowStatus=mscVrPpSnaPortRowStatus, mscVrPpSnaPortCircuitS2SapIndex=mscVrPpSnaPortCircuitS2SapIndex, mscVrPpSnaPortCircuitRowStatus=mscVrPpSnaPortCircuitRowStatus, snaCapabilitiesCA02=snaCapabilitiesCA02, mscVrSnaSnmpOperStatus=mscVrSnaSnmpOperStatus, mscVrPpSnaPortCircuitVcId=mscVrPpSnaPortCircuitVcId, mscVrSnaOperStatusTable=mscVrSnaOperStatusTable, mscVrPpSnaPortCircuitRowStatusTable=mscVrPpSnaPortCircuitRowStatusTable, mscVrPpSnaPortCircuitState=mscVrPpSnaPortCircuitState, mscVrPpSnaPortCircuitOperTable=mscVrPpSnaPortCircuitOperTable, mscVrSnaStateEntry=mscVrSnaStateEntry, mscVrPpSnaPortCircuitS1SapIndex=mscVrPpSnaPortCircuitS1SapIndex, mscVrPpSnaPortAdminControlTable=mscVrPpSnaPortAdminControlTable, mscVrPpSnaPortCircuitComponentName=mscVrPpSnaPortCircuitComponentName, mscVrSnaOperStatusEntry=mscVrSnaOperStatusEntry, mscVrSnaComponentName=mscVrSnaComponentName, mscVrPpSnaPortCircuitS1MacIndex=mscVrPpSnaPortCircuitS1MacIndex, mscVrPpSnaPortSnmpOperStatus=mscVrPpSnaPortSnmpOperStatus, snaCapabilitiesCA0214=snaCapabilitiesCA0214, mscVrPpSnaPortStorageType=mscVrPpSnaPortStorageType, mscVrSnaOperEntry=mscVrSnaOperEntry, snaGroupCA02=snaGroupCA02, mscVrSnaAdminControlEntry=mscVrSnaAdminControlEntry, mscVrPpSnaPortAdminState=mscVrPpSnaPortAdminState, mscVrPpSnaPort=mscVrPpSnaPort, snaGroup=snaGroup, mscVrPpSnaPortCircuitS1DlcType=mscVrPpSnaPortCircuitS1DlcType, mscVrPpSnaPortCircuitS2MacIndex=mscVrPpSnaPortCircuitS2MacIndex, mscVrPpSnaPortSnmpAdminStatus=mscVrPpSnaPortSnmpAdminStatus, mscVrSnaOperTable=mscVrSnaOperTable, mscVrSnaRowStatus=mscVrSnaRowStatus, mscVrSnaIndex=mscVrSnaIndex, mscVrSnaRowStatusEntry=mscVrSnaRowStatusEntry, mscVrSnaCircStatsEntry=mscVrSnaCircStatsEntry, mscVrSnaVersion=mscVrSnaVersion, mscVrPpSnaPortCircuitStorageType=mscVrPpSnaPortCircuitStorageType, snaGroupCA=snaGroupCA, mscVrSnaActives=mscVrSnaActives, mscVrSnaStorageType=mscVrSnaStorageType, mscVrSnaAdminState=mscVrSnaAdminState, mscVrPpSnaPortVirtualSegmentLFSize=mscVrPpSnaPortVirtualSegmentLFSize, mscVrPpSnaPortProvEntry=mscVrPpSnaPortProvEntry, snaCapabilities=snaCapabilities, mscVrPpSnaPortCircuitPriority=mscVrPpSnaPortCircuitPriority, mscVrPpSnaPortRowStatusTable=mscVrPpSnaPortRowStatusTable, mscVrPpSnaPortCircuitOrigin=mscVrPpSnaPortCircuitOrigin, mscVrSnaMacCacheHits=mscVrSnaMacCacheHits, mscVrPpSnaPortOperStatusTable=mscVrPpSnaPortOperStatusTable, mscVrPpSnaPortOperationalState=mscVrPpSnaPortOperationalState, mscVrPpSnaPortProvTable=mscVrPpSnaPortProvTable, mscVrPpSnaPortUsageState=mscVrPpSnaPortUsageState, mscVrPpSnaPortRowStatusEntry=mscVrPpSnaPortRowStatusEntry, mscVrPpSnaPortCircuitOperEntry=mscVrPpSnaPortCircuitOperEntry, mscVrPpSnaPortComponentName=mscVrPpSnaPortComponentName, mscVrPpSnaPortIndex=mscVrPpSnaPortIndex, mscVrSnaSnmpAdminStatus=mscVrSnaSnmpAdminStatus, mscVrPpSnaPortCircuit=mscVrPpSnaPortCircuit, mscVrSnaUsageState=mscVrSnaUsageState, mscVrSnaDirStatsEntry=mscVrSnaDirStatsEntry, snaCapabilitiesCA=snaCapabilitiesCA, mscVrSnaStateTable=mscVrSnaStateTable, mscVrSnaCircStatsTable=mscVrSnaCircStatsTable, mscVrPpSnaPortAdminControlEntry=mscVrPpSnaPortAdminControlEntry, mscVrPpSnaPortCircuitRowStatusEntry=mscVrPpSnaPortCircuitRowStatusEntry, mscVrSnaOperationalState=mscVrSnaOperationalState, mscVrPpSnaPortOperStatusEntry=mscVrPpSnaPortOperStatusEntry, snaGroupCA02DevelopmentLoad=snaGroupCA02DevelopmentLoad, snaCapabilitiesCA02DevelopmentLoad=snaCapabilitiesCA02DevelopmentLoad, mscVrSnaDirStatsTable=mscVrSnaDirStatsTable, mscVrSnaCreates=mscVrSnaCreates)
