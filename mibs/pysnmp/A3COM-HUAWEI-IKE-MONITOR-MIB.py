#
# PySNMP MIB module A3COM-HUAWEI-IKE-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-IKE-MONITOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:50:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
NotificationType, Unsigned32, MibIdentifier, ModuleIdentity, Integer32, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, ObjectIdentity, Gauge32, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "MibIdentifier", "ModuleIdentity", "Integer32", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "ObjectIdentity", "Gauge32", "Counter32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
h3cIKEMonitor = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30))
if mibBuilder.loadTexts: h3cIKEMonitor.setLastUpdated('200410260000Z')
if mibBuilder.loadTexts: h3cIKEMonitor.setOrganization('Huawei-3COM Technologies Co., Ltd.')
class H3cIKENegoMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 4, 32))
    namedValues = NamedValues(("mainMode", 2), ("aggressiveMode", 4), ("quickMode", 32))

class H3cIKEAuthMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 3))
    namedValues = NamedValues(("preSharedKey", 1), ("rsaSignatures", 3))

class H3cDiffHellmanGrp(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 5, 14))
    namedValues = NamedValues(("modp768", 1), ("modp1024", 2), ("modp1536", 5), ("modp2048", 14))

class H3cEncryptAlgo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("none", 0), ("desCbc", 1), ("ideaCbc", 2), ("blowfishCbc", 3), ("rc5R16B64Cbc", 4), ("tripleDesCbc", 5), ("castCbc", 6), ("aesCbc", 7), ("aesCbc128", 8), ("aesCbc192", 9), ("aesCbc256", 10))

class H3cAuthAlgo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("md5", 1), ("sha", 2))

class H3cSaProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("reserved", 0), ("isakmp", 1), ("ah", 2), ("esp", 3), ("ipcomp", 4))

class H3cTrapStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class H3cIKEIDType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("reserved", 0), ("ipv4Addr", 1), ("fqdn", 2), ("userFqdn", 3), ("ipv4AddrSubnet", 4), ("ipv6Addr", 5), ("ipv6AddrSubnet", 6), ("ipv4AddrRange", 7), ("ipv6AddrRange", 8), ("derAsn1Dn", 9), ("derAsn1Gn", 10), ("keyId", 11))

class H3cTrafficType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("ipv4Addr", 1), ("ipv4AddrSubnet", 4), ("ipv6Addr", 5), ("ipv6AddrSubnet", 6), ("ipv4AddrRange", 7), ("ipv6AddrRange", 8))

class H3cIKETunnelState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("timeout", 2))

h3cIKEObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1))
h3cIKETunnelTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1), )
if mibBuilder.loadTexts: h3cIKETunnelTable.setStatus('current')
h3cIKETunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunIndex"))
if mibBuilder.loadTexts: h3cIKETunnelEntry.setStatus('current')
h3cIKETunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cIKETunIndex.setStatus('current')
h3cIKETunLocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 2), H3cIKEIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunLocalType.setStatus('current')
h3cIKETunLocalValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunLocalValue1.setStatus('current')
h3cIKETunLocalValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunLocalValue2.setStatus('current')
h3cIKETunLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunLocalAddr.setStatus('current')
h3cIKETunRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 6), H3cIKEIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunRemoteType.setStatus('current')
h3cIKETunRemoteValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunRemoteValue1.setStatus('current')
h3cIKETunRemoteValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunRemoteValue2.setStatus('current')
h3cIKETunRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunRemoteAddr.setStatus('current')
h3cIKETunInitiator = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunInitiator.setStatus('current')
h3cIKETunNegoMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 11), H3cIKENegoMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunNegoMode.setStatus('current')
h3cIKETunDiffHellmanGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 12), H3cDiffHellmanGrp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunDiffHellmanGrp.setStatus('current')
h3cIKETunEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 13), H3cEncryptAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunEncryptAlgo.setStatus('current')
h3cIKETunHashAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 14), H3cAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunHashAlgo.setStatus('current')
h3cIKETunAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 15), H3cIKEAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunAuthMethod.setStatus('current')
h3cIKETunLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunLifeTime.setStatus('current')
h3cIKETunActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunActiveTime.setStatus('current')
h3cIKETunRemainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunRemainTime.setStatus('current')
h3cIKETunTotalRefreshes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunTotalRefreshes.setStatus('current')
h3cIKETunState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 20), H3cIKETunnelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunState.setStatus('current')
h3cIKETunDpdIntervalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 21), Integer32().clone(10)).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunDpdIntervalTime.setStatus('current')
h3cIKETunDpdTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 1, 1, 22), Integer32().clone(5)).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunDpdTimeOut.setStatus('current')
h3cIKETunnelStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2), )
if mibBuilder.loadTexts: h3cIKETunnelStatTable.setStatus('current')
h3cIKETunnelStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunIndex"))
if mibBuilder.loadTexts: h3cIKETunnelStatEntry.setStatus('current')
h3cIKETunInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunInOctets.setStatus('current')
h3cIKETunInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunInPkts.setStatus('current')
h3cIKETunInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunInDropPkts.setStatus('current')
h3cIKETunInP2Exchgs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunInP2Exchgs.setStatus('current')
h3cIKETunInP2ExchgRejets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunInP2ExchgRejets.setStatus('current')
h3cIKETunInP2SaDelRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunInP2SaDelRequests.setStatus('current')
h3cIKETunInP1SaDelRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunInP1SaDelRequests.setStatus('current')
h3cIKETunInNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunInNotifys.setStatus('current')
h3cIKETunOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunOutOctets.setStatus('current')
h3cIKETunOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunOutPkts.setStatus('current')
h3cIKETunOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunOutDropPkts.setStatus('current')
h3cIKETunOutP2Exchgs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunOutP2Exchgs.setStatus('current')
h3cIKETunOutP2ExchgRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunOutP2ExchgRejects.setStatus('current')
h3cIKETunOutP2SaDelRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunOutP2SaDelRequests.setStatus('current')
h3cIKETunOutP1SaDelRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunOutP1SaDelRequests.setStatus('current')
h3cIKETunOutNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKETunOutNotifys.setStatus('current')
h3cIKEGlobalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3))
h3cIKEGlobalActiveTunnels = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalActiveTunnels.setStatus('current')
h3cIKEGlobalInOctets = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInOctets.setStatus('current')
h3cIKEGlobalInPkts = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInPkts.setStatus('current')
h3cIKEGlobalInDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInDropPkts.setStatus('current')
h3cIKEGlobalInP2Exchgs = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInP2Exchgs.setStatus('current')
h3cIKEGlobalInP2ExchgRejects = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInP2ExchgRejects.setStatus('current')
h3cIKEGlobalInP2SaDelRequests = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInP2SaDelRequests.setStatus('current')
h3cIKEGlobalInNotifys = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInNotifys.setStatus('current')
h3cIKEGlobalOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalOutOctets.setStatus('current')
h3cIKEGlobalOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalOutPkts.setStatus('current')
h3cIKEGlobalOutDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalOutDropPkts.setStatus('current')
h3cIKEGlobalOutP2Exchgs = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalOutP2Exchgs.setStatus('current')
h3cIKEGlobalOutP2ExchgRejects = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalOutP2ExchgRejects.setStatus('current')
h3cIKEGlobalOutP2SaDelRequests = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalOutP2SaDelRequests.setStatus('current')
h3cIKEGlobalOutNotifys = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalOutNotifys.setStatus('current')
h3cIKEGlobalInitTunnels = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInitTunnels.setStatus('current')
h3cIKEGlobalInitTunnelFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInitTunnelFails.setStatus('current')
h3cIKEGlobalRespTunnels = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalRespTunnels.setStatus('current')
h3cIKEGlobalRespTunnelFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalRespTunnelFails.setStatus('current')
h3cIKEGlobalAuthFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalAuthFails.setStatus('current')
h3cIKEGlobalNoSaFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalNoSaFails.setStatus('current')
h3cIKEGlobalInvalidCookieFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInvalidCookieFails.setStatus('current')
h3cIKEGlobalAttrNotSuppFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalAttrNotSuppFails.setStatus('current')
h3cIKEGlobalNoProposalChosenFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalNoProposalChosenFails.setStatus('current')
h3cIKEGlobalUnsportExchTypeFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalUnsportExchTypeFails.setStatus('current')
h3cIKEGlobalInvalidIdFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInvalidIdFails.setStatus('current')
h3cIKEGlobalInvalidProFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInvalidProFails.setStatus('current')
h3cIKEGlobalCertTypeUnsuppFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalCertTypeUnsuppFails.setStatus('current')
h3cIKEGlobalInvalidCertAuthFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInvalidCertAuthFails.setStatus('current')
h3cIKEGlobalInvalidSignFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalInvalidSignFails.setStatus('current')
h3cIKEGlobalCertUnavailableFails = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 3, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIKEGlobalCertUnavailableFails.setStatus('current')
h3cIKETrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 4))
h3cIKEProposalNumber = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 4, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cIKEProposalNumber.setStatus('current')
h3cIKEProposalSize = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 4, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cIKEProposalSize.setStatus('current')
h3cIKEIdInformation = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 4, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cIKEIdInformation.setStatus('current')
h3cIKEProtocolNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 4, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cIKEProtocolNum.setStatus('current')
h3cIKECertInformation = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 4, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cIKECertInformation.setStatus('current')
h3cIKETrapCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5))
h3cIKETrapGlobalCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 1), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKETrapGlobalCntl.setStatus('current')
h3cIKETunnelStartTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 2), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKETunnelStartTrapCntl.setStatus('current')
h3cIKETunnelStopTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 3), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKETunnelStopTrapCntl.setStatus('current')
h3cIKENoSaTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 4), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKENoSaTrapCntl.setStatus('current')
h3cIKEEncryFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 5), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEEncryFailureTrapCntl.setStatus('current')
h3cIKEDecryFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 6), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEDecryFailureTrapCntl.setStatus('current')
h3cIKEInvalidProposalTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 7), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEInvalidProposalTrapCntl.setStatus('current')
h3cIKEAuthFailTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 8), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEAuthFailTrapCntl.setStatus('current')
h3cIKEInvalidCookieTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 9), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEInvalidCookieTrapCntl.setStatus('current')
h3cIKEInvalidSpiTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 10), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEInvalidSpiTrapCntl.setStatus('current')
h3cIKEAttrNotSuppTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 11), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEAttrNotSuppTrapCntl.setStatus('current')
h3cIKEUnsportExchTypeTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 12), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEUnsportExchTypeTrapCntl.setStatus('current')
h3cIKEInvalidIdTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 13), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEInvalidIdTrapCntl.setStatus('current')
h3cIKEInvalidProtocolTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 14), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEInvalidProtocolTrapCntl.setStatus('current')
h3cIKECertTypeUnsuppTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 15), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKECertTypeUnsuppTrapCntl.setStatus('current')
h3cIKEInvalidCertAuthTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 16), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEInvalidCertAuthTrapCntl.setStatus('current')
h3cIKEInvalidSignTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 17), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEInvalidSignTrapCntl.setStatus('current')
h3cIKECertUnavailableTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 18), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKECertUnavailableTrapCntl.setStatus('current')
h3cIKEProposalAddTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 19), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEProposalAddTrapCntl.setStatus('current')
h3cIKEProposalDelTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 5, 20), H3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cIKEProposalDelTrapCntl.setStatus('current')
h3cIKETrap = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6))
h3cIKENotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1))
h3cIKETunnelStart = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 1)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLifeTime"))
if mibBuilder.loadTexts: h3cIKETunnelStart.setStatus('current')
h3cIKETunnelStop = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 2)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunActiveTime"))
if mibBuilder.loadTexts: h3cIKETunnelStop.setStatus('current')
h3cIKENoSaFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 3)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"))
if mibBuilder.loadTexts: h3cIKENoSaFailure.setStatus('current')
h3cIKEEncryFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 4)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"))
if mibBuilder.loadTexts: h3cIKEEncryFailFailure.setStatus('current')
h3cIKEDecryFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 5)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"))
if mibBuilder.loadTexts: h3cIKEDecryFailFailure.setStatus('current')
h3cIKEInvalidProposalFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 6)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"))
if mibBuilder.loadTexts: h3cIKEInvalidProposalFailure.setStatus('current')
h3cIKEAuthFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 7)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"))
if mibBuilder.loadTexts: h3cIKEAuthFailFailure.setStatus('current')
h3cIKEInvalidCookieFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 8)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"))
if mibBuilder.loadTexts: h3cIKEInvalidCookieFailure.setStatus('current')
h3cIKEAttrNotSuppFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 9)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"))
if mibBuilder.loadTexts: h3cIKEAttrNotSuppFailure.setStatus('current')
h3cIKEUnsportExchTypeFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 10)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"))
if mibBuilder.loadTexts: h3cIKEUnsportExchTypeFailure.setStatus('current')
h3cIKEInvalidIdFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 11)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEIdInformation"))
if mibBuilder.loadTexts: h3cIKEInvalidIdFailure.setStatus('current')
h3cIKEInvalidProtocolFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 12)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProtocolNum"))
if mibBuilder.loadTexts: h3cIKEInvalidProtocolFailure.setStatus('current')
h3cIKECertTypeUnsuppFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 13)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKECertInformation"))
if mibBuilder.loadTexts: h3cIKECertTypeUnsuppFailure.setStatus('current')
h3cIKEInvalidCertAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 14)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKECertInformation"))
if mibBuilder.loadTexts: h3cIKEInvalidCertAuthFailure.setStatus('current')
h3cIKElInvalidSignFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 15)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKECertInformation"))
if mibBuilder.loadTexts: h3cIKElInvalidSignFailure.setStatus('current')
h3cIKECertUnavailableFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 16)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKECertInformation"))
if mibBuilder.loadTexts: h3cIKECertUnavailableFailure.setStatus('current')
h3cIKEProposalAdd = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 17)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalNumber"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalSize"))
if mibBuilder.loadTexts: h3cIKEProposalAdd.setStatus('current')
h3cIKEProposalDel = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 1, 6, 1, 18)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalNumber"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalSize"))
if mibBuilder.loadTexts: h3cIKEProposalDel.setStatus('current')
h3cIKEConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2))
h3cIKECompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2, 1))
h3cIKEGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2, 2))
h3cIKECompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2, 1, 1)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunnelTableGroup"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunnelStatTableGroup"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalStatsGroup"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETrapObjectGroup"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETrapCntlGroup"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cIKECompliance = h3cIKECompliance.setStatus('current')
h3cIKETunnelTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2, 2, 1)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalType"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalValue1"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalValue2"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLocalAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteType"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteValue1"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteValue2"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemoteAddr"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunInitiator"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunNegoMode"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunDiffHellmanGrp"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunEncryptAlgo"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunHashAlgo"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunAuthMethod"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunLifeTime"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunActiveTime"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunRemainTime"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunTotalRefreshes"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunState"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunDpdIntervalTime"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunDpdTimeOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cIKETunnelTableGroup = h3cIKETunnelTableGroup.setStatus('current')
h3cIKETunnelStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2, 2, 2)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunInOctets"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunInPkts"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunInDropPkts"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunInP2Exchgs"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunInP2ExchgRejets"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunInP2SaDelRequests"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunInP1SaDelRequests"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunInNotifys"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunOutOctets"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunOutPkts"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunOutDropPkts"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunOutP2Exchgs"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunOutP2ExchgRejects"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunOutP2SaDelRequests"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunOutP1SaDelRequests"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunOutNotifys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cIKETunnelStatTableGroup = h3cIKETunnelStatTableGroup.setStatus('current')
h3cIKEGlobalStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2, 2, 3)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalActiveTunnels"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInOctets"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInPkts"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInDropPkts"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInP2Exchgs"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInP2ExchgRejects"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInP2SaDelRequests"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInNotifys"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalOutOctets"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalOutPkts"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalOutDropPkts"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalOutP2Exchgs"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalOutP2ExchgRejects"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalOutP2SaDelRequests"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalOutNotifys"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInitTunnels"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInitTunnelFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalRespTunnels"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalRespTunnelFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalAuthFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalNoSaFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInvalidCookieFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalAttrNotSuppFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalNoProposalChosenFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalUnsportExchTypeFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInvalidIdFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInvalidProFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalCertTypeUnsuppFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInvalidCertAuthFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalInvalidSignFails"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEGlobalCertUnavailableFails"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cIKEGlobalStatsGroup = h3cIKEGlobalStatsGroup.setStatus('current')
h3cIKETrapObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2, 2, 4)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalNumber"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalSize"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEIdInformation"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProtocolNum"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKECertInformation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cIKETrapObjectGroup = h3cIKETrapObjectGroup.setStatus('current')
h3cIKETrapCntlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2, 2, 5)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETrapGlobalCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunnelStartTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunnelStopTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKENoSaTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEEncryFailureTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEDecryFailureTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidProposalTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEAuthFailTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidCookieTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidSpiTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEAttrNotSuppTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEUnsportExchTypeTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidIdTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidProtocolTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKECertTypeUnsuppTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidCertAuthTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidSignTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKECertUnavailableTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalAddTrapCntl"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalDelTrapCntl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cIKETrapCntlGroup = h3cIKETrapCntlGroup.setStatus('current')
h3cIKETrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 30, 2, 2, 6)).setObjects(("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunnelStart"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKETunnelStop"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKENoSaFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEEncryFailFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEDecryFailFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidProposalFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEAuthFailFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidCookieFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEAttrNotSuppFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEUnsportExchTypeFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidIdFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidProtocolFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKECertTypeUnsuppFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEInvalidCertAuthFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKElInvalidSignFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKECertUnavailableFailure"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalAdd"), ("A3COM-HUAWEI-IKE-MONITOR-MIB", "h3cIKEProposalDel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cIKETrapGroup = h3cIKETrapGroup.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-IKE-MONITOR-MIB", H3cIKEAuthMethod=H3cIKEAuthMethod, h3cIKEGlobalInvalidProFails=h3cIKEGlobalInvalidProFails, h3cIKEObjects=h3cIKEObjects, h3cIKETunnelStatEntry=h3cIKETunnelStatEntry, h3cIKEGlobalAttrNotSuppFails=h3cIKEGlobalAttrNotSuppFails, h3cIKEGlobalInvalidCookieFails=h3cIKEGlobalInvalidCookieFails, h3cIKEInvalidProposalTrapCntl=h3cIKEInvalidProposalTrapCntl, h3cIKEGlobalRespTunnelFails=h3cIKEGlobalRespTunnelFails, h3cIKEAuthFailTrapCntl=h3cIKEAuthFailTrapCntl, h3cIKETunnelStatTable=h3cIKETunnelStatTable, h3cIKEInvalidIdTrapCntl=h3cIKEInvalidIdTrapCntl, h3cIKETunnelTable=h3cIKETunnelTable, h3cIKEInvalidSignTrapCntl=h3cIKEInvalidSignTrapCntl, h3cIKETrapCntlGroup=h3cIKETrapCntlGroup, h3cIKEGlobalOutNotifys=h3cIKEGlobalOutNotifys, h3cIKEGlobalUnsportExchTypeFails=h3cIKEGlobalUnsportExchTypeFails, h3cIKEInvalidSpiTrapCntl=h3cIKEInvalidSpiTrapCntl, h3cIKETunLocalAddr=h3cIKETunLocalAddr, H3cDiffHellmanGrp=H3cDiffHellmanGrp, h3cIKEGlobalInP2Exchgs=h3cIKEGlobalInP2Exchgs, h3cIKEGlobalInP2ExchgRejects=h3cIKEGlobalInP2ExchgRejects, h3cIKEInvalidProtocolFailure=h3cIKEInvalidProtocolFailure, h3cIKEIdInformation=h3cIKEIdInformation, h3cIKEInvalidCookieFailure=h3cIKEInvalidCookieFailure, h3cIKEGlobalInP2SaDelRequests=h3cIKEGlobalInP2SaDelRequests, h3cIKEInvalidIdFailure=h3cIKEInvalidIdFailure, h3cIKETunRemoteValue2=h3cIKETunRemoteValue2, h3cIKETunLocalValue1=h3cIKETunLocalValue1, h3cIKEGlobalInvalidSignFails=h3cIKEGlobalInvalidSignFails, h3cIKETunDiffHellmanGrp=h3cIKETunDiffHellmanGrp, h3cIKEProposalDelTrapCntl=h3cIKEProposalDelTrapCntl, h3cIKEGlobalStatsGroup=h3cIKEGlobalStatsGroup, h3cIKEGlobalInOctets=h3cIKEGlobalInOctets, h3cIKETunTotalRefreshes=h3cIKETunTotalRefreshes, h3cIKETunInPkts=h3cIKETunInPkts, h3cIKEAuthFailFailure=h3cIKEAuthFailFailure, h3cIKETunOutOctets=h3cIKETunOutOctets, h3cIKEProposalAddTrapCntl=h3cIKEProposalAddTrapCntl, h3cIKETunInP2SaDelRequests=h3cIKETunInP2SaDelRequests, H3cIKEIDType=H3cIKEIDType, h3cIKEEncryFailureTrapCntl=h3cIKEEncryFailureTrapCntl, h3cIKETunLocalType=h3cIKETunLocalType, h3cIKETunInP1SaDelRequests=h3cIKETunInP1SaDelRequests, h3cIKETunLocalValue2=h3cIKETunLocalValue2, h3cIKETunnelStatTableGroup=h3cIKETunnelStatTableGroup, h3cIKETunOutNotifys=h3cIKETunOutNotifys, h3cIKEInvalidCookieTrapCntl=h3cIKEInvalidCookieTrapCntl, h3cIKETunnelStopTrapCntl=h3cIKETunnelStopTrapCntl, h3cIKEGlobalNoProposalChosenFails=h3cIKEGlobalNoProposalChosenFails, h3cIKEMonitor=h3cIKEMonitor, h3cIKETunHashAlgo=h3cIKETunHashAlgo, h3cIKENoSaFailure=h3cIKENoSaFailure, h3cIKEGlobalOutPkts=h3cIKEGlobalOutPkts, h3cIKEGlobalInvalidCertAuthFails=h3cIKEGlobalInvalidCertAuthFails, H3cAuthAlgo=H3cAuthAlgo, h3cIKEAttrNotSuppTrapCntl=h3cIKEAttrNotSuppTrapCntl, h3cIKETunnelStop=h3cIKETunnelStop, h3cIKEAttrNotSuppFailure=h3cIKEAttrNotSuppFailure, h3cIKETunRemoteAddr=h3cIKETunRemoteAddr, h3cIKETunOutP2ExchgRejects=h3cIKETunOutP2ExchgRejects, h3cIKECertUnavailableFailure=h3cIKECertUnavailableFailure, h3cIKEInvalidProtocolTrapCntl=h3cIKEInvalidProtocolTrapCntl, h3cIKEUnsportExchTypeFailure=h3cIKEUnsportExchTypeFailure, h3cIKEConformance=h3cIKEConformance, h3cIKEGlobalInitTunnels=h3cIKEGlobalInitTunnels, h3cIKETunDpdIntervalTime=h3cIKETunDpdIntervalTime, h3cIKETunRemainTime=h3cIKETunRemainTime, h3cIKETunInP2ExchgRejets=h3cIKETunInP2ExchgRejets, h3cIKEGlobalActiveTunnels=h3cIKEGlobalActiveTunnels, h3cIKEProposalSize=h3cIKEProposalSize, h3cIKECertTypeUnsuppFailure=h3cIKECertTypeUnsuppFailure, h3cIKEDecryFailFailure=h3cIKEDecryFailFailure, h3cIKEDecryFailureTrapCntl=h3cIKEDecryFailureTrapCntl, h3cIKEGlobalOutP2SaDelRequests=h3cIKEGlobalOutP2SaDelRequests, h3cIKETunRemoteType=h3cIKETunRemoteType, h3cIKElInvalidSignFailure=h3cIKElInvalidSignFailure, h3cIKEEncryFailFailure=h3cIKEEncryFailFailure, h3cIKEProtocolNum=h3cIKEProtocolNum, h3cIKEInvalidCertAuthFailure=h3cIKEInvalidCertAuthFailure, h3cIKETrapObjectGroup=h3cIKETrapObjectGroup, h3cIKETunState=h3cIKETunState, h3cIKEGlobalCertTypeUnsuppFails=h3cIKEGlobalCertTypeUnsuppFails, h3cIKETunOutP2Exchgs=h3cIKETunOutP2Exchgs, h3cIKETunOutDropPkts=h3cIKETunOutDropPkts, h3cIKETunActiveTime=h3cIKETunActiveTime, h3cIKEGlobalOutP2ExchgRejects=h3cIKEGlobalOutP2ExchgRejects, h3cIKEGlobalInPkts=h3cIKEGlobalInPkts, h3cIKENotifications=h3cIKENotifications, h3cIKEGlobalOutOctets=h3cIKEGlobalOutOctets, h3cIKETunInOctets=h3cIKETunInOctets, h3cIKEGlobalCertUnavailableFails=h3cIKEGlobalCertUnavailableFails, H3cIKETunnelState=H3cIKETunnelState, h3cIKETrapObject=h3cIKETrapObject, h3cIKEInvalidProposalFailure=h3cIKEInvalidProposalFailure, h3cIKECertTypeUnsuppTrapCntl=h3cIKECertTypeUnsuppTrapCntl, h3cIKETrapCntl=h3cIKETrapCntl, h3cIKEGlobalOutP2Exchgs=h3cIKEGlobalOutP2Exchgs, h3cIKETunInitiator=h3cIKETunInitiator, H3cIKENegoMode=H3cIKENegoMode, h3cIKENoSaTrapCntl=h3cIKENoSaTrapCntl, h3cIKETunNegoMode=h3cIKETunNegoMode, h3cIKECertInformation=h3cIKECertInformation, h3cIKEProposalAdd=h3cIKEProposalAdd, h3cIKEGlobalInDropPkts=h3cIKEGlobalInDropPkts, h3cIKETunOutP1SaDelRequests=h3cIKETunOutP1SaDelRequests, h3cIKETunEncryptAlgo=h3cIKETunEncryptAlgo, h3cIKETunDpdTimeOut=h3cIKETunDpdTimeOut, h3cIKEGlobalStats=h3cIKEGlobalStats, h3cIKEProposalNumber=h3cIKEProposalNumber, h3cIKETunIndex=h3cIKETunIndex, h3cIKETrap=h3cIKETrap, h3cIKEGlobalInvalidIdFails=h3cIKEGlobalInvalidIdFails, h3cIKETunInNotifys=h3cIKETunInNotifys, h3cIKEGlobalNoSaFails=h3cIKEGlobalNoSaFails, h3cIKETunnelStart=h3cIKETunnelStart, h3cIKECompliances=h3cIKECompliances, h3cIKEInvalidCertAuthTrapCntl=h3cIKEInvalidCertAuthTrapCntl, h3cIKECompliance=h3cIKECompliance, h3cIKEGlobalRespTunnels=h3cIKEGlobalRespTunnels, h3cIKETunOutP2SaDelRequests=h3cIKETunOutP2SaDelRequests, H3cSaProtocol=H3cSaProtocol, h3cIKEGlobalOutDropPkts=h3cIKEGlobalOutDropPkts, h3cIKETrapGlobalCntl=h3cIKETrapGlobalCntl, h3cIKETunnelEntry=h3cIKETunnelEntry, h3cIKETrapGroup=h3cIKETrapGroup, h3cIKETunnelStartTrapCntl=h3cIKETunnelStartTrapCntl, h3cIKEUnsportExchTypeTrapCntl=h3cIKEUnsportExchTypeTrapCntl, H3cTrapStatus=H3cTrapStatus, h3cIKEGlobalInNotifys=h3cIKEGlobalInNotifys, H3cTrafficType=H3cTrafficType, H3cEncryptAlgo=H3cEncryptAlgo, h3cIKETunInP2Exchgs=h3cIKETunInP2Exchgs, h3cIKEGroups=h3cIKEGroups, h3cIKETunLifeTime=h3cIKETunLifeTime, h3cIKEGlobalAuthFails=h3cIKEGlobalAuthFails, h3cIKETunAuthMethod=h3cIKETunAuthMethod, h3cIKEGlobalInitTunnelFails=h3cIKEGlobalInitTunnelFails, h3cIKETunOutPkts=h3cIKETunOutPkts, PYSNMP_MODULE_ID=h3cIKEMonitor, h3cIKECertUnavailableTrapCntl=h3cIKECertUnavailableTrapCntl, h3cIKETunInDropPkts=h3cIKETunInDropPkts, h3cIKETunnelTableGroup=h3cIKETunnelTableGroup, h3cIKEProposalDel=h3cIKEProposalDel, h3cIKETunRemoteValue1=h3cIKETunRemoteValue1)
