#
# PySNMP MIB module BIANCA-BRICK-L2TP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-L2TP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
DisplayString, = mibBuilder.importSymbols("RFC1158-MIB", "DisplayString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, MibIdentifier, Counter64, Integer32, TimeTicks, enterprises, Counter32, NotificationType, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "MibIdentifier", "Counter64", "Integer32", "TimeTicks", "enterprises", "Counter32", "NotificationType", "IpAddress", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
vpn = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 23))
l2tp = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 23, 8))
l2tpGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 10))
l2tpGlobUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 10, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1701)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpGlobUdpPort.setStatus('mandatory')
l2tpGlobPortUsage = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 10, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("single", 1), ("floating", 2))).clone('floating')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpGlobPortUsage.setStatus('mandatory')
l2tpTunnelProfileTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20), )
if mibBuilder.loadTexts: l2tpTunnelProfileTable.setStatus('mandatory')
l2tpTunnelProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10), ).setIndexNames((0, "BIANCA-BRICK-L2TP-MIB", "l2tpTunnelProfileIndex"))
if mibBuilder.loadTexts: l2tpTunnelProfileEntry.setStatus('mandatory')
l2tpTunnelProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileIndex.setStatus('mandatory')
l2tpTunnelProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileName.setStatus('mandatory')
l2tpTunnelProfileRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileRemoteIpAddress.setStatus('mandatory')
l2tpTunnelProfileRemoteIpAddressBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 25), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileRemoteIpAddressBackup.setStatus('mandatory')
l2tpTunnelProfileRemoteUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1701)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileRemoteUdpPort.setStatus('mandatory')
l2tpTunnelProfileRemoteHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileRemoteHostname.setStatus('mandatory')
l2tpTunnelProfileLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 50), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileLocalIpAddress.setStatus('mandatory')
l2tpTunnelProfileLocalUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileLocalUdpPort.setStatus('mandatory')
l2tpTunnelProfileLocalHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileLocalHostname.setStatus('mandatory')
l2tpTunnelProfilePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfilePassword.setStatus('mandatory')
l2tpTunnelProfileReceiveWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 90), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileReceiveWindowSize.setStatus('mandatory')
l2tpTunnelProfileHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 100), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileHelloInterval.setStatus('mandatory')
l2tpTunnelProfileSessionDataSequencing = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 110), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("delete", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileSessionDataSequencing.setStatus('mandatory')
l2tpTunnelProfileMinRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 120), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileMinRetryTime.setStatus('mandatory')
l2tpTunnelProfileMaxRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 130), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 255)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileMaxRetryTime.setStatus('mandatory')
l2tpTunnelProfileMaxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 140), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileMaxRetries.setStatus('mandatory')
l2tpTunnelProfileRadiusAssignment = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 150), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileRadiusAssignment.setStatus('mandatory')
l2tpTunnelProfileRadiusGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 20, 10, 160), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelProfileRadiusGroupId.setStatus('mandatory')
l2tpTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30), )
if mibBuilder.loadTexts: l2tpTunnelTable.setStatus('mandatory')
l2tpTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10), ).setIndexNames((0, "BIANCA-BRICK-L2TP-MIB", "l2tpTunnelLocalTunnelId"))
if mibBuilder.loadTexts: l2tpTunnelEntry.setStatus('mandatory')
l2tpTunnelRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelRemoteIpAddress.setStatus('mandatory')
l2tpTunnelRemoteUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelRemoteUdpPort.setStatus('mandatory')
l2tpTunnelRemoteTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelRemoteTunnelId.setStatus('mandatory')
l2tpTunnelRemoteReceiveWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelRemoteReceiveWindowSize.setStatus('mandatory')
l2tpTunnelRemoteHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelRemoteHostname.setStatus('mandatory')
l2tpTunnelRemoteVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 50), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelRemoteVendorName.setStatus('mandatory')
l2tpTunnelLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 60), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelLocalIpAddress.setStatus('mandatory')
l2tpTunnelLocalUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelLocalUdpPort.setStatus('mandatory')
l2tpTunnelLocalTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelLocalTunnelId.setStatus('mandatory')
l2tpTunnelLocalReceiveWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 85), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelLocalReceiveWindowSize.setStatus('mandatory')
l2tpTunnelLocalHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 90), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelLocalHostname.setStatus('mandatory')
l2tpTunnelPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 100), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpTunnelPassword.setStatus('mandatory')
l2tpTunnelHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 120), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelHelloInterval.setStatus('mandatory')
l2tpTunnelSessionDataSequencing = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 130), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelSessionDataSequencing.setStatus('mandatory')
l2tpTunnelMinRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 140), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelMinRetryTime.setStatus('mandatory')
l2tpTunnelMaxRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 150), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 255)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelMaxRetryTime.setStatus('mandatory')
l2tpTunnelMaxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 160), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelMaxRetries.setStatus('mandatory')
l2tpTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 30, 10, 170), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 1), ("waitctlreply", 2), ("waitctlconn", 3), ("established", 4), ("shutdown", 5))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpTunnelState.setStatus('mandatory')
l2tpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40), )
if mibBuilder.loadTexts: l2tpSessionTable.setStatus('mandatory')
l2tpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10), ).setIndexNames((0, "BIANCA-BRICK-L2TP-MIB", "l2tpSessionLocalSessionId"))
if mibBuilder.loadTexts: l2tpSessionEntry.setStatus('mandatory')
l2tpSessionRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionRemoteIpAddress.setStatus('mandatory')
l2tpSessionRemoteUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionRemoteUdpPort.setStatus('mandatory')
l2tpSessionRemoteTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionRemoteTunnelId.setStatus('mandatory')
l2tpSessionRemoteSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionRemoteSessionId.setStatus('mandatory')
l2tpSessionRemoteHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 50), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionRemoteHostname.setStatus('mandatory')
l2tpSessionLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 60), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionLocalIpAddress.setStatus('mandatory')
l2tpSessionLocalUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionLocalUdpPort.setStatus('mandatory')
l2tpSessionLocalTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionLocalTunnelId.setStatus('mandatory')
l2tpSessionLocalSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 90), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionLocalSessionId.setStatus('mandatory')
l2tpSessionLocalHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 100), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionLocalHostname.setStatus('mandatory')
l2tpSessionCallSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionCallSerialNumber.setStatus('mandatory')
l2tpSessionDataSequencing = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 120), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpSessionDataSequencing.setStatus('mandatory')
l2tpSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 130), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("idle", 1), ("waittunnel", 2), ("waitcsanswer", 3), ("waitreply", 4), ("waitconnect", 5), ("established", 6), ("shutdown", 7))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpSessionState.setStatus('mandatory')
l2tpSessionInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 140), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionInfo.setStatus('mandatory')
l2tpSessionClientPPPCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 150), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionClientPPPCrcErrors.setStatus('mandatory')
l2tpSessionClientPPPFramingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 160), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionClientPPPFramingErrors.setStatus('mandatory')
l2tpSessionClientPPPHardwareOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 170), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionClientPPPHardwareOverruns.setStatus('mandatory')
l2tpSessionClientPPPBufferOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 180), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionClientPPPBufferOverruns.setStatus('mandatory')
l2tpSessionClientPPPTimeoutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 190), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionClientPPPTimeoutErrors.setStatus('mandatory')
l2tpSessionClientPPPAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 8, 40, 10, 200), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpSessionClientPPPAlignmentErrors.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-L2TP-MIB", l2tpSessionTable=l2tpSessionTable, l2tpSessionEntry=l2tpSessionEntry, l2tpSessionClientPPPAlignmentErrors=l2tpSessionClientPPPAlignmentErrors, l2tpTunnelProfileMaxRetries=l2tpTunnelProfileMaxRetries, l2tpSessionRemoteUdpPort=l2tpSessionRemoteUdpPort, l2tpTunnelProfileHelloInterval=l2tpTunnelProfileHelloInterval, bintec=bintec, l2tpSessionLocalTunnelId=l2tpSessionLocalTunnelId, l2tpSessionLocalIpAddress=l2tpSessionLocalIpAddress, l2tpTunnelProfileIndex=l2tpTunnelProfileIndex, l2tpTunnelProfileName=l2tpTunnelProfileName, bibo=bibo, l2tpTunnelTable=l2tpTunnelTable, l2tpTunnelProfileRadiusAssignment=l2tpTunnelProfileRadiusAssignment, l2tpGlobPortUsage=l2tpGlobPortUsage, l2tpTunnelPassword=l2tpTunnelPassword, l2tpTunnelProfileRemoteIpAddress=l2tpTunnelProfileRemoteIpAddress, l2tpTunnelProfileReceiveWindowSize=l2tpTunnelProfileReceiveWindowSize, l2tpTunnelRemoteHostname=l2tpTunnelRemoteHostname, l2tp=l2tp, l2tpGlobUdpPort=l2tpGlobUdpPort, l2tpTunnelRemoteUdpPort=l2tpTunnelRemoteUdpPort, l2tpTunnelMinRetryTime=l2tpTunnelMinRetryTime, l2tpSessionRemoteIpAddress=l2tpSessionRemoteIpAddress, l2tpTunnelEntry=l2tpTunnelEntry, l2tpGlobals=l2tpGlobals, l2tpTunnelRemoteVendorName=l2tpTunnelRemoteVendorName, l2tpSessionRemoteHostname=l2tpSessionRemoteHostname, l2tpSessionLocalHostname=l2tpSessionLocalHostname, l2tpSessionClientPPPTimeoutErrors=l2tpSessionClientPPPTimeoutErrors, l2tpTunnelProfileLocalHostname=l2tpTunnelProfileLocalHostname, l2tpTunnelProfileMinRetryTime=l2tpTunnelProfileMinRetryTime, l2tpTunnelLocalTunnelId=l2tpTunnelLocalTunnelId, l2tpTunnelProfileRemoteIpAddressBackup=l2tpTunnelProfileRemoteIpAddressBackup, l2tpTunnelProfileRadiusGroupId=l2tpTunnelProfileRadiusGroupId, l2tpTunnelProfileTable=l2tpTunnelProfileTable, l2tpTunnelRemoteTunnelId=l2tpTunnelRemoteTunnelId, l2tpTunnelLocalUdpPort=l2tpTunnelLocalUdpPort, l2tpSessionInfo=l2tpSessionInfo, l2tpTunnelProfilePassword=l2tpTunnelProfilePassword, l2tpTunnelProfileLocalUdpPort=l2tpTunnelProfileLocalUdpPort, vpn=vpn, l2tpSessionClientPPPHardwareOverruns=l2tpSessionClientPPPHardwareOverruns, l2tpSessionClientPPPCrcErrors=l2tpSessionClientPPPCrcErrors, l2tpTunnelRemoteIpAddress=l2tpTunnelRemoteIpAddress, l2tpTunnelProfileMaxRetryTime=l2tpTunnelProfileMaxRetryTime, l2tpTunnelProfileEntry=l2tpTunnelProfileEntry, l2tpTunnelLocalHostname=l2tpTunnelLocalHostname, l2tpTunnelLocalIpAddress=l2tpTunnelLocalIpAddress, l2tpSessionLocalUdpPort=l2tpSessionLocalUdpPort, l2tpSessionCallSerialNumber=l2tpSessionCallSerialNumber, l2tpSessionState=l2tpSessionState, l2tpSessionClientPPPFramingErrors=l2tpSessionClientPPPFramingErrors, l2tpTunnelState=l2tpTunnelState, l2tpSessionDataSequencing=l2tpSessionDataSequencing, l2tpTunnelProfileLocalIpAddress=l2tpTunnelProfileLocalIpAddress, l2tpTunnelRemoteReceiveWindowSize=l2tpTunnelRemoteReceiveWindowSize, l2tpSessionLocalSessionId=l2tpSessionLocalSessionId, l2tpSessionClientPPPBufferOverruns=l2tpSessionClientPPPBufferOverruns, l2tpTunnelProfileRemoteHostname=l2tpTunnelProfileRemoteHostname, l2tpSessionRemoteTunnelId=l2tpSessionRemoteTunnelId, l2tpTunnelSessionDataSequencing=l2tpTunnelSessionDataSequencing, l2tpTunnelMaxRetryTime=l2tpTunnelMaxRetryTime, l2tpTunnelHelloInterval=l2tpTunnelHelloInterval, l2tpTunnelProfileSessionDataSequencing=l2tpTunnelProfileSessionDataSequencing, l2tpTunnelProfileRemoteUdpPort=l2tpTunnelProfileRemoteUdpPort, l2tpSessionRemoteSessionId=l2tpSessionRemoteSessionId, l2tpTunnelMaxRetries=l2tpTunnelMaxRetries, l2tpTunnelLocalReceiveWindowSize=l2tpTunnelLocalReceiveWindowSize)
