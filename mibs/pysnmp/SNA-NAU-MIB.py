#
# PySNMP MIB module SNA-NAU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SNA-NAU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:07:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, mib_2, Counter32, Integer32, IpAddress, ObjectIdentity, MibIdentifier, Counter64, ModuleIdentity, Unsigned32, iso, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "mib-2", "Counter32", "Integer32", "IpAddress", "ObjectIdentity", "MibIdentifier", "Counter64", "ModuleIdentity", "Unsigned32", "iso", "Bits", "NotificationType")
InstancePointer, DisplayString, TimeStamp, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "InstancePointer", "DisplayString", "TimeStamp", "RowStatus", "TextualConvention")
snanauMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 34))
if mibBuilder.loadTexts: snanauMIB.setLastUpdated('9405120900Z')
if mibBuilder.loadTexts: snanauMIB.setOrganization('IETF SNA NAU MIB Working Group')
snanauObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 1))
snaNode = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 1, 1))
snaLu = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 1, 2))
snaMgtTools = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 1, 3))
snaNodeAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 1, 1), )
if mibBuilder.loadTexts: snaNodeAdminTable.setStatus('current')
snaNodeAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaNodeAdminIndex"))
if mibBuilder.loadTexts: snaNodeAdminEntry.setStatus('current')
snaNodeAdminIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: snaNodeAdminIndex.setStatus('current')
snaNodeAdminName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminName.setStatus('current')
snaNodeAdminType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("pu10", 2), ("pu20", 3), ("t21len", 4), ("endNode", 5), ("networkNode", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminType.setStatus('current')
snaNodeAdminXidFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("format0", 1), ("format1", 2), ("format3", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminXidFormat.setStatus('current')
snaNodeAdminBlockNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminBlockNum.setStatus('current')
snaNodeAdminIdNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminIdNum.setStatus('current')
snaNodeAdminEnablingMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("startup", 2), ("demand", 3), ("onlyMS", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminEnablingMethod.setStatus('current')
snaNodeAdminLuTermDefault = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unbind", 1), ("termself", 2), ("rshutd", 3), ("poweroff", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminLuTermDefault.setStatus('current')
snaNodeAdminMaxLu = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminMaxLu.setStatus('current')
snaNodeAdminHostDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminHostDescription.setStatus('current')
snaNodeAdminStopMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("immed", 3), ("force", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminStopMethod.setStatus('current')
snaNodeAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminState.setStatus('current')
snaNodeAdminRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeAdminRowStatus.setStatus('current')
snaNodeAdminTableLastChange = MibScalar((1, 3, 6, 1, 2, 1, 34, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeAdminTableLastChange.setStatus('current')
snaNodeOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 1, 3), )
if mibBuilder.loadTexts: snaNodeOperTable.setStatus('current')
snaNodeOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaNodeAdminIndex"))
if mibBuilder.loadTexts: snaNodeOperEntry.setStatus('current')
snaNodeOperName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperName.setStatus('current')
snaNodeOperType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("pu10", 2), ("pu20", 3), ("t21LEN", 4), ("endNode", 5), ("networkNode", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperType.setStatus('current')
snaNodeOperXidFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("format0", 1), ("format1", 2), ("format3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperXidFormat.setStatus('current')
snaNodeOperBlockNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperBlockNum.setStatus('current')
snaNodeOperIdNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperIdNum.setStatus('current')
snaNodeOperEnablingMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("startup", 2), ("demand", 3), ("onlyMS", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperEnablingMethod.setStatus('current')
snaNodeOperLuTermDefault = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unbind", 1), ("termself", 2), ("rshutd", 3), ("poweroff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperLuTermDefault.setStatus('current')
snaNodeOperMaxLu = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperMaxLu.setStatus('current')
snaNodeOperHostDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperHostDescription.setStatus('current')
snaNodeOperStopMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("immed", 3), ("force", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperStopMethod.setStatus('current')
snaNodeOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("waiting", 3), ("stopping", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperState.setStatus('current')
snaNodeOperHostSscpId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperHostSscpId.setStatus('current')
snaNodeOperStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperStartTime.setStatus('current')
snaNodeOperLastStateChange = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperLastStateChange.setStatus('current')
snaNodeOperActFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperActFailures.setStatus('current')
snaNodeOperActFailureReason = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("linkFailure", 2), ("noResources", 3), ("badConfiguration", 4), ("internalError", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperActFailureReason.setStatus('current')
snaNodeOperTableLastChange = MibScalar((1, 3, 6, 1, 2, 1, 34, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeOperTableLastChange.setStatus('current')
snaPu20StatsTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 1, 5), )
if mibBuilder.loadTexts: snaPu20StatsTable.setStatus('current')
snaPu20StatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaNodeAdminIndex"))
if mibBuilder.loadTexts: snaPu20StatsEntry.setStatus('current')
snaPu20StatsSentBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaPu20StatsSentBytes.setStatus('current')
snaPu20StatsReceivedBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaPu20StatsReceivedBytes.setStatus('current')
snaPu20StatsSentPius = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaPu20StatsSentPius.setStatus('current')
snaPu20StatsReceivedPius = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaPu20StatsReceivedPius.setStatus('current')
snaPu20StatsSentNegativeResps = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaPu20StatsSentNegativeResps.setStatus('current')
snaPu20StatsReceivedNegativeResps = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaPu20StatsReceivedNegativeResps.setStatus('current')
snaPu20StatsActLus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaPu20StatsActLus.setStatus('current')
snaPu20StatsInActLus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaPu20StatsInActLus.setStatus('current')
snaPu20StatsBindLus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaPu20StatsBindLus.setStatus('current')
snaNodeLinkAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 1, 6), )
if mibBuilder.loadTexts: snaNodeLinkAdminTable.setStatus('current')
snaNodeLinkAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 1, 6, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaNodeAdminIndex"), (0, "SNA-NAU-MIB", "snaNodeLinkAdminIndex"))
if mibBuilder.loadTexts: snaNodeLinkAdminEntry.setStatus('current')
snaNodeLinkAdminIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: snaNodeLinkAdminIndex.setStatus('current')
snaNodeLinkAdminSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 6, 1, 2), InstancePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeLinkAdminSpecific.setStatus('current')
snaNodeLinkAdminMaxPiu = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeLinkAdminMaxPiu.setStatus('current')
snaNodeLinkAdminRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaNodeLinkAdminRowStatus.setStatus('current')
snaNodeLinkAdminTableLastChange = MibScalar((1, 3, 6, 1, 2, 1, 34, 1, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeLinkAdminTableLastChange.setStatus('current')
snaNodeLinkOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 1, 8), )
if mibBuilder.loadTexts: snaNodeLinkOperTable.setStatus('current')
snaNodeLinkOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 1, 8, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaNodeAdminIndex"), (0, "SNA-NAU-MIB", "snaNodeLinkAdminIndex"))
if mibBuilder.loadTexts: snaNodeLinkOperEntry.setStatus('current')
snaNodeLinkOperSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 8, 1, 1), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeLinkOperSpecific.setStatus('current')
snaNodeLinkOperMaxPiu = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 1, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeLinkOperMaxPiu.setStatus('current')
snaNodeLinkOperTableLastChange = MibScalar((1, 3, 6, 1, 2, 1, 34, 1, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaNodeLinkOperTableLastChange.setStatus('current')
snaNodeTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 1, 1, 10))
snaNodeStateChangeTrap = NotificationType((1, 3, 6, 1, 2, 1, 34, 1, 1, 10, 1)).setObjects(("SNA-NAU-MIB", "snaNodeOperName"), ("SNA-NAU-MIB", "snaNodeOperState"))
if mibBuilder.loadTexts: snaNodeStateChangeTrap.setStatus('current')
snaNodeActFailTrap = NotificationType((1, 3, 6, 1, 2, 1, 34, 1, 1, 10, 2)).setObjects(("SNA-NAU-MIB", "snaNodeOperName"), ("SNA-NAU-MIB", "snaNodeOperState"), ("SNA-NAU-MIB", "snaNodeOperActFailureReason"))
if mibBuilder.loadTexts: snaNodeActFailTrap.setStatus('current')
snaLuAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 2, 1), )
if mibBuilder.loadTexts: snaLuAdminTable.setStatus('current')
snaLuAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaNodeAdminIndex"), (0, "SNA-NAU-MIB", "snaLuAdminLuIndex"))
if mibBuilder.loadTexts: snaLuAdminEntry.setStatus('current')
snaLuAdminLuIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: snaLuAdminLuIndex.setStatus('current')
snaLuAdminName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaLuAdminName.setStatus('current')
snaLuAdminSnaName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaLuAdminSnaName.setStatus('current')
snaLuAdminType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("lu0", 2), ("lu1", 3), ("lu2", 4), ("lu3", 5), ("lu4", 6), ("lu62", 7), ("lu7", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaLuAdminType.setStatus('current')
snaLuAdminDepType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dependent", 1), ("independent", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaLuAdminDepType.setStatus('current')
snaLuAdminLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaLuAdminLocalAddress.setStatus('current')
snaLuAdminDisplayModel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("invalid", 1), ("model2A", 2), ("model2B", 3), ("model3A", 4), ("model3B", 5), ("model4A", 6), ("model4B", 7), ("model5A", 8), ("model5B", 9), ("dynamic", 10)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaLuAdminDisplayModel.setStatus('current')
snaLuAdminTerm = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unbind", 1), ("termself", 2), ("rshutd", 3), ("poweroff", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaLuAdminTerm.setStatus('current')
snaLuAdminRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snaLuAdminRowStatus.setStatus('current')
snaLuOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 2, 2), )
if mibBuilder.loadTexts: snaLuOperTable.setStatus('current')
snaLuOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaNodeAdminIndex"), (0, "SNA-NAU-MIB", "snaLuAdminLuIndex"))
if mibBuilder.loadTexts: snaLuOperEntry.setStatus('current')
snaLuOperName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperName.setStatus('current')
snaLuOperSnaName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperSnaName.setStatus('current')
snaLuOperType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("lu0", 2), ("lu1", 3), ("lu2", 4), ("lu3", 5), ("lu4", 6), ("lu62", 7), ("lu7", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperType.setStatus('current')
snaLuOperDepType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dependent", 1), ("independent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperDepType.setStatus('current')
snaLuOperLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperLocalAddress.setStatus('current')
snaLuOperDisplayModel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("invalid", 1), ("model2A", 2), ("model2B", 3), ("model3A", 4), ("model3B", 5), ("model4A", 6), ("model4B", 7), ("model5A", 8), ("model5B", 9), ("dynamic", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperDisplayModel.setStatus('current')
snaLuOperTerm = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unbind", 1), ("termself", 2), ("rshutd", 3), ("poweroff", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperTerm.setStatus('current')
snaLuOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperState.setStatus('current')
snaLuOperSessnCount = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperSessnCount.setStatus('current')
snaLuSessnTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 2, 3), )
if mibBuilder.loadTexts: snaLuSessnTable.setStatus('current')
snaLuSessnEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaNodeAdminIndex"), (0, "SNA-NAU-MIB", "snaLuAdminLuIndex"), (0, "SNA-NAU-MIB", "snaLuSessnRluIndex"), (0, "SNA-NAU-MIB", "snaLuSessnIndex"))
if mibBuilder.loadTexts: snaLuSessnEntry.setStatus('current')
snaLuSessnRluIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnRluIndex.setStatus('current')
snaLuSessnIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnIndex.setStatus('current')
snaLuSessnLocalApplName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnLocalApplName.setStatus('current')
snaLuSessnRemoteLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnRemoteLuName.setStatus('current')
snaLuSessnMaxSndRuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnMaxSndRuSize.setStatus('current')
snaLuSessnMaxRcvRuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnMaxRcvRuSize.setStatus('current')
snaLuSessnSndPacingSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnSndPacingSize.setStatus('current')
snaLuSessnRcvPacingSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnRcvPacingSize.setStatus('current')
snaLuSessnActiveTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnActiveTime.setStatus('current')
snaLuSessnAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("unbound", 1), ("bound", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snaLuSessnAdminState.setStatus('current')
snaLuSessnOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unbound", 1), ("pendingBind", 2), ("bound", 3), ("pendingUnbind", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnOperState.setStatus('current')
snaLuSessnSenseData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnSenseData.setStatus('current')
snaLuSessnTerminationRu = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bindFailure", 2), ("unbind", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnTerminationRu.setStatus('current')
snaLuSessnUnbindType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnUnbindType.setStatus('current')
snaLuSessnLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnLinkIndex.setStatus('current')
snaLuSessnStatsTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 2, 4), )
if mibBuilder.loadTexts: snaLuSessnStatsTable.setStatus('current')
snaLuSessnStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 2, 4, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaNodeAdminIndex"), (0, "SNA-NAU-MIB", "snaLuAdminLuIndex"), (0, "SNA-NAU-MIB", "snaLuSessnRluIndex"), (0, "SNA-NAU-MIB", "snaLuSessnIndex"))
if mibBuilder.loadTexts: snaLuSessnStatsEntry.setStatus('current')
snaLuSessnStatsSentBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnStatsSentBytes.setStatus('current')
snaLuSessnStatsReceivedBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnStatsReceivedBytes.setStatus('current')
snaLuSessnStatsSentRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnStatsSentRus.setStatus('current')
snaLuSessnStatsReceivedRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnStatsReceivedRus.setStatus('current')
snaLuSessnStatsSentNegativeResps = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnStatsSentNegativeResps.setStatus('current')
snaLuSessnStatsReceivedNegativeResps = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuSessnStatsReceivedNegativeResps.setStatus('current')
snaLuTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 1, 2, 5))
snaLuStateChangeTrap = NotificationType((1, 3, 6, 1, 2, 1, 34, 1, 2, 5, 1)).setObjects(("SNA-NAU-MIB", "snaLuOperName"), ("SNA-NAU-MIB", "snaLuOperSnaName"), ("SNA-NAU-MIB", "snaLuOperState"))
if mibBuilder.loadTexts: snaLuStateChangeTrap.setStatus('current')
snaLuSessnBindFailTrap = NotificationType((1, 3, 6, 1, 2, 1, 34, 1, 2, 5, 2)).setObjects(("SNA-NAU-MIB", "snaLuSessnLocalApplName"), ("SNA-NAU-MIB", "snaLuSessnRemoteLuName"), ("SNA-NAU-MIB", "snaLuSessnOperState"), ("SNA-NAU-MIB", "snaLuSessnSenseData"))
if mibBuilder.loadTexts: snaLuSessnBindFailTrap.setStatus('current')
snaLuRtmTable = MibTable((1, 3, 6, 1, 2, 1, 34, 1, 3, 1), )
if mibBuilder.loadTexts: snaLuRtmTable.setStatus('current')
snaLuRtmEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1), ).setIndexNames((0, "SNA-NAU-MIB", "snaLuRtmPuIndex"), (0, "SNA-NAU-MIB", "snaLuRtmLuIndex"))
if mibBuilder.loadTexts: snaLuRtmEntry.setStatus('current')
snaLuRtmPuIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: snaLuRtmPuIndex.setStatus('current')
snaLuRtmLuIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: snaLuRtmLuIndex.setStatus('current')
snaLuRtmState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmState.setStatus('current')
snaLuRtmStateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmStateTime.setStatus('current')
snaLuRtmDef = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("firstChar", 1), ("kb", 2), ("cdeb", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmDef.setStatus('current')
snaLuRtmBoundary1 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmBoundary1.setStatus('current')
snaLuRtmBoundary2 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmBoundary2.setStatus('current')
snaLuRtmBoundary3 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmBoundary3.setStatus('current')
snaLuRtmBoundary4 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmBoundary4.setStatus('current')
snaLuRtmCounter1 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmCounter1.setStatus('current')
snaLuRtmCounter2 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmCounter2.setStatus('current')
snaLuRtmCounter3 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmCounter3.setStatus('current')
snaLuRtmCounter4 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmCounter4.setStatus('current')
snaLuRtmOverFlows = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmOverFlows.setStatus('current')
snaLuRtmObjPercent = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmObjPercent.setStatus('current')
snaLuRtmObjRange = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("range1", 2), ("range2", 3), ("range3", 4), ("range4", 5), ("range5", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmObjRange.setStatus('current')
snaLuRtmNumTrans = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmNumTrans.setStatus('current')
snaLuRtmLastRspTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmLastRspTime.setStatus('current')
snaLuRtmAvgRspTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 1, 3, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuRtmAvgRspTime.setStatus('current')
snanauConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 2))
snanauCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 2, 1))
snanauGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 2, 2))
snanauCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 34, 2, 1, 1)).setObjects(("SNA-NAU-MIB", "snaNodeGroup"), ("SNA-NAU-MIB", "snaLuGroup"), ("SNA-NAU-MIB", "snaSessionGroup"), ("SNA-NAU-MIB", "snaPu20Group"), ("SNA-NAU-MIB", "snaMgtToolsRtmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snanauCompliance = snanauCompliance.setStatus('current')
snaNodeGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 2, 2, 1)).setObjects(("SNA-NAU-MIB", "snaNodeAdminName"), ("SNA-NAU-MIB", "snaNodeAdminType"), ("SNA-NAU-MIB", "snaNodeAdminXidFormat"), ("SNA-NAU-MIB", "snaNodeAdminBlockNum"), ("SNA-NAU-MIB", "snaNodeAdminIdNum"), ("SNA-NAU-MIB", "snaNodeAdminEnablingMethod"), ("SNA-NAU-MIB", "snaNodeAdminLuTermDefault"), ("SNA-NAU-MIB", "snaNodeAdminMaxLu"), ("SNA-NAU-MIB", "snaNodeAdminHostDescription"), ("SNA-NAU-MIB", "snaNodeAdminStopMethod"), ("SNA-NAU-MIB", "snaNodeAdminState"), ("SNA-NAU-MIB", "snaNodeAdminRowStatus"), ("SNA-NAU-MIB", "snaNodeAdminTableLastChange"), ("SNA-NAU-MIB", "snaNodeOperName"), ("SNA-NAU-MIB", "snaNodeOperType"), ("SNA-NAU-MIB", "snaNodeOperXidFormat"), ("SNA-NAU-MIB", "snaNodeOperBlockNum"), ("SNA-NAU-MIB", "snaNodeOperIdNum"), ("SNA-NAU-MIB", "snaNodeOperEnablingMethod"), ("SNA-NAU-MIB", "snaNodeOperLuTermDefault"), ("SNA-NAU-MIB", "snaNodeOperMaxLu"), ("SNA-NAU-MIB", "snaNodeOperHostDescription"), ("SNA-NAU-MIB", "snaNodeOperStopMethod"), ("SNA-NAU-MIB", "snaNodeOperState"), ("SNA-NAU-MIB", "snaNodeOperHostSscpId"), ("SNA-NAU-MIB", "snaNodeOperStartTime"), ("SNA-NAU-MIB", "snaNodeOperLastStateChange"), ("SNA-NAU-MIB", "snaNodeOperActFailures"), ("SNA-NAU-MIB", "snaNodeOperActFailureReason"), ("SNA-NAU-MIB", "snaNodeOperTableLastChange"), ("SNA-NAU-MIB", "snaNodeLinkAdminSpecific"), ("SNA-NAU-MIB", "snaNodeLinkAdminMaxPiu"), ("SNA-NAU-MIB", "snaNodeLinkAdminRowStatus"), ("SNA-NAU-MIB", "snaNodeLinkAdminTableLastChange"), ("SNA-NAU-MIB", "snaNodeLinkOperSpecific"), ("SNA-NAU-MIB", "snaNodeLinkOperMaxPiu"), ("SNA-NAU-MIB", "snaNodeLinkOperTableLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snaNodeGroup = snaNodeGroup.setStatus('current')
snaLuGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 2, 2, 2)).setObjects(("SNA-NAU-MIB", "snaLuAdminName"), ("SNA-NAU-MIB", "snaLuAdminSnaName"), ("SNA-NAU-MIB", "snaLuAdminType"), ("SNA-NAU-MIB", "snaLuAdminDepType"), ("SNA-NAU-MIB", "snaLuAdminLocalAddress"), ("SNA-NAU-MIB", "snaLuAdminDisplayModel"), ("SNA-NAU-MIB", "snaLuAdminTerm"), ("SNA-NAU-MIB", "snaLuAdminRowStatus"), ("SNA-NAU-MIB", "snaLuOperName"), ("SNA-NAU-MIB", "snaLuOperSnaName"), ("SNA-NAU-MIB", "snaLuOperType"), ("SNA-NAU-MIB", "snaLuOperDepType"), ("SNA-NAU-MIB", "snaLuOperLocalAddress"), ("SNA-NAU-MIB", "snaLuOperDisplayModel"), ("SNA-NAU-MIB", "snaLuOperTerm"), ("SNA-NAU-MIB", "snaLuOperState"), ("SNA-NAU-MIB", "snaLuOperSessnCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snaLuGroup = snaLuGroup.setStatus('current')
snaSessionGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 2, 2, 3)).setObjects(("SNA-NAU-MIB", "snaLuSessnRluIndex"), ("SNA-NAU-MIB", "snaLuSessnIndex"), ("SNA-NAU-MIB", "snaLuSessnLocalApplName"), ("SNA-NAU-MIB", "snaLuSessnRemoteLuName"), ("SNA-NAU-MIB", "snaLuSessnMaxSndRuSize"), ("SNA-NAU-MIB", "snaLuSessnMaxRcvRuSize"), ("SNA-NAU-MIB", "snaLuSessnSndPacingSize"), ("SNA-NAU-MIB", "snaLuSessnRcvPacingSize"), ("SNA-NAU-MIB", "snaLuSessnActiveTime"), ("SNA-NAU-MIB", "snaLuSessnAdminState"), ("SNA-NAU-MIB", "snaLuSessnOperState"), ("SNA-NAU-MIB", "snaLuSessnSenseData"), ("SNA-NAU-MIB", "snaLuSessnTerminationRu"), ("SNA-NAU-MIB", "snaLuSessnUnbindType"), ("SNA-NAU-MIB", "snaLuSessnLinkIndex"), ("SNA-NAU-MIB", "snaLuSessnStatsSentBytes"), ("SNA-NAU-MIB", "snaLuSessnStatsReceivedBytes"), ("SNA-NAU-MIB", "snaLuSessnStatsSentRus"), ("SNA-NAU-MIB", "snaLuSessnStatsReceivedRus"), ("SNA-NAU-MIB", "snaLuSessnStatsSentNegativeResps"), ("SNA-NAU-MIB", "snaLuSessnStatsReceivedNegativeResps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snaSessionGroup = snaSessionGroup.setStatus('current')
snaPu20Group = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 2, 2, 4)).setObjects(("SNA-NAU-MIB", "snaPu20StatsSentBytes"), ("SNA-NAU-MIB", "snaPu20StatsReceivedBytes"), ("SNA-NAU-MIB", "snaPu20StatsSentPius"), ("SNA-NAU-MIB", "snaPu20StatsReceivedPius"), ("SNA-NAU-MIB", "snaPu20StatsSentNegativeResps"), ("SNA-NAU-MIB", "snaPu20StatsReceivedNegativeResps"), ("SNA-NAU-MIB", "snaPu20StatsActLus"), ("SNA-NAU-MIB", "snaPu20StatsInActLus"), ("SNA-NAU-MIB", "snaPu20StatsBindLus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snaPu20Group = snaPu20Group.setStatus('current')
snaMgtToolsRtmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 2, 2, 5)).setObjects(("SNA-NAU-MIB", "snaLuRtmState"), ("SNA-NAU-MIB", "snaLuRtmStateTime"), ("SNA-NAU-MIB", "snaLuRtmDef"), ("SNA-NAU-MIB", "snaLuRtmBoundary1"), ("SNA-NAU-MIB", "snaLuRtmBoundary2"), ("SNA-NAU-MIB", "snaLuRtmBoundary3"), ("SNA-NAU-MIB", "snaLuRtmBoundary4"), ("SNA-NAU-MIB", "snaLuRtmCounter1"), ("SNA-NAU-MIB", "snaLuRtmCounter2"), ("SNA-NAU-MIB", "snaLuRtmCounter3"), ("SNA-NAU-MIB", "snaLuRtmCounter4"), ("SNA-NAU-MIB", "snaLuRtmOverFlows"), ("SNA-NAU-MIB", "snaLuRtmObjPercent"), ("SNA-NAU-MIB", "snaLuRtmObjRange"), ("SNA-NAU-MIB", "snaLuRtmNumTrans"), ("SNA-NAU-MIB", "snaLuRtmLastRspTime"), ("SNA-NAU-MIB", "snaLuRtmAvgRspTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snaMgtToolsRtmGroup = snaMgtToolsRtmGroup.setStatus('current')
mibBuilder.exportSymbols("SNA-NAU-MIB", snaLuSessnOperState=snaLuSessnOperState, snaLuAdminTable=snaLuAdminTable, snaNodeAdminXidFormat=snaNodeAdminXidFormat, snaNodeLinkAdminSpecific=snaNodeLinkAdminSpecific, snaLuOperSessnCount=snaLuOperSessnCount, snaNodeOperBlockNum=snaNodeOperBlockNum, snaLuOperState=snaLuOperState, snaNodeOperTableLastChange=snaNodeOperTableLastChange, snaNodeAdminBlockNum=snaNodeAdminBlockNum, snaNodeLinkAdminTable=snaNodeLinkAdminTable, snanauConformance=snanauConformance, snaLuSessnStatsTable=snaLuSessnStatsTable, snaLuSessnSndPacingSize=snaLuSessnSndPacingSize, snaLuRtmBoundary1=snaLuRtmBoundary1, snaNodeLinkOperTableLastChange=snaNodeLinkOperTableLastChange, snaLuOperDisplayModel=snaLuOperDisplayModel, snaNodeAdminStopMethod=snaNodeAdminStopMethod, snaNodeAdminTableLastChange=snaNodeAdminTableLastChange, snaNodeLinkAdminEntry=snaNodeLinkAdminEntry, snaLuSessnTable=snaLuSessnTable, snaLuSessnIndex=snaLuSessnIndex, snaNodeAdminIdNum=snaNodeAdminIdNum, snaLuAdminDepType=snaLuAdminDepType, snaPu20Group=snaPu20Group, snaPu20StatsTable=snaPu20StatsTable, snaLuAdminType=snaLuAdminType, snaLuOperLocalAddress=snaLuOperLocalAddress, snaLuSessnRemoteLuName=snaLuSessnRemoteLuName, snaPu20StatsBindLus=snaPu20StatsBindLus, snaLuRtmObjRange=snaLuRtmObjRange, snaLuOperTerm=snaLuOperTerm, snaPu20StatsSentBytes=snaPu20StatsSentBytes, snaLuSessnStatsEntry=snaLuSessnStatsEntry, snaNodeOperMaxLu=snaNodeOperMaxLu, snaLuRtmAvgRspTime=snaLuRtmAvgRspTime, snaLuOperType=snaLuOperType, snaNodeAdminName=snaNodeAdminName, snaNodeOperStopMethod=snaNodeOperStopMethod, snaLuOperName=snaLuOperName, snaLuRtmObjPercent=snaLuRtmObjPercent, snaPu20StatsInActLus=snaPu20StatsInActLus, snaLuRtmBoundary4=snaLuRtmBoundary4, snaLuOperTable=snaLuOperTable, snaMgtTools=snaMgtTools, snaMgtToolsRtmGroup=snaMgtToolsRtmGroup, snaLuSessnStatsReceivedRus=snaLuSessnStatsReceivedRus, snaLuAdminEntry=snaLuAdminEntry, snaNodeOperStartTime=snaNodeOperStartTime, snaLuSessnStatsReceivedBytes=snaLuSessnStatsReceivedBytes, snaPu20StatsReceivedPius=snaPu20StatsReceivedPius, snaNodeGroup=snaNodeGroup, snaLuOperEntry=snaLuOperEntry, snaLuRtmLuIndex=snaLuRtmLuIndex, snaLuSessnStatsReceivedNegativeResps=snaLuSessnStatsReceivedNegativeResps, snaNodeOperActFailures=snaNodeOperActFailures, snaNodeLinkOperMaxPiu=snaNodeLinkOperMaxPiu, snaNodeTraps=snaNodeTraps, snaLuRtmCounter3=snaLuRtmCounter3, snaNodeAdminIndex=snaNodeAdminIndex, snaNodeAdminRowStatus=snaNodeAdminRowStatus, snaNodeLinkAdminTableLastChange=snaNodeLinkAdminTableLastChange, snaLuRtmPuIndex=snaLuRtmPuIndex, snaNodeAdminEnablingMethod=snaNodeAdminEnablingMethod, snaLuSessnActiveTime=snaLuSessnActiveTime, snaLuSessnRluIndex=snaLuSessnRluIndex, snaLuSessnUnbindType=snaLuSessnUnbindType, snaLuTraps=snaLuTraps, snaLuSessnStatsSentNegativeResps=snaLuSessnStatsSentNegativeResps, snaNodeAdminType=snaNodeAdminType, snaLuAdminLuIndex=snaLuAdminLuIndex, snaNodeStateChangeTrap=snaNodeStateChangeTrap, snaNodeOperHostSscpId=snaNodeOperHostSscpId, snaLuSessnTerminationRu=snaLuSessnTerminationRu, snaPu20StatsEntry=snaPu20StatsEntry, snaLuSessnRcvPacingSize=snaLuSessnRcvPacingSize, snaLuSessnLinkIndex=snaLuSessnLinkIndex, snaNodeOperActFailureReason=snaNodeOperActFailureReason, snaNodeAdminState=snaNodeAdminState, snaLu=snaLu, snaLuGroup=snaLuGroup, snaLuStateChangeTrap=snaLuStateChangeTrap, snaNodeOperName=snaNodeOperName, snaLuAdminRowStatus=snaLuAdminRowStatus, snaLuSessnBindFailTrap=snaLuSessnBindFailTrap, snaPu20StatsSentPius=snaPu20StatsSentPius, snaNodeOperType=snaNodeOperType, snaLuOperSnaName=snaLuOperSnaName, snaLuRtmTable=snaLuRtmTable, snaLuAdminSnaName=snaLuAdminSnaName, snaLuRtmEntry=snaLuRtmEntry, snaNodeLinkOperSpecific=snaNodeLinkOperSpecific, snaNodeOperTable=snaNodeOperTable, snaLuRtmNumTrans=snaLuRtmNumTrans, snaNodeAdminEntry=snaNodeAdminEntry, snaLuAdminLocalAddress=snaLuAdminLocalAddress, snaLuSessnMaxSndRuSize=snaLuSessnMaxSndRuSize, snaLuRtmBoundary3=snaLuRtmBoundary3, snaNodeOperXidFormat=snaNodeOperXidFormat, snaLuSessnSenseData=snaLuSessnSenseData, snanauCompliance=snanauCompliance, snaNodeAdminTable=snaNodeAdminTable, snaLuSessnMaxRcvRuSize=snaLuSessnMaxRcvRuSize, snaSessionGroup=snaSessionGroup, snaLuOperDepType=snaLuOperDepType, snaNodeLinkAdminRowStatus=snaNodeLinkAdminRowStatus, snaLuRtmDef=snaLuRtmDef, snaNodeAdminHostDescription=snaNodeAdminHostDescription, snaLuRtmCounter2=snaLuRtmCounter2, snaNode=snaNode, snaLuAdminTerm=snaLuAdminTerm, snaNodeOperIdNum=snaNodeOperIdNum, snanauCompliances=snanauCompliances, snaNodeLinkAdminIndex=snaNodeLinkAdminIndex, snaNodeOperEntry=snaNodeOperEntry, snaNodeOperLastStateChange=snaNodeOperLastStateChange, snaLuRtmLastRspTime=snaLuRtmLastRspTime, snaNodeOperHostDescription=snaNodeOperHostDescription, snaPu20StatsReceivedBytes=snaPu20StatsReceivedBytes, snaNodeLinkAdminMaxPiu=snaNodeLinkAdminMaxPiu, snaLuAdminName=snaLuAdminName, snaNodeOperState=snaNodeOperState, snaLuRtmStateTime=snaLuRtmStateTime, snaNodeOperLuTermDefault=snaNodeOperLuTermDefault, snaPu20StatsSentNegativeResps=snaPu20StatsSentNegativeResps, snaLuRtmCounter1=snaLuRtmCounter1, snanauGroups=snanauGroups, snaLuSessnAdminState=snaLuSessnAdminState, snaLuAdminDisplayModel=snaLuAdminDisplayModel, snaLuSessnStatsSentRus=snaLuSessnStatsSentRus, snaNodeAdminLuTermDefault=snaNodeAdminLuTermDefault, snaLuSessnEntry=snaLuSessnEntry, snaNodeActFailTrap=snaNodeActFailTrap, snaLuRtmBoundary2=snaLuRtmBoundary2, snaNodeAdminMaxLu=snaNodeAdminMaxLu, snanauObjects=snanauObjects, snaLuSessnLocalApplName=snaLuSessnLocalApplName, snaLuRtmCounter4=snaLuRtmCounter4, snaLuRtmState=snaLuRtmState, snaNodeLinkOperEntry=snaNodeLinkOperEntry, snaNodeOperEnablingMethod=snaNodeOperEnablingMethod, snaNodeLinkOperTable=snaNodeLinkOperTable, snaLuRtmOverFlows=snaLuRtmOverFlows, snaPu20StatsReceivedNegativeResps=snaPu20StatsReceivedNegativeResps, snanauMIB=snanauMIB, snaLuSessnStatsSentBytes=snaLuSessnStatsSentBytes, PYSNMP_MODULE_ID=snanauMIB, snaPu20StatsActLus=snaPu20StatsActLus)
