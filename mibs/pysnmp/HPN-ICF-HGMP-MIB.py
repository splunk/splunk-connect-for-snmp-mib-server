#
# PySNMP MIB module HPN-ICF-HGMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-HGMP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
hpnicfRhw, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfRhw")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibIdentifier, ObjectIdentity, Bits, Gauge32, Counter32, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, Integer32, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "Bits", "Gauge32", "Counter32", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "Integer32", "Unsigned32", "NotificationType")
DisplayString, RowStatus, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "MacAddress", "TextualConvention")
hpnicfHgmp = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7))
if mibBuilder.loadTexts: hpnicfHgmp.setLastUpdated('200512061452Z')
if mibBuilder.loadTexts: hpnicfHgmp.setOrganization('')
hpnicfClusterObject = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1))
if mibBuilder.loadTexts: hpnicfClusterObject.setStatus('current')
hpnicfhgmpSetVLANSecurity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noSecurity", 0), ("security", 1))).clone('security')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpSetVLANSecurity.setStatus('current')
hpnicfhgmpHandShakeInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpHandShakeInterval.setStatus('current')
hpnicfhgmpHandShakeHoldtime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpHandShakeHoldtime.setStatus('current')
hpnicfhgmpGrpMemberTableChange = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberTableChange.setStatus('current')
hpnicfhgmpMemberDisconRate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpMemberDisconRate.setStatus('current')
hpnicfhgmpCmdLanswitchFlag = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpCmdLanswitchFlag.setStatus('current')
hpnicfhgmpCmdClusterName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpCmdClusterName.setStatus('current')
hpnicfhgmpMngPriIpSegCMIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpMngPriIpSegCMIP.setStatus('current')
hpnicfhgmpMngPriIpMask = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpMngPriIpMask.setStatus('current')
hpnicfhgmpFtpServer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpFtpServer.setStatus('current')
hpnicfhgmpTftpServer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpTftpServer.setStatus('current')
hpnicfhgmpSnmpHost = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpSnmpHost.setStatus('current')
hpnicfhgmpLogHost = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpLogHost.setStatus('current')
hpnicfhgmpGrpMemberTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14), )
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberTable.setStatus('current')
hpnicfhgmpGrpMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpGrpMemberDeviceId"))
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberEntry.setStatus('current')
hpnicfhgmpGrpMemberDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberDeviceId.setStatus('current')
hpnicfhgmpGrpMemberSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberSerial.setStatus('current')
hpnicfhgmpGrpMemberIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberIpAddr.setStatus('current')
hpnicfhgmpGrpMemberName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberName.setStatus('current')
hpnicfhgmpGrpMemberPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberPassword.setStatus('current')
hpnicfhgmpGrpMemberPlatform = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberPlatform.setStatus('current')
hpnicfhgmpGrpMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("fault", 1))).clone('fault')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberStatus.setStatus('current')
hpnicfhgmpGrpMemberDisconCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberDisconCount.setStatus('current')
hpnicfhgmpGrpMemberEnrollTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberEnrollTime.setStatus('current')
hpnicfhgmpGrpMemberOperate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 14, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpGrpMemberOperate.setStatus('current')
hpnicfhgmpMemberResetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 15), )
if mibBuilder.loadTexts: hpnicfhgmpMemberResetTable.setStatus('current')
hpnicfhgmpMemberResetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 15, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpMemberResetMAC"))
if mibBuilder.loadTexts: hpnicfhgmpMemberResetEntry.setStatus('current')
hpnicfhgmpMemberResetMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 15, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpMemberResetMAC.setStatus('current')
hpnicfhgmpMemberEraseflash = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 65535))).clone(namedValues=NamedValues(("noErase", 0), ("erase", 1), ("cannotget", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpMemberEraseflash.setStatus('current')
hpnicfhgmpEventsV2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 0))
if mibBuilder.loadTexts: hpnicfhgmpEventsV2.setStatus('current')
hpnicfhgmpMemberfailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 0, 1)).setObjects(("HPN-ICF-HGMP-MIB", "hpnicfhgmpGrpMemberDeviceId"))
if mibBuilder.loadTexts: hpnicfhgmpMemberfailure.setStatus('current')
hpnicfhgmpMemberRecover = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 0, 2)).setObjects(("HPN-ICF-HGMP-MIB", "hpnicfhgmpGrpMemberDeviceId"))
if mibBuilder.loadTexts: hpnicfhgmpMemberRecover.setStatus('current')
hpnicfhgmpMemberStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 0, 3)).setObjects(("HPN-ICF-HGMP-MIB", "hpnicfhgmpGrpMemberDeviceId"), ("HPN-ICF-HGMP-MIB", "hpnicfhgmpNTDPCacheClusterRole"))
if mibBuilder.loadTexts: hpnicfhgmpMemberStatusChange.setStatus('current')
hpnicfhgmpNetTopChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 0, 4))
if mibBuilder.loadTexts: hpnicfhgmpNetTopChange.setStatus('current')
hpnicfhgmpClusterRole = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 16, 17))).clone(namedValues=NamedValues(("roleCMDSW", 1), ("roleMEMBERSW", 2), ("roleBAKSW", 3), ("roleCASW", 16), ("roleUNISW", 17))).clone('roleUNISW')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpClusterRole.setStatus('current')
hpnicfhgmpClusterMaxPoolNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpClusterMaxPoolNum.setStatus('current')
hpnicfhgmpClusterCmdSwMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpClusterCmdSwMac.setStatus('current')
hpnicfhgmpRun = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpRun.setStatus('current')
hpnicfhgmpProtocolMac = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 22))
hpnicfhgmpClusterProtocolMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 22, 1), MacAddress().clone(hexValue="0180C200000A")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpClusterProtocolMac.setStatus('current')
hpnicfhgmpTopologyManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23))
hpnicfhgmpWhitelistTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 1), )
if mibBuilder.loadTexts: hpnicfhgmpWhitelistTable.setStatus('current')
hpnicfhgmpWhitelistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 1, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpWhitelistDeviceId"))
if mibBuilder.loadTexts: hpnicfhgmpWhitelistEntry.setStatus('current')
hpnicfhgmpWhitelistDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10))
if mibBuilder.loadTexts: hpnicfhgmpWhitelistDeviceId.setStatus('current')
hpnicfhgmpWhitelistSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2047), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpWhitelistSerial.setStatus('current')
hpnicfhgmpWhitelistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfhgmpWhitelistRowStatus.setStatus('current')
hpnicfhgmpWhitelistNbTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 2), )
if mibBuilder.loadTexts: hpnicfhgmpWhitelistNbTable.setStatus('current')
hpnicfhgmpWhitelistNbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 2, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpWhitelistDeviceId"), (0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpWhitelistNbIndex"))
if mibBuilder.loadTexts: hpnicfhgmpWhitelistNbEntry.setStatus('current')
hpnicfhgmpWhitelistNbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfhgmpWhitelistNbIndex.setStatus('current')
hpnicfhgmpWhitelistNbDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpWhitelistNbDeviceId.setStatus('current')
hpnicfhgmpWhitelistPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpWhitelistPortName.setStatus('current')
hpnicfhgmpWhitelistNbPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpWhitelistNbPortName.setStatus('current')
hpnicfhgmpBlacklistTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 3), )
if mibBuilder.loadTexts: hpnicfhgmpBlacklistTable.setStatus('current')
hpnicfhgmpBlacklistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 3, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpBlacklistDeviceId"))
if mibBuilder.loadTexts: hpnicfhgmpBlacklistEntry.setStatus('current')
hpnicfhgmpBlacklistDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10))
if mibBuilder.loadTexts: hpnicfhgmpBlacklistDeviceId.setStatus('current')
hpnicfhgmpBlacklistAccessDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpBlacklistAccessDeviceId.setStatus('current')
hpnicfhgmpBlacklistAccessPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpBlacklistAccessPortName.setStatus('current')
hpnicfhgmpBlacklistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 23, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfhgmpBlacklistRowStatus.setStatus('current')
hpnicfhgmpMemberPriPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 24), )
if mibBuilder.loadTexts: hpnicfhgmpMemberPriPortTable.setStatus('current')
hpnicfhgmpMemberPriPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 24, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpMemberDevId"), (0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpMemberPriPortProto"))
if mibBuilder.loadTexts: hpnicfhgmpMemberPriPortEntry.setStatus('current')
hpnicfhgmpMemberDevId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 24, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpMemberDevId.setStatus('current')
hpnicfhgmpMemberPriPortProto = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 24, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hpnicfhgmpMemberPriPortProto.setStatus('current')
hpnicfhgmpMemberPriPortProtoDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 24, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpMemberPriPortProtoDescr.setStatus('current')
hpnicfhgmpMemberPriPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 1, 24, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpMemberPriPortNum.setStatus('current')
hpnicfStackObject = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2))
if mibBuilder.loadTexts: hpnicfStackObject.setStatus('current')
hpnicfhgmpStackMemberTableChange = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberTableChange.setStatus('current')
hpnicfhgmpStackMemberDisconRate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberDisconRate.setStatus('current')
hpnicfhgmpMainLanswitchFlag = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpMainLanswitchFlag.setStatus('current')
hpnicfhgmpStackIpPoolStartIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpStackIpPoolStartIP.setStatus('current')
hpnicfhgmpStackIpPoolLength = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpStackIpPoolLength.setStatus('current')
hpnicfhgmpStackIpPoolMask = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 10), IpAddress().clone(hexValue="FFFF0000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpStackIpPoolMask.setStatus('current')
hpnicfhgmpStackMemberTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6), )
if mibBuilder.loadTexts: hpnicfhgmpStackMemberTable.setStatus('current')
hpnicfhgmpStackMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpStackMemberDeviceId"))
if mibBuilder.loadTexts: hpnicfhgmpStackMemberEntry.setStatus('current')
hpnicfhgmpStackMemberDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberDeviceId.setStatus('current')
hpnicfhgmpStackMemberSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberSerial.setStatus('current')
hpnicfhgmpStackMemberIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberIpAddr.setStatus('current')
hpnicfhgmpStackMemberName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberName.setStatus('current')
hpnicfhgmpStackMemberPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberPassword.setStatus('current')
hpnicfhgmpStackMemberPlatform = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberPlatform.setStatus('current')
hpnicfhgmpStackMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("fault", 1))).clone('fault')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberStatus.setStatus('current')
hpnicfhgmpStackMemberDisconCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberDisconCount.setStatus('current')
hpnicfhgmpStackMemberEnrollTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMemberEnrollTime.setStatus('current')
hpnicfhgmpStackRole = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 16, 17))).clone(namedValues=NamedValues(("roleCMDSW", 1), ("roleMEMBERSW", 2), ("roleBAKSW", 3), ("roleCASW", 16), ("roleUNISW", 17))).clone('roleUNISW')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackRole.setStatus('current')
hpnicfhgmpStackMaxPoolNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMaxPoolNum.setStatus('current')
hpnicfhgmpStackMainSwMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpStackMainSwMac.setStatus('current')
hpnicfNDPObject = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5))
if mibBuilder.loadTexts: hpnicfNDPObject.setStatus('current')
hpnicfNDPStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNDPStatus.setStatus('current')
hpnicfNDPHelloTimer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 254)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNDPHelloTimer.setStatus('current')
hpnicfNDPAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNDPAgingTime.setStatus('current')
hpnicfNDPChange = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPChange.setStatus('current')
hpnicfNDPPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 5), )
if mibBuilder.loadTexts: hpnicfNDPPortTable.setStatus('current')
hpnicfNDPPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 5, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfNDPIfIndex"))
if mibBuilder.loadTexts: hpnicfNDPPortEntry.setStatus('current')
hpnicfNDPIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPIfIndex.setStatus('current')
hpnicfNDPPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNDPPortStatus.setStatus('current')
hpnicfNDPPortNbTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6), )
if mibBuilder.loadTexts: hpnicfNDPPortNbTable.setStatus('current')
hpnicfNDPPortNbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfNDPIfIndex"), (0, "HPN-ICF-HGMP-MIB", "hpnicfNDPPortNbDeviceId"), (0, "HPN-ICF-HGMP-MIB", "hpnicfNDPPortNbPortName"))
if mibBuilder.loadTexts: hpnicfNDPPortNbEntry.setStatus('current')
hpnicfNDPPortNbDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPPortNbDeviceId.setStatus('current')
hpnicfNDPPortNbPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPPortNbPortName.setStatus('current')
hpnicfNDPPortNbDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPPortNbDeviceName.setStatus('current')
hpnicfNDPPortNbPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("auto", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPPortNbPortMode.setStatus('current')
hpnicfNDPPortNbProductVer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPPortNbProductVer.setStatus('current')
hpnicfNDPPortNbHardVer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPPortNbHardVer.setStatus('current')
hpnicfNDPPortNbBootromVer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPPortNbBootromVer.setStatus('current')
hpnicfNDPPortNbSoftVer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPPortNbSoftVer.setStatus('current')
hpnicfNDPPortNbAgingtime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 5, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNDPPortNbAgingtime.setStatus('current')
hpnicfNTDPObject = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4))
if mibBuilder.loadTexts: hpnicfNTDPObject.setStatus('current')
hpnicfhgmpNTDPCollectTopTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCollectTopTime.setStatus('current')
hpnicfhgmpNTDPHopRange = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpNTDPHopRange.setStatus('current')
hpnicfhgmpNTDPRun = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpNTDPRun.setStatus('current')
hpnicfhgmpNTDPPortDelay = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpNTDPPortDelay.setStatus('current')
hpnicfhgmpNTDPHopDelay = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpNTDPHopDelay.setStatus('current')
hpnicfhgmpNTDPLastTopCollectDuration = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPLastTopCollectDuration.setStatus('current')
hpnicfhgmpNTDPCacheChange = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheChange.setStatus('current')
hpnicfhgmpNTDPTOPTableChange = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTOPTableChange.setStatus('current')
hpnicfhgmpNTDPInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 9), )
if mibBuilder.loadTexts: hpnicfhgmpNTDPInterfaceTable.setStatus('current')
hpnicfhgmpNTDPInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 9, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpNTDPInterfaceIfIndex"))
if mibBuilder.loadTexts: hpnicfhgmpNTDPInterfaceEntry.setStatus('current')
hpnicfhgmpNTDPInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPInterfaceIfIndex.setStatus('current')
hpnicfhgmpNTDPInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfhgmpNTDPInterfaceEnable.setStatus('current')
hpnicfhgmpNTDPCacheTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10), )
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheTable.setStatus('current')
hpnicfhgmpNTDPCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpNTDPCacheHashIndex"), (0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpNTDPCacheDeviceID"))
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheEntry.setStatus('current')
hpnicfhgmpNTDPCacheHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheHashIndex.setStatus('current')
hpnicfhgmpNTDPCacheDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheDeviceID.setStatus('current')
hpnicfhgmpNTDPCacheClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheClusterName.setStatus('current')
hpnicfhgmpNTDPCacheClusterRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 16, 17))).clone(namedValues=NamedValues(("roleCOSW", 1), ("roleMSW", 2), ("roleBKSW", 3), ("roleCASW", 16), ("roleUNISW", 17))).clone(17)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheClusterRole.setStatus('current')
hpnicfhgmpNTDPCacheCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1, 5), Integer32().clone(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheCapabilities.setStatus('current')
hpnicfhgmpNTDPCacheVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheVersion.setStatus('current')
hpnicfhgmpNTDPCachePlatform = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCachePlatform.setStatus('current')
hpnicfhgmpNTDPCacheMngVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1, 8), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheMngVLAN.setStatus('current')
hpnicfhgmpNTDPCacheHop = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 10, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPCacheHop.setStatus('current')
hpnicfhgmpNTDPTopTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11), )
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopTable.setStatus('current')
hpnicfhgmpNTDPTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1), ).setIndexNames((0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpNTDPTopHashIndex"), (0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpNTDPTopEdgeStartDevID"), (0, "HPN-ICF-HGMP-MIB", "hpnicfhgmpNTDPTopEdgeIndex"))
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopEntry.setStatus('current')
hpnicfhgmpNTDPTopHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopHashIndex.setStatus('current')
hpnicfhgmpNTDPTopEdgeStartDevID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopEdgeStartDevID.setStatus('current')
hpnicfhgmpNTDPTopEdgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopEdgeIndex.setStatus('current')
hpnicfhgmpNTDPTopEdgeEndDevID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopEdgeEndDevID.setStatus('current')
hpnicfhgmpNTDPTopEdgeStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopEdgeStartPort.setStatus('current')
hpnicfhgmpNTDPTopEdgeStartPortFullDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("half", 0), ("full", 1))).clone('half')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopEdgeStartPortFullDuplex.setStatus('current')
hpnicfhgmpNTDPTopEdgeStartPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopEdgeStartPortSpeed.setStatus('current')
hpnicfhgmpNTDPTopEdgeEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopEdgeEndPort.setStatus('current')
hpnicfhgmpNTDPTopLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 4, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("blocking", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfhgmpNTDPTopLinkStatus.setStatus('current')
hpnicfhgmpStackEventsV2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 0))
if mibBuilder.loadTexts: hpnicfhgmpStackEventsV2.setStatus('current')
hpnicfhgmpStackMemberfailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 0, 1)).setObjects(("HPN-ICF-HGMP-MIB", "hpnicfhgmpStackMemberDeviceId"))
if mibBuilder.loadTexts: hpnicfhgmpStackMemberfailure.setStatus('current')
hpnicfhgmpStackMemberRecover = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 0, 2)).setObjects(("HPN-ICF-HGMP-MIB", "hpnicfhgmpStackMemberDeviceId"))
if mibBuilder.loadTexts: hpnicfhgmpStackMemberRecover.setStatus('current')
hpnicfhgmpStackMemberStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 7, 2, 0, 3)).setObjects(("HPN-ICF-HGMP-MIB", "hpnicfhgmpStackMemberDeviceId"), ("HPN-ICF-HGMP-MIB", "hpnicfhgmpNTDPCacheClusterRole"))
if mibBuilder.loadTexts: hpnicfhgmpStackMemberStatusChange.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-HGMP-MIB", hpnicfhgmpGrpMemberEntry=hpnicfhgmpGrpMemberEntry, hpnicfhgmpStackMemberTable=hpnicfhgmpStackMemberTable, hpnicfNDPHelloTimer=hpnicfNDPHelloTimer, hpnicfhgmpNTDPCacheEntry=hpnicfhgmpNTDPCacheEntry, hpnicfhgmpSnmpHost=hpnicfhgmpSnmpHost, hpnicfhgmpBlacklistEntry=hpnicfhgmpBlacklistEntry, hpnicfNDPIfIndex=hpnicfNDPIfIndex, hpnicfhgmpNTDPTopEdgeStartDevID=hpnicfhgmpNTDPTopEdgeStartDevID, hpnicfNDPPortNbSoftVer=hpnicfNDPPortNbSoftVer, hpnicfhgmpMemberEraseflash=hpnicfhgmpMemberEraseflash, hpnicfhgmpNTDPCacheMngVLAN=hpnicfhgmpNTDPCacheMngVLAN, hpnicfhgmpNTDPCollectTopTime=hpnicfhgmpNTDPCollectTopTime, hpnicfhgmpNTDPTopEdgeStartPortFullDuplex=hpnicfhgmpNTDPTopEdgeStartPortFullDuplex, hpnicfNDPAgingTime=hpnicfNDPAgingTime, hpnicfhgmpMngPriIpMask=hpnicfhgmpMngPriIpMask, hpnicfhgmpWhitelistDeviceId=hpnicfhgmpWhitelistDeviceId, hpnicfhgmpStackMemberEntry=hpnicfhgmpStackMemberEntry, hpnicfhgmpNTDPInterfaceEnable=hpnicfhgmpNTDPInterfaceEnable, hpnicfNDPPortNbHardVer=hpnicfNDPPortNbHardVer, hpnicfNDPPortNbDeviceId=hpnicfNDPPortNbDeviceId, hpnicfNDPPortNbBootromVer=hpnicfNDPPortNbBootromVer, hpnicfhgmpWhitelistRowStatus=hpnicfhgmpWhitelistRowStatus, hpnicfhgmpWhitelistNbEntry=hpnicfhgmpWhitelistNbEntry, hpnicfhgmpNTDPLastTopCollectDuration=hpnicfhgmpNTDPLastTopCollectDuration, hpnicfhgmpWhitelistNbPortName=hpnicfhgmpWhitelistNbPortName, hpnicfhgmpStackMemberDeviceId=hpnicfhgmpStackMemberDeviceId, hpnicfhgmpNTDPCachePlatform=hpnicfhgmpNTDPCachePlatform, hpnicfNDPChange=hpnicfNDPChange, hpnicfhgmpNTDPInterfaceEntry=hpnicfhgmpNTDPInterfaceEntry, hpnicfhgmpNTDPCacheDeviceID=hpnicfhgmpNTDPCacheDeviceID, hpnicfhgmpProtocolMac=hpnicfhgmpProtocolMac, PYSNMP_MODULE_ID=hpnicfHgmp, hpnicfhgmpClusterRole=hpnicfhgmpClusterRole, hpnicfhgmpNTDPCacheChange=hpnicfhgmpNTDPCacheChange, hpnicfhgmpStackMemberIpAddr=hpnicfhgmpStackMemberIpAddr, hpnicfhgmpStackRole=hpnicfhgmpStackRole, hpnicfhgmpClusterProtocolMac=hpnicfhgmpClusterProtocolMac, hpnicfhgmpWhitelistNbIndex=hpnicfhgmpWhitelistNbIndex, hpnicfhgmpStackMemberPlatform=hpnicfhgmpStackMemberPlatform, hpnicfNDPStatus=hpnicfNDPStatus, hpnicfhgmpFtpServer=hpnicfhgmpFtpServer, hpnicfhgmpStackMemberDisconRate=hpnicfhgmpStackMemberDisconRate, hpnicfhgmpMemberPriPortProtoDescr=hpnicfhgmpMemberPriPortProtoDescr, hpnicfhgmpStackMemberSerial=hpnicfhgmpStackMemberSerial, hpnicfhgmpStackMemberDisconCount=hpnicfhgmpStackMemberDisconCount, hpnicfNDPPortTable=hpnicfNDPPortTable, hpnicfhgmpTopologyManagement=hpnicfhgmpTopologyManagement, hpnicfhgmpNTDPHopDelay=hpnicfhgmpNTDPHopDelay, hpnicfhgmpStackIpPoolStartIP=hpnicfhgmpStackIpPoolStartIP, hpnicfhgmpWhitelistPortName=hpnicfhgmpWhitelistPortName, hpnicfhgmpMemberPriPortNum=hpnicfhgmpMemberPriPortNum, hpnicfhgmpWhitelistSerial=hpnicfhgmpWhitelistSerial, hpnicfhgmpGrpMemberSerial=hpnicfhgmpGrpMemberSerial, hpnicfhgmpSetVLANSecurity=hpnicfhgmpSetVLANSecurity, hpnicfhgmpBlacklistAccessDeviceId=hpnicfhgmpBlacklistAccessDeviceId, hpnicfhgmpStackMaxPoolNum=hpnicfhgmpStackMaxPoolNum, hpnicfhgmpNTDPCacheTable=hpnicfhgmpNTDPCacheTable, hpnicfhgmpNTDPRun=hpnicfhgmpNTDPRun, hpnicfhgmpEventsV2=hpnicfhgmpEventsV2, hpnicfhgmpStackMemberStatusChange=hpnicfhgmpStackMemberStatusChange, hpnicfhgmpMemberPriPortEntry=hpnicfhgmpMemberPriPortEntry, hpnicfhgmpMemberPriPortTable=hpnicfhgmpMemberPriPortTable, hpnicfhgmpMngPriIpSegCMIP=hpnicfhgmpMngPriIpSegCMIP, hpnicfNDPPortEntry=hpnicfNDPPortEntry, hpnicfhgmpTftpServer=hpnicfhgmpTftpServer, hpnicfhgmpGrpMemberOperate=hpnicfhgmpGrpMemberOperate, hpnicfhgmpNTDPCacheHashIndex=hpnicfhgmpNTDPCacheHashIndex, hpnicfhgmpNTDPTopEdgeEndPort=hpnicfhgmpNTDPTopEdgeEndPort, hpnicfhgmpRun=hpnicfhgmpRun, hpnicfhgmpNTDPTopEdgeIndex=hpnicfhgmpNTDPTopEdgeIndex, hpnicfhgmpGrpMemberPlatform=hpnicfhgmpGrpMemberPlatform, hpnicfhgmpNTDPInterfaceIfIndex=hpnicfhgmpNTDPInterfaceIfIndex, hpnicfhgmpMemberfailure=hpnicfhgmpMemberfailure, hpnicfhgmpBlacklistTable=hpnicfhgmpBlacklistTable, hpnicfNDPPortNbPortName=hpnicfNDPPortNbPortName, hpnicfhgmpStackMainSwMac=hpnicfhgmpStackMainSwMac, hpnicfhgmpGrpMemberTable=hpnicfhgmpGrpMemberTable, hpnicfhgmpStackMemberRecover=hpnicfhgmpStackMemberRecover, hpnicfhgmpStackMemberName=hpnicfhgmpStackMemberName, hpnicfhgmpNTDPCacheHop=hpnicfhgmpNTDPCacheHop, hpnicfhgmpNTDPPortDelay=hpnicfhgmpNTDPPortDelay, hpnicfhgmpBlacklistDeviceId=hpnicfhgmpBlacklistDeviceId, hpnicfhgmpGrpMemberIpAddr=hpnicfhgmpGrpMemberIpAddr, hpnicfhgmpClusterMaxPoolNum=hpnicfhgmpClusterMaxPoolNum, hpnicfhgmpMemberResetTable=hpnicfhgmpMemberResetTable, hpnicfNTDPObject=hpnicfNTDPObject, hpnicfhgmpStackIpPoolLength=hpnicfhgmpStackIpPoolLength, hpnicfNDPPortNbTable=hpnicfNDPPortNbTable, hpnicfNDPPortNbDeviceName=hpnicfNDPPortNbDeviceName, hpnicfNDPObject=hpnicfNDPObject, hpnicfhgmpStackMemberfailure=hpnicfhgmpStackMemberfailure, hpnicfHgmp=hpnicfHgmp, hpnicfhgmpMemberDevId=hpnicfhgmpMemberDevId, hpnicfhgmpBlacklistRowStatus=hpnicfhgmpBlacklistRowStatus, hpnicfNDPPortNbPortMode=hpnicfNDPPortNbPortMode, hpnicfhgmpGrpMemberDeviceId=hpnicfhgmpGrpMemberDeviceId, hpnicfhgmpStackMemberTableChange=hpnicfhgmpStackMemberTableChange, hpnicfhgmpStackMemberPassword=hpnicfhgmpStackMemberPassword, hpnicfhgmpStackEventsV2=hpnicfhgmpStackEventsV2, hpnicfhgmpClusterCmdSwMac=hpnicfhgmpClusterCmdSwMac, hpnicfhgmpMemberPriPortProto=hpnicfhgmpMemberPriPortProto, hpnicfhgmpWhitelistTable=hpnicfhgmpWhitelistTable, hpnicfhgmpStackIpPoolMask=hpnicfhgmpStackIpPoolMask, hpnicfhgmpNTDPCacheClusterRole=hpnicfhgmpNTDPCacheClusterRole, hpnicfhgmpStackMemberEnrollTime=hpnicfhgmpStackMemberEnrollTime, hpnicfhgmpNTDPCacheVersion=hpnicfhgmpNTDPCacheVersion, hpnicfhgmpGrpMemberEnrollTime=hpnicfhgmpGrpMemberEnrollTime, hpnicfhgmpNTDPTopEdgeStartPort=hpnicfhgmpNTDPTopEdgeStartPort, hpnicfhgmpNetTopChange=hpnicfhgmpNetTopChange, hpnicfhgmpNTDPInterfaceTable=hpnicfhgmpNTDPInterfaceTable, hpnicfNDPPortNbAgingtime=hpnicfNDPPortNbAgingtime, hpnicfhgmpNTDPCacheCapabilities=hpnicfhgmpNTDPCacheCapabilities, hpnicfhgmpMemberResetMAC=hpnicfhgmpMemberResetMAC, hpnicfhgmpMainLanswitchFlag=hpnicfhgmpMainLanswitchFlag, hpnicfhgmpWhitelistNbTable=hpnicfhgmpWhitelistNbTable, hpnicfhgmpGrpMemberStatus=hpnicfhgmpGrpMemberStatus, hpnicfhgmpWhitelistNbDeviceId=hpnicfhgmpWhitelistNbDeviceId, hpnicfhgmpNTDPTopTable=hpnicfhgmpNTDPTopTable, hpnicfhgmpWhitelistEntry=hpnicfhgmpWhitelistEntry, hpnicfhgmpGrpMemberName=hpnicfhgmpGrpMemberName, hpnicfhgmpCmdLanswitchFlag=hpnicfhgmpCmdLanswitchFlag, hpnicfhgmpStackMemberStatus=hpnicfhgmpStackMemberStatus, hpnicfNDPPortNbEntry=hpnicfNDPPortNbEntry, hpnicfhgmpLogHost=hpnicfhgmpLogHost, hpnicfhgmpNTDPTopEdgeStartPortSpeed=hpnicfhgmpNTDPTopEdgeStartPortSpeed, hpnicfhgmpMemberStatusChange=hpnicfhgmpMemberStatusChange, hpnicfStackObject=hpnicfStackObject, hpnicfhgmpMemberResetEntry=hpnicfhgmpMemberResetEntry, hpnicfhgmpGrpMemberDisconCount=hpnicfhgmpGrpMemberDisconCount, hpnicfhgmpNTDPCacheClusterName=hpnicfhgmpNTDPCacheClusterName, hpnicfhgmpMemberRecover=hpnicfhgmpMemberRecover, hpnicfhgmpNTDPTopLinkStatus=hpnicfhgmpNTDPTopLinkStatus, hpnicfNDPPortStatus=hpnicfNDPPortStatus, hpnicfhgmpGrpMemberPassword=hpnicfhgmpGrpMemberPassword, hpnicfhgmpNTDPTOPTableChange=hpnicfhgmpNTDPTOPTableChange, hpnicfhgmpNTDPTopHashIndex=hpnicfhgmpNTDPTopHashIndex, hpnicfhgmpNTDPTopEdgeEndDevID=hpnicfhgmpNTDPTopEdgeEndDevID, hpnicfhgmpBlacklistAccessPortName=hpnicfhgmpBlacklistAccessPortName, hpnicfNDPPortNbProductVer=hpnicfNDPPortNbProductVer, hpnicfhgmpHandShakeInterval=hpnicfhgmpHandShakeInterval, hpnicfhgmpGrpMemberTableChange=hpnicfhgmpGrpMemberTableChange, hpnicfhgmpNTDPHopRange=hpnicfhgmpNTDPHopRange, hpnicfhgmpNTDPTopEntry=hpnicfhgmpNTDPTopEntry, hpnicfClusterObject=hpnicfClusterObject, hpnicfhgmpMemberDisconRate=hpnicfhgmpMemberDisconRate, hpnicfhgmpHandShakeHoldtime=hpnicfhgmpHandShakeHoldtime, hpnicfhgmpCmdClusterName=hpnicfhgmpCmdClusterName)
