#
# PySNMP MIB module CISCO-PROXY-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-PROXY-CONTROL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:53:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
cCallHistoryIndex, = mibBuilder.importSymbols("CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
CvcGUid, = mibBuilder.importSymbols("CISCO-VOICE-COMMON-DIAL-CONTROL-MIB", "CvcGUid")
AbsoluteCounter32, callActiveSetupTime, callActiveIndex = mibBuilder.importSymbols("DIAL-CONTROL-MIB", "AbsoluteCounter32", "callActiveSetupTime", "callActiveIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, MibIdentifier, iso, NotificationType, ObjectIdentity, Counter64, TimeTicks, Counter32, Gauge32, Integer32, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "MibIdentifier", "iso", "NotificationType", "ObjectIdentity", "Counter64", "TimeTicks", "Counter32", "Gauge32", "Integer32", "Bits", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoProxyControlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 57))
ciscoProxyControlMIB.setRevisions(('2009-02-11 00:00', '2006-03-12 00:00', '2005-03-06 00:00', '2000-02-04 00:00',))
if mibBuilder.loadTexts: ciscoProxyControlMIB.setLastUpdated('200902110000Z')
if mibBuilder.loadTexts: ciscoProxyControlMIB.setOrganization('Cisco Systems, Inc.')
ciscoProxyControlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 57, 1))
cProxyCallActive = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1))
cProxyCallHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2))
class CProxyEndptType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("other", 0), ("proxy", 1), ("gateway", 2))

class CProxyAudioCodec(TextualConvention, Integer32):
    reference = '[1] RFC 3267: For introduction about GSM AMR-NB codec, section 3.1 [2] RFC 3952: For introduction about iLBC codec, section 2 [3] iSAC Codec Description Document from GIPS'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))
    namedValues = NamedValues(("other", 0), ("nonStandard", 1), ("g711Alawr64k", 2), ("g711Alawr56k", 3), ("g711Ulawr64k", 4), ("g711Ulawr56k", 5), ("g722r64k", 6), ("g722r56k", 7), ("g722r48k", 8), ("g7231", 9), ("g728", 10), ("g729", 11), ("g729AnnexA", 12), ("is11172", 13), ("is13818", 14), ("g729AnnexB", 15), ("g729AnnexAB", 16), ("g729AnnexC", 17), ("gsmFullRate", 18), ("gsmHalfRate", 19), ("gsmEnhancedFullRate", 20), ("gsmAmrNb", 21), ("iLBC", 22), ("iSAC", 23))

class CProxyVideoCodec(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 0), ("nonStandard", 1), ("h261", 2), ("h262", 3), ("h263", 4), ("is11172", 5))

cProxyCallActiveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1), )
if mibBuilder.loadTexts: cProxyCallActiveTable.setStatus('current')
cProxyCallActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: cProxyCallActiveEntry.setStatus('current')
cProxyCallActiveConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveConnectionId.setStatus('current')
cProxyCallActiveRemoteIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveRemoteIPAddress.setStatus('current')
cProxyCallActiveAudioUDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveAudioUDPPort.setStatus('current')
cProxyCallActiveVideoUDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveVideoUDPPort.setStatus('current')
cProxyCallActiveT120TCPPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveT120TCPPort1.setStatus('current')
cProxyCallActiveT120TCPPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveT120TCPPort2.setStatus('current')
cProxyCallActiveT120TCPPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveT120TCPPort3.setStatus('current')
cProxyCallActiveT120TCPPort4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveT120TCPPort4.setStatus('current')
cProxyCallActiveEndpointType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 9), CProxyEndptType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveEndpointType.setStatus('current')
cProxyCallActiveEndpointVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveEndpointVendor.setStatus('current')
cProxyCallActiveRequestBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveRequestBandwidth.setStatus('current')
cProxyCallActiveActualBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveActualBandwidth.setStatus('current')
cProxyCallActiveAudioCoderRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 13), CProxyAudioCodec()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveAudioCoderRate.setStatus('current')
cProxyCallActiveVideoCoderRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 14), CProxyVideoCodec()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveVideoCoderRate.setStatus('current')
cProxyCallActiveRxAudioPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 15), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveRxAudioPackets.setStatus('current')
cProxyCallActiveRxAudioBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 16), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveRxAudioBytes.setStatus('current')
cProxyCallActiveTxAudioPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 17), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveTxAudioPackets.setStatus('current')
cProxyCallActiveTxAudioBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 18), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveTxAudioBytes.setStatus('current')
cProxyCallActiveRxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 19), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveRxVideoPackets.setStatus('current')
cProxyCallActiveRxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 20), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveRxVideoBytes.setStatus('current')
cProxyCallActiveTxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 21), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveTxVideoPackets.setStatus('current')
cProxyCallActiveTxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 22), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveTxVideoBytes.setStatus('current')
cProxyCallActiveRxT120Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 23), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveRxT120Packets.setStatus('current')
cProxyCallActiveRxT120Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 24), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveRxT120Bytes.setStatus('current')
cProxyCallActiveTxT120Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 25), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveTxT120Packets.setStatus('current')
cProxyCallActiveTxT120Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 1, 1, 1, 26), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallActiveTxT120Bytes.setStatus('current')
cProxyCallHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1), )
if mibBuilder.loadTexts: cProxyCallHistoryTable.setStatus('current')
cProxyCallHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex"))
if mibBuilder.loadTexts: cProxyCallHistoryEntry.setStatus('current')
cProxyCallHistoryConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryConnectionId.setStatus('current')
cProxyCallHistoryRemoteIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryRemoteIPAddress.setStatus('current')
cProxyCallHistoryAudioUDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryAudioUDPPort.setStatus('current')
cProxyCallHistoryVideoUDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryVideoUDPPort.setStatus('current')
cProxyCallHistoryT120TCPPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryT120TCPPort1.setStatus('current')
cProxyCallHistoryT120TCPPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryT120TCPPort2.setStatus('current')
cProxyCallHistoryT120TCPPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryT120TCPPort3.setStatus('current')
cProxyCallHistoryT120TCPPort4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryT120TCPPort4.setStatus('current')
cProxyCallHistoryEndpointType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 9), CProxyEndptType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryEndpointType.setStatus('current')
cProxyCallHistoryEndpointVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryEndpointVendor.setStatus('current')
cProxyCallHistoryRequestBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryRequestBandwidth.setStatus('current')
cProxyCallHistoryActualBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryActualBandwidth.setStatus('current')
cProxyCallHistoryAudioCoderRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 13), CProxyAudioCodec()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryAudioCoderRate.setStatus('current')
cProxyCallHistoryVideoCoderRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 14), CProxyVideoCodec()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryVideoCoderRate.setStatus('current')
cProxyCallHistoryRxAudioPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 15), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryRxAudioPackets.setStatus('current')
cProxyCallHistoryRxAudioBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 16), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryRxAudioBytes.setStatus('current')
cProxyCallHistoryTxAudioPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 17), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryTxAudioPackets.setStatus('current')
cProxyCallHistoryTxAudioBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 18), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryTxAudioBytes.setStatus('current')
cProxyCallHistoryRxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 19), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryRxVideoPackets.setStatus('current')
cProxyCallHistoryRxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 20), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryRxVideoBytes.setStatus('current')
cProxyCallHistoryTxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 21), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryTxVideoPackets.setStatus('current')
cProxyCallHistoryTxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 22), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryTxVideoBytes.setStatus('current')
cProxyCallHistoryRxT120Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 23), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryRxT120Packets.setStatus('current')
cProxyCallHistoryRxT120Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 24), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryRxT120Bytes.setStatus('current')
cProxyCallHistoryTxT120Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 25), AbsoluteCounter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryTxT120Packets.setStatus('current')
cProxyCallHistoryTxT120Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 57, 1, 2, 1, 1, 26), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cProxyCallHistoryTxT120Bytes.setStatus('current')
ciscoProxyControlMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 57, 2))
ciscoProxyControlMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 57, 2, 0))
ciscoProxyControlMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 57, 3))
ciscoProxyControlMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 57, 3, 1))
ciscoProxyControlMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 57, 3, 2))
ciscoProxyControlMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 57, 3, 1, 1)).setObjects(("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveGroup"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoProxyControlMIBCompliance = ciscoProxyControlMIBCompliance.setStatus('current')
cProxyCallActiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 57, 3, 2, 1)).setObjects(("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveConnectionId"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveRemoteIPAddress"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveAudioUDPPort"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveVideoUDPPort"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveT120TCPPort1"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveT120TCPPort2"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveT120TCPPort3"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveT120TCPPort4"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveEndpointType"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveEndpointVendor"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveRequestBandwidth"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveActualBandwidth"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveAudioCoderRate"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveVideoCoderRate"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveRxAudioPackets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveRxAudioBytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveTxAudioPackets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveTxAudioBytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveRxVideoPackets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveRxVideoBytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveTxVideoPackets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveTxVideoBytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveRxT120Packets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveRxT120Bytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveTxT120Packets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallActiveTxT120Bytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cProxyCallActiveGroup = cProxyCallActiveGroup.setStatus('current')
cProxyCallHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 57, 3, 2, 2)).setObjects(("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryConnectionId"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryRemoteIPAddress"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryAudioUDPPort"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryVideoUDPPort"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryT120TCPPort1"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryT120TCPPort2"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryT120TCPPort3"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryT120TCPPort4"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryEndpointType"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryEndpointVendor"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryRequestBandwidth"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryActualBandwidth"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryAudioCoderRate"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryVideoCoderRate"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryRxAudioPackets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryRxAudioBytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryTxAudioPackets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryTxAudioBytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryRxVideoPackets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryRxVideoBytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryTxVideoPackets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryTxVideoBytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryRxT120Packets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryRxT120Bytes"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryTxT120Packets"), ("CISCO-PROXY-CONTROL-MIB", "cProxyCallHistoryTxT120Bytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cProxyCallHistoryGroup = cProxyCallHistoryGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-PROXY-CONTROL-MIB", cProxyCallActiveRxT120Packets=cProxyCallActiveRxT120Packets, cProxyCallActiveVideoCoderRate=cProxyCallActiveVideoCoderRate, cProxyCallHistoryRxT120Packets=cProxyCallHistoryRxT120Packets, cProxyCallActiveT120TCPPort2=cProxyCallActiveT120TCPPort2, cProxyCallHistoryTxVideoBytes=cProxyCallHistoryTxVideoBytes, ciscoProxyControlMIBGroups=ciscoProxyControlMIBGroups, cProxyCallHistoryT120TCPPort3=cProxyCallHistoryT120TCPPort3, cProxyCallActiveVideoUDPPort=cProxyCallActiveVideoUDPPort, cProxyCallHistoryTxT120Packets=cProxyCallHistoryTxT120Packets, cProxyCallActiveGroup=cProxyCallActiveGroup, cProxyCallHistoryAudioUDPPort=cProxyCallHistoryAudioUDPPort, cProxyCallHistoryTxAudioBytes=cProxyCallHistoryTxAudioBytes, cProxyCallHistoryTxVideoPackets=cProxyCallHistoryTxVideoPackets, cProxyCallActiveEntry=cProxyCallActiveEntry, CProxyVideoCodec=CProxyVideoCodec, cProxyCallActiveTxAudioPackets=cProxyCallActiveTxAudioPackets, cProxyCallActiveTxVideoPackets=cProxyCallActiveTxVideoPackets, cProxyCallHistoryConnectionId=cProxyCallHistoryConnectionId, cProxyCallActiveTxAudioBytes=cProxyCallActiveTxAudioBytes, cProxyCallHistoryRxVideoBytes=cProxyCallHistoryRxVideoBytes, ciscoProxyControlMIBConformance=ciscoProxyControlMIBConformance, ciscoProxyControlMIBCompliance=ciscoProxyControlMIBCompliance, cProxyCallHistoryEndpointType=cProxyCallHistoryEndpointType, cProxyCallActiveRequestBandwidth=cProxyCallActiveRequestBandwidth, cProxyCallHistoryEndpointVendor=cProxyCallHistoryEndpointVendor, cProxyCallActiveActualBandwidth=cProxyCallActiveActualBandwidth, cProxyCallActiveTable=cProxyCallActiveTable, cProxyCallHistoryActualBandwidth=cProxyCallHistoryActualBandwidth, cProxyCallActiveEndpointVendor=cProxyCallActiveEndpointVendor, cProxyCallActiveAudioUDPPort=cProxyCallActiveAudioUDPPort, cProxyCallHistoryRxAudioBytes=cProxyCallHistoryRxAudioBytes, cProxyCallHistoryTxAudioPackets=cProxyCallHistoryTxAudioPackets, cProxyCallHistoryRxAudioPackets=cProxyCallHistoryRxAudioPackets, ciscoProxyControlMIBCompliances=ciscoProxyControlMIBCompliances, cProxyCallHistoryVideoUDPPort=cProxyCallHistoryVideoUDPPort, cProxyCallActive=cProxyCallActive, cProxyCallHistoryRequestBandwidth=cProxyCallHistoryRequestBandwidth, cProxyCallHistoryRxT120Bytes=cProxyCallHistoryRxT120Bytes, cProxyCallActiveAudioCoderRate=cProxyCallActiveAudioCoderRate, CProxyAudioCodec=CProxyAudioCodec, cProxyCallHistoryT120TCPPort2=cProxyCallHistoryT120TCPPort2, cProxyCallActiveRemoteIPAddress=cProxyCallActiveRemoteIPAddress, cProxyCallHistory=cProxyCallHistory, cProxyCallActiveRxAudioBytes=cProxyCallActiveRxAudioBytes, cProxyCallActiveTxT120Bytes=cProxyCallActiveTxT120Bytes, cProxyCallHistoryT120TCPPort1=cProxyCallHistoryT120TCPPort1, cProxyCallActiveT120TCPPort3=cProxyCallActiveT120TCPPort3, cProxyCallHistoryGroup=cProxyCallHistoryGroup, cProxyCallHistoryTxT120Bytes=cProxyCallHistoryTxT120Bytes, PYSNMP_MODULE_ID=ciscoProxyControlMIB, cProxyCallActiveRxVideoBytes=cProxyCallActiveRxVideoBytes, cProxyCallActiveTxT120Packets=cProxyCallActiveTxT120Packets, cProxyCallActiveTxVideoBytes=cProxyCallActiveTxVideoBytes, ciscoProxyControlMIBNotificationPrefix=ciscoProxyControlMIBNotificationPrefix, cProxyCallHistoryT120TCPPort4=cProxyCallHistoryT120TCPPort4, cProxyCallHistoryRxVideoPackets=cProxyCallHistoryRxVideoPackets, ciscoProxyControlMIB=ciscoProxyControlMIB, cProxyCallActiveRxVideoPackets=cProxyCallActiveRxVideoPackets, cProxyCallHistoryEntry=cProxyCallHistoryEntry, cProxyCallActiveEndpointType=cProxyCallActiveEndpointType, cProxyCallHistoryTable=cProxyCallHistoryTable, CProxyEndptType=CProxyEndptType, cProxyCallActiveT120TCPPort4=cProxyCallActiveT120TCPPort4, cProxyCallActiveRxAudioPackets=cProxyCallActiveRxAudioPackets, cProxyCallHistoryRemoteIPAddress=cProxyCallHistoryRemoteIPAddress, cProxyCallActiveRxT120Bytes=cProxyCallActiveRxT120Bytes, cProxyCallHistoryAudioCoderRate=cProxyCallHistoryAudioCoderRate, cProxyCallHistoryVideoCoderRate=cProxyCallHistoryVideoCoderRate, cProxyCallActiveConnectionId=cProxyCallActiveConnectionId, ciscoProxyControlMIBNotifications=ciscoProxyControlMIBNotifications, ciscoProxyControlMIBObjects=ciscoProxyControlMIBObjects, cProxyCallActiveT120TCPPort1=cProxyCallActiveT120TCPPort1)
