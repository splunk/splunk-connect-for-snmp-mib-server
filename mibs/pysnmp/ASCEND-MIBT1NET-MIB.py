#
# PySNMP MIB module ASCEND-MIBT1NET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBT1NET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:12:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, IpAddress, Bits, iso, Counter64, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, ObjectIdentity, Unsigned32, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "Bits", "iso", "Counter64", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "NotificationType", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

mibt1NetworkProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 127))
mibt1NetworkProfileV1 = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 126))
mibt1NetworkProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 127, 1), )
if mibBuilder.loadTexts: mibt1NetworkProfileTable.setStatus('mandatory')
mibt1NetworkProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1), ).setIndexNames((0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfile-Shelf-o"), (0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfile-Slot-o"), (0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfile-Item-o"))
if mibBuilder.loadTexts: mibt1NetworkProfileEntry.setStatus('mandatory')
t1NetworkProfile_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 1), Integer32()).setLabel("t1NetworkProfile-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfile_Shelf_o.setStatus('mandatory')
t1NetworkProfile_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 2), Integer32()).setLabel("t1NetworkProfile-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfile_Slot_o.setStatus('mandatory')
t1NetworkProfile_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 3), Integer32()).setLabel("t1NetworkProfile-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfile_Item_o.setStatus('mandatory')
t1NetworkProfile_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 4), DisplayString()).setLabel("t1NetworkProfile-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_Name.setStatus('mandatory')
t1NetworkProfile_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("t1NetworkProfile-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_PhysicalAddress_Shelf.setStatus('mandatory')
t1NetworkProfile_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("t1NetworkProfile-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_PhysicalAddress_Slot.setStatus('mandatory')
t1NetworkProfile_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 7), Integer32()).setLabel("t1NetworkProfile-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_PhysicalAddress_ItemNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfile-LineInterface-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Enabled.setStatus('mandatory')
t1NetworkProfile_LineInterface_TOnlineType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("nt", 2), ("te", 3), ("numberOfTonline", 4)))).setLabel("t1NetworkProfile-LineInterface-TOnlineType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_TOnlineType.setStatus('mandatory')
t1NetworkProfile_LineInterface_FrameType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("d4", 1), ("esf", 2), ("g703", 3), ("n-2ds", 4)))).setLabel("t1NetworkProfile-LineInterface-FrameType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_FrameType.setStatus('mandatory')
t1NetworkProfile_LineInterface_Encoding = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ami", 1), ("b8zs", 2), ("hdb3", 3), ("none", 4)))).setLabel("t1NetworkProfile-LineInterface-Encoding").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Encoding.setStatus('mandatory')
t1NetworkProfile_LineInterface_ClockSource = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eligible", 1), ("notEligible", 2)))).setLabel("t1NetworkProfile-LineInterface-ClockSource").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ClockSource.setStatus('mandatory')
t1NetworkProfile_LineInterface_ClockPriority = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("highPriority", 2), ("middlePriority", 3), ("lowPriority", 4)))).setLabel("t1NetworkProfile-LineInterface-ClockPriority").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ClockPriority.setStatus('mandatory')
t1NetworkProfile_LineInterface_SignalingMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("inband", 1), ("isdn", 2), ("isdnNfas", 3), ("e1R2Signaling", 5), ("e1KoreanSignaling", 6), ("e1P7Signaling", 7), ("e1ChineseSignaling", 8), ("e1MeteredSignaling", 9), ("e1NoSignaling", 10), ("e1DpnssSignaling", 11), ("e1ArgentinaSignaling", 13), ("e1BrazilSignaling", 14), ("e1PhilippineSignaling", 15), ("e1IndianSignaling", 16), ("e1CzechSignaling", 17), ("e1MalaysiaSignaling", 19), ("e1NewZealandSignaling", 20), ("e1IsraelSignaling", 21), ("e1ThailandSignaling", 22), ("e1KuwaitSignaling", 23), ("e1MexicoSignaling", 24), ("dtmfR2Signaling", 25), ("tunneledPriSignaling", 27), ("inbandFgdInFgdOut", 28), ("inbandFgdInFgcOut", 29), ("inbandFgcInFgcOut", 30), ("inbandFgcInFgdOut", 31), ("e1VietnamSignaling", 32), ("ss7SigTrunk", 33), ("h248DataTrunk", 34)))).setLabel("t1NetworkProfile-LineInterface-SignalingMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_SignalingMode.setStatus('mandatory')
t1NetworkProfile_LineInterface_IsdnEmulationSide = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("te", 1), ("nt", 2)))).setLabel("t1NetworkProfile-LineInterface-IsdnEmulationSide").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_IsdnEmulationSide.setStatus('mandatory')
t1NetworkProfile_LineInterface_RobbedBitMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("winkStart", 1), ("idleStart", 2), ("incW200", 3), ("incW400", 4), ("loopStart", 5), ("groundStart", 6)))).setLabel("t1NetworkProfile-LineInterface-RobbedBitMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_RobbedBitMode.setStatus('mandatory')
t1NetworkProfile_LineInterface_DefaultCallType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("digital", 1), ("voice", 2), ("dnisOrVoice", 3), ("dnisOrDigital", 4), ("voip", 5), ("dnisOrVoip", 6)))).setLabel("t1NetworkProfile-LineInterface-DefaultCallType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_DefaultCallType.setStatus('mandatory')
t1NetworkProfile_LineInterface_SwitchType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 31, 11, 12, 13, 14, 32, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30))).clone(namedValues=NamedValues(("attPri", 1), ("ntiPri", 2), ("globandPri", 3), ("japanPri", 4), ("vn3Pri", 5), ("onetr6Pri", 6), ("net5Pri", 7), ("danishPri", 8), ("australPri", 9), ("natIsdn2Pri", 10), ("taiwanPri", 31), ("isdxDpnss", 11), ("islxDpnss", 12), ("mercuryDpnss", 13), ("dass2", 14), ("btSs7", 32), ("unknownBri", 15), ("att5essBri", 16), ("dms100Nt1Bri", 17), ("nisdn1Bri", 18), ("vn2Bri", 19), ("btnr191Bri", 20), ("net3Bri", 21), ("ptpNet3Bri", 22), ("kddBri", 23), ("belgianBri", 24), ("australBri", 25), ("swissBri", 26), ("german1tr6Bri", 27), ("dutch1tr6Bri", 28), ("switchCas", 29), ("idslPtpBri", 30)))).setLabel("t1NetworkProfile-LineInterface-SwitchType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_SwitchType.setStatus('mandatory')
t1NetworkProfile_LineInterface_NfasGroupId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 19), Integer32()).setLabel("t1NetworkProfile-LineInterface-NfasGroupId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_NfasGroupId.setStatus('mandatory')
t1NetworkProfile_LineInterface_NfasId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 20), Integer32()).setLabel("t1NetworkProfile-LineInterface-NfasId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_NfasId.setStatus('mandatory')
t1NetworkProfile_LineInterface_IncomingCallHandling = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rejectAll", 1), ("internalProcessing", 2), ("ss7GatewayProcessing", 3)))).setLabel("t1NetworkProfile-LineInterface-IncomingCallHandling").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_IncomingCallHandling.setStatus('mandatory')
t1NetworkProfile_LineInterface_DeleteDigits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 22), Integer32()).setLabel("t1NetworkProfile-LineInterface-DeleteDigits").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_DeleteDigits.setStatus('mandatory')
t1NetworkProfile_LineInterface_AddDigitString = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 23), DisplayString()).setLabel("t1NetworkProfile-LineInterface-AddDigitString").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_AddDigitString.setStatus('mandatory')
t1NetworkProfile_LineInterface_CallByCall = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 24), Integer32()).setLabel("t1NetworkProfile-LineInterface-CallByCall").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_CallByCall.setStatus('mandatory')
t1NetworkProfile_LineInterface_NetworkSpecificFacilities = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 87), Integer32()).setLabel("t1NetworkProfile-LineInterface-NetworkSpecificFacilities").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_NetworkSpecificFacilities.setStatus('mandatory')
t1NetworkProfile_LineInterface_PbxAnswerNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 25), DisplayString()).setLabel("t1NetworkProfile-LineInterface-PbxAnswerNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_PbxAnswerNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_AnswerService = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 255, 263))).clone(namedValues=NamedValues(("voice", 1), ("n-56kRestricted", 2), ("n-64kClear", 3), ("n-64kRestricted", 4), ("n-56kClear", 5), ("n-384kRestricted", 6), ("n-384kClear", 7), ("n-1536kClear", 8), ("n-1536kRestricted", 9), ("n-128kClear", 10), ("n-192kClear", 11), ("n-256kClear", 12), ("n-320kClear", 13), ("dws384Clear", 14), ("n-448Clear", 15), ("n-512Clear", 16), ("n-576Clear", 17), ("n-640Clear", 18), ("n-704Clear", 19), ("n-768Clear", 20), ("n-832Clear", 21), ("n-896Clear", 22), ("n-960Clear", 23), ("n-1024Clear", 24), ("n-1088Clear", 25), ("n-1152Clear", 26), ("n-1216Clear", 27), ("n-1280Clear", 28), ("n-1344Clear", 29), ("n-1408Clear", 30), ("n-1472Clear", 31), ("n-1600Clear", 32), ("n-1664Clear", 33), ("n-1728Clear", 34), ("n-1792Clear", 35), ("n-1856Clear", 36), ("n-1920Clear", 37), ("x30RestrictedBearer", 39), ("v110ClearBearer", 40), ("n-64kX30Restricted", 41), ("n-56kV110Clear", 42), ("modem", 43), ("atmodem", 44), ("n-2456kV110", 46), ("n-4856kV110", 47), ("n-9656kV110", 48), ("n-19256kV110", 49), ("n-38456kV110", 50), ("n-2456krV110", 51), ("n-4856krV110", 52), ("n-9656krV110", 53), ("n-19256krV110", 54), ("n-38456krV110", 55), ("n-2464kV110", 56), ("n-4864kV110", 57), ("n-9664kV110", 58), ("n-19264kV110", 59), ("n-38464kV110", 60), ("n-2464krV110", 61), ("n-4864krV110", 62), ("n-9664krV110", 63), ("n-19264krV110", 64), ("n-38464krV110", 65), ("v32", 66), ("phs64k", 67), ("voiceOverIp", 68), ("atmSvc", 70), ("frameRelaySvc", 71), ("vpnTunnel", 72), ("wormarq", 73), ("n-14456kV110", 74), ("n-28856kV110", 75), ("n-14456krV110", 76), ("n-28856krV110", 77), ("n-14464kV110", 78), ("n-28864kV110", 79), ("n-14464krV110", 80), ("n-28864krV110", 81), ("modem31khzAudio", 82), ("x25Svc", 83), ("n-144kClear", 255), ("iptoip", 263)))).setLabel("t1NetworkProfile-LineInterface-AnswerService").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_AnswerService.setStatus('mandatory')
t1NetworkProfile_LineInterface_oPBXType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("hostPbxVoice", 1), ("hostPbxData", 2), ("hostPbxLeasedData", 3), ("hostPbxLeased11", 4)))).setLabel("t1NetworkProfile-LineInterface-oPBXType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_oPBXType.setStatus('mandatory')
t1NetworkProfile_LineInterface_DataSense = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("inv", 2)))).setLabel("t1NetworkProfile-LineInterface-DataSense").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_DataSense.setStatus('mandatory')
t1NetworkProfile_LineInterface_IdleMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("markIdle", 1), ("flagIdle", 2)))).setLabel("t1NetworkProfile-LineInterface-IdleMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_IdleMode.setStatus('mandatory')
t1NetworkProfile_LineInterface_oFDL = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("atNT", 2), ("ansi", 3), ("sprint", 4)))).setLabel("t1NetworkProfile-LineInterface-oFDL").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_oFDL.setStatus('mandatory')
t1NetworkProfile_LineInterface_FrontEndType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("csu", 1), ("dsx", 2)))).setLabel("t1NetworkProfile-LineInterface-FrontEndType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_FrontEndType.setStatus('mandatory')
t1NetworkProfile_LineInterface_oDSXLineLength = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("n-1133", 1), ("n-134266", 2), ("n-267399", 3), ("n-400533", 4), ("n-534655", 5)))).setLabel("t1NetworkProfile-LineInterface-oDSXLineLength").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_oDSXLineLength.setStatus('mandatory')
t1NetworkProfile_LineInterface_oCSUBuildOut = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("n-0Db", 1), ("n-75Db", 2), ("n-15Db", 3), ("n-2255Db", 4)))).setLabel("t1NetworkProfile-LineInterface-oCSUBuildOut").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_oCSUBuildOut.setStatus('mandatory')
t1NetworkProfile_LineInterface_OverlapReceiving = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfile-LineInterface-OverlapReceiving").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_OverlapReceiving.setStatus('mandatory')
t1NetworkProfile_LineInterface_PriPrefixNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 35), DisplayString()).setLabel("t1NetworkProfile-LineInterface-PriPrefixNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_PriPrefixNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_TrailingDigits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 36), Integer32()).setLabel("t1NetworkProfile-LineInterface-TrailingDigits").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_TrailingDigits.setStatus('mandatory')
t1NetworkProfile_LineInterface_T302Timer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 37), Integer32()).setLabel("t1NetworkProfile-LineInterface-T302Timer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_T302Timer.setStatus('mandatory')
t1NetworkProfile_LineInterface_Layer3End = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("t1NetworkProfile-LineInterface-Layer3End").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Layer3End.setStatus('mandatory')
t1NetworkProfile_LineInterface_Layer2End = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("t1NetworkProfile-LineInterface-Layer2End").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Layer2End.setStatus('mandatory')
t1NetworkProfile_LineInterface_NlValue = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 40), Integer32()).setLabel("t1NetworkProfile-LineInterface-NlValue").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_NlValue.setStatus('mandatory')
t1NetworkProfile_LineInterface_LoopAvoidance = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 41), Integer32()).setLabel("t1NetworkProfile-LineInterface-LoopAvoidance").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_LoopAvoidance.setStatus('mandatory')
t1NetworkProfile_LineInterface_MaintenanceState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfile-LineInterface-MaintenanceState").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_MaintenanceState.setStatus('mandatory')
t1NetworkProfile_LineInterface_NumberComplete = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("n-1Digits", 1), ("n-2Digits", 2), ("n-3Digits", 3), ("n-4Digits", 4), ("n-5Digits", 5), ("n-6Digits", 6), ("n-7Digits", 7), ("n-8Digits", 8), ("n-9Digits", 9), ("n-10Digits", 10), ("endOfPulsing", 11), ("n-0Digits", 12), ("n-11Digits", 13), ("n-12Digits", 14), ("n-13Digits", 15), ("n-14Digits", 16), ("n-15Digits", 17), ("timeOut", 18)))).setLabel("t1NetworkProfile-LineInterface-NumberComplete").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_NumberComplete.setStatus('mandatory')
t1NetworkProfile_LineInterface_GroupBAnswerSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfile-LineInterface-GroupBAnswerSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_GroupBAnswerSignal.setStatus('mandatory')
t1NetworkProfile_LineInterface_GroupBBusySignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfile-LineInterface-GroupBBusySignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_GroupBBusySignal.setStatus('mandatory')
t1NetworkProfile_LineInterface_GroupBNoMatchSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfile-LineInterface-GroupBNoMatchSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_GroupBNoMatchSignal.setStatus('mandatory')
t1NetworkProfile_LineInterface_GroupBCollectSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfile-LineInterface-GroupBCollectSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_GroupBCollectSignal.setStatus('mandatory')
t1NetworkProfile_LineInterface_GroupBNoChargeSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfile-LineInterface-GroupBNoChargeSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_GroupBNoChargeSignal.setStatus('mandatory')
t1NetworkProfile_LineInterface_GroupIiSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalIi1", 1), ("signalIi2", 2), ("signalIi3", 3), ("signalIi4", 4), ("signalIi5", 5), ("signalIi6", 6), ("signalIi7", 7), ("signalIi8", 8), ("signalIi9", 9), ("signalIi10", 10), ("signalIi11", 11), ("signalIi12", 12), ("signalIi13", 13), ("signalIi14", 14), ("signalIi15", 15)))).setLabel("t1NetworkProfile-LineInterface-GroupIiSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_GroupIiSignal.setStatus('mandatory')
t1NetworkProfile_LineInterface_InputSampleCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oneSample", 1), ("twoSamples", 2)))).setLabel("t1NetworkProfile-LineInterface-InputSampleCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_InputSampleCount.setStatus('mandatory')
t1NetworkProfile_LineInterface_AnswerDelay = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 50), Integer32()).setLabel("t1NetworkProfile-LineInterface-AnswerDelay").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_AnswerDelay.setStatus('mandatory')
t1NetworkProfile_LineInterface_CallerId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noCallerId", 1), ("getCallerId", 2)))).setLabel("t1NetworkProfile-LineInterface-CallerId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_CallerId.setStatus('mandatory')
t1NetworkProfile_LineInterface_LineSignaling = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("abBitsLineSignaling", 1), ("aBitOnly0EqualBBit", 2), ("aBitOnly1EqualBBit", 3)))).setLabel("t1NetworkProfile-LineInterface-LineSignaling").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_LineSignaling.setStatus('mandatory')
t1NetworkProfile_LineInterface_Timer1CollectCall = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 53), Integer32()).setLabel("t1NetworkProfile-LineInterface-Timer1CollectCall").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Timer1CollectCall.setStatus('mandatory')
t1NetworkProfile_LineInterface_Timer2CollectCall = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 54), Integer32()).setLabel("t1NetworkProfile-LineInterface-Timer2CollectCall").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Timer2CollectCall.setStatus('mandatory')
t1NetworkProfile_LineInterface_SendDiscVal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 55), Integer32()).setLabel("t1NetworkProfile-LineInterface-SendDiscVal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_SendDiscVal.setStatus('mandatory')
t1NetworkProfile_LineInterface_HuntGrpPhoneNumber1 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 56), DisplayString()).setLabel("t1NetworkProfile-LineInterface-HuntGrpPhoneNumber1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_HuntGrpPhoneNumber1.setStatus('mandatory')
t1NetworkProfile_LineInterface_HuntGrpPhoneNumber2 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 57), DisplayString()).setLabel("t1NetworkProfile-LineInterface-HuntGrpPhoneNumber2").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_HuntGrpPhoneNumber2.setStatus('mandatory')
t1NetworkProfile_LineInterface_HuntGrpPhoneNumber3 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 58), DisplayString()).setLabel("t1NetworkProfile-LineInterface-HuntGrpPhoneNumber3").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_HuntGrpPhoneNumber3.setStatus('mandatory')
t1NetworkProfile_LineInterface_PriTypeOfNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 59), Integer32()).setLabel("t1NetworkProfile-LineInterface-PriTypeOfNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_PriTypeOfNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_PriNumberingPlanId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 60), Integer32()).setLabel("t1NetworkProfile-LineInterface-PriNumberingPlanId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_PriNumberingPlanId.setStatus('mandatory')
t1NetworkProfile_LineInterface_SuperFrameSrcLineNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 61), Integer32()).setLabel("t1NetworkProfile-LineInterface-SuperFrameSrcLineNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_SuperFrameSrcLineNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_CollectIncomingDigits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfile-LineInterface-CollectIncomingDigits").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_CollectIncomingDigits.setStatus('mandatory')
t1NetworkProfile_LineInterface_T1InterDigitTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 63), Integer32()).setLabel("t1NetworkProfile-LineInterface-T1InterDigitTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_T1InterDigitTimeout.setStatus('mandatory')
t1NetworkProfile_LineInterface_R1UseAnir = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfile-LineInterface-R1UseAnir").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_R1UseAnir.setStatus('mandatory')
t1NetworkProfile_LineInterface_R1FirstDigitTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 65), Integer32()).setLabel("t1NetworkProfile-LineInterface-R1FirstDigitTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_R1FirstDigitTimer.setStatus('mandatory')
t1NetworkProfile_LineInterface_R1AnirDelay = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 66), Integer32()).setLabel("t1NetworkProfile-LineInterface-R1AnirDelay").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_R1AnirDelay.setStatus('mandatory')
t1NetworkProfile_LineInterface_R1AnirTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 67), Integer32()).setLabel("t1NetworkProfile-LineInterface-R1AnirTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_R1AnirTimer.setStatus('mandatory')
t1NetworkProfile_LineInterface_R1Modified = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfile-LineInterface-R1Modified").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_R1Modified.setStatus('mandatory')
t1NetworkProfile_LineInterface_FirstDs0 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 69), Integer32()).setLabel("t1NetworkProfile-LineInterface-FirstDs0").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_FirstDs0.setStatus('mandatory')
t1NetworkProfile_LineInterface_LastDs0 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 70), Integer32()).setLabel("t1NetworkProfile-LineInterface-LastDs0").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_LastDs0.setStatus('mandatory')
t1NetworkProfile_LineInterface_NailedGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 71), Integer32()).setLabel("t1NetworkProfile-LineInterface-NailedGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_NailedGroup.setStatus('mandatory')
t1NetworkProfile_LineInterface_Ss7Continuity_IncomingProcedure = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("loopback", 2), ("transponder", 3)))).setLabel("t1NetworkProfile-LineInterface-Ss7Continuity-IncomingProcedure").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Ss7Continuity_IncomingProcedure.setStatus('mandatory')
t1NetworkProfile_LineInterface_Ss7Continuity_OutgoingProcedure = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("singleTone2010", 2), ("send2010Expect1780", 3), ("send1780Expect2010", 4), ("singleTone2000", 5), ("send2000Expect1780", 6), ("send1780Expect2000", 7)))).setLabel("t1NetworkProfile-LineInterface-Ss7Continuity-OutgoingProcedure").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Ss7Continuity_OutgoingProcedure.setStatus('mandatory')
t1NetworkProfile_LineInterface_LineProvision = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("lineProvisionNone", 1), ("lineProvisionH0", 2), ("lineProvisionH11", 3), ("lineProvisionH0H11", 4), ("lineProvisionH12", 5), ("lineProvisionH0H12", 6), ("lineProvisionH11H12", 7), ("lineProvisionH0H11H12", 8)))).setLabel("t1NetworkProfile-LineInterface-LineProvision").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_LineProvision.setStatus('mandatory')
t1NetworkProfile_LineInterface_Gr303Mode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("gr303Disabled", 1), ("gr3035essPri", 2), ("gr303DmsPri", 3), ("gr303Secondary", 4), ("gr303Normal", 5)))).setLabel("t1NetworkProfile-LineInterface-Gr303Mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Gr303Mode.setStatus('mandatory')
t1NetworkProfile_LineInterface_Gr303GroupId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 76), Integer32()).setLabel("t1NetworkProfile-LineInterface-Gr303GroupId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Gr303GroupId.setStatus('mandatory')
t1NetworkProfile_LineInterface_Gr303Ds1Id = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 77), Integer32()).setLabel("t1NetworkProfile-LineInterface-Gr303Ds1Id").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_Gr303Ds1Id.setStatus('mandatory')
t1NetworkProfile_LineInterface_SwitchVersion = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switchVersionGeneric", 1), ("switchVersionDefinityG3v4", 2)))).setLabel("t1NetworkProfile-LineInterface-SwitchVersion").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_SwitchVersion.setStatus('mandatory')
t1NetworkProfile_LineInterface_DownTransDelay = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 84), Integer32()).setLabel("t1NetworkProfile-LineInterface-DownTransDelay").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_DownTransDelay.setStatus('mandatory')
t1NetworkProfile_LineInterface_UpTransDelay = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 85), Integer32()).setLabel("t1NetworkProfile-LineInterface-UpTransDelay").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_UpTransDelay.setStatus('mandatory')
t1NetworkProfile_LineInterface_StatusChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfile-LineInterface-StatusChangeTrapEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_StatusChangeTrapEnable.setStatus('mandatory')
t1NetworkProfile_LineInterface_CauseCodeVerificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfile-LineInterface-CauseCodeVerificationEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_CauseCodeVerificationEnable.setStatus('mandatory')
t1NetworkProfile_BackToBack = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("t1NetworkProfile-BackToBack").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_BackToBack.setStatus('mandatory')
t1NetworkProfile_ChannelUsage = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("lineUnavailable", 1), ("lineDisable", 2), ("t1LineQuiesce", 3), ("dropAndInsert", 4), ("dualNetworkInterface", 5), ("tOnlineUsrInterface", 6), ("tOnlineZgrInterface", 7)))).setLabel("t1NetworkProfile-ChannelUsage").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_ChannelUsage.setStatus('mandatory')
t1NetworkProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 1, 1, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("t1NetworkProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_Action_o.setStatus('mandatory')
mibt1NetworkProfile_LineInterface_ChannelConfigTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 127, 2), ).setLabel("mibt1NetworkProfile-LineInterface-ChannelConfigTable")
if mibBuilder.loadTexts: mibt1NetworkProfile_LineInterface_ChannelConfigTable.setStatus('mandatory')
mibt1NetworkProfile_LineInterface_ChannelConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1), ).setLabel("mibt1NetworkProfile-LineInterface-ChannelConfigEntry").setIndexNames((0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfile-LineInterface-ChannelConfig-Shelf-o"), (0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfile-LineInterface-ChannelConfig-Slot-o"), (0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfile-LineInterface-ChannelConfig-Item-o"), (0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfile-LineInterface-ChannelConfig-Index-o"))
if mibBuilder.loadTexts: mibt1NetworkProfile_LineInterface_ChannelConfigEntry.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 1), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_Shelf_o.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 2), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_Slot_o.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 3), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_Item_o.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 4), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_Index_o.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_ChannelUsage = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unusedChannel", 1), ("switchedChannel", 2), ("nailed64Channel", 3), ("dChannel", 4), ("nfasPrimaryDChannel", 5), ("nfasSecondaryDChannel", 6), ("semiPermChannel", 7), ("ss7SignalingChannel", 8)))).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-ChannelUsage").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_ChannelUsage.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_TrunkGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 6), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-TrunkGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_TrunkGroup.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_PhoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 7), DisplayString()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-PhoneNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_PhoneNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_SlotNumber_SlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 8), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-RoutePort-SlotNumber-SlotNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_SlotNumber_SlotNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_SlotNumber_ShelfNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 9), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-RoutePort-SlotNumber-ShelfNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_SlotNumber_ShelfNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_RelativePortNumber_RelativePortNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 10), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-RoutePort-RelativePortNumber-RelativePortNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_RelativePortNumber_RelativePortNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_NailedGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 14), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-NailedGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_NailedGroup.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_ChanGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 15), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-ChanGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_ChanGroup.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_DestChanGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 16), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-DestChanGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_DestChanGroup.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_DialPlanNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 17), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-DialPlanNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_DialPlanNumber.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_NumberOfDialPlanSelectDigits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 18), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-NumberOfDialPlanSelectDigits").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_NumberOfDialPlanSelectDigits.setStatus('mandatory')
t1NetworkProfile_LineInterface_ChannelConfig_IdlePattern = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 127, 2, 1, 19), Integer32()).setLabel("t1NetworkProfile-LineInterface-ChannelConfig-IdlePattern").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfile_LineInterface_ChannelConfig_IdlePattern.setStatus('mandatory')
mibt1NetworkProfileV1Table = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 126, 1), )
if mibBuilder.loadTexts: mibt1NetworkProfileV1Table.setStatus('mandatory')
mibt1NetworkProfileV1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1), ).setIndexNames((0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfileV1-Name"))
if mibBuilder.loadTexts: mibt1NetworkProfileV1Entry.setStatus('mandatory')
t1NetworkProfileV1_ProfileNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 1), Integer32()).setLabel("t1NetworkProfileV1-ProfileNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_ProfileNumber.setStatus('mandatory')
t1NetworkProfileV1_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 2), DisplayString()).setLabel("t1NetworkProfileV1-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfileV1_Name.setStatus('mandatory')
t1NetworkProfileV1_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("t1NetworkProfileV1-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_PhysicalAddress_Shelf.setStatus('mandatory')
t1NetworkProfileV1_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("t1NetworkProfileV1-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_PhysicalAddress_Slot.setStatus('mandatory')
t1NetworkProfileV1_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 5), Integer32()).setLabel("t1NetworkProfileV1-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_PhysicalAddress_ItemNumber.setStatus('mandatory')
t1NetworkProfileV1_BackToBack = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("t1NetworkProfileV1-BackToBack").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_BackToBack.setStatus('mandatory')
t1NetworkProfileV1_PrimaryChannelUsage = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("lineUnavailable", 1), ("lineDisable", 2), ("t1LineQuiesce", 3), ("dropAndInsert", 4), ("dualNetworkInterface", 5), ("tOnlineUsrInterface", 6), ("tOnlineZgrInterface", 7)))).setLabel("t1NetworkProfileV1-PrimaryChannelUsage").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_PrimaryChannelUsage.setStatus('mandatory')
t1NetworkProfileV1_SecondaryChannelUsage = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("lineUnavailable", 1), ("lineDisable", 2), ("t1LineQuiesce", 3), ("dropAndInsert", 4), ("dualNetworkInterface", 5), ("tOnlineUsrInterface", 6), ("tOnlineZgrInterface", 7)))).setLabel("t1NetworkProfileV1-SecondaryChannelUsage").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_SecondaryChannelUsage.setStatus('mandatory')
t1NetworkProfileV1_TertiaryChannelUsage = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("lineUnavailable", 1), ("lineDisable", 2), ("t1LineQuiesce", 3), ("dropAndInsert", 4), ("dualNetworkInterface", 5), ("tOnlineUsrInterface", 6), ("tOnlineZgrInterface", 7)))).setLabel("t1NetworkProfileV1-TertiaryChannelUsage").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_TertiaryChannelUsage.setStatus('mandatory')
t1NetworkProfileV1_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("t1NetworkProfileV1-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_Action_o.setStatus('mandatory')
mibt1NetworkProfileV1_LineInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 126, 2), ).setLabel("mibt1NetworkProfileV1-LineInterfaceTable")
if mibBuilder.loadTexts: mibt1NetworkProfileV1_LineInterfaceTable.setStatus('mandatory')
mibt1NetworkProfileV1_LineInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1), ).setLabel("mibt1NetworkProfileV1-LineInterfaceEntry").setIndexNames((0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfileV1-LineInterface-Name"), (0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfileV1-LineInterface-Index-o"))
if mibBuilder.loadTexts: mibt1NetworkProfileV1_LineInterfaceEntry.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 1), DisplayString()).setLabel("t1NetworkProfileV1-LineInterface-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Name.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 2), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Index_o.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfileV1-LineInterface-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Enabled.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_TOnlineType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("nt", 2), ("te", 3), ("numberOfTonline", 4)))).setLabel("t1NetworkProfileV1-LineInterface-TOnlineType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_TOnlineType.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_FrameType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("d4", 1), ("esf", 2), ("g703", 3), ("n-2ds", 4)))).setLabel("t1NetworkProfileV1-LineInterface-FrameType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_FrameType.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Encoding = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ami", 1), ("b8zs", 2), ("hdb3", 3), ("none", 4)))).setLabel("t1NetworkProfileV1-LineInterface-Encoding").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Encoding.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ClockSource = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eligible", 1), ("notEligible", 2)))).setLabel("t1NetworkProfileV1-LineInterface-ClockSource").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ClockSource.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ClockPriority = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("highPriority", 2), ("middlePriority", 3), ("lowPriority", 4)))).setLabel("t1NetworkProfileV1-LineInterface-ClockPriority").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ClockPriority.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_SignalingMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("inband", 1), ("isdn", 2), ("isdnNfas", 3), ("e1R2Signaling", 5), ("e1KoreanSignaling", 6), ("e1P7Signaling", 7), ("e1ChineseSignaling", 8), ("e1MeteredSignaling", 9), ("e1NoSignaling", 10), ("e1DpnssSignaling", 11), ("e1ArgentinaSignaling", 13), ("e1BrazilSignaling", 14), ("e1PhilippineSignaling", 15), ("e1IndianSignaling", 16), ("e1CzechSignaling", 17), ("e1MalaysiaSignaling", 19), ("e1NewZealandSignaling", 20), ("e1IsraelSignaling", 21), ("e1ThailandSignaling", 22), ("e1KuwaitSignaling", 23), ("e1MexicoSignaling", 24), ("dtmfR2Signaling", 25), ("tunneledPriSignaling", 27), ("inbandFgdInFgdOut", 28), ("inbandFgdInFgcOut", 29), ("inbandFgcInFgcOut", 30), ("inbandFgcInFgdOut", 31), ("e1VietnamSignaling", 32), ("ss7SigTrunk", 33), ("h248DataTrunk", 34)))).setLabel("t1NetworkProfileV1-LineInterface-SignalingMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_SignalingMode.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_IsdnEmulationSide = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("te", 1), ("nt", 2)))).setLabel("t1NetworkProfileV1-LineInterface-IsdnEmulationSide").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_IsdnEmulationSide.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_RobbedBitMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("winkStart", 1), ("idleStart", 2), ("incW200", 3), ("incW400", 4), ("loopStart", 5), ("groundStart", 6)))).setLabel("t1NetworkProfileV1-LineInterface-RobbedBitMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_RobbedBitMode.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_DefaultCallType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("digital", 1), ("voice", 2), ("dnisOrVoice", 3), ("dnisOrDigital", 4), ("voip", 5), ("dnisOrVoip", 6)))).setLabel("t1NetworkProfileV1-LineInterface-DefaultCallType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_DefaultCallType.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_SwitchType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 31, 11, 12, 13, 14, 32, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30))).clone(namedValues=NamedValues(("attPri", 1), ("ntiPri", 2), ("globandPri", 3), ("japanPri", 4), ("vn3Pri", 5), ("onetr6Pri", 6), ("net5Pri", 7), ("danishPri", 8), ("australPri", 9), ("natIsdn2Pri", 10), ("taiwanPri", 31), ("isdxDpnss", 11), ("islxDpnss", 12), ("mercuryDpnss", 13), ("dass2", 14), ("btSs7", 32), ("unknownBri", 15), ("att5essBri", 16), ("dms100Nt1Bri", 17), ("nisdn1Bri", 18), ("vn2Bri", 19), ("btnr191Bri", 20), ("net3Bri", 21), ("ptpNet3Bri", 22), ("kddBri", 23), ("belgianBri", 24), ("australBri", 25), ("swissBri", 26), ("german1tr6Bri", 27), ("dutch1tr6Bri", 28), ("switchCas", 29), ("idslPtpBri", 30)))).setLabel("t1NetworkProfileV1-LineInterface-SwitchType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_SwitchType.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_NfasGroupId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 14), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-NfasGroupId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_NfasGroupId.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_NfasId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 15), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-NfasId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_NfasId.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_IncomingCallHandling = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rejectAll", 1), ("internalProcessing", 2), ("ss7GatewayProcessing", 3)))).setLabel("t1NetworkProfileV1-LineInterface-IncomingCallHandling").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_IncomingCallHandling.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_DeleteDigits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 17), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-DeleteDigits").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_DeleteDigits.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_AddDigitString = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 18), DisplayString()).setLabel("t1NetworkProfileV1-LineInterface-AddDigitString").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_AddDigitString.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_CallByCall = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 19), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-CallByCall").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_CallByCall.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_NetworkSpecificFacilities = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 79), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-NetworkSpecificFacilities").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_NetworkSpecificFacilities.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_PbxAnswerNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 20), DisplayString()).setLabel("t1NetworkProfileV1-LineInterface-PbxAnswerNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_PbxAnswerNumber.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_AnswerService = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 255, 263))).clone(namedValues=NamedValues(("voice", 1), ("n-56kRestricted", 2), ("n-64kClear", 3), ("n-64kRestricted", 4), ("n-56kClear", 5), ("n-384kRestricted", 6), ("n-384kClear", 7), ("n-1536kClear", 8), ("n-1536kRestricted", 9), ("n-128kClear", 10), ("n-192kClear", 11), ("n-256kClear", 12), ("n-320kClear", 13), ("dws384Clear", 14), ("n-448Clear", 15), ("n-512Clear", 16), ("n-576Clear", 17), ("n-640Clear", 18), ("n-704Clear", 19), ("n-768Clear", 20), ("n-832Clear", 21), ("n-896Clear", 22), ("n-960Clear", 23), ("n-1024Clear", 24), ("n-1088Clear", 25), ("n-1152Clear", 26), ("n-1216Clear", 27), ("n-1280Clear", 28), ("n-1344Clear", 29), ("n-1408Clear", 30), ("n-1472Clear", 31), ("n-1600Clear", 32), ("n-1664Clear", 33), ("n-1728Clear", 34), ("n-1792Clear", 35), ("n-1856Clear", 36), ("n-1920Clear", 37), ("x30RestrictedBearer", 39), ("v110ClearBearer", 40), ("n-64kX30Restricted", 41), ("n-56kV110Clear", 42), ("modem", 43), ("atmodem", 44), ("n-2456kV110", 46), ("n-4856kV110", 47), ("n-9656kV110", 48), ("n-19256kV110", 49), ("n-38456kV110", 50), ("n-2456krV110", 51), ("n-4856krV110", 52), ("n-9656krV110", 53), ("n-19256krV110", 54), ("n-38456krV110", 55), ("n-2464kV110", 56), ("n-4864kV110", 57), ("n-9664kV110", 58), ("n-19264kV110", 59), ("n-38464kV110", 60), ("n-2464krV110", 61), ("n-4864krV110", 62), ("n-9664krV110", 63), ("n-19264krV110", 64), ("n-38464krV110", 65), ("v32", 66), ("phs64k", 67), ("voiceOverIp", 68), ("atmSvc", 70), ("frameRelaySvc", 71), ("vpnTunnel", 72), ("wormarq", 73), ("n-14456kV110", 74), ("n-28856kV110", 75), ("n-14456krV110", 76), ("n-28856krV110", 77), ("n-14464kV110", 78), ("n-28864kV110", 79), ("n-14464krV110", 80), ("n-28864krV110", 81), ("modem31khzAudio", 82), ("x25Svc", 83), ("n-144kClear", 255), ("iptoip", 263)))).setLabel("t1NetworkProfileV1-LineInterface-AnswerService").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_AnswerService.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_oPBXType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("hostPbxVoice", 1), ("hostPbxData", 2), ("hostPbxLeasedData", 3), ("hostPbxLeased11", 4)))).setLabel("t1NetworkProfileV1-LineInterface-oPBXType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_oPBXType.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_DataSense = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("inv", 2)))).setLabel("t1NetworkProfileV1-LineInterface-DataSense").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_DataSense.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_IdleMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("markIdle", 1), ("flagIdle", 2)))).setLabel("t1NetworkProfileV1-LineInterface-IdleMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_IdleMode.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_oFDL = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("atNT", 2), ("ansi", 3), ("sprint", 4)))).setLabel("t1NetworkProfileV1-LineInterface-oFDL").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_oFDL.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_FrontEndType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("csu", 1), ("dsx", 2)))).setLabel("t1NetworkProfileV1-LineInterface-FrontEndType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_FrontEndType.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_oDSXLineLength = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("n-1133", 1), ("n-134266", 2), ("n-267399", 3), ("n-400533", 4), ("n-534655", 5)))).setLabel("t1NetworkProfileV1-LineInterface-oDSXLineLength").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_oDSXLineLength.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_oCSUBuildOut = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("n-0Db", 1), ("n-75Db", 2), ("n-15Db", 3), ("n-2255Db", 4)))).setLabel("t1NetworkProfileV1-LineInterface-oCSUBuildOut").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_oCSUBuildOut.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_OverlapReceiving = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfileV1-LineInterface-OverlapReceiving").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_OverlapReceiving.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_PriPrefixNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 30), DisplayString()).setLabel("t1NetworkProfileV1-LineInterface-PriPrefixNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_PriPrefixNumber.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_TrailingDigits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 31), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-TrailingDigits").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_TrailingDigits.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_T302Timer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 32), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-T302Timer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_T302Timer.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Layer3End = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("t1NetworkProfileV1-LineInterface-Layer3End").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Layer3End.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Layer2End = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setLabel("t1NetworkProfileV1-LineInterface-Layer2End").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Layer2End.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_NlValue = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 35), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-NlValue").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_NlValue.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_LoopAvoidance = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 36), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-LoopAvoidance").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_LoopAvoidance.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_MaintenanceState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfileV1-LineInterface-MaintenanceState").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_MaintenanceState.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_NumberComplete = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("n-1Digits", 1), ("n-2Digits", 2), ("n-3Digits", 3), ("n-4Digits", 4), ("n-5Digits", 5), ("n-6Digits", 6), ("n-7Digits", 7), ("n-8Digits", 8), ("n-9Digits", 9), ("n-10Digits", 10), ("endOfPulsing", 11), ("n-0Digits", 12), ("n-11Digits", 13), ("n-12Digits", 14), ("n-13Digits", 15), ("n-14Digits", 16), ("n-15Digits", 17), ("timeOut", 18)))).setLabel("t1NetworkProfileV1-LineInterface-NumberComplete").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_NumberComplete.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_GroupBAnswerSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfileV1-LineInterface-GroupBAnswerSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_GroupBAnswerSignal.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_GroupBBusySignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfileV1-LineInterface-GroupBBusySignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_GroupBBusySignal.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_GroupBNoMatchSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfileV1-LineInterface-GroupBNoMatchSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_GroupBNoMatchSignal.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_GroupBCollectSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfileV1-LineInterface-GroupBCollectSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_GroupBCollectSignal.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_GroupBNoChargeSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalB1", 1), ("signalB2", 2), ("signalB3", 3), ("signalB4", 4), ("signalB5", 5), ("signalB6", 6), ("signalB7", 7), ("signalB8", 8), ("signalB9", 9), ("signalB10", 10), ("signalB11", 11), ("signalB12", 12), ("signalB13", 13), ("signalB14", 14), ("signalB15", 15)))).setLabel("t1NetworkProfileV1-LineInterface-GroupBNoChargeSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_GroupBNoChargeSignal.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_GroupIiSignal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signalIi1", 1), ("signalIi2", 2), ("signalIi3", 3), ("signalIi4", 4), ("signalIi5", 5), ("signalIi6", 6), ("signalIi7", 7), ("signalIi8", 8), ("signalIi9", 9), ("signalIi10", 10), ("signalIi11", 11), ("signalIi12", 12), ("signalIi13", 13), ("signalIi14", 14), ("signalIi15", 15)))).setLabel("t1NetworkProfileV1-LineInterface-GroupIiSignal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_GroupIiSignal.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_InputSampleCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oneSample", 1), ("twoSamples", 2)))).setLabel("t1NetworkProfileV1-LineInterface-InputSampleCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_InputSampleCount.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_AnswerDelay = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 45), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-AnswerDelay").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_AnswerDelay.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_CallerId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noCallerId", 1), ("getCallerId", 2)))).setLabel("t1NetworkProfileV1-LineInterface-CallerId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_CallerId.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_LineSignaling = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("abBitsLineSignaling", 1), ("aBitOnly0EqualBBit", 2), ("aBitOnly1EqualBBit", 3)))).setLabel("t1NetworkProfileV1-LineInterface-LineSignaling").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_LineSignaling.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Timer1CollectCall = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 48), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-Timer1CollectCall").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Timer1CollectCall.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Timer2CollectCall = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 49), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-Timer2CollectCall").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Timer2CollectCall.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_SendDiscVal = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 50), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-SendDiscVal").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_SendDiscVal.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber1 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 51), DisplayString()).setLabel("t1NetworkProfileV1-LineInterface-HuntGrpPhoneNumber1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber1.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber2 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 52), DisplayString()).setLabel("t1NetworkProfileV1-LineInterface-HuntGrpPhoneNumber2").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber2.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber3 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 53), DisplayString()).setLabel("t1NetworkProfileV1-LineInterface-HuntGrpPhoneNumber3").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber3.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_PriTypeOfNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 54), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-PriTypeOfNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_PriTypeOfNumber.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_PriNumberingPlanId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 55), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-PriNumberingPlanId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_PriNumberingPlanId.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_SuperFrameSrcLineNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 56), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-SuperFrameSrcLineNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_SuperFrameSrcLineNumber.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_CollectIncomingDigits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfileV1-LineInterface-CollectIncomingDigits").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_CollectIncomingDigits.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_T1InterDigitTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 58), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-T1InterDigitTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_T1InterDigitTimeout.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_R1UseAnir = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfileV1-LineInterface-R1UseAnir").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_R1UseAnir.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_R1FirstDigitTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 60), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-R1FirstDigitTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_R1FirstDigitTimer.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_R1AnirDelay = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 61), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-R1AnirDelay").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_R1AnirDelay.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_R1AnirTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 62), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-R1AnirTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_R1AnirTimer.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_R1Modified = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfileV1-LineInterface-R1Modified").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_R1Modified.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_FirstDs0 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 64), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-FirstDs0").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_FirstDs0.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_LastDs0 = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 65), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-LastDs0").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_LastDs0.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_NailedGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 66), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-NailedGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_NailedGroup.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Ss7Continuity_IncomingProcedure = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("loopback", 2), ("transponder", 3)))).setLabel("t1NetworkProfileV1-LineInterface-Ss7Continuity-IncomingProcedure").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Ss7Continuity_IncomingProcedure.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Ss7Continuity_OutgoingProcedure = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("singleTone2010", 2), ("send2010Expect1780", 3), ("send1780Expect2010", 4), ("singleTone2000", 5), ("send2000Expect1780", 6), ("send1780Expect2000", 7)))).setLabel("t1NetworkProfileV1-LineInterface-Ss7Continuity-OutgoingProcedure").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Ss7Continuity_OutgoingProcedure.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_LineProvision = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("lineProvisionNone", 1), ("lineProvisionH0", 2), ("lineProvisionH11", 3), ("lineProvisionH0H11", 4), ("lineProvisionH12", 5), ("lineProvisionH0H12", 6), ("lineProvisionH11H12", 7), ("lineProvisionH0H11H12", 8)))).setLabel("t1NetworkProfileV1-LineInterface-LineProvision").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_LineProvision.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Gr303Mode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("gr303Disabled", 1), ("gr3035essPri", 2), ("gr303DmsPri", 3), ("gr303Secondary", 4), ("gr303Normal", 5)))).setLabel("t1NetworkProfileV1-LineInterface-Gr303Mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Gr303Mode.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Gr303GroupId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 71), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-Gr303GroupId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Gr303GroupId.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_Gr303Ds1Id = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 72), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-Gr303Ds1Id").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_Gr303Ds1Id.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_SwitchVersion = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switchVersionGeneric", 1), ("switchVersionDefinityG3v4", 2)))).setLabel("t1NetworkProfileV1-LineInterface-SwitchVersion").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_SwitchVersion.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_DownTransDelay = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 76), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-DownTransDelay").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_DownTransDelay.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_UpTransDelay = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 77), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-UpTransDelay").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_UpTransDelay.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_StatusChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfileV1-LineInterface-StatusChangeTrapEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_StatusChangeTrapEnable.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_CauseCodeVerificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 2, 1, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("t1NetworkProfileV1-LineInterface-CauseCodeVerificationEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_CauseCodeVerificationEnable.setStatus('mandatory')
mibt1NetworkProfileV1_LineInterface_ChannelConfigTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 126, 3), ).setLabel("mibt1NetworkProfileV1-LineInterface-ChannelConfigTable")
if mibBuilder.loadTexts: mibt1NetworkProfileV1_LineInterface_ChannelConfigTable.setStatus('mandatory')
mibt1NetworkProfileV1_LineInterface_ChannelConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1), ).setLabel("mibt1NetworkProfileV1-LineInterface-ChannelConfigEntry").setIndexNames((0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfileV1-LineInterface-ChannelConfig-Name"), (0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfileV1-LineInterface-ChannelConfig-Index-o"), (0, "ASCEND-MIBT1NET-MIB", "t1NetworkProfileV1-LineInterface-ChannelConfig-Index1-o"))
if mibBuilder.loadTexts: mibt1NetworkProfileV1_LineInterface_ChannelConfigEntry.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 1), DisplayString()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_Name.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 2), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_Index_o.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_Index1_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 3), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-Index1-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_Index1_o.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_ChannelUsage = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unusedChannel", 1), ("switchedChannel", 2), ("nailed64Channel", 3), ("dChannel", 4), ("nfasPrimaryDChannel", 5), ("nfasSecondaryDChannel", 6), ("semiPermChannel", 7), ("ss7SignalingChannel", 8)))).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-ChannelUsage").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_ChannelUsage.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_TrunkGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 5), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-TrunkGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_TrunkGroup.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_PhoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 6), DisplayString()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-PhoneNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_PhoneNumber.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_SlotNumber_SlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 7), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-RoutePort-SlotNumber-SlotNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_SlotNumber_SlotNumber.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_SlotNumber_ShelfNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 8), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-RoutePort-SlotNumber-ShelfNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_SlotNumber_ShelfNumber.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_RelativePortNumber_RelativePortNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 9), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-RoutePort-RelativePortNumber-RelativePortNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_RelativePortNumber_RelativePortNumber.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_NailedGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 13), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-NailedGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_NailedGroup.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_ChanGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 14), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-ChanGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_ChanGroup.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_DestChanGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 15), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-DestChanGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_DestChanGroup.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_DialPlanNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 16), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-DialPlanNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_DialPlanNumber.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_NumberOfDialPlanSelectDigits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 17), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-NumberOfDialPlanSelectDigits").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_NumberOfDialPlanSelectDigits.setStatus('mandatory')
t1NetworkProfileV1_LineInterface_ChannelConfig_IdlePattern = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 126, 3, 1, 18), Integer32()).setLabel("t1NetworkProfileV1-LineInterface-ChannelConfig-IdlePattern").setMaxAccess("readwrite")
if mibBuilder.loadTexts: t1NetworkProfileV1_LineInterface_ChannelConfig_IdlePattern.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBT1NET-MIB", t1NetworkProfile_LineInterface_NailedGroup=t1NetworkProfile_LineInterface_NailedGroup, t1NetworkProfile_LineInterface_Timer2CollectCall=t1NetworkProfile_LineInterface_Timer2CollectCall, t1NetworkProfileV1_LineInterface_MaintenanceState=t1NetworkProfileV1_LineInterface_MaintenanceState, t1NetworkProfileV1_LineInterface_StatusChangeTrapEnable=t1NetworkProfileV1_LineInterface_StatusChangeTrapEnable, t1NetworkProfileV1_LineInterface_ChannelConfig_Index1_o=t1NetworkProfileV1_LineInterface_ChannelConfig_Index1_o, t1NetworkProfileV1_LineInterface_CallerId=t1NetworkProfileV1_LineInterface_CallerId, t1NetworkProfileV1_LineInterface_ChannelConfig_NailedGroup=t1NetworkProfileV1_LineInterface_ChannelConfig_NailedGroup, t1NetworkProfile_LineInterface_DownTransDelay=t1NetworkProfile_LineInterface_DownTransDelay, t1NetworkProfileV1_LineInterface_GroupBCollectSignal=t1NetworkProfileV1_LineInterface_GroupBCollectSignal, t1NetworkProfile_Slot_o=t1NetworkProfile_Slot_o, t1NetworkProfile_LineInterface_TOnlineType=t1NetworkProfile_LineInterface_TOnlineType, mibt1NetworkProfileV1_LineInterfaceTable=mibt1NetworkProfileV1_LineInterfaceTable, t1NetworkProfileV1_LineInterface_DefaultCallType=t1NetworkProfileV1_LineInterface_DefaultCallType, t1NetworkProfileV1_LineInterface_NlValue=t1NetworkProfileV1_LineInterface_NlValue, t1NetworkProfile_LineInterface_DefaultCallType=t1NetworkProfile_LineInterface_DefaultCallType, t1NetworkProfile_LineInterface_ChannelConfig_ChannelUsage=t1NetworkProfile_LineInterface_ChannelConfig_ChannelUsage, t1NetworkProfileV1_LineInterface_oPBXType=t1NetworkProfileV1_LineInterface_oPBXType, t1NetworkProfileV1_LineInterface_Timer2CollectCall=t1NetworkProfileV1_LineInterface_Timer2CollectCall, t1NetworkProfile_LineInterface_LoopAvoidance=t1NetworkProfile_LineInterface_LoopAvoidance, t1NetworkProfileV1_LineInterface_AnswerService=t1NetworkProfileV1_LineInterface_AnswerService, t1NetworkProfileV1_LineInterface_Ss7Continuity_OutgoingProcedure=t1NetworkProfileV1_LineInterface_Ss7Continuity_OutgoingProcedure, t1NetworkProfileV1_LineInterface_Name=t1NetworkProfileV1_LineInterface_Name, t1NetworkProfileV1_LineInterface_Layer3End=t1NetworkProfileV1_LineInterface_Layer3End, t1NetworkProfile_LineInterface_InputSampleCount=t1NetworkProfile_LineInterface_InputSampleCount, t1NetworkProfile_LineInterface_GroupBBusySignal=t1NetworkProfile_LineInterface_GroupBBusySignal, t1NetworkProfile_LineInterface_T1InterDigitTimeout=t1NetworkProfile_LineInterface_T1InterDigitTimeout, t1NetworkProfileV1_LineInterface_T1InterDigitTimeout=t1NetworkProfileV1_LineInterface_T1InterDigitTimeout, t1NetworkProfile_LineInterface_T302Timer=t1NetworkProfile_LineInterface_T302Timer, t1NetworkProfileV1_LineInterface_ChannelConfig_IdlePattern=t1NetworkProfileV1_LineInterface_ChannelConfig_IdlePattern, t1NetworkProfile_LineInterface_CauseCodeVerificationEnable=t1NetworkProfile_LineInterface_CauseCodeVerificationEnable, t1NetworkProfile_LineInterface_SignalingMode=t1NetworkProfile_LineInterface_SignalingMode, t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber2=t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber2, t1NetworkProfile_LineInterface_ChannelConfig_IdlePattern=t1NetworkProfile_LineInterface_ChannelConfig_IdlePattern, t1NetworkProfileV1_Name=t1NetworkProfileV1_Name, mibt1NetworkProfileEntry=mibt1NetworkProfileEntry, t1NetworkProfile_LineInterface_NfasGroupId=t1NetworkProfile_LineInterface_NfasGroupId, t1NetworkProfileV1_LineInterface_Enabled=t1NetworkProfileV1_LineInterface_Enabled, t1NetworkProfile_LineInterface_SwitchVersion=t1NetworkProfile_LineInterface_SwitchVersion, t1NetworkProfileV1_PhysicalAddress_ItemNumber=t1NetworkProfileV1_PhysicalAddress_ItemNumber, t1NetworkProfileV1_LineInterface_R1AnirDelay=t1NetworkProfileV1_LineInterface_R1AnirDelay, t1NetworkProfileV1_ProfileNumber=t1NetworkProfileV1_ProfileNumber, t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_RelativePortNumber_RelativePortNumber=t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_RelativePortNumber_RelativePortNumber, t1NetworkProfile_LineInterface_ChannelConfig_Shelf_o=t1NetworkProfile_LineInterface_ChannelConfig_Shelf_o, t1NetworkProfileV1_LineInterface_DownTransDelay=t1NetworkProfileV1_LineInterface_DownTransDelay, t1NetworkProfile_LineInterface_ChannelConfig_TrunkGroup=t1NetworkProfile_LineInterface_ChannelConfig_TrunkGroup, mibt1NetworkProfileTable=mibt1NetworkProfileTable, t1NetworkProfile_LineInterface_GroupIiSignal=t1NetworkProfile_LineInterface_GroupIiSignal, t1NetworkProfileV1_LineInterface_AddDigitString=t1NetworkProfileV1_LineInterface_AddDigitString, t1NetworkProfileV1_LineInterface_ChannelConfig_Index_o=t1NetworkProfileV1_LineInterface_ChannelConfig_Index_o, t1NetworkProfile_LineInterface_Ss7Continuity_OutgoingProcedure=t1NetworkProfile_LineInterface_Ss7Continuity_OutgoingProcedure, t1NetworkProfileV1_PhysicalAddress_Shelf=t1NetworkProfileV1_PhysicalAddress_Shelf, t1NetworkProfileV1_LineInterface_R1UseAnir=t1NetworkProfileV1_LineInterface_R1UseAnir, t1NetworkProfile_LineInterface_FrontEndType=t1NetworkProfile_LineInterface_FrontEndType, t1NetworkProfile_LineInterface_StatusChangeTrapEnable=t1NetworkProfile_LineInterface_StatusChangeTrapEnable, t1NetworkProfile_LineInterface_ChannelConfig_Slot_o=t1NetworkProfile_LineInterface_ChannelConfig_Slot_o, mibt1NetworkProfile_LineInterface_ChannelConfigTable=mibt1NetworkProfile_LineInterface_ChannelConfigTable, t1NetworkProfile_PhysicalAddress_Slot=t1NetworkProfile_PhysicalAddress_Slot, t1NetworkProfileV1_LineInterface_NetworkSpecificFacilities=t1NetworkProfileV1_LineInterface_NetworkSpecificFacilities, t1NetworkProfileV1_LineInterface_R1FirstDigitTimer=t1NetworkProfileV1_LineInterface_R1FirstDigitTimer, t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_SlotNumber_ShelfNumber=t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_SlotNumber_ShelfNumber, t1NetworkProfileV1_LineInterface_oFDL=t1NetworkProfileV1_LineInterface_oFDL, t1NetworkProfileV1_LineInterface_InputSampleCount=t1NetworkProfileV1_LineInterface_InputSampleCount, t1NetworkProfile_LineInterface_IdleMode=t1NetworkProfile_LineInterface_IdleMode, t1NetworkProfileV1_LineInterface_Gr303Ds1Id=t1NetworkProfileV1_LineInterface_Gr303Ds1Id, t1NetworkProfile_LineInterface_ChannelConfig_DestChanGroup=t1NetworkProfile_LineInterface_ChannelConfig_DestChanGroup, t1NetworkProfileV1_LineInterface_LastDs0=t1NetworkProfileV1_LineInterface_LastDs0, t1NetworkProfileV1_LineInterface_ChannelConfig_Name=t1NetworkProfileV1_LineInterface_ChannelConfig_Name, t1NetworkProfileV1_LineInterface_Ss7Continuity_IncomingProcedure=t1NetworkProfileV1_LineInterface_Ss7Continuity_IncomingProcedure, mibt1NetworkProfile=mibt1NetworkProfile, t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_RelativePortNumber_RelativePortNumber=t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_RelativePortNumber_RelativePortNumber, t1NetworkProfileV1_LineInterface_R1Modified=t1NetworkProfileV1_LineInterface_R1Modified, t1NetworkProfile_LineInterface_ClockPriority=t1NetworkProfile_LineInterface_ClockPriority, DisplayString=DisplayString, mibt1NetworkProfileV1Entry=mibt1NetworkProfileV1Entry, t1NetworkProfile_LineInterface_GroupBAnswerSignal=t1NetworkProfile_LineInterface_GroupBAnswerSignal, t1NetworkProfileV1_LineInterface_TrailingDigits=t1NetworkProfileV1_LineInterface_TrailingDigits, t1NetworkProfile_LineInterface_ClockSource=t1NetworkProfile_LineInterface_ClockSource, t1NetworkProfileV1_LineInterface_GroupBBusySignal=t1NetworkProfileV1_LineInterface_GroupBBusySignal, t1NetworkProfileV1_LineInterface_LineProvision=t1NetworkProfileV1_LineInterface_LineProvision, t1NetworkProfile_LineInterface_oFDL=t1NetworkProfile_LineInterface_oFDL, t1NetworkProfileV1_LineInterface_T302Timer=t1NetworkProfileV1_LineInterface_T302Timer, t1NetworkProfile_LineInterface_GroupBCollectSignal=t1NetworkProfile_LineInterface_GroupBCollectSignal, t1NetworkProfile_LineInterface_PriNumberingPlanId=t1NetworkProfile_LineInterface_PriNumberingPlanId, t1NetworkProfileV1_LineInterface_GroupBNoChargeSignal=t1NetworkProfileV1_LineInterface_GroupBNoChargeSignal, mibt1NetworkProfileV1_LineInterface_ChannelConfigEntry=mibt1NetworkProfileV1_LineInterface_ChannelConfigEntry, t1NetworkProfile_LineInterface_IsdnEmulationSide=t1NetworkProfile_LineInterface_IsdnEmulationSide, t1NetworkProfile_LineInterface_AddDigitString=t1NetworkProfile_LineInterface_AddDigitString, t1NetworkProfile_LineInterface_NumberComplete=t1NetworkProfile_LineInterface_NumberComplete, t1NetworkProfile_BackToBack=t1NetworkProfile_BackToBack, t1NetworkProfileV1_LineInterface_LoopAvoidance=t1NetworkProfileV1_LineInterface_LoopAvoidance, t1NetworkProfileV1_LineInterface_oCSUBuildOut=t1NetworkProfileV1_LineInterface_oCSUBuildOut, t1NetworkProfile_LineInterface_oCSUBuildOut=t1NetworkProfile_LineInterface_oCSUBuildOut, t1NetworkProfileV1_LineInterface_NailedGroup=t1NetworkProfileV1_LineInterface_NailedGroup, t1NetworkProfile_LineInterface_NetworkSpecificFacilities=t1NetworkProfile_LineInterface_NetworkSpecificFacilities, t1NetworkProfile_LineInterface_DeleteDigits=t1NetworkProfile_LineInterface_DeleteDigits, t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber3=t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber3, t1NetworkProfile_LineInterface_Enabled=t1NetworkProfile_LineInterface_Enabled, t1NetworkProfileV1_LineInterface_ClockSource=t1NetworkProfileV1_LineInterface_ClockSource, t1NetworkProfile_LineInterface_IncomingCallHandling=t1NetworkProfile_LineInterface_IncomingCallHandling, mibt1NetworkProfile_LineInterface_ChannelConfigEntry=mibt1NetworkProfile_LineInterface_ChannelConfigEntry, t1NetworkProfileV1_LineInterface_AnswerDelay=t1NetworkProfileV1_LineInterface_AnswerDelay, t1NetworkProfile_Shelf_o=t1NetworkProfile_Shelf_o, t1NetworkProfile_LineInterface_ChannelConfig_Index_o=t1NetworkProfile_LineInterface_ChannelConfig_Index_o, t1NetworkProfileV1_LineInterface_IncomingCallHandling=t1NetworkProfileV1_LineInterface_IncomingCallHandling, t1NetworkProfileV1_LineInterface_UpTransDelay=t1NetworkProfileV1_LineInterface_UpTransDelay, t1NetworkProfile_LineInterface_ChannelConfig_Item_o=t1NetworkProfile_LineInterface_ChannelConfig_Item_o, t1NetworkProfileV1_LineInterface_Gr303GroupId=t1NetworkProfileV1_LineInterface_Gr303GroupId, t1NetworkProfileV1_LineInterface_DeleteDigits=t1NetworkProfileV1_LineInterface_DeleteDigits, t1NetworkProfileV1_LineInterface_CallByCall=t1NetworkProfileV1_LineInterface_CallByCall, t1NetworkProfileV1_LineInterface_SuperFrameSrcLineNumber=t1NetworkProfileV1_LineInterface_SuperFrameSrcLineNumber, t1NetworkProfileV1_LineInterface_FirstDs0=t1NetworkProfileV1_LineInterface_FirstDs0, mibt1NetworkProfileV1Table=mibt1NetworkProfileV1Table, t1NetworkProfileV1_LineInterface_SwitchType=t1NetworkProfileV1_LineInterface_SwitchType, t1NetworkProfileV1_LineInterface_ChannelConfig_TrunkGroup=t1NetworkProfileV1_LineInterface_ChannelConfig_TrunkGroup, t1NetworkProfileV1_LineInterface_ChannelConfig_DestChanGroup=t1NetworkProfileV1_LineInterface_ChannelConfig_DestChanGroup, t1NetworkProfileV1_LineInterface_GroupBAnswerSignal=t1NetworkProfileV1_LineInterface_GroupBAnswerSignal, t1NetworkProfileV1_LineInterface_OverlapReceiving=t1NetworkProfileV1_LineInterface_OverlapReceiving, t1NetworkProfile_LineInterface_ChannelConfig_DialPlanNumber=t1NetworkProfile_LineInterface_ChannelConfig_DialPlanNumber, t1NetworkProfile_LineInterface_PriTypeOfNumber=t1NetworkProfile_LineInterface_PriTypeOfNumber, t1NetworkProfile_LineInterface_CollectIncomingDigits=t1NetworkProfile_LineInterface_CollectIncomingDigits, t1NetworkProfile_LineInterface_LineProvision=t1NetworkProfile_LineInterface_LineProvision, t1NetworkProfile_LineInterface_FirstDs0=t1NetworkProfile_LineInterface_FirstDs0, t1NetworkProfile_LineInterface_Gr303GroupId=t1NetworkProfile_LineInterface_Gr303GroupId, t1NetworkProfile_LineInterface_SuperFrameSrcLineNumber=t1NetworkProfile_LineInterface_SuperFrameSrcLineNumber, t1NetworkProfileV1_LineInterface_GroupBNoMatchSignal=t1NetworkProfileV1_LineInterface_GroupBNoMatchSignal, t1NetworkProfile_PhysicalAddress_Shelf=t1NetworkProfile_PhysicalAddress_Shelf, t1NetworkProfile_PhysicalAddress_ItemNumber=t1NetworkProfile_PhysicalAddress_ItemNumber, t1NetworkProfileV1_LineInterface_PriNumberingPlanId=t1NetworkProfileV1_LineInterface_PriNumberingPlanId, t1NetworkProfile_LineInterface_LineSignaling=t1NetworkProfile_LineInterface_LineSignaling, t1NetworkProfile_LineInterface_HuntGrpPhoneNumber2=t1NetworkProfile_LineInterface_HuntGrpPhoneNumber2, t1NetworkProfileV1_LineInterface_IdleMode=t1NetworkProfileV1_LineInterface_IdleMode, mibt1NetworkProfileV1_LineInterfaceEntry=mibt1NetworkProfileV1_LineInterfaceEntry, t1NetworkProfileV1_LineInterface_ChannelConfig_DialPlanNumber=t1NetworkProfileV1_LineInterface_ChannelConfig_DialPlanNumber, t1NetworkProfile_LineInterface_PriPrefixNumber=t1NetworkProfile_LineInterface_PriPrefixNumber, t1NetworkProfile_LineInterface_AnswerService=t1NetworkProfile_LineInterface_AnswerService, t1NetworkProfileV1_LineInterface_NfasGroupId=t1NetworkProfileV1_LineInterface_NfasGroupId, t1NetworkProfile_LineInterface_Layer2End=t1NetworkProfile_LineInterface_Layer2End, t1NetworkProfileV1_PhysicalAddress_Slot=t1NetworkProfileV1_PhysicalAddress_Slot, t1NetworkProfile_LineInterface_OverlapReceiving=t1NetworkProfile_LineInterface_OverlapReceiving, t1NetworkProfile_ChannelUsage=t1NetworkProfile_ChannelUsage, t1NetworkProfileV1_LineInterface_CollectIncomingDigits=t1NetworkProfileV1_LineInterface_CollectIncomingDigits, t1NetworkProfile_LineInterface_ChannelConfig_NailedGroup=t1NetworkProfile_LineInterface_ChannelConfig_NailedGroup, mibt1NetworkProfileV1_LineInterface_ChannelConfigTable=mibt1NetworkProfileV1_LineInterface_ChannelConfigTable, t1NetworkProfile_Item_o=t1NetworkProfile_Item_o, t1NetworkProfile_LineInterface_GroupBNoMatchSignal=t1NetworkProfile_LineInterface_GroupBNoMatchSignal, t1NetworkProfileV1_LineInterface_RobbedBitMode=t1NetworkProfileV1_LineInterface_RobbedBitMode, t1NetworkProfile_LineInterface_Gr303Mode=t1NetworkProfile_LineInterface_Gr303Mode, t1NetworkProfile_LineInterface_Layer3End=t1NetworkProfile_LineInterface_Layer3End, t1NetworkProfile_LineInterface_MaintenanceState=t1NetworkProfile_LineInterface_MaintenanceState, t1NetworkProfile_LineInterface_oDSXLineLength=t1NetworkProfile_LineInterface_oDSXLineLength, t1NetworkProfileV1_LineInterface_Layer2End=t1NetworkProfileV1_LineInterface_Layer2End, t1NetworkProfile_LineInterface_Encoding=t1NetworkProfile_LineInterface_Encoding, t1NetworkProfileV1_LineInterface_NumberComplete=t1NetworkProfileV1_LineInterface_NumberComplete, t1NetworkProfileV1_LineInterface_SwitchVersion=t1NetworkProfileV1_LineInterface_SwitchVersion, t1NetworkProfileV1_LineInterface_TOnlineType=t1NetworkProfileV1_LineInterface_TOnlineType, t1NetworkProfile_LineInterface_R1FirstDigitTimer=t1NetworkProfile_LineInterface_R1FirstDigitTimer, t1NetworkProfileV1_LineInterface_PriPrefixNumber=t1NetworkProfileV1_LineInterface_PriPrefixNumber, t1NetworkProfileV1_LineInterface_CauseCodeVerificationEnable=t1NetworkProfileV1_LineInterface_CauseCodeVerificationEnable, t1NetworkProfile_LineInterface_CallByCall=t1NetworkProfile_LineInterface_CallByCall, t1NetworkProfile_Name=t1NetworkProfile_Name, t1NetworkProfile_LineInterface_ChannelConfig_NumberOfDialPlanSelectDigits=t1NetworkProfile_LineInterface_ChannelConfig_NumberOfDialPlanSelectDigits, t1NetworkProfileV1_LineInterface_GroupIiSignal=t1NetworkProfileV1_LineInterface_GroupIiSignal, t1NetworkProfileV1_Action_o=t1NetworkProfileV1_Action_o, t1NetworkProfile_LineInterface_oPBXType=t1NetworkProfile_LineInterface_oPBXType, t1NetworkProfile_LineInterface_ChannelConfig_ChanGroup=t1NetworkProfile_LineInterface_ChannelConfig_ChanGroup, t1NetworkProfileV1_LineInterface_SignalingMode=t1NetworkProfileV1_LineInterface_SignalingMode, t1NetworkProfile_LineInterface_TrailingDigits=t1NetworkProfile_LineInterface_TrailingDigits, t1NetworkProfile_LineInterface_R1AnirDelay=t1NetworkProfile_LineInterface_R1AnirDelay, t1NetworkProfileV1_LineInterface_ChannelConfig_ChannelUsage=t1NetworkProfileV1_LineInterface_ChannelConfig_ChannelUsage, t1NetworkProfileV1_LineInterface_ChannelConfig_PhoneNumber=t1NetworkProfileV1_LineInterface_ChannelConfig_PhoneNumber, t1NetworkProfileV1_LineInterface_ClockPriority=t1NetworkProfileV1_LineInterface_ClockPriority, t1NetworkProfileV1_LineInterface_SendDiscVal=t1NetworkProfileV1_LineInterface_SendDiscVal, t1NetworkProfileV1_LineInterface_PriTypeOfNumber=t1NetworkProfileV1_LineInterface_PriTypeOfNumber, t1NetworkProfile_LineInterface_RobbedBitMode=t1NetworkProfile_LineInterface_RobbedBitMode, t1NetworkProfileV1_LineInterface_Encoding=t1NetworkProfileV1_LineInterface_Encoding, t1NetworkProfileV1_LineInterface_IsdnEmulationSide=t1NetworkProfileV1_LineInterface_IsdnEmulationSide, t1NetworkProfile_LineInterface_GroupBNoChargeSignal=t1NetworkProfile_LineInterface_GroupBNoChargeSignal, t1NetworkProfileV1_LineInterface_DataSense=t1NetworkProfileV1_LineInterface_DataSense, t1NetworkProfile_LineInterface_NfasId=t1NetworkProfile_LineInterface_NfasId, t1NetworkProfile_LineInterface_FrameType=t1NetworkProfile_LineInterface_FrameType, t1NetworkProfile_LineInterface_SendDiscVal=t1NetworkProfile_LineInterface_SendDiscVal, t1NetworkProfileV1_SecondaryChannelUsage=t1NetworkProfileV1_SecondaryChannelUsage, t1NetworkProfile_LineInterface_HuntGrpPhoneNumber1=t1NetworkProfile_LineInterface_HuntGrpPhoneNumber1, t1NetworkProfile_LineInterface_DataSense=t1NetworkProfile_LineInterface_DataSense, t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_SlotNumber_ShelfNumber=t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_SlotNumber_ShelfNumber, t1NetworkProfileV1_LineInterface_ChannelConfig_ChanGroup=t1NetworkProfileV1_LineInterface_ChannelConfig_ChanGroup, t1NetworkProfile_LineInterface_NlValue=t1NetworkProfile_LineInterface_NlValue, t1NetworkProfileV1_LineInterface_Gr303Mode=t1NetworkProfileV1_LineInterface_Gr303Mode, mibt1NetworkProfileV1=mibt1NetworkProfileV1, t1NetworkProfileV1_LineInterface_PbxAnswerNumber=t1NetworkProfileV1_LineInterface_PbxAnswerNumber, t1NetworkProfile_LineInterface_Gr303Ds1Id=t1NetworkProfile_LineInterface_Gr303Ds1Id, t1NetworkProfile_LineInterface_PbxAnswerNumber=t1NetworkProfile_LineInterface_PbxAnswerNumber, t1NetworkProfile_LineInterface_AnswerDelay=t1NetworkProfile_LineInterface_AnswerDelay, t1NetworkProfile_LineInterface_R1AnirTimer=t1NetworkProfile_LineInterface_R1AnirTimer, t1NetworkProfile_LineInterface_ChannelConfig_PhoneNumber=t1NetworkProfile_LineInterface_ChannelConfig_PhoneNumber, t1NetworkProfileV1_LineInterface_LineSignaling=t1NetworkProfileV1_LineInterface_LineSignaling, t1NetworkProfileV1_LineInterface_FrameType=t1NetworkProfileV1_LineInterface_FrameType, t1NetworkProfileV1_LineInterface_NfasId=t1NetworkProfileV1_LineInterface_NfasId, t1NetworkProfileV1_BackToBack=t1NetworkProfileV1_BackToBack, t1NetworkProfile_LineInterface_R1Modified=t1NetworkProfile_LineInterface_R1Modified, t1NetworkProfile_LineInterface_HuntGrpPhoneNumber3=t1NetworkProfile_LineInterface_HuntGrpPhoneNumber3, t1NetworkProfile_LineInterface_CallerId=t1NetworkProfile_LineInterface_CallerId, t1NetworkProfileV1_LineInterface_Index_o=t1NetworkProfileV1_LineInterface_Index_o, t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_SlotNumber_SlotNumber=t1NetworkProfile_LineInterface_ChannelConfig_RoutePort_SlotNumber_SlotNumber, t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber1=t1NetworkProfileV1_LineInterface_HuntGrpPhoneNumber1, t1NetworkProfile_LineInterface_R1UseAnir=t1NetworkProfile_LineInterface_R1UseAnir, t1NetworkProfile_LineInterface_UpTransDelay=t1NetworkProfile_LineInterface_UpTransDelay, t1NetworkProfileV1_TertiaryChannelUsage=t1NetworkProfileV1_TertiaryChannelUsage, t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_SlotNumber_SlotNumber=t1NetworkProfileV1_LineInterface_ChannelConfig_RoutePort_SlotNumber_SlotNumber, t1NetworkProfileV1_LineInterface_oDSXLineLength=t1NetworkProfileV1_LineInterface_oDSXLineLength, t1NetworkProfileV1_LineInterface_FrontEndType=t1NetworkProfileV1_LineInterface_FrontEndType, t1NetworkProfileV1_LineInterface_R1AnirTimer=t1NetworkProfileV1_LineInterface_R1AnirTimer, t1NetworkProfileV1_LineInterface_Timer1CollectCall=t1NetworkProfileV1_LineInterface_Timer1CollectCall, t1NetworkProfileV1_LineInterface_ChannelConfig_NumberOfDialPlanSelectDigits=t1NetworkProfileV1_LineInterface_ChannelConfig_NumberOfDialPlanSelectDigits, t1NetworkProfile_LineInterface_SwitchType=t1NetworkProfile_LineInterface_SwitchType, t1NetworkProfileV1_PrimaryChannelUsage=t1NetworkProfileV1_PrimaryChannelUsage, t1NetworkProfile_LineInterface_Timer1CollectCall=t1NetworkProfile_LineInterface_Timer1CollectCall, t1NetworkProfile_LineInterface_LastDs0=t1NetworkProfile_LineInterface_LastDs0, t1NetworkProfile_LineInterface_Ss7Continuity_IncomingProcedure=t1NetworkProfile_LineInterface_Ss7Continuity_IncomingProcedure, t1NetworkProfile_Action_o=t1NetworkProfile_Action_o)
