#
# PySNMP MIB module DC-BGP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DC-BGP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:26:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
BfdSessionStatus, = mibBuilder.importSymbols("DC-MASTER-TC", "BfdSessionStatus")
InetAddressPrefixLength, InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddressType", "InetAddress", "InetPortNumber")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, ModuleIdentity, TimeTicks, Integer32, ObjectIdentity, Unsigned32, Counter64, Gauge32, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "TimeTicks", "Integer32", "ObjectIdentity", "Unsigned32", "Counter64", "Gauge32", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "NotificationType")
RowStatus, TimeInterval, TimeStamp, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TimeInterval", "TimeStamp", "TextualConvention", "DisplayString", "TruthValue")
bgpMib = ModuleIdentity((1, 2, 826, 0, 1, 1578918, 5, 65, 1))
bgpMib.setRevisions(('2013-08-29 00:00', '2013-04-02 00:00',))
if mibBuilder.loadTexts: bgpMib.setLastUpdated('201308290000Z')
if mibBuilder.loadTexts: bgpMib.setOrganization('Data Connection Ltd.')
class BgpIdentifier(TextualConvention, OctetString):
    status = 'current'
    displayHint = '4x'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class BgpAfi(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 25))
    namedValues = NamedValues(("other", 0), ("ipv4", 1), ("ipv6", 2), ("l2vpn", 25))

class BgpSafi(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 65, 128))
    namedValues = NamedValues(("none", 0), ("unicast", 1), ("multicast", 2), ("both", 3), ("labeled", 4), ("vpls", 65), ("mplsBgpVpn", 128))

class BgpAutonomousSystemNumber(TextualConvention, Unsigned32):
    status = 'current'

class BgpAsSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("twoOctet", 1), ("fourOctet", 2))

class BgpAdminStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("adminStatusUp", 1), ("adminStatusDown", 2))

class BgpOperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("operStatusUp", 1), ("operStatusDown", 2), ("operStatusGoingUp", 3), ("operStatusGoingDown", 4), ("operStatusActFailed", 5))

class BgpOriginCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("originIgp", 0), ("originEgp", 1), ("originIncomplete", 2))

class BgpMedDeltaType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("increment", 1), ("decrement", 2))

class BgpIpMatchType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("nlriAddr", 1), ("sourceAddr", 2), ("nextHopAddr", 3))

class BgpPermitOrDeny(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("permit", 1), ("deny", 2))

class BgpDropOrWarn(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("drop", 1), ("warn", 2))

class BgpIbgpOrEbgp(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ibgp", 1), ("ebgp", 2), ("ebgpconfed", 3))

class BgpPeerOrAfm(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("peerIndex", 1), ("afmIndex", 2))

class BgpAsPathAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("set", 1), ("remMatch", 2), ("remMatchAndSet", 3))

class BgpAggregateOptions(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 1), ("summary", 2), ("asSet", 3), ("summaryAsSet", 4), ("asAppend", 5), ("summaryAsAppend", 6))

class BgpMjStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("mjNotJoined", 1), ("mjSentAddJoin", 2), ("mjSentRegister", 3), ("mjJoinActive", 4), ("mjSentDelJoin", 5), ("mjSentUnregister", 6), ("mjJoinGone", 7), ("mjFailedToRegister", 8), ("mjFailingOver", 9), ("mjFailed", 10), ("mjNoPartner", 11))

class BgpSjStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("sjNotJoined", 1), ("sjJoined", 2), ("sjJoinActive", 3), ("sjJoinUnreg", 4), ("sjJoinGone", 5), ("sjFailingOver", 6), ("sjFailed", 7))

class BgpPeerStates(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("opensent", 4), ("openconfirm", 5), ("established", 6))

class BgpPeerEvents(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("noEvent", 0), ("start", 1), ("stop", 2), ("transportOpen", 3), ("transportClosed", 4), ("transportOpenFailed", 5), ("transportFatalError", 6), ("connectRetryTimer", 7), ("holdTimer", 8), ("keepaliverTimer", 9), ("recvOpen", 10), ("recvKeepAlive", 11), ("recvUpdate", 12), ("recvNotification", 13))

class BgpCapabilities(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("mpIpv4Unicast", 0), ("mpIpv4Multicast", 1), ("mpIpv4Vpn", 2), ("mpIpv4Label", 3), ("mpIpv6Unicast", 4), ("mpIpv6Multicast", 5), ("mpIpv6Vpn", 6), ("mpIpv6Label", 7), ("routeRefresh", 8), ("gracefulRestart", 9), ("routeRefreshCisco", 10), ("outboundRouteFilter", 11), ("outboundRouteFilterCisco", 12), ("fourOctetAs", 13), ("mpL2vpnVpls", 14))

class BgpPeerRestartSupport(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("awareOnly", 2), ("enabled", 3))

class BgpPeerRestartStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("notRestarting", 1), ("restartTimerRunning", 2), ("stalePathTimerRunning", 3))

class BgpPeerLastFailure(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("notifySent", 2), ("notifyRecv", 3))

class BgpCeaseErrorSubcode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4, 6, 8))
    namedValues = NamedValues(("none", 0), ("adminShutdown", 2), ("peerUnconfig", 3), ("adminReset", 4), ("configChange", 6), ("noResource", 8))

class BgpPeerReflectorClientType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("nonClient", 0), ("client", 1), ("meshedClient", 2))

class BgpComponentId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("componentRm", 1), ("componentNm", 2), ("componentIpSockets", 3), ("componentRtm", 4), ("componentVmIpv4", 5), ("componentBfd", 6))

class BgpCommunity(TextualConvention, OctetString):
    status = 'current'
    displayHint = '4x'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class BgpExtendedCommunity(TextualConvention, OctetString):
    status = 'current'
    displayHint = '8x'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class BgpCommunityAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none", 0), ("removeAll", 1), ("removeSpecific", 2), ("setSpecific", 3), ("removeAllAndSet", 4))

class BgpPathAttrAtomicAggPresence(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("atomicAggregatePresent", 1), ("atomicAggregateMissing", 2))

class BgpOrfType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 64))
    namedValues = NamedValues(("community", 1), ("extCommunity", 2), ("prefix", 64))

class BgpOrfSendReceive(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("receive", 1), ("send", 2), ("both", 3))

class BgpOrfAssociation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("noAssociation", 0), ("local", 1), ("remote", 2))

class BgpPeeringType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unspecified", 0), ("provider", 1), ("customer", 2), ("biLateral", 3))

class BgpAfiSafiBits(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("ipv4Unicast", 0), ("ipv4Multicast", 1), ("ipv4MplsBgpVpn", 2), ("ipv6Unicast", 3), ("ipv6Multicast", 4), ("ipv6MplsBgpVpn", 5), ("ipv4Labeled", 6), ("ipv6Labeled", 7), ("l2vpnVpls", 8))

class BgpNlriIsActiveFlag(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("notTracked", 1), ("inactive", 2), ("active", 3))

bgpNotifications = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1))
bgpRm = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2))
bgpRmEntTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1), )
if mibBuilder.loadTexts: bgpRmEntTable.setStatus('current')
bgpRmEntEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"))
if mibBuilder.loadTexts: bgpRmEntEntry.setStatus('current')
bgpRmEntIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: bgpRmEntIndex.setStatus('current')
bgpRmEntRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntRowStatus.setStatus('current')
bgpRmEntAdminStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 3), BgpAdminStatus().clone('adminStatusDown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntAdminStatus.setStatus('current')
bgpRmEntOperStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 4), BgpOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntOperStatus.setStatus('current')
bgpRmEntAsSize = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 5), BgpAsSize().clone('twoOctet')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntAsSize.setStatus('current')
bgpRmEntLocalAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 6), BgpAutonomousSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntLocalAs.setStatus('current')
bgpRmEntLocalMbrAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 7), BgpAutonomousSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntLocalMbrAs.setStatus('current')
bgpRmEntLocalIdentifier = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 8), BgpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntLocalIdentifier.setStatus('current')
bgpRmEntClusterId = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 9), BgpIdentifier().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntClusterId.setStatus('current')
bgpRmEntIpv4MultiSupport = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntIpv4MultiSupport.setStatus('obsolete')
bgpRmEntVpnIpv4Support = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntVpnIpv4Support.setStatus('obsolete')
bgpRmEntFlapDeltat = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntFlapDeltat.setStatus('current')
bgpRmEntFlapReusemax = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntFlapReusemax.setStatus('current')
bgpRmEntFlapReusesize = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntFlapReusesize.setStatus('current')
bgpRmEntFlapReusearray = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 15), Unsigned32().clone(1024)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntFlapReusearray.setStatus('current')
bgpRmEntFlapFreemax = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 16), Unsigned32().clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntFlapFreemax.setStatus('current')
bgpRmEntNoRefresh = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntNoRefresh.setStatus('current')
bgpRmEntDefLocalPref = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 18), Unsigned32().clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntDefLocalPref.setStatus('current')
bgpRmEntAlwaysCompMed = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntAlwaysCompMed.setStatus('current')
bgpRmEntAggregateMed = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 20), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntAggregateMed.setStatus('current')
bgpRmEntDeterministicMed = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 21), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntDeterministicMed.setStatus('current')
bgpRmEntNhrJoinStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 22), BgpMjStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntNhrJoinStatus.setStatus('obsolete')
bgpRmEntNhrEntIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 23), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntNhrEntIndex.setStatus('obsolete')
bgpRmEntI3JoinStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 24), BgpMjStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntI3JoinStatus.setStatus('current')
bgpRmEntI3EntIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 25), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntI3EntIndex.setStatus('current')
bgpRmEntPauseThreshold = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 26), Unsigned32().clone(2000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntPauseThreshold.setStatus('current')
bgpRmEntMaxIBgpEcmpRoutes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 27), Unsigned32().clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntMaxIBgpEcmpRoutes.setStatus('current')
bgpRmEntMaxEBgpEcmpRoutes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 28), Unsigned32().clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntMaxEBgpEcmpRoutes.setStatus('current')
bgpRmEntRestartSupported = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 29), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntRestartSupported.setStatus('current')
bgpRmEntMaxRestartTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntMaxRestartTime.setStatus('current')
bgpRmEntRecoveryTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntRecoveryTime.setStatus('current')
bgpRmEntRestarting = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 32), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntRestarting.setStatus('current')
bgpRmEntIpv4UniFwdPrsrvd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 33), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntIpv4UniFwdPrsrvd.setStatus('obsolete')
bgpRmEntIpv4MultiFwdPrsrvd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 34), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntIpv4MultiFwdPrsrvd.setStatus('obsolete')
bgpRmEntVpnIpv4FwdPrsrvd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 35), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntVpnIpv4FwdPrsrvd.setStatus('obsolete')
bgpRmEntIpv4ArinhJoinStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 36), BgpSjStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntIpv4ArinhJoinStatus.setStatus('current')
bgpRmEntIpv4ArinhEntIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntIpv4ArinhEntIndex.setStatus('current')
bgpRmEntIpv6ArinhJoinStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 38), BgpSjStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntIpv6ArinhJoinStatus.setStatus('current')
bgpRmEntIpv6ArinhEntIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntIpv6ArinhEntIndex.setStatus('current')
bgpRmEntSupportIpv6 = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 40), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntSupportIpv6.setStatus('current')
bgpRmEntStrictConfed = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 41), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntStrictConfed.setStatus('current')
bgpRmEntOrfSupported = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 42), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntOrfSupported.setStatus('current')
bgpRmEntCiscoPrefixSupported = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 43), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntCiscoPrefixSupported.setStatus('current')
bgpRmEntSelectDeferTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 44), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntSelectDeferTime.setStatus('current')
bgpRmEntStalePathTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 45), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntStalePathTime.setStatus('current')
bgpRmEntNonPersistentAros = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 46), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntNonPersistentAros.setStatus('current')
bgpRmEntAroRouteThreshold = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 47), Unsigned32().clone(1000000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntAroRouteThreshold.setStatus('current')
bgpRmEntMaxActiveAroGroups = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 48), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntMaxActiveAroGroups.setStatus('current')
bgpRmEntNumArosInGroup = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 49), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntNumArosInGroup.setStatus('current')
bgpRmEntNumAroRoutes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntNumAroRoutes.setStatus('current')
bgpRmEntPeakNumAroRoutes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntPeakNumAroRoutes.setStatus('current')
bgpRmEntClearStats = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 52), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntClearStats.setStatus('current')
bgpRmEntFastExtFallover = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 53), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntFastExtFallover.setStatus('current')
bgpRmEntRemainDelayTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 54), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntRemainDelayTime.setStatus('current')
bgpRmEntPathAttrs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmEntPathAttrs.setStatus('current')
bgpRmEntAggSplitHorizon = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 56), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntAggSplitHorizon.setStatus('current')
bgpRmEntAggAdvSuppr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 57), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntAggAdvSuppr.setStatus('current')
bgpRmEntUpdateGroups = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 58), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntUpdateGroups.setStatus('current')
bgpRmEntPhase3DelayTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 59), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(120)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntPhase3DelayTime.setStatus('current')
bgpRmEntTrapOperState = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 1, 1, 60), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmEntTrapOperState.setStatus('current')
bgpPeer = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3))
bgpPeerData = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1))
bgpPeerTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1), )
if mibBuilder.loadTexts: bgpPeerTable.setStatus('current')
bgpPeerEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpPeerLocalAddrType"), (0, "DC-BGP-MIB", "bgpPeerLocalAddr"), (0, "DC-BGP-MIB", "bgpPeerLocalPort"), (0, "DC-BGP-MIB", "bgpPeerRemoteAddrType"), (0, "DC-BGP-MIB", "bgpPeerRemoteAddr"), (0, "DC-BGP-MIB", "bgpPeerRemotePort"), (0, "DC-BGP-MIB", "bgpPeerLocalAddrScopeId"))
if mibBuilder.loadTexts: bgpPeerEntry.setStatus('current')
bgpPeerIdentifier = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 2), BgpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerIdentifier.setStatus('current')
bgpPeerState = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 3), BgpPeerStates()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerState.setStatus('current')
bgpPeerRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerRowStatus.setStatus('current')
bgpPeerAdminStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 5), BgpAdminStatus().clone('adminStatusDown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAdminStatus.setStatus('current')
bgpPeerOperStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 6), BgpOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerOperStatus.setStatus('current')
bgpPeerLocalAddrType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLocalAddrType.setStatus('current')
bgpPeerLocalAddr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 8), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLocalAddr.setStatus('current')
bgpPeerLocalPort = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 9), InetPortNumber())
if mibBuilder.loadTexts: bgpPeerLocalPort.setStatus('current')
bgpPeerLocalNm = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerLocalNm.setStatus('current')
bgpPeerRemoteAddrType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 11), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRemoteAddrType.setStatus('current')
bgpPeerRemoteAddr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 12), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRemoteAddr.setStatus('current')
bgpPeerRemotePort = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 13), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRemotePort.setStatus('current')
bgpPeerRemoteAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 14), BgpAutonomousSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerRemoteAs.setStatus('current')
bgpPeerIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerIndex.setStatus('current')
bgpPeerConfedMember = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfedMember.setStatus('current')
bgpPeerReflectorClient = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 17), BgpPeerReflectorClientType().clone('nonClient')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerReflectorClient.setStatus('current')
bgpPeerTrapEstab = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerTrapEstab.setStatus('current')
bgpPeerTrapBackw = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerTrapBackw.setStatus('current')
bgpPeerCapsSupport = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerCapsSupport.setStatus('current')
bgpPeerLastError = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLastError.setStatus('current')
bgpPeerLastErrorDataLen = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLastErrorDataLen.setStatus('current')
bgpPeerLastErrorData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLastErrorData.setStatus('current')
bgpPeerFsmEstablishedTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 24), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerFsmEstablishedTime.setStatus('current')
bgpPeerInUpdatesElapsedTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 25), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerInUpdatesElapsedTime.setStatus('current')
bgpPeerConnectRetryInterval = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConnectRetryInterval.setStatus('current')
bgpPeerHoldTimeConfigd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), )).clone(90)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerHoldTimeConfigd.setStatus('current')
bgpPeerKeepAliveConfigd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), )).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerKeepAliveConfigd.setStatus('current')
bgpPeerMinASOriginationInterval = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerMinASOriginationInterval.setStatus('current')
bgpPeerMinRouteAdvertiseInterval = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerMinRouteAdvertiseInterval.setStatus('current')
bgpPeerHoldTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerHoldTime.setStatus('current')
bgpPeerKeepAlive = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerKeepAlive.setStatus('current')
bgpPeerInUpdates = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerInUpdates.setStatus('current')
bgpPeerOutUpdates = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerOutUpdates.setStatus('current')
bgpPeerInTotalMessages = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerInTotalMessages.setStatus('current')
bgpPeerOutTotalMessages = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerOutTotalMessages.setStatus('current')
bgpPeerFsmEstablishedTransitions = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerFsmEstablishedTransitions.setStatus('current')
bgpPeerConnectRetryCount = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerConnectRetryCount.setStatus('current')
bgpPeerClearCnts = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 39), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerClearCnts.setStatus('current')
bgpPeerConfigPeergr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 40), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfigPeergr.setStatus('current')
bgpPeerConfigIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 41), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfigIndex.setStatus('current')
bgpPeerConfigRtRefresh = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 42), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfigRtRefresh.setStatus('current')
bgpPeerConfigMaxPrfx = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 43), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfigMaxPrfx.setStatus('current')
bgpPeerConfigDropWarn = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 44), BgpDropOrWarn().clone('warn')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfigDropWarn.setStatus('current')
bgpPeerConfigPassive = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 45), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfigPassive.setStatus('current')
bgpPeerConfigOpenDelay = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 46), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfigOpenDelay.setStatus('current')
bgpPeerConfigIdleHold = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 47), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767)).clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfigIdleHold.setStatus('current')
bgpPeerPassword = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 48), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerPassword.setStatus('current')
bgpPeerTtl = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 49), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerTtl.setStatus('current')
bgpPeerCheckFirstAsNum = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 50), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerCheckFirstAsNum.setStatus('current')
bgpPeerAggrInclConfedAS = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 51), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAggrInclConfedAS.setStatus('current')
bgpPeerMinRouteWithdrawInterval = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 52), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerMinRouteWithdrawInterval.setStatus('current')
bgpPeerStalePathTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 53), Unsigned32().clone(30)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerStalePathTime.setStatus('current')
bgpPeerCheckNextHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 54), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerCheckNextHop.setStatus('current')
bgpPeerLocalAddrScopeId = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 55), Unsigned32())
if mibBuilder.loadTexts: bgpPeerLocalAddrScopeId.setStatus('current')
bgpPeerMaxOrfEntries = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 56), Unsigned32().clone(100000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerMaxOrfEntries.setStatus('current')
bgpPeerOrfEntryCount = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerOrfEntryCount.setStatus('current')
bgpPeerPeeringType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 58), BgpPeeringType().clone('unspecified')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerPeeringType.setStatus('current')
bgpPeerSoftResetWithStoredInfo = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 59), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerSoftResetWithStoredInfo.setStatus('current')
bgpPeerAllowLocalAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 60), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAllowLocalAs.setStatus('current')
bgpPeerDisableSenderLoopDetect = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 61), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerDisableSenderLoopDetect.setStatus('current')
bgpPeerDisableRouteRefresh = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 62), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerDisableRouteRefresh.setStatus('current')
bgpPeerFlapStatsClearStat = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 63), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerFlapStatsClearStat.setStatus('current')
bgpPeerFlapStatsClearMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 64), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerFlapStatsClearMap.setStatus('current')
bgpPeerLastErrorRcvd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 65), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLastErrorRcvd.setStatus('current')
bgpPeerLastErrorRcvdTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 66), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLastErrorRcvdTime.setStatus('current')
bgpPeerLastErrorSent = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 67), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLastErrorSent.setStatus('current')
bgpPeerLastErrorSentTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 68), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLastErrorSentTime.setStatus('current')
bgpPeerLastState = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 69), BgpPeerStates()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLastState.setStatus('current')
bgpPeerLastEvent = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 70), BgpPeerEvents()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerLastEvent.setStatus('current')
bgpPeerCapsSent = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 71), BgpCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerCapsSent.setStatus('current')
bgpPeerCapsRcvd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 72), BgpCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerCapsRcvd.setStatus('current')
bgpPeerCapsNegotiated = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 73), BgpCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerCapsNegotiated.setStatus('current')
bgpPeerRstrSupport = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 74), BgpPeerRestartSupport()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRstrSupport.setStatus('current')
bgpPeerRstrFamily = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 75), BgpAfiSafiBits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRstrFamily.setStatus('current')
bgpPeerRstrRestarting = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 76), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRstrRestarting.setStatus('current')
bgpPeerRstrStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 77), BgpPeerRestartStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRstrStatus.setStatus('current')
bgpPeerRstrRemTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 78), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRstrRemTime.setStatus('current')
bgpPeerRcvdMsgElapsedTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 79), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRcvdMsgElapsedTime.setStatus('current')
bgpPeerIdleHoldRemTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 80), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerIdleHoldRemTime.setStatus('current')
bgpPeerRouteRefrSent = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 81), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRouteRefrSent.setStatus('current')
bgpPeerRouteRefrRcvd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerRouteRefrRcvd.setStatus('current')
bgpPeerNxtHopSlf = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 83), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerNxtHopSlf.setStatus('current')
bgpPeerThirdPtyNxtHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 84), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerThirdPtyNxtHop.setStatus('current')
bgpPeerNxtHopPeer = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 85), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerNxtHopPeer.setStatus('current')
bgpPeerTrapPrefix = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 86), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerTrapPrefix.setStatus('current')
bgpPeerConfigThreshold = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 87), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(75)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfigThreshold.setStatus('current')
bgpPeerMaxPrfxHold = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 88), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(90)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerMaxPrfxHold.setStatus('current')
bgpPeerSelectedLocalAddrType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 89), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerSelectedLocalAddrType.setStatus('current')
bgpPeerSelectedLocalAddr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 90), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerSelectedLocalAddr.setStatus('current')
bgpPeerSelectedLocalPort = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 91), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerSelectedLocalPort.setStatus('current')
bgpPeerSelectedRemotePort = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 92), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerSelectedRemotePort.setStatus('current')
bgpPeerBfdDesired = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 93), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerBfdDesired.setStatus('current')
bgpPeerBfdStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 94), BfdSessionStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerBfdStatus.setStatus('current')
bgpPeerCeaseErrorSubcode = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 95), BgpCeaseErrorSubcode().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerCeaseErrorSubcode.setStatus('current')
bgpPeerConfAltLocalAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 96), BgpAutonomousSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerConfAltLocalAs.setStatus('current')
bgpPeerSelectedLocalAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 97), BgpAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerSelectedLocalAs.setStatus('current')
bgpPeerSelectedRemoteAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 98), BgpAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerSelectedRemoteAs.setStatus('current')
bgpPeerInPrfxes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 99), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerInPrfxes.setStatus('current')
bgpPeerOutPrfxes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 100), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerOutPrfxes.setStatus('current')
bgpPeerOutPrfxesAdvertised = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 101), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerOutPrfxesAdvertised.setStatus('current')
bgpPeerTrapGrHelperState = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 102), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerTrapGrHelperState.setStatus('current')
bgpPeerEnableAttributeDiscard = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 1, 1, 103), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerEnableAttributeDiscard.setStatus('current')
bgpPeerAfiSafiTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2), )
if mibBuilder.loadTexts: bgpPeerAfiSafiTable.setStatus('current')
bgpPeerAfiSafiEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpPeerLocalAddrType"), (0, "DC-BGP-MIB", "bgpPeerLocalAddr"), (0, "DC-BGP-MIB", "bgpPeerLocalPort"), (0, "DC-BGP-MIB", "bgpPeerRemoteAddrType"), (0, "DC-BGP-MIB", "bgpPeerRemoteAddr"), (0, "DC-BGP-MIB", "bgpPeerRemotePort"), (0, "DC-BGP-MIB", "bgpPeerLocalAddrScopeId"), (0, "DC-BGP-MIB", "bgpPeerAfiSafiAfi"), (0, "DC-BGP-MIB", "bgpPeerAfiSafiSafi"))
if mibBuilder.loadTexts: bgpPeerAfiSafiEntry.setStatus('current')
bgpPeerAfiSafiAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 8), BgpAfi())
if mibBuilder.loadTexts: bgpPeerAfiSafiAfi.setStatus('current')
bgpPeerAfiSafiSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 9), BgpSafi())
if mibBuilder.loadTexts: bgpPeerAfiSafiSafi.setStatus('current')
bgpPeerAfiSafiDisable = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 10), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiDisable.setStatus('current')
bgpPeerAfiSafiConfigRtRefresh = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiConfigRtRefresh.setStatus('current')
bgpPeerAfiSafiAllowLocalAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiAllowLocalAs.setStatus('current')
bgpPeerAfiSafiDisableSndLpDetect = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 13), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiDisableSndLpDetect.setStatus('current')
bgpPeerAfiSafiNxtHopSlf = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 14), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiNxtHopSlf.setStatus('current')
bgpPeerAfiSafiOrigDefault = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 15), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiOrigDefault.setStatus('current')
bgpPeerAfiSafiOrigDefaultRtMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 16), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiOrigDefaultRtMap.setStatus('current')
bgpPeerAfiSafiSoftResetStore = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 17), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiSoftResetStore.setStatus('current')
bgpPeerAfiSafiConfigMaxPrfx = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 18), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiConfigMaxPrfx.setStatus('current')
bgpPeerAfiSafiConfigDropWarn = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 19), BgpDropOrWarn().clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiConfigDropWarn.setStatus('current')
bgpPeerAfiSafiTrapPrefix = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 20), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiTrapPrefix.setStatus('current')
bgpPeerAfiSafiConfigThreshold = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(75)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiConfigThreshold.setStatus('current')
bgpPeerAfiSafiMaxPrfxHold = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(90)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiMaxPrfxHold.setStatus('current')
bgpPeerAfiSafiMaxOrfEntries = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 2, 1, 23), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerAfiSafiMaxOrfEntries.setStatus('current')
bgpPeerCaps = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2))
bgpPeerCapsRcvdTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 1), )
if mibBuilder.loadTexts: bgpPeerCapsRcvdTable.setStatus('current')
bgpPeerCapsRcvdEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpPeerIndex"), (0, "DC-BGP-MIB", "bgpPeerCapRcvdCode"), (0, "DC-BGP-MIB", "bgpPeerCapRcvdIndex"))
if mibBuilder.loadTexts: bgpPeerCapsRcvdEntry.setStatus('current')
bgpPeerCapRcvdCode = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: bgpPeerCapRcvdCode.setStatus('current')
bgpPeerCapRcvdIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: bgpPeerCapRcvdIndex.setStatus('current')
bgpPeerCapRcvdValue = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerCapRcvdValue.setStatus('current')
bgpPeerCapsSentTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 2), )
if mibBuilder.loadTexts: bgpPeerCapsSentTable.setStatus('current')
bgpPeerCapsSentEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 2, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpPeerIndex"), (0, "DC-BGP-MIB", "bgpPeerCapSentCode"), (0, "DC-BGP-MIB", "bgpPeerCapSentIndex"))
if mibBuilder.loadTexts: bgpPeerCapsSentEntry.setStatus('current')
bgpPeerCapSentCode = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: bgpPeerCapSentCode.setStatus('current')
bgpPeerCapSentIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: bgpPeerCapSentIndex.setStatus('current')
bgpPeerCapSentValue = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPeerCapSentValue.setStatus('current')
bgpPeerCntrs = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3))
bgpPrfxCntrsTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1), )
if mibBuilder.loadTexts: bgpPrfxCntrsTable.setStatus('current')
bgpPrfxCntrsEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpPeerIndex"), (0, "DC-BGP-MIB", "bgpPrfxCntrsAfi"), (0, "DC-BGP-MIB", "bgpPrfxCntrsSafi"))
if mibBuilder.loadTexts: bgpPrfxCntrsEntry.setStatus('current')
bgpPrfxCntrsAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 3), BgpAfi())
if mibBuilder.loadTexts: bgpPrfxCntrsAfi.setStatus('current')
bgpPrfxCntrsSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 4), BgpSafi())
if mibBuilder.loadTexts: bgpPrfxCntrsSafi.setStatus('current')
bgpPrfxInPrfxes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxInPrfxes.setStatus('current')
bgpPrfxInPrfxesAccepted = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxInPrfxesAccepted.setStatus('current')
bgpPrfxInPrfxesRejected = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxInPrfxesRejected.setStatus('current')
bgpPrfxOutPrfxes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxOutPrfxes.setStatus('current')
bgpPrfxOutPrfxesAdvertised = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxOutPrfxesAdvertised.setStatus('current')
bgpPrfxCntrsUserData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxCntrsUserData.setStatus('current')
bgpPrfxInPrfxesFlapped = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxInPrfxesFlapped.setStatus('current')
bgpPrfxInPrfxesFlapSuppressed = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxInPrfxesFlapSuppressed.setStatus('current')
bgpPrfxInPrfxesFlapHistory = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxInPrfxesFlapHistory.setStatus('current')
bgpPrfxInPrfxesActive = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxInPrfxesActive.setStatus('current')
bgpPrfxInPrfxesDeniedByPol = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxInPrfxesDeniedByPol.setStatus('current')
bgpPrfxNumLocRibRoutes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 3, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrfxNumLocRibRoutes.setStatus('current')
bgpRib = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4))
bgpNlriTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1), )
if mibBuilder.loadTexts: bgpNlriTable.setStatus('current')
bgpNlriEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpNlriPeerOrAfm"), (0, "DC-BGP-MIB", "bgpNlriPeerAfmIndex"), (0, "DC-BGP-MIB", "bgpNlriAfi"), (0, "DC-BGP-MIB", "bgpNlriSafi"), (0, "DC-BGP-MIB", "bgpNlriPrfx"), (0, "DC-BGP-MIB", "bgpNlriPrfxLen"))
if mibBuilder.loadTexts: bgpNlriEntry.setStatus('current')
bgpNlriPeerOrAfm = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 2), BgpPeerOrAfm())
if mibBuilder.loadTexts: bgpNlriPeerOrAfm.setStatus('current')
bgpNlriPeerAfmIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: bgpNlriPeerAfmIndex.setStatus('current')
bgpNlriAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 4), BgpAfi())
if mibBuilder.loadTexts: bgpNlriAfi.setStatus('current')
bgpNlriSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 5), BgpSafi())
if mibBuilder.loadTexts: bgpNlriSafi.setStatus('current')
bgpNlriPrfx = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 6), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: bgpNlriPrfx.setStatus('current')
bgpNlriPrfxLen = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 7), InetAddressPrefixLength())
if mibBuilder.loadTexts: bgpNlriPrfxLen.setStatus('current')
bgpNlriBest = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriBest.setStatus('current')
bgpNlriAsSize = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 9), BgpAsSize()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriAsSize.setStatus('current')
bgpNlriASPathStr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriASPathStr.setStatus('current')
bgpPathAttrOrigin = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 11), BgpOriginCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrOrigin.setStatus('current')
bgpPathAttrNextHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 12), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrNextHop.setStatus('current')
bgpPathAttrMultiExitDisc = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrMultiExitDisc.setStatus('current')
bgpPathAttrLocalPref = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrLocalPref.setStatus('current')
bgpPathAttrAtomicAggregate = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 15), BgpPathAttrAtomicAggPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrAtomicAggregate.setStatus('current')
bgpPathAttrAggregatorAS = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 16), BgpAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrAggregatorAS.setStatus('current')
bgpPathAttrAggregatorAddr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 17), BgpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrAggregatorAddr.setStatus('current')
bgpPathAttrCalcLocalPref = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrCalcLocalPref.setStatus('current')
bgpPathAttrOrigId = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 19), BgpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrOrigId.setStatus('current')
bgpPathAttrWeight = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrWeight.setStatus('current')
bgpFlapStatsConfig = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpFlapStatsConfig.setStatus('current')
bgpFlapStatsPenalty = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpFlapStatsPenalty.setStatus('current')
bgpFlapStatsFlapcnt = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpFlapStatsFlapcnt.setStatus('current')
bgpFlapStatsSupprsd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpFlapStatsSupprsd.setStatus('current')
bgpFlapStatsTimeleft = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 25), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpFlapStatsTimeleft.setStatus('current')
bgpFlapStatsCleardamp = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 26), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapStatsCleardamp.setStatus('current')
bgpFlapStatsClearstat = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 27), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapStatsClearstat.setStatus('current')
bgpNlriEcmp = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriEcmp.setStatus('current')
bgpPathAttrAsPathLimAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 29), BgpAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrAsPathLimAs.setStatus('current')
bgpPathAttrAsPathLimUpper = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrAsPathLimUpper.setStatus('current')
bgpNlriIsActive = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 31), BgpNlriIsActiveFlag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriIsActive.setStatus('current')
bgpNlriUserData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriUserData.setStatus('current')
bgpNlriStale = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriStale.setStatus('current')
bgpNlriFlapStartTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 34), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriFlapStartTime.setStatus('current')
bgpNlriLinkLocalNextHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 1, 1, 35), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriLinkLocalNextHop.setStatus('current')
bgpPathAttrUnknownTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 2), )
if mibBuilder.loadTexts: bgpPathAttrUnknownTable.setStatus('current')
bgpPathAttrUnknownEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 2, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpNlriPeerOrAfm"), (0, "DC-BGP-MIB", "bgpNlriPeerAfmIndex"), (0, "DC-BGP-MIB", "bgpNlriAfi"), (0, "DC-BGP-MIB", "bgpNlriSafi"), (0, "DC-BGP-MIB", "bgpNlriPrfx"), (0, "DC-BGP-MIB", "bgpNlriPrfxLen"), (0, "DC-BGP-MIB", "bgpPathAttrUnknownType"))
if mibBuilder.loadTexts: bgpPathAttrUnknownEntry.setStatus('current')
bgpPathAttrUnknownType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 2, 1, 8), Unsigned32())
if mibBuilder.loadTexts: bgpPathAttrUnknownType.setStatus('current')
bgpPathAttrUnknownValue = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrUnknownValue.setStatus('current')
bgpPathAttrUnknownUserData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrUnknownUserData.setStatus('current')
bgpPathAttrExtensions = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3))
bgpPathAttrNonCapExts = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1))
bgpPathAttrCapExts = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 2))
bgpPathAttrRouteReflectionExts = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1966))
bgpPathAttrClusterTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1966, 2), )
if mibBuilder.loadTexts: bgpPathAttrClusterTable.setStatus('current')
bgpPathAttrClusterEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1966, 2, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpNlriPeerOrAfm"), (0, "DC-BGP-MIB", "bgpNlriPeerAfmIndex"), (0, "DC-BGP-MIB", "bgpNlriAfi"), (0, "DC-BGP-MIB", "bgpNlriSafi"), (0, "DC-BGP-MIB", "bgpNlriPrfx"), (0, "DC-BGP-MIB", "bgpNlriPrfxLen"), (0, "DC-BGP-MIB", "bgpPathAttrClusterIndex"))
if mibBuilder.loadTexts: bgpPathAttrClusterEntry.setStatus('current')
bgpPathAttrClusterIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1966, 2, 1, 8), Unsigned32())
if mibBuilder.loadTexts: bgpPathAttrClusterIndex.setStatus('current')
bgpPathAttrClusterValue = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1966, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrClusterValue.setStatus('current')
bgpPathAttrClusterUserData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1966, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrClusterUserData.setStatus('current')
bgpPathAttrCommunityExts = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1997))
bgpPathAttrCommTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1997, 1), )
if mibBuilder.loadTexts: bgpPathAttrCommTable.setStatus('current')
bgpPathAttrCommEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1997, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpNlriPeerOrAfm"), (0, "DC-BGP-MIB", "bgpNlriPeerAfmIndex"), (0, "DC-BGP-MIB", "bgpNlriAfi"), (0, "DC-BGP-MIB", "bgpNlriSafi"), (0, "DC-BGP-MIB", "bgpNlriPrfx"), (0, "DC-BGP-MIB", "bgpNlriPrfxLen"), (0, "DC-BGP-MIB", "bgpPathAttrCommIndex"))
if mibBuilder.loadTexts: bgpPathAttrCommEntry.setStatus('current')
bgpPathAttrCommIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1997, 1, 1, 8), Unsigned32())
if mibBuilder.loadTexts: bgpPathAttrCommIndex.setStatus('current')
bgpPathAttrCommValue = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1997, 1, 1, 9), BgpCommunity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrCommValue.setStatus('current')
bgpPathAttrCommUserData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 1997, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrCommUserData.setStatus('current')
bgpPathAttrExtCommunityExts = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 2547))
bgpPathAttrExtCommTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 2547, 1), )
if mibBuilder.loadTexts: bgpPathAttrExtCommTable.setStatus('current')
bgpPathAttrExtCommEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 2547, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpNlriPeerOrAfm"), (0, "DC-BGP-MIB", "bgpNlriPeerAfmIndex"), (0, "DC-BGP-MIB", "bgpNlriAfi"), (0, "DC-BGP-MIB", "bgpNlriSafi"), (0, "DC-BGP-MIB", "bgpNlriPrfx"), (0, "DC-BGP-MIB", "bgpNlriPrfxLen"), (0, "DC-BGP-MIB", "bgpPathAttrExtCommIndex"))
if mibBuilder.loadTexts: bgpPathAttrExtCommEntry.setStatus('current')
bgpPathAttrExtCommIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 2547, 1, 1, 8), Unsigned32())
if mibBuilder.loadTexts: bgpPathAttrExtCommIndex.setStatus('current')
bgpPathAttrExtCommValue = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 2547, 1, 1, 9), BgpExtendedCommunity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrExtCommValue.setStatus('current')
bgpPathAttrExtCommUserData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 3, 1, 2547, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathAttrExtCommUserData.setStatus('current')
bgpAdjRibOutTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4), )
if mibBuilder.loadTexts: bgpAdjRibOutTable.setStatus('current')
bgpAdjRibOutEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpPeerIndex"), (0, "DC-BGP-MIB", "bgpAdjRibOutAfi"), (0, "DC-BGP-MIB", "bgpAdjRibOutSafi"), (0, "DC-BGP-MIB", "bgpAdjRibOutPrfx"), (0, "DC-BGP-MIB", "bgpAdjRibOutPrfxLen"))
if mibBuilder.loadTexts: bgpAdjRibOutEntry.setStatus('current')
bgpAdjRibOutAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 3), BgpAfi())
if mibBuilder.loadTexts: bgpAdjRibOutAfi.setStatus('current')
bgpAdjRibOutSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 4), BgpSafi())
if mibBuilder.loadTexts: bgpAdjRibOutSafi.setStatus('current')
bgpAdjRibOutPrfx = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 5), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: bgpAdjRibOutPrfx.setStatus('current')
bgpAdjRibOutPrfxLen = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 6), InetAddressPrefixLength())
if mibBuilder.loadTexts: bgpAdjRibOutPrfxLen.setStatus('current')
bgpAdjRibOutAdvertStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("advertised", 1), ("suppressed", 2), ("pendingWithdrawal", 3), ("withdrawn", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutAdvertStatus.setStatus('current')
bgpAdjRibOutLocalAggrType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAggregation", 1), ("aggregateRoute", 2), ("unsuppAggregatedRoute", 3), ("suppressedAggregatedRoute", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutLocalAggrType.setStatus('current')
bgpAdjRibOutAsSize = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 9), BgpAsSize()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutAsSize.setStatus('current')
bgpAdjRibOutASPathStr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutASPathStr.setStatus('current')
bgpAdjRibOutOrigin = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 11), BgpOriginCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutOrigin.setStatus('current')
bgpAdjRibOutNextHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 12), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutNextHop.setStatus('current')
bgpAdjRibOutMultiExitDisc = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutMultiExitDisc.setStatus('current')
bgpAdjRibOutLocalPref = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutLocalPref.setStatus('current')
bgpAdjRibOutAtomicAggregate = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 15), BgpPathAttrAtomicAggPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutAtomicAggregate.setStatus('current')
bgpAdjRibOutAggregatorAS = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 16), BgpAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutAggregatorAS.setStatus('current')
bgpAdjRibOutAggregatorAddr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 17), BgpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutAggregatorAddr.setStatus('current')
bgpAdjRibOutOrigId = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 18), BgpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutOrigId.setStatus('current')
bgpAdjRibOutAsLimAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 19), BgpAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutAsLimAs.setStatus('current')
bgpAdjRibOutAsLimUpper = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutAsLimUpper.setStatus('current')
bgpAdjRibOutUserData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutUserData.setStatus('current')
bgpAdjRibOutEcmp = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutEcmp.setStatus('current')
bgpAdjRibOutStale = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutStale.setStatus('current')
bgpAdjRibOutLinkLocalNextHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 4, 1, 24), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAdjRibOutLinkLocalNextHop.setStatus('current')
bgpPib = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5))
bgpRouteMapTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1), )
if mibBuilder.loadTexts: bgpRouteMapTable.setStatus('current')
bgpRouteMapEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpRouteMapIndex"), (0, "DC-BGP-MIB", "bgpRouteMapNumber"))
if mibBuilder.loadTexts: bgpRouteMapEntry.setStatus('current')
bgpRouteMapIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4278190079)))
if mibBuilder.loadTexts: bgpRouteMapIndex.setStatus('current')
bgpRouteMapNumber = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: bgpRouteMapNumber.setStatus('current')
bgpRouteMapRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapRowStatus.setStatus('current')
bgpRouteMapMaAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 5), BgpAfi().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaAfi.setStatus('current')
bgpRouteMapMaAfiDef = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaAfiDef.setStatus('current')
bgpRouteMapMaSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 7), BgpSafi().clone('unicast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaSafi.setStatus('current')
bgpRouteMapMaSafiDef = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaSafiDef.setStatus('current')
bgpRouteMapMaAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaAs.setStatus('current')
bgpRouteMapMaComm = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaComm.setStatus('current')
bgpRouteMapMaExtComm = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaExtComm.setStatus('current')
bgpRouteMapMaAddr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRouteMapMaAddr.setStatus('current')
bgpRouteMapMaNext = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRouteMapMaNext.setStatus('current')
bgpRouteMapMaSource = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRouteMapMaSource.setStatus('current')
bgpRouteMapMaMed = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaMed.setStatus('current')
bgpRouteMapMaMedDef = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaMedDef.setStatus('current')
bgpRouteMapMaUser = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaUser.setStatus('current')
bgpRouteMapSeAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeAs.setStatus('current')
bgpRouteMapSeAsAct = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 19), BgpAsPathAction().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeAsAct.setStatus('current')
bgpRouteMapSeComm = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeComm.setStatus('current')
bgpRouteMapSeCommAct = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 21), BgpCommunityAction().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeCommAct.setStatus('current')
bgpRouteMapSeExtComm = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeExtComm.setStatus('current')
bgpRouteMapSeExtCommAct = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 23), BgpCommunityAction().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeExtCommAct.setStatus('current')
bgpRouteMapSeLocPref = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 24), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeLocPref.setStatus('current')
bgpRouteMapSeLocPrefDef = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 25), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeLocPrefDef.setStatus('current')
bgpRouteMapSeMed = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 26), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeMed.setStatus('current')
bgpRouteMapSeMedDef = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 27), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeMedDef.setStatus('current')
bgpRouteMapSeNext = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 28), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeNext.setStatus('current')
bgpRouteMapSeOrigin = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 29), BgpOriginCode().clone('originIncomplete')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeOrigin.setStatus('current')
bgpRouteMapSeOriginDef = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 30), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeOriginDef.setStatus('current')
bgpRouteMapSeWeight = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 31), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeWeight.setStatus('current')
bgpRouteMapSeWeightDef = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 32), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeWeightDef.setStatus('current')
bgpRouteMapSeFlap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 33), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeFlap.setStatus('current')
bgpRouteMapSeUser = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 34), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeUser.setStatus('current')
bgpRouteMapHitcnt = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRouteMapHitcnt.setStatus('current')
bgpRouteMapClearcnt = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 36), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapClearcnt.setStatus('current')
bgpRouteMapUserInfo = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 37), OctetString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapUserInfo.setStatus('current')
bgpRouteMapType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 38), BgpPermitOrDeny().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapType.setStatus('current')
bgpRouteMapContinue = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 39), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapContinue.setStatus('current')
bgpRouteMapOrfAssoc = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 40), BgpOrfAssociation().clone('noAssociation')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapOrfAssoc.setStatus('current')
bgpRouteMapSeAsLimUpper = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 41), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeAsLimUpper.setStatus('current')
bgpRouteMapSeAsLimDef = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 42), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeAsLimDef.setStatus('current')
bgpRouteMapMaOrigin = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 43), BgpOriginCode().clone('originIncomplete')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaOrigin.setStatus('current')
bgpRouteMapMaOriginDef = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 44), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaOriginDef.setStatus('current')
bgpRouteMapSeMedDelta = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 45), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeMedDelta.setStatus('current')
bgpRouteMapSeMedDeltaTyp = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 46), BgpMedDeltaType().clone('increment')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeMedDeltaTyp.setStatus('current')
bgpRouteMapSeMedIgp = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 47), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeMedIgp.setStatus('current')
bgpRouteMapSeAsPrependCount = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 48), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeAsPrependCount.setStatus('current')
bgpRouteMapSeAsPrependSize = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 49), BgpAsSize().clone('twoOctet')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeAsPrependSize.setStatus('current')
bgpRouteMapSeAsPrependAsVals = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 50), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapSeAsPrependAsVals.setStatus('current')
bgpRouteMapMaAnd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 1, 1, 51), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRouteMapMaAnd.setStatus('current')
bgpIpPreTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2), )
if mibBuilder.loadTexts: bgpIpPreTable.setStatus('current')
bgpIpPreEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpRouteMapIndex"), (0, "DC-BGP-MIB", "bgpRouteMapNumber"), (0, "DC-BGP-MIB", "bgpIpPreMatch"), (0, "DC-BGP-MIB", "bgpIpPreNumber"))
if mibBuilder.loadTexts: bgpIpPreEntry.setStatus('current')
bgpIpPreMatch = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 4), BgpIpMatchType())
if mibBuilder.loadTexts: bgpIpPreMatch.setStatus('current')
bgpIpPreNumber = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 5), Unsigned32())
if mibBuilder.loadTexts: bgpIpPreNumber.setStatus('current')
bgpIpPreRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpIpPreRowStatus.setStatus('current')
bgpIpPreAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 7), BgpAfi().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpIpPreAfi.setStatus('current')
bgpIpPreSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 8), BgpSafi().clone('unicast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpIpPreSafi.setStatus('current')
bgpIpPreAddr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 9), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpIpPreAddr.setStatus('current')
bgpIpPreLen = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 10), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpIpPreLen.setStatus('current')
bgpIpPreGe = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpIpPreGe.setStatus('current')
bgpIpPreLe = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpIpPreLe.setStatus('current')
bgpIpPreType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 2, 1, 13), BgpPermitOrDeny().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpIpPreType.setStatus('current')
bgpPeergrTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7), )
if mibBuilder.loadTexts: bgpPeergrTable.setStatus('current')
bgpPeergrEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpPeergrIndex"))
if mibBuilder.loadTexts: bgpPeergrEntry.setStatus('current')
bgpPeergrIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 2), Unsigned32())
if mibBuilder.loadTexts: bgpPeergrIndex.setStatus('current')
bgpPeergrRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrRowStatus.setStatus('current')
bgpPeergrConfig = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrConfig.setStatus('current')
bgpPeergrArea = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 5), BgpIbgpOrEbgp().clone('ibgp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrArea.setStatus('current')
bgpPeergrAggrConfedAS = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrAggrConfedAS.setStatus('current')
bgpPeergrSoftResetWithStoredInfo = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrSoftResetWithStoredInfo.setStatus('current')
bgpPeergrAllowLocalAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrAllowLocalAs.setStatus('current')
bgpPeergrDisableSenderLoopDetect = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrDisableSenderLoopDetect.setStatus('current')
bgpPeergrNxtHopSlf = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrNxtHopSlf.setStatus('current')
bgpPeergrThirdPtyNxtHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 11), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrThirdPtyNxtHop.setStatus('current')
bgpPeergrNxtHopPeer = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrNxtHopPeer.setStatus('current')
bgpPeergrEnableAttributeDiscard = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 7, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrEnableAttributeDiscard.setStatus('current')
bgpConfigTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8), )
if mibBuilder.loadTexts: bgpConfigTable.setStatus('current')
bgpConfigEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpConfigIndex"))
if mibBuilder.loadTexts: bgpConfigEntry.setStatus('current')
bgpConfigIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 2), Unsigned32())
if mibBuilder.loadTexts: bgpConfigIndex.setStatus('current')
bgpConfigRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigRowStatus.setStatus('current')
bgpConfigRtgrimpe = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigRtgrimpe.setStatus('obsolete')
bgpConfigRtgrimde = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigRtgrimde.setStatus('obsolete')
bgpConfigRtgrexpe = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigRtgrexpe.setStatus('obsolete')
bgpConfigRtgrexde = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigRtgrexde.setStatus('obsolete')
bgpConfigDefImport = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 8), BgpPermitOrDeny().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigDefImport.setStatus('obsolete')
bgpConfigDefExport = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 9), BgpPermitOrDeny().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigDefExport.setStatus('obsolete')
bgpConfigNxtHopSlf = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigNxtHopSlf.setStatus('obsolete')
bgpConfigRemove = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 11), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigRemove.setStatus('current')
bgpConfigImportMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 12), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigImportMap.setStatus('current')
bgpConfigExportMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigExportMap.setStatus('current')
bgpConfigAdvertiseMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 14), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigAdvertiseMap.setStatus('current')
bgpConfigNonExistMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigNonExistMap.setStatus('current')
bgpConfigBlockCondAdv = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpConfigBlockCondAdv.setStatus('current')
bgpConfigThirdPtyNxtHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 17), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigThirdPtyNxtHop.setStatus('obsolete')
bgpConfigNxtHopPeer = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigNxtHopPeer.setStatus('obsolete')
bgpConfigCondAdvOn = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 8, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpConfigCondAdvOn.setStatus('current')
bgpFlapConfigTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9), )
if mibBuilder.loadTexts: bgpFlapConfigTable.setStatus('current')
bgpFlapConfigEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpFlapConfigIndex"))
if mibBuilder.loadTexts: bgpFlapConfigEntry.setStatus('current')
bgpFlapConfigIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1, 2), Unsigned32())
if mibBuilder.loadTexts: bgpFlapConfigIndex.setStatus('current')
bgpFlapConfigRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapConfigRowStatus.setStatus('current')
bgpFlapConfigCut = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1, 4), Integer32().clone(125)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapConfigCut.setStatus('current')
bgpFlapConfigReuse = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1, 5), Integer32().clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapConfigReuse.setStatus('current')
bgpFlapConfigThold = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1, 6), Integer32().clone(900)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapConfigThold.setStatus('current')
bgpFlapConfigDecayok = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1, 7), Integer32().clone(300)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapConfigDecayok.setStatus('current')
bgpFlapConfigDecayng = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1, 8), Integer32().clone(900)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapConfigDecayng.setStatus('current')
bgpFlapConfigTmaxok = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1, 9), Integer32().clone(900)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapConfigTmaxok.setStatus('current')
bgpFlapConfigTmaxng = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 9, 1, 10), Integer32().clone(1800)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpFlapConfigTmaxng.setStatus('current')
bgpAggregateTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10), )
if mibBuilder.loadTexts: bgpAggregateTable.setStatus('current')
bgpAggregateEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpAggrAfi"), (0, "DC-BGP-MIB", "bgpAggrSafi"), (0, "DC-BGP-MIB", "bgpAggrPrefix"), (0, "DC-BGP-MIB", "bgpAggrPrefixLength"))
if mibBuilder.loadTexts: bgpAggregateEntry.setStatus('current')
bgpAggrAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 2), BgpAfi())
if mibBuilder.loadTexts: bgpAggrAfi.setStatus('current')
bgpAggrSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 3), BgpSafi())
if mibBuilder.loadTexts: bgpAggrSafi.setStatus('current')
bgpAggrPrefix = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 4), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: bgpAggrPrefix.setStatus('current')
bgpAggrPrefixLength = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 5), InetAddressPrefixLength())
if mibBuilder.loadTexts: bgpAggrPrefixLength.setStatus('current')
bgpAggrRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpAggrRowStatus.setStatus('current')
bgpAggrOptions = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 7), BgpAggregateOptions().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpAggrOptions.setStatus('current')
bgpAggrSuppressMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpAggrSuppressMap.setStatus('current')
bgpAggrAdvertiseMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpAggrAdvertiseMap.setStatus('current')
bgpAggrAttributeMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpAggrAttributeMap.setStatus('current')
bgpAggrPermanent = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 10, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpAggrPermanent.setStatus('current')
bgpOrfCapabilityTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 11), )
if mibBuilder.loadTexts: bgpOrfCapabilityTable.setStatus('current')
bgpOrfCapabilityEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 11, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpOrfCapabilityAfi"), (0, "DC-BGP-MIB", "bgpOrfCapabilitySafi"), (0, "DC-BGP-MIB", "bgpOrfCapabilityOrfType"))
if mibBuilder.loadTexts: bgpOrfCapabilityEntry.setStatus('current')
bgpOrfCapabilityAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 11, 1, 2), BgpAfi())
if mibBuilder.loadTexts: bgpOrfCapabilityAfi.setStatus('current')
bgpOrfCapabilitySafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 11, 1, 3), BgpSafi())
if mibBuilder.loadTexts: bgpOrfCapabilitySafi.setStatus('current')
bgpOrfCapabilityOrfType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 11, 1, 4), BgpOrfType())
if mibBuilder.loadTexts: bgpOrfCapabilityOrfType.setStatus('current')
bgpOrfCapabilityAdminStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 11, 1, 5), BgpAdminStatus().clone('adminStatusDown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpOrfCapabilityAdminStatus.setStatus('current')
bgpOrfCapabilitySendReceive = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 11, 1, 6), BgpOrfSendReceive().clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpOrfCapabilitySendReceive.setStatus('current')
bgpPeerOrfCapabilityTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 3), )
if mibBuilder.loadTexts: bgpPeerOrfCapabilityTable.setStatus('current')
bgpPeerOrfCapabilityEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 3, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpPeerLocalAddrType"), (0, "DC-BGP-MIB", "bgpPeerLocalAddr"), (0, "DC-BGP-MIB", "bgpPeerLocalPort"), (0, "DC-BGP-MIB", "bgpPeerRemoteAddrType"), (0, "DC-BGP-MIB", "bgpPeerRemoteAddr"), (0, "DC-BGP-MIB", "bgpPeerRemotePort"), (0, "DC-BGP-MIB", "bgpPeerLocalAddrScopeId"), (0, "DC-BGP-MIB", "bgpPeerOrfCapabilityAfi"), (0, "DC-BGP-MIB", "bgpPeerOrfCapabilitySafi"), (0, "DC-BGP-MIB", "bgpPeerOrfCapabilityOrfType"))
if mibBuilder.loadTexts: bgpPeerOrfCapabilityEntry.setStatus('current')
bgpPeerOrfCapabilityAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 3, 1, 8), BgpAfi())
if mibBuilder.loadTexts: bgpPeerOrfCapabilityAfi.setStatus('current')
bgpPeerOrfCapabilitySafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 3, 1, 9), BgpSafi())
if mibBuilder.loadTexts: bgpPeerOrfCapabilitySafi.setStatus('current')
bgpPeerOrfCapabilityOrfType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 3, 1, 10), BgpOrfType())
if mibBuilder.loadTexts: bgpPeerOrfCapabilityOrfType.setStatus('current')
bgpPeerOrfCapabilityAdminStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 3, 1, 11), BgpAdminStatus().clone('adminStatusUp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerOrfCapabilityAdminStatus.setStatus('current')
bgpPeerOrfCapabilitySendReceive = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 3, 1, 3, 1, 12), BgpOrfSendReceive().clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeerOrfCapabilitySendReceive.setStatus('current')
bgpPeergrAfiSafiTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12), )
if mibBuilder.loadTexts: bgpPeergrAfiSafiTable.setStatus('current')
bgpPeergrAfiSafiEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpPeergrIndex"), (0, "DC-BGP-MIB", "bgpPeergrAfiSafiAfi"), (0, "DC-BGP-MIB", "bgpPeergrAfiSafiSafi"))
if mibBuilder.loadTexts: bgpPeergrAfiSafiEntry.setStatus('current')
bgpPeergrAfiSafiAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12, 1, 3), BgpAfi())
if mibBuilder.loadTexts: bgpPeergrAfiSafiAfi.setStatus('current')
bgpPeergrAfiSafiSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12, 1, 4), BgpSafi())
if mibBuilder.loadTexts: bgpPeergrAfiSafiSafi.setStatus('current')
bgpPeergrAfiSafiAllowLocalAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrAfiSafiAllowLocalAs.setStatus('current')
bgpPeergrAfiSafiDisSndLpDetect = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrAfiSafiDisSndLpDetect.setStatus('current')
bgpPeergrAfiSafiNxtHopSlf = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12, 1, 7), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrAfiSafiNxtHopSlf.setStatus('current')
bgpPeergrAfiSafiOrigDefault = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrAfiSafiOrigDefault.setStatus('current')
bgpPeergrAfiSafiOrigDefaultRtMap = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrAfiSafiOrigDefaultRtMap.setStatus('current')
bgpPeergrAfiSafiSoftResetStore = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 5, 12, 1, 10), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpPeergrAfiSafiSoftResetStore.setStatus('current')
bgpNlriPrefixTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5), )
if mibBuilder.loadTexts: bgpNlriPrefixTable.setStatus('current')
bgpNlriPrefixEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpNlriPrefixAfi"), (0, "DC-BGP-MIB", "bgpNlriPrefixSafi"), (0, "DC-BGP-MIB", "bgpNlriPrefixPrfx"), (0, "DC-BGP-MIB", "bgpNlriPrefixPrfxLen"), (0, "DC-BGP-MIB", "bgpNlriPrefixPeerOrAfm"), (0, "DC-BGP-MIB", "bgpNlriPrefixPeerAfmIndex"))
if mibBuilder.loadTexts: bgpNlriPrefixEntry.setStatus('current')
bgpNlriPrefixPeerOrAfm = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 2), BgpPeerOrAfm())
if mibBuilder.loadTexts: bgpNlriPrefixPeerOrAfm.setStatus('current')
bgpNlriPrefixPeerAfmIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 3), Unsigned32())
if mibBuilder.loadTexts: bgpNlriPrefixPeerAfmIndex.setStatus('current')
bgpNlriPrefixAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 4), BgpAfi())
if mibBuilder.loadTexts: bgpNlriPrefixAfi.setStatus('current')
bgpNlriPrefixSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 5), BgpSafi())
if mibBuilder.loadTexts: bgpNlriPrefixSafi.setStatus('current')
bgpNlriPrefixPrfx = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 6), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: bgpNlriPrefixPrfx.setStatus('current')
bgpNlriPrefixPrfxLen = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 7), InetAddressPrefixLength())
if mibBuilder.loadTexts: bgpNlriPrefixPrfxLen.setStatus('current')
bgpNlriPrefixBest = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixBest.setStatus('current')
bgpNlriPrefixAsSize = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 9), BgpAsSize()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixAsSize.setStatus('current')
bgpNlriPrefixASPathStr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixASPathStr.setStatus('current')
bgpNlriPrefixPathAttrOrigin = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 11), BgpOriginCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrOrigin.setStatus('current')
bgpNlriPrefixPathAttrNextHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 12), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrNextHop.setStatus('current')
bgpNlriPrefixPathAttrMultExtDisc = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrMultExtDisc.setStatus('current')
bgpNlriPrefixPathAttrLocalPref = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrLocalPref.setStatus('current')
bgpNlriPrefixPathAttrAtomicAgg = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 15), BgpPathAttrAtomicAggPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrAtomicAgg.setStatus('current')
bgpNlriPrefixPathAttrAggAS = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 16), BgpAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrAggAS.setStatus('current')
bgpNlriPrefixPathAttrAggAddr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 17), BgpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrAggAddr.setStatus('current')
bgpNlriPrefixPathAttrCalcLclPref = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrCalcLclPref.setStatus('current')
bgpNlriPrefixPathAttrOrigId = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 19), BgpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrOrigId.setStatus('current')
bgpNlriPrefixPathAttrWeight = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrWeight.setStatus('current')
bgpNlriPrefixFlapStatsConfig = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixFlapStatsConfig.setStatus('current')
bgpNlriPrefixFlapStatsPenalty = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixFlapStatsPenalty.setStatus('current')
bgpNlriPrefixFlapStatsFlapcnt = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixFlapStatsFlapcnt.setStatus('current')
bgpNlriPrefixFlapStatsSupprsd = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixFlapStatsSupprsd.setStatus('current')
bgpNlriPrefixFlapStatsTimeleft = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 25), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixFlapStatsTimeleft.setStatus('current')
bgpNlriPrefixFlapStatsCleardamp = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 26), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixFlapStatsCleardamp.setStatus('current')
bgpNlriPrefixFlapStatsClearstat = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 27), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixFlapStatsClearstat.setStatus('current')
bgpNlriPrefixEcmp = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixEcmp.setStatus('current')
bgpNlriPrefixPathAttrAsPathLimAs = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 29), BgpAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPathAttrAsPathLimAs.setStatus('current')
bgpNlriPrefixPthAttAsPthLimUpper = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixPthAttAsPthLimUpper.setStatus('current')
bgpNlriPrefixIsActive = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 31), BgpNlriIsActiveFlag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixIsActive.setStatus('current')
bgpNlriPrefixUserData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixUserData.setStatus('current')
bgpNlriPrefixStale = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixStale.setStatus('current')
bgpNlriPrefixFlapStartTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 34), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixFlapStartTime.setStatus('current')
bgpNlriPrefixLinkLocalNextHop = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 4, 5, 1, 35), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNlriPrefixLinkLocalNextHop.setStatus('current')
bgpHaf = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6))
bgpRmAfmJoinTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1), )
if mibBuilder.loadTexts: bgpRmAfmJoinTable.setStatus('current')
bgpRmAfmJoinEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpRmAfmJoin"))
if mibBuilder.loadTexts: bgpRmAfmJoinEntry.setStatus('current')
bgpRmAfmJoin = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: bgpRmAfmJoin.setStatus('current')
bgpRmAfmRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfmRowStatus.setStatus('current')
bgpRmAfmAdminStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1, 4), BgpAdminStatus().clone('adminStatusDown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfmAdminStatus.setStatus('current')
bgpRmAfmOperStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1, 5), BgpOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfmOperStatus.setStatus('current')
bgpRmAfmPartnerIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfmPartnerIndex.setStatus('current')
bgpRmAfmAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1, 7), BgpAfi().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfmAfi.setStatus('current')
bgpRmAfmSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1, 8), BgpSafi().clone('unicast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfmSafi.setStatus('current')
bgpRmAfmJoinStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1, 9), BgpMjStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfmJoinStatus.setStatus('current')
bgpRmAfmRestartTime = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfmRestartTime.setStatus('current')
bgpRmNmTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 2), )
if mibBuilder.loadTexts: bgpRmNmTable.setStatus('current')
bgpRmNmEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 2, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpRmNmMasterIndex"))
if mibBuilder.loadTexts: bgpRmNmEntry.setStatus('current')
bgpRmNmMasterIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: bgpRmNmMasterIndex.setStatus('current')
bgpRmNmJoinStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 2, 1, 3), BgpSjStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmNmJoinStatus.setStatus('current')
bgpNmMjTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 3), )
if mibBuilder.loadTexts: bgpNmMjTable.setStatus('current')
bgpNmMjEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 3, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpNmMjEntity"), (0, "DC-BGP-MIB", "bgpNmMjJoin"))
if mibBuilder.loadTexts: bgpNmMjEntry.setStatus('current')
bgpNmMjEntity = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: bgpNmMjEntity.setStatus('current')
bgpNmMjJoin = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: bgpNmMjJoin.setStatus('current')
bgpNmMjJoinPartner = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 3, 1, 3), BgpComponentId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNmMjJoinPartner.setStatus('current')
bgpNmMjPartnerIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNmMjPartnerIndex.setStatus('current')
bgpNmMjJoinStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 3, 1, 5), BgpMjStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNmMjJoinStatus.setStatus('current')
bgpRmArinhJoinTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 4), )
if mibBuilder.loadTexts: bgpRmArinhJoinTable.setStatus('current')
bgpRmArinhJoinEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 4, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpRmArinhAfi"), (0, "DC-BGP-MIB", "bgpRmArinhSafi"))
if mibBuilder.loadTexts: bgpRmArinhJoinEntry.setStatus('current')
bgpRmArinhAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 4, 1, 2), BgpAfi())
if mibBuilder.loadTexts: bgpRmArinhAfi.setStatus('current')
bgpRmArinhSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 4, 1, 3), BgpSafi())
if mibBuilder.loadTexts: bgpRmArinhSafi.setStatus('current')
bgpRmArinhJoinStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 4, 1, 4), BgpSjStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmArinhJoinStatus.setStatus('current')
bgpRmArinhEntIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 6, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmArinhEntIndex.setStatus('current')
bgpNm = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7))
bgpNmEntTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 1), )
if mibBuilder.loadTexts: bgpNmEntTable.setStatus('current')
bgpNmEntEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 1, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpNmEntIndex"))
if mibBuilder.loadTexts: bgpNmEntEntry.setStatus('current')
bgpNmEntIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: bgpNmEntIndex.setStatus('current')
bgpNmEntRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmEntRowStatus.setStatus('current')
bgpNmEntAdminStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 1, 1, 3), BgpAdminStatus().clone('adminStatusDown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmEntAdminStatus.setStatus('current')
bgpNmEntOperStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 1, 1, 4), BgpOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNmEntOperStatus.setStatus('current')
bgpNmEntRmIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmEntRmIndex.setStatus('current')
bgpNmEntSckIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 1, 1, 6), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmEntSckIndex.setStatus('current')
bgpNmEntBfdEntityIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 1, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmEntBfdEntityIndex.setStatus('current')
bgpNmListenTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2), )
if mibBuilder.loadTexts: bgpNmListenTable.setStatus('current')
bgpNmListenEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpNmEntIndex"), (0, "DC-BGP-MIB", "bgpNmListenIndex"))
if mibBuilder.loadTexts: bgpNmListenEntry.setStatus('current')
bgpNmListenIndex = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: bgpNmListenIndex.setStatus('current')
bgpNmListenRowStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmListenRowStatus.setStatus('current')
bgpNmListenAdminStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1, 4), BgpAdminStatus().clone('adminStatusDown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmListenAdminStatus.setStatus('current')
bgpNmListenOperStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1, 5), BgpOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpNmListenOperStatus.setStatus('current')
bgpNmListenAddrType = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmListenAddrType.setStatus('current')
bgpNmListenAddr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1, 7), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmListenAddr.setStatus('current')
bgpNmListenPort = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1, 8), InetPortNumber().clone(179)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmListenPort.setStatus('current')
bgpNmListenAcceptAll = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmListenAcceptAll.setStatus('current')
bgpNmListenAddrScopeId = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 7, 2, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpNmListenAddrScopeId.setStatus('current')
bgpRmAfiSafiTable = MibTable((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2), )
if mibBuilder.loadTexts: bgpRmAfiSafiTable.setStatus('current')
bgpRmAfiSafiEntry = MibTableRow((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1), ).setIndexNames((0, "DC-BGP-MIB", "bgpRmEntIndex"), (0, "DC-BGP-MIB", "bgpRmAfiSafiAfi"), (0, "DC-BGP-MIB", "bgpRmAfiSafiSafi"))
if mibBuilder.loadTexts: bgpRmAfiSafiEntry.setStatus('current')
bgpRmAfiSafiAfi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 2), BgpAfi())
if mibBuilder.loadTexts: bgpRmAfiSafiAfi.setStatus('current')
bgpRmAfiSafiSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 3), BgpSafi())
if mibBuilder.loadTexts: bgpRmAfiSafiSafi.setStatus('current')
bgpRmAfiSafiAdminStatus = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 4), BgpAdminStatus().clone('adminStatusDown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfiSafiAdminStatus.setStatus('current')
bgpRmAfiSafiStateKept = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfiSafiStateKept.setStatus('current')
bgpRmAfiSafiAfmRequired = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfiSafiAfmRequired.setStatus('current')
bgpRmAfiSafiLocRibBlocked = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiLocRibBlocked.setStatus('current')
bgpRmAfiSafiAdvertiseInactive = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 8), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfiSafiAdvertiseInactive.setStatus('current')
bgpRmAfiSafiUserData = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiUserData.setStatus('current')
bgpRmAfiSafiIbgpPrefixes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiIbgpPrefixes.setStatus('current')
bgpRmAfiSafiEbgpPrefixes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiEbgpPrefixes.setStatus('current')
bgpRmAfiSafiRedistPrefixes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiRedistPrefixes.setStatus('current')
bgpRmAfiSafiInPrfxes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiInPrfxes.setStatus('current')
bgpRmAfiSafiInPrfxesAccepted = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiInPrfxesAccepted.setStatus('current')
bgpRmAfiSafiInPrfxesRejected = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiInPrfxesRejected.setStatus('current')
bgpRmAfiSafiOutPrfxes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiOutPrfxes.setStatus('current')
bgpRmAfiSafiOutPrfxesAdvertised = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiOutPrfxesAdvertised.setStatus('current')
bgpRmAfiSafiInPrfxesActive = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiInPrfxesActive.setStatus('current')
bgpRmAfiSafiInPrfxesFlapped = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiInPrfxesFlapped.setStatus('current')
bgpRmAfiSafiInPrfxesFlapSuppr = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiInPrfxesFlapSuppr.setStatus('current')
bgpRmAfiSafiInPrfxesFlapHistory = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiInPrfxesFlapHistory.setStatus('current')
bgpRmAfiSafiDefaultImportRule = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 22), BgpPermitOrDeny().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfiSafiDefaultImportRule.setStatus('current')
bgpRmAfiSafiInPrfxesDeniedByPol = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiInPrfxesDeniedByPol.setStatus('current')
bgpRmAfiSafiNumLocRibRoutes = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRmAfiSafiNumLocRibRoutes.setStatus('current')
bgpRmAfiSafiNextHopSafi = MibTableColumn((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 2, 2, 1, 25), BgpSafi().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bgpRmAfiSafiNextHopSafi.setStatus('current')
bgpNotification = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8))
bgpNotificationEntry = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1))
bgpNotifPeerLocalAddrType = MibScalar((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bgpNotifPeerLocalAddrType.setStatus('current')
bgpNotifPeerLocalAddr = MibScalar((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bgpNotifPeerLocalAddr.setStatus('current')
bgpNotifPeerRemoteAddrType = MibScalar((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bgpNotifPeerRemoteAddrType.setStatus('current')
bgpNotifPeerRemoteAddr = MibScalar((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1, 4), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bgpNotifPeerRemoteAddr.setStatus('current')
bgpNotifRmEntIndex = MibScalar((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bgpNotifRmEntIndex.setStatus('current')
bgpNotifPeerLocalPort = MibScalar((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1, 6), InetPortNumber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bgpNotifPeerLocalPort.setStatus('current')
bgpNotifPeerRemotePort = MibScalar((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1, 7), InetPortNumber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bgpNotifPeerRemotePort.setStatus('current')
bgpPeerLastFailureCause = MibScalar((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1, 8), BgpPeerLastFailure()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bgpPeerLastFailureCause.setStatus('current')
bgpNotifPeerLocalAddrScopeId = MibScalar((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 8, 1, 9), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bgpNotifPeerLocalAddrScopeId.setStatus('current')
bgpBaseNotifications = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1, 0))
bgpTrapData = NotificationType((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1, 0, 1)).setObjects(("DC-BGP-MIB", "bgpNotifPeerLocalAddr"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrType"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddr"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddrType"), ("DC-BGP-MIB", "bgpPeerLastError"), ("DC-BGP-MIB", "bgpPeerState"), ("DC-BGP-MIB", "bgpPeerLocalNm"), ("DC-BGP-MIB", "bgpNotifRmEntIndex"), ("DC-BGP-MIB", "bgpNotifPeerLocalPort"), ("DC-BGP-MIB", "bgpNotifPeerRemotePort"), ("DC-BGP-MIB", "bgpPeerLastFailureCause"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrScopeId"), ("DC-BGP-MIB", "bgpPeerRstrStatus"))
if mibBuilder.loadTexts: bgpTrapData.setStatus('current')
bgpEntTrapData = NotificationType((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1, 0, 2)).setObjects(("DC-BGP-MIB", "bgpNotifRmEntIndex"), ("DC-BGP-MIB", "bgpRmEntOperStatus"))
if mibBuilder.loadTexts: bgpEntTrapData.setStatus('current')
bgpPeerSessionEstablished = NotificationType((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1, 0, 3)).setObjects(("DC-BGP-MIB", "bgpNotifPeerLocalAddr"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrType"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddr"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddrType"), ("DC-BGP-MIB", "bgpPeerLastError"), ("DC-BGP-MIB", "bgpPeerState"), ("DC-BGP-MIB", "bgpPeerLocalNm"), ("DC-BGP-MIB", "bgpNotifRmEntIndex"), ("DC-BGP-MIB", "bgpNotifPeerLocalPort"), ("DC-BGP-MIB", "bgpNotifPeerRemotePort"), ("DC-BGP-MIB", "bgpPeerLastFailureCause"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrScopeId"), ("DC-BGP-MIB", "bgpPeerRstrStatus"))
if mibBuilder.loadTexts: bgpPeerSessionEstablished.setStatus('current')
bgpPeerSessionBackward = NotificationType((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1, 0, 4)).setObjects(("DC-BGP-MIB", "bgpNotifPeerLocalAddr"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrType"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddr"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddrType"), ("DC-BGP-MIB", "bgpPeerLastError"), ("DC-BGP-MIB", "bgpPeerState"), ("DC-BGP-MIB", "bgpPeerLocalNm"), ("DC-BGP-MIB", "bgpNotifRmEntIndex"), ("DC-BGP-MIB", "bgpNotifPeerLocalPort"), ("DC-BGP-MIB", "bgpNotifPeerRemotePort"), ("DC-BGP-MIB", "bgpPeerLastFailureCause"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrScopeId"), ("DC-BGP-MIB", "bgpPeerRstrStatus"))
if mibBuilder.loadTexts: bgpPeerSessionBackward.setStatus('current')
bgpPeerAfiSafiMaxPrefix = NotificationType((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1, 0, 5)).setObjects(("DC-BGP-MIB", "bgpNotifPeerLocalAddr"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrType"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddr"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddrType"), ("DC-BGP-MIB", "bgpPeerLastError"), ("DC-BGP-MIB", "bgpPeerState"), ("DC-BGP-MIB", "bgpPeerLocalNm"), ("DC-BGP-MIB", "bgpNotifRmEntIndex"), ("DC-BGP-MIB", "bgpNotifPeerLocalPort"), ("DC-BGP-MIB", "bgpNotifPeerRemotePort"), ("DC-BGP-MIB", "bgpPeerLastFailureCause"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrScopeId"), ("DC-BGP-MIB", "bgpPeerRstrStatus"))
if mibBuilder.loadTexts: bgpPeerAfiSafiMaxPrefix.setStatus('current')
bgpPeerAfiSafiPrefixThreshold = NotificationType((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1, 0, 6)).setObjects(("DC-BGP-MIB", "bgpNotifPeerLocalAddr"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrType"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddr"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddrType"), ("DC-BGP-MIB", "bgpPeerLastError"), ("DC-BGP-MIB", "bgpPeerState"), ("DC-BGP-MIB", "bgpPeerLocalNm"), ("DC-BGP-MIB", "bgpNotifRmEntIndex"), ("DC-BGP-MIB", "bgpNotifPeerLocalPort"), ("DC-BGP-MIB", "bgpNotifPeerRemotePort"), ("DC-BGP-MIB", "bgpPeerLastFailureCause"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrScopeId"), ("DC-BGP-MIB", "bgpPeerRstrStatus"))
if mibBuilder.loadTexts: bgpPeerAfiSafiPrefixThreshold.setStatus('current')
bgpEntOperStatusChange = NotificationType((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1, 0, 7)).setObjects(("DC-BGP-MIB", "bgpNotifRmEntIndex"), ("DC-BGP-MIB", "bgpRmEntOperStatus"))
if mibBuilder.loadTexts: bgpEntOperStatusChange.setStatus('current')
bgpEntRestartHelperChange = NotificationType((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 1, 0, 8)).setObjects(("DC-BGP-MIB", "bgpNotifPeerLocalAddr"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrType"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddr"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddrType"), ("DC-BGP-MIB", "bgpPeerLastError"), ("DC-BGP-MIB", "bgpPeerState"), ("DC-BGP-MIB", "bgpPeerLocalNm"), ("DC-BGP-MIB", "bgpNotifRmEntIndex"), ("DC-BGP-MIB", "bgpNotifPeerLocalPort"), ("DC-BGP-MIB", "bgpNotifPeerRemotePort"), ("DC-BGP-MIB", "bgpPeerLastFailureCause"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrScopeId"), ("DC-BGP-MIB", "bgpPeerRstrStatus"))
if mibBuilder.loadTexts: bgpEntRestartHelperChange.setStatus('current')
bgpConformance = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9))
bgpCompliances = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 1))
bgpGroups = MibIdentifier((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2))
bgpCompliance = ModuleCompliance((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 1, 1)).setObjects(("DC-BGP-MIB", "bgpRmEntityGroup"), ("DC-BGP-MIB", "bgpRmAfmJoinGroup"), ("DC-BGP-MIB", "bgpRmNmGroup"), ("DC-BGP-MIB", "bgpNmMjGroup"), ("DC-BGP-MIB", "bgpNmEntGroup"), ("DC-BGP-MIB", "bgpNmListenGroup"), ("DC-BGP-MIB", "bgpPeerGroup"), ("DC-BGP-MIB", "bgpPathAttributesGroup"), ("DC-BGP-MIB", "bgpPolicyGroup"), ("DC-BGP-MIB", "bgpRmAfiSafiGroup"), ("DC-BGP-MIB", "bgpOrfCapabilityGroup"), ("DC-BGP-MIB", "bgpPeerOrfCapabilityGroup"), ("DC-BGP-MIB", "bgpRmArinhJoinGroup"), ("DC-BGP-MIB", "bgpRmEntityGroup"), ("DC-BGP-MIB", "bgpRmAfmJoinGroup"), ("DC-BGP-MIB", "bgpRmNmGroup"), ("DC-BGP-MIB", "bgpNmMjGroup"), ("DC-BGP-MIB", "bgpNmEntGroup"), ("DC-BGP-MIB", "bgpNmListenGroup"), ("DC-BGP-MIB", "bgpPeerGroup"), ("DC-BGP-MIB", "bgpPathAttributesGroup"), ("DC-BGP-MIB", "bgpPolicyGroup"), ("DC-BGP-MIB", "bgpRmAfiSafiGroup"), ("DC-BGP-MIB", "bgpOrfCapabilityGroup"), ("DC-BGP-MIB", "bgpPeerOrfCapabilityGroup"), ("DC-BGP-MIB", "bgpRmEntityOptionalGroup"), ("DC-BGP-MIB", "bgpRmAfmJoinOptionalGroup"), ("DC-BGP-MIB", "bgpRmAfiSafiOptionalGroup"), ("DC-BGP-MIB", "bgpNmListenOptionalGroup"), ("DC-BGP-MIB", "bgpPeerOptionalGroup"), ("DC-BGP-MIB", "bgpPathAttributesOptionalGroup"), ("DC-BGP-MIB", "bgpPolicyOptionalGroup"), ("DC-BGP-MIB", "bgpNotificationsGroup"), ("DC-BGP-MIB", "bgpAdjRibOutGroup"), ("DC-BGP-MIB", "bgpOrfCapabilityOptionalGroup"), ("DC-BGP-MIB", "bgpPeerAfiSafiOptionalGroup"), ("DC-BGP-MIB", "bgpPeergrAfiSafiOptionalGroup"), ("DC-BGP-MIB", "bgpPeerOrfCapabilityOptionalGrp"), ("DC-BGP-MIB", "bgpRmArinhJoinGroup"), ("DC-BGP-MIB", "bgpNmEntOptionalGroup"), ("DC-BGP-MIB", "bgpNotificationObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpCompliance = bgpCompliance.setStatus('current')
bgpRmEntityGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 1)).setObjects(("DC-BGP-MIB", "bgpRmEntRowStatus"), ("DC-BGP-MIB", "bgpRmEntAdminStatus"), ("DC-BGP-MIB", "bgpRmEntOperStatus"), ("DC-BGP-MIB", "bgpRmEntAsSize"), ("DC-BGP-MIB", "bgpRmEntLocalAs"), ("DC-BGP-MIB", "bgpRmEntLocalIdentifier"), ("DC-BGP-MIB", "bgpRmEntI3JoinStatus"), ("DC-BGP-MIB", "bgpRmEntI3EntIndex"), ("DC-BGP-MIB", "bgpRmEntLocalMbrAs"), ("DC-BGP-MIB", "bgpRmEntIpv4ArinhJoinStatus"), ("DC-BGP-MIB", "bgpRmEntIpv4ArinhEntIndex"), ("DC-BGP-MIB", "bgpRmEntIpv6ArinhJoinStatus"), ("DC-BGP-MIB", "bgpRmEntIpv6ArinhEntIndex"), ("DC-BGP-MIB", "bgpRmEntNumAroRoutes"), ("DC-BGP-MIB", "bgpRmEntPeakNumAroRoutes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpRmEntityGroup = bgpRmEntityGroup.setStatus('current')
bgpRmAfmJoinGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 2)).setObjects(("DC-BGP-MIB", "bgpRmAfmRowStatus"), ("DC-BGP-MIB", "bgpRmAfmAdminStatus"), ("DC-BGP-MIB", "bgpRmAfmOperStatus"), ("DC-BGP-MIB", "bgpRmAfmJoinStatus"), ("DC-BGP-MIB", "bgpRmAfmRestartTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpRmAfmJoinGroup = bgpRmAfmJoinGroup.setStatus('current')
bgpRmNmGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 3)).setObjects(("DC-BGP-MIB", "bgpRmNmJoinStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpRmNmGroup = bgpRmNmGroup.setStatus('current')
bgpNmMjGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 4)).setObjects(("DC-BGP-MIB", "bgpNmMjJoinPartner"), ("DC-BGP-MIB", "bgpNmMjPartnerIndex"), ("DC-BGP-MIB", "bgpNmMjJoinStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpNmMjGroup = bgpNmMjGroup.setStatus('current')
bgpNmEntGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 5)).setObjects(("DC-BGP-MIB", "bgpNmEntRowStatus"), ("DC-BGP-MIB", "bgpNmEntAdminStatus"), ("DC-BGP-MIB", "bgpNmEntOperStatus"), ("DC-BGP-MIB", "bgpNmEntRmIndex"), ("DC-BGP-MIB", "bgpNmEntSckIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpNmEntGroup = bgpNmEntGroup.setStatus('current')
bgpNmListenGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 6)).setObjects(("DC-BGP-MIB", "bgpNmListenRowStatus"), ("DC-BGP-MIB", "bgpNmListenAdminStatus"), ("DC-BGP-MIB", "bgpNmListenOperStatus"), ("DC-BGP-MIB", "bgpNmListenAddrType"), ("DC-BGP-MIB", "bgpNmListenAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpNmListenGroup = bgpNmListenGroup.setStatus('current')
bgpPeerGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 7)).setObjects(("DC-BGP-MIB", "bgpPeerIdentifier"), ("DC-BGP-MIB", "bgpPeerState"), ("DC-BGP-MIB", "bgpPeerRowStatus"), ("DC-BGP-MIB", "bgpPeerAdminStatus"), ("DC-BGP-MIB", "bgpPeerOperStatus"), ("DC-BGP-MIB", "bgpPeerLocalNm"), ("DC-BGP-MIB", "bgpPeerRemoteAs"), ("DC-BGP-MIB", "bgpPeerIndex"), ("DC-BGP-MIB", "bgpPeerCapsSupport"), ("DC-BGP-MIB", "bgpPeerLastError"), ("DC-BGP-MIB", "bgpPeerLastErrorDataLen"), ("DC-BGP-MIB", "bgpPeerLastErrorData"), ("DC-BGP-MIB", "bgpPeerFsmEstablishedTime"), ("DC-BGP-MIB", "bgpPeerInUpdatesElapsedTime"), ("DC-BGP-MIB", "bgpPeerHoldTime"), ("DC-BGP-MIB", "bgpPeerKeepAlive"), ("DC-BGP-MIB", "bgpPeerInUpdates"), ("DC-BGP-MIB", "bgpPeerOutUpdates"), ("DC-BGP-MIB", "bgpPeerInTotalMessages"), ("DC-BGP-MIB", "bgpPeerOutTotalMessages"), ("DC-BGP-MIB", "bgpPeerFsmEstablishedTransitions"), ("DC-BGP-MIB", "bgpPeerConnectRetryCount"), ("DC-BGP-MIB", "bgpPeerCapRcvdValue"), ("DC-BGP-MIB", "bgpPeerCapSentValue"), ("DC-BGP-MIB", "bgpPeerSelectedLocalAddrType"), ("DC-BGP-MIB", "bgpPeerSelectedLocalAddr"), ("DC-BGP-MIB", "bgpPeerSelectedLocalPort"), ("DC-BGP-MIB", "bgpPeerSelectedRemotePort"), ("DC-BGP-MIB", "bgpPeerBfdStatus"), ("DC-BGP-MIB", "bgpPrfxInPrfxes"), ("DC-BGP-MIB", "bgpPrfxInPrfxesAccepted"), ("DC-BGP-MIB", "bgpPrfxInPrfxesRejected"), ("DC-BGP-MIB", "bgpPrfxOutPrfxes"), ("DC-BGP-MIB", "bgpPrfxOutPrfxesAdvertised"), ("DC-BGP-MIB", "bgpPrfxInPrfxesFlapped"), ("DC-BGP-MIB", "bgpPrfxInPrfxesFlapSuppressed"), ("DC-BGP-MIB", "bgpPrfxInPrfxesFlapHistory"), ("DC-BGP-MIB", "bgpPrfxInPrfxesActive"), ("DC-BGP-MIB", "bgpPrfxCntrsUserData"), ("DC-BGP-MIB", "bgpPrfxInPrfxesDeniedByPol"), ("DC-BGP-MIB", "bgpPrfxNumLocRibRoutes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPeerGroup = bgpPeerGroup.setStatus('current')
bgpPathAttributesGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 8)).setObjects(("DC-BGP-MIB", "bgpNlriBest"), ("DC-BGP-MIB", "bgpNlriAsSize"), ("DC-BGP-MIB", "bgpNlriASPathStr"), ("DC-BGP-MIB", "bgpPathAttrOrigin"), ("DC-BGP-MIB", "bgpPathAttrNextHop"), ("DC-BGP-MIB", "bgpPathAttrMultiExitDisc"), ("DC-BGP-MIB", "bgpPathAttrLocalPref"), ("DC-BGP-MIB", "bgpPathAttrAtomicAggregate"), ("DC-BGP-MIB", "bgpPathAttrAggregatorAS"), ("DC-BGP-MIB", "bgpPathAttrAggregatorAddr"), ("DC-BGP-MIB", "bgpPathAttrCalcLocalPref"), ("DC-BGP-MIB", "bgpPathAttrOrigId"), ("DC-BGP-MIB", "bgpPathAttrWeight"), ("DC-BGP-MIB", "bgpFlapStatsConfig"), ("DC-BGP-MIB", "bgpFlapStatsPenalty"), ("DC-BGP-MIB", "bgpFlapStatsFlapcnt"), ("DC-BGP-MIB", "bgpFlapStatsSupprsd"), ("DC-BGP-MIB", "bgpFlapStatsTimeleft"), ("DC-BGP-MIB", "bgpPathAttrUnknownValue"), ("DC-BGP-MIB", "bgpPathAttrUnknownUserData"), ("DC-BGP-MIB", "bgpPathAttrClusterValue"), ("DC-BGP-MIB", "bgpPathAttrClusterUserData"), ("DC-BGP-MIB", "bgpPathAttrCommValue"), ("DC-BGP-MIB", "bgpPathAttrCommUserData"), ("DC-BGP-MIB", "bgpPathAttrExtCommValue"), ("DC-BGP-MIB", "bgpPathAttrExtCommUserData"), ("DC-BGP-MIB", "bgpNlriEcmp"), ("DC-BGP-MIB", "bgpPathAttrAsPathLimAs"), ("DC-BGP-MIB", "bgpPathAttrAsPathLimUpper"), ("DC-BGP-MIB", "bgpNlriIsActive"), ("DC-BGP-MIB", "bgpNlriStale"), ("DC-BGP-MIB", "bgpNlriFlapStartTime"), ("DC-BGP-MIB", "bgpNlriLinkLocalNextHop"), ("DC-BGP-MIB", "bgpNlriUserData"), ("DC-BGP-MIB", "bgpNlriPrefixBest"), ("DC-BGP-MIB", "bgpNlriPrefixAsSize"), ("DC-BGP-MIB", "bgpNlriPrefixASPathStr"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrOrigin"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrNextHop"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrMultExtDisc"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrLocalPref"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrAtomicAgg"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrAggAS"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrAggAddr"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrCalcLclPref"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrOrigId"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrWeight"), ("DC-BGP-MIB", "bgpNlriPrefixFlapStatsConfig"), ("DC-BGP-MIB", "bgpNlriPrefixFlapStatsPenalty"), ("DC-BGP-MIB", "bgpNlriPrefixFlapStatsFlapcnt"), ("DC-BGP-MIB", "bgpNlriPrefixFlapStatsSupprsd"), ("DC-BGP-MIB", "bgpNlriPrefixFlapStatsTimeleft"), ("DC-BGP-MIB", "bgpNlriPrefixFlapStatsCleardamp"), ("DC-BGP-MIB", "bgpNlriPrefixFlapStatsClearstat"), ("DC-BGP-MIB", "bgpNlriPrefixEcmp"), ("DC-BGP-MIB", "bgpNlriPrefixPathAttrAsPathLimAs"), ("DC-BGP-MIB", "bgpNlriPrefixPthAttAsPthLimUpper"), ("DC-BGP-MIB", "bgpNlriPrefixIsActive"), ("DC-BGP-MIB", "bgpNlriPrefixStale"), ("DC-BGP-MIB", "bgpNlriPrefixFlapStartTime"), ("DC-BGP-MIB", "bgpNlriPrefixUserData"), ("DC-BGP-MIB", "bgpNlriPrefixLinkLocalNextHop"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPathAttributesGroup = bgpPathAttributesGroup.setStatus('current')
bgpPolicyGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 9)).setObjects(("DC-BGP-MIB", "bgpRouteMapRowStatus"), ("DC-BGP-MIB", "bgpRouteMapMaAs"), ("DC-BGP-MIB", "bgpRouteMapMaComm"), ("DC-BGP-MIB", "bgpRouteMapMaExtComm"), ("DC-BGP-MIB", "bgpRouteMapMaAddr"), ("DC-BGP-MIB", "bgpRouteMapMaNext"), ("DC-BGP-MIB", "bgpRouteMapMaSource"), ("DC-BGP-MIB", "bgpRouteMapHitcnt"), ("DC-BGP-MIB", "bgpIpPreRowStatus"), ("DC-BGP-MIB", "bgpPeergrRowStatus"), ("DC-BGP-MIB", "bgpPeergrConfig"), ("DC-BGP-MIB", "bgpConfigRowStatus"), ("DC-BGP-MIB", "bgpFlapConfigRowStatus"), ("DC-BGP-MIB", "bgpAggrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPolicyGroup = bgpPolicyGroup.setStatus('current')
bgpRmEntityOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 10)).setObjects(("DC-BGP-MIB", "bgpRmEntAsSize"), ("DC-BGP-MIB", "bgpRmEntClusterId"), ("DC-BGP-MIB", "bgpRmEntFlapDeltat"), ("DC-BGP-MIB", "bgpRmEntFlapReusemax"), ("DC-BGP-MIB", "bgpRmEntFlapReusesize"), ("DC-BGP-MIB", "bgpRmEntFlapReusearray"), ("DC-BGP-MIB", "bgpRmEntFlapFreemax"), ("DC-BGP-MIB", "bgpRmEntNoRefresh"), ("DC-BGP-MIB", "bgpRmEntDefLocalPref"), ("DC-BGP-MIB", "bgpRmEntAlwaysCompMed"), ("DC-BGP-MIB", "bgpRmEntPauseThreshold"), ("DC-BGP-MIB", "bgpRmEntAggregateMed"), ("DC-BGP-MIB", "bgpRmEntDeterministicMed"), ("DC-BGP-MIB", "bgpRmEntMaxIBgpEcmpRoutes"), ("DC-BGP-MIB", "bgpRmEntMaxEBgpEcmpRoutes"), ("DC-BGP-MIB", "bgpRmEntRestartSupported"), ("DC-BGP-MIB", "bgpRmEntMaxRestartTime"), ("DC-BGP-MIB", "bgpRmEntRecoveryTime"), ("DC-BGP-MIB", "bgpRmEntRestarting"), ("DC-BGP-MIB", "bgpRmEntSupportIpv6"), ("DC-BGP-MIB", "bgpRmEntStrictConfed"), ("DC-BGP-MIB", "bgpRmEntOrfSupported"), ("DC-BGP-MIB", "bgpRmEntCiscoPrefixSupported"), ("DC-BGP-MIB", "bgpRmEntSelectDeferTime"), ("DC-BGP-MIB", "bgpRmEntStalePathTime"), ("DC-BGP-MIB", "bgpRmEntNonPersistentAros"), ("DC-BGP-MIB", "bgpRmEntAroRouteThreshold"), ("DC-BGP-MIB", "bgpRmEntMaxActiveAroGroups"), ("DC-BGP-MIB", "bgpRmEntNumArosInGroup"), ("DC-BGP-MIB", "bgpRmEntClearStats"), ("DC-BGP-MIB", "bgpRmEntFastExtFallover"), ("DC-BGP-MIB", "bgpRmEntRemainDelayTime"), ("DC-BGP-MIB", "bgpRmEntPathAttrs"), ("DC-BGP-MIB", "bgpRmEntAggSplitHorizon"), ("DC-BGP-MIB", "bgpRmEntAggAdvSuppr"), ("DC-BGP-MIB", "bgpRmEntUpdateGroups"), ("DC-BGP-MIB", "bgpRmEntPhase3DelayTime"), ("DC-BGP-MIB", "bgpRmEntTrapOperState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpRmEntityOptionalGroup = bgpRmEntityOptionalGroup.setStatus('current')
bgpRmAfmJoinOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 11)).setObjects(("DC-BGP-MIB", "bgpRmAfmPartnerIndex"), ("DC-BGP-MIB", "bgpRmAfmAfi"), ("DC-BGP-MIB", "bgpRmAfmSafi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpRmAfmJoinOptionalGroup = bgpRmAfmJoinOptionalGroup.setStatus('current')
bgpNmListenOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 12)).setObjects(("DC-BGP-MIB", "bgpNmListenPort"), ("DC-BGP-MIB", "bgpNmListenAcceptAll"), ("DC-BGP-MIB", "bgpNmListenAddrScopeId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpNmListenOptionalGroup = bgpNmListenOptionalGroup.setStatus('current')
bgpPeerOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 13)).setObjects(("DC-BGP-MIB", "bgpPeerReflectorClient"), ("DC-BGP-MIB", "bgpPeerTrapEstab"), ("DC-BGP-MIB", "bgpPeerTrapBackw"), ("DC-BGP-MIB", "bgpPeerConnectRetryInterval"), ("DC-BGP-MIB", "bgpPeerHoldTimeConfigd"), ("DC-BGP-MIB", "bgpPeerKeepAliveConfigd"), ("DC-BGP-MIB", "bgpPeerMinASOriginationInterval"), ("DC-BGP-MIB", "bgpPeerMinRouteAdvertiseInterval"), ("DC-BGP-MIB", "bgpPeerClearCnts"), ("DC-BGP-MIB", "bgpPeerConfigPeergr"), ("DC-BGP-MIB", "bgpPeerConfigIndex"), ("DC-BGP-MIB", "bgpPeerConfigRtRefresh"), ("DC-BGP-MIB", "bgpPeerConfigMaxPrfx"), ("DC-BGP-MIB", "bgpPeerConfigDropWarn"), ("DC-BGP-MIB", "bgpPeerPassword"), ("DC-BGP-MIB", "bgpPeerTtl"), ("DC-BGP-MIB", "bgpPeerConfedMember"), ("DC-BGP-MIB", "bgpPeerConfigPassive"), ("DC-BGP-MIB", "bgpPeerConfigOpenDelay"), ("DC-BGP-MIB", "bgpPeerConfigIdleHold"), ("DC-BGP-MIB", "bgpPeerCheckFirstAsNum"), ("DC-BGP-MIB", "bgpPeerAggrInclConfedAS"), ("DC-BGP-MIB", "bgpPeerMinRouteWithdrawInterval"), ("DC-BGP-MIB", "bgpPeerStalePathTime"), ("DC-BGP-MIB", "bgpPeerCheckNextHop"), ("DC-BGP-MIB", "bgpPeerMaxOrfEntries"), ("DC-BGP-MIB", "bgpPeerOrfEntryCount"), ("DC-BGP-MIB", "bgpPeerPeeringType"), ("DC-BGP-MIB", "bgpPeerSoftResetWithStoredInfo"), ("DC-BGP-MIB", "bgpPeerAllowLocalAs"), ("DC-BGP-MIB", "bgpPeerDisableSenderLoopDetect"), ("DC-BGP-MIB", "bgpPeerDisableRouteRefresh"), ("DC-BGP-MIB", "bgpPeerFlapStatsClearStat"), ("DC-BGP-MIB", "bgpPeerFlapStatsClearMap"), ("DC-BGP-MIB", "bgpPeerLastErrorRcvd"), ("DC-BGP-MIB", "bgpPeerLastErrorRcvdTime"), ("DC-BGP-MIB", "bgpPeerLastErrorSent"), ("DC-BGP-MIB", "bgpPeerLastErrorSentTime"), ("DC-BGP-MIB", "bgpPeerLastState"), ("DC-BGP-MIB", "bgpPeerLastEvent"), ("DC-BGP-MIB", "bgpPeerCapsSent"), ("DC-BGP-MIB", "bgpPeerCapsRcvd"), ("DC-BGP-MIB", "bgpPeerCapsNegotiated"), ("DC-BGP-MIB", "bgpPeerRstrSupport"), ("DC-BGP-MIB", "bgpPeerRstrFamily"), ("DC-BGP-MIB", "bgpPeerRstrRestarting"), ("DC-BGP-MIB", "bgpPeerRstrStatus"), ("DC-BGP-MIB", "bgpPeerRstrRemTime"), ("DC-BGP-MIB", "bgpPeerRcvdMsgElapsedTime"), ("DC-BGP-MIB", "bgpPeerIdleHoldRemTime"), ("DC-BGP-MIB", "bgpPeerRouteRefrSent"), ("DC-BGP-MIB", "bgpPeerRouteRefrRcvd"), ("DC-BGP-MIB", "bgpPeerLastFailureCause"), ("DC-BGP-MIB", "bgpPeerNxtHopSlf"), ("DC-BGP-MIB", "bgpPeerThirdPtyNxtHop"), ("DC-BGP-MIB", "bgpPeerNxtHopPeer"), ("DC-BGP-MIB", "bgpPeerTrapPrefix"), ("DC-BGP-MIB", "bgpPeerConfigThreshold"), ("DC-BGP-MIB", "bgpPeerMaxPrfxHold"), ("DC-BGP-MIB", "bgpPeerBfdDesired"), ("DC-BGP-MIB", "bgpPeerCeaseErrorSubcode"), ("DC-BGP-MIB", "bgpPeerConfAltLocalAs"), ("DC-BGP-MIB", "bgpPeerSelectedLocalAs"), ("DC-BGP-MIB", "bgpPeerSelectedRemoteAs"), ("DC-BGP-MIB", "bgpPeerInPrfxes"), ("DC-BGP-MIB", "bgpPeerOutPrfxes"), ("DC-BGP-MIB", "bgpPeerOutPrfxesAdvertised"), ("DC-BGP-MIB", "bgpPeerTrapGrHelperState"), ("DC-BGP-MIB", "bgpPeerEnableAttributeDiscard"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPeerOptionalGroup = bgpPeerOptionalGroup.setStatus('current')
bgpPathAttributesOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 14)).setObjects(("DC-BGP-MIB", "bgpFlapStatsCleardamp"), ("DC-BGP-MIB", "bgpFlapStatsClearstat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPathAttributesOptionalGroup = bgpPathAttributesOptionalGroup.setStatus('current')
bgpPolicyOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 15)).setObjects(("DC-BGP-MIB", "bgpRouteMapMaAfi"), ("DC-BGP-MIB", "bgpRouteMapMaAfiDef"), ("DC-BGP-MIB", "bgpRouteMapMaSafi"), ("DC-BGP-MIB", "bgpRouteMapMaSafiDef"), ("DC-BGP-MIB", "bgpRouteMapMaMed"), ("DC-BGP-MIB", "bgpRouteMapMaMedDef"), ("DC-BGP-MIB", "bgpRouteMapMaUser"), ("DC-BGP-MIB", "bgpRouteMapSeAs"), ("DC-BGP-MIB", "bgpRouteMapSeAsAct"), ("DC-BGP-MIB", "bgpRouteMapSeComm"), ("DC-BGP-MIB", "bgpRouteMapSeCommAct"), ("DC-BGP-MIB", "bgpRouteMapSeExtComm"), ("DC-BGP-MIB", "bgpRouteMapSeExtCommAct"), ("DC-BGP-MIB", "bgpRouteMapSeLocPref"), ("DC-BGP-MIB", "bgpRouteMapSeLocPrefDef"), ("DC-BGP-MIB", "bgpRouteMapSeMed"), ("DC-BGP-MIB", "bgpRouteMapSeMedDef"), ("DC-BGP-MIB", "bgpRouteMapSeNext"), ("DC-BGP-MIB", "bgpRouteMapSeOrigin"), ("DC-BGP-MIB", "bgpRouteMapSeOriginDef"), ("DC-BGP-MIB", "bgpRouteMapSeWeight"), ("DC-BGP-MIB", "bgpRouteMapSeWeightDef"), ("DC-BGP-MIB", "bgpRouteMapSeFlap"), ("DC-BGP-MIB", "bgpRouteMapSeUser"), ("DC-BGP-MIB", "bgpRouteMapClearcnt"), ("DC-BGP-MIB", "bgpRouteMapUserInfo"), ("DC-BGP-MIB", "bgpRouteMapType"), ("DC-BGP-MIB", "bgpRouteMapContinue"), ("DC-BGP-MIB", "bgpRouteMapOrfAssoc"), ("DC-BGP-MIB", "bgpRouteMapSeAsLimUpper"), ("DC-BGP-MIB", "bgpRouteMapSeAsLimDef"), ("DC-BGP-MIB", "bgpRouteMapMaOrigin"), ("DC-BGP-MIB", "bgpRouteMapMaOriginDef"), ("DC-BGP-MIB", "bgpRouteMapSeMedDelta"), ("DC-BGP-MIB", "bgpRouteMapSeMedDeltaTyp"), ("DC-BGP-MIB", "bgpRouteMapSeMedIgp"), ("DC-BGP-MIB", "bgpRouteMapSeAsPrependCount"), ("DC-BGP-MIB", "bgpRouteMapSeAsPrependSize"), ("DC-BGP-MIB", "bgpRouteMapSeAsPrependAsVals"), ("DC-BGP-MIB", "bgpRouteMapMaAnd"), ("DC-BGP-MIB", "bgpIpPreAfi"), ("DC-BGP-MIB", "bgpIpPreSafi"), ("DC-BGP-MIB", "bgpIpPreAddr"), ("DC-BGP-MIB", "bgpIpPreLen"), ("DC-BGP-MIB", "bgpIpPreGe"), ("DC-BGP-MIB", "bgpIpPreLe"), ("DC-BGP-MIB", "bgpIpPreType"), ("DC-BGP-MIB", "bgpPeergrArea"), ("DC-BGP-MIB", "bgpPeergrAggrConfedAS"), ("DC-BGP-MIB", "bgpPeergrSoftResetWithStoredInfo"), ("DC-BGP-MIB", "bgpPeergrAllowLocalAs"), ("DC-BGP-MIB", "bgpPeergrDisableSenderLoopDetect"), ("DC-BGP-MIB", "bgpPeergrNxtHopSlf"), ("DC-BGP-MIB", "bgpPeergrThirdPtyNxtHop"), ("DC-BGP-MIB", "bgpPeergrNxtHopPeer"), ("DC-BGP-MIB", "bgpPeergrEnableAttributeDiscard"), ("DC-BGP-MIB", "bgpConfigImportMap"), ("DC-BGP-MIB", "bgpConfigExportMap"), ("DC-BGP-MIB", "bgpConfigAdvertiseMap"), ("DC-BGP-MIB", "bgpConfigNonExistMap"), ("DC-BGP-MIB", "bgpConfigBlockCondAdv"), ("DC-BGP-MIB", "bgpConfigRemove"), ("DC-BGP-MIB", "bgpConfigCondAdvOn"), ("DC-BGP-MIB", "bgpFlapConfigCut"), ("DC-BGP-MIB", "bgpFlapConfigReuse"), ("DC-BGP-MIB", "bgpFlapConfigThold"), ("DC-BGP-MIB", "bgpFlapConfigDecayok"), ("DC-BGP-MIB", "bgpFlapConfigDecayng"), ("DC-BGP-MIB", "bgpFlapConfigTmaxok"), ("DC-BGP-MIB", "bgpFlapConfigTmaxng"), ("DC-BGP-MIB", "bgpAggrOptions"), ("DC-BGP-MIB", "bgpAggrSuppressMap"), ("DC-BGP-MIB", "bgpAggrAdvertiseMap"), ("DC-BGP-MIB", "bgpAggrAttributeMap"), ("DC-BGP-MIB", "bgpAggrPermanent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPolicyOptionalGroup = bgpPolicyOptionalGroup.setStatus('current')
bgpNotificationsGroup = NotificationGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 16)).setObjects(("DC-BGP-MIB", "bgpTrapData"), ("DC-BGP-MIB", "bgpEntTrapData"), ("DC-BGP-MIB", "bgpPeerSessionEstablished"), ("DC-BGP-MIB", "bgpPeerSessionBackward"), ("DC-BGP-MIB", "bgpPeerAfiSafiMaxPrefix"), ("DC-BGP-MIB", "bgpPeerAfiSafiPrefixThreshold"), ("DC-BGP-MIB", "bgpEntOperStatusChange"), ("DC-BGP-MIB", "bgpEntRestartHelperChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpNotificationsGroup = bgpNotificationsGroup.setStatus('current')
bgpObsoleteGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 17)).setObjects(("DC-BGP-MIB", "bgpConfigRtgrimpe"), ("DC-BGP-MIB", "bgpConfigRtgrimde"), ("DC-BGP-MIB", "bgpConfigRtgrexpe"), ("DC-BGP-MIB", "bgpConfigRtgrexde"), ("DC-BGP-MIB", "bgpConfigDefImport"), ("DC-BGP-MIB", "bgpConfigDefExport"), ("DC-BGP-MIB", "bgpConfigNxtHopSlf"), ("DC-BGP-MIB", "bgpConfigThirdPtyNxtHop"), ("DC-BGP-MIB", "bgpConfigNxtHopPeer"), ("DC-BGP-MIB", "bgpRmEntNhrJoinStatus"), ("DC-BGP-MIB", "bgpRmEntNhrEntIndex"), ("DC-BGP-MIB", "bgpRmEntIpv4UniFwdPrsrvd"), ("DC-BGP-MIB", "bgpRmEntIpv4MultiFwdPrsrvd"), ("DC-BGP-MIB", "bgpRmEntVpnIpv4FwdPrsrvd"), ("DC-BGP-MIB", "bgpRmEntIpv4MultiSupport"), ("DC-BGP-MIB", "bgpRmEntVpnIpv4Support"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpObsoleteGroup = bgpObsoleteGroup.setStatus('obsolete')
bgpRmAfiSafiGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 18)).setObjects(("DC-BGP-MIB", "bgpRmAfiSafiAdminStatus"), ("DC-BGP-MIB", "bgpRmAfiSafiLocRibBlocked"), ("DC-BGP-MIB", "bgpRmAfiSafiAdvertiseInactive"), ("DC-BGP-MIB", "bgpRmAfiSafiIbgpPrefixes"), ("DC-BGP-MIB", "bgpRmAfiSafiEbgpPrefixes"), ("DC-BGP-MIB", "bgpRmAfiSafiRedistPrefixes"), ("DC-BGP-MIB", "bgpRmAfiSafiInPrfxes"), ("DC-BGP-MIB", "bgpRmAfiSafiInPrfxesAccepted"), ("DC-BGP-MIB", "bgpRmAfiSafiInPrfxesRejected"), ("DC-BGP-MIB", "bgpRmAfiSafiOutPrfxes"), ("DC-BGP-MIB", "bgpRmAfiSafiOutPrfxesAdvertised"), ("DC-BGP-MIB", "bgpRmAfiSafiInPrfxesActive"), ("DC-BGP-MIB", "bgpRmAfiSafiInPrfxesFlapped"), ("DC-BGP-MIB", "bgpRmAfiSafiInPrfxesFlapSuppr"), ("DC-BGP-MIB", "bgpRmAfiSafiInPrfxesFlapHistory"), ("DC-BGP-MIB", "bgpRmAfiSafiDefaultImportRule"), ("DC-BGP-MIB", "bgpRmAfiSafiUserData"), ("DC-BGP-MIB", "bgpRmAfiSafiInPrfxesDeniedByPol"), ("DC-BGP-MIB", "bgpRmAfiSafiNumLocRibRoutes"), ("DC-BGP-MIB", "bgpRmAfiSafiNextHopSafi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpRmAfiSafiGroup = bgpRmAfiSafiGroup.setStatus('current')
bgpRmAfiSafiOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 19)).setObjects(("DC-BGP-MIB", "bgpRmAfiSafiStateKept"), ("DC-BGP-MIB", "bgpRmAfiSafiAfmRequired"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpRmAfiSafiOptionalGroup = bgpRmAfiSafiOptionalGroup.setStatus('current')
bgpAdjRibOutGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 20)).setObjects(("DC-BGP-MIB", "bgpAdjRibOutAdvertStatus"), ("DC-BGP-MIB", "bgpAdjRibOutLocalAggrType"), ("DC-BGP-MIB", "bgpAdjRibOutAsSize"), ("DC-BGP-MIB", "bgpAdjRibOutASPathStr"), ("DC-BGP-MIB", "bgpAdjRibOutOrigin"), ("DC-BGP-MIB", "bgpAdjRibOutNextHop"), ("DC-BGP-MIB", "bgpAdjRibOutMultiExitDisc"), ("DC-BGP-MIB", "bgpAdjRibOutLocalPref"), ("DC-BGP-MIB", "bgpAdjRibOutAtomicAggregate"), ("DC-BGP-MIB", "bgpAdjRibOutAggregatorAS"), ("DC-BGP-MIB", "bgpAdjRibOutAggregatorAddr"), ("DC-BGP-MIB", "bgpAdjRibOutOrigId"), ("DC-BGP-MIB", "bgpAdjRibOutAsLimAs"), ("DC-BGP-MIB", "bgpAdjRibOutAsLimUpper"), ("DC-BGP-MIB", "bgpAdjRibOutUserData"), ("DC-BGP-MIB", "bgpAdjRibOutEcmp"), ("DC-BGP-MIB", "bgpAdjRibOutStale"), ("DC-BGP-MIB", "bgpAdjRibOutLinkLocalNextHop"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpAdjRibOutGroup = bgpAdjRibOutGroup.setStatus('current')
bgpOrfCapabilityGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 21)).setObjects(("DC-BGP-MIB", "bgpOrfCapabilityAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpOrfCapabilityGroup = bgpOrfCapabilityGroup.setStatus('current')
bgpOrfCapabilityOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 22)).setObjects(("DC-BGP-MIB", "bgpOrfCapabilitySendReceive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpOrfCapabilityOptionalGroup = bgpOrfCapabilityOptionalGroup.setStatus('current')
bgpPeerAfiSafiOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 23)).setObjects(("DC-BGP-MIB", "bgpPeerAfiSafiDisable"), ("DC-BGP-MIB", "bgpPeerAfiSafiConfigRtRefresh"), ("DC-BGP-MIB", "bgpPeerAfiSafiAllowLocalAs"), ("DC-BGP-MIB", "bgpPeerAfiSafiDisableSndLpDetect"), ("DC-BGP-MIB", "bgpPeerAfiSafiNxtHopSlf"), ("DC-BGP-MIB", "bgpPeerAfiSafiOrigDefault"), ("DC-BGP-MIB", "bgpPeerAfiSafiOrigDefaultRtMap"), ("DC-BGP-MIB", "bgpPeerAfiSafiSoftResetStore"), ("DC-BGP-MIB", "bgpPeerAfiSafiConfigMaxPrfx"), ("DC-BGP-MIB", "bgpPeerAfiSafiConfigDropWarn"), ("DC-BGP-MIB", "bgpPeerAfiSafiTrapPrefix"), ("DC-BGP-MIB", "bgpPeerAfiSafiConfigThreshold"), ("DC-BGP-MIB", "bgpPeerAfiSafiMaxPrfxHold"), ("DC-BGP-MIB", "bgpPeerAfiSafiMaxOrfEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPeerAfiSafiOptionalGroup = bgpPeerAfiSafiOptionalGroup.setStatus('current')
bgpPeergrAfiSafiOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 24)).setObjects(("DC-BGP-MIB", "bgpPeergrAfiSafiAllowLocalAs"), ("DC-BGP-MIB", "bgpPeergrAfiSafiDisSndLpDetect"), ("DC-BGP-MIB", "bgpPeergrAfiSafiNxtHopSlf"), ("DC-BGP-MIB", "bgpPeergrAfiSafiOrigDefault"), ("DC-BGP-MIB", "bgpPeergrAfiSafiOrigDefaultRtMap"), ("DC-BGP-MIB", "bgpPeergrAfiSafiSoftResetStore"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPeergrAfiSafiOptionalGroup = bgpPeergrAfiSafiOptionalGroup.setStatus('current')
bgpPeerOrfCapabilityGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 25)).setObjects(("DC-BGP-MIB", "bgpPeerOrfCapabilityAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPeerOrfCapabilityGroup = bgpPeerOrfCapabilityGroup.setStatus('current')
bgpPeerOrfCapabilityOptionalGrp = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 26)).setObjects(("DC-BGP-MIB", "bgpPeerOrfCapabilitySendReceive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpPeerOrfCapabilityOptionalGrp = bgpPeerOrfCapabilityOptionalGrp.setStatus('current')
bgpRmArinhJoinGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 27)).setObjects(("DC-BGP-MIB", "bgpRmArinhJoinStatus"), ("DC-BGP-MIB", "bgpRmArinhEntIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpRmArinhJoinGroup = bgpRmArinhJoinGroup.setStatus('current')
bgpNmEntOptionalGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 28)).setObjects(("DC-BGP-MIB", "bgpNmEntBfdEntityIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpNmEntOptionalGroup = bgpNmEntOptionalGroup.setStatus('current')
bgpNotificationObjectGroup = ObjectGroup((1, 2, 826, 0, 1, 1578918, 5, 65, 1, 9, 2, 29)).setObjects(("DC-BGP-MIB", "bgpNotifPeerLocalAddr"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrType"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddr"), ("DC-BGP-MIB", "bgpNotifPeerRemoteAddrType"), ("DC-BGP-MIB", "bgpNotifRmEntIndex"), ("DC-BGP-MIB", "bgpNotifPeerLocalPort"), ("DC-BGP-MIB", "bgpNotifPeerRemotePort"), ("DC-BGP-MIB", "bgpNotifPeerLocalAddrScopeId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bgpNotificationObjectGroup = bgpNotificationObjectGroup.setStatus('current')
mibBuilder.exportSymbols("DC-BGP-MIB", BgpAdminStatus=BgpAdminStatus, bgpPeerKeepAliveConfigd=bgpPeerKeepAliveConfigd, bgpConfigRowStatus=bgpConfigRowStatus, BgpAfi=BgpAfi, bgpIpPreAddr=bgpIpPreAddr, bgpNlriPrefixPathAttrAtomicAgg=bgpNlriPrefixPathAttrAtomicAgg, bgpRmEntAggregateMed=bgpRmEntAggregateMed, bgpRouteMapTable=bgpRouteMapTable, bgpRmAfiSafiOutPrfxesAdvertised=bgpRmAfiSafiOutPrfxesAdvertised, bgpRmEntFlapReusemax=bgpRmEntFlapReusemax, bgpRouteMapSeAsLimDef=bgpRouteMapSeAsLimDef, bgpPrfxInPrfxesFlapHistory=bgpPrfxInPrfxesFlapHistory, bgpPeerRowStatus=bgpPeerRowStatus, bgpPathAttrUnknownUserData=bgpPathAttrUnknownUserData, bgpRouteMapIndex=bgpRouteMapIndex, bgpPeerConfAltLocalAs=bgpPeerConfAltLocalAs, bgpPeergrAllowLocalAs=bgpPeergrAllowLocalAs, bgpRmEntLocalIdentifier=bgpRmEntLocalIdentifier, bgpPeerCapsNegotiated=bgpPeerCapsNegotiated, BgpAggregateOptions=BgpAggregateOptions, bgpPeergrAfiSafiOptionalGroup=bgpPeergrAfiSafiOptionalGroup, bgpNmListenPort=bgpNmListenPort, bgpRmAfmOperStatus=bgpRmAfmOperStatus, bgpNotifPeerLocalAddrScopeId=bgpNotifPeerLocalAddrScopeId, bgpRmEntClearStats=bgpRmEntClearStats, bgpRouteMapSeUser=bgpRouteMapSeUser, bgpPeerRemotePort=bgpPeerRemotePort, bgpPrfxInPrfxesFlapSuppressed=bgpPrfxInPrfxesFlapSuppressed, bgpPathAttrClusterEntry=bgpPathAttrClusterEntry, bgpPeerAfiSafiConfigRtRefresh=bgpPeerAfiSafiConfigRtRefresh, bgpRouteMapContinue=bgpRouteMapContinue, bgpFlapStatsCleardamp=bgpFlapStatsCleardamp, bgpPeerIdentifier=bgpPeerIdentifier, bgpOrfCapabilitySafi=bgpOrfCapabilitySafi, bgpRmEntAggAdvSuppr=bgpRmEntAggAdvSuppr, bgpNmListenRowStatus=bgpNmListenRowStatus, bgpAdjRibOutAsSize=bgpAdjRibOutAsSize, bgpAggregateTable=bgpAggregateTable, bgpRmAfmPartnerIndex=bgpRmAfmPartnerIndex, bgpIpPreGe=bgpIpPreGe, bgpRmAfiSafiAfi=bgpRmAfiSafiAfi, bgpRmEntIpv4ArinhJoinStatus=bgpRmEntIpv4ArinhJoinStatus, bgpPeerDisableSenderLoopDetect=bgpPeerDisableSenderLoopDetect, bgpPolicyGroup=bgpPolicyGroup, bgpPrfxCntrsSafi=bgpPrfxCntrsSafi, bgpPeergrConfig=bgpPeergrConfig, bgpPathAttrAsPathLimAs=bgpPathAttrAsPathLimAs, bgpMib=bgpMib, bgpPeerCapSentValue=bgpPeerCapSentValue, bgpNlriPrefixFlapStatsPenalty=bgpNlriPrefixFlapStatsPenalty, BgpIbgpOrEbgp=BgpIbgpOrEbgp, bgpNlriPrefixPeerOrAfm=bgpNlriPrefixPeerOrAfm, bgpPeerDisableRouteRefresh=bgpPeerDisableRouteRefresh, bgpConfigAdvertiseMap=bgpConfigAdvertiseMap, bgpOrfCapabilityAdminStatus=bgpOrfCapabilityAdminStatus, bgpPeerRcvdMsgElapsedTime=bgpPeerRcvdMsgElapsedTime, bgpPathAttrNextHop=bgpPathAttrNextHop, bgpRouteMapMaMed=bgpRouteMapMaMed, bgpIpPreLen=bgpIpPreLen, BgpCommunity=BgpCommunity, bgpRmAfmJoinTable=bgpRmAfmJoinTable, bgpPathAttrOrigId=bgpPathAttrOrigId, bgpPathAttrAggregatorAS=bgpPathAttrAggregatorAS, bgpPeerOutPrfxes=bgpPeerOutPrfxes, bgpRmArinhJoinStatus=bgpRmArinhJoinStatus, bgpRmEntAsSize=bgpRmEntAsSize, bgpRmEntClusterId=bgpRmEntClusterId, bgpRmEntFlapFreemax=bgpRmEntFlapFreemax, bgpNlriPrefixAsSize=bgpNlriPrefixAsSize, bgpNmEntRowStatus=bgpNmEntRowStatus, bgpAdjRibOutOrigId=bgpAdjRibOutOrigId, bgpOrfCapabilityTable=bgpOrfCapabilityTable, bgpAdjRibOutGroup=bgpAdjRibOutGroup, bgpPathAttrExtCommUserData=bgpPathAttrExtCommUserData, bgpPathAttrExtCommunityExts=bgpPathAttrExtCommunityExts, bgpFlapConfigTable=bgpFlapConfigTable, bgpRm=bgpRm, bgpRmEntVpnIpv4Support=bgpRmEntVpnIpv4Support, bgpNmEntEntry=bgpNmEntEntry, bgpNlriPrefixFlapStatsCleardamp=bgpNlriPrefixFlapStatsCleardamp, BgpOrfAssociation=BgpOrfAssociation, bgpRouteMapSeOrigin=bgpRouteMapSeOrigin, bgpPeerInPrfxes=bgpPeerInPrfxes, bgpPeerOutTotalMessages=bgpPeerOutTotalMessages, bgpRmEntIndex=bgpRmEntIndex, bgpConformance=bgpConformance, bgpPeerCapRcvdValue=bgpPeerCapRcvdValue, bgpRmAfiSafiTable=bgpRmAfiSafiTable, bgpRouteMapSeAs=bgpRouteMapSeAs, bgpNmMjEntry=bgpNmMjEntry, BgpPeerRestartSupport=BgpPeerRestartSupport, bgpPeerInUpdatesElapsedTime=bgpPeerInUpdatesElapsedTime, bgpRmNmMasterIndex=bgpRmNmMasterIndex, bgpRmAfiSafiInPrfxesActive=bgpRmAfiSafiInPrfxesActive, bgpConfigNxtHopPeer=bgpConfigNxtHopPeer, bgpRmEntNumAroRoutes=bgpRmEntNumAroRoutes, bgpRouteMapSeAsLimUpper=bgpRouteMapSeAsLimUpper, bgpPeerNxtHopPeer=bgpPeerNxtHopPeer, bgpPathAttrLocalPref=bgpPathAttrLocalPref, bgpIpPreEntry=bgpIpPreEntry, bgpPeerConfigMaxPrfx=bgpPeerConfigMaxPrfx, bgpRmEntLocalMbrAs=bgpRmEntLocalMbrAs, bgpPeerConfigThreshold=bgpPeerConfigThreshold, BgpExtendedCommunity=BgpExtendedCommunity, bgpPeerAfiSafiTrapPrefix=bgpPeerAfiSafiTrapPrefix, bgpPrfxInPrfxesFlapped=bgpPrfxInPrfxesFlapped, bgpNlriPrfxLen=bgpNlriPrfxLen, bgpPathAttrExtCommValue=bgpPathAttrExtCommValue, bgpPrfxNumLocRibRoutes=bgpPrfxNumLocRibRoutes, bgpNlriPrefixIsActive=bgpNlriPrefixIsActive, bgpPeerAfiSafiOrigDefaultRtMap=bgpPeerAfiSafiOrigDefaultRtMap, bgpConfigRtgrimde=bgpConfigRtgrimde, bgpRouteMapSeAsPrependCount=bgpRouteMapSeAsPrependCount, BgpIpMatchType=BgpIpMatchType, bgpNlriFlapStartTime=bgpNlriFlapStartTime, bgpRmAfiSafiInPrfxes=bgpRmAfiSafiInPrfxes, bgpAdjRibOutEntry=bgpAdjRibOutEntry, bgpPeerMinRouteAdvertiseInterval=bgpPeerMinRouteAdvertiseInterval, bgpPeerRstrRemTime=bgpPeerRstrRemTime, bgpOrfCapabilityOrfType=bgpOrfCapabilityOrfType, bgpNmListenGroup=bgpNmListenGroup, bgpFlapStatsPenalty=bgpFlapStatsPenalty, bgpRouteMapSeExtCommAct=bgpRouteMapSeExtCommAct, bgpAdjRibOutMultiExitDisc=bgpAdjRibOutMultiExitDisc, bgpPeerCapSentCode=bgpPeerCapSentCode, bgpNotification=bgpNotification, BgpPeerLastFailure=BgpPeerLastFailure, bgpPeerRstrFamily=bgpPeerRstrFamily, bgpPathAttrUnknownValue=bgpPathAttrUnknownValue, bgpRouteMapClearcnt=bgpRouteMapClearcnt, bgpPathAttrAsPathLimUpper=bgpPathAttrAsPathLimUpper, bgpPeergrSoftResetWithStoredInfo=bgpPeergrSoftResetWithStoredInfo, bgpPeerCapSentIndex=bgpPeerCapSentIndex, bgpRouteMapMaAs=bgpRouteMapMaAs, bgpNmListenIndex=bgpNmListenIndex, bgpPeerConfigIndex=bgpPeerConfigIndex, BgpAsPathAction=BgpAsPathAction, bgpPrfxOutPrfxes=bgpPrfxOutPrfxes, bgpRmAfmJoinEntry=bgpRmAfmJoinEntry, bgpNmMjEntity=bgpNmMjEntity, bgpNotificationsGroup=bgpNotificationsGroup, bgpCompliance=bgpCompliance, bgpRmAfiSafiLocRibBlocked=bgpRmAfiSafiLocRibBlocked, bgpRmAfiSafiEbgpPrefixes=bgpRmAfiSafiEbgpPrefixes, bgpIpPreMatch=bgpIpPreMatch, bgpPeerAfiSafiConfigDropWarn=bgpPeerAfiSafiConfigDropWarn, bgpRmEntIpv4ArinhEntIndex=bgpRmEntIpv4ArinhEntIndex, bgpPeerAfiSafiSoftResetStore=bgpPeerAfiSafiSoftResetStore, bgpNmEntOperStatus=bgpNmEntOperStatus, bgpRouteMapSeMedDelta=bgpRouteMapSeMedDelta, bgpConfigThirdPtyNxtHop=bgpConfigThirdPtyNxtHop, bgpConfigRemove=bgpConfigRemove, bgpNmListenOptionalGroup=bgpNmListenOptionalGroup, bgpPeerCapsSupport=bgpPeerCapsSupport, bgpPeerFsmEstablishedTransitions=bgpPeerFsmEstablishedTransitions, bgpAdjRibOutLocalPref=bgpAdjRibOutLocalPref, bgpHaf=bgpHaf, bgpRmAfiSafiAfmRequired=bgpRmAfiSafiAfmRequired, bgpOrfCapabilitySendReceive=bgpOrfCapabilitySendReceive, bgpPeerCapRcvdIndex=bgpPeerCapRcvdIndex, bgpNmListenAddrType=bgpNmListenAddrType, bgpPeerLastErrorRcvdTime=bgpPeerLastErrorRcvdTime, bgpRmArinhJoinGroup=bgpRmArinhJoinGroup, BgpIdentifier=BgpIdentifier, bgpNlriPrefixPathAttrLocalPref=bgpNlriPrefixPathAttrLocalPref, bgpIpPreLe=bgpIpPreLe, bgpPathAttrWeight=bgpPathAttrWeight, bgpPeerOrfCapabilityOptionalGrp=bgpPeerOrfCapabilityOptionalGrp, bgpRmEntPathAttrs=bgpRmEntPathAttrs, bgpNmEntRmIndex=bgpNmEntRmIndex, bgpRouteMapSeOriginDef=bgpRouteMapSeOriginDef, bgpPeerThirdPtyNxtHop=bgpPeerThirdPtyNxtHop, bgpOrfCapabilityGroup=bgpOrfCapabilityGroup, bgpRmEntNhrEntIndex=bgpRmEntNhrEntIndex, bgpPeergrEnableAttributeDiscard=bgpPeergrEnableAttributeDiscard, bgpPeerInTotalMessages=bgpPeerInTotalMessages, bgpPeerLocalAddr=bgpPeerLocalAddr, bgpNmEntTable=bgpNmEntTable, bgpNlriEntry=bgpNlriEntry, bgpNlriTable=bgpNlriTable, bgpAdjRibOutASPathStr=bgpAdjRibOutASPathStr, bgpNotificationObjectGroup=bgpNotificationObjectGroup, bgpAggrSafi=bgpAggrSafi, bgpPathAttrCommEntry=bgpPathAttrCommEntry, bgpRmAfiSafiNumLocRibRoutes=bgpRmAfiSafiNumLocRibRoutes, bgpConfigRtgrexpe=bgpConfigRtgrexpe, bgpPeerTrapEstab=bgpPeerTrapEstab, bgpFlapConfigRowStatus=bgpFlapConfigRowStatus, bgpNmEntOptionalGroup=bgpNmEntOptionalGroup, bgpRmEntIpv4UniFwdPrsrvd=bgpRmEntIpv4UniFwdPrsrvd, bgpPeergrRowStatus=bgpPeergrRowStatus, bgpRouteMapSeWeight=bgpRouteMapSeWeight, bgpRmAfmAdminStatus=bgpRmAfmAdminStatus, bgpPeerBfdStatus=bgpPeerBfdStatus, bgpPeerOperStatus=bgpPeerOperStatus, bgpPeerConfigRtRefresh=bgpPeerConfigRtRefresh, bgpPeerCapsRcvd=bgpPeerCapsRcvd, bgpRmEntMaxRestartTime=bgpRmEntMaxRestartTime, BgpSafi=BgpSafi, bgpNmMjJoinStatus=bgpNmMjJoinStatus, bgpPeerTrapBackw=bgpPeerTrapBackw, bgpObsoleteGroup=bgpObsoleteGroup, bgpPeergrNxtHopPeer=bgpPeergrNxtHopPeer, bgpPathAttrAggregatorAddr=bgpPathAttrAggregatorAddr, bgpPeerSelectedLocalAs=bgpPeerSelectedLocalAs, bgpPeergrAfiSafiEntry=bgpPeergrAfiSafiEntry, bgpNlriPrefixPathAttrNextHop=bgpNlriPrefixPathAttrNextHop, bgpConfigExportMap=bgpConfigExportMap, bgpNmEntIndex=bgpNmEntIndex, bgpNmListenAddrScopeId=bgpNmListenAddrScopeId, bgpRmEntI3EntIndex=bgpRmEntI3EntIndex, bgpPeerSelectedRemoteAs=bgpPeerSelectedRemoteAs, bgpRmAfiSafiUserData=bgpRmAfiSafiUserData, bgpNlriPrefixEcmp=bgpNlriPrefixEcmp, bgpRmAfiSafiNextHopSafi=bgpRmAfiSafiNextHopSafi, bgpPathAttributesOptionalGroup=bgpPathAttributesOptionalGroup, bgpNlriPrefixFlapStatsClearstat=bgpNlriPrefixFlapStatsClearstat, bgpNlriPrefixPathAttrAggAddr=bgpNlriPrefixPathAttrAggAddr, BgpAutonomousSystemNumber=BgpAutonomousSystemNumber, bgpRmEntFastExtFallover=bgpRmEntFastExtFallover, bgpRmArinhJoinTable=bgpRmArinhJoinTable, bgpPeerLastEvent=bgpPeerLastEvent, bgpPeerIndex=bgpPeerIndex, bgpAdjRibOutAfi=bgpAdjRibOutAfi, bgpRouteMapHitcnt=bgpRouteMapHitcnt, bgpConfigRtgrexde=bgpConfigRtgrexde, bgpRmNmJoinStatus=bgpRmNmJoinStatus, bgpRouteMapSeComm=bgpRouteMapSeComm, bgpPathAttrCapExts=bgpPathAttrCapExts, BgpOriginCode=BgpOriginCode, bgpNmEntSckIndex=bgpNmEntSckIndex, bgpRmEntAroRouteThreshold=bgpRmEntAroRouteThreshold, bgpPeerAfiSafiDisableSndLpDetect=bgpPeerAfiSafiDisableSndLpDetect, bgpPeergrAfiSafiAfi=bgpPeergrAfiSafiAfi, bgpRouteMapMaExtComm=bgpRouteMapMaExtComm, bgpFlapConfigDecayok=bgpFlapConfigDecayok, bgpPeergrAfiSafiOrigDefault=bgpPeergrAfiSafiOrigDefault, bgpIpPreRowStatus=bgpIpPreRowStatus, bgpGroups=bgpGroups, bgpRmEntPhase3DelayTime=bgpRmEntPhase3DelayTime, bgpNmListenAdminStatus=bgpNmListenAdminStatus, bgpRouteMapSeAsPrependSize=bgpRouteMapSeAsPrependSize, bgpRouteMapMaSafi=bgpRouteMapMaSafi, bgpPeerCapsRcvdEntry=bgpPeerCapsRcvdEntry, bgpFlapStatsSupprsd=bgpFlapStatsSupprsd, bgpRouteMapMaSafiDef=bgpRouteMapMaSafiDef, bgpPeerPeeringType=bgpPeerPeeringType, bgpAggrAdvertiseMap=bgpAggrAdvertiseMap, bgpRmEntAdminStatus=bgpRmEntAdminStatus, bgpPrfxCntrsEntry=bgpPrfxCntrsEntry, bgpPathAttrClusterValue=bgpPathAttrClusterValue, bgpPathAttrOrigin=bgpPathAttrOrigin, bgpPeerRouteRefrSent=bgpPeerRouteRefrSent, bgpAggrPermanent=bgpAggrPermanent)
mibBuilder.exportSymbols("DC-BGP-MIB", bgpPeerAfiSafiEntry=bgpPeerAfiSafiEntry, bgpNotificationEntry=bgpNotificationEntry, bgpPathAttrCommUserData=bgpPathAttrCommUserData, bgpNlriPrefixFlapStartTime=bgpNlriPrefixFlapStartTime, bgpPeerLastErrorSentTime=bgpPeerLastErrorSentTime, bgpRmEntPeakNumAroRoutes=bgpRmEntPeakNumAroRoutes, bgpRmAfiSafiInPrfxesRejected=bgpRmAfiSafiInPrfxesRejected, bgpRib=bgpRib, bgpNmMjJoin=bgpNmMjJoin, bgpPeerCapsSentTable=bgpPeerCapsSentTable, bgpPeerCapRcvdCode=bgpPeerCapRcvdCode, bgpNlriPrefixPeerAfmIndex=bgpNlriPrefixPeerAfmIndex, bgpNmListenOperStatus=bgpNmListenOperStatus, BgpNlriIsActiveFlag=BgpNlriIsActiveFlag, bgpNlriPrefixASPathStr=bgpNlriPrefixASPathStr, bgpEntOperStatusChange=bgpEntOperStatusChange, bgpNlriPrefixFlapStatsTimeleft=bgpNlriPrefixFlapStatsTimeleft, BgpPeerStates=BgpPeerStates, bgpPeerAfiSafiNxtHopSlf=bgpPeerAfiSafiNxtHopSlf, bgpRmEntSelectDeferTime=bgpRmEntSelectDeferTime, bgpPeerOrfCapabilitySendReceive=bgpPeerOrfCapabilitySendReceive, bgpIpPreTable=bgpIpPreTable, bgpAggrAttributeMap=bgpAggrAttributeMap, bgpPib=bgpPib, bgpNotifications=bgpNotifications, bgpPeerRemoteAddr=bgpPeerRemoteAddr, bgpPeerMinRouteWithdrawInterval=bgpPeerMinRouteWithdrawInterval, bgpRouteMapSeFlap=bgpRouteMapSeFlap, bgpFlapConfigCut=bgpFlapConfigCut, bgpPeerAfiSafiAfi=bgpPeerAfiSafiAfi, bgpNlriIsActive=bgpNlriIsActive, bgpFlapConfigEntry=bgpFlapConfigEntry, bgpPeerEnableAttributeDiscard=bgpPeerEnableAttributeDiscard, bgpAdjRibOutLocalAggrType=bgpAdjRibOutLocalAggrType, bgpPeerLastErrorRcvd=bgpPeerLastErrorRcvd, BgpMjStatus=BgpMjStatus, bgpPeergrTable=bgpPeergrTable, bgpPeerCheckNextHop=bgpPeerCheckNextHop, bgpConfigTable=bgpConfigTable, bgpPeerOrfCapabilitySafi=bgpPeerOrfCapabilitySafi, bgpTrapData=bgpTrapData, bgpRmEntDeterministicMed=bgpRmEntDeterministicMed, bgpAggrPrefixLength=bgpAggrPrefixLength, bgpRmEntVpnIpv4FwdPrsrvd=bgpRmEntVpnIpv4FwdPrsrvd, bgpPeerMinASOriginationInterval=bgpPeerMinASOriginationInterval, bgpFlapConfigTmaxok=bgpFlapConfigTmaxok, bgpRmArinhSafi=bgpRmArinhSafi, bgpEntTrapData=bgpEntTrapData, BgpOperStatus=BgpOperStatus, bgpAdjRibOutOrigin=bgpAdjRibOutOrigin, bgpPeerOrfCapabilityGroup=bgpPeerOrfCapabilityGroup, bgpRmAfmRowStatus=bgpRmAfmRowStatus, bgpPeergrDisableSenderLoopDetect=bgpPeergrDisableSenderLoopDetect, bgpNlriPrefixBest=bgpNlriPrefixBest, bgpRmAfmJoinGroup=bgpRmAfmJoinGroup, PYSNMP_MODULE_ID=bgpMib, bgpNlriPeerOrAfm=bgpNlriPeerOrAfm, bgpRouteMapMaOrigin=bgpRouteMapMaOrigin, bgpAggrRowStatus=bgpAggrRowStatus, bgpPeerData=bgpPeerData, bgpRmEntityOptionalGroup=bgpRmEntityOptionalGroup, bgpNlriLinkLocalNextHop=bgpNlriLinkLocalNextHop, bgpRmEntMaxEBgpEcmpRoutes=bgpRmEntMaxEBgpEcmpRoutes, BgpCapabilities=BgpCapabilities, bgpNmEntAdminStatus=bgpNmEntAdminStatus, bgpOrfCapabilityAfi=bgpOrfCapabilityAfi, bgpPeerOrfCapabilityAfi=bgpPeerOrfCapabilityAfi, bgpPeergrAfiSafiDisSndLpDetect=bgpPeergrAfiSafiDisSndLpDetect, bgpPeergrAfiSafiAllowLocalAs=bgpPeergrAfiSafiAllowLocalAs, bgpPeerAfiSafiTable=bgpPeerAfiSafiTable, bgpPeergrIndex=bgpPeergrIndex, bgpPeerClearCnts=bgpPeerClearCnts, bgpPeerSessionEstablished=bgpPeerSessionEstablished, bgpConfigNonExistMap=bgpConfigNonExistMap, BgpPeerEvents=BgpPeerEvents, bgpRouteMapMaOriginDef=bgpRouteMapMaOriginDef, bgpPeerRemoteAs=bgpPeerRemoteAs, bgpPrfxInPrfxes=bgpPrfxInPrfxes, bgpPeerSelectedRemotePort=bgpPeerSelectedRemotePort, bgpAdjRibOutAggregatorAddr=bgpAdjRibOutAggregatorAddr, bgpNmMjTable=bgpNmMjTable, bgpNmListenTable=bgpNmListenTable, bgpRouteMapUserInfo=bgpRouteMapUserInfo, bgpPeerRstrRestarting=bgpPeerRstrRestarting, bgpBaseNotifications=bgpBaseNotifications, bgpPeerLastErrorSent=bgpPeerLastErrorSent, bgpAdjRibOutStale=bgpAdjRibOutStale, bgpRmEntIpv6ArinhEntIndex=bgpRmEntIpv6ArinhEntIndex, bgpPeerAllowLocalAs=bgpPeerAllowLocalAs, bgpPeerSoftResetWithStoredInfo=bgpPeerSoftResetWithStoredInfo, bgpFlapConfigThold=bgpFlapConfigThold, bgpPeerAfiSafiConfigThreshold=bgpPeerAfiSafiConfigThreshold, bgpPeerState=bgpPeerState, bgpRmEntStrictConfed=bgpRmEntStrictConfed, bgpPeerConfigPeergr=bgpPeerConfigPeergr, bgpPeerTtl=bgpPeerTtl, bgpRouteMapMaAddr=bgpRouteMapMaAddr, bgpPeerRstrSupport=bgpPeerRstrSupport, bgpRmArinhAfi=bgpRmArinhAfi, bgpRouteMapSeMedDef=bgpRouteMapSeMedDef, bgpPeerMaxPrfxHold=bgpPeerMaxPrfxHold, bgpAdjRibOutSafi=bgpAdjRibOutSafi, bgpNlriPrefixSafi=bgpNlriPrefixSafi, bgpRmEntFlapReusearray=bgpRmEntFlapReusearray, bgpRouteMapOrfAssoc=bgpRouteMapOrfAssoc, bgpRouteMapSeMed=bgpRouteMapSeMed, bgpRmNmEntry=bgpRmNmEntry, bgpRmAfiSafiAdvertiseInactive=bgpRmAfiSafiAdvertiseInactive, bgpPeerAggrInclConfedAS=bgpPeerAggrInclConfedAS, bgpRmAfmAfi=bgpRmAfmAfi, BgpCommunityAction=BgpCommunityAction, bgpRouteMapSeAsAct=bgpRouteMapSeAsAct, bgpRmEntRestarting=bgpRmEntRestarting, bgpFlapConfigTmaxng=bgpFlapConfigTmaxng, bgpPeerSelectedLocalAddr=bgpPeerSelectedLocalAddr, bgpPeerLastFailureCause=bgpPeerLastFailureCause, bgpRmEntRestartSupported=bgpRmEntRestartSupported, bgpPathAttrClusterIndex=bgpPathAttrClusterIndex, bgpAggrAfi=bgpAggrAfi, bgpRmEntAggSplitHorizon=bgpRmEntAggSplitHorizon, bgpRmEntOperStatus=bgpRmEntOperStatus, bgpAdjRibOutUserData=bgpAdjRibOutUserData, bgpRmAfmJoinOptionalGroup=bgpRmAfmJoinOptionalGroup, bgpRmEntIpv4MultiSupport=bgpRmEntIpv4MultiSupport, bgpPathAttrClusterTable=bgpPathAttrClusterTable, bgpPeerCntrs=bgpPeerCntrs, bgpRmEntCiscoPrefixSupported=bgpRmEntCiscoPrefixSupported, bgpPeerMaxOrfEntries=bgpPeerMaxOrfEntries, bgpPeerConnectRetryInterval=bgpPeerConnectRetryInterval, bgpNlriPrefixStale=bgpNlriPrefixStale, bgpConfigRtgrimpe=bgpConfigRtgrimpe, bgpNlriPrfx=bgpNlriPrfx, bgpConfigNxtHopSlf=bgpConfigNxtHopSlf, bgpPeerOrfCapabilityEntry=bgpPeerOrfCapabilityEntry, bgpRmEntEntry=bgpRmEntEntry, bgpNmEntBfdEntityIndex=bgpNmEntBfdEntityIndex, bgpNmMjGroup=bgpNmMjGroup, BgpDropOrWarn=BgpDropOrWarn, bgpRmEntIpv6ArinhJoinStatus=bgpRmEntIpv6ArinhJoinStatus, bgpAdjRibOutAsLimUpper=bgpAdjRibOutAsLimUpper, bgpRmEntStalePathTime=bgpRmEntStalePathTime, bgpRmEntLocalAs=bgpRmEntLocalAs, bgpPathAttrAtomicAggregate=bgpPathAttrAtomicAggregate, bgpConfigCondAdvOn=bgpConfigCondAdvOn, bgpPeerLastError=bgpPeerLastError, bgpPeergrAfiSafiOrigDefaultRtMap=bgpPeergrAfiSafiOrigDefaultRtMap, bgpPeerConfedMember=bgpPeerConfedMember, bgpRmEntRowStatus=bgpRmEntRowStatus, bgpNlriSafi=bgpNlriSafi, bgpFlapStatsConfig=bgpFlapStatsConfig, bgpNlriUserData=bgpNlriUserData, bgpPeergrArea=bgpPeergrArea, bgpNlriPrefixPrfxLen=bgpNlriPrefixPrfxLen, bgpPeerTable=bgpPeerTable, bgpRouteMapSeMedDeltaTyp=bgpRouteMapSeMedDeltaTyp, bgpPeergrAfiSafiSoftResetStore=bgpPeergrAfiSafiSoftResetStore, bgpPeerConnectRetryCount=bgpPeerConnectRetryCount, BgpSjStatus=BgpSjStatus, bgpPeerSelectedLocalPort=bgpPeerSelectedLocalPort, bgpPrfxInPrfxesDeniedByPol=bgpPrfxInPrfxesDeniedByPol, bgpCompliances=bgpCompliances, bgpConfigBlockCondAdv=bgpConfigBlockCondAdv, bgpRmEntTrapOperState=bgpRmEntTrapOperState, bgpAggrOptions=bgpAggrOptions, bgpPeergrAggrConfedAS=bgpPeergrAggrConfedAS, bgpPeerLocalAddrType=bgpPeerLocalAddrType, bgpNotifPeerLocalAddr=bgpNotifPeerLocalAddr, bgpPrfxCntrsAfi=bgpPrfxCntrsAfi, bgpPeerAfiSafiPrefixThreshold=bgpPeerAfiSafiPrefixThreshold, bgpRmAfmSafi=bgpRmAfmSafi, bgpPathAttributesGroup=bgpPathAttributesGroup, bgpRouteMapMaAfi=bgpRouteMapMaAfi, bgpNmListenEntry=bgpNmListenEntry, bgpRouteMapMaUser=bgpRouteMapMaUser, bgpPathAttrMultiExitDisc=bgpPathAttrMultiExitDisc, bgpPeerOutPrfxesAdvertised=bgpPeerOutPrfxesAdvertised, bgpNlriPeerAfmIndex=bgpNlriPeerAfmIndex, bgpConfigIndex=bgpConfigIndex, bgpEntRestartHelperChange=bgpEntRestartHelperChange, bgpFlapStatsClearstat=bgpFlapStatsClearstat, bgpNlriEcmp=bgpNlriEcmp, bgpRouteMapMaComm=bgpRouteMapMaComm, bgpNlriBest=bgpNlriBest, bgpOrfCapabilityEntry=bgpOrfCapabilityEntry, bgpNotifPeerRemoteAddr=bgpNotifPeerRemoteAddr, bgpPathAttrCommValue=bgpPathAttrCommValue, bgpPeerInUpdates=bgpPeerInUpdates, bgpRouteMapSeMedIgp=bgpRouteMapSeMedIgp, bgpPathAttrExtCommIndex=bgpPathAttrExtCommIndex, bgpPeerTrapPrefix=bgpPeerTrapPrefix, bgpAdjRibOutPrfx=bgpAdjRibOutPrfx, bgpNlriPrefixPathAttrWeight=bgpNlriPrefixPathAttrWeight, bgpRmEntNoRefresh=bgpRmEntNoRefresh, bgpPeergrAfiSafiNxtHopSlf=bgpPeergrAfiSafiNxtHopSlf, bgpPeerLastErrorDataLen=bgpPeerLastErrorDataLen, bgpRmAfiSafiInPrfxesFlapSuppr=bgpRmAfiSafiInPrfxesFlapSuppr, bgpPathAttrRouteReflectionExts=bgpPathAttrRouteReflectionExts, bgpPeerAfiSafiSafi=bgpPeerAfiSafiSafi, bgpRmAfiSafiSafi=bgpRmAfiSafiSafi, bgpPeerOptionalGroup=bgpPeerOptionalGroup, bgpRouteMapMaAnd=bgpRouteMapMaAnd, bgpPeer=bgpPeer, bgpNlriPrefixFlapStatsSupprsd=bgpNlriPrefixFlapStatsSupprsd, bgpPeerAdminStatus=bgpPeerAdminStatus, bgpPeerIdleHoldRemTime=bgpPeerIdleHoldRemTime, bgpPeergrEntry=bgpPeergrEntry, bgpPeerAfiSafiDisable=bgpPeerAfiSafiDisable, bgpNlriPrefixFlapStatsFlapcnt=bgpNlriPrefixFlapStatsFlapcnt, bgpPeerConfigIdleHold=bgpPeerConfigIdleHold, bgpPeerLastState=bgpPeerLastState, bgpPrfxInPrfxesRejected=bgpPrfxInPrfxesRejected, bgpRmEntOrfSupported=bgpRmEntOrfSupported, bgpPeerLastErrorData=bgpPeerLastErrorData, bgpPeerOrfCapabilityAdminStatus=bgpPeerOrfCapabilityAdminStatus, bgpRmAfiSafiIbgpPrefixes=bgpRmAfiSafiIbgpPrefixes, bgpPeerAfiSafiConfigMaxPrfx=bgpPeerAfiSafiConfigMaxPrfx, bgpRmEntFlapReusesize=bgpRmEntFlapReusesize, bgpPeerFlapStatsClearStat=bgpPeerFlapStatsClearStat, bgpRmAfiSafiInPrfxesDeniedByPol=bgpRmAfiSafiInPrfxesDeniedByPol, bgpPeerCapsSentEntry=bgpPeerCapsSentEntry, bgpFlapStatsFlapcnt=bgpFlapStatsFlapcnt, bgpNlriPrefixFlapStatsConfig=bgpNlriPrefixFlapStatsConfig, bgpPeerHoldTimeConfigd=bgpPeerHoldTimeConfigd, bgpRmAfmJoin=bgpRmAfmJoin, bgpPeerCaps=bgpPeerCaps, bgpPrfxOutPrfxesAdvertised=bgpPrfxOutPrfxesAdvertised, bgpPeerAfiSafiMaxPrfxHold=bgpPeerAfiSafiMaxPrfxHold, bgpRouteMapSeAsPrependAsVals=bgpRouteMapSeAsPrependAsVals, BgpPeerReflectorClientType=BgpPeerReflectorClientType, BgpPeerRestartStatus=BgpPeerRestartStatus, bgpPeerFsmEstablishedTime=bgpPeerFsmEstablishedTime, BgpAsSize=BgpAsSize, bgpPeergrThirdPtyNxtHop=bgpPeergrThirdPtyNxtHop, bgpOrfCapabilityOptionalGroup=bgpOrfCapabilityOptionalGroup, bgpIpPreType=bgpIpPreType, bgpAdjRibOutLinkLocalNextHop=bgpAdjRibOutLinkLocalNextHop, bgpPeerLocalPort=bgpPeerLocalPort, bgpPeerGroup=bgpPeerGroup, bgpPeergrAfiSafiSafi=bgpPeergrAfiSafiSafi, bgpIpPreSafi=bgpIpPreSafi, bgpRouteMapType=bgpRouteMapType, bgpRmAfiSafiEntry=bgpRmAfiSafiEntry, bgpAggregateEntry=bgpAggregateEntry, bgpNotifPeerLocalAddrType=bgpNotifPeerLocalAddrType, bgpPeerOrfEntryCount=bgpPeerOrfEntryCount, bgpNlriPrefixPathAttrOrigin=bgpNlriPrefixPathAttrOrigin, bgpRmAfiSafiAdminStatus=bgpRmAfiSafiAdminStatus, bgpRmEntSupportIpv6=bgpRmEntSupportIpv6, bgpRmAfiSafiOptionalGroup=bgpRmAfiSafiOptionalGroup, bgpRouteMapSeExtComm=bgpRouteMapSeExtComm, bgpPeerBfdDesired=bgpPeerBfdDesired, bgpPeerCeaseErrorSubcode=bgpPeerCeaseErrorSubcode, bgpPeerOrfCapabilityTable=bgpPeerOrfCapabilityTable, bgpNm=bgpNm)
mibBuilder.exportSymbols("DC-BGP-MIB", bgpPeerTrapGrHelperState=bgpPeerTrapGrHelperState, bgpAdjRibOutNextHop=bgpAdjRibOutNextHop, bgpAdjRibOutPrfxLen=bgpAdjRibOutPrfxLen, bgpRouteMapRowStatus=bgpRouteMapRowStatus, bgpPrfxCntrsTable=bgpPrfxCntrsTable, bgpPathAttrCommIndex=bgpPathAttrCommIndex, bgpAggrPrefix=bgpAggrPrefix, bgpRmAfiSafiInPrfxesAccepted=bgpRmAfiSafiInPrfxesAccepted, bgpPathAttrCommTable=bgpPathAttrCommTable, BgpMedDeltaType=BgpMedDeltaType, bgpAdjRibOutEcmp=bgpAdjRibOutEcmp, bgpPeerRstrStatus=bgpPeerRstrStatus, bgpNmListenAddr=bgpNmListenAddr, BgpCeaseErrorSubcode=BgpCeaseErrorSubcode, BgpOrfSendReceive=BgpOrfSendReceive, bgpPathAttrCommunityExts=bgpPathAttrCommunityExts, bgpNotifPeerLocalPort=bgpNotifPeerLocalPort, bgpIpPreNumber=bgpIpPreNumber, BgpPeeringType=BgpPeeringType, bgpPathAttrUnknownType=bgpPathAttrUnknownType, bgpPeergrNxtHopSlf=bgpPeergrNxtHopSlf, bgpPeerPassword=bgpPeerPassword, bgpNlriPrefixPathAttrAsPathLimAs=bgpNlriPrefixPathAttrAsPathLimAs, bgpRmEntNhrJoinStatus=bgpRmEntNhrJoinStatus, bgpNmListenAcceptAll=bgpNmListenAcceptAll, BgpPermitOrDeny=BgpPermitOrDeny, bgpConfigDefImport=bgpConfigDefImport, bgpRmEntMaxActiveAroGroups=bgpRmEntMaxActiveAroGroups, bgpConfigDefExport=bgpConfigDefExport, bgpPrfxInPrfxesActive=bgpPrfxInPrfxesActive, bgpRmAfmRestartTime=bgpRmAfmRestartTime, bgpPeerEntry=bgpPeerEntry, bgpPeerRouteRefrRcvd=bgpPeerRouteRefrRcvd, bgpPathAttrExtCommTable=bgpPathAttrExtCommTable, bgpPeerHoldTime=bgpPeerHoldTime, bgpNlriPrefixPathAttrOrigId=bgpNlriPrefixPathAttrOrigId, bgpPeerAfiSafiMaxOrfEntries=bgpPeerAfiSafiMaxOrfEntries, bgpPeerFlapStatsClearMap=bgpPeerFlapStatsClearMap, bgpPeerCapsRcvdTable=bgpPeerCapsRcvdTable, bgpNlriAfi=bgpNlriAfi, bgpPeerCapsSent=bgpPeerCapsSent, bgpRmEntPauseThreshold=bgpRmEntPauseThreshold, bgpFlapStatsTimeleft=bgpFlapStatsTimeleft, bgpPeerAfiSafiMaxPrefix=bgpPeerAfiSafiMaxPrefix, BgpOrfType=BgpOrfType, bgpRmArinhEntIndex=bgpRmArinhEntIndex, bgpPeerRemoteAddrType=bgpPeerRemoteAddrType, bgpRmEntityGroup=bgpRmEntityGroup, bgpPathAttrUnknownEntry=bgpPathAttrUnknownEntry, bgpPathAttrExtCommEntry=bgpPathAttrExtCommEntry, bgpNlriPrefixAfi=bgpNlriPrefixAfi, bgpPeerOutUpdates=bgpPeerOutUpdates, bgpNlriPrefixPathAttrAggAS=bgpNlriPrefixPathAttrAggAS, bgpRmEntNumArosInGroup=bgpRmEntNumArosInGroup, bgpAdjRibOutAdvertStatus=bgpAdjRibOutAdvertStatus, bgpPeerConfigOpenDelay=bgpPeerConfigOpenDelay, bgpPeerSessionBackward=bgpPeerSessionBackward, bgpRouteMapSeLocPrefDef=bgpRouteMapSeLocPrefDef, bgpPeerAfiSafiAllowLocalAs=bgpPeerAfiSafiAllowLocalAs, bgpRmAfmJoinStatus=bgpRmAfmJoinStatus, bgpPrfxCntrsUserData=bgpPrfxCntrsUserData, bgpNotifPeerRemotePort=bgpNotifPeerRemotePort, bgpRmArinhJoinEntry=bgpRmArinhJoinEntry, BgpPeerOrAfm=BgpPeerOrAfm, bgpRmNmTable=bgpRmNmTable, bgpPathAttrCalcLocalPref=bgpPathAttrCalcLocalPref, bgpRouteMapNumber=bgpRouteMapNumber, bgpAdjRibOutTable=bgpAdjRibOutTable, bgpPathAttrClusterUserData=bgpPathAttrClusterUserData, bgpPeerConfigPassive=bgpPeerConfigPassive, bgpRouteMapSeLocPref=bgpRouteMapSeLocPref, BgpComponentId=BgpComponentId, bgpRouteMapMaMedDef=bgpRouteMapMaMedDef, bgpNotifPeerRemoteAddrType=bgpNotifPeerRemoteAddrType, bgpRmEntRecoveryTime=bgpRmEntRecoveryTime, bgpPeerAfiSafiOrigDefault=bgpPeerAfiSafiOrigDefault, bgpPeerKeepAlive=bgpPeerKeepAlive, bgpRmNmGroup=bgpRmNmGroup, bgpNlriPrefixUserData=bgpNlriPrefixUserData, bgpRmEntNonPersistentAros=bgpRmEntNonPersistentAros, bgpPeerLocalAddrScopeId=bgpPeerLocalAddrScopeId, bgpPeerReflectorClient=bgpPeerReflectorClient, bgpNmMjJoinPartner=bgpNmMjJoinPartner, BgpPathAttrAtomicAggPresence=BgpPathAttrAtomicAggPresence, bgpConfigEntry=bgpConfigEntry, bgpRmAfiSafiRedistPrefixes=bgpRmAfiSafiRedistPrefixes, bgpFlapConfigDecayng=bgpFlapConfigDecayng, bgpNlriPrefixPthAttAsPthLimUpper=bgpNlriPrefixPthAttAsPthLimUpper, bgpRmEntIpv4MultiFwdPrsrvd=bgpRmEntIpv4MultiFwdPrsrvd, bgpRmEntTable=bgpRmEntTable, bgpNlriAsSize=bgpNlriAsSize, bgpAdjRibOutAggregatorAS=bgpAdjRibOutAggregatorAS, bgpRmAfiSafiInPrfxesFlapped=bgpRmAfiSafiInPrfxesFlapped, bgpPathAttrNonCapExts=bgpPathAttrNonCapExts, bgpNlriPrefixTable=bgpNlriPrefixTable, bgpNlriPrefixLinkLocalNextHop=bgpNlriPrefixLinkLocalNextHop, bgpPeerCheckFirstAsNum=bgpPeerCheckFirstAsNum, bgpNlriPrefixPathAttrCalcLclPref=bgpNlriPrefixPathAttrCalcLclPref, bgpRouteMapSeCommAct=bgpRouteMapSeCommAct, bgpRouteMapMaNext=bgpRouteMapMaNext, bgpRmEntDefLocalPref=bgpRmEntDefLocalPref, bgpNlriStale=bgpNlriStale, bgpNmEntGroup=bgpNmEntGroup, bgpRmEntI3JoinStatus=bgpRmEntI3JoinStatus, bgpRouteMapMaAfiDef=bgpRouteMapMaAfiDef, bgpFlapConfigReuse=bgpFlapConfigReuse, bgpRmAfiSafiGroup=bgpRmAfiSafiGroup, bgpRouteMapEntry=bgpRouteMapEntry, bgpRmEntMaxIBgpEcmpRoutes=bgpRmEntMaxIBgpEcmpRoutes, bgpRmEntUpdateGroups=bgpRmEntUpdateGroups, bgpPeergrAfiSafiTable=bgpPeergrAfiSafiTable, BgpAfiSafiBits=BgpAfiSafiBits, bgpAggrSuppressMap=bgpAggrSuppressMap, bgpNotifRmEntIndex=bgpNotifRmEntIndex, bgpRmAfiSafiDefaultImportRule=bgpRmAfiSafiDefaultImportRule, bgpPathAttrExtensions=bgpPathAttrExtensions, bgpPathAttrUnknownTable=bgpPathAttrUnknownTable, bgpRmAfiSafiStateKept=bgpRmAfiSafiStateKept, bgpNlriPrefixPrfx=bgpNlriPrefixPrfx, bgpRmEntAlwaysCompMed=bgpRmEntAlwaysCompMed, bgpPeerNxtHopSlf=bgpPeerNxtHopSlf, bgpRmAfiSafiOutPrfxes=bgpRmAfiSafiOutPrfxes, bgpNlriASPathStr=bgpNlriASPathStr, bgpRmEntFlapDeltat=bgpRmEntFlapDeltat, bgpPeerLocalNm=bgpPeerLocalNm, bgpPeerConfigDropWarn=bgpPeerConfigDropWarn, bgpPeerAfiSafiOptionalGroup=bgpPeerAfiSafiOptionalGroup, bgpFlapConfigIndex=bgpFlapConfigIndex, bgpRouteMapSeWeightDef=bgpRouteMapSeWeightDef, bgpIpPreAfi=bgpIpPreAfi, bgpNlriPrefixPathAttrMultExtDisc=bgpNlriPrefixPathAttrMultExtDisc, bgpAdjRibOutAsLimAs=bgpAdjRibOutAsLimAs, bgpPrfxInPrfxesAccepted=bgpPrfxInPrfxesAccepted, bgpNmMjPartnerIndex=bgpNmMjPartnerIndex, bgpPeerStalePathTime=bgpPeerStalePathTime, bgpNlriPrefixEntry=bgpNlriPrefixEntry, bgpPeerSelectedLocalAddrType=bgpPeerSelectedLocalAddrType, bgpRouteMapMaSource=bgpRouteMapMaSource, bgpRmEntRemainDelayTime=bgpRmEntRemainDelayTime, bgpPeerOrfCapabilityOrfType=bgpPeerOrfCapabilityOrfType, bgpRmAfiSafiInPrfxesFlapHistory=bgpRmAfiSafiInPrfxesFlapHistory, bgpConfigImportMap=bgpConfigImportMap, bgpPolicyOptionalGroup=bgpPolicyOptionalGroup, bgpRouteMapSeNext=bgpRouteMapSeNext, bgpAdjRibOutAtomicAggregate=bgpAdjRibOutAtomicAggregate)
