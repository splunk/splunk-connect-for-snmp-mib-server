#
# PySNMP MIB module Nortel-Magellan-Passport-IpNhrpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-IpNhrpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
vrIpIndex, vrPpIpPortLogicalIf, vrPpIpPortLogicalIfAddressIndex, vrPpIpPortIndex, vrIp = mibBuilder.importSymbols("Nortel-Magellan-Passport-IpMIB", "vrIpIndex", "vrPpIpPortLogicalIf", "vrPpIpPortLogicalIfAddressIndex", "vrPpIpPortIndex", "vrIp")
RowPointer, DisplayString, StorageType, Integer32, Unsigned32, Counter32, RowStatus = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "RowPointer", "DisplayString", "StorageType", "Integer32", "Unsigned32", "Counter32", "RowStatus")
HexString, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "HexString", "NonReplicated")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
vrPpIndex, vrIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex", "vrIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, TimeTicks, ModuleIdentity, iso, NotificationType, Gauge32, Bits, Integer32, ObjectIdentity, MibIdentifier, Counter64, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "ModuleIdentity", "iso", "NotificationType", "Gauge32", "Bits", "Integer32", "ObjectIdentity", "MibIdentifier", "Counter64", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ipNhrpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 77))
vrPpIpPortLogicalIfNhrpIf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 2, 4))
vrPpIpPortLogicalIfNhrpIfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 2, 4, 1), )
if mibBuilder.loadTexts: vrPpIpPortLogicalIfNhrpIfRowStatusTable.setStatus('mandatory')
vrPpIpPortLogicalIfNhrpIfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrPpIpPortLogicalIfNhrpIfIndex"))
if mibBuilder.loadTexts: vrPpIpPortLogicalIfNhrpIfRowStatusEntry.setStatus('mandatory')
vrPpIpPortLogicalIfNhrpIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpIpPortLogicalIfNhrpIfRowStatus.setStatus('mandatory')
vrPpIpPortLogicalIfNhrpIfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortLogicalIfNhrpIfComponentName.setStatus('mandatory')
vrPpIpPortLogicalIfNhrpIfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortLogicalIfNhrpIfStorageType.setStatus('mandatory')
vrPpIpPortLogicalIfNhrpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrPpIpPortLogicalIfNhrpIfIndex.setStatus('mandatory')
vrIpNhrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19))
vrIpNhrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 1), )
if mibBuilder.loadTexts: vrIpNhrpRowStatusTable.setStatus('mandatory')
vrIpNhrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"))
if mibBuilder.loadTexts: vrIpNhrpRowStatusEntry.setStatus('mandatory')
vrIpNhrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpRowStatus.setStatus('mandatory')
vrIpNhrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpComponentName.setStatus('mandatory')
vrIpNhrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpStorageType.setStatus('mandatory')
vrIpNhrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrIpNhrpIndex.setStatus('mandatory')
vrIpNhrpAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 10), )
if mibBuilder.loadTexts: vrIpNhrpAdminControlTable.setStatus('mandatory')
vrIpNhrpAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"))
if mibBuilder.loadTexts: vrIpNhrpAdminControlEntry.setStatus('mandatory')
vrIpNhrpSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpSnmpAdminStatus.setStatus('mandatory')
vrIpNhrpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 11), )
if mibBuilder.loadTexts: vrIpNhrpProvTable.setStatus('mandatory')
vrIpNhrpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"))
if mibBuilder.loadTexts: vrIpNhrpProvEntry.setStatus('mandatory')
vrIpNhrpMaxResCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(32, 1024)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpMaxResCacheEntries.setStatus('mandatory')
vrIpNhrpFwdTransitRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpFwdTransitRecord.setStatus('mandatory')
vrIpNhrpRevTransitRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpRevTransitRecord.setStatus('mandatory')
vrIpNhrpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 13), )
if mibBuilder.loadTexts: vrIpNhrpStateTable.setStatus('mandatory')
vrIpNhrpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"))
if mibBuilder.loadTexts: vrIpNhrpStateEntry.setStatus('mandatory')
vrIpNhrpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpAdminState.setStatus('mandatory')
vrIpNhrpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpOperationalState.setStatus('mandatory')
vrIpNhrpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpUsageState.setStatus('mandatory')
vrIpNhrpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 14), )
if mibBuilder.loadTexts: vrIpNhrpOperStatusTable.setStatus('mandatory')
vrIpNhrpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"))
if mibBuilder.loadTexts: vrIpNhrpOperStatusEntry.setStatus('mandatory')
vrIpNhrpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpSnmpOperStatus.setStatus('mandatory')
vrIpNhrpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 15), )
if mibBuilder.loadTexts: vrIpNhrpOperTable.setStatus('mandatory')
vrIpNhrpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"))
if mibBuilder.loadTexts: vrIpNhrpOperEntry.setStatus('mandatory')
vrIpNhrpCurrResCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4292967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpCurrResCacheEntries.setStatus('mandatory')
vrIpNhrpPeakResCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4292967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpPeakResCacheEntries.setStatus('mandatory')
vrIpNhrpNhs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2))
vrIpNhrpNhsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 1), )
if mibBuilder.loadTexts: vrIpNhrpNhsRowStatusTable.setStatus('mandatory')
vrIpNhrpNhsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsIndex"))
if mibBuilder.loadTexts: vrIpNhrpNhsRowStatusEntry.setStatus('mandatory')
vrIpNhrpNhsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRowStatus.setStatus('mandatory')
vrIpNhrpNhsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsComponentName.setStatus('mandatory')
vrIpNhrpNhsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsStorageType.setStatus('mandatory')
vrIpNhrpNhsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrIpNhrpNhsIndex.setStatus('mandatory')
vrIpNhrpNhsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10), )
if mibBuilder.loadTexts: vrIpNhrpNhsStatsTable.setStatus('mandatory')
vrIpNhrpNhsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsIndex"))
if mibBuilder.loadTexts: vrIpNhrpNhsStatsEntry.setStatus('mandatory')
vrIpNhrpNhsRxResolveReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxResolveReq.setStatus('mandatory')
vrIpNhrpNhsTxResolveReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxResolveReplyAck.setStatus('mandatory')
vrIpNhrpNhsTxResolveReplyNakProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxResolveReplyNakProhibited.setStatus('mandatory')
vrIpNhrpNhsTxResolveReplyNakInsufResources = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxResolveReplyNakInsufResources.setStatus('mandatory')
vrIpNhrpNhsTxResolveReplyNakNoBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxResolveReplyNakNoBinding.setStatus('mandatory')
vrIpNhrpNhsTxResolveReplyNakNotUnique = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxResolveReplyNakNotUnique.setStatus('mandatory')
vrIpNhrpNhsRxRegisterReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxRegisterReq.setStatus('mandatory')
vrIpNhrpNhsRxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxPurgeReq.setStatus('mandatory')
vrIpNhrpNhsTxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxPurgeReq.setStatus('mandatory')
vrIpNhrpNhsRxPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxPurgeReply.setStatus('mandatory')
vrIpNhrpNhsTxPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxPurgeReply.setStatus('mandatory')
vrIpNhrpNhsRxErrUnrecognizedExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxErrUnrecognizedExtension.setStatus('mandatory')
vrIpNhrpNhsRxErrLoopDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxErrLoopDetected.setStatus('mandatory')
vrIpNhrpNhsRxErrProtoAddrUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxErrProtoAddrUnreachable.setStatus('mandatory')
vrIpNhrpNhsRxErrProtoError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxErrProtoError.setStatus('mandatory')
vrIpNhrpNhsRxErrSduSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxErrSduSizeExceeded.setStatus('mandatory')
vrIpNhrpNhsRxErrInvalidExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxErrInvalidExtension.setStatus('mandatory')
vrIpNhrpNhsRxErrInvalidResReplyReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxErrInvalidResReplyReceived.setStatus('mandatory')
vrIpNhrpNhsRxErrAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxErrAuthenticationFailure.setStatus('mandatory')
vrIpNhrpNhsRxErrHopCountExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsRxErrHopCountExceeded.setStatus('mandatory')
vrIpNhrpNhsTxErrUnrecognizedExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxErrUnrecognizedExtension.setStatus('mandatory')
vrIpNhrpNhsTxErrLoopDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxErrLoopDetected.setStatus('mandatory')
vrIpNhrpNhsTxErrProtoAddrUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxErrProtoAddrUnreachable.setStatus('mandatory')
vrIpNhrpNhsTxErrProtoError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxErrProtoError.setStatus('mandatory')
vrIpNhrpNhsTxErrSduSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxErrSduSizeExceeded.setStatus('mandatory')
vrIpNhrpNhsTxErrInvalidExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxErrInvalidExtension.setStatus('mandatory')
vrIpNhrpNhsTxErrAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxErrAuthenticationFailure.setStatus('mandatory')
vrIpNhrpNhsTxErrHopCountExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsTxErrHopCountExceeded.setStatus('mandatory')
vrIpNhrpNhsFwdResolveReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsFwdResolveReq.setStatus('mandatory')
vrIpNhrpNhsFwdResolveReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsFwdResolveReply.setStatus('mandatory')
vrIpNhrpNhsFwdRegisterReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsFwdRegisterReq.setStatus('mandatory')
vrIpNhrpNhsFwdRegisterReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsFwdRegisterReply.setStatus('mandatory')
vrIpNhrpNhsFwdPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsFwdPurgeReq.setStatus('mandatory')
vrIpNhrpNhsFwdPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsFwdPurgeReply.setStatus('mandatory')
vrIpNhrpNhsFwdErrorIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 10, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsFwdErrorIndication.setStatus('mandatory')
vrIpNhrpNhsEp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2))
vrIpNhrpNhsEpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 1), )
if mibBuilder.loadTexts: vrIpNhrpNhsEpRowStatusTable.setStatus('mandatory')
vrIpNhrpNhsEpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsEpIndex"))
if mibBuilder.loadTexts: vrIpNhrpNhsEpRowStatusEntry.setStatus('mandatory')
vrIpNhrpNhsEpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhsEpRowStatus.setStatus('mandatory')
vrIpNhrpNhsEpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsEpComponentName.setStatus('mandatory')
vrIpNhrpNhsEpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsEpStorageType.setStatus('mandatory')
vrIpNhrpNhsEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vrIpNhrpNhsEpIndex.setStatus('mandatory')
vrIpNhrpNhsEpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 10), )
if mibBuilder.loadTexts: vrIpNhrpNhsEpProvTable.setStatus('mandatory')
vrIpNhrpNhsEpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsEpIndex"))
if mibBuilder.loadTexts: vrIpNhrpNhsEpProvEntry.setStatus('mandatory')
vrIpNhrpNhsEpAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ack", 1), ("nak", 2))).clone('nak')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhsEpAction.setStatus('mandatory')
vrIpNhrpNhsEpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("staticLocal", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhsEpProtocol.setStatus('mandatory')
vrIpNhrpNhsEpNetAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2))
vrIpNhrpNhsEpNetAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 1), )
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrRowStatusTable.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsEpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsEpNetAddrIndex"))
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrRowStatusEntry.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrRowStatus.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrComponentName.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrStorageType.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrIndex.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 10), )
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrProvTable.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsEpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhsEpNetAddrIndex"))
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrProvEntry.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrSourceAddress.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrSourceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 10, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrSourceMask.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrDestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 10, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrDestinationAddress.setStatus('mandatory')
vrIpNhrpNhsEpNetAddrDestinationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 2, 2, 2, 10, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhsEpNetAddrDestinationMask.setStatus('mandatory')
vrIpNhrpNhc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3))
vrIpNhrpNhcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 1), )
if mibBuilder.loadTexts: vrIpNhrpNhcRowStatusTable.setStatus('mandatory')
vrIpNhrpNhcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhcIndex"))
if mibBuilder.loadTexts: vrIpNhrpNhcRowStatusEntry.setStatus('mandatory')
vrIpNhrpNhcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRowStatus.setStatus('mandatory')
vrIpNhrpNhcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcComponentName.setStatus('mandatory')
vrIpNhrpNhcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcStorageType.setStatus('mandatory')
vrIpNhrpNhcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrIpNhrpNhcIndex.setStatus('mandatory')
vrIpNhrpNhcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 10), )
if mibBuilder.loadTexts: vrIpNhrpNhcProvTable.setStatus('mandatory')
vrIpNhrpNhcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhcIndex"))
if mibBuilder.loadTexts: vrIpNhrpNhcProvEntry.setStatus('mandatory')
vrIpNhrpNhcFlowDetectPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4292967295)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhcFlowDetectPacketCount.setStatus('mandatory')
vrIpNhrpNhcFlowDetectTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(20, 20), ValueRangeConstraint(30, 30), ValueRangeConstraint(40, 40), ValueRangeConstraint(50, 50), ValueRangeConstraint(60, 60), )).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhcFlowDetectTimePeriod.setStatus('mandatory')
vrIpNhrpNhcIdleDetectPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4292967295)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhcIdleDetectPacketCount.setStatus('mandatory')
vrIpNhrpNhcIdleDetectTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhcIdleDetectTimePeriod.setStatus('mandatory')
vrIpNhrpNhcAtmFlowDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpNhrpNhcAtmFlowDetection.setStatus('mandatory')
vrIpNhrpNhcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11), )
if mibBuilder.loadTexts: vrIpNhrpNhcStatsTable.setStatus('mandatory')
vrIpNhrpNhcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpNhcIndex"))
if mibBuilder.loadTexts: vrIpNhrpNhcStatsEntry.setStatus('mandatory')
vrIpNhrpNhcTxResolveReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcTxResolveReq.setStatus('mandatory')
vrIpNhrpNhcRxResolveReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxResolveReplyAck.setStatus('mandatory')
vrIpNhrpNhcRxResolveReplyNakProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxResolveReplyNakProhibited.setStatus('mandatory')
vrIpNhrpNhcRxResolveReplyNakInsufResources = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxResolveReplyNakInsufResources.setStatus('mandatory')
vrIpNhrpNhcRxResolveReplyNakNoBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxResolveReplyNakNoBinding.setStatus('mandatory')
vrIpNhrpNhcRxResolveReplyNakNotUnique = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxResolveReplyNakNotUnique.setStatus('mandatory')
vrIpNhrpNhcRxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxPurgeReq.setStatus('mandatory')
vrIpNhrpNhcTxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcTxPurgeReq.setStatus('mandatory')
vrIpNhrpNhcRxPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxPurgeReply.setStatus('mandatory')
vrIpNhrpNhcTxPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcTxPurgeReply.setStatus('mandatory')
vrIpNhrpNhcTxErrIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcTxErrIndication.setStatus('mandatory')
vrIpNhrpNhcRxErrUnrecognizedExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxErrUnrecognizedExtension.setStatus('mandatory')
vrIpNhrpNhcRxErrLoopDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxErrLoopDetected.setStatus('mandatory')
vrIpNhrpNhcRxErrProtoAddrUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxErrProtoAddrUnreachable.setStatus('mandatory')
vrIpNhrpNhcRxErrProtoError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxErrProtoError.setStatus('mandatory')
vrIpNhrpNhcRxErrSduSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxErrSduSizeExceeded.setStatus('mandatory')
vrIpNhrpNhcRxErrInvalidExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxErrInvalidExtension.setStatus('mandatory')
vrIpNhrpNhcRxErrAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxErrAuthenticationFailure.setStatus('mandatory')
vrIpNhrpNhcRxErrHopCountExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 3, 11, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpNhcRxErrHopCountExceeded.setStatus('mandatory')
vrIpNhrpRce = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4))
vrIpNhrpRceRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 1), )
if mibBuilder.loadTexts: vrIpNhrpRceRowStatusTable.setStatus('mandatory')
vrIpNhrpRceRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpRceDestAddrIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpRceDestMaskIndex"))
if mibBuilder.loadTexts: vrIpNhrpRceRowStatusEntry.setStatus('mandatory')
vrIpNhrpRceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpRceRowStatus.setStatus('mandatory')
vrIpNhrpRceComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpRceComponentName.setStatus('mandatory')
vrIpNhrpRceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpRceStorageType.setStatus('mandatory')
vrIpNhrpRceDestAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: vrIpNhrpRceDestAddrIndex.setStatus('mandatory')
vrIpNhrpRceDestMaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 1, 1, 11), IpAddress())
if mibBuilder.loadTexts: vrIpNhrpRceDestMaskIndex.setStatus('mandatory')
vrIpNhrpRceOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 10), )
if mibBuilder.loadTexts: vrIpNhrpRceOperTable.setStatus('mandatory')
vrIpNhrpRceOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpRceDestAddrIndex"), (0, "Nortel-Magellan-Passport-IpNhrpMIB", "vrIpNhrpRceDestMaskIndex"))
if mibBuilder.loadTexts: vrIpNhrpRceOperEntry.setStatus('mandatory')
vrIpNhrpRceNbmaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpRceNbmaAddress.setStatus('mandatory')
vrIpNhrpRceEntryState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 11))).clone(namedValues=NamedValues(("incomplete", 1), ("ackReply", 2), ("nakReply", 3), ("noReply", 10), ("localReply", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpRceEntryState.setStatus('mandatory')
vrIpNhrpRceHoldingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpRceHoldingTime.setStatus('mandatory')
vrIpNhrpRceShortcut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 19, 4, 10, 1, 8), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpNhrpRceShortcut.setStatus('mandatory')
ipNhrpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 77, 1))
ipNhrpGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 77, 1, 5))
ipNhrpGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 77, 1, 5, 2))
ipNhrpGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 77, 1, 5, 2, 2))
ipNhrpCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 77, 3))
ipNhrpCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 77, 3, 5))
ipNhrpCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 77, 3, 5, 2))
ipNhrpCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 77, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-IpNhrpMIB", vrIpNhrpRevTransitRecord=vrIpNhrpRevTransitRecord, vrIpNhrpNhsFwdResolveReq=vrIpNhrpNhsFwdResolveReq, vrIpNhrpNhsEp=vrIpNhrpNhsEp, ipNhrpCapabilities=ipNhrpCapabilities, vrIpNhrpNhsTxErrUnrecognizedExtension=vrIpNhrpNhsTxErrUnrecognizedExtension, vrIpNhrpNhcRxErrHopCountExceeded=vrIpNhrpNhcRxErrHopCountExceeded, vrIpNhrpNhsTxResolveReplyNakNoBinding=vrIpNhrpNhsTxResolveReplyNakNoBinding, vrIpNhrpNhcProvTable=vrIpNhrpNhcProvTable, vrIpNhrpNhsTxResolveReplyNakInsufResources=vrIpNhrpNhsTxResolveReplyNakInsufResources, vrIpNhrpRceDestAddrIndex=vrIpNhrpRceDestAddrIndex, vrIpNhrpRceStorageType=vrIpNhrpRceStorageType, vrIpNhrpRceEntryState=vrIpNhrpRceEntryState, vrIpNhrpNhcIndex=vrIpNhrpNhcIndex, vrIpNhrpNhsEpComponentName=vrIpNhrpNhsEpComponentName, vrIpNhrpAdminState=vrIpNhrpAdminState, vrPpIpPortLogicalIfNhrpIfComponentName=vrPpIpPortLogicalIfNhrpIfComponentName, vrIpNhrpRce=vrIpNhrpRce, vrIpNhrpNhsEpStorageType=vrIpNhrpNhsEpStorageType, vrIpNhrpNhcRowStatusEntry=vrIpNhrpNhcRowStatusEntry, vrIpNhrpNhsEpNetAddrSourceMask=vrIpNhrpNhsEpNetAddrSourceMask, ipNhrpGroupBE01=ipNhrpGroupBE01, vrIpNhrpNhcAtmFlowDetection=vrIpNhrpNhcAtmFlowDetection, vrPpIpPortLogicalIfNhrpIfRowStatusTable=vrPpIpPortLogicalIfNhrpIfRowStatusTable, vrIpNhrpNhcRxResolveReplyNakInsufResources=vrIpNhrpNhcRxResolveReplyNakInsufResources, vrIpNhrpProvTable=vrIpNhrpProvTable, vrIpNhrpNhsEpRowStatus=vrIpNhrpNhsEpRowStatus, vrIpNhrpNhcRowStatusTable=vrIpNhrpNhcRowStatusTable, vrIpNhrpOperEntry=vrIpNhrpOperEntry, vrPpIpPortLogicalIfNhrpIfStorageType=vrPpIpPortLogicalIfNhrpIfStorageType, vrIpNhrpNhsStatsEntry=vrIpNhrpNhsStatsEntry, vrIpNhrpNhsRxErrProtoAddrUnreachable=vrIpNhrpNhsRxErrProtoAddrUnreachable, vrIpNhrpNhsIndex=vrIpNhrpNhsIndex, vrIpNhrpNhcFlowDetectTimePeriod=vrIpNhrpNhcFlowDetectTimePeriod, vrIpNhrpNhcIdleDetectTimePeriod=vrIpNhrpNhcIdleDetectTimePeriod, vrIpNhrpNhcStatsTable=vrIpNhrpNhcStatsTable, vrIpNhrpNhsFwdResolveReply=vrIpNhrpNhsFwdResolveReply, vrIpNhrpNhcRowStatus=vrIpNhrpNhcRowStatus, vrIpNhrpNhsEpProtocol=vrIpNhrpNhsEpProtocol, vrIpNhrpNhcRxErrProtoAddrUnreachable=vrIpNhrpNhcRxErrProtoAddrUnreachable, vrIpNhrpNhsRowStatusEntry=vrIpNhrpNhsRowStatusEntry, vrIpNhrpNhsTxErrInvalidExtension=vrIpNhrpNhsTxErrInvalidExtension, vrPpIpPortLogicalIfNhrpIf=vrPpIpPortLogicalIfNhrpIf, vrIpNhrpNhcStorageType=vrIpNhrpNhcStorageType, vrIpNhrpNhcTxPurgeReply=vrIpNhrpNhcTxPurgeReply, vrIpNhrpPeakResCacheEntries=vrIpNhrpPeakResCacheEntries, vrIpNhrpNhsTxErrLoopDetected=vrIpNhrpNhsTxErrLoopDetected, vrIpNhrpNhsFwdPurgeReq=vrIpNhrpNhsFwdPurgeReq, vrIpNhrpRceRowStatus=vrIpNhrpRceRowStatus, ipNhrpGroupBE01A=ipNhrpGroupBE01A, vrIpNhrpNhc=vrIpNhrpNhc, vrIpNhrp=vrIpNhrp, vrIpNhrpRceComponentName=vrIpNhrpRceComponentName, vrIpNhrpNhsRxErrUnrecognizedExtension=vrIpNhrpNhsRxErrUnrecognizedExtension, vrIpNhrpAdminControlTable=vrIpNhrpAdminControlTable, vrIpNhrpNhsRxErrLoopDetected=vrIpNhrpNhsRxErrLoopDetected, vrIpNhrpNhsEpNetAddrProvEntry=vrIpNhrpNhsEpNetAddrProvEntry, vrIpNhrpRowStatusTable=vrIpNhrpRowStatusTable, vrIpNhrpOperTable=vrIpNhrpOperTable, vrIpNhrpNhcRxResolveReplyNakNoBinding=vrIpNhrpNhcRxResolveReplyNakNoBinding, vrIpNhrpNhsEpIndex=vrIpNhrpNhsEpIndex, vrIpNhrpNhsRxRegisterReq=vrIpNhrpNhsRxRegisterReq, vrIpNhrpNhsRowStatus=vrIpNhrpNhsRowStatus, vrIpNhrpNhsRxErrAuthenticationFailure=vrIpNhrpNhsRxErrAuthenticationFailure, vrIpNhrpNhsTxErrProtoError=vrIpNhrpNhsTxErrProtoError, vrIpNhrpRceDestMaskIndex=vrIpNhrpRceDestMaskIndex, vrIpNhrpRceOperEntry=vrIpNhrpRceOperEntry, vrIpNhrpProvEntry=vrIpNhrpProvEntry, vrIpNhrpNhsEpProvEntry=vrIpNhrpNhsEpProvEntry, vrIpNhrpNhcTxErrIndication=vrIpNhrpNhcTxErrIndication, vrIpNhrpNhsTxErrAuthenticationFailure=vrIpNhrpNhsTxErrAuthenticationFailure, vrIpNhrpNhcRxErrUnrecognizedExtension=vrIpNhrpNhcRxErrUnrecognizedExtension, vrIpNhrpNhcStatsEntry=vrIpNhrpNhcStatsEntry, vrIpNhrpNhcRxErrSduSizeExceeded=vrIpNhrpNhcRxErrSduSizeExceeded, ipNhrpCapabilitiesBE01=ipNhrpCapabilitiesBE01, vrIpNhrpNhsComponentName=vrIpNhrpNhsComponentName, vrIpNhrpNhcTxPurgeReq=vrIpNhrpNhcTxPurgeReq, vrIpNhrpNhsTxPurgeReq=vrIpNhrpNhsTxPurgeReq, ipNhrpCapabilitiesBE=ipNhrpCapabilitiesBE, vrIpNhrpRceShortcut=vrIpNhrpRceShortcut, vrIpNhrpNhsFwdRegisterReply=vrIpNhrpNhsFwdRegisterReply, vrIpNhrpRowStatusEntry=vrIpNhrpRowStatusEntry, vrIpNhrpNhsRxResolveReq=vrIpNhrpNhsRxResolveReq, vrIpNhrpNhsRowStatusTable=vrIpNhrpNhsRowStatusTable, vrIpNhrpNhsRxErrSduSizeExceeded=vrIpNhrpNhsRxErrSduSizeExceeded, vrIpNhrpNhsStatsTable=vrIpNhrpNhsStatsTable, vrIpNhrpNhsTxResolveReplyNakNotUnique=vrIpNhrpNhsTxResolveReplyNakNotUnique, vrIpNhrpNhcRxErrAuthenticationFailure=vrIpNhrpNhcRxErrAuthenticationFailure, vrIpNhrpNhsTxPurgeReply=vrIpNhrpNhsTxPurgeReply, vrIpNhrpIndex=vrIpNhrpIndex, vrIpNhrpOperStatusTable=vrIpNhrpOperStatusTable, vrIpNhrpRceNbmaAddress=vrIpNhrpRceNbmaAddress, ipNhrpGroupBE=ipNhrpGroupBE, vrIpNhrpNhcRxResolveReplyAck=vrIpNhrpNhcRxResolveReplyAck, vrIpNhrpNhs=vrIpNhrpNhs, vrIpNhrpNhcRxPurgeReq=vrIpNhrpNhcRxPurgeReq, vrIpNhrpNhsRxPurgeReq=vrIpNhrpNhsRxPurgeReq, vrIpNhrpNhcComponentName=vrIpNhrpNhcComponentName, vrIpNhrpAdminControlEntry=vrIpNhrpAdminControlEntry, vrIpNhrpMaxResCacheEntries=vrIpNhrpMaxResCacheEntries, vrIpNhrpNhsEpNetAddr=vrIpNhrpNhsEpNetAddr, vrIpNhrpNhsStorageType=vrIpNhrpNhsStorageType, vrIpNhrpNhsEpNetAddrSourceAddress=vrIpNhrpNhsEpNetAddrSourceAddress, vrIpNhrpSnmpAdminStatus=vrIpNhrpSnmpAdminStatus, vrIpNhrpNhsFwdPurgeReply=vrIpNhrpNhsFwdPurgeReply, vrIpNhrpNhsEpProvTable=vrIpNhrpNhsEpProvTable, vrIpNhrpNhsEpAction=vrIpNhrpNhsEpAction, vrIpNhrpNhsEpNetAddrDestinationAddress=vrIpNhrpNhsEpNetAddrDestinationAddress, vrIpNhrpRowStatus=vrIpNhrpRowStatus, vrIpNhrpComponentName=vrIpNhrpComponentName, vrIpNhrpNhsRxErrInvalidExtension=vrIpNhrpNhsRxErrInvalidExtension, vrIpNhrpOperStatusEntry=vrIpNhrpOperStatusEntry, vrIpNhrpNhsEpRowStatusEntry=vrIpNhrpNhsEpRowStatusEntry, vrIpNhrpNhsEpNetAddrIndex=vrIpNhrpNhsEpNetAddrIndex, ipNhrpCapabilitiesBE01A=ipNhrpCapabilitiesBE01A, vrIpNhrpOperationalState=vrIpNhrpOperationalState, vrIpNhrpNhsTxErrSduSizeExceeded=vrIpNhrpNhsTxErrSduSizeExceeded, vrIpNhrpUsageState=vrIpNhrpUsageState, vrIpNhrpRceRowStatusTable=vrIpNhrpRceRowStatusTable, vrIpNhrpStateTable=vrIpNhrpStateTable, vrIpNhrpNhcRxPurgeReply=vrIpNhrpNhcRxPurgeReply, vrIpNhrpSnmpOperStatus=vrIpNhrpSnmpOperStatus, vrIpNhrpFwdTransitRecord=vrIpNhrpFwdTransitRecord, vrIpNhrpNhcRxErrProtoError=vrIpNhrpNhcRxErrProtoError, vrIpNhrpRceOperTable=vrIpNhrpRceOperTable, vrIpNhrpNhcIdleDetectPacketCount=vrIpNhrpNhcIdleDetectPacketCount, vrIpNhrpCurrResCacheEntries=vrIpNhrpCurrResCacheEntries, vrIpNhrpNhsEpNetAddrDestinationMask=vrIpNhrpNhsEpNetAddrDestinationMask, vrIpNhrpNhsRxPurgeReply=vrIpNhrpNhsRxPurgeReply, vrIpNhrpStorageType=vrIpNhrpStorageType, vrIpNhrpNhsRxErrInvalidResReplyReceived=vrIpNhrpNhsRxErrInvalidResReplyReceived, vrIpNhrpNhsEpNetAddrComponentName=vrIpNhrpNhsEpNetAddrComponentName, vrIpNhrpNhsEpRowStatusTable=vrIpNhrpNhsEpRowStatusTable, vrIpNhrpNhcTxResolveReq=vrIpNhrpNhcTxResolveReq, ipNhrpGroup=ipNhrpGroup, vrIpNhrpNhsTxErrHopCountExceeded=vrIpNhrpNhsTxErrHopCountExceeded, vrIpNhrpNhcRxResolveReplyNakProhibited=vrIpNhrpNhcRxResolveReplyNakProhibited, vrPpIpPortLogicalIfNhrpIfRowStatus=vrPpIpPortLogicalIfNhrpIfRowStatus, vrPpIpPortLogicalIfNhrpIfRowStatusEntry=vrPpIpPortLogicalIfNhrpIfRowStatusEntry, vrIpNhrpNhcRxErrLoopDetected=vrIpNhrpNhcRxErrLoopDetected, ipNhrpMIB=ipNhrpMIB, vrIpNhrpRceHoldingTime=vrIpNhrpRceHoldingTime, vrIpNhrpNhsFwdErrorIndication=vrIpNhrpNhsFwdErrorIndication, vrIpNhrpNhsEpNetAddrStorageType=vrIpNhrpNhsEpNetAddrStorageType, vrPpIpPortLogicalIfNhrpIfIndex=vrPpIpPortLogicalIfNhrpIfIndex, vrIpNhrpNhsEpNetAddrRowStatus=vrIpNhrpNhsEpNetAddrRowStatus, vrIpNhrpNhsEpNetAddrRowStatusTable=vrIpNhrpNhsEpNetAddrRowStatusTable, vrIpNhrpNhcProvEntry=vrIpNhrpNhcProvEntry, vrIpNhrpNhsTxResolveReplyAck=vrIpNhrpNhsTxResolveReplyAck, vrIpNhrpNhsTxResolveReplyNakProhibited=vrIpNhrpNhsTxResolveReplyNakProhibited, vrIpNhrpNhcRxResolveReplyNakNotUnique=vrIpNhrpNhcRxResolveReplyNakNotUnique, vrIpNhrpNhsEpNetAddrProvTable=vrIpNhrpNhsEpNetAddrProvTable, vrIpNhrpNhsEpNetAddrRowStatusEntry=vrIpNhrpNhsEpNetAddrRowStatusEntry, vrIpNhrpStateEntry=vrIpNhrpStateEntry, vrIpNhrpNhsFwdRegisterReq=vrIpNhrpNhsFwdRegisterReq, vrIpNhrpRceRowStatusEntry=vrIpNhrpRceRowStatusEntry, vrIpNhrpNhcRxErrInvalidExtension=vrIpNhrpNhcRxErrInvalidExtension, vrIpNhrpNhsRxErrHopCountExceeded=vrIpNhrpNhsRxErrHopCountExceeded, vrIpNhrpNhsRxErrProtoError=vrIpNhrpNhsRxErrProtoError, vrIpNhrpNhsTxErrProtoAddrUnreachable=vrIpNhrpNhsTxErrProtoAddrUnreachable, vrIpNhrpNhcFlowDetectPacketCount=vrIpNhrpNhcFlowDetectPacketCount)
