#
# PySNMP MIB module DOCS-DRF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-DRF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:37:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
docsIfDownstreamChannelEntry, = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfDownstreamChannelEntry")
PhysicalIndex, PhysicalIndexOrZero = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex", "PhysicalIndexOrZero")
InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, ModuleIdentity, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, iso, Integer32, TimeTicks, Counter64, MibIdentifier, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "iso", "Integer32", "TimeTicks", "Counter64", "MibIdentifier", "Counter32", "IpAddress")
AutonomousType, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "AutonomousType", "TextualConvention", "TruthValue", "DisplayString")
docsDrfMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23))
docsDrfMib.setRevisions(('2008-12-09 00:00', '2007-12-06 00:00',))
if mibBuilder.loadTexts: docsDrfMib.setLastUpdated('200812090000Z')
if mibBuilder.loadTexts: docsDrfMib.setOrganization('Cable Television Laboratories, Inc')
docsDrfNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 0))
docsDrfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1))
docsDrfRegistry = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 1))
if mibBuilder.loadTexts: docsDrfRegistry.setStatus('current')
docsDrfPhyParamFixValue = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 1, 1))
if mibBuilder.loadTexts: docsDrfPhyParamFixValue.setStatus('current')
docsDrfPhyParamSameValue = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 1, 2))
if mibBuilder.loadTexts: docsDrfPhyParamSameValue.setStatus('current')
docsDrfPhyParamAdjacentValues = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 1, 3))
if mibBuilder.loadTexts: docsDrfPhyParamAdjacentValues.setStatus('current')
docsDrfPhyParamFrequencyRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 1, 4))
if mibBuilder.loadTexts: docsDrfPhyParamFrequencyRange.setStatus('current')
docsDrfDownstreamTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 2), )
if mibBuilder.loadTexts: docsDrfDownstreamTable.setStatus('current')
docsDrfDownstreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 2, 1), )
docsIfDownstreamChannelEntry.registerAugmentions(("DOCS-DRF-MIB", "docsDrfDownstreamEntry"))
docsDrfDownstreamEntry.setIndexNames(*docsIfDownstreamChannelEntry.getIndexNames())
if mibBuilder.loadTexts: docsDrfDownstreamEntry.setStatus('current')
docsDrfDownstreamPhyDependencies = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 2, 1, 1), Bits().clone(namedValues=NamedValues(("frequency", 0), ("bandwidth", 1), ("power", 2), ("modulation", 3), ("interleaver", 4), ("j83Annex", 5), ("symbolRate", 6), ("mute", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamPhyDependencies.setStatus('current')
docsDrfDownstreamCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3), )
if mibBuilder.loadTexts: docsDrfDownstreamCapabilitiesTable.setStatus('current')
docsDrfDownstreamCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsDrfDownstreamCapabilitiesEntry.setStatus('current')
docsDrfDownstreamCapabFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1, 1), Bits().clone(namedValues=NamedValues(("qamDependency", 0), ("adjacentChannel", 1), ("adjacentChannelOrder", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamCapabFrequency.setStatus('current')
docsDrfDownstreamCapabBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1, 2), Bits().clone(namedValues=NamedValues(("qamDependency", 0), ("chan6Mhz", 1), ("chan8Mhz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamCapabBandwidth.setStatus('current')
docsDrfDownstreamCapabPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1, 3), Bits().clone(namedValues=NamedValues(("qamDependency", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamCapabPower.setStatus('current')
docsDrfDownstreamCapabModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1, 4), Bits().clone(namedValues=NamedValues(("qamDependency", 0), ("qam64", 1), ("qam256", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamCapabModulation.setStatus('current')
docsDrfDownstreamCapabInterleaver = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1, 5), Bits().clone(namedValues=NamedValues(("qamDependency", 0), ("taps8Increment16", 1), ("taps16Increment8", 2), ("taps32Increment4", 3), ("taps64Increment2", 4), ("taps128Increment1", 5), ("taps12increment17", 6), ("taps128increment2", 7), ("taps128increment3", 8), ("taps128increment4", 9), ("taps128increment5", 10), ("taps128increment6", 11), ("taps128increment7", 12), ("taps128increment8", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamCapabInterleaver.setStatus('current')
docsDrfDownstreamCapabJ83Annex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1, 6), Bits().clone(namedValues=NamedValues(("qamDependency", 0), ("annexA", 1), ("annexB", 2), ("annexC", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamCapabJ83Annex.setStatus('current')
docsDrfDownstreamCapabConcurrentServices = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1, 7), Bits().clone(namedValues=NamedValues(("qamDependency", 0), ("videoAndDocsis", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamCapabConcurrentServices.setStatus('current')
docsDrfDownstreamCapabServicesTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1, 8), Bits().clone(namedValues=NamedValues(("qamDependency", 0), ("mpeg2OverIP", 1), ("dmpt", 2), ("psp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamCapabServicesTransport.setStatus('current')
docsDrfDownstreamCapabMuting = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 3, 1, 9), Bits().clone(namedValues=NamedValues(("qamDependency", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfDownstreamCapabMuting.setStatus('current')
docsDrfGroupDependencyTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 4), )
if mibBuilder.loadTexts: docsDrfGroupDependencyTable.setStatus('current')
docsDrfGroupDependencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 4, 1), ).setIndexNames((0, "DOCS-DRF-MIB", "docsDrfGroupDependencyPhyParam"), (0, "DOCS-DRF-MIB", "docsDrfGroupDependencyPhysicalIndex"))
if mibBuilder.loadTexts: docsDrfGroupDependencyEntry.setStatus('current')
docsDrfGroupDependencyPhyParam = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("noDependencies", 0), ("all", 1), ("frequency", 2), ("bandwidth", 3), ("power", 4), ("modulation", 5), ("interleave", 6), ("annex", 7), ("symbolRate", 8), ("mute", 9))))
if mibBuilder.loadTexts: docsDrfGroupDependencyPhyParam.setStatus('current')
docsDrfGroupDependencyPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 4, 1, 2), PhysicalIndexOrZero())
if mibBuilder.loadTexts: docsDrfGroupDependencyPhysicalIndex.setStatus('current')
docsDrfGroupDependencyGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfGroupDependencyGroupID.setStatus('current')
docsDrfGroupDependencyType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 4, 1, 4), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfGroupDependencyType.setStatus('current')
docsDrfChannelBlockTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 5), )
if mibBuilder.loadTexts: docsDrfChannelBlockTable.setStatus('current')
docsDrfChannelBlockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 5, 1), ).setIndexNames((0, "DOCS-DRF-MIB", "docsDrfChannelBlockPhysicalIndex"))
if mibBuilder.loadTexts: docsDrfChannelBlockEntry.setStatus('current')
docsDrfChannelBlockPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 5, 1, 1), PhysicalIndex())
if mibBuilder.loadTexts: docsDrfChannelBlockPhysicalIndex.setStatus('current')
docsDrfChannelBlockNumberChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsDrfChannelBlockNumberChannels.setStatus('current')
docsDrfChannelBlockCfgNumberChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDrfChannelBlockCfgNumberChannels.setStatus('current')
docsDrfChannelBlockMute = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 5, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDrfChannelBlockMute.setStatus('current')
docsDrfChannelBlockTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noTest", 1), ("offOthersNormal", 2), ("allOff", 3), ("onOthersOff", 4), ("cwOnOthersOff", 5), ("cwOnOthersNormal", 6), ("clockTest", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDrfChannelBlockTestType.setStatus('current')
docsDrfChannelBlockTestIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 1, 5, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsDrfChannelBlockTestIfIndex.setStatus('current')
docsDrfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 2))
docsDrfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 2, 1))
docsDrfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 2, 2))
docsDrfDeviceCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 2, 1, 1)).setObjects(("DOCS-DRF-MIB", "docsDrfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDrfDeviceCompliance = docsDrfDeviceCompliance.setStatus('current')
docsDrfCmtsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 2, 1, 2)).setObjects(("DOCS-DRF-MIB", "docsDrfGroup"), ("DOCS-DRF-MIB", "docsDrfCmtsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDrfCmtsCompliance = docsDrfCmtsCompliance.setStatus('current')
docsDrfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 2, 2, 1)).setObjects(("DOCS-DRF-MIB", "docsDrfDownstreamCapabFrequency"), ("DOCS-DRF-MIB", "docsDrfDownstreamCapabBandwidth"), ("DOCS-DRF-MIB", "docsDrfDownstreamCapabPower"), ("DOCS-DRF-MIB", "docsDrfDownstreamCapabModulation"), ("DOCS-DRF-MIB", "docsDrfDownstreamCapabInterleaver"), ("DOCS-DRF-MIB", "docsDrfDownstreamCapabJ83Annex"), ("DOCS-DRF-MIB", "docsDrfDownstreamCapabConcurrentServices"), ("DOCS-DRF-MIB", "docsDrfDownstreamCapabServicesTransport"), ("DOCS-DRF-MIB", "docsDrfDownstreamCapabMuting"), ("DOCS-DRF-MIB", "docsDrfGroupDependencyGroupID"), ("DOCS-DRF-MIB", "docsDrfGroupDependencyType"), ("DOCS-DRF-MIB", "docsDrfChannelBlockNumberChannels"), ("DOCS-DRF-MIB", "docsDrfChannelBlockCfgNumberChannels"), ("DOCS-DRF-MIB", "docsDrfChannelBlockMute"), ("DOCS-DRF-MIB", "docsDrfChannelBlockTestType"), ("DOCS-DRF-MIB", "docsDrfChannelBlockTestIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDrfGroup = docsDrfGroup.setStatus('current')
docsDrfCmtsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 23, 2, 2, 2)).setObjects(("DOCS-DRF-MIB", "docsDrfDownstreamPhyDependencies"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsDrfCmtsGroup = docsDrfCmtsGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-DRF-MIB", PYSNMP_MODULE_ID=docsDrfMib, docsDrfCompliances=docsDrfCompliances, docsDrfDownstreamCapabInterleaver=docsDrfDownstreamCapabInterleaver, docsDrfNotifications=docsDrfNotifications, docsDrfGroupDependencyType=docsDrfGroupDependencyType, docsDrfMib=docsDrfMib, docsDrfObjects=docsDrfObjects, docsDrfDownstreamCapabConcurrentServices=docsDrfDownstreamCapabConcurrentServices, docsDrfCmtsGroup=docsDrfCmtsGroup, docsDrfDownstreamCapabilitiesEntry=docsDrfDownstreamCapabilitiesEntry, docsDrfDownstreamCapabilitiesTable=docsDrfDownstreamCapabilitiesTable, docsDrfGroups=docsDrfGroups, docsDrfPhyParamSameValue=docsDrfPhyParamSameValue, docsDrfDownstreamCapabServicesTransport=docsDrfDownstreamCapabServicesTransport, docsDrfGroupDependencyGroupID=docsDrfGroupDependencyGroupID, docsDrfPhyParamAdjacentValues=docsDrfPhyParamAdjacentValues, docsDrfDownstreamCapabModulation=docsDrfDownstreamCapabModulation, docsDrfChannelBlockNumberChannels=docsDrfChannelBlockNumberChannels, docsDrfChannelBlockCfgNumberChannels=docsDrfChannelBlockCfgNumberChannels, docsDrfChannelBlockMute=docsDrfChannelBlockMute, docsDrfConformance=docsDrfConformance, docsDrfDownstreamEntry=docsDrfDownstreamEntry, docsDrfChannelBlockTable=docsDrfChannelBlockTable, docsDrfGroupDependencyTable=docsDrfGroupDependencyTable, docsDrfChannelBlockPhysicalIndex=docsDrfChannelBlockPhysicalIndex, docsDrfDeviceCompliance=docsDrfDeviceCompliance, docsDrfPhyParamFrequencyRange=docsDrfPhyParamFrequencyRange, docsDrfRegistry=docsDrfRegistry, docsDrfPhyParamFixValue=docsDrfPhyParamFixValue, docsDrfDownstreamCapabJ83Annex=docsDrfDownstreamCapabJ83Annex, docsDrfCmtsCompliance=docsDrfCmtsCompliance, docsDrfDownstreamCapabBandwidth=docsDrfDownstreamCapabBandwidth, docsDrfGroupDependencyPhysicalIndex=docsDrfGroupDependencyPhysicalIndex, docsDrfChannelBlockTestIfIndex=docsDrfChannelBlockTestIfIndex, docsDrfGroup=docsDrfGroup, docsDrfDownstreamTable=docsDrfDownstreamTable, docsDrfDownstreamCapabMuting=docsDrfDownstreamCapabMuting, docsDrfChannelBlockEntry=docsDrfChannelBlockEntry, docsDrfGroupDependencyEntry=docsDrfGroupDependencyEntry, docsDrfChannelBlockTestType=docsDrfChannelBlockTestType, docsDrfDownstreamPhyDependencies=docsDrfDownstreamPhyDependencies, docsDrfDownstreamCapabPower=docsDrfDownstreamCapabPower, docsDrfDownstreamCapabFrequency=docsDrfDownstreamCapabFrequency, docsDrfGroupDependencyPhyParam=docsDrfGroupDependencyPhyParam)
