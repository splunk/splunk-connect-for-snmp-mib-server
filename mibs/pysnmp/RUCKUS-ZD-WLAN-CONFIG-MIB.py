#
# PySNMP MIB module RUCKUS-ZD-WLAN-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RUCKUS-ZD-WLAN-CONFIG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:51:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ruckusZDWLANModule, = mibBuilder.importSymbols("RUCKUS-ROOT-MIB", "ruckusZDWLANModule")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, ObjectIdentity, TimeTicks, Integer32, Bits, Gauge32, IpAddress, MibIdentifier, ModuleIdentity, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "TimeTicks", "Integer32", "Bits", "Gauge32", "IpAddress", "MibIdentifier", "ModuleIdentity", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32")
MacAddress, TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
ruckusZDWLANConfigMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2))
if mibBuilder.loadTexts: ruckusZDWLANConfigMIB.setLastUpdated('201010150800Z')
if mibBuilder.loadTexts: ruckusZDWLANConfigMIB.setOrganization('Ruckus Wireless, Inc.')
ruckusZDWLANConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1))
ruckusZDWLANConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1))
ruckusZDWLANConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1), )
if mibBuilder.loadTexts: ruckusZDWLANConfigTable.setStatus('current')
ruckusZDWLANConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1), ).setIndexNames((0, "RUCKUS-ZD-WLAN-CONFIG-MIB", "ruckusZDWLANID"))
if mibBuilder.loadTexts: ruckusZDWLANConfigEntry.setStatus('current')
ruckusZDWLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)))
if mibBuilder.loadTexts: ruckusZDWLANID.setStatus('current')
ruckusZDWLANConfigSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigSSID.setStatus('current')
ruckusZDWLANConfigDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigDescription.setStatus('current')
ruckusZDWLANConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigName.setStatus('current')
ruckusZDWLANConfigWLANServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("standardUsage", 1), ("guestAccess", 2), ("hotSpotService", 3))).clone('standardUsage')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigWLANServiceType.setStatus('current')
ruckusZDWLANConfigAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("open", 1), ("shared", 2), ("eap", 3), ("mac-address", 4), ("eap-mac-mix", 5))).clone('open')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigAuthentication.setStatus('current')
ruckusZDWLANConfigEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("wpa", 1), ("wpa2", 2), ("wpa-Mixed", 3), ("wep-64", 4), ("wep-128", 5), ("none-enc", 6))).clone('none-enc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigEncryption.setStatus('current')
ruckusZDWLANConfigWEPKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigWEPKeyIndex.setStatus('current')
ruckusZDWLANConfigWEPKey = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 16), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(10, 10), ValueSizeConstraint(26, 26), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigWEPKey.setStatus('current')
ruckusZDWLANConfigWPACipherType = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 0))).clone(namedValues=NamedValues(("tkip", 1), ("aes", 2), ("auto", 3), ("none", 0))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigWPACipherType.setStatus('current')
ruckusZDWLANConfigWPAKey = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 21), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(8, 63), ValueSizeConstraint(64, 64), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigWPAKey.setStatus('current')
ruckusZDWLANConfigAuthenticationServerID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigAuthenticationServerID.setStatus('current')
ruckusZDWLANConfigWirelessClientIsolation = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("full", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigWirelessClientIsolation.setStatus('current')
ruckusZDWLANConfigZeroITActivation = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigZeroITActivation.setStatus('current')
ruckusZDWLANConfigWLANHotspotID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigWLANHotspotID.setStatus('current')
ruckusZDWLANConfigWLANServicePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("high", 1), ("low", 2))).clone('high')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigWLANServicePriority.setStatus('current')
ruckusZDWLANConfigAccountingServerID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigAccountingServerID.setStatus('current')
ruckusZDWLANConfigAccountingUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigAccountingUpdateInterval.setStatus('current')
ruckusZDWLANConfigUplinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10)).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigUplinkRate.setStatus('current')
ruckusZDWLANConfigDownlinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 41), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10)).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigDownlinkRate.setStatus('current')
ruckusZDWLANConfigIGMPSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigIGMPSnooping.setStatus('current')
ruckusZDWLANConfigVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigVlanID.setStatus('current')
ruckusZDWLANConfigDynamicVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigDynamicVLAN.setStatus('current')
ruckusZDWLANConfigHideSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 50), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigHideSSID.setStatus('current')
ruckusZDWLANConfigTunnelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 52), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigTunnelMode.setStatus('current')
ruckusZDWLANConfigBackgroundScanning = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 53), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigBackgroundScanning.setStatus('current')
ruckusZDWLANConfigMaxClientsPerAP = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigMaxClientsPerAP.setStatus('current')
ruckusZDWLANConfigWebAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANConfigWebAuthentication.setStatus('current')
ruckusZDWLANConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 1, 1, 63), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ruckusZDWLANConfigRowStatus.setStatus('current')
ruckusZDWLANGroupConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 2), )
if mibBuilder.loadTexts: ruckusZDWLANGroupConfigTable.setStatus('current')
ruckusZDWLANGroupConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 2, 1), ).setIndexNames((0, "RUCKUS-ZD-WLAN-CONFIG-MIB", "ruckusZDWLANGroupID"))
if mibBuilder.loadTexts: ruckusZDWLANGroupConfigEntry.setStatus('current')
ruckusZDWLANGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)))
if mibBuilder.loadTexts: ruckusZDWLANGroupID.setStatus('current')
ruckusZDWLANGroupConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANGroupConfigName.setStatus('current')
ruckusZDWLANGroupConfigDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANGroupConfigDescription.setStatus('current')
ruckusZDWLANGroupVlanOverrideStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruckusZDWLANGroupVlanOverrideStatus.setStatus('current')
ruckusZDWLANGroupConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 2, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ruckusZDWLANGroupConfigRowStatus.setStatus('current')
ruckusZDWLANGroupCfgAttrTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 3), )
if mibBuilder.loadTexts: ruckusZDWLANGroupCfgAttrTable.setStatus('current')
ruckusZDWLANGroupCfgAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 3, 1), ).setIndexNames((0, "RUCKUS-ZD-WLAN-CONFIG-MIB", "ruckusZDWLANGroupID"), (0, "RUCKUS-ZD-WLAN-CONFIG-MIB", "ruckusZDWLANID"))
if mibBuilder.loadTexts: ruckusZDWLANGroupCfgAttrEntry.setStatus('current')
ruckusZDWLANGroupCfgAttrOverrideType = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nochange", 1), ("tag", 2))).clone('nochange')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANGroupCfgAttrOverrideType.setStatus('current')
ruckusZDWLANGroupCfgAttrWGVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDWLANGroupCfgAttrWGVlanTag.setStatus('current')
ruckusZDWLANGroupCfgAttrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ruckusZDWLANGroupCfgAttrRowStatus.setStatus('current')
ruckusZDHotspotConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 8), )
if mibBuilder.loadTexts: ruckusZDHotspotConfigTable.setStatus('current')
ruckusZDHotspotConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 8, 1), ).setIndexNames((0, "RUCKUS-ZD-WLAN-CONFIG-MIB", "ruckusZDHotspotID"))
if mibBuilder.loadTexts: ruckusZDHotspotConfigEntry.setStatus('current')
ruckusZDHotspotID = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: ruckusZDHotspotID.setStatus('current')
ruckusZDHotspotName = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDHotspotName.setStatus('current')
ruckusZDHotspotRedirectLoginPage = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 8, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDHotspotRedirectLoginPage.setStatus('current')
ruckusZDHotspotRedirectStartURL = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDHotspotRedirectStartURL.setStatus('current')
ruckusZDHotspotRedirectType = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("url", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruckusZDHotspotRedirectType.setStatus('current')
ruckusZDHotspotRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25053, 1, 2, 2, 2, 1, 1, 8, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ruckusZDHotspotRowStatus.setStatus('current')
mibBuilder.exportSymbols("RUCKUS-ZD-WLAN-CONFIG-MIB", ruckusZDHotspotRowStatus=ruckusZDHotspotRowStatus, ruckusZDWLANGroupConfigDescription=ruckusZDWLANGroupConfigDescription, ruckusZDWLANConfigDownlinkRate=ruckusZDWLANConfigDownlinkRate, ruckusZDHotspotRedirectType=ruckusZDHotspotRedirectType, ruckusZDWLANConfigAccountingUpdateInterval=ruckusZDWLANConfigAccountingUpdateInterval, ruckusZDWLANGroupCfgAttrTable=ruckusZDWLANGroupCfgAttrTable, ruckusZDWLANConfigBackgroundScanning=ruckusZDWLANConfigBackgroundScanning, ruckusZDWLANConfigObjects=ruckusZDWLANConfigObjects, ruckusZDWLANConfigWPAKey=ruckusZDWLANConfigWPAKey, ruckusZDWLANConfigWEPKey=ruckusZDWLANConfigWEPKey, ruckusZDWLANConfigMIB=ruckusZDWLANConfigMIB, ruckusZDWLANConfigWirelessClientIsolation=ruckusZDWLANConfigWirelessClientIsolation, ruckusZDWLANConfigUplinkRate=ruckusZDWLANConfigUplinkRate, ruckusZDWLANConfigWebAuthentication=ruckusZDWLANConfigWebAuthentication, ruckusZDWLANGroupConfigRowStatus=ruckusZDWLANGroupConfigRowStatus, ruckusZDWLANConfigTunnelMode=ruckusZDWLANConfigTunnelMode, ruckusZDWLANConfigMaxClientsPerAP=ruckusZDWLANConfigMaxClientsPerAP, ruckusZDWLANGroupID=ruckusZDWLANGroupID, ruckusZDWLANID=ruckusZDWLANID, ruckusZDWLANGroupVlanOverrideStatus=ruckusZDWLANGroupVlanOverrideStatus, ruckusZDWLANGroupCfgAttrRowStatus=ruckusZDWLANGroupCfgAttrRowStatus, ruckusZDWLANConfigVlanID=ruckusZDWLANConfigVlanID, ruckusZDWLANConfigDynamicVLAN=ruckusZDWLANConfigDynamicVLAN, ruckusZDWLANConfigSSID=ruckusZDWLANConfigSSID, ruckusZDWLANConfigWLANHotspotID=ruckusZDWLANConfigWLANHotspotID, ruckusZDHotspotName=ruckusZDHotspotName, PYSNMP_MODULE_ID=ruckusZDWLANConfigMIB, ruckusZDWLANGroupConfigTable=ruckusZDWLANGroupConfigTable, ruckusZDWLANConfigWPACipherType=ruckusZDWLANConfigWPACipherType, ruckusZDHotspotID=ruckusZDHotspotID, ruckusZDWLANGroupConfigEntry=ruckusZDWLANGroupConfigEntry, ruckusZDWLANConfigAccountingServerID=ruckusZDWLANConfigAccountingServerID, ruckusZDWLANGroupConfigName=ruckusZDWLANGroupConfigName, ruckusZDWLANConfigIGMPSnooping=ruckusZDWLANConfigIGMPSnooping, ruckusZDWLANConfigHideSSID=ruckusZDWLANConfigHideSSID, ruckusZDWLANConfigEncryption=ruckusZDWLANConfigEncryption, ruckusZDWLANConfig=ruckusZDWLANConfig, ruckusZDWLANConfigAuthenticationServerID=ruckusZDWLANConfigAuthenticationServerID, ruckusZDWLANConfigZeroITActivation=ruckusZDWLANConfigZeroITActivation, ruckusZDWLANGroupCfgAttrOverrideType=ruckusZDWLANGroupCfgAttrOverrideType, ruckusZDWLANGroupCfgAttrEntry=ruckusZDWLANGroupCfgAttrEntry, ruckusZDWLANConfigEntry=ruckusZDWLANConfigEntry, ruckusZDWLANGroupCfgAttrWGVlanTag=ruckusZDWLANGroupCfgAttrWGVlanTag, ruckusZDWLANConfigDescription=ruckusZDWLANConfigDescription, ruckusZDHotspotRedirectLoginPage=ruckusZDHotspotRedirectLoginPage, ruckusZDWLANConfigRowStatus=ruckusZDWLANConfigRowStatus, ruckusZDWLANConfigWLANServicePriority=ruckusZDWLANConfigWLANServicePriority, ruckusZDHotspotConfigEntry=ruckusZDHotspotConfigEntry, ruckusZDHotspotConfigTable=ruckusZDHotspotConfigTable, ruckusZDWLANConfigTable=ruckusZDWLANConfigTable, ruckusZDWLANConfigWLANServiceType=ruckusZDWLANConfigWLANServiceType, ruckusZDHotspotRedirectStartURL=ruckusZDHotspotRedirectStartURL, ruckusZDWLANConfigAuthentication=ruckusZDWLANConfigAuthentication, ruckusZDWLANConfigWEPKeyIndex=ruckusZDWLANConfigWEPKeyIndex, ruckusZDWLANConfigName=ruckusZDWLANConfigName)
