#
# PySNMP MIB module FMS100-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FMS100-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:00:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, TimeTicks, NotificationType, Counter64, iso, Gauge32, MibIdentifier, IpAddress, Bits, Unsigned32, Integer32, enterprises, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "TimeTicks", "NotificationType", "Counter64", "iso", "Gauge32", "MibIdentifier", "IpAddress", "Bits", "Unsigned32", "Integer32", "enterprises", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 1))
hub = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 1, 8))
cards = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 1, 9))
linkBuilderFMS100_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 19)).setLabel("linkBuilderFMS100-mib")
linkBuilderFMS100 = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 1, 8, 20))
linkBuilderFMS100_cards = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 1, 9, 10)).setLabel("linkBuilderFMS100-cards")
linkBuilderFMS100_cards_12utp = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 1, 9, 10, 1)).setLabel("linkBuilderFMS100-cards-12utp")
hubEnviroObject = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 19, 2))
hubEnviroGroupTable = MibTable((1, 3, 6, 1, 4, 1, 43, 19, 2, 1), )
if mibBuilder.loadTexts: hubEnviroGroupTable.setStatus('mandatory')
hubEnviroGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 19, 2, 1, 1), ).setIndexNames((0, "FMS100-MIB", "hubServiceId"), (0, "FMS100-MIB", "hubGroupIndex"))
if mibBuilder.loadTexts: hubEnviroGroupEntry.setStatus('mandatory')
hubServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubServiceId.setStatus('mandatory')
hubGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubGroupIndex.setStatus('mandatory')
hubHighTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubHighTemp.setStatus('mandatory')
hubFanFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubFanFailed.setStatus('mandatory')
pa100RptrSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 19, 3))
pa100RptrInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 19, 3, 1))
pa100GroupInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 19, 3, 2))
pa100PortInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 19, 3, 3))
pa100RptrTable = MibTable((1, 3, 6, 1, 4, 1, 43, 19, 3, 1, 1), )
if mibBuilder.loadTexts: pa100RptrTable.setStatus('mandatory')
pa100RptrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 19, 3, 1, 1, 1), ).setIndexNames((0, "FMS100-MIB", "pa100RptrServiceId"))
if mibBuilder.loadTexts: pa100RptrEntry.setStatus('mandatory')
pa100RptrServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pa100RptrServiceId.setStatus('mandatory')
pa100RptrClass = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("classI", 1), ("classII", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pa100RptrClass.setStatus('mandatory')
pa100RptrStackCardTypeInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 3, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pa100RptrStackCardTypeInfo.setStatus('mandatory')
pa100PortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 19, 3, 3, 1), )
if mibBuilder.loadTexts: pa100PortTable.setStatus('mandatory')
pa100PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 19, 3, 3, 1, 1), ).setIndexNames((0, "FMS100-MIB", "pa100PortServiceId"), (0, "FMS100-MIB", "pa100PortGroupIndex"), (0, "FMS100-MIB", "pa100PortIndex"))
if mibBuilder.loadTexts: pa100PortEntry.setStatus('mandatory')
pa100PortServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pa100PortServiceId.setStatus('mandatory')
pa100PortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pa100PortGroupIndex.setStatus('mandatory')
pa100PortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pa100PortIndex.setStatus('mandatory')
pa100PortIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 3, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pa100PortIsolate.setStatus('mandatory')
pa100PortSymbolErrorDuringPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 19, 3, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pa100PortSymbolErrorDuringPacket.setStatus('mandatory')
mibBuilder.exportSymbols("FMS100-MIB", pa100RptrInfo=pa100RptrInfo, pa100RptrServiceId=pa100RptrServiceId, hubFanFailed=hubFanFailed, pa100RptrStackCardTypeInfo=pa100RptrStackCardTypeInfo, hubEnviroGroupTable=hubEnviroGroupTable, pa100PortServiceId=pa100PortServiceId, pa100PortSymbolErrorDuringPacket=pa100PortSymbolErrorDuringPacket, pa100GroupInfo=pa100GroupInfo, linkBuilderFMS100_cards_12utp=linkBuilderFMS100_cards_12utp, a3Com=a3Com, pa100RptrTable=pa100RptrTable, hubEnviroObject=hubEnviroObject, hub=hub, pa100RptrClass=pa100RptrClass, pa100PortIndex=pa100PortIndex, linkBuilderFMS100_cards=linkBuilderFMS100_cards, pa100PortGroupIndex=pa100PortGroupIndex, pa100PortTable=pa100PortTable, hubServiceId=hubServiceId, cards=cards, hubGroupIndex=hubGroupIndex, products=products, linkBuilderFMS100_mib=linkBuilderFMS100_mib, pa100RptrSpecific=pa100RptrSpecific, pa100PortIsolate=pa100PortIsolate, pa100PortEntry=pa100PortEntry, hubEnviroGroupEntry=hubEnviroGroupEntry, pa100RptrEntry=pa100RptrEntry, hubHighTemp=hubHighTemp, pa100PortInfo=pa100PortInfo, linkBuilderFMS100=linkBuilderFMS100)
