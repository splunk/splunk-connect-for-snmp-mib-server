#
# PySNMP MIB module H3C-VOANALOGIF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-VOANALOGIF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:11:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
h3cVoice, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cVoice")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, ModuleIdentity, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, Counter64, NotificationType, Unsigned32, MibIdentifier, Integer32, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "Counter64", "NotificationType", "Unsigned32", "MibIdentifier", "Integer32", "iso", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
h3cVoiceAnalogInterface = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3))
h3cVoiceAnalogInterface.setRevisions(('2005-03-15 00:00',))
if mibBuilder.loadTexts: h3cVoiceAnalogInterface.setLastUpdated('200503150000Z')
if mibBuilder.loadTexts: h3cVoiceAnalogInterface.setOrganization('Huawei-3COM Technologies Co., Ltd.')
h3cVoAnalogIfCommonObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 1))
h3cVoAnalogIfCommonCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 1, 1), )
if mibBuilder.loadTexts: h3cVoAnalogIfCommonCfgTable.setStatus('current')
h3cVoAnalogIfCommonCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 1, 1, 1), ).setIndexNames((0, "H3C-VOANALOGIF-MIB", "h3cVoAIfCfgPortIndex"))
if mibBuilder.loadTexts: h3cVoAnalogIfCommonCfgEntry.setStatus('current')
h3cVoAIfCfgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoAIfCfgPortIndex.setStatus('current')
h3cVoAIfCfgPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fxs", 1), ("fxo", 2), ("em", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfCfgPortType.setStatus('current')
h3cVoAIfCfgPortSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 1, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfCfgPortSubLine.setStatus('current')
h3cVoAnalogIfFXSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2))
h3cVoAnalogIfFXSCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 1), )
if mibBuilder.loadTexts: h3cVoAnalogIfFXSCfgTable.setStatus('current')
h3cVoAnalogIfFXSCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 1, 1), ).setIndexNames((0, "H3C-VOANALOGIF-MIB", "h3cVoAIfFXSCfgPortIndex"))
if mibBuilder.loadTexts: h3cVoAnalogIfFXSCfgEntry.setStatus('current')
h3cVoAIfFXSCfgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoAIfFXSCfgPortIndex.setStatus('current')
h3cVoAIfFXSCfgCidDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXSCfgCidDisplay.setStatus('current')
h3cVoAIfFXSCfgCidSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXSCfgCidSend.setStatus('current')
h3cVoAIfFXSCfgCidType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("complex", 1), ("simple", 2))).clone('complex')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXSCfgCidType.setStatus('current')
h3cVoAIfFXSCfgSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfFXSCfgSubLine.setStatus('current')
h3cVoAnalogIfFXSTimerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 3), )
if mibBuilder.loadTexts: h3cVoAnalogIfFXSTimerTable.setStatus('current')
h3cVoAnalogIfFXSTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 3, 1), ).setIndexNames((0, "H3C-VOANALOGIF-MIB", "h3cVoAIfFXSTimerPortIndex"))
if mibBuilder.loadTexts: h3cVoAnalogIfFXSTimerEntry.setStatus('current')
h3cVoAIfFXSTimerPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoAIfFXSTimerPortIndex.setStatus('current')
h3cVoAIfFXSTimerDialInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXSTimerDialInterval.setStatus('current')
h3cVoAIfFXSTimerFirstDial = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXSTimerFirstDial.setStatus('current')
h3cVoAIfFXSTimerRingBack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXSTimerRingBack.setStatus('current')
h3cVoAIfFXSTimerSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 2, 3, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfFXSTimerSubLine.setStatus('current')
h3cVoAnalogIfFXOObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3))
h3cVoAnalogIfFXOCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1), )
if mibBuilder.loadTexts: h3cVoAnalogIfFXOCfgTable.setStatus('current')
h3cVoAnalogIfFXOCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1, 1), ).setIndexNames((0, "H3C-VOANALOGIF-MIB", "h3cVoAIfFXOCfgPortIndex"))
if mibBuilder.loadTexts: h3cVoAnalogIfFXOCfgEntry.setStatus('current')
h3cVoAIfFXOCfgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoAIfFXOCfgPortIndex.setStatus('current')
h3cVoAIfFXOCfgArea = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("custom", 1), ("europe", 2), ("northmerica", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOCfgArea.setStatus('current')
h3cVoAIfFXOPreDialDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOPreDialDelay.setStatus('current')
h3cVoAIfFXOCfgPortImpedance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38))).clone(namedValues=NamedValues(("australia", 1), ("austria", 2), ("belgiumLong", 3), ("belgiumShort", 4), ("brazil", 5), ("germanSwiss", 6), ("china", 7), ("greece", 8), ("czechRepublic", 9), ("denmark", 10), ("eTSIHarmanized", 11), ("finland", 12), ("france", 13), ("hungary", 14), ("india", 15), ("italy", 16), ("japan", 17), ("korea", 18), ("mexico", 19), ("netherlands", 20), ("norway", 21), ("portugal", 22), ("slovakia", 23), ("spain", 24), ("sweden", 25), ("uk", 26), ("usLoadedLine", 27), ("usNonLoaded", 28), ("usSpecialService", 29), ("r550", 30), ("r600", 31), ("r650", 32), ("r700", 33), ("r750", 34), ("r800", 35), ("r850", 36), ("r900", 37), ("r950", 38)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOCfgPortImpedance.setStatus('current')
h3cVoAIfFXOCfgCidEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOCfgCidEnable.setStatus('current')
h3cVoAnalogIfFXOCfgCidSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAnalogIfFXOCfgCidSend.setStatus('current')
h3cVoAIfFXOCfgCidType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("complex", 1), ("simple", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOCfgCidType.setStatus('current')
h3cVoAIfFXOCfgSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfFXOCfgSubLine.setStatus('current')
h3cVoAnalogIfFXOTimerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 3), )
if mibBuilder.loadTexts: h3cVoAnalogIfFXOTimerTable.setStatus('current')
h3cVoAnalogIfFXOTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 3, 1), ).setIndexNames((0, "H3C-VOANALOGIF-MIB", "h3cVoAIfFXOTimerPortIndex"))
if mibBuilder.loadTexts: h3cVoAnalogIfFXOTimerEntry.setStatus('current')
h3cVoAIfFXOTimerPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoAIfFXOTimerPortIndex.setStatus('current')
h3cVoAIfFXOTimerDtmf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOTimerDtmf.setStatus('current')
h3cVoAIfFXOTimerDtmfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOTimerDtmfInterval.setStatus('current')
h3cVoAIfFXOTimerDialInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOTimerDialInterval.setStatus('current')
h3cVoAIfFXOTimerFirstDial = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOTimerFirstDial.setStatus('current')
h3cVoAIfFXOTimerRingBack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfFXOTimerRingBack.setStatus('current')
h3cVoAIfFXOTimerSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 3, 3, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfFXOTimerSubLine.setStatus('current')
h3cVoAnalogIfEMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4))
h3cVoAnalogIfEMCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 1), )
if mibBuilder.loadTexts: h3cVoAnalogIfEMCfgTable.setStatus('current')
h3cVoAnalogIfEMCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 1, 1), ).setIndexNames((0, "H3C-VOANALOGIF-MIB", "h3cVoAIfEMCfgPortIndex"))
if mibBuilder.loadTexts: h3cVoAnalogIfEMCfgEntry.setStatus('current')
h3cVoAIfEMCfgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfEMCfgPortIndex.setStatus('current')
h3cVoAIfEMCfgSignalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("delayDial", 1), ("immediateDial", 2), ("winkStart", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMCfgSignalMode.setStatus('current')
h3cVoAIfEMCfgPhyParm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("twoWiresOperation", 1), ("fourWiresOperation", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMCfgPhyParm.setStatus('current')
h3cVoAIfEMCfgPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("type3", 3), ("type5", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMCfgPhyType.setStatus('current')
h3cVoAIfEMCfgTimeoutRing = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMCfgTimeoutRing.setStatus('current')
h3cVoAIfEMCfgTimeoutWaitDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMCfgTimeoutWaitDigit.setStatus('current')
h3cVoAIfEMCfgSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfEMCfgSubLine.setStatus('current')
h3cVoAnalogIfEMTimerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3), )
if mibBuilder.loadTexts: h3cVoAnalogIfEMTimerTable.setStatus('current')
h3cVoAnalogIfEMTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1), ).setIndexNames((0, "H3C-VOANALOGIF-MIB", "h3cVoAIfEMTimerPortIndex"))
if mibBuilder.loadTexts: h3cVoAnalogIfEMTimerEntry.setStatus('current')
h3cVoAIfEMTimerPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfEMTimerPortIndex.setStatus('current')
h3cVoAIfEMTimerDtmf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMTimerDtmf.setStatus('current')
h3cVoAIfEMTimerDtmfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMTimerDtmfInterval.setStatus('current')
h3cVoAIfEMTimerSendWink = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMTimerSendWink.setStatus('current')
h3cVoAIfEMTimerWinkRising = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMTimerWinkRising.setStatus('current')
h3cVoAIfEMTimerWinkHold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMTimerWinkHold.setStatus('current')
h3cVoAIfEMTimerDialoutDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMTimerDialoutDelay.setStatus('current')
h3cVoAIfEMTimerDelayRising = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMTimerDelayRising.setStatus('current')
h3cVoAIfEMTimerDelayHold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoAIfEMTimerDelayHold.setStatus('current')
h3cVoAIfEMTimerSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 39, 3, 4, 3, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoAIfEMTimerSubLine.setStatus('current')
mibBuilder.exportSymbols("H3C-VOANALOGIF-MIB", h3cVoAIfFXSTimerSubLine=h3cVoAIfFXSTimerSubLine, h3cVoAIfEMTimerDtmf=h3cVoAIfEMTimerDtmf, h3cVoAIfEMTimerDelayRising=h3cVoAIfEMTimerDelayRising, h3cVoAIfFXSCfgPortIndex=h3cVoAIfFXSCfgPortIndex, h3cVoAIfFXSTimerPortIndex=h3cVoAIfFXSTimerPortIndex, h3cVoAIfEMTimerDtmfInterval=h3cVoAIfEMTimerDtmfInterval, h3cVoiceAnalogInterface=h3cVoiceAnalogInterface, h3cVoAnalogIfFXOCfgEntry=h3cVoAnalogIfFXOCfgEntry, h3cVoAIfFXOTimerDialInterval=h3cVoAIfFXOTimerDialInterval, PYSNMP_MODULE_ID=h3cVoiceAnalogInterface, h3cVoAIfFXOCfgCidType=h3cVoAIfFXOCfgCidType, h3cVoAIfFXSTimerFirstDial=h3cVoAIfFXSTimerFirstDial, h3cVoAIfFXOTimerSubLine=h3cVoAIfFXOTimerSubLine, h3cVoAIfFXOTimerDtmf=h3cVoAIfFXOTimerDtmf, h3cVoAIfFXOCfgSubLine=h3cVoAIfFXOCfgSubLine, h3cVoAIfFXOCfgPortImpedance=h3cVoAIfFXOCfgPortImpedance, h3cVoAIfEMTimerDialoutDelay=h3cVoAIfEMTimerDialoutDelay, h3cVoAIfEMCfgTimeoutWaitDigit=h3cVoAIfEMCfgTimeoutWaitDigit, h3cVoAnalogIfFXOCfgCidSend=h3cVoAnalogIfFXOCfgCidSend, h3cVoAIfFXSCfgCidType=h3cVoAIfFXSCfgCidType, h3cVoAnalogIfFXOObjects=h3cVoAnalogIfFXOObjects, h3cVoAIfEMTimerPortIndex=h3cVoAIfEMTimerPortIndex, h3cVoAIfEMTimerWinkRising=h3cVoAIfEMTimerWinkRising, h3cVoAnalogIfFXSTimerTable=h3cVoAnalogIfFXSTimerTable, h3cVoAnalogIfFXSTimerEntry=h3cVoAnalogIfFXSTimerEntry, h3cVoAIfFXOCfgPortIndex=h3cVoAIfFXOCfgPortIndex, h3cVoAIfEMCfgSignalMode=h3cVoAIfEMCfgSignalMode, h3cVoAnalogIfFXSCfgTable=h3cVoAnalogIfFXSCfgTable, h3cVoAnalogIfEMCfgTable=h3cVoAnalogIfEMCfgTable, h3cVoAIfCfgPortType=h3cVoAIfCfgPortType, h3cVoAnalogIfFXOTimerTable=h3cVoAnalogIfFXOTimerTable, h3cVoAIfFXOTimerPortIndex=h3cVoAIfFXOTimerPortIndex, h3cVoAIfFXOTimerFirstDial=h3cVoAIfFXOTimerFirstDial, h3cVoAIfFXOTimerRingBack=h3cVoAIfFXOTimerRingBack, h3cVoAIfEMCfgSubLine=h3cVoAIfEMCfgSubLine, h3cVoAIfFXSCfgSubLine=h3cVoAIfFXSCfgSubLine, h3cVoAIfFXOTimerDtmfInterval=h3cVoAIfFXOTimerDtmfInterval, h3cVoAIfFXOCfgCidEnable=h3cVoAIfFXOCfgCidEnable, h3cVoAnalogIfEMTimerTable=h3cVoAnalogIfEMTimerTable, h3cVoAIfEMCfgPhyType=h3cVoAIfEMCfgPhyType, h3cVoAIfEMTimerSendWink=h3cVoAIfEMTimerSendWink, h3cVoAIfCfgPortIndex=h3cVoAIfCfgPortIndex, h3cVoAnalogIfEMObjects=h3cVoAnalogIfEMObjects, h3cVoAIfEMCfgPhyParm=h3cVoAIfEMCfgPhyParm, h3cVoAnalogIfCommonObjects=h3cVoAnalogIfCommonObjects, h3cVoAIfFXOPreDialDelay=h3cVoAIfFXOPreDialDelay, h3cVoAIfEMTimerDelayHold=h3cVoAIfEMTimerDelayHold, h3cVoAnalogIfCommonCfgTable=h3cVoAnalogIfCommonCfgTable, h3cVoAIfFXSTimerRingBack=h3cVoAIfFXSTimerRingBack, h3cVoAIfCfgPortSubLine=h3cVoAIfCfgPortSubLine, h3cVoAIfEMCfgTimeoutRing=h3cVoAIfEMCfgTimeoutRing, h3cVoAnalogIfFXOTimerEntry=h3cVoAnalogIfFXOTimerEntry, h3cVoAIfFXSCfgCidSend=h3cVoAIfFXSCfgCidSend, h3cVoAIfEMTimerSubLine=h3cVoAIfEMTimerSubLine, h3cVoAnalogIfFXSObjects=h3cVoAnalogIfFXSObjects, h3cVoAnalogIfCommonCfgEntry=h3cVoAnalogIfCommonCfgEntry, h3cVoAnalogIfEMTimerEntry=h3cVoAnalogIfEMTimerEntry, h3cVoAIfEMTimerWinkHold=h3cVoAIfEMTimerWinkHold, h3cVoAIfFXSCfgCidDisplay=h3cVoAIfFXSCfgCidDisplay, h3cVoAIfFXOCfgArea=h3cVoAIfFXOCfgArea, h3cVoAnalogIfFXSCfgEntry=h3cVoAnalogIfFXSCfgEntry, h3cVoAIfFXSTimerDialInterval=h3cVoAIfFXSTimerDialInterval, h3cVoAnalogIfFXOCfgTable=h3cVoAnalogIfFXOCfgTable, h3cVoAnalogIfEMCfgEntry=h3cVoAnalogIfEMCfgEntry, h3cVoAIfEMCfgPortIndex=h3cVoAIfEMCfgPortIndex)
