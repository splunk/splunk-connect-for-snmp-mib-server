#
# PySNMP MIB module HUAWEI-RRPP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-RRPP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:36:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, ifName = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifName")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, iso, MibIdentifier, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, Gauge32, Bits, ObjectIdentity, Counter64, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "MibIdentifier", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "Gauge32", "Bits", "ObjectIdentity", "Counter64", "Counter32", "IpAddress")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hwRrpp = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113))
hwRrpp.setRevisions(('2015-03-23 00:00', '2013-09-07 00:00', '2013-06-17 00:10',))
if mibBuilder.loadTexts: hwRrpp.setLastUpdated('201503230000Z')
if mibBuilder.loadTexts: hwRrpp.setOrganization('Huawei Technologies Co.,Ltd.')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

hwRrppScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 1))
hwRrppEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRrppEnableStatus.setStatus('current')
hwRrppLinkupDelayTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRrppLinkupDelayTime.setStatus('current')
hwRrppTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2))
hwRrppDomainTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1), )
if mibBuilder.loadTexts: hwRrppDomainTable.setStatus('current')
hwRrppDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1), ).setIndexNames((0, "HUAWEI-RRPP-MIB", "hwRrppDomainID"))
if mibBuilder.loadTexts: hwRrppDomainEntry.setStatus('current')
hwRrppDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwRrppDomainID.setStatus('current')
hwRrppDomainControlVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 4093), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppDomainControlVlanID.setStatus('current')
hwRrppDomainHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppDomainHelloTime.setStatus('current')
hwRrppDomainFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppDomainFailTime.setStatus('current')
hwRrppDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppDomainRowStatus.setStatus('current')
hwRrppDomainResetStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("unused", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppDomainResetStatistics.setStatus('current')
hwRrppMulSubRingProtection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1, 7), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppMulSubRingProtection.setStatus('current')
hwRrppDomainProtectedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppDomainProtectedVlan.setStatus('current')
hwRrppDomainDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppDomainDescription.setStatus('current')
hwRrppRingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2), )
if mibBuilder.loadTexts: hwRrppRingTable.setStatus('current')
hwRrppRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1), ).setIndexNames((0, "HUAWEI-RRPP-MIB", "hwRrppDomainID"), (0, "HUAWEI-RRPP-MIB", "hwRrppRingID"))
if mibBuilder.loadTexts: hwRrppRingEntry.setStatus('current')
hwRrppRingID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwRrppRingID.setStatus('current')
hwRrppRingEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 2), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppRingEnableStatus.setStatus('current')
hwRrppRingActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppRingActive.setStatus('current')
hwRrppRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("unknown", 1), ("health", 2), ("fault", 3), ("complete", 4), ("failed", 5), ("linkup", 6), ("linkdown", 7), ("preforwarding", 8), ("linkupnotify", 9), ("linkdownnotify", 10), ("preforwardnotify", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppRingState.setStatus('current')
hwRrppRingNodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("master", 1), ("transit", 2), ("edge", 3), ("assistantEdge", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppRingNodeMode.setStatus('current')
hwRrppRingPrimaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 6), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppRingPrimaryPort.setStatus('current')
hwRrppRingSecondaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 7), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppRingSecondaryPort.setStatus('current')
hwRrppRingLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("majorRing", 0), ("subRing", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppRingLevel.setStatus('current')
hwRrppRingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppRingRowStatus.setStatus('current')
hwRrppRingResetStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("unused", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppRingResetStatistics.setStatus('current')
hwRrppPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3), )
if mibBuilder.loadTexts: hwRrppPortTable.setStatus('current')
hwRrppPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1), ).setIndexNames((0, "HUAWEI-RRPP-MIB", "hwRrppDomainID"), (0, "HUAWEI-RRPP-MIB", "hwRrppRingID"), (0, "HUAWEI-RRPP-MIB", "hwRrppPortID"))
if mibBuilder.loadTexts: hwRrppPortEntry.setStatus('current')
hwRrppPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwRrppPortID.setStatus('current')
hwRrppPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("fe", 1), ("ge", 2), ("ve", 3), ("ethtrunk", 4), ("xge", 5), ("x40ge", 6), ("x100ge", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortType.setStatus('current')
hwRrppPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("common", 3), ("edge", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortRole.setStatus('current')
hwRrppPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("unblocked", 2), ("blocked", 3), ("down", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortState.setStatus('current')
hwRrppPortRXError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortRXError.setStatus('current')
hwRrppPortRXHello = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortRXHello.setStatus('current')
hwRrppPortRXLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortRXLinkUp.setStatus('current')
hwRrppPortRXLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortRXLinkDown.setStatus('current')
hwRrppPortRXCommonFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortRXCommonFlush.setStatus('current')
hwRrppPortRXCompleteFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortRXCompleteFlush.setStatus('current')
hwRrppPortRXEdgeHello = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortRXEdgeHello.setStatus('current')
hwRrppPortRXMajorFault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortRXMajorFault.setStatus('current')
hwRrppPortTXError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortTXError.setStatus('current')
hwRrppPortTXHello = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortTXHello.setStatus('current')
hwRrppPortTXLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortTXLinkUp.setStatus('current')
hwRrppPortTXLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortTXLinkDown.setStatus('current')
hwRrppPortTXCommonFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortTXCommonFlush.setStatus('current')
hwRrppPortTXCompleteFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortTXCompleteFlush.setStatus('current')
hwRrppPortTXEdgeHello = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortTXEdgeHello.setStatus('current')
hwRrppPortTXMajorFault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppPortTXMajorFault.setStatus('current')
hwRrppTrackInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 4), )
if mibBuilder.loadTexts: hwRrppTrackInterfaceTable.setStatus('current')
hwRrppTrackInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 4, 1), ).setIndexNames((0, "HUAWEI-RRPP-MIB", "hwRrppDomainID"), (0, "HUAWEI-RRPP-MIB", "hwRrppRingID"), (0, "HUAWEI-RRPP-MIB", "hwRrppTrackInterfaceID"))
if mibBuilder.loadTexts: hwRrppTrackInterfaceEntry.setStatus('current')
hwRrppTrackInterfaceID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwRrppTrackInterfaceID.setStatus('current')
hwRrppTrackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppTrackRowStatus.setStatus('current')
hwRrppRingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 5), )
if mibBuilder.loadTexts: hwRrppRingGroupTable.setStatus('current')
hwRrppRingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 5, 1), ).setIndexNames((0, "HUAWEI-RRPP-MIB", "hwRrppRingGroupID"))
if mibBuilder.loadTexts: hwRrppRingGroupEntry.setStatus('current')
hwRrppRingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hwRrppRingGroupID.setStatus('current')
hwRrppRingGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppRingGroupRowStatus.setStatus('current')
hwRrppRingGroupMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 6), )
if mibBuilder.loadTexts: hwRrppRingGroupMemberTable.setStatus('current')
hwRrppRingGroupMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 6, 1), ).setIndexNames((0, "HUAWEI-RRPP-MIB", "hwRrppRingGroupID"), (0, "HUAWEI-RRPP-MIB", "hwRrppRingGroupMemberDomainID"), (0, "HUAWEI-RRPP-MIB", "hwRrppRingGroupMemberRingID"))
if mibBuilder.loadTexts: hwRrppRingGroupMemberEntry.setStatus('current')
hwRrppRingGroupMemberDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: hwRrppRingGroupMemberDomainID.setStatus('current')
hwRrppRingGroupMemberRingID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 6, 1, 2), Integer32())
if mibBuilder.loadTexts: hwRrppRingGroupMemberRingID.setStatus('current')
hwRrppRingGroupIsEdgeHelloProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 6, 1, 3), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppRingGroupIsEdgeHelloProcess.setStatus('current')
hwRrppRingGroupMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 2, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppRingGroupMemberRowStatus.setStatus('current')
hwRrppSnoopingTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3))
hwRrppSnoopingInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 1), )
if mibBuilder.loadTexts: hwRrppSnoopingInterfaceTable.setStatus('current')
hwRrppSnoopingInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 1, 1), ).setIndexNames((0, "HUAWEI-RRPP-MIB", "hwRrppSnoopingInterfaceId"))
if mibBuilder.loadTexts: hwRrppSnoopingInterfaceEntry.setStatus('current')
hwRrppSnoopingInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwRrppSnoopingInterfaceId.setStatus('current')
hwRrppSnoopingVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppSnoopingVsiName.setStatus('current')
hwRrppSnoopingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 1, 1, 3), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRrppSnoopingVlanId.setStatus('current')
hwRrppSnoopingEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 1, 1, 4), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppSnoopingEnableStatus.setStatus('current')
hwRrppSnoopingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppSnoopingRowStatus.setStatus('current')
hwRrppSnoopingAllVsiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 1, 1, 6), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppSnoopingAllVsiStatus.setStatus('current')
hwRrppSnoopingVsiTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 2), )
if mibBuilder.loadTexts: hwRrppSnoopingVsiTable.setStatus('current')
hwRrppSnoopingVsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 2, 1), ).setIndexNames((0, "HUAWEI-RRPP-MIB", "hwRrppSnoopingVsiInterfaceId"), (0, "HUAWEI-RRPP-MIB", "hwVsiName"))
if mibBuilder.loadTexts: hwRrppSnoopingVsiEntry.setStatus('current')
hwRrppSnoopingVsiInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwRrppSnoopingVsiInterfaceId.setStatus('current')
hwVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwVsiName.setStatus('current')
hwRrppSnoopingVsiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 3, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRrppSnoopingVsiRowStatus.setStatus('current')
hwRrppNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 4))
hwRrppRingRecover = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 4, 1)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppRingState"))
if mibBuilder.loadTexts: hwRrppRingRecover.setStatus('current')
hwRrppRingFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 4, 2)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppRingState"))
if mibBuilder.loadTexts: hwRrppRingFail.setStatus('current')
hwRrppMultiMaster = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 4, 3)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppRingNodeMode"))
if mibBuilder.loadTexts: hwRrppMultiMaster.setStatus('current')
hwRrppTrackInterfaceDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 4, 4)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppTrackRowStatus"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRrppTrackInterfaceDown.setStatus('current')
hwRrppTrackInterfaceUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 4, 5)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppTrackRowStatus"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRrppTrackInterfaceUp.setStatus('current')
hwRrppRingSingleDirectionFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 4, 6)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppRingState"))
if mibBuilder.loadTexts: hwRrppRingSingleDirectionFail.setStatus('current')
hwRrppMibGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5))
hwRrppGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 1)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppEnableStatus"), ("HUAWEI-RRPP-MIB", "hwRrppLinkupDelayTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppGlobalGroup = hwRrppGlobalGroup.setStatus('current')
hwRrppDomainGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 2)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppDomainControlVlanID"), ("HUAWEI-RRPP-MIB", "hwRrppDomainHelloTime"), ("HUAWEI-RRPP-MIB", "hwRrppDomainFailTime"), ("HUAWEI-RRPP-MIB", "hwRrppDomainRowStatus"), ("HUAWEI-RRPP-MIB", "hwRrppDomainResetStatistics"), ("HUAWEI-RRPP-MIB", "hwRrppMulSubRingProtection"), ("HUAWEI-RRPP-MIB", "hwRrppDomainProtectedVlan"), ("HUAWEI-RRPP-MIB", "hwRrppDomainDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppDomainGroup = hwRrppDomainGroup.setStatus('current')
hwRrppRingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 3)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppRingEnableStatus"), ("HUAWEI-RRPP-MIB", "hwRrppRingActive"), ("HUAWEI-RRPP-MIB", "hwRrppRingState"), ("HUAWEI-RRPP-MIB", "hwRrppRingNodeMode"), ("HUAWEI-RRPP-MIB", "hwRrppRingPrimaryPort"), ("HUAWEI-RRPP-MIB", "hwRrppRingSecondaryPort"), ("HUAWEI-RRPP-MIB", "hwRrppRingLevel"), ("HUAWEI-RRPP-MIB", "hwRrppRingRowStatus"), ("HUAWEI-RRPP-MIB", "hwRrppRingResetStatistics"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppRingGroup = hwRrppRingGroup.setStatus('current')
hwRrppPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 4)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppPortType"), ("HUAWEI-RRPP-MIB", "hwRrppPortRole"), ("HUAWEI-RRPP-MIB", "hwRrppPortState"), ("HUAWEI-RRPP-MIB", "hwRrppPortRXError"), ("HUAWEI-RRPP-MIB", "hwRrppPortRXHello"), ("HUAWEI-RRPP-MIB", "hwRrppPortRXLinkUp"), ("HUAWEI-RRPP-MIB", "hwRrppPortRXLinkDown"), ("HUAWEI-RRPP-MIB", "hwRrppPortRXCommonFlush"), ("HUAWEI-RRPP-MIB", "hwRrppPortRXCompleteFlush"), ("HUAWEI-RRPP-MIB", "hwRrppPortRXEdgeHello"), ("HUAWEI-RRPP-MIB", "hwRrppPortRXMajorFault"), ("HUAWEI-RRPP-MIB", "hwRrppPortTXError"), ("HUAWEI-RRPP-MIB", "hwRrppPortTXHello"), ("HUAWEI-RRPP-MIB", "hwRrppPortTXLinkUp"), ("HUAWEI-RRPP-MIB", "hwRrppPortTXLinkDown"), ("HUAWEI-RRPP-MIB", "hwRrppPortTXCommonFlush"), ("HUAWEI-RRPP-MIB", "hwRrppPortTXCompleteFlush"), ("HUAWEI-RRPP-MIB", "hwRrppPortTXEdgeHello"), ("HUAWEI-RRPP-MIB", "hwRrppPortTXMajorFault"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppPortGroup = hwRrppPortGroup.setStatus('current')
hwRrppTrackInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 5)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppTrackRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppTrackInterfaceGroup = hwRrppTrackInterfaceGroup.setStatus('current')
hwRrppRingGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 6)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppRingGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppRingGroupGroup = hwRrppRingGroupGroup.setStatus('current')
hwRrppRingGroupMemberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 7)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppRingGroupIsEdgeHelloProcess"), ("HUAWEI-RRPP-MIB", "hwRrppRingGroupMemberRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppRingGroupMemberGroup = hwRrppRingGroupMemberGroup.setStatus('current')
hwRrppSnoopingInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 8)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppSnoopingVsiName"), ("HUAWEI-RRPP-MIB", "hwRrppSnoopingVlanId"), ("HUAWEI-RRPP-MIB", "hwRrppSnoopingEnableStatus"), ("HUAWEI-RRPP-MIB", "hwRrppSnoopingRowStatus"), ("HUAWEI-RRPP-MIB", "hwRrppSnoopingAllVsiStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppSnoopingInterfaceGroup = hwRrppSnoopingInterfaceGroup.setStatus('current')
hwRrppSnoopingVsiGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 9)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppSnoopingVsiRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppSnoopingVsiGroup = hwRrppSnoopingVsiGroup.setStatus('current')
hwRrppNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 5, 10)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppRingRecover"), ("HUAWEI-RRPP-MIB", "hwRrppRingFail"), ("HUAWEI-RRPP-MIB", "hwRrppMultiMaster"), ("HUAWEI-RRPP-MIB", "hwRrppTrackInterfaceDown"), ("HUAWEI-RRPP-MIB", "hwRrppTrackInterfaceUp"), ("HUAWEI-RRPP-MIB", "hwRrppRingSingleDirectionFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppNotificationGroup = hwRrppNotificationGroup.setStatus('current')
hwRrppConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 6))
hwRrppCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 6, 1))
hwRrppCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 113, 6, 1, 1)).setObjects(("HUAWEI-RRPP-MIB", "hwRrppGlobalGroup"), ("HUAWEI-RRPP-MIB", "hwRrppDomainGroup"), ("HUAWEI-RRPP-MIB", "hwRrppRingGroup"), ("HUAWEI-RRPP-MIB", "hwRrppPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRrppCompliance = hwRrppCompliance.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-RRPP-MIB", hwRrppRingGroupMemberRingID=hwRrppRingGroupMemberRingID, hwRrppRingRecover=hwRrppRingRecover, hwRrppPortTXLinkUp=hwRrppPortTXLinkUp, hwRrppPortEntry=hwRrppPortEntry, hwRrppRingSecondaryPort=hwRrppRingSecondaryPort, hwRrppMibGroup=hwRrppMibGroup, hwRrppCompliance=hwRrppCompliance, hwRrppRingResetStatistics=hwRrppRingResetStatistics, hwRrppTrackInterfaceGroup=hwRrppTrackInterfaceGroup, hwRrppRingGroupIsEdgeHelloProcess=hwRrppRingGroupIsEdgeHelloProcess, PYSNMP_MODULE_ID=hwRrpp, hwRrppRingState=hwRrppRingState, hwRrppRingRowStatus=hwRrppRingRowStatus, hwRrppEnableStatus=hwRrppEnableStatus, hwRrppPortTXMajorFault=hwRrppPortTXMajorFault, hwRrppSnoopingVsiEntry=hwRrppSnoopingVsiEntry, hwRrppRingEntry=hwRrppRingEntry, hwRrppDomainDescription=hwRrppDomainDescription, hwRrppCompliances=hwRrppCompliances, EnabledStatus=EnabledStatus, hwRrppDomainGroup=hwRrppDomainGroup, hwRrppSnoopingAllVsiStatus=hwRrppSnoopingAllVsiStatus, hwRrppRingGroupMemberRowStatus=hwRrppRingGroupMemberRowStatus, hwRrppTrackInterfaceID=hwRrppTrackInterfaceID, hwRrppSnoopingVsiName=hwRrppSnoopingVsiName, hwRrppNotificationGroup=hwRrppNotificationGroup, hwRrppSnoopingInterfaceGroup=hwRrppSnoopingInterfaceGroup, hwRrppRingGroupMemberDomainID=hwRrppRingGroupMemberDomainID, hwRrppPortGroup=hwRrppPortGroup, hwRrppDomainFailTime=hwRrppDomainFailTime, hwRrppRingActive=hwRrppRingActive, hwRrpp=hwRrpp, hwRrppSnoopingInterfaceEntry=hwRrppSnoopingInterfaceEntry, hwRrppSnoopingVsiInterfaceId=hwRrppSnoopingVsiInterfaceId, hwRrppLinkupDelayTime=hwRrppLinkupDelayTime, hwRrppPortRXCompleteFlush=hwRrppPortRXCompleteFlush, hwRrppPortTXCommonFlush=hwRrppPortTXCommonFlush, hwRrppPortRXError=hwRrppPortRXError, hwRrppPortRXMajorFault=hwRrppPortRXMajorFault, hwRrppPortType=hwRrppPortType, hwRrppTrackInterfaceTable=hwRrppTrackInterfaceTable, hwRrppDomainRowStatus=hwRrppDomainRowStatus, hwRrppSnoopingVlanId=hwRrppSnoopingVlanId, hwRrppRingNodeMode=hwRrppRingNodeMode, hwRrppRingGroup=hwRrppRingGroup, hwRrppSnoopingVsiRowStatus=hwRrppSnoopingVsiRowStatus, hwRrppPortState=hwRrppPortState, hwRrppSnoopingEnableStatus=hwRrppSnoopingEnableStatus, hwRrppSnoopingVsiTable=hwRrppSnoopingVsiTable, hwRrppConformance=hwRrppConformance, hwRrppRingGroupMemberGroup=hwRrppRingGroupMemberGroup, hwRrppRingLevel=hwRrppRingLevel, hwRrppRingGroupID=hwRrppRingGroupID, hwRrppPortRXLinkUp=hwRrppPortRXLinkUp, hwRrppRingEnableStatus=hwRrppRingEnableStatus, hwRrppRingTable=hwRrppRingTable, hwRrppPortTXCompleteFlush=hwRrppPortTXCompleteFlush, hwRrppTrackInterfaceEntry=hwRrppTrackInterfaceEntry, hwRrppTrackInterfaceDown=hwRrppTrackInterfaceDown, hwRrppTable=hwRrppTable, hwRrppScalarGroup=hwRrppScalarGroup, hwRrppRingGroupMemberEntry=hwRrppRingGroupMemberEntry, hwRrppPortRXEdgeHello=hwRrppPortRXEdgeHello, hwRrppDomainEntry=hwRrppDomainEntry, hwRrppSnoopingTable=hwRrppSnoopingTable, hwRrppPortRole=hwRrppPortRole, hwRrppTrackRowStatus=hwRrppTrackRowStatus, hwRrppDomainTable=hwRrppDomainTable, hwRrppRingPrimaryPort=hwRrppRingPrimaryPort, hwRrppPortTXEdgeHello=hwRrppPortTXEdgeHello, hwRrppGlobalGroup=hwRrppGlobalGroup, hwRrppDomainHelloTime=hwRrppDomainHelloTime, hwRrppPortTXLinkDown=hwRrppPortTXLinkDown, hwRrppDomainID=hwRrppDomainID, hwRrppRingID=hwRrppRingID, hwRrppPortRXHello=hwRrppPortRXHello, hwRrppSnoopingVsiGroup=hwRrppSnoopingVsiGroup, hwRrppNotifications=hwRrppNotifications, hwRrppDomainProtectedVlan=hwRrppDomainProtectedVlan, hwRrppPortRXLinkDown=hwRrppPortRXLinkDown, hwRrppSnoopingInterfaceTable=hwRrppSnoopingInterfaceTable, hwRrppTrackInterfaceUp=hwRrppTrackInterfaceUp, hwRrppPortID=hwRrppPortID, hwRrppPortTXHello=hwRrppPortTXHello, hwRrppMulSubRingProtection=hwRrppMulSubRingProtection, hwRrppPortTable=hwRrppPortTable, hwRrppMultiMaster=hwRrppMultiMaster, hwRrppRingGroupEntry=hwRrppRingGroupEntry, hwVsiName=hwVsiName, hwRrppRingFail=hwRrppRingFail, hwRrppSnoopingRowStatus=hwRrppSnoopingRowStatus, hwRrppRingGroupGroup=hwRrppRingGroupGroup, hwRrppDomainResetStatistics=hwRrppDomainResetStatistics, hwRrppSnoopingInterfaceId=hwRrppSnoopingInterfaceId, hwRrppRingSingleDirectionFail=hwRrppRingSingleDirectionFail, hwRrppDomainControlVlanID=hwRrppDomainControlVlanID, hwRrppRingGroupMemberTable=hwRrppRingGroupMemberTable, hwRrppPortRXCommonFlush=hwRrppPortRXCommonFlush, hwRrppPortTXError=hwRrppPortTXError, hwRrppRingGroupRowStatus=hwRrppRingGroupRowStatus, hwRrppRingGroupTable=hwRrppRingGroupTable)
