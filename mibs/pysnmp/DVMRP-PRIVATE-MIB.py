#
# PySNMP MIB module DVMRP-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DVMRP-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:40:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
cjnProtocol, = mibBuilder.importSymbols("Cajun-ROOT", "cjnProtocol")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Integer32, ObjectIdentity, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, MibIdentifier, Gauge32, ModuleIdentity, Counter64, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "ObjectIdentity", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "MibIdentifier", "Gauge32", "ModuleIdentity", "Counter64", "Counter32", "iso")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
cjnDvmrp = ModuleIdentity((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13))
if mibBuilder.loadTexts: cjnDvmrp.setLastUpdated('9902230000Z')
if mibBuilder.loadTexts: cjnDvmrp.setOrganization("Lucent's Concord Technology Center (CTC)")
cjnDvmrpGblGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1))
cjnDvmrpIsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpIsEnabled.setStatus('current')
cjnDvmrpNbrProbeInterval = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 2), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpNbrProbeInterval.setStatus('current')
cjnDvmrpNbrTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 3), Integer32().clone(35)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpNbrTimeout.setStatus('current')
cjnDvmrpMinFlashUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 4), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpMinFlashUpdateInterval.setStatus('current')
cjnDvmrpMaxRoutes = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 5), Integer32().clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpMaxRoutes.setStatus('current')
cjnDvmrpRteReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 6), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpRteReportInterval.setStatus('current')
cjnDvmrpRteExpireTime = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 7), Integer32().clone(140)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpRteExpireTime.setStatus('current')
cjnDvmrpRteHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 8), Integer32().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpRteHoldTime.setStatus('current')
cjnDvmrpPruneLifeTime = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7200)).clone(7200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpPruneLifeTime.setStatus('current')
cjnDvmrpPruneRxmitTime = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 10), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpPruneRxmitTime.setStatus('current')
cjnDvmrpGraftRxmitTime = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 11), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpGraftRxmitTime.setStatus('current')
cjnDvmrpGlobalStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpGlobalStatsReset.setStatus('current')
cjnDvmrpStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2))
cjnDvmrpRxProbe = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpRxProbe.setStatus('current')
cjnDvmrpTxProbe = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpTxProbe.setStatus('current')
cjnDvmrpRxReport = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpRxReport.setStatus('current')
cjnDvmrpTxReport = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpTxReport.setStatus('current')
cjnDvmrpRxPrune = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpRxPrune.setStatus('current')
cjnDvmrpTxPrune = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpTxPrune.setStatus('current')
cjnDvmrpRxGraft = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpRxGraft.setStatus('current')
cjnDvmrpTxGraft = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpTxGraft.setStatus('current')
cjnDvmrpRxGraftAck = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpRxGraftAck.setStatus('current')
cjnDvmrpTxGraftAck = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpTxGraftAck.setStatus('current')
cjnDvmrpRxUnknownCode = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpRxUnknownCode.setStatus('current')
cjnDvmrpNumValidRts = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpNumValidRts.setStatus('current')
cjnDvmrpNumRts = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpNumRts.setStatus('current')
cjnDvmrpNumTrigdRts = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpNumTrigdRts.setStatus('current')
cjnDvmrpLastRep = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 2, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpLastRep.setStatus('current')
cjnDvmrpIfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3))
cjnDvmrpIfTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 1), )
if mibBuilder.loadTexts: cjnDvmrpIfTable.setStatus('current')
cjnDvmrpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 1, 1), ).setIndexNames((0, "DVMRP-PRIVATE-MIB", "cjnDvmrpIfIndex"))
if mibBuilder.loadTexts: cjnDvmrpIfEntry.setStatus('current')
cjnDvmrpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: cjnDvmrpIfIndex.setStatus('current')
cjnDvmrpIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnDvmrpIfRowStatus.setStatus('current')
cjnDvmrpIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("broadcast", 0), ("nonEncapsulatedTunnel", 1), ("ipIpTunnel", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnDvmrpIfType.setStatus('current')
cjnDvmrpIfTnAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnDvmrpIfTnAddress.setStatus('current')
cjnDvmrpIfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnDvmrpIfMetric.setStatus('current')
cjnDvmrpIfScope = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("scope0", 0), ("scope127", 1), ("scope255", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnDvmrpIfScope.setStatus('current')
cjnDvmrpPruneSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("hostAddr", 1), ("networkAddr", 0))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnDvmrpPruneSource.setStatus('current')
cjnDvmrpIfStatTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 2), )
if mibBuilder.loadTexts: cjnDvmrpIfStatTable.setStatus('current')
cjnDvmrpIfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 2, 1), ).setIndexNames((0, "DVMRP-PRIVATE-MIB", "cjnDvmrpIfStatIndex"))
if mibBuilder.loadTexts: cjnDvmrpIfStatEntry.setStatus('current')
cjnDvmrpIfStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: cjnDvmrpIfStatIndex.setStatus('current')
cjnDvmrpIfBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpIfBadPackets.setStatus('current')
cjnDvmrpIfBadRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpIfBadRoutes.setStatus('current')
cjnDvmrpIfNbrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpIfNbrCount.setStatus('current')
cjnDvmrpIfSentRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnDvmrpIfSentRoutes.setStatus('current')
cjnDvmrpIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 13, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnDvmrpIfState.setStatus('current')
mibBuilder.exportSymbols("DVMRP-PRIVATE-MIB", cjnDvmrpIfBadPackets=cjnDvmrpIfBadPackets, cjnDvmrpLastRep=cjnDvmrpLastRep, cjnDvmrpIfNbrCount=cjnDvmrpIfNbrCount, cjnDvmrpNbrTimeout=cjnDvmrpNbrTimeout, cjnDvmrpRxReport=cjnDvmrpRxReport, cjnDvmrpIfEntry=cjnDvmrpIfEntry, cjnDvmrpIfStatEntry=cjnDvmrpIfStatEntry, cjnDvmrpTxGraft=cjnDvmrpTxGraft, cjnDvmrpNbrProbeInterval=cjnDvmrpNbrProbeInterval, cjnDvmrpIsEnabled=cjnDvmrpIsEnabled, cjnDvmrp=cjnDvmrp, cjnDvmrpTxProbe=cjnDvmrpTxProbe, cjnDvmrpPruneLifeTime=cjnDvmrpPruneLifeTime, cjnDvmrpGlobalStatsReset=cjnDvmrpGlobalStatsReset, cjnDvmrpMinFlashUpdateInterval=cjnDvmrpMinFlashUpdateInterval, cjnDvmrpIfType=cjnDvmrpIfType, cjnDvmrpRteHoldTime=cjnDvmrpRteHoldTime, cjnDvmrpTxReport=cjnDvmrpTxReport, cjnDvmrpNumValidRts=cjnDvmrpNumValidRts, cjnDvmrpRxGraftAck=cjnDvmrpRxGraftAck, PYSNMP_MODULE_ID=cjnDvmrp, cjnDvmrpPruneSource=cjnDvmrpPruneSource, cjnDvmrpRteExpireTime=cjnDvmrpRteExpireTime, cjnDvmrpPruneRxmitTime=cjnDvmrpPruneRxmitTime, cjnDvmrpTxPrune=cjnDvmrpTxPrune, cjnDvmrpIfState=cjnDvmrpIfState, cjnDvmrpRxProbe=cjnDvmrpRxProbe, cjnDvmrpIfScope=cjnDvmrpIfScope, cjnDvmrpIfBadRoutes=cjnDvmrpIfBadRoutes, cjnDvmrpRxGraft=cjnDvmrpRxGraft, cjnDvmrpIfStatTable=cjnDvmrpIfStatTable, cjnDvmrpTxGraftAck=cjnDvmrpTxGraftAck, cjnDvmrpRxPrune=cjnDvmrpRxPrune, cjnDvmrpRxUnknownCode=cjnDvmrpRxUnknownCode, cjnDvmrpIfTnAddress=cjnDvmrpIfTnAddress, cjnDvmrpNumRts=cjnDvmrpNumRts, cjnDvmrpIfMetric=cjnDvmrpIfMetric, cjnDvmrpGblGroup=cjnDvmrpGblGroup, cjnDvmrpIfRowStatus=cjnDvmrpIfRowStatus, cjnDvmrpGraftRxmitTime=cjnDvmrpGraftRxmitTime, cjnDvmrpIfGroup=cjnDvmrpIfGroup, cjnDvmrpNumTrigdRts=cjnDvmrpNumTrigdRts, cjnDvmrpIfSentRoutes=cjnDvmrpIfSentRoutes, cjnDvmrpMaxRoutes=cjnDvmrpMaxRoutes, cjnDvmrpStatsGroup=cjnDvmrpStatsGroup, cjnDvmrpIfStatIndex=cjnDvmrpIfStatIndex, cjnDvmrpRteReportInterval=cjnDvmrpRteReportInterval, cjnDvmrpIfTable=cjnDvmrpIfTable, cjnDvmrpIfIndex=cjnDvmrpIfIndex)
