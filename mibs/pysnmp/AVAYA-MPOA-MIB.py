#
# PySNMP MIB module AVAYA-MPOA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVAYA-MPOA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:16:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
lsg, = mibBuilder.importSymbols("AVAYAGEN-MIB", "lsg")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, MibIdentifier, Bits, Counter32, iso, Integer32, ObjectIdentity, NotificationType, IpAddress, TimeTicks, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "Bits", "Counter32", "iso", "Integer32", "ObjectIdentity", "NotificationType", "IpAddress", "TimeTicks", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Gauge32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
atmAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4))
mpoa = ModuleIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1))
mpoa.setRevisions(('1901-10-10 17:00',))
if mibBuilder.loadTexts: mpoa.setLastUpdated('0110101700Z')
if mibBuilder.loadTexts: mpoa.setOrganization('Avaya Communications, Inc.')
marconi = MibIdentifier((1, 3, 6, 1, 4, 1, 1012))
esrLsg = MibIdentifier((1, 3, 6, 1, 4, 1, 1012, 44))
class MpoaEnabledValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class MpoaYesorNoValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("yes", 1), ("no", 2))

class MpoaOperValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("up", 1), ("down", 2), ("initial", 3))

class MpoaResourceId(TextualConvention, Integer32):
    status = 'current'

mpoaResourceMgmtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 1))
mpoaNextLinkResourceId = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaNextLinkResourceId.setStatus('current')
mpoaNextPvcResourceId = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaNextPvcResourceId.setStatus('current')
mpoaVirtualSwitchPortTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2), )
if mibBuilder.loadTexts: mpoaVirtualSwitchPortTable.setStatus('current')
mpoaVirtualSwitchPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1), ).setIndexNames((0, "AVAYA-MPOA-MIB", "mpoaVspIndex"))
if mibBuilder.loadTexts: mpoaVirtualSwitchPortEntry.setStatus('current')
mpoaVspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaVspIndex.setStatus('current')
mpoaVspAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 2), MpoaEnabledValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaVspAdminStatus.setStatus('current')
mpoaVspOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 3), MpoaOperValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaVspOperStatus.setStatus('current')
mpoaVspName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaVspName.setStatus('current')
mpoaVspEncapsulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("routed", 1), ("simpleBridge", 2), ("llcBridge", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaVspEncapsulationType.setStatus('current')
mpoaVspPktReplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 6), MpoaYesorNoValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaVspPktReplication.setStatus('current')
mpoaVspLoadShare = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 7), MpoaYesorNoValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaVspLoadShare.setStatus('current')
mpoaVspDefaultPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaVspDefaultPort.setStatus('current')
mpoaVspDefaultVc_port1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 9), MpoaResourceId()).setLabel("mpoaVspDefaultVc-port1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaVspDefaultVc_port1.setStatus('current')
mpoaVspDefaultVc_port2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 10), MpoaResourceId()).setLabel("mpoaVspDefaultVc-port2").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaVspDefaultVc_port2.setStatus('current')
mpoaVspMulticastChan_port1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 11), Integer32()).setLabel("mpoaVspMulticastChan-port1").setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaVspMulticastChan_port1.setStatus('current')
mpoaVspMulticastChan_port2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 12), Integer32()).setLabel("mpoaVspMulticastChan-port2").setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaVspMulticastChan_port2.setStatus('current')
mpoaVspRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 2, 1, 13), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaVspRowStatus.setStatus('current')
mpoaAtmLinkTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3), )
if mibBuilder.loadTexts: mpoaAtmLinkTable.setStatus('current')
mpoaAtmLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1), ).setIndexNames((0, "AVAYA-MPOA-MIB", "mpoaAtmLinkVspIndex"), (0, "AVAYA-MPOA-MIB", "mpoaAtmLinkIndex"))
if mibBuilder.loadTexts: mpoaAtmLinkEntry.setStatus('current')
mpoaAtmLinkVspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaAtmLinkVspIndex.setStatus('current')
mpoaAtmLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 2), MpoaResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaAtmLinkIndex.setStatus('current')
mpoaAtmLinkAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 3), MpoaEnabledValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkAdminStatus.setStatus('current')
mpoaAtmLinkOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 4), MpoaOperValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaAtmLinkOperStatus.setStatus('current')
mpoaAtmLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkName.setStatus('current')
mpoaAtmLinkDefaultVc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 6), MpoaResourceId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkDefaultVc.setStatus('current')
mpoaAtmLinkFailOverLink = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 8), MpoaResourceId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkFailOverLink.setStatus('current')
mpoaAtmLinkOutPriority_0 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 9), MpoaResourceId()).setLabel("mpoaAtmLinkOutPriority-0").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkOutPriority_0.setStatus('current')
mpoaAtmLinkOutPriority_1 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 10), MpoaResourceId()).setLabel("mpoaAtmLinkOutPriority-1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkOutPriority_1.setStatus('current')
mpoaAtmLinkOutPriority_2 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 11), MpoaResourceId()).setLabel("mpoaAtmLinkOutPriority-2").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkOutPriority_2.setStatus('current')
mpoaAtmLinkOutPriority_3 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 12), MpoaResourceId()).setLabel("mpoaAtmLinkOutPriority-3").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkOutPriority_3.setStatus('current')
mpoaAtmLinkOutPriority_4 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 13), MpoaResourceId()).setLabel("mpoaAtmLinkOutPriority-4").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkOutPriority_4.setStatus('current')
mpoaAtmLinkOutPriority_5 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 14), MpoaResourceId()).setLabel("mpoaAtmLinkOutPriority-5").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkOutPriority_5.setStatus('current')
mpoaAtmLinkOutPriority_6 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 15), MpoaResourceId()).setLabel("mpoaAtmLinkOutPriority-6").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkOutPriority_6.setStatus('current')
mpoaAtmLinkOutPriority_7 = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 16), MpoaResourceId()).setLabel("mpoaAtmLinkOutPriority-7").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkOutPriority_7.setStatus('current')
mpoaAtmLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 3, 1, 17), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaAtmLinkRowStatus.setStatus('current')
mpoaPvcTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4), )
if mibBuilder.loadTexts: mpoaPvcTable.setStatus('current')
mpoaPvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1), ).setIndexNames((0, "AVAYA-MPOA-MIB", "mpoaPvcVspIndex"), (0, "AVAYA-MPOA-MIB", "mpoaPvcLinkIndex"), (0, "AVAYA-MPOA-MIB", "mpoaPvcResIndex"))
if mibBuilder.loadTexts: mpoaPvcEntry.setStatus('current')
mpoaPvcVspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaPvcVspIndex.setStatus('current')
mpoaPvcLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 2), MpoaResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaPvcLinkIndex.setStatus('current')
mpoaPvcResIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 3), MpoaResourceId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpoaPvcResIndex.setStatus('current')
mpoaPvcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcPort.setStatus('current')
mpoaPvcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcVpi.setStatus('current')
mpoaPvcVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcVci.setStatus('current')
mpoaPvcInPriorityMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcInPriorityMap.setStatus('current')
mpoaPvcTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ubr", 1), ("rtVbr", 2), ("nrtVbr", 3), ("cbr", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcTrafficClass.setStatus('current')
mpoaPvcCDVT = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcCDVT.setStatus('current')
mpoaPvcPCR = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1412830))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcPCR.setStatus('current')
mpoaPvcSCR = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1412830))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcSCR.setStatus('current')
mpoaPvcMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 1048576))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcMBS.setStatus('current')
mpoaPvcRandomEarlyDetPktId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcRandomEarlyDetPktId.setStatus('current')
mpoaPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 4, 1, 14), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpoaPvcRowStatus.setStatus('current')
mpoaTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 5))
mpoaVspId = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: mpoaVspId.setStatus('current')
mpoaLinkId = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 5, 2), MpoaResourceId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: mpoaLinkId.setStatus('current')
mpoaOperState = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 5, 3), MpoaOperValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: mpoaOperState.setStatus('current')
mpoaTrapLinkChange = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 4, 1, 5, 4)).setObjects(("AVAYA-MPOA-MIB", "mpoaVspId"), ("AVAYA-MPOA-MIB", "mpoaLinkId"), ("AVAYA-MPOA-MIB", "mpoaOperState"))
if mibBuilder.loadTexts: mpoaTrapLinkChange.setStatus('current')
mibBuilder.exportSymbols("AVAYA-MPOA-MIB", mpoaPvcCDVT=mpoaPvcCDVT, MpoaYesorNoValue=MpoaYesorNoValue, mpoaAtmLinkOutPriority_3=mpoaAtmLinkOutPriority_3, mpoaPvcPCR=mpoaPvcPCR, mpoaAtmLinkOutPriority_0=mpoaAtmLinkOutPriority_0, mpoaAtmLinkOutPriority_5=mpoaAtmLinkOutPriority_5, mpoaAtmLinkOutPriority_2=mpoaAtmLinkOutPriority_2, mpoaPvcTable=mpoaPvcTable, mpoaNextLinkResourceId=mpoaNextLinkResourceId, mpoaPvcLinkIndex=mpoaPvcLinkIndex, mpoaVspIndex=mpoaVspIndex, mpoaVspOperStatus=mpoaVspOperStatus, mpoaVspMulticastChan_port1=mpoaVspMulticastChan_port1, mpoaPvcVci=mpoaPvcVci, mpoaNextPvcResourceId=mpoaNextPvcResourceId, mpoaVspEncapsulationType=mpoaVspEncapsulationType, mpoaVspName=mpoaVspName, mpoaAtmLinkRowStatus=mpoaAtmLinkRowStatus, MpoaOperValue=MpoaOperValue, mpoaVspLoadShare=mpoaVspLoadShare, mpoaVspDefaultVc_port2=mpoaVspDefaultVc_port2, mpoaAtmLinkVspIndex=mpoaAtmLinkVspIndex, PYSNMP_MODULE_ID=mpoa, mpoaPvcVspIndex=mpoaPvcVspIndex, mpoaLinkId=mpoaLinkId, mpoaVspId=mpoaVspId, mpoaAtmLinkFailOverLink=mpoaAtmLinkFailOverLink, esrLsg=esrLsg, mpoaAtmLinkOutPriority_1=mpoaAtmLinkOutPriority_1, mpoaPvcTrafficClass=mpoaPvcTrafficClass, mpoaAtmLinkAdminStatus=mpoaAtmLinkAdminStatus, mpoaAtmLinkOutPriority_4=mpoaAtmLinkOutPriority_4, mpoaVspAdminStatus=mpoaVspAdminStatus, mpoaPvcVpi=mpoaPvcVpi, MpoaEnabledValue=MpoaEnabledValue, mpoa=mpoa, mpoaPvcSCR=mpoaPvcSCR, mpoaVirtualSwitchPortTable=mpoaVirtualSwitchPortTable, mpoaAtmLinkIndex=mpoaAtmLinkIndex, mpoaAtmLinkOutPriority_6=mpoaAtmLinkOutPriority_6, mpoaVspPktReplication=mpoaVspPktReplication, mpoaVspDefaultPort=mpoaVspDefaultPort, mpoaAtmLinkOutPriority_7=mpoaAtmLinkOutPriority_7, mpoaPvcRowStatus=mpoaPvcRowStatus, mpoaPvcInPriorityMap=mpoaPvcInPriorityMap, mpoaAtmLinkEntry=mpoaAtmLinkEntry, mpoaPvcPort=mpoaPvcPort, mpoaAtmLinkTable=mpoaAtmLinkTable, mpoaVspDefaultVc_port1=mpoaVspDefaultVc_port1, MpoaResourceId=MpoaResourceId, mpoaAtmLinkName=mpoaAtmLinkName, mpoaOperState=mpoaOperState, mpoaResourceMgmtGroup=mpoaResourceMgmtGroup, mpoaPvcRandomEarlyDetPktId=mpoaPvcRandomEarlyDetPktId, marconi=marconi, mpoaAtmLinkOperStatus=mpoaAtmLinkOperStatus, mpoaVspMulticastChan_port2=mpoaVspMulticastChan_port2, mpoaPvcMBS=mpoaPvcMBS, mpoaTraps=mpoaTraps, atmAccess=atmAccess, mpoaVirtualSwitchPortEntry=mpoaVirtualSwitchPortEntry, mpoaAtmLinkDefaultVc=mpoaAtmLinkDefaultVc, mpoaPvcEntry=mpoaPvcEntry, mpoaPvcResIndex=mpoaPvcResIndex, mpoaVspRowStatus=mpoaVspRowStatus, mpoaTrapLinkChange=mpoaTrapLinkChange)
