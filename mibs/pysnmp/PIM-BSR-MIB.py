#
# PySNMP MIB module PIM-BSR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PIM-BSR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:56:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
InetZoneIndex, InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetZoneIndex", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, Gauge32, Integer32, Counter64, Bits, mib_2, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, iso, TimeTicks, NotificationType, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "Integer32", "Counter64", "Bits", "mib-2", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "iso", "TimeTicks", "NotificationType", "Counter32", "IpAddress")
RowStatus, DisplayString, StorageType, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "StorageType", "TextualConvention", "TruthValue")
pimBsrMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 172))
pimBsrMIB.setRevisions(('2008-05-28 00:00',))
if mibBuilder.loadTexts: pimBsrMIB.setLastUpdated('200805280000Z')
if mibBuilder.loadTexts: pimBsrMIB.setOrganization('IETF Protocol Independent Multicast (PIM) Working Group')
pimBsrNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 172, 0))
pimBsrObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 172, 1))
pimBsrConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 172, 2))
pimBsrCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 172, 2, 1))
pimBsrGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 172, 2, 2))
pimBsrCandidateRPTable = MibTable((1, 3, 6, 1, 2, 1, 172, 1, 1), )
if mibBuilder.loadTexts: pimBsrCandidateRPTable.setStatus('current')
pimBsrCandidateRPEntry = MibTableRow((1, 3, 6, 1, 2, 1, 172, 1, 1, 1), ).setIndexNames((0, "PIM-BSR-MIB", "pimBsrCandidateRPAddressType"), (0, "PIM-BSR-MIB", "pimBsrCandidateRPAddress"), (0, "PIM-BSR-MIB", "pimBsrCandidateRPGroupAddress"), (0, "PIM-BSR-MIB", "pimBsrCandidateRPGroupPrefixLength"))
if mibBuilder.loadTexts: pimBsrCandidateRPEntry.setStatus('current')
pimBsrCandidateRPAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pimBsrCandidateRPAddressType.setStatus('current')
pimBsrCandidateRPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimBsrCandidateRPAddress.setStatus('current')
pimBsrCandidateRPGroupAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimBsrCandidateRPGroupAddress.setStatus('current')
pimBsrCandidateRPGroupPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 4), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128)))
if mibBuilder.loadTexts: pimBsrCandidateRPGroupPrefixLength.setStatus('current')
pimBsrCandidateRPBidir = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateRPBidir.setStatus('current')
pimBsrCandidateRPAdvTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrCandidateRPAdvTimer.setStatus('current')
pimBsrCandidateRPPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(192)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateRPPriority.setStatus('current')
pimBsrCandidateRPAdvInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 26214)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateRPAdvInterval.setStatus('current')
pimBsrCandidateRPHoldtime = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(150)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateRPHoldtime.setStatus('current')
pimBsrCandidateRPStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateRPStatus.setStatus('current')
pimBsrCandidateRPStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 1, 1, 11), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateRPStorageType.setStatus('current')
pimBsrElectedBSRRPSetTable = MibTable((1, 3, 6, 1, 2, 1, 172, 1, 2), )
if mibBuilder.loadTexts: pimBsrElectedBSRRPSetTable.setStatus('current')
pimBsrElectedBSRRPSetEntry = MibTableRow((1, 3, 6, 1, 2, 1, 172, 1, 2, 1), ).setIndexNames((0, "PIM-BSR-MIB", "pimBsrElectedBSRGrpMappingAddrType"), (0, "PIM-BSR-MIB", "pimBsrElectedBSRGrpMappingGrpAddr"), (0, "PIM-BSR-MIB", "pimBsrElectedBSRGrpMappingGrpPrefixLen"), (0, "PIM-BSR-MIB", "pimBsrElectedBSRGrpMappingRPAddr"))
if mibBuilder.loadTexts: pimBsrElectedBSRRPSetEntry.setStatus('current')
pimBsrElectedBSRGrpMappingAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: pimBsrElectedBSRGrpMappingAddrType.setStatus('current')
pimBsrElectedBSRGrpMappingGrpAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 2, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimBsrElectedBSRGrpMappingGrpAddr.setStatus('current')
pimBsrElectedBSRGrpMappingGrpPrefixLen = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 2, 1, 4), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128)))
if mibBuilder.loadTexts: pimBsrElectedBSRGrpMappingGrpPrefixLen.setStatus('current')
pimBsrElectedBSRGrpMappingRPAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 2, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: pimBsrElectedBSRGrpMappingRPAddr.setStatus('current')
pimBsrElectedBSRRPSetPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrElectedBSRRPSetPriority.setStatus('current')
pimBsrElectedBSRRPSetHoldtime = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrElectedBSRRPSetHoldtime.setStatus('current')
pimBsrElectedBSRRPSetExpiryTime = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrElectedBSRRPSetExpiryTime.setStatus('current')
pimBsrElectedBSRRPSetGrpBidir = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 2, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrElectedBSRRPSetGrpBidir.setStatus('current')
pimBsrCandidateBSRTable = MibTable((1, 3, 6, 1, 2, 1, 172, 1, 3), )
if mibBuilder.loadTexts: pimBsrCandidateBSRTable.setStatus('current')
pimBsrCandidateBSREntry = MibTableRow((1, 3, 6, 1, 2, 1, 172, 1, 3, 1), ).setIndexNames((0, "PIM-BSR-MIB", "pimBsrCandidateBSRZoneIndex"))
if mibBuilder.loadTexts: pimBsrCandidateBSREntry.setStatus('current')
pimBsrCandidateBSRZoneIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 3, 1, 1), InetZoneIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: pimBsrCandidateBSRZoneIndex.setStatus('current')
pimBsrCandidateBSRAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 3, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateBSRAddressType.setStatus('current')
pimBsrCandidateBSRAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 3, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateBSRAddress.setStatus('current')
pimBsrCandidateBSRPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateBSRPriority.setStatus('current')
pimBsrCandidateBSRHashMaskLength = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateBSRHashMaskLength.setStatus('current')
pimBsrCandidateBSRElectedBSR = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrCandidateBSRElectedBSR.setStatus('current')
pimBsrCandidateBSRBootstrapTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 3, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrCandidateBSRBootstrapTimer.setStatus('current')
pimBsrCandidateBSRStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateBSRStatus.setStatus('current')
pimBsrCandidateBSRStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 3, 1, 9), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pimBsrCandidateBSRStorageType.setStatus('current')
pimBsrElectedBSRTable = MibTable((1, 3, 6, 1, 2, 1, 172, 1, 4), )
if mibBuilder.loadTexts: pimBsrElectedBSRTable.setStatus('current')
pimBsrElectedBSREntry = MibTableRow((1, 3, 6, 1, 2, 1, 172, 1, 4, 1), ).setIndexNames((0, "PIM-BSR-MIB", "pimBsrElectedBSRZoneIndex"))
if mibBuilder.loadTexts: pimBsrElectedBSREntry.setStatus('current')
pimBsrElectedBSRZoneIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 4, 1, 1), InetZoneIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: pimBsrElectedBSRZoneIndex.setStatus('current')
pimBsrElectedBSRAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrElectedBSRAddressType.setStatus('current')
pimBsrElectedBSRAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 4, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrElectedBSRAddress.setStatus('current')
pimBsrElectedBSRPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrElectedBSRPriority.setStatus('current')
pimBsrElectedBSRHashMaskLength = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrElectedBSRHashMaskLength.setStatus('current')
pimBsrElectedBSRExpiryTime = MibTableColumn((1, 3, 6, 1, 2, 1, 172, 1, 4, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pimBsrElectedBSRExpiryTime.setStatus('current')
pimBsrElectedBSRLostElection = NotificationType((1, 3, 6, 1, 2, 1, 172, 0, 1)).setObjects(("PIM-BSR-MIB", "pimBsrElectedBSRAddressType"), ("PIM-BSR-MIB", "pimBsrElectedBSRAddress"), ("PIM-BSR-MIB", "pimBsrElectedBSRPriority"))
if mibBuilder.loadTexts: pimBsrElectedBSRLostElection.setStatus('current')
pimBsrCandidateBSRWinElection = NotificationType((1, 3, 6, 1, 2, 1, 172, 0, 2)).setObjects(("PIM-BSR-MIB", "pimBsrCandidateBSRElectedBSR"))
if mibBuilder.loadTexts: pimBsrCandidateBSRWinElection.setStatus('current')
pimBsrCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 172, 2, 1, 1)).setObjects(("PIM-BSR-MIB", "pimBsrObjectGroup"), ("PIM-BSR-MIB", "pimBsrDiagnosticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimBsrCompliance = pimBsrCompliance.setStatus('current')
pimBsrObjectGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 172, 2, 2, 1)).setObjects(("PIM-BSR-MIB", "pimBsrCandidateRPBidir"), ("PIM-BSR-MIB", "pimBsrCandidateRPAdvTimer"), ("PIM-BSR-MIB", "pimBsrCandidateRPPriority"), ("PIM-BSR-MIB", "pimBsrCandidateRPAdvInterval"), ("PIM-BSR-MIB", "pimBsrCandidateRPHoldtime"), ("PIM-BSR-MIB", "pimBsrCandidateRPStatus"), ("PIM-BSR-MIB", "pimBsrCandidateRPStorageType"), ("PIM-BSR-MIB", "pimBsrElectedBSRRPSetPriority"), ("PIM-BSR-MIB", "pimBsrElectedBSRRPSetHoldtime"), ("PIM-BSR-MIB", "pimBsrElectedBSRRPSetExpiryTime"), ("PIM-BSR-MIB", "pimBsrElectedBSRRPSetGrpBidir"), ("PIM-BSR-MIB", "pimBsrCandidateBSRAddress"), ("PIM-BSR-MIB", "pimBsrCandidateBSRAddressType"), ("PIM-BSR-MIB", "pimBsrCandidateBSRPriority"), ("PIM-BSR-MIB", "pimBsrCandidateBSRHashMaskLength"), ("PIM-BSR-MIB", "pimBsrCandidateBSRElectedBSR"), ("PIM-BSR-MIB", "pimBsrCandidateBSRBootstrapTimer"), ("PIM-BSR-MIB", "pimBsrCandidateBSRStatus"), ("PIM-BSR-MIB", "pimBsrCandidateBSRStorageType"), ("PIM-BSR-MIB", "pimBsrElectedBSRAddress"), ("PIM-BSR-MIB", "pimBsrElectedBSRAddressType"), ("PIM-BSR-MIB", "pimBsrElectedBSRPriority"), ("PIM-BSR-MIB", "pimBsrElectedBSRHashMaskLength"), ("PIM-BSR-MIB", "pimBsrElectedBSRExpiryTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimBsrObjectGroup = pimBsrObjectGroup.setStatus('current')
pimBsrDiagnosticsGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 172, 2, 2, 2)).setObjects(("PIM-BSR-MIB", "pimBsrElectedBSRLostElection"), ("PIM-BSR-MIB", "pimBsrCandidateBSRWinElection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pimBsrDiagnosticsGroup = pimBsrDiagnosticsGroup.setStatus('current')
mibBuilder.exportSymbols("PIM-BSR-MIB", pimBsrElectedBSRRPSetPriority=pimBsrElectedBSRRPSetPriority, pimBsrCandidateRPBidir=pimBsrCandidateRPBidir, pimBsrElectedBSRGrpMappingGrpAddr=pimBsrElectedBSRGrpMappingGrpAddr, pimBsrCandidateBSRStatus=pimBsrCandidateBSRStatus, pimBsrCandidateBSRAddressType=pimBsrCandidateBSRAddressType, pimBsrCandidateRPAdvInterval=pimBsrCandidateRPAdvInterval, pimBsrCandidateBSRTable=pimBsrCandidateBSRTable, pimBsrNotifications=pimBsrNotifications, pimBsrElectedBSRTable=pimBsrElectedBSRTable, pimBsrObjects=pimBsrObjects, pimBsrElectedBSRZoneIndex=pimBsrElectedBSRZoneIndex, pimBsrCandidateRPStorageType=pimBsrCandidateRPStorageType, pimBsrCandidateBSREntry=pimBsrCandidateBSREntry, pimBsrCandidateRPAddress=pimBsrCandidateRPAddress, pimBsrCandidateRPAddressType=pimBsrCandidateRPAddressType, pimBsrElectedBSRLostElection=pimBsrElectedBSRLostElection, pimBsrElectedBSRRPSetTable=pimBsrElectedBSRRPSetTable, pimBsrElectedBSRGrpMappingAddrType=pimBsrElectedBSRGrpMappingAddrType, pimBsrCandidateRPStatus=pimBsrCandidateRPStatus, pimBsrElectedBSRExpiryTime=pimBsrElectedBSRExpiryTime, pimBsrCandidateBSRBootstrapTimer=pimBsrCandidateBSRBootstrapTimer, pimBsrGroups=pimBsrGroups, pimBsrCandidateBSRWinElection=pimBsrCandidateBSRWinElection, pimBsrObjectGroup=pimBsrObjectGroup, pimBsrCandidateBSRAddress=pimBsrCandidateBSRAddress, pimBsrDiagnosticsGroup=pimBsrDiagnosticsGroup, pimBsrMIB=pimBsrMIB, pimBsrElectedBSRAddressType=pimBsrElectedBSRAddressType, pimBsrElectedBSRRPSetHoldtime=pimBsrElectedBSRRPSetHoldtime, pimBsrElectedBSRRPSetGrpBidir=pimBsrElectedBSRRPSetGrpBidir, pimBsrElectedBSRRPSetExpiryTime=pimBsrElectedBSRRPSetExpiryTime, pimBsrElectedBSREntry=pimBsrElectedBSREntry, pimBsrCandidateRPGroupAddress=pimBsrCandidateRPGroupAddress, pimBsrCandidateRPGroupPrefixLength=pimBsrCandidateRPGroupPrefixLength, pimBsrConformance=pimBsrConformance, PYSNMP_MODULE_ID=pimBsrMIB, pimBsrCandidateBSRZoneIndex=pimBsrCandidateBSRZoneIndex, pimBsrCandidateBSRStorageType=pimBsrCandidateBSRStorageType, pimBsrElectedBSRPriority=pimBsrElectedBSRPriority, pimBsrCandidateRPHoldtime=pimBsrCandidateRPHoldtime, pimBsrElectedBSRHashMaskLength=pimBsrElectedBSRHashMaskLength, pimBsrCandidateRPPriority=pimBsrCandidateRPPriority, pimBsrElectedBSRRPSetEntry=pimBsrElectedBSRRPSetEntry, pimBsrCandidateRPTable=pimBsrCandidateRPTable, pimBsrElectedBSRGrpMappingGrpPrefixLen=pimBsrElectedBSRGrpMappingGrpPrefixLen, pimBsrCandidateRPEntry=pimBsrCandidateRPEntry, pimBsrCandidateBSRElectedBSR=pimBsrCandidateBSRElectedBSR, pimBsrCandidateBSRHashMaskLength=pimBsrCandidateBSRHashMaskLength, pimBsrCandidateBSRPriority=pimBsrCandidateBSRPriority, pimBsrCompliance=pimBsrCompliance, pimBsrCandidateRPAdvTimer=pimBsrCandidateRPAdvTimer, pimBsrCompliances=pimBsrCompliances, pimBsrElectedBSRGrpMappingRPAddr=pimBsrElectedBSRGrpMappingRPAddr, pimBsrElectedBSRAddress=pimBsrElectedBSRAddress)
