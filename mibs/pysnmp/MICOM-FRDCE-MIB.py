#
# PySNMP MIB module MICOM-FRDCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MICOM-FRDCE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:02:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
micom_oscar, = mibBuilder.importSymbols("MICOM-OSCAR-MIB", "micom-oscar")
mcmSysIfExtPPA, mcmSysAsciiTimeOfDay, mcmSysIfExtModule = mibBuilder.importSymbols("MICOM-SYS-MIB", "mcmSysIfExtPPA", "mcmSysAsciiTimeOfDay", "mcmSysIfExtModule")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, iso, Bits, Gauge32, Counter32, TimeTicks, Integer32, NotificationType, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Bits", "Gauge32", "Counter32", "TimeTicks", "Integer32", "NotificationType", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "NotificationType", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
micom_frdce = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 9)).setLabel("micom-frdce")
frdce_configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1)).setLabel("frdce-configuration")
mcmFrConnectTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1), )
if mibBuilder.loadTexts: mcmFrConnectTable.setStatus('mandatory')
mcmFrConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1), ).setIndexNames((0, "MICOM-FRDCE-MIB", "mcmFrConnectIfIndexLocal"), (0, "MICOM-FRDCE-MIB", "mcmFrConnectDLCILocal"))
if mibBuilder.loadTexts: mcmFrConnectEntry.setStatus('mandatory')
mcmFrConnectIfIndexLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectIfIndexLocal.setStatus('mandatory')
mcmFrConnectDLCILocal = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectDLCILocal.setStatus('mandatory')
mcmFrConnectConnectId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectConnectId.setStatus('mandatory')
mcmFrConnectIfIndexRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectIfIndexRemote.setStatus('obsolete')
mcmFrConnectDLCIRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectDLCIRemote.setStatus('mandatory')
mcmFrConnectIfIndexSVC = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectIfIndexSVC.setStatus('mandatory')
mcmFrConnectDNARemote = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectDNARemote.setStatus('mandatory')
mcmFrConnectSVCDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectSVCDLCI.setStatus('mandatory')
mcmFrConnectDCEPVCLMIState = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectDCEPVCLMIState.setStatus('mandatory')
mcmFrConnectSVCState = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectSVCState.setStatus('mandatory')
mcmFrConnectConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("slave", 1), ("master", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectConnType.setStatus('mandatory')
mcmFrConnectLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectLastChange.setStatus('mandatory')
mcmFrConnectDisconnectReason = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("no-reason", 1), ("local-PVC-physical-link-is-down", 2), ("local-PVC-LMI-is-down", 3), ("remote-PVC-physical-link-is-down", 4), ("remote-PVC-LMI-is-down", 5), ("remote-signaled", 6), ("local-SVC-LMI-is-down", 7), ("local-SVC-is-down", 8), ("local-FR-CORE-error", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectDisconnectReason.setStatus('mandatory')
mcmFrConnectSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("frdce", 1), ("htds", 2), ("cbr", 3), ("x25", 4), ("sna-sdlc", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnectSwitchType.setStatus('mandatory')
mcmFrConnSVCTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2), )
if mibBuilder.loadTexts: mcmFrConnSVCTable.setStatus('obsolete')
mcmFrConnSVCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1), ).setIndexNames((0, "MICOM-FRDCE-MIB", "mcmFrConnSVCIfIndex"), (0, "MICOM-FRDCE-MIB", "mcmFrConnSVCConnectId"))
if mibBuilder.loadTexts: mcmFrConnSVCEntry.setStatus('obsolete')
mcmFrConnSVCIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCIfIndex.setStatus('obsolete')
mcmFrConnSVCConnectId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCConnectId.setStatus('obsolete')
mcmFrConnSVCDNA = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCDNA.setStatus('obsolete')
mcmFrConnSVCDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCDLCI.setStatus('obsolete')
mcmFrConnSVCMaxTxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCMaxTxSize.setStatus('obsolete')
mcmFrConnSVCMaxRxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCMaxRxSize.setStatus('obsolete')
mcmFrConnSVCMinTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCMinTxThroughput.setStatus('obsolete')
mcmFrConnSVCMinRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCMinRxThroughput.setStatus('obsolete')
mcmFrConnSVCMaxTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCMaxTxThroughput.setStatus('obsolete')
mcmFrConnSVCMaxRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCMaxRxThroughput.setStatus('obsolete')
mcmFrConnSVCMaxTxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCMaxTxBurstSize.setStatus('obsolete')
mcmFrConnSVCMaxRxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCMaxRxBurstSize.setStatus('obsolete')
mcmFrConnSVCExcessTxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCExcessTxBurstSize.setStatus('obsolete')
mcmFrConnSVCExcessRxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCExcessRxBurstSize.setStatus('obsolete')
mcmFrConnSVCTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCTransferPriority.setStatus('obsolete')
mcmFrConnSVCReasonForDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 17, 18, 21, 30, 34, 44, 47, 81, 96, 97, 100, 101, 102))).clone(namedValues=NamedValues(("the-PVC-does-not-exist-ie-unassigned", 1), ("remote-PVC-already-connected-ie-busy", 17), ("no-user-present-in-call", 18), ("remote-PVC-down-ie-unavailable", 21), ("response-to-status-inquiry", 30), ("no-DLCI-available", 34), ("specified-DLCI-unavailable", 44), ("resource-unavailable", 47), ("invalid-call-reference", 81), ("missing-element", 96), ("message-type-unknown", 97), ("invalid-element", 100), ("invalid-message-for-state", 101), ("timer-recovery", 102)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrConnSVCReasonForDisconnect.setStatus('obsolete')
mcmMPANLConnSVCTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7), )
if mibBuilder.loadTexts: mcmMPANLConnSVCTable.setStatus('mandatory')
mcmMPANLConnSVCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1), ).setIndexNames((0, "MICOM-FRDCE-MIB", "mcmMPANLConnSVCConnectId"))
if mibBuilder.loadTexts: mcmMPANLConnSVCEntry.setStatus('mandatory')
mcmMPANLConnSVCConnectId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCConnectId.setStatus('mandatory')
mcmMPANLConnSVCDNA = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCDNA.setStatus('mandatory')
mcmMPANLConnSVCDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCDLCI.setStatus('mandatory')
mcmMPANLConnSVCMaxTxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCMaxTxSize.setStatus('mandatory')
mcmMPANLConnSVCMaxRxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCMaxRxSize.setStatus('mandatory')
mcmMPANLConnSVCMinTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCMinTxThroughput.setStatus('mandatory')
mcmMPANLConnSVCMinRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCMinRxThroughput.setStatus('mandatory')
mcmMPANLConnSVCMaxTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCMaxTxThroughput.setStatus('mandatory')
mcmMPANLConnSVCMaxRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCMaxRxThroughput.setStatus('mandatory')
mcmMPANLConnSVCMaxTxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCMaxTxBurstSize.setStatus('mandatory')
mcmMPANLConnSVCMaxRxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCMaxRxBurstSize.setStatus('mandatory')
mcmMPANLConnSVCExcessTxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCExcessTxBurstSize.setStatus('mandatory')
mcmMPANLConnSVCExcessRxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCExcessRxBurstSize.setStatus('mandatory')
mcmMPANLConnSVCTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCTransferPriority.setStatus('mandatory')
mcmMPANLConnSVCReasonForDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 16, 17, 18, 21, 27, 28, 29, 30, 31, 34, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 57, 58, 63, 65, 66, 70, 79, 81, 82, 87, 88, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 111, 127, 128))).clone(namedValues=NamedValues(("the-PVC-does-not-exist-ie-unassigned", 1), ("no-route-to-specified-transit-network", 2), ("no-route-to-destination", 3), ("channel-unacceptable", 6), ("call-awarded-and-being-delivered-in-an-est-channel", 7), ("normal-call-clearing", 16), ("remote-PVC-already-connected-ie-busy", 17), ("no-user-present-in-call", 18), ("remote-PVC-down-ie-unavailable", 21), ("destination-out-of-order", 27), ("invalid-number-format", 28), ("facility-rejected", 29), ("response-to-status-inquiry", 30), ("normal-unspecified", 31), ("no-DLCI-available", 34), ("network-out-of-order", 38), ("permanent-frame-mode-connection-out-of-service", 39), ("permanent-frame-mode-connection-operational", 40), ("temporary-failure", 41), ("switching-equipment-congestion", 42), ("access-information-discarded", 43), ("specified-DLCI-unavailable", 44), ("resource-unavailable", 47), ("quality-of-service-not-available", 49), ("requested-facility-not-subscribed", 50), ("bearer-capability-not-authorized", 57), ("bearer-capability-not-presently-available", 58), ("service-or-option-not-available-unspecified", 63), ("bearer-capability-not-implemented", 65), ("channel-type-not-implemented", 66), ("only-restricted-digital-capability-is-available", 70), ("service-or-option-not-implemented-unspecified", 79), ("invalid-call-reference", 81), ("identified-channel-does-not-exist", 82), ("user-not-member-of-CUG", 87), ("incompatible-destination", 88), ("non-existent-CUG", 90), ("invalid-transit-network-selection", 91), ("invalid-message-unspecified", 95), ("missing-element", 96), ("message-type-unknown", 97), ("message-not-compatible", 98), ("element-non-existent-or-not-implemented", 99), ("invalid-element", 100), ("invalid-message-for-state", 101), ("timer-recovery", 102), ("protocol-error-unspecified", 111), ("interworking-unspecified", 127), ("normal-condition", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCReasonForDisconnect.setStatus('mandatory')
mcmMPANLConnSVCDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("low-discard-level", 1), ("medium-discard-level", 2), ("high-discard-level", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCDiscardPriority.setStatus('mandatory')
mcmMPANLConnSVCIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCIfindex.setStatus('mandatory')
mcmMPANLConnSVCSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCSetupPriority.setStatus('mandatory')
mcmMPANLConnSVCHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 7, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmMPANLConnSVCHoldingPriority.setStatus('mandatory')
mcmFrServiceParamTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3), )
if mibBuilder.loadTexts: mcmFrServiceParamTable.setStatus('mandatory')
mcmFrServiceParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1), ).setIndexNames((0, "MICOM-FRDCE-MIB", "mcmFrServiceParamIfIndex"))
if mibBuilder.loadTexts: mcmFrServiceParamEntry.setStatus('mandatory')
mcmFrServiceParamIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamIfIndex.setStatus('mandatory')
mcmFrServiceParamFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamFlowControl.setStatus('mandatory')
mcmFrServiceParamDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamDelta.setStatus('mandatory')
mcmFrServiceParamConsecutiveFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamConsecutiveFrames.setStatus('mandatory')
mcmFrServiceParamRateEnf = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamRateEnf.setStatus('mandatory')
mcmFrServiceParamTxMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamTxMTU.setStatus('mandatory')
mcmFrServiceParamRxMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamRxMTU.setStatus('mandatory')
mcmFrServiceParamTxBc = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamTxBc.setStatus('mandatory')
mcmFrServiceParamRxBc = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamRxBc.setStatus('mandatory')
mcmFrServiceParamTxBe = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamTxBe.setStatus('mandatory')
mcmFrServiceParamRxBe = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamRxBe.setStatus('mandatory')
mcmFrServiceParamTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamTxThroughput.setStatus('mandatory')
mcmFrServiceParamRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamRxThroughput.setStatus('mandatory')
mcmFrServiceParamPVCLMIStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamPVCLMIStatus.setStatus('mandatory')
mcmFrServiceParamSVCLMIStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmFrServiceParamSVCLMIStatus.setStatus('mandatory')
nvmFrConnectTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4), )
if mibBuilder.loadTexts: nvmFrConnectTable.setStatus('mandatory')
nvmFrConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1), ).setIndexNames((0, "MICOM-FRDCE-MIB", "nvmFrConnectIfIndexLocal"), (0, "MICOM-FRDCE-MIB", "nvmFrConnectDLCILocal"))
if mibBuilder.loadTexts: nvmFrConnectEntry.setStatus('mandatory')
nvmFrConnectIfIndexLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrConnectIfIndexLocal.setStatus('mandatory')
nvmFrConnectDLCILocal = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrConnectDLCILocal.setStatus('mandatory')
nvmFrConnectConnectId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrConnectConnectId.setStatus('mandatory')
nvmFrConnectIfIndexRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnectIfIndexRemote.setStatus('obsolete')
nvmFrConnectDLCIRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnectDLCIRemote.setStatus('mandatory')
nvmFrConnectIfIndexSVC = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnectIfIndexSVC.setStatus('obsolete')
nvmFrConnectDNARemote = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 34))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnectDNARemote.setStatus('mandatory')
nvmFrConnectConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("slave", 1), ("master", 2))).clone('slave')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnectConnType.setStatus('mandatory')
nvmFrConnectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnectRowStatus.setStatus('mandatory')
nvmFrConnectSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("frdce", 1), ("htds", 2), ("cbr", 3), ("x25", 4), ("sna-sdlc", 5))).clone('frdce')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnectSwitchType.setStatus('mandatory')
nvmFrConnSVCTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5), )
if mibBuilder.loadTexts: nvmFrConnSVCTable.setStatus('obsolete')
nvmFrConnSVCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1), ).setIndexNames((0, "MICOM-FRDCE-MIB", "nvmFrConnSVCIfIndex"), (0, "MICOM-FRDCE-MIB", "nvmFrConnSVCConnectId"))
if mibBuilder.loadTexts: nvmFrConnSVCEntry.setStatus('obsolete')
nvmFrConnSVCIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrConnSVCIfIndex.setStatus('obsolete')
nvmFrConnSVCConnectId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrConnSVCConnectId.setStatus('obsolete')
nvmFrConnSVCDNA = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnSVCDNA.setStatus('obsolete')
nvmFrConnSVCMaxTxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnSVCMaxTxSize.setStatus('obsolete')
nvmFrConnSVCMaxRxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnSVCMaxRxSize.setStatus('obsolete')
nvmFrConnSVCMinTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnSVCMinTxThroughput.setStatus('obsolete')
nvmFrConnSVCMinRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnSVCMinRxThroughput.setStatus('obsolete')
nvmFrConnSVCMaxTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrConnSVCMaxTxThroughput.setStatus('obsolete')
nvmFrConnSVCMaxRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrConnSVCMaxRxThroughput.setStatus('obsolete')
nvmFrConnSVCMaxTxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrConnSVCMaxTxBurstSize.setStatus('obsolete')
nvmFrConnSVCMaxRxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrConnSVCMaxRxBurstSize.setStatus('obsolete')
nvmFrConnSVCExcessTxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnSVCExcessTxBurstSize.setStatus('obsolete')
nvmFrConnSVCExcessRxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnSVCExcessRxBurstSize.setStatus('obsolete')
nvmFrConnSVCTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 11))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrConnSVCTransferPriority.setStatus('obsolete')
nvmMPANLConnSVCTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8), )
if mibBuilder.loadTexts: nvmMPANLConnSVCTable.setStatus('mandatory')
nvmMPANLConnSVCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1), ).setIndexNames((0, "MICOM-FRDCE-MIB", "nvmMPANLConnSVCConnectId"))
if mibBuilder.loadTexts: nvmMPANLConnSVCEntry.setStatus('mandatory')
nvmMPANLConnSVCConnectId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmMPANLConnSVCConnectId.setStatus('mandatory')
nvmMPANLConnSVCDNA = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 34))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCDNA.setStatus('mandatory')
nvmMPANLConnSVCMaxTxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCMaxTxSize.setStatus('mandatory')
nvmMPANLConnSVCMaxRxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCMaxRxSize.setStatus('mandatory')
nvmMPANLConnSVCMinTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCMinTxThroughput.setStatus('mandatory')
nvmMPANLConnSVCMinRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCMinRxThroughput.setStatus('mandatory')
nvmMPANLConnSVCMaxTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCMaxTxThroughput.setStatus('mandatory')
nvmMPANLConnSVCMaxRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCMaxRxThroughput.setStatus('mandatory')
nvmMPANLConnSVCMaxTxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCMaxTxBurstSize.setStatus('mandatory')
nvmMPANLConnSVCMaxRxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCMaxRxBurstSize.setStatus('mandatory')
nvmMPANLConnSVCExcessTxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCExcessTxBurstSize.setStatus('mandatory')
nvmMPANLConnSVCExcessRxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCExcessRxBurstSize.setStatus('mandatory')
nvmMPANLConnSVCTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCTransferPriority.setStatus('mandatory')
nvmMPANLConnSVCDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("low-discard-level", 1), ("medium-discard-level", 2), ("high-discard-level", 3))).clone('medium-discard-level')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCDiscardPriority.setStatus('mandatory')
nvmMPANLConnSVCSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCSetupPriority.setStatus('mandatory')
nvmMPANLConnSVCHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 8, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmMPANLConnSVCHoldingPriority.setStatus('mandatory')
nvmFrServiceParamTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6), )
if mibBuilder.loadTexts: nvmFrServiceParamTable.setStatus('mandatory')
nvmFrServiceParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1), ).setIndexNames((0, "MICOM-FRDCE-MIB", "nvmFrServiceParamIfIndex"))
if mibBuilder.loadTexts: nvmFrServiceParamEntry.setStatus('mandatory')
nvmFrServiceParamIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrServiceParamIfIndex.setStatus('mandatory')
nvmFrServiceParamFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamFlowControl.setStatus('mandatory')
nvmFrServiceParamDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamDelta.setStatus('mandatory')
nvmFrServiceParamConsecutiveFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamConsecutiveFrames.setStatus('mandatory')
nvmFrServiceParamRateEnf = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamRateEnf.setStatus('mandatory')
nvmFrServiceParamTxMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)).clone(1604)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamTxMTU.setStatus('mandatory')
nvmFrServiceParamRxMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)).clone(1604)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamRxMTU.setStatus('mandatory')
nvmFrServiceParamTxBc = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000)).clone(64000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrServiceParamTxBc.setStatus('mandatory')
nvmFrServiceParamRxBc = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000)).clone(64000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvmFrServiceParamRxBc.setStatus('mandatory')
nvmFrServiceParamTxBe = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamTxBe.setStatus('mandatory')
nvmFrServiceParamRxBe = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamRxBe.setStatus('mandatory')
nvmFrServiceParamTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamTxThroughput.setStatus('mandatory')
nvmFrServiceParamRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 9, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2560000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmFrServiceParamRxThroughput.setStatus('mandatory')
mcmFrPvcLmiLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 9) + (0,1)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-SYS-MIB", "mcmSysIfExtModule"), ("MICOM-SYS-MIB", "mcmSysIfExtPPA"))
mcmFrPvcLmiLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 9) + (0,2)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-SYS-MIB", "mcmSysIfExtModule"), ("MICOM-SYS-MIB", "mcmSysIfExtPPA"))
mibBuilder.exportSymbols("MICOM-FRDCE-MIB", mcmFrConnSVCMaxRxSize=mcmFrConnSVCMaxRxSize, mcmFrConnectLastChange=mcmFrConnectLastChange, nvmFrConnectRowStatus=nvmFrConnectRowStatus, mcmMPANLConnSVCMinTxThroughput=mcmMPANLConnSVCMinTxThroughput, nvmMPANLConnSVCConnectId=nvmMPANLConnSVCConnectId, nvmFrServiceParamTable=nvmFrServiceParamTable, mcmFrConnSVCMaxTxSize=mcmFrConnSVCMaxTxSize, nvmFrConnectIfIndexSVC=nvmFrConnectIfIndexSVC, nvmMPANLConnSVCMinRxThroughput=nvmMPANLConnSVCMinRxThroughput, mcmFrConnSVCMaxTxThroughput=mcmFrConnSVCMaxTxThroughput, nvmFrServiceParamIfIndex=nvmFrServiceParamIfIndex, mcmFrServiceParamRxBc=mcmFrServiceParamRxBc, mcmFrConnSVCTable=mcmFrConnSVCTable, nvmFrConnSVCExcessTxBurstSize=nvmFrConnSVCExcessTxBurstSize, mcmFrServiceParamFlowControl=mcmFrServiceParamFlowControl, mcmFrConnectSVCState=mcmFrConnectSVCState, nvmFrConnSVCMaxRxSize=nvmFrConnSVCMaxRxSize, nvmFrConnSVCExcessRxBurstSize=nvmFrConnSVCExcessRxBurstSize, mcmFrServiceParamRateEnf=mcmFrServiceParamRateEnf, mcmFrConnSVCReasonForDisconnect=mcmFrConnSVCReasonForDisconnect, nvmFrConnSVCIfIndex=nvmFrConnSVCIfIndex, nvmFrServiceParamRxThroughput=nvmFrServiceParamRxThroughput, nvmFrServiceParamRxMTU=nvmFrServiceParamRxMTU, mcmFrConnectConnType=mcmFrConnectConnType, nvmMPANLConnSVCMaxTxBurstSize=nvmMPANLConnSVCMaxTxBurstSize, nvmFrServiceParamRxBc=nvmFrServiceParamRxBc, mcmMPANLConnSVCEntry=mcmMPANLConnSVCEntry, nvmFrConnSVCMinRxThroughput=nvmFrConnSVCMinRxThroughput, nvmMPANLConnSVCHoldingPriority=nvmMPANLConnSVCHoldingPriority, mcmFrConnSVCMinRxThroughput=mcmFrConnSVCMinRxThroughput, mcmFrConnSVCTransferPriority=mcmFrConnSVCTransferPriority, mcmFrConnSVCConnectId=mcmFrConnSVCConnectId, nvmFrConnSVCMaxRxThroughput=nvmFrConnSVCMaxRxThroughput, mcmFrServiceParamTxBe=mcmFrServiceParamTxBe, mcmFrServiceParamRxThroughput=mcmFrServiceParamRxThroughput, nvmMPANLConnSVCSetupPriority=nvmMPANLConnSVCSetupPriority, nvmFrConnSVCMaxTxThroughput=nvmFrConnSVCMaxTxThroughput, frdce_configuration=frdce_configuration, nvmMPANLConnSVCTransferPriority=nvmMPANLConnSVCTransferPriority, mcmMPANLConnSVCMaxTxThroughput=mcmMPANLConnSVCMaxTxThroughput, nvmFrConnSVCDNA=nvmFrConnSVCDNA, mcmFrServiceParamRxMTU=mcmFrServiceParamRxMTU, mcmFrConnSVCExcessRxBurstSize=mcmFrConnSVCExcessRxBurstSize, nvmMPANLConnSVCMaxTxSize=nvmMPANLConnSVCMaxTxSize, nvmFrConnSVCTransferPriority=nvmFrConnSVCTransferPriority, nvmMPANLConnSVCMaxTxThroughput=nvmMPANLConnSVCMaxTxThroughput, micom_frdce=micom_frdce, mcmFrServiceParamIfIndex=mcmFrServiceParamIfIndex, nvmMPANLConnSVCTable=nvmMPANLConnSVCTable, nvmFrConnectIfIndexLocal=nvmFrConnectIfIndexLocal, mcmFrConnectDNARemote=mcmFrConnectDNARemote, mcmMPANLConnSVCMinRxThroughput=mcmMPANLConnSVCMinRxThroughput, nvmFrConnSVCMaxTxBurstSize=nvmFrConnSVCMaxTxBurstSize, nvmMPANLConnSVCMaxRxThroughput=nvmMPANLConnSVCMaxRxThroughput, mcmFrConnectDLCIRemote=mcmFrConnectDLCIRemote, nvmFrServiceParamFlowControl=nvmFrServiceParamFlowControl, nvmMPANLConnSVCExcessTxBurstSize=nvmMPANLConnSVCExcessTxBurstSize, mcmFrServiceParamTxThroughput=mcmFrServiceParamTxThroughput, mcmMPANLConnSVCDNA=mcmMPANLConnSVCDNA, nvmFrConnSVCTable=nvmFrConnSVCTable, nvmFrServiceParamRxBe=nvmFrServiceParamRxBe, nvmFrConnectTable=nvmFrConnectTable, mcmFrConnSVCMaxRxThroughput=mcmFrConnSVCMaxRxThroughput, mcmMPANLConnSVCExcessTxBurstSize=mcmMPANLConnSVCExcessTxBurstSize, mcmFrConnectTable=mcmFrConnectTable, nvmFrConnectConnType=nvmFrConnectConnType, mcmFrConnSVCMinTxThroughput=mcmFrConnSVCMinTxThroughput, mcmFrConnectDisconnectReason=mcmFrConnectDisconnectReason, nvmMPANLConnSVCEntry=nvmMPANLConnSVCEntry, mcmFrServiceParamTxBc=mcmFrServiceParamTxBc, mcmFrServiceParamTable=mcmFrServiceParamTable, nvmFrServiceParamTxBc=nvmFrServiceParamTxBc, mcmFrConnectSwitchType=mcmFrConnectSwitchType, nvmFrConnectDLCILocal=nvmFrConnectDLCILocal, nvmFrServiceParamDelta=nvmFrServiceParamDelta, mcmFrConnectConnectId=mcmFrConnectConnectId, mcmMPANLConnSVCTransferPriority=mcmMPANLConnSVCTransferPriority, mcmMPANLConnSVCMaxTxBurstSize=mcmMPANLConnSVCMaxTxBurstSize, nvmFrServiceParamEntry=nvmFrServiceParamEntry, mcmMPANLConnSVCReasonForDisconnect=mcmMPANLConnSVCReasonForDisconnect, nvmFrConnSVCMaxRxBurstSize=nvmFrConnSVCMaxRxBurstSize, mcmMPANLConnSVCTable=mcmMPANLConnSVCTable, mcmMPANLConnSVCIfindex=mcmMPANLConnSVCIfindex, mcmMPANLConnSVCMaxRxBurstSize=mcmMPANLConnSVCMaxRxBurstSize, nvmFrServiceParamRateEnf=nvmFrServiceParamRateEnf, mcmMPANLConnSVCHoldingPriority=mcmMPANLConnSVCHoldingPriority, nvmFrServiceParamConsecutiveFrames=nvmFrServiceParamConsecutiveFrames, mcmMPANLConnSVCDLCI=mcmMPANLConnSVCDLCI, mcmFrConnSVCMaxRxBurstSize=mcmFrConnSVCMaxRxBurstSize, mcmFrConnectDLCILocal=mcmFrConnectDLCILocal, nvmMPANLConnSVCDiscardPriority=nvmMPANLConnSVCDiscardPriority, nvmFrConnSVCEntry=nvmFrConnSVCEntry, mcmFrServiceParamEntry=mcmFrServiceParamEntry, mcmFrServiceParamSVCLMIStatus=mcmFrServiceParamSVCLMIStatus, mcmMPANLConnSVCConnectId=mcmMPANLConnSVCConnectId, mcmMPANLConnSVCDiscardPriority=mcmMPANLConnSVCDiscardPriority, mcmFrServiceParamPVCLMIStatus=mcmFrServiceParamPVCLMIStatus, mcmMPANLConnSVCSetupPriority=mcmMPANLConnSVCSetupPriority, nvmFrServiceParamTxMTU=nvmFrServiceParamTxMTU, nvmFrConnectDLCIRemote=nvmFrConnectDLCIRemote, nvmFrServiceParamTxThroughput=nvmFrServiceParamTxThroughput, nvmFrConnSVCMaxTxSize=nvmFrConnSVCMaxTxSize, nvmFrConnectIfIndexRemote=nvmFrConnectIfIndexRemote, nvmFrConnectConnectId=nvmFrConnectConnectId, mcmFrConnSVCIfIndex=mcmFrConnSVCIfIndex, mcmFrServiceParamTxMTU=mcmFrServiceParamTxMTU, mcmFrConnSVCEntry=mcmFrConnSVCEntry, nvmMPANLConnSVCExcessRxBurstSize=nvmMPANLConnSVCExcessRxBurstSize, mcmFrConnSVCMaxTxBurstSize=mcmFrConnSVCMaxTxBurstSize, mcmFrConnectIfIndexRemote=mcmFrConnectIfIndexRemote, mcmFrPvcLmiLinkUp=mcmFrPvcLmiLinkUp, mcmMPANLConnSVCMaxRxSize=mcmMPANLConnSVCMaxRxSize, mcmFrConnectDCEPVCLMIState=mcmFrConnectDCEPVCLMIState, nvmMPANLConnSVCDNA=nvmMPANLConnSVCDNA, mcmFrPvcLmiLinkDown=mcmFrPvcLmiLinkDown, mcmFrConnectSVCDLCI=mcmFrConnectSVCDLCI, mcmMPANLConnSVCMaxTxSize=mcmMPANLConnSVCMaxTxSize, nvmFrConnectEntry=nvmFrConnectEntry, nvmFrConnSVCConnectId=nvmFrConnSVCConnectId, nvmMPANLConnSVCMinTxThroughput=nvmMPANLConnSVCMinTxThroughput, nvmFrConnectDNARemote=nvmFrConnectDNARemote, nvmMPANLConnSVCMaxRxBurstSize=nvmMPANLConnSVCMaxRxBurstSize, nvmMPANLConnSVCMaxRxSize=nvmMPANLConnSVCMaxRxSize, mcmMPANLConnSVCMaxRxThroughput=mcmMPANLConnSVCMaxRxThroughput, mcmFrServiceParamConsecutiveFrames=mcmFrServiceParamConsecutiveFrames, mcmFrConnSVCDLCI=mcmFrConnSVCDLCI, mcmFrConnSVCDNA=mcmFrConnSVCDNA, nvmFrServiceParamTxBe=nvmFrServiceParamTxBe, mcmMPANLConnSVCExcessRxBurstSize=mcmMPANLConnSVCExcessRxBurstSize, mcmFrConnectIfIndexSVC=mcmFrConnectIfIndexSVC, nvmFrConnectSwitchType=nvmFrConnectSwitchType, mcmFrConnSVCExcessTxBurstSize=mcmFrConnSVCExcessTxBurstSize, mcmFrServiceParamRxBe=mcmFrServiceParamRxBe, mcmFrConnectIfIndexLocal=mcmFrConnectIfIndexLocal, mcmFrConnectEntry=mcmFrConnectEntry, nvmFrConnSVCMinTxThroughput=nvmFrConnSVCMinTxThroughput, mcmFrServiceParamDelta=mcmFrServiceParamDelta)
