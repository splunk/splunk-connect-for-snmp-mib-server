#
# PySNMP MIB module CASA-CABLE-CMCPE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CASA-CABLE-CMCPE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:29:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
casa, = mibBuilder.importSymbols("CASA-MIB", "casa")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, Gauge32, iso, Counter64, NotificationType, Integer32, IpAddress, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "iso", "Counter64", "NotificationType", "Integer32", "IpAddress", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "Counter32", "Bits")
MacAddress, DisplayString, TextualConvention, PhysAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention", "PhysAddress", "TruthValue")
casaCmtsCmCpeMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 20858, 10, 12))
if mibBuilder.loadTexts: casaCmtsCmCpeMib.setLastUpdated('200812021453Z')
if mibBuilder.loadTexts: casaCmtsCmCpeMib.setOrganization('Casa Systems Inc')
casaMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10))
casaCmtsCmCpeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1))
casaCmtsUSModemTable = MibTable((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 1), )
if mibBuilder.loadTexts: casaCmtsUSModemTable.setStatus('current')
casaCmtsUSModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: casaCmtsUSModemEntry.setStatus('current')
casaCmtsUSActiveModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsUSActiveModemCount.setStatus('current')
casaCmtsUSRegisteredModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsUSRegisteredModemCount.setStatus('current')
casaCmtsUSTotalModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsUSTotalModemCount.setStatus('current')
casaCmtsDSModemTable = MibTable((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 2), )
if mibBuilder.loadTexts: casaCmtsDSModemTable.setStatus('current')
casaCmtsDSModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: casaCmtsDSModemEntry.setStatus('current')
casaCmtsDSActiveModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsDSActiveModemCount.setStatus('current')
casaCmtsDSRegisteredModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsDSRegisteredModemCount.setStatus('current')
casaCmtsDSTotalModemCount = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsDSTotalModemCount.setStatus('current')
casaCmtsCmCpeTable = MibTable((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 3), )
if mibBuilder.loadTexts: casaCmtsCmCpeTable.setStatus('current')
casaCmtsCmCpeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 3, 1), ).setIndexNames((0, "CASA-CABLE-CMCPE-MIB", "casaCmtsCmCpeMacAddress"))
if mibBuilder.loadTexts: casaCmtsCmCpeEntry.setStatus('current')
casaCmtsCmCpeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: casaCmtsCmCpeMacAddress.setStatus('current')
casaCmtsCmCpeType = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cm", 1), ("cpe", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsCmCpeType.setStatus('current')
casaCmtsCmCpeIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsCmCpeIpAddress.setStatus('current')
casaCmtsCmCpeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 3, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsCmCpeIfIndex.setStatus('current')
casaCmtsCmCpeCmtsServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsCmCpeCmtsServiceId.setStatus('current')
casaCmtsCmCpeCmStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsCmCpeCmStatusIndex.setStatus('current')
casaCmtsCmCpeResetNow = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 3, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaCmtsCmCpeResetNow.setStatus('current')
casaCmtsCpeIpNetToPhysicalTable = MibTable((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 4), )
if mibBuilder.loadTexts: casaCmtsCpeIpNetToPhysicalTable.setStatus('current')
casaCmtsCpeIpNetToPhysicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 4, 1), ).setIndexNames((0, "CASA-CABLE-CMCPE-MIB", "casaCmtsCpeIpNetToPhysicalIfIndex"), (0, "CASA-CABLE-CMCPE-MIB", "casaCmtsCpeIpNetToPhysicalNetAddressType"), (0, "CASA-CABLE-CMCPE-MIB", "casaCmtsCpeIpNetToPhysicalNetAddress"))
if mibBuilder.loadTexts: casaCmtsCpeIpNetToPhysicalEntry.setStatus('current')
casaCmtsCpeIpNetToPhysicalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: casaCmtsCpeIpNetToPhysicalIfIndex.setStatus('current')
casaCmtsCpeIpNetToPhysicalNetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 4, 1, 2), InetAddressType())
if mibBuilder.loadTexts: casaCmtsCpeIpNetToPhysicalNetAddressType.setStatus('current')
casaCmtsCpeIpNetToPhysicalNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 4, 1, 3), InetAddress())
if mibBuilder.loadTexts: casaCmtsCpeIpNetToPhysicalNetAddress.setStatus('current')
casaCmtsCpeIpNetToPhysicalCmPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 4, 1, 5), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsCpeIpNetToPhysicalCmPhysAddress.setStatus('current')
casaCmtsCpeIpNetToPhysicalType = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaCmtsCpeIpNetToPhysicalType.setStatus('current')
casaCmtsCmReset = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 5))
casaCmtsCmResetByIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 5, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaCmtsCmResetByIpAddr.setStatus('current')
casaCmtsCmResetByMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 5, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaCmtsCmResetByMacAddr.setStatus('current')
casaCmtsCmResetAll = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 12, 1, 5, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaCmtsCmResetAll.setStatus('current')
casaCmCpeGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 12, 2))
casaCmCpeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 20858, 10, 12, 2, 1)).setObjects(("CASA-CABLE-CMCPE-MIB", "casaCmtsUSActiveModemCount"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsUSRegisteredModemCount"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsUSTotalModemCount"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsDSActiveModemCount"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsDSRegisteredModemCount"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsDSTotalModemCount"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCmResetAll"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCmResetByMacAddr"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCmResetByIpAddr"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCmCpeResetNow"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCmCpeCmStatusIndex"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCmCpeCmtsServiceId"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCmCpeIfIndex"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCpeIpNetToPhysicalType"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCmCpeType"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCmCpeIpAddress"), ("CASA-CABLE-CMCPE-MIB", "casaCmtsCpeIpNetToPhysicalCmPhysAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    casaCmCpeGroup = casaCmCpeGroup.setStatus('current')
casaCmCpeCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 12, 3))
casaCmCpeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 20858, 10, 12, 3, 1)).setObjects(("CASA-CABLE-CMCPE-MIB", "casaCmCpeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    casaCmCpeCompliance = casaCmCpeCompliance.setStatus('current')
mibBuilder.exportSymbols("CASA-CABLE-CMCPE-MIB", casaCmtsCmCpeTable=casaCmtsCmCpeTable, casaCmtsUSRegisteredModemCount=casaCmtsUSRegisteredModemCount, casaCmCpeCompliances=casaCmCpeCompliances, casaCmtsCpeIpNetToPhysicalTable=casaCmtsCpeIpNetToPhysicalTable, casaMgmt=casaMgmt, casaCmtsCpeIpNetToPhysicalCmPhysAddress=casaCmtsCpeIpNetToPhysicalCmPhysAddress, casaCmtsCmCpeType=casaCmtsCmCpeType, casaCmtsCmReset=casaCmtsCmReset, casaCmtsDSRegisteredModemCount=casaCmtsDSRegisteredModemCount, casaCmtsCpeIpNetToPhysicalNetAddressType=casaCmtsCpeIpNetToPhysicalNetAddressType, casaCmtsCpeIpNetToPhysicalNetAddress=casaCmtsCpeIpNetToPhysicalNetAddress, casaCmtsCmResetAll=casaCmtsCmResetAll, casaCmtsUSModemTable=casaCmtsUSModemTable, casaCmtsCmCpeCmtsServiceId=casaCmtsCmCpeCmtsServiceId, casaCmtsDSTotalModemCount=casaCmtsDSTotalModemCount, casaCmtsCpeIpNetToPhysicalType=casaCmtsCpeIpNetToPhysicalType, casaCmtsUSActiveModemCount=casaCmtsUSActiveModemCount, casaCmCpeCompliance=casaCmCpeCompliance, casaCmtsDSModemTable=casaCmtsDSModemTable, casaCmtsCmCpeEntry=casaCmtsCmCpeEntry, casaCmtsDSActiveModemCount=casaCmtsDSActiveModemCount, casaCmCpeGroup=casaCmCpeGroup, casaCmtsCmCpeIpAddress=casaCmtsCmCpeIpAddress, casaCmtsCmCpeCmStatusIndex=casaCmtsCmCpeCmStatusIndex, casaCmtsCmResetByIpAddr=casaCmtsCmResetByIpAddr, casaCmtsCpeIpNetToPhysicalIfIndex=casaCmtsCpeIpNetToPhysicalIfIndex, casaCmtsCmResetByMacAddr=casaCmtsCmResetByMacAddr, casaCmCpeGroups=casaCmCpeGroups, casaCmtsCmCpeResetNow=casaCmtsCmCpeResetNow, casaCmtsCpeIpNetToPhysicalEntry=casaCmtsCpeIpNetToPhysicalEntry, casaCmtsUSModemEntry=casaCmtsUSModemEntry, casaCmtsCmCpeMib=casaCmtsCmCpeMib, casaCmtsCmCpeMacAddress=casaCmtsCmCpeMacAddress, casaCmtsCmCpeIfIndex=casaCmtsCmCpeIfIndex, casaCmtsUSTotalModemCount=casaCmtsUSTotalModemCount, PYSNMP_MODULE_ID=casaCmtsCmCpeMib, casaCmtsCmCpeObjects=casaCmtsCmCpeObjects, casaCmtsDSModemEntry=casaCmtsDSModemEntry)
