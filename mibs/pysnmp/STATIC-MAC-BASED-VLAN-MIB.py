#
# PySNMP MIB module STATIC-MAC-BASED-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STATIC-MAC-BASED-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter64, ObjectIdentity, IpAddress, Integer32, TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, Gauge32, Bits, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "ObjectIdentity", "IpAddress", "Integer32", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "Gauge32", "Bits", "iso", "MibIdentifier")
MacAddress, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TextualConvention", "DisplayString")
swSMBVMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 56))
if mibBuilder.loadTexts: swSMBVMIB.setLastUpdated('0901160000Z')
if mibBuilder.loadTexts: swSMBVMIB.setOrganization('D-Link Corp.')
swSmbvCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 56, 1))
swSmbvInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 56, 2))
swSmbvMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 56, 3))
swStaticMacBasedVlanCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 1), )
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlTable.setStatus('obsolete')
swStaticMacBasedVlanCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 1, 1), ).setIndexNames((0, "STATIC-MAC-BASED-VLAN-MIB", "swStaticMacBasedVlanCtrlMacAddr"))
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlEntry.setStatus('obsolete')
swStaticMacBasedVlanCtrlMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlMacAddr.setStatus('obsolete')
swStaticMacBasedVlanCtrlVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlVlanName.setStatus('obsolete')
swStaticMacBasedVlanCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlStatus.setStatus('obsolete')
swStaticMacBasedVlanCtrlOptionTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 2), )
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlOptionTable.setStatus('current')
swStaticMacBasedVlanCtrlOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 2, 1), ).setIndexNames((0, "STATIC-MAC-BASED-VLAN-MIB", "swStaticMacBasedVlanCtrlOptionMacAddr"), (0, "STATIC-MAC-BASED-VLAN-MIB", "swStaticMacBasedOptionVlanID"))
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlOptionEntry.setStatus('current')
swStaticMacBasedVlanCtrlOptionMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlOptionMacAddr.setStatus('current')
swStaticMacBasedOptionVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swStaticMacBasedOptionVlanID.setStatus('current')
swStaticMacBasedVlanCtrlOptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("static", 1), ("mac-based-access-control", 2), ("ieee8021x", 3), ("wac", 4), ("jwac", 5), ("multiple-authentication", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlOptionType.setStatus('current')
swStaticMacBasedVlanCtrlOptionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 56, 3, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swStaticMacBasedVlanCtrlOptionStatus.setStatus('current')
mibBuilder.exportSymbols("STATIC-MAC-BASED-VLAN-MIB", swSmbvMgmt=swSmbvMgmt, swStaticMacBasedVlanCtrlEntry=swStaticMacBasedVlanCtrlEntry, PYSNMP_MODULE_ID=swSMBVMIB, swStaticMacBasedVlanCtrlOptionMacAddr=swStaticMacBasedVlanCtrlOptionMacAddr, swStaticMacBasedVlanCtrlOptionType=swStaticMacBasedVlanCtrlOptionType, swStaticMacBasedVlanCtrlMacAddr=swStaticMacBasedVlanCtrlMacAddr, swStaticMacBasedVlanCtrlTable=swStaticMacBasedVlanCtrlTable, swStaticMacBasedOptionVlanID=swStaticMacBasedOptionVlanID, swStaticMacBasedVlanCtrlOptionStatus=swStaticMacBasedVlanCtrlOptionStatus, swSMBVMIB=swSMBVMIB, swSmbvCtrl=swSmbvCtrl, swStaticMacBasedVlanCtrlVlanName=swStaticMacBasedVlanCtrlVlanName, swSmbvInfo=swSmbvInfo, swStaticMacBasedVlanCtrlStatus=swStaticMacBasedVlanCtrlStatus, swStaticMacBasedVlanCtrlOptionEntry=swStaticMacBasedVlanCtrlOptionEntry, swStaticMacBasedVlanCtrlOptionTable=swStaticMacBasedVlanCtrlOptionTable)
