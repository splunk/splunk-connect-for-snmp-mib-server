#
# PySNMP MIB module ASCEND-MIBSPARING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBSPARING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:12:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter32, ModuleIdentity, Counter64, Gauge32, ObjectIdentity, MibIdentifier, Integer32, Unsigned32, IpAddress, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "ModuleIdentity", "Counter64", "Gauge32", "ObjectIdentity", "MibIdentifier", "Integer32", "Unsigned32", "IpAddress", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

miblimSparingConfigProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 12))
mibifSparingConfigProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 119))
miblimSparingStatusProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 120))
miblimSparingConfigProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 12, 1), )
if mibBuilder.loadTexts: miblimSparingConfigProfileTable.setStatus('mandatory')
miblimSparingConfigProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1), ).setIndexNames((0, "ASCEND-MIBSPARING-MIB", "limSparingConfigProfile-Shelf-o"), (0, "ASCEND-MIBSPARING-MIB", "limSparingConfigProfile-Slot-o"), (0, "ASCEND-MIBSPARING-MIB", "limSparingConfigProfile-Item-o"))
if mibBuilder.loadTexts: miblimSparingConfigProfileEntry.setStatus('mandatory')
limSparingConfigProfile_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 6), Integer32()).setLabel("limSparingConfigProfile-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingConfigProfile_Shelf_o.setStatus('mandatory')
limSparingConfigProfile_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 7), Integer32()).setLabel("limSparingConfigProfile-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingConfigProfile_Slot_o.setStatus('mandatory')
limSparingConfigProfile_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 8), Integer32()).setLabel("limSparingConfigProfile-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingConfigProfile_Item_o.setStatus('mandatory')
limSparingConfigProfile_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("limSparingConfigProfile-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_PhysicalAddress_Shelf.setStatus('mandatory')
limSparingConfigProfile_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("limSparingConfigProfile-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_PhysicalAddress_Slot.setStatus('mandatory')
limSparingConfigProfile_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 11), Integer32()).setLabel("limSparingConfigProfile-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_PhysicalAddress_ItemNumber.setStatus('mandatory')
limSparingConfigProfile_SpareSlotType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 116, 117))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("cm", 3), ("routerCard", 4), ("n-8t1Card", 5), ("n-8e1Card", 6), ("n-48modemCard", 7), ("hdlcCard", 8), ("n-4etherCard", 9), ("n-4swanCard", 10), ("hssiCard", 11), ("n-10UnchanT1Card", 12), ("obsoleteAnalogModemCard", 13), ("t3Card", 14), ("n-48modem56kCard", 15), ("shelfForward", 16), ("sdslCard", 17), ("capadslCard", 18), ("dmtadslCard", 19), ("modemController", 20), ("n-32idslCard", 21), ("n-10UnchanE1Card", 22), ("analogModem2Card", 23), ("csmxCard", 24), ("uds3Card", 25), ("ds3AtmCard", 26), ("n-4ether2Card", 27), ("hdlc2Card", 28), ("n-24sdslDataCard", 29), ("maddCard", 30), ("n-24sdslVoiceCard", 31), ("oc3AtmTrunkDaughterCard", 32), ("oc3AtmCard", 33), ("ether3Card", 34), ("srsEtherCard", 35), ("sdslAtmCard", 36), ("alDmtadslAtmCard", 37), ("csm3vCard", 38), ("hdlc2ecCard", 39), ("ds3AtmTrunkDaughterCard", 40), ("etherDualCard", 41), ("stm0Card", 43), ("sdslAtmV2Card", 44), ("terminatorCard", 48), ("dadslAtm24Card", 49), ("pctfitCard", 50), ("pctfieCard", 51), ("gliteAtm48Card", 52), ("ds3Atm2Card", 53), ("e3AtmCard", 54), ("ima24t1Card", 55), ("madd2Card", 56), ("hdsl2Card", 57), ("stngr32IdslCard", 58), ("annexbDadslAtmCard", 59), ("ima24E1Card", 60), ("annexcDadslAtmCard", 61), ("ether3ndCard", 62), ("clpmtCard", 63), ("clpmeCard", 64), ("e3AtmTrunkDaughterCard", 65), ("ima8T1Card", 66), ("ima8E1Card", 67), ("stngr48aAdslCard", 68), ("stngr48bAdslCard", 69), ("stngr48cAdslCard", 70), ("stngr40aAdslCard", 71), ("oc3Atm2Card", 72), ("n-4swan2Card", 73), ("cds3Lim", 74), ("r7000Card", 75), ("vpnCard", 76), ("hseCard", 77), ("madd3Card", 78), ("cmV2", 79), ("coc3Lim", 80), ("shdsl72Card", 81), ("n-2oc34ds3AtmTrunkDaughterCard", 82), ("stngr72AdslCard", 83), ("mrt36AdslCard", 84), ("n-24t1Card", 85), ("n-24e1Card", 86), ("mrtCm", 87), ("cstm1Lim", 88), ("madd3240Card", 89), ("dsntscCard", 90), ("n-2ds3Card", 91), ("n-2stm14e3AtmTrunkDaughterCard", 92), ("oc3AtmTrunkDaughterCardVer2", 93), ("enetHseCard", 94), ("ds3AtmHseCard", 95), ("oc3AtmHseCard", 96), ("gigeHseCard", 97), ("aslam32", 98), ("vdslCard", 99), ("stngr72cAdslCard", 100), ("madd3Voip480Card", 101), ("trunkModule", 102), ("n-16oc3AtmTrunkDaughterCard", 103), ("ima8t1TrunkDaughterCard", 104), ("ima8e1TrunkDaughterCard", 105), ("n-3ds3Card", 106), ("clnCard", 107), ("alpmtCard", 108), ("ipServicesModule", 110), ("alpmeCard", 111), ("stngr72GsAdslCard", 112), ("eagleXdslCard", 113), ("oc12AtmTrunkDaughterCard", 116), ("apxenetCard", 117)))).setLabel("limSparingConfigProfile-SpareSlotType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_SpareSlotType.setStatus('mandatory')
limSparingConfigProfile_SparingMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("manual", 2), ("automatic", 3)))).setLabel("limSparingConfigProfile-SparingMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_SparingMode.setStatus('mandatory')
limSparingConfigProfile_SpareSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("limSparingConfigProfile-SpareSlotNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_SpareSlotNumber.setStatus('mandatory')
limSparingConfigProfile_ManuallySparedSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("limSparingConfigProfile-ManuallySparedSlotNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_ManuallySparedSlotNumber.setStatus('mandatory')
limSparingConfigProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("limSparingConfigProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_Action_o.setStatus('mandatory')
miblimSparingConfigProfile_AutoLimSparingConfig_LimSparingConfigTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 12, 2), ).setLabel("miblimSparingConfigProfile-AutoLimSparingConfig-LimSparingConfigTable")
if mibBuilder.loadTexts: miblimSparingConfigProfile_AutoLimSparingConfig_LimSparingConfigTable.setStatus('mandatory')
miblimSparingConfigProfile_AutoLimSparingConfig_LimSparingConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1), ).setLabel("miblimSparingConfigProfile-AutoLimSparingConfig-LimSparingConfigEntry").setIndexNames((0, "ASCEND-MIBSPARING-MIB", "limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-Shelf-o"), (0, "ASCEND-MIBSPARING-MIB", "limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-Slot-o"), (0, "ASCEND-MIBSPARING-MIB", "limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-Item-o"), (0, "ASCEND-MIBSPARING-MIB", "limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-Index-o"))
if mibBuilder.loadTexts: miblimSparingConfigProfile_AutoLimSparingConfig_LimSparingConfigEntry.setStatus('mandatory')
limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1, 1), Integer32()).setLabel("limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Shelf_o.setStatus('mandatory')
limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1, 2), Integer32()).setLabel("limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Slot_o.setStatus('mandatory')
limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1, 3), Integer32()).setLabel("limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Item_o.setStatus('mandatory')
limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1, 4), Integer32()).setLabel("limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Index_o.setStatus('mandatory')
limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Active = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-Active").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Active.setStatus('mandatory')
limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_ErrorAveragingPeriod = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1, 6), Integer32()).setLabel("limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-ErrorAveragingPeriod").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_ErrorAveragingPeriod.setStatus('mandatory')
limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_ErrorThreshold = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1, 7), Integer32()).setLabel("limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-ErrorThreshold").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_ErrorThreshold.setStatus('mandatory')
limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_UpDownThreshold = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1, 8), Integer32()).setLabel("limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-UpDownThreshold").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_UpDownThreshold.setStatus('mandatory')
limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_PortFailureThreshold = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 12, 2, 1, 10), Integer32()).setLabel("limSparingConfigProfile-AutoLimSparingConfig-LimSparingConfig-PortFailureThreshold").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_PortFailureThreshold.setStatus('mandatory')
mibifSparingConfigProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 119, 1), )
if mibBuilder.loadTexts: mibifSparingConfigProfileTable.setStatus('mandatory')
mibifSparingConfigProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 119, 1, 1), ).setIndexNames((0, "ASCEND-MIBSPARING-MIB", "ifSparingConfigProfile-Index-o"))
if mibBuilder.loadTexts: mibifSparingConfigProfileEntry.setStatus('mandatory')
ifSparingConfigProfile_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 119, 1, 1, 1), Integer32()).setLabel("ifSparingConfigProfile-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSparingConfigProfile_Index_o.setStatus('mandatory')
ifSparingConfigProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 119, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("ifSparingConfigProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifSparingConfigProfile_Action_o.setStatus('mandatory')
miblimSparingStatusProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 120, 1), )
if mibBuilder.loadTexts: miblimSparingStatusProfileTable.setStatus('mandatory')
miblimSparingStatusProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1), ).setIndexNames((0, "ASCEND-MIBSPARING-MIB", "limSparingStatusProfile-Index-o"))
if mibBuilder.loadTexts: miblimSparingStatusProfileEntry.setStatus('mandatory')
limSparingStatusProfile_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1, 1), Integer32()).setLabel("limSparingStatusProfile-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_Index_o.setStatus('mandatory')
limSparingStatusProfile_SpareSlotType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 116, 117))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("cm", 3), ("routerCard", 4), ("n-8t1Card", 5), ("n-8e1Card", 6), ("n-48modemCard", 7), ("hdlcCard", 8), ("n-4etherCard", 9), ("n-4swanCard", 10), ("hssiCard", 11), ("n-10UnchanT1Card", 12), ("obsoleteAnalogModemCard", 13), ("t3Card", 14), ("n-48modem56kCard", 15), ("shelfForward", 16), ("sdslCard", 17), ("capadslCard", 18), ("dmtadslCard", 19), ("modemController", 20), ("n-32idslCard", 21), ("n-10UnchanE1Card", 22), ("analogModem2Card", 23), ("csmxCard", 24), ("uds3Card", 25), ("ds3AtmCard", 26), ("n-4ether2Card", 27), ("hdlc2Card", 28), ("n-24sdslDataCard", 29), ("maddCard", 30), ("n-24sdslVoiceCard", 31), ("oc3AtmTrunkDaughterCard", 32), ("oc3AtmCard", 33), ("ether3Card", 34), ("srsEtherCard", 35), ("sdslAtmCard", 36), ("alDmtadslAtmCard", 37), ("csm3vCard", 38), ("hdlc2ecCard", 39), ("ds3AtmTrunkDaughterCard", 40), ("etherDualCard", 41), ("stm0Card", 43), ("sdslAtmV2Card", 44), ("terminatorCard", 48), ("dadslAtm24Card", 49), ("pctfitCard", 50), ("pctfieCard", 51), ("gliteAtm48Card", 52), ("ds3Atm2Card", 53), ("e3AtmCard", 54), ("ima24t1Card", 55), ("madd2Card", 56), ("hdsl2Card", 57), ("stngr32IdslCard", 58), ("annexbDadslAtmCard", 59), ("ima24E1Card", 60), ("annexcDadslAtmCard", 61), ("ether3ndCard", 62), ("clpmtCard", 63), ("clpmeCard", 64), ("e3AtmTrunkDaughterCard", 65), ("ima8T1Card", 66), ("ima8E1Card", 67), ("stngr48aAdslCard", 68), ("stngr48bAdslCard", 69), ("stngr48cAdslCard", 70), ("stngr40aAdslCard", 71), ("oc3Atm2Card", 72), ("n-4swan2Card", 73), ("cds3Lim", 74), ("r7000Card", 75), ("vpnCard", 76), ("hseCard", 77), ("madd3Card", 78), ("cmV2", 79), ("coc3Lim", 80), ("shdsl72Card", 81), ("n-2oc34ds3AtmTrunkDaughterCard", 82), ("stngr72AdslCard", 83), ("mrt36AdslCard", 84), ("n-24t1Card", 85), ("n-24e1Card", 86), ("mrtCm", 87), ("cstm1Lim", 88), ("madd3240Card", 89), ("dsntscCard", 90), ("n-2ds3Card", 91), ("n-2stm14e3AtmTrunkDaughterCard", 92), ("oc3AtmTrunkDaughterCardVer2", 93), ("enetHseCard", 94), ("ds3AtmHseCard", 95), ("oc3AtmHseCard", 96), ("gigeHseCard", 97), ("aslam32", 98), ("vdslCard", 99), ("stngr72cAdslCard", 100), ("madd3Voip480Card", 101), ("trunkModule", 102), ("n-16oc3AtmTrunkDaughterCard", 103), ("ima8t1TrunkDaughterCard", 104), ("ima8e1TrunkDaughterCard", 105), ("n-3ds3Card", 106), ("clnCard", 107), ("alpmtCard", 108), ("ipServicesModule", 110), ("alpmeCard", 111), ("stngr72GsAdslCard", 112), ("eagleXdslCard", 113), ("oc12AtmTrunkDaughterCard", 116), ("apxenetCard", 117)))).setLabel("limSparingStatusProfile-SpareSlotType").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_SpareSlotType.setStatus('mandatory')
limSparingStatusProfile_SparingMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("manual", 2), ("automatic", 3)))).setLabel("limSparingStatusProfile-SparingMode").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_SparingMode.setStatus('mandatory')
limSparingStatusProfile_SpareSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("limSparingStatusProfile-SpareSlotNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_SpareSlotNumber.setStatus('mandatory')
limSparingStatusProfile_SparedSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("limSparingStatusProfile-SparedSlotNumber").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_SparedSlotNumber.setStatus('mandatory')
limSparingStatusProfile_SparingChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("manual", 2), ("automatic", 3), ("test", 4)))).setLabel("limSparingStatusProfile-SparingChangeReason").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_SparingChangeReason.setStatus('mandatory')
limSparingStatusProfile_SparingChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1, 7), Integer32()).setLabel("limSparingStatusProfile-SparingChangeTime").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_SparingChangeTime.setStatus('mandatory')
limSparingStatusProfile_SparingChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1, 8), Integer32()).setLabel("limSparingStatusProfile-SparingChangeCounter").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_SparingChangeCounter.setStatus('mandatory')
limSparingStatusProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("limSparingStatusProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: limSparingStatusProfile_Action_o.setStatus('mandatory')
miblimSparingStatusProfile_LimSparingStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 120, 2), ).setLabel("miblimSparingStatusProfile-LimSparingStatusTable")
if mibBuilder.loadTexts: miblimSparingStatusProfile_LimSparingStatusTable.setStatus('mandatory')
miblimSparingStatusProfile_LimSparingStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 120, 2, 1), ).setLabel("miblimSparingStatusProfile-LimSparingStatusEntry").setIndexNames((0, "ASCEND-MIBSPARING-MIB", "limSparingStatusProfile-LimSparingStatus-Index-o"), (0, "ASCEND-MIBSPARING-MIB", "limSparingStatusProfile-LimSparingStatus-Index1-o"))
if mibBuilder.loadTexts: miblimSparingStatusProfile_LimSparingStatusEntry.setStatus('mandatory')
limSparingStatusProfile_LimSparingStatus_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 2, 1, 1), Integer32()).setLabel("limSparingStatusProfile-LimSparingStatus-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_LimSparingStatus_Index_o.setStatus('mandatory')
limSparingStatusProfile_LimSparingStatus_Index1_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 2, 1, 2), Integer32()).setLabel("limSparingStatusProfile-LimSparingStatus-Index1-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_LimSparingStatus_Index1_o.setStatus('mandatory')
limSparingStatusProfile_LimSparingStatus_Active = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("limSparingStatusProfile-LimSparingStatus-Active").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_LimSparingStatus_Active.setStatus('mandatory')
limSparingStatusProfile_LimSparingStatus_LimStatusOk = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("limSparingStatusProfile-LimSparingStatus-LimStatusOk").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_LimSparingStatus_LimStatusOk.setStatus('mandatory')
limSparingStatusProfile_LimSparingStatus_SparingState = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 120, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("sparingNone", 1), ("primaryActive", 2), ("primaryInactive", 3), ("secondaryActive", 4), ("secondaryInactive", 5), ("notApplicable", 6)))).setLabel("limSparingStatusProfile-LimSparingStatus-SparingState").setMaxAccess("readonly")
if mibBuilder.loadTexts: limSparingStatusProfile_LimSparingStatus_SparingState.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBSPARING-MIB", limSparingConfigProfile_PhysicalAddress_ItemNumber=limSparingConfigProfile_PhysicalAddress_ItemNumber, limSparingStatusProfile_SparedSlotNumber=limSparingStatusProfile_SparedSlotNumber, limSparingConfigProfile_PhysicalAddress_Slot=limSparingConfigProfile_PhysicalAddress_Slot, miblimSparingStatusProfile_LimSparingStatusEntry=miblimSparingStatusProfile_LimSparingStatusEntry, limSparingStatusProfile_LimSparingStatus_Index1_o=limSparingStatusProfile_LimSparingStatus_Index1_o, miblimSparingConfigProfileEntry=miblimSparingConfigProfileEntry, limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Shelf_o=limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Shelf_o, limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_PortFailureThreshold=limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_PortFailureThreshold, limSparingStatusProfile_Index_o=limSparingStatusProfile_Index_o, limSparingConfigProfile_Shelf_o=limSparingConfigProfile_Shelf_o, miblimSparingStatusProfileEntry=miblimSparingStatusProfileEntry, limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_ErrorThreshold=limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_ErrorThreshold, miblimSparingConfigProfile_AutoLimSparingConfig_LimSparingConfigEntry=miblimSparingConfigProfile_AutoLimSparingConfig_LimSparingConfigEntry, limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Active=limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Active, limSparingStatusProfile_SparingChangeTime=limSparingStatusProfile_SparingChangeTime, limSparingStatusProfile_LimSparingStatus_SparingState=limSparingStatusProfile_LimSparingStatus_SparingState, limSparingConfigProfile_ManuallySparedSlotNumber=limSparingConfigProfile_ManuallySparedSlotNumber, miblimSparingConfigProfile_AutoLimSparingConfig_LimSparingConfigTable=miblimSparingConfigProfile_AutoLimSparingConfig_LimSparingConfigTable, DisplayString=DisplayString, limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_ErrorAveragingPeriod=limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_ErrorAveragingPeriod, limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Slot_o=limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Slot_o, limSparingConfigProfile_PhysicalAddress_Shelf=limSparingConfigProfile_PhysicalAddress_Shelf, mibifSparingConfigProfileEntry=mibifSparingConfigProfileEntry, ifSparingConfigProfile_Action_o=ifSparingConfigProfile_Action_o, limSparingStatusProfile_SparingChangeCounter=limSparingStatusProfile_SparingChangeCounter, limSparingStatusProfile_Action_o=limSparingStatusProfile_Action_o, ifSparingConfigProfile_Index_o=ifSparingConfigProfile_Index_o, limSparingConfigProfile_SpareSlotNumber=limSparingConfigProfile_SpareSlotNumber, limSparingConfigProfile_SparingMode=limSparingConfigProfile_SparingMode, miblimSparingConfigProfile=miblimSparingConfigProfile, limSparingStatusProfile_LimSparingStatus_Index_o=limSparingStatusProfile_LimSparingStatus_Index_o, miblimSparingConfigProfileTable=miblimSparingConfigProfileTable, limSparingStatusProfile_LimSparingStatus_Active=limSparingStatusProfile_LimSparingStatus_Active, limSparingStatusProfile_SpareSlotNumber=limSparingStatusProfile_SpareSlotNumber, limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Index_o=limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Index_o, limSparingConfigProfile_Action_o=limSparingConfigProfile_Action_o, limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Item_o=limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_Item_o, miblimSparingStatusProfileTable=miblimSparingStatusProfileTable, limSparingStatusProfile_SparingChangeReason=limSparingStatusProfile_SparingChangeReason, limSparingStatusProfile_SpareSlotType=limSparingStatusProfile_SpareSlotType, limSparingStatusProfile_LimSparingStatus_LimStatusOk=limSparingStatusProfile_LimSparingStatus_LimStatusOk, mibifSparingConfigProfile=mibifSparingConfigProfile, limSparingConfigProfile_SpareSlotType=limSparingConfigProfile_SpareSlotType, limSparingStatusProfile_SparingMode=limSparingStatusProfile_SparingMode, miblimSparingStatusProfile=miblimSparingStatusProfile, limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_UpDownThreshold=limSparingConfigProfile_AutoLimSparingConfig_LimSparingConfig_UpDownThreshold, mibifSparingConfigProfileTable=mibifSparingConfigProfileTable, miblimSparingStatusProfile_LimSparingStatusTable=miblimSparingStatusProfile_LimSparingStatusTable, limSparingConfigProfile_Item_o=limSparingConfigProfile_Item_o, limSparingConfigProfile_Slot_o=limSparingConfigProfile_Slot_o)
