#
# PySNMP MIB module NBASE-G1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NBASE-G1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:07:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, TimeTicks, IpAddress, iso, MibIdentifier, enterprises, Integer32, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, Bits, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "IpAddress", "iso", "MibIdentifier", "enterprises", "Integer32", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "Bits", "Unsigned32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

nbase = MibIdentifier((1, 3, 6, 1, 4, 1, 629))
nbSwitchG1 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1))
nbsProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 1))
nbsSys = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 2))
nbsSysSnmpCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 3))
nbsPortCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 4))
nbsEtherInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 5))
nbsSwitchPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 6))
nbsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 7))
nbsMiniSwDb = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 8))
nbsMegaSwDb = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 9))
miniSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 1, 1))
megaSwitch208 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 1, 2))
megaSwitch215 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 1, 3))
megaFastSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 1, 4))
megaSwitchII = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 1, 5))
megaSwitch2015 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 1, 6))
megaSwitch2048 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 1, 7))
nbsSysFwVers = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysFwVers.setStatus('mandatory')
nbsSysPortsNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysPortsNumber.setStatus('mandatory')
nbsSysRestart = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("coldRestart", 2), ("warmRestart", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysRestart.setStatus('mandatory')
nbsSysNumRestarts = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysNumRestarts.setStatus('mandatory')
nbsSysLastError = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("noError", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysLastError.setStatus('mandatory')
nbsSysErrUptime = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysErrUptime.setStatus('mandatory')
nbsSysSwitchDBSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysSwitchDBSize.setStatus('mandatory')
nbsSysSetNvramDefaults = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("setDefaults", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysSetNvramDefaults.setStatus('mandatory')
nbsSysResetSwitchStats = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("resetStats", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysResetSwitchStats.setStatus('mandatory')
nbsSysStpEnable = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stpDisable", 1), ("stpEnable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysStpEnable.setStatus('mandatory')
nbsSysRunStpState = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stpDisable", 1), ("stpEnable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysRunStpState.setStatus('mandatory')
nbsSysSelftestLevel = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ststNone", 1), ("ststShort", 2), ("ststLong", 3), ("ststDiagnostics", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysSelftestLevel.setStatus('mandatory')
nbsSysFrmGen = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 2, 12))
nbsSysFrmGenSession = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idleFG", 1), ("runFG", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysFrmGenSession.setStatus('mandatory')
nbsSysFrmGenDa = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 12, 2), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysFrmGenDa.setStatus('mandatory')
nbsSysFrmGenSa = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 12, 3), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysFrmGenSa.setStatus('mandatory')
nbsSysFrmGenPktFill = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 12, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysFrmGenPktFill.setStatus('mandatory')
nbsSysFrmGenPktRate = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 12, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysFrmGenPktRate.setStatus('mandatory')
nbsSysFrmGenDestMap = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 12, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysFrmGenDestMap.setStatus('mandatory')
nbsSysFrmGenPktNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 12, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysFrmGenPktNum.setStatus('mandatory')
nbsSysFrmGenPktLen = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 12, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysFrmGenPktLen.setStatus('mandatory')
nbsSysFrmGenXmtPktNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 2, 12, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysFrmGenXmtPktNum.setStatus('mandatory')
nbsSysIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysIpAddr.setStatus('mandatory')
nbsSysNetMask = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysNetMask.setStatus('mandatory')
nbsSysBcastAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysBcastAddr.setStatus('mandatory')
nbsSysObIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysObIpAddr.setStatus('mandatory')
nbsSysObNetMask = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysObNetMask.setStatus('mandatory')
nbsSysObBcastAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysObBcastAddr.setStatus('mandatory')
nbsSysDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysDefaultGateway.setStatus('mandatory')
nbsSysReadComunity = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysReadComunity.setStatus('mandatory')
nbsSysWriteComunity = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysWriteComunity.setStatus('mandatory')
nbsSysBootpEnable = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysBootpEnable.setStatus('mandatory')
nbsSysTrapTblMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysTrapTblMaxSize.setStatus('mandatory')
nbsSysTrapTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 3, 12), )
if mibBuilder.loadTexts: nbsSysTrapTable.setStatus('mandatory')
nbsSysTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 3, 12, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsSysTrapTblEntIndex"))
if mibBuilder.loadTexts: nbsSysTrapEntry.setStatus('mandatory')
nbsSysTrapTblEntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 3, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysTrapTblEntIndex.setStatus('mandatory')
nbsSysTrapTblEntStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysTrapTblEntStatus.setStatus('mandatory')
nbsSysTrapTblEntIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 3, 12, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysTrapTblEntIpAddr.setStatus('mandatory')
nbsSysTrapTblEntComm = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 3, 12, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysTrapTblEntComm.setStatus('mandatory')
nbsSysTftpSwFileName = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysTftpSwFileName.setStatus('mandatory')
nbsSysTftpParFileName = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysTftpParFileName.setStatus('mandatory')
nbsSysSerialLineMode = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("adminIf", 1), ("slipIf", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysSerialLineMode.setStatus('mandatory')
nbsSysSerialSlipBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b9600", 1), ("b19200", 2), ("b38400", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysSerialSlipBaudRate.setStatus('mandatory')
nbsSysTelnetSession = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("disconnect", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysTelnetSession.setStatus('mandatory')
nbsSysTelnetHost = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 19), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysTelnetHost.setStatus('mandatory')
nbsSysTftpRswFileName = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysTftpRswFileName.setStatus('mandatory')
nbsSysTftpServerIP = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysTftpServerIP.setStatus('mandatory')
nbsSysInitDownload = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("activeAppl", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysInitDownload.setStatus('mandatory')
nbsSysParDownload = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysParDownload.setStatus('mandatory')
nbsSysParUpload = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysParUpload.setStatus('mandatory')
nbsSysPing = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 3, 18))
nbsSysPingSession = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idlePing", 1), ("runPing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysPingSession.setStatus('mandatory')
nbsSysPingAddr = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 18, 2), IpAddress().clone(hexValue="7F000001")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysPingAddr.setStatus('mandatory')
nbsSysPingNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 18, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSysPingNumber.setStatus('mandatory')
nbsSysPingRequests = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 18, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysPingRequests.setStatus('mandatory')
nbsSysPingResps = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 18, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysPingResps.setStatus('mandatory')
nbsSysPingOwner = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 3, 18, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("adminInterface", 1), ("snmpAgent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSysPingOwner.setStatus('mandatory')
nbsPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 4, 1), )
if mibBuilder.loadTexts: nbsPortCfgTable.setStatus('mandatory')
nbsPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsPortCfgIndex"))
if mibBuilder.loadTexts: nbsPortCfgEntry.setStatus('mandatory')
nbsPortCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortCfgIndex.setStatus('mandatory')
nbsPortCfgLanType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("none", 1), ("eth10", 2), ("eth100", 3), ("eth10-100", 4), ("eth100B", 5), ("eth1000B", 6), ("atmLane", 7), ("eth100Grp", 8), ("eth10-100Grp", 9), ("fddi", 10), ("eth100-1000", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortCfgLanType.setStatus('mandatory')
nbsPortCfgIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("aui", 1), ("tp", 2), ("auiTp", 3), ("tpfd", 4), ("coax", 5), ("foMm", 6), ("foSm", 7), ("none", 8), ("foSxM", 9), ("foLxM", 10), ("foLxS1", 11), ("foLxS2", 12), ("foLxS3", 13), ("foM", 14), ("foMX", 15), ("foS1", 16), ("foS2", 17), ("foS3", 18), ("foLxS4", 19), ("foLxS5", 20), ("foS4", 21), ("foS5", 22), ("foM-10", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortCfgIfType.setStatus('mandatory')
nbsPortCfgPortSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("aui", 2), ("tp", 3), ("asel", 4))).clone('asel')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsPortCfgPortSelect.setStatus('mandatory')
nbsPortCfgIfLink = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortCfgIfLink.setStatus('mandatory')
nbsPortCfgPortFctrl = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsPortCfgPortFctrl.setStatus('mandatory')
nbsPortCfgPortDplex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("halfDuplex", 1), ("fullDuplex", 2))).clone('halfDuplex')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsPortCfgPortDplex.setStatus('mandatory')
nbsPortCfgPortDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 8), Integer32().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsPortCfgPortDelay.setStatus('mandatory')
nbsPortCfgSpeedSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("autoSense", 1), ("force10", 2), ("force100", 3), ("force1000", 4))).clone('autoSense')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsPortCfgSpeedSelect.setStatus('mandatory')
nbsPortCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("portDisable", 1), ("portEnable", 2))).clone('portEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsPortCfgEnable.setStatus('mandatory')
nbsPortCfgIsvpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("access", 1), ("trunk", 2), ("nonIsvp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsPortCfgIsvpMode.setStatus('mandatory')
nbsPortGrpCfgNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortGrpCfgNum.setStatus('mandatory')
nbsPortGrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 4, 3), )
if mibBuilder.loadTexts: nbsPortGrpCfgTable.setStatus('mandatory')
nbsPortGrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 4, 3, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsPortGrpCfgIndex"))
if mibBuilder.loadTexts: nbsPortGrpCfgEntry.setStatus('mandatory')
nbsPortGrpCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortGrpCfgIndex.setStatus('mandatory')
nbsPortGrpCfgGrpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortGrpCfgGrpNumber.setStatus('mandatory')
nbsPortGrpCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortGrpCfgPortNumber.setStatus('mandatory')
nbsPortGrpCfgLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linkOff", 1), ("linkOn", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortGrpCfgLinkStatus.setStatus('mandatory')
nbsPortGrpCfgActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonActivity", 1), ("activity", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortGrpCfgActivity.setStatus('mandatory')
nbsEthInfoTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 5, 1), )
if mibBuilder.loadTexts: nbsEthInfoTable.setStatus('mandatory')
nbsEthInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 5, 1, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsEthInfoIndex"))
if mibBuilder.loadTexts: nbsEthInfoEntry.setStatus('mandatory')
nbsEthInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthInfoIndex.setStatus('mandatory')
nbsEthInfoCntFctrls = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 5, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthInfoCntFctrls.setStatus('mandatory')
nbsEthInfoCntExcessFctrls = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 5, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthInfoCntExcessFctrls.setStatus('mandatory')
nbsSwitchPerfTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 6, 1), )
if mibBuilder.loadTexts: nbsSwitchPerfTable.setStatus('mandatory')
nbsSwitchPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 6, 1, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsSwitchPerfIndex"))
if mibBuilder.loadTexts: nbsSwitchPerfEntry.setStatus('mandatory')
nbsSwitchPerfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSwitchPerfIndex.setStatus('mandatory')
nbsSwitchPerfMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSwitchPerfMcastPkts.setStatus('mandatory')
nbsSwitchPerfUnknPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSwitchPerfUnknPkts.setStatus('mandatory')
nbsPortFwdPerfTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 6, 2), )
if mibBuilder.loadTexts: nbsPortFwdPerfTable.setStatus('mandatory')
nbsPortFwdPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 6, 2, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsPortFwdPerfInPort"), (0, "NBASE-G1-MIB", "nbsPortFwdPerfOutPort"))
if mibBuilder.loadTexts: nbsPortFwdPerfEntry.setStatus('mandatory')
nbsPortFwdPerfInPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortFwdPerfInPort.setStatus('mandatory')
nbsPortFwdPerfOutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortFwdPerfOutPort.setStatus('mandatory')
nbsPortFwdPerfFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortFwdPerfFwdPkts.setStatus('mandatory')
nbsPortFwdPerfFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPortFwdPerfFwdBytes.setStatus('mandatory')
nbsMgmtPerfStats = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 6, 3))
nbsMgmtPerfRcvdPkts = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 6, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtPerfRcvdPkts.setStatus('mandatory')
nbsMgmtPerfRcvdBytes = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 6, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtPerfRcvdBytes.setStatus('mandatory')
nbsMgmtPerfFilterdPkts = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 6, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtPerfFilterdPkts.setStatus('mandatory')
nbsMgmtPerfRcvBcastPkts = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 6, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtPerfRcvBcastPkts.setStatus('mandatory')
nbsMgmtPerfXmtPkts = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 6, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtPerfXmtPkts.setStatus('mandatory')
nbsMgmtPerfXmtUcastPkts = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 6, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtPerfXmtUcastPkts.setStatus('mandatory')
nbsMgmtPerfXmtMcastPkts = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 6, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtPerfXmtMcastPkts.setStatus('mandatory')
nbsMgmtPerfXmtBcastPkts = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 6, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtPerfXmtBcastPkts.setStatus('mandatory')
nbsMgmtRcvPerfTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 6, 4), )
if mibBuilder.loadTexts: nbsMgmtRcvPerfTable.setStatus('mandatory')
nbsMgmtRcvPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 6, 4, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMgmtRcvPerfInPort"))
if mibBuilder.loadTexts: nbsMgmtRcvPerfEntry.setStatus('mandatory')
nbsMgmtRcvPerfInPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtRcvPerfInPort.setStatus('mandatory')
nbsMgmtRcvPerfFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtRcvPerfFwdPkts.setStatus('mandatory')
nbsMgmtRcvPerfFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtRcvPerfFwdBytes.setStatus('mandatory')
nbsMgmtXmtPerfTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 6, 5), )
if mibBuilder.loadTexts: nbsMgmtXmtPerfTable.setStatus('mandatory')
nbsMgmtXmtPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 6, 5, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMgmtXmtPerfOutPort"))
if mibBuilder.loadTexts: nbsMgmtXmtPerfEntry.setStatus('mandatory')
nbsMgmtXmtPerfOutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtXmtPerfOutPort.setStatus('mandatory')
nbsMgmtXmtPerfFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtXmtPerfFwdPkts.setStatus('mandatory')
nbsMgmtXmtPerfFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 6, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMgmtXmtPerfFwdBytes.setStatus('mandatory')
nbsMegaSwRunDb = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 9, 1))
nbsMegaSwPermDb = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 9, 2))
nbsMegaSwRunDbTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 1), )
if mibBuilder.loadTexts: nbsMegaSwRunDbTable.setStatus('mandatory')
nbsMegaSwRunDbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 1, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMegaSwRunDbIndex"))
if mibBuilder.loadTexts: nbsMegaSwRunDbEntry.setStatus('mandatory')
nbsMegaSwRunDbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunDbIndex.setStatus('mandatory')
nbsMegaSwRunDbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("system", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunDbStatus.setStatus('mandatory')
nbsMegaSwRunDbAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunDbAddr.setStatus('mandatory')
nbsMegaSwRunDbType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("virtualFilter", 1), ("customFilter", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunDbType.setStatus('mandatory')
nbsMegaSwRunDbDport = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunDbDport.setStatus('mandatory')
nbsMegaSwRunFilterTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 2), )
if mibBuilder.loadTexts: nbsMegaSwRunFilterTable.setStatus('mandatory')
nbsMegaSwRunFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 2, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMegaSwRunFilterAddr"), (0, "NBASE-G1-MIB", "nbsMegaSwRunFilterSport"))
if mibBuilder.loadTexts: nbsMegaSwRunFilterEntry.setStatus('mandatory')
nbsMegaSwRunFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("system", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5))).clone('deleteOnReset')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunFilterStatus.setStatus('mandatory')
nbsMegaSwRunFilterAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 2, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunFilterAddr.setStatus('mandatory')
nbsMegaSwRunFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("virtualFilter", 1), ("customFilter", 2))).clone('virtualFilter')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunFilterType.setStatus('mandatory')
nbsMegaSwRunFilterDport = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunFilterDport.setStatus('mandatory')
nbsMegaSwRunFilterSport = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunFilterSport.setStatus('mandatory')
nbsMegaSwRunFilterDmap = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 2, 1, 6), OctetString().clone(hexValue="ffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunFilterDmap.setStatus('mandatory')
nbsMegaSwSvlanConnectTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 3), )
if mibBuilder.loadTexts: nbsMegaSwSvlanConnectTable.setStatus('mandatory')
nbsMegaSwSvlanConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 3, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMegaSwSvlanConnectSport"))
if mibBuilder.loadTexts: nbsMegaSwSvlanConnectEntry.setStatus('mandatory')
nbsMegaSwSvlanConnectSport = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwSvlanConnectSport.setStatus('mandatory')
nbsMegaSwSvlanConnectDport = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwSvlanConnectDport.setStatus('mandatory')
nbsMegaSwRunSvlanDb = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4))
nbsMegaSwRunSvlanMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunSvlanMaxNum.setStatus('mandatory')
nbsMegaSwRunSvlanTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 2), )
if mibBuilder.loadTexts: nbsMegaSwRunSvlanTable.setStatus('mandatory')
nbsMegaSwRunSvlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 2, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMegaSwRunSvlanIndex"))
if mibBuilder.loadTexts: nbsMegaSwRunSvlanEntry.setStatus('mandatory')
nbsMegaSwRunSvlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunSvlanIndex.setStatus('mandatory')
nbsMegaSwRunSvlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunSvlanStatus.setStatus('mandatory')
nbsMegaSwRunSvlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 2, 1, 3), OctetString().clone(hexValue="ffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunSvlanList.setStatus('mandatory')
nbsMegaSwRunSvlanIsvlanFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunSvlanIsvlanFlag.setStatus('mandatory')
nbsMegaSwRunIsvlanMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunIsvlanMaxNum.setStatus('mandatory')
nbsMegaSwRunIsvlanTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 4), )
if mibBuilder.loadTexts: nbsMegaSwRunIsvlanTable.setStatus('mandatory')
nbsMegaSwRunIsvlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 4, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMegaSwRunIsvlanIndex"))
if mibBuilder.loadTexts: nbsMegaSwRunIsvlanEntry.setStatus('mandatory')
nbsMegaSwRunIsvlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunIsvlanIndex.setStatus('mandatory')
nbsMegaSwRunIsvlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("mcast", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunIsvlanStatus.setStatus('mandatory')
nbsMegaSwRunIsvlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 4, 1, 3), OctetString().clone(hexValue="ffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunIsvlanList.setStatus('mandatory')
nbsMegaSwRunIsvlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunIsvlanName.setStatus('mandatory')
nbsMegaSwRunIsvlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 4, 1, 5), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunIsvlanTag.setStatus('mandatory')
nbsMegaSwRunIsvlanVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 4, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunIsvlanVlanIndex.setStatus('mandatory')
nbsMegaSwRunVbcDb = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 5))
nbsMegaSwRunVbcMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunVbcMaxNum.setStatus('mandatory')
nbsMegaSwRunVbcTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 5, 2), )
if mibBuilder.loadTexts: nbsMegaSwRunVbcTable.setStatus('mandatory')
nbsMegaSwRunVbcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 5, 2, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMegaSwRunVbcIndex"))
if mibBuilder.loadTexts: nbsMegaSwRunVbcEntry.setStatus('mandatory')
nbsMegaSwRunVbcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwRunVbcIndex.setStatus('mandatory')
nbsMegaSwRunVbcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunVbcStatus.setStatus('mandatory')
nbsMegaSwRunVbcList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 5, 2, 1, 3), OctetString().clone(hexValue="ffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwRunVbcList.setStatus('mandatory')
nbsMegaSwVmon = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 6))
nbsMegaSwVmonMonitorPort = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwVmonMonitorPort.setStatus('mandatory')
nbsMegaSwVmonMonitrdPort = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwVmonMonitrdPort.setStatus('mandatory')
nbsMegaSwVmonStatus = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nonInit", 1), ("startMon", 2), ("stopMon", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwVmonStatus.setStatus('mandatory')
nbsMegaSwPermSvlanDb = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1))
nbsMegaSwPermSvlanMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwPermSvlanMaxNum.setStatus('mandatory')
nbsMegaSwPermSvlanTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 2), )
if mibBuilder.loadTexts: nbsMegaSwPermSvlanTable.setStatus('mandatory')
nbsMegaSwPermSvlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 2, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMegaSwPermSvlanIndex"))
if mibBuilder.loadTexts: nbsMegaSwPermSvlanEntry.setStatus('mandatory')
nbsMegaSwPermSvlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwPermSvlanIndex.setStatus('mandatory')
nbsMegaSwPermSvlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwPermSvlanStatus.setStatus('mandatory')
nbsMegaSwPermSvlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 2, 1, 3), OctetString().clone(hexValue="ffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwPermSvlanList.setStatus('mandatory')
nbsMegaSwPermIsvlanMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwPermIsvlanMaxNum.setStatus('mandatory')
nbsMegaSwPermIsvlanTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 4), )
if mibBuilder.loadTexts: nbsMegaSwPermIsvlanTable.setStatus('mandatory')
nbsMegaSwPermIsvlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 4, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMegaSwPermIsvlanIndex"))
if mibBuilder.loadTexts: nbsMegaSwPermIsvlanEntry.setStatus('mandatory')
nbsMegaSwPermIsvlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwPermIsvlanIndex.setStatus('mandatory')
nbsMegaSwPermIsvlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("mcast", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwPermIsvlanStatus.setStatus('mandatory')
nbsMegaSwPermIsvlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 4, 1, 3), OctetString().clone(hexValue="ffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwPermIsvlanList.setStatus('mandatory')
nbsMegaSwPermIsvlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwPermIsvlanName.setStatus('mandatory')
nbsMegaSwPermIsvlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 1, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwPermIsvlanTag.setStatus('mandatory')
nbsMegaSwPermVbcDb = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 2))
nbsMegaSwPermVbcMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwPermVbcMaxNum.setStatus('mandatory')
nbsMegaSwPermVbcTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 2, 2), )
if mibBuilder.loadTexts: nbsMegaSwPermVbcTable.setStatus('mandatory')
nbsMegaSwPermVbcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 2, 2, 1), ).setIndexNames((0, "NBASE-G1-MIB", "nbsMegaSwPermVbcIndex"))
if mibBuilder.loadTexts: nbsMegaSwPermVbcEntry.setStatus('mandatory')
nbsMegaSwPermVbcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsMegaSwPermVbcIndex.setStatus('mandatory')
nbsMegaSwPermVbcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwPermVbcStatus.setStatus('mandatory')
nbsMegaSwPermVbcList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 2, 2, 1, 3), OctetString().clone(hexValue="ffff")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsMegaSwPermVbcList.setStatus('mandatory')
nbsTpPermAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 9, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsTpPermAgingTime.setStatus('mandatory')
mibBuilder.exportSymbols("NBASE-G1-MIB", nbsMegaSwRunIsvlanEntry=nbsMegaSwRunIsvlanEntry, nbsMgmtPerfRcvBcastPkts=nbsMgmtPerfRcvBcastPkts, nbsMegaSwRunFilterAddr=nbsMegaSwRunFilterAddr, nbsMegaSwRunSvlanDb=nbsMegaSwRunSvlanDb, nbsMegaSwRunIsvlanMaxNum=nbsMegaSwRunIsvlanMaxNum, nbsMegaSwRunIsvlanList=nbsMegaSwRunIsvlanList, nbsSysBootpEnable=nbsSysBootpEnable, nbsSysFrmGenPktLen=nbsSysFrmGenPktLen, nbsMegaSwRunVbcDb=nbsMegaSwRunVbcDb, nbsPortGrpCfgNum=nbsPortGrpCfgNum, nbsSysFrmGenPktNum=nbsSysFrmGenPktNum, nbsEthInfoEntry=nbsEthInfoEntry, nbsPortFwdPerfTable=nbsPortFwdPerfTable, nbsMegaSwPermDb=nbsMegaSwPermDb, nbsSysTrapTblEntIpAddr=nbsSysTrapTblEntIpAddr, nbsMegaSwRunSvlanList=nbsMegaSwRunSvlanList, nbsMiniSwDb=nbsMiniSwDb, nbsMgmtXmtPerfTable=nbsMgmtXmtPerfTable, nbsEthInfoTable=nbsEthInfoTable, nbsPortGrpCfgTable=nbsPortGrpCfgTable, nbsSysTftpServerIP=nbsSysTftpServerIP, nbsSysTftpParFileName=nbsSysTftpParFileName, nbsPortFwdPerfEntry=nbsPortFwdPerfEntry, nbsMgmtXmtPerfFwdBytes=nbsMgmtXmtPerfFwdBytes, nbsPortCfg=nbsPortCfg, nbsMegaSwRunSvlanTable=nbsMegaSwRunSvlanTable, nbsMegaSwPermSvlanEntry=nbsMegaSwPermSvlanEntry, nbsMegaSwPermSvlanStatus=nbsMegaSwPermSvlanStatus, nbsMegaSwPermVbcDb=nbsMegaSwPermVbcDb, nbsMegaSwPermIsvlanEntry=nbsMegaSwPermIsvlanEntry, nbsPortCfgPortSelect=nbsPortCfgPortSelect, nbsSysFrmGenPktFill=nbsSysFrmGenPktFill, nbsPortCfgLanType=nbsPortCfgLanType, nbsMgmtPerfStats=nbsMgmtPerfStats, nbsMegaSwPermIsvlanTag=nbsMegaSwPermIsvlanTag, nbSwitchG1=nbSwitchG1, nbsEthInfoCntFctrls=nbsEthInfoCntFctrls, nbsSysFrmGenDa=nbsSysFrmGenDa, nbsPortGrpCfgIndex=nbsPortGrpCfgIndex, nbsSysWriteComunity=nbsSysWriteComunity, nbsSysSnmpCfg=nbsSysSnmpCfg, nbsSysTftpSwFileName=nbsSysTftpSwFileName, nbsSysRunStpState=nbsSysRunStpState, nbsMegaSwSvlanConnectDport=nbsMegaSwSvlanConnectDport, nbsSysLastError=nbsSysLastError, nbsEthInfoIndex=nbsEthInfoIndex, nbsProducts=nbsProducts, nbsSysParUpload=nbsSysParUpload, nbsMegaSwPermIsvlanName=nbsMegaSwPermIsvlanName, nbsPortCfgPortDelay=nbsPortCfgPortDelay, nbsMegaSwRunFilterEntry=nbsMegaSwRunFilterEntry, nbsSysSerialLineMode=nbsSysSerialLineMode, nbsPortCfgIndex=nbsPortCfgIndex, nbsSysFwVers=nbsSysFwVers, nbsSysObNetMask=nbsSysObNetMask, nbsMegaSwRunVbcStatus=nbsMegaSwRunVbcStatus, nbsMegaSwPermVbcEntry=nbsMegaSwPermVbcEntry, nbsSysFrmGenPktRate=nbsSysFrmGenPktRate, nbsMegaSwRunSvlanStatus=nbsMegaSwRunSvlanStatus, miniSwitch=miniSwitch, nbsSysTrapTblMaxSize=nbsSysTrapTblMaxSize, nbsMegaSwRunDbIndex=nbsMegaSwRunDbIndex, nbsSysStpEnable=nbsSysStpEnable, nbsMegaSwPermSvlanList=nbsMegaSwPermSvlanList, megaSwitchII=megaSwitchII, nbsPortGrpCfgGrpNumber=nbsPortGrpCfgGrpNumber, nbsSysObIpAddr=nbsSysObIpAddr, megaSwitch215=megaSwitch215, megaSwitch2015=megaSwitch2015, nbsSysPingResps=nbsSysPingResps, nbsPortCfgTable=nbsPortCfgTable, nbsSysFrmGenDestMap=nbsSysFrmGenDestMap, nbsMgmtPerfXmtMcastPkts=nbsMgmtPerfXmtMcastPkts, nbsMgmtRcvPerfTable=nbsMgmtRcvPerfTable, nbsMegaSwRunIsvlanStatus=nbsMegaSwRunIsvlanStatus, nbsMegaSwSvlanConnectEntry=nbsMegaSwSvlanConnectEntry, nbsSysSwitchDBSize=nbsSysSwitchDBSize, nbsMegaSwRunSvlanMaxNum=nbsMegaSwRunSvlanMaxNum, nbsMgmtRcvPerfFwdBytes=nbsMgmtRcvPerfFwdBytes, nbsPortCfgIsvpMode=nbsPortCfgIsvpMode, nbsPortGrpCfgLinkStatus=nbsPortGrpCfgLinkStatus, nbsMegaSwRunSvlanEntry=nbsMegaSwRunSvlanEntry, nbsMegaSwRunVbcEntry=nbsMegaSwRunVbcEntry, nbsMegaSwPermIsvlanTable=nbsMegaSwPermIsvlanTable, nbsSysTelnetSession=nbsSysTelnetSession, nbsMegaSwRunFilterDmap=nbsMegaSwRunFilterDmap, nbsSysTrapTblEntStatus=nbsSysTrapTblEntStatus, nbsMgmtXmtPerfFwdPkts=nbsMgmtXmtPerfFwdPkts, nbsMegaSwVmon=nbsMegaSwVmon, nbsMegaSwRunDbStatus=nbsMegaSwRunDbStatus, nbsPortFwdPerfOutPort=nbsPortFwdPerfOutPort, nbsMegaSwVmonStatus=nbsMegaSwVmonStatus, nbsSysPortsNumber=nbsSysPortsNumber, nbsSysObBcastAddr=nbsSysObBcastAddr, nbsSysPingOwner=nbsSysPingOwner, nbsMegaSwRunDbEntry=nbsMegaSwRunDbEntry, nbsSwitchPerfTable=nbsSwitchPerfTable, nbsMgmtRcvPerfFwdPkts=nbsMgmtRcvPerfFwdPkts, nbsMegaSwRunFilterTable=nbsMegaSwRunFilterTable, nbase=nbase, nbsMgmtPerfXmtBcastPkts=nbsMgmtPerfXmtBcastPkts, nbsMegaSwPermSvlanTable=nbsMegaSwPermSvlanTable, nbsMegaSwSvlanConnectSport=nbsMegaSwSvlanConnectSport, nbsSysPing=nbsSysPing, nbsSysTrapEntry=nbsSysTrapEntry, nbsPortCfgPortDplex=nbsPortCfgPortDplex, nbsSysReadComunity=nbsSysReadComunity, nbsSysResetSwitchStats=nbsSysResetSwitchStats, nbsMegaSwPermVbcTable=nbsMegaSwPermVbcTable, nbsMegaSwPermVbcIndex=nbsMegaSwPermVbcIndex, nbsSysNetMask=nbsSysNetMask, megaSwitch208=megaSwitch208, nbsSysSelftestLevel=nbsSysSelftestLevel, nbsSysIpAddr=nbsSysIpAddr, nbsMegaSwPermVbcStatus=nbsMegaSwPermVbcStatus, nbsEthInfoCntExcessFctrls=nbsEthInfoCntExcessFctrls, nbsMegaSwVmonMonitorPort=nbsMegaSwVmonMonitorPort, nbsMegaSwRunFilterSport=nbsMegaSwRunFilterSport, nbsMegaSwRunDb=nbsMegaSwRunDb, nbsMegaSwRunVbcIndex=nbsMegaSwRunVbcIndex, nbsPortCfgPortFctrl=nbsPortCfgPortFctrl, nbsPortCfgIfType=nbsPortCfgIfType, nbsMgmtPerfXmtUcastPkts=nbsMgmtPerfXmtUcastPkts, nbsMegaSwDb=nbsMegaSwDb, nbsSwitchPerfUnknPkts=nbsSwitchPerfUnknPkts, nbsSysPingRequests=nbsSysPingRequests, nbsMegaSwPermSvlanDb=nbsMegaSwPermSvlanDb, nbsMegaSwRunIsvlanName=nbsMegaSwRunIsvlanName, nbsSwitchPerfEntry=nbsSwitchPerfEntry, nbsSysParDownload=nbsSysParDownload, nbsMegaSwRunDbAddr=nbsMegaSwRunDbAddr, nbsSysErrUptime=nbsSysErrUptime, nbsEtherInfo=nbsEtherInfo, nbsPortFwdPerfFwdBytes=nbsPortFwdPerfFwdBytes, nbsSysTrapTblEntComm=nbsSysTrapTblEntComm, nbsSysFrmGen=nbsSysFrmGen, megaFastSwitch=megaFastSwitch, nbsPortCfgEntry=nbsPortCfgEntry, nbsPortFwdPerfInPort=nbsPortFwdPerfInPort, nbsSysDefaultGateway=nbsSysDefaultGateway, nbsPortGrpCfgPortNumber=nbsPortGrpCfgPortNumber, nbsMegaSwPermSvlanIndex=nbsMegaSwPermSvlanIndex, nbsSwitchPerfMcastPkts=nbsSwitchPerfMcastPkts, nbsMgmtXmtPerfOutPort=nbsMgmtXmtPerfOutPort, nbsMegaSwRunDbTable=nbsMegaSwRunDbTable, nbsMegaSwRunDbDport=nbsMegaSwRunDbDport, megaSwitch2048=megaSwitch2048, nbsSysBcastAddr=nbsSysBcastAddr, nbsSysFrmGenSa=nbsSysFrmGenSa, nbsMegaSwRunVbcList=nbsMegaSwRunVbcList, nbsSysTelnetHost=nbsSysTelnetHost, nbsMgmtPerfXmtPkts=nbsMgmtPerfXmtPkts, nbsPortCfgEnable=nbsPortCfgEnable, nbsMegaSwRunFilterStatus=nbsMegaSwRunFilterStatus, nbsMegaSwPermIsvlanList=nbsMegaSwPermIsvlanList, MacAddress=MacAddress, nbsMgmtPerfRcvdPkts=nbsMgmtPerfRcvdPkts, nbsMgmtRcvPerfEntry=nbsMgmtRcvPerfEntry, nbsSysNumRestarts=nbsSysNumRestarts, nbsMegaSwRunIsvlanTable=nbsMegaSwRunIsvlanTable, nbsMegaSwRunVbcMaxNum=nbsMegaSwRunVbcMaxNum, nbsSysFrmGenSession=nbsSysFrmGenSession, nbsSysTrapTblEntIndex=nbsSysTrapTblEntIndex, nbsPortFwdPerfFwdPkts=nbsPortFwdPerfFwdPkts, nbsSysTrapTable=nbsSysTrapTable, nbsSysSerialSlipBaudRate=nbsSysSerialSlipBaudRate, nbsMgmtPerfFilterdPkts=nbsMgmtPerfFilterdPkts, nbsSysPingAddr=nbsSysPingAddr, nbsPortCfgIfLink=nbsPortCfgIfLink, nbsMegaSwPermIsvlanIndex=nbsMegaSwPermIsvlanIndex, nbsMegaSwPermVbcMaxNum=nbsMegaSwPermVbcMaxNum, nbsSysPingSession=nbsSysPingSession, nbsSysRestart=nbsSysRestart, nbsSysInitDownload=nbsSysInitDownload, nbsSysSetNvramDefaults=nbsSysSetNvramDefaults, nbsMgmtRcvPerfInPort=nbsMgmtRcvPerfInPort, nbsMegaSwPermSvlanMaxNum=nbsMegaSwPermSvlanMaxNum, nbsTraps=nbsTraps, nbsPortCfgSpeedSelect=nbsPortCfgSpeedSelect, nbsMgmtXmtPerfEntry=nbsMgmtXmtPerfEntry, nbsMegaSwRunIsvlanIndex=nbsMegaSwRunIsvlanIndex, nbsMegaSwPermIsvlanStatus=nbsMegaSwPermIsvlanStatus, nbsTpPermAgingTime=nbsTpPermAgingTime, nbsMegaSwPermVbcList=nbsMegaSwPermVbcList, nbsMegaSwRunFilterDport=nbsMegaSwRunFilterDport, nbsMegaSwSvlanConnectTable=nbsMegaSwSvlanConnectTable, nbsMegaSwRunSvlanIsvlanFlag=nbsMegaSwRunSvlanIsvlanFlag, nbsSwitchPerf=nbsSwitchPerf, nbsSysPingNumber=nbsSysPingNumber, nbsMegaSwRunIsvlanVlanIndex=nbsMegaSwRunIsvlanVlanIndex, nbsMegaSwVmonMonitrdPort=nbsMegaSwVmonMonitrdPort, nbsMegaSwRunDbType=nbsMegaSwRunDbType, nbsMegaSwRunVbcTable=nbsMegaSwRunVbcTable, nbsMgmtPerfRcvdBytes=nbsMgmtPerfRcvdBytes, nbsPortGrpCfgEntry=nbsPortGrpCfgEntry, nbsMegaSwRunSvlanIndex=nbsMegaSwRunSvlanIndex, nbsMegaSwRunFilterType=nbsMegaSwRunFilterType, nbsPortGrpCfgActivity=nbsPortGrpCfgActivity, nbsSys=nbsSys, nbsMegaSwPermIsvlanMaxNum=nbsMegaSwPermIsvlanMaxNum, nbsSysTftpRswFileName=nbsSysTftpRswFileName, nbsSwitchPerfIndex=nbsSwitchPerfIndex, nbsMegaSwRunIsvlanTag=nbsMegaSwRunIsvlanTag, nbsSysFrmGenXmtPktNum=nbsSysFrmGenXmtPktNum)
