#
# PySNMP MIB module CISCO-IETF-ISIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-ISIS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:43:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
IndexIntegerNextFree, = mibBuilder.importSymbols("DIFFSERV-MIB", "IndexIntegerNextFree")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, ModuleIdentity, iso, NotificationType, Counter32, Integer32, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity, Unsigned32, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "iso", "NotificationType", "Counter32", "Integer32", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity", "Unsigned32", "Counter64", "MibIdentifier")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
ciscoIetfIsisMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 118))
ciscoIetfIsisMIB.setRevisions(('2005-08-16 12:00', '2005-02-08 12:00',))
if mibBuilder.loadTexts: ciscoIetfIsisMIB.setLastUpdated('200508161200Z')
if mibBuilder.loadTexts: ciscoIetfIsisMIB.setOrganization('Cisco Systems, Inc.')
ciscoIetfIsisMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 0))
ciscoIetfIsisMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1))
ciscoIetfIsisMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 2))
ciiSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1))
ciiSysLevel = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2))
ciiCirc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3))
ciiCircLevelValues = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4))
ciiCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5))
ciiISAdj = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6))
ciiReachAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7))
ciiIPReachAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8))
ciiLSPDataBase = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9))
ciiNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10))
class CiiOSINSAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 20)

class CiiSystemID(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class CiiLinkStatePDUID(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), )
class CiiAdminState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("on", 1), ("off", 2))

class CiiLSPBuffSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(512, 16000)

class CiiLevelState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("off", 1), ("on", 2), ("waiting", 3), ("overloaded", 4))

class CiiSupportedProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(129, 142, 204))
    namedValues = NamedValues(("iso8473", 129), ("ipV6", 142), ("ip", 204))

class CiiDefaultMetric(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 63)

class CiiWideMetric(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 16777215)

class CiiFullMetric(TextualConvention, Unsigned32):
    status = 'current'

class CiiMetricType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("internal", 1), ("external", 2))

class CiiMetricStyle(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("narrow", 1), ("wide", 2), ("both", 3))

class CiiISLevel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("area", 1), ("domain", 2))

class CiiPDUHeader(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class CiiCircuitID(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(7, 7), )
class CiiISPriority(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 127)

class CiiUnsigned16TC(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class CiiUnsigned8TC(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

ciiSysObject = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1))
ciiSysVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unknown", 0), ("one", 1))).clone('one')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysVersion.setStatus('current')
ciiSysType = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2), ("level1L2IS", 3))).clone('level1L2IS')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysType.setStatus('current')
ciiSysID = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 3), CiiSystemID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysID.setStatus('current')
ciiSysMaxPathSplits = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysMaxPathSplits.setStatus('current')
ciiSysMaxLSPGenInt = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65235)).clone(900)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysMaxLSPGenInt.setStatus('current')
ciiSysPollESHelloRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 6), CiiUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysPollESHelloRate.setStatus('current')
ciiSysWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 7), CiiUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysWaitTime.setStatus('current')
ciiSysAdminState = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 8), CiiAdminState().clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysAdminState.setStatus('current')
ciiSysL2toL1Leaking = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysL2toL1Leaking.setStatus('current')
ciiSysMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 10), CiiUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(350, 65535)).clone(1200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysMaxAge.setStatus('current')
ciiSysReceiveLSPBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 1, 11), CiiUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1492, 16000)).clone(1492)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysReceiveLSPBufferSize.setStatus('current')
ciiManAreaAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 2), )
if mibBuilder.loadTexts: ciiManAreaAddrTable.setStatus('current')
ciiManAreaAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiManAreaAddr"))
if mibBuilder.loadTexts: ciiManAreaAddrEntry.setStatus('current')
ciiManAreaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 2, 1, 1), CiiOSINSAddress())
if mibBuilder.loadTexts: ciiManAreaAddr.setStatus('current')
ciiManAreaAddrExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiManAreaAddrExistState.setStatus('current')
ciiAreaAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 3), )
if mibBuilder.loadTexts: ciiAreaAddrTable.setStatus('current')
ciiAreaAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiAreaAddr"))
if mibBuilder.loadTexts: ciiAreaAddrEntry.setStatus('current')
ciiAreaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 3, 1, 1), CiiOSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiAreaAddr.setStatus('current')
ciiSysProtSuppTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 4), )
if mibBuilder.loadTexts: ciiSysProtSuppTable.setStatus('current')
ciiSysProtSuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiSysProtSuppProtocol"))
if mibBuilder.loadTexts: ciiSysProtSuppEntry.setStatus('current')
ciiSysProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 4, 1, 1), CiiSupportedProtocol())
if mibBuilder.loadTexts: ciiSysProtSuppProtocol.setStatus('current')
ciiSysProtSuppExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiSysProtSuppExistState.setStatus('current')
ciiSummAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 5), )
if mibBuilder.loadTexts: ciiSummAddrTable.setStatus('current')
ciiSummAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiSummAddressType"), (0, "CISCO-IETF-ISIS-MIB", "ciiSummAddress"), (0, "CISCO-IETF-ISIS-MIB", "ciiSummAddrPrefixLen"))
if mibBuilder.loadTexts: ciiSummAddrEntry.setStatus('current')
ciiSummAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ciiSummAddressType.setStatus('current')
ciiSummAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 5, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: ciiSummAddress.setStatus('current')
ciiSummAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 5, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: ciiSummAddrPrefixLen.setStatus('current')
ciiSummAddrExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiSummAddrExistState.setStatus('current')
ciiSummAddrMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 5, 1, 5), CiiDefaultMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiSummAddrMetric.setStatus('current')
ciiSummAddrFullMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 5, 1, 6), CiiFullMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiSummAddrFullMetric.setStatus('current')
ciiRedistributeAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 6), )
if mibBuilder.loadTexts: ciiRedistributeAddrTable.setStatus('current')
ciiRedistributeAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiRedistributeAddrType"), (0, "CISCO-IETF-ISIS-MIB", "ciiRedistributeAddrAddress"), (0, "CISCO-IETF-ISIS-MIB", "ciiRedistributeAddrPrefixLen"))
if mibBuilder.loadTexts: ciiRedistributeAddrEntry.setStatus('current')
ciiRedistributeAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ciiRedistributeAddrType.setStatus('current')
ciiRedistributeAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 6, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: ciiRedistributeAddrAddress.setStatus('current')
ciiRedistributeAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 6, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: ciiRedistributeAddrPrefixLen.setStatus('current')
ciiRedistributeAddrExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRedistributeAddrExistState.setStatus('current')
ciiRouterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 7), )
if mibBuilder.loadTexts: ciiRouterTable.setStatus('current')
ciiRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiRouterSysID"), (0, "CISCO-IETF-ISIS-MIB", "ciiRouterLevel"))
if mibBuilder.loadTexts: ciiRouterEntry.setStatus('current')
ciiRouterSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 7, 1, 1), CiiSystemID())
if mibBuilder.loadTexts: ciiRouterSysID.setStatus('current')
ciiRouterLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 7, 1, 2), CiiISLevel())
if mibBuilder.loadTexts: ciiRouterLevel.setStatus('current')
ciiRouterHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 7, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiRouterHostName.setStatus('current')
ciiRouterID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 1, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiRouterID.setStatus('current')
ciiSysLevelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1), )
if mibBuilder.loadTexts: ciiSysLevelTable.setStatus('current')
ciiSysLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiSysLevelIndex"))
if mibBuilder.loadTexts: ciiSysLevelEntry.setStatus('current')
ciiSysLevelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2))))
if mibBuilder.loadTexts: ciiSysLevelIndex.setStatus('current')
ciiSysLevelOrigLSPBuffSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1, 2), CiiLSPBuffSize().clone(1492)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysLevelOrigLSPBuffSize.setStatus('current')
ciiSysLevelMinLSPGenInt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1, 3), CiiUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysLevelMinLSPGenInt.setStatus('current')
ciiSysLevelOverloadState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1, 4), CiiLevelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysLevelOverloadState.setStatus('current')
ciiSysLevelSetOverload = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysLevelSetOverload.setStatus('current')
ciiSysLevelSetOverloadUntil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysLevelSetOverloadUntil.setStatus('current')
ciiSysLevelMetricStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1, 7), CiiMetricStyle().clone('narrow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysLevelMetricStyle.setStatus('current')
ciiSysLevelSPFConsiders = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1, 8), CiiMetricStyle().clone('narrow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysLevelSPFConsiders.setStatus('current')
ciiSysLevelTEEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 2, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiSysLevelTEEnabled.setStatus('current')
ciiNextCircIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiNextCircIndex.setStatus('current')
ciiCircTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2), )
if mibBuilder.loadTexts: ciiCircTable.setStatus('current')
ciiCircEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiCircIndex"))
if mibBuilder.loadTexts: ciiCircEntry.setStatus('current')
ciiCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ciiCircIndex.setStatus('current')
ciiCircIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircIfIndex.setStatus('current')
ciiCircIfSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircIfSubIndex.setStatus('current')
ciiCircAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 4), CiiAdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircAdminState.setStatus('current')
ciiCircExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircExistState.setStatus('current')
ciiCircType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("broadcast", 1), ("ptToPt", 2), ("staticIn", 3), ("staticOut", 4), ("dA", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircType.setStatus('current')
ciiCircExtDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircExtDomain.setStatus('current')
ciiCircLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level1L2", 3))).clone('level1L2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircLevel.setStatus('current')
ciiCircPassiveCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircPassiveCircuit.setStatus('current')
ciiCircMeshGroupEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("blocked", 2), ("set", 3))).clone('inactive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircMeshGroupEnabled.setStatus('current')
ciiCircMeshGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircMeshGroup.setStatus('current')
ciiCircSmallHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircSmallHellos.setStatus('current')
ciiCircLastUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircLastUpTime.setStatus('current')
ciiCirc3WayEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 14), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCirc3WayEnabled.setStatus('current')
ciiCircExtendedCircID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 3, 2, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiCircExtendedCircID.setStatus('current')
ciiCircLevelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1), )
if mibBuilder.loadTexts: ciiCircLevelTable.setStatus('current')
ciiCircLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiCircIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiCircLevelIndex"))
if mibBuilder.loadTexts: ciiCircLevelEntry.setStatus('current')
ciiCircLevelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2))))
if mibBuilder.loadTexts: ciiCircLevelIndex.setStatus('current')
ciiCircLevelMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 2), CiiDefaultMetric().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelMetric.setStatus('current')
ciiCircLevelWideMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 3), CiiWideMetric().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelWideMetric.setStatus('current')
ciiCircLevelISPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 4), CiiISPriority().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelISPriority.setStatus('current')
ciiCircLevelIDOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelIDOctet.setStatus('current')
ciiCircLevelID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 6), CiiCircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircLevelID.setStatus('current')
ciiCircLevelDesIS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 7), CiiCircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircLevelDesIS.setStatus('current')
ciiCircLevelHelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelHelloMultiplier.setStatus('current')
ciiCircLevelHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600000)).clone(3000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelHelloTimer.setStatus('current')
ciiCircLevelDRHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 120000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelDRHelloTimer.setStatus('current')
ciiCircLevelLSPThrottle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 11), CiiUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelLSPThrottle.setStatus('current')
ciiCircLevelMinLSPRetransInt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelMinLSPRetransInt.setStatus('current')
ciiCircLevelCSNPInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelCSNPInterval.setStatus('current')
ciiCircLevelPartSNPInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(2)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciiCircLevelPartSNPInterval.setStatus('current')
ciiSystemCounterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1), )
if mibBuilder.loadTexts: ciiSystemCounterTable.setStatus('current')
ciiSystemCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiSysStatLevel"))
if mibBuilder.loadTexts: ciiSystemCounterEntry.setStatus('current')
ciiSysStatLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2))))
if mibBuilder.loadTexts: ciiSysStatLevel.setStatus('current')
ciiSysStatCorrLSPs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 2), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatCorrLSPs.setStatus('current')
ciiSysStatAuthTypeFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 3), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatAuthTypeFails.setStatus('current')
ciiSysStatAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatAuthFails.setStatus('current')
ciiSysStatLSPDbaseOloads = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatLSPDbaseOloads.setStatus('current')
ciiSysStatManAddrDropFromAreas = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatManAddrDropFromAreas.setStatus('current')
ciiSysStatAttmptToExMaxSeqNums = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatAttmptToExMaxSeqNums.setStatus('current')
ciiSysStatSeqNumSkips = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatSeqNumSkips.setStatus('current')
ciiSysStatOwnLSPPurges = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatOwnLSPPurges.setStatus('current')
ciiSysStatIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 10), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatIDFieldLenMismatches.setStatus('current')
ciiSysStatPartChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatPartChanges.setStatus('current')
ciiSysStatSPFRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatSPFRuns.setStatus('current')
ciiSysStatLSPErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 1, 1, 13), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiSysStatLSPErrors.setStatus('current')
ciiCircuitCounterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2), )
if mibBuilder.loadTexts: ciiCircuitCounterTable.setStatus('current')
ciiCircuitCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiCircIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiCircuitType"))
if mibBuilder.loadTexts: ciiCircuitCounterEntry.setStatus('current')
ciiCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lanlevel1", 1), ("lanlevel2", 2), ("p2pcircuit", 3))))
if mibBuilder.loadTexts: ciiCircuitType.setStatus('current')
ciiCircAdjChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircAdjChanges.setStatus('current')
ciiCircNumAdj = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircNumAdj.setStatus('current')
ciiCircInitFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircInitFails.setStatus('current')
ciiCircRejAdjs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircRejAdjs.setStatus('current')
ciiCircIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 6), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircIDFieldLenMismatches.setStatus('current')
ciiCircMaxAreaAddrMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircMaxAreaAddrMismatches.setStatus('current')
ciiCircAuthTypeFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircAuthTypeFails.setStatus('current')
ciiCircAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircAuthFails.setStatus('current')
ciiCircLANDesISChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiCircLANDesISChanges.setStatus('current')
ciiPacketCounterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3), )
if mibBuilder.loadTexts: ciiPacketCounterTable.setStatus('current')
ciiPacketCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiCircIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiPacketCountLevel"), (0, "CISCO-IETF-ISIS-MIB", "ciiPacketCountDirection"))
if mibBuilder.loadTexts: ciiPacketCounterEntry.setStatus('current')
ciiPacketCountLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2))))
if mibBuilder.loadTexts: ciiPacketCountLevel.setStatus('current')
ciiPacketCountDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sending", 1), ("receiving", 2))))
if mibBuilder.loadTexts: ciiPacketCountDirection.setStatus('current')
ciiPacketCountIIHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1, 3), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiPacketCountIIHellos.setStatus('current')
ciiPacketCountISHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiPacketCountISHellos.setStatus('current')
ciiPacketCountESHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1, 5), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiPacketCountESHellos.setStatus('current')
ciiPacketCountLSPs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1, 6), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiPacketCountLSPs.setStatus('current')
ciiPacketCountCSNPs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1, 7), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiPacketCountCSNPs.setStatus('current')
ciiPacketCountPSNPs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1, 8), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiPacketCountPSNPs.setStatus('current')
ciiPacketCountUnknowns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 5, 3, 1, 9), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiPacketCountUnknowns.setStatus('current')
ciiISAdjTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1), )
if mibBuilder.loadTexts: ciiISAdjTable.setStatus('current')
ciiISAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiCircIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiISAdjIndex"))
if mibBuilder.loadTexts: ciiISAdjEntry.setStatus('current')
ciiISAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: ciiISAdjIndex.setStatus('current')
ciiISAdjState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("initializing", 2), ("up", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjState.setStatus('current')
ciiISAdj3WayState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("up", 0), ("initializing", 1), ("down", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdj3WayState.setStatus('current')
ciiISAdjNeighSNPAAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 4), CiiOSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjNeighSNPAAddress.setStatus('current')
ciiISAdjNeighSysType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("l1IntermediateSystem", 1), ("l2IntermediateSystem", 2), ("l1L2IntermediateSystem", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjNeighSysType.setStatus('current')
ciiISAdjNeighSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 6), CiiSystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjNeighSysID.setStatus('current')
ciiISAdjNbrExtendedCircID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjNbrExtendedCircID.setStatus('current')
ciiISAdjUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level1and2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjUsage.setStatus('current')
ciiISAdjHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 9), CiiUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjHoldTimer.setStatus('current')
ciiISAdjNeighPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 10), CiiISPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjNeighPriority.setStatus('current')
ciiISAdjLastUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 1, 1, 11), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjLastUpTime.setStatus('current')
ciiISAdjAreaAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 2), )
if mibBuilder.loadTexts: ciiISAdjAreaAddrTable.setStatus('current')
ciiISAdjAreaAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 2, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiCircIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiISAdjIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiISAdjAreaAddrIndex"))
if mibBuilder.loadTexts: ciiISAdjAreaAddrEntry.setStatus('current')
ciiISAdjAreaAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: ciiISAdjAreaAddrIndex.setStatus('current')
ciiISAdjAreaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 2, 1, 2), CiiOSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjAreaAddress.setStatus('current')
ciiISAdjIPAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 3), )
if mibBuilder.loadTexts: ciiISAdjIPAddrTable.setStatus('current')
ciiISAdjIPAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 3, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiCircIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiISAdjIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiISAdjIPAddrIndex"))
if mibBuilder.loadTexts: ciiISAdjIPAddrEntry.setStatus('current')
ciiISAdjIPAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: ciiISAdjIPAddrIndex.setStatus('current')
ciiISAdjIPAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 3, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjIPAddrType.setStatus('current')
ciiISAdjIPAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 3, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjIPAddrAddress.setStatus('current')
ciiISAdjProtSuppTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 4), )
if mibBuilder.loadTexts: ciiISAdjProtSuppTable.setStatus('current')
ciiISAdjProtSuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 4, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiCircIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiISAdjIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiISAdjProtSuppProtocol"))
if mibBuilder.loadTexts: ciiISAdjProtSuppEntry.setStatus('current')
ciiISAdjProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 6, 4, 1, 1), CiiSupportedProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiISAdjProtSuppProtocol.setStatus('current')
ciiRATable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1), )
if mibBuilder.loadTexts: ciiRATable.setStatus('current')
ciiRAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiCircIndex"), (0, "CISCO-IETF-ISIS-MIB", "ciiRAIndex"))
if mibBuilder.loadTexts: ciiRAEntry.setStatus('current')
ciiRAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: ciiRAIndex.setStatus('current')
ciiRAExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRAExistState.setStatus('current')
ciiRAAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 3), CiiAdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRAAdminState.setStatus('current')
ciiRAAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 4), CiiOSINSAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRAAddrPrefix.setStatus('current')
ciiRAMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("explicit", 2), ("extractIDI", 3), ("extractDSP", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRAMapType.setStatus('current')
ciiRAMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 6), CiiDefaultMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRAMetric.setStatus('current')
ciiRAMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 7), CiiMetricType().clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRAMetricType.setStatus('current')
ciiRASNPAAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 8), CiiOSINSAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRASNPAAddress.setStatus('current')
ciiRASNPAMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 9), CiiOSINSAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRASNPAMask.setStatus('current')
ciiRASNPAPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 10), CiiOSINSAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRASNPAPrefix.setStatus('current')
ciiRAType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2))).clone('manual')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiRAType.setStatus('current')
ciiIPRATable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1), )
if mibBuilder.loadTexts: ciiIPRATable.setStatus('current')
ciiIPRAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiIPRADestType"), (0, "CISCO-IETF-ISIS-MIB", "ciiIPRADest"), (0, "CISCO-IETF-ISIS-MIB", "ciiIPRADestPrefixLen"), (0, "CISCO-IETF-ISIS-MIB", "ciiIPRANextHopIndex"))
if mibBuilder.loadTexts: ciiIPRAEntry.setStatus('current')
ciiIPRADestType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ciiIPRADestType.setStatus('current')
ciiIPRADest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: ciiIPRADest.setStatus('current')
ciiIPRADestPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: ciiIPRADestPrefixLen.setStatus('current')
ciiIPRANextHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ciiIPRANextHopIndex.setStatus('current')
ciiIPRANextHopType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiIPRANextHopType.setStatus('current')
ciiIPRANextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiIPRANextHop.setStatus('current')
ciiIPRAType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiIPRAType.setStatus('current')
ciiIPRAExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiIPRAExistState.setStatus('current')
ciiIPRAAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 9), CiiAdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiIPRAAdminState.setStatus('current')
ciiIPRAMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 10), CiiDefaultMetric().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiIPRAMetric.setStatus('current')
ciiIPRAMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 11), CiiMetricType().clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiIPRAMetricType.setStatus('current')
ciiIPRAFullMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 12), CiiFullMetric().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiIPRAFullMetric.setStatus('current')
ciiIPRASNPAAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 13), CiiOSINSAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciiIPRASNPAAddress.setStatus('current')
ciiIPRASourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 8, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("static", 1), ("direct", 2), ("ospfv2", 3), ("ospfv3", 4), ("isis", 5), ("rip", 6), ("igrp", 7), ("eigrp", 8), ("bgp", 9), ("other", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiIPRASourceType.setStatus('current')
ciiLSPSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1), )
if mibBuilder.loadTexts: ciiLSPSummaryTable.setStatus('current')
ciiLSPSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiLSPLevel"), (0, "CISCO-IETF-ISIS-MIB", "ciiLSPID"))
if mibBuilder.loadTexts: ciiLSPSummaryEntry.setStatus('current')
ciiLSPLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1, 1, 1), CiiISLevel())
if mibBuilder.loadTexts: ciiLSPLevel.setStatus('current')
ciiLSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1, 1, 2), CiiLinkStatePDUID())
if mibBuilder.loadTexts: ciiLSPID.setStatus('current')
ciiLSPSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPSeq.setStatus('current')
ciiLSPZeroLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPZeroLife.setStatus('current')
ciiLSPChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1, 1, 5), CiiUnsigned16TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPChecksum.setStatus('current')
ciiLSPLifetimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1, 1, 6), CiiUnsigned16TC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPLifetimeRemain.setStatus('current')
ciiLSPPDULength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1, 1, 7), CiiUnsigned16TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPPDULength.setStatus('current')
ciiLSPAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 1, 1, 8), CiiUnsigned8TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPAttributes.setStatus('current')
ciiLSPTLVTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 2), )
if mibBuilder.loadTexts: ciiLSPTLVTable.setStatus('current')
ciiLSPTLVEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 2, 1), ).setIndexNames((0, "CISCO-IETF-ISIS-MIB", "ciiLSPLevel"), (0, "CISCO-IETF-ISIS-MIB", "ciiLSPID"), (0, "CISCO-IETF-ISIS-MIB", "ciiLSPTLVIndex"))
if mibBuilder.loadTexts: ciiLSPTLVEntry.setStatus('current')
ciiLSPTLVIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ciiLSPTLVIndex.setStatus('current')
ciiLSPTLVSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPTLVSeq.setStatus('current')
ciiLSPTLVChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 2, 1, 3), CiiUnsigned16TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPTLVChecksum.setStatus('current')
ciiLSPTLVType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 2, 1, 4), CiiUnsigned8TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPTLVType.setStatus('current')
ciiLSPTLVLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 2, 1, 5), CiiUnsigned8TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPTLVLen.setStatus('current')
ciiLSPTLVValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 9, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciiLSPTLVValue.setStatus('current')
ciiNotificationEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1))
ciiPduLspId = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 1), CiiLinkStatePDUID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiPduLspId.setStatus('current')
ciiPduFragment = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 2), CiiPDUHeader()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiPduFragment.setStatus('current')
ciiPduFieldLen = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 3), CiiUnsigned8TC()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiPduFieldLen.setStatus('current')
ciiPduMaxAreaAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 4), CiiUnsigned8TC()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiPduMaxAreaAddress.setStatus('current')
ciiPduProtocolVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 5), CiiUnsigned8TC()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiPduProtocolVersion.setStatus('current')
ciiPduLspSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiPduLspSize.setStatus('current')
ciiPduOriginatingBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 7), CiiUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiPduOriginatingBufferSize.setStatus('current')
ciiPduProtocolsSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiPduProtocolsSupported.setStatus('current')
ciiAdjState = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("initializing", 2), ("up", 3), ("failed", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiAdjState.setStatus('current')
ciiErrorOffset = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 10), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiErrorOffset.setStatus('current')
ciiErrorTLVType = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiErrorTLVType.setStatus('current')
ciiNotifManualAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 12), CiiOSINSAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiNotifManualAddress.setStatus('current')
ciiNotifIsLevelIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 118, 1, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciiNotifIsLevelIndex.setStatus('current')
ciiDatabaseOverload = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 1)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiSysLevelOverloadState"))
if mibBuilder.loadTexts: ciiDatabaseOverload.setStatus('current')
ciiManualAddressDrops = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 2)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifManualAddress"))
if mibBuilder.loadTexts: ciiManualAddressDrops.setStatus('current')
ciiCorruptedLSPDetected = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 3)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspId"))
if mibBuilder.loadTexts: ciiCorruptedLSPDetected.setStatus('current')
ciiAttemptToExceedMaxSequence = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 4)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspId"))
if mibBuilder.loadTexts: ciiAttemptToExceedMaxSequence.setStatus('current')
ciiIDLenMismatch = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 5)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduFieldLen"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"))
if mibBuilder.loadTexts: ciiIDLenMismatch.setStatus('current')
ciiMaxAreaAddressesMismatch = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 6)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduMaxAreaAddress"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"))
if mibBuilder.loadTexts: ciiMaxAreaAddressesMismatch.setStatus('current')
ciiOwnLSPPurge = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 7)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspId"))
if mibBuilder.loadTexts: ciiOwnLSPPurge.setStatus('current')
ciiSequenceNumberSkip = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 8)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspId"))
if mibBuilder.loadTexts: ciiSequenceNumberSkip.setStatus('current')
ciiAuthenticationTypeFailure = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 9)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"))
if mibBuilder.loadTexts: ciiAuthenticationTypeFailure.setStatus('current')
ciiAuthenticationFailure = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 10)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"))
if mibBuilder.loadTexts: ciiAuthenticationFailure.setStatus('current')
ciiVersionSkew = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 11)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduProtocolVersion"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"))
if mibBuilder.loadTexts: ciiVersionSkew.setStatus('current')
ciiAreaMismatch = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 12)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"))
if mibBuilder.loadTexts: ciiAreaMismatch.setStatus('current')
ciiRejectedAdjacency = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 13)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"))
if mibBuilder.loadTexts: ciiRejectedAdjacency.setStatus('current')
ciiLSPTooLargeToPropagate = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 14)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspSize"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspId"))
if mibBuilder.loadTexts: ciiLSPTooLargeToPropagate.setStatus('current')
ciiOrigLSPBuffSizeMismatch = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 15)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspId"), ("CISCO-IETF-ISIS-MIB", "ciiPduOriginatingBufferSize"))
if mibBuilder.loadTexts: ciiOrigLSPBuffSizeMismatch.setStatus('current')
ciiProtocolsSupportedMismatch = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 16)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduProtocolsSupported"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspId"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"))
if mibBuilder.loadTexts: ciiProtocolsSupportedMismatch.setStatus('current')
ciiAdjacencyChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 17)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspId"), ("CISCO-IETF-ISIS-MIB", "ciiAdjState"))
if mibBuilder.loadTexts: ciiAdjacencyChange.setStatus('current')
ciiLSPErrorDetected = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 118, 0, 18)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspId"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"), ("CISCO-IETF-ISIS-MIB", "ciiErrorOffset"), ("CISCO-IETF-ISIS-MIB", "ciiErrorTLVType"))
if mibBuilder.loadTexts: ciiLSPErrorDetected.setStatus('current')
ciscoIetfIsisMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1))
ciscoIetfIsisMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 2))
ciscoIetfIsisMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 2, 1)).setObjects(("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisSystemGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisCircuitGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisISAdjGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisNotifObjectGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisMIBCompliance = ciscoIetfIsisMIBCompliance.setStatus('current')
ciscoIetfIsisMIBAdvCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 2, 2)).setObjects(("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisSystemGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisCircuitGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisISAdjGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisNotifObjectGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisNotificationGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisISPDUCounterGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisRATableGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisISIPRADestGroup"), ("CISCO-IETF-ISIS-MIB", "ciscoIetfIsisLSPGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisMIBAdvCompliance = ciscoIetfIsisMIBAdvCompliance.setStatus('current')
ciscoIetfIsisSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1, 1)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiSysVersion"), ("CISCO-IETF-ISIS-MIB", "ciiSysType"), ("CISCO-IETF-ISIS-MIB", "ciiSysID"), ("CISCO-IETF-ISIS-MIB", "ciiSysMaxPathSplits"), ("CISCO-IETF-ISIS-MIB", "ciiSysMaxLSPGenInt"), ("CISCO-IETF-ISIS-MIB", "ciiSysPollESHelloRate"), ("CISCO-IETF-ISIS-MIB", "ciiSysWaitTime"), ("CISCO-IETF-ISIS-MIB", "ciiSysAdminState"), ("CISCO-IETF-ISIS-MIB", "ciiSysL2toL1Leaking"), ("CISCO-IETF-ISIS-MIB", "ciiSysMaxAge"), ("CISCO-IETF-ISIS-MIB", "ciiSysLevelOrigLSPBuffSize"), ("CISCO-IETF-ISIS-MIB", "ciiSysLevelMinLSPGenInt"), ("CISCO-IETF-ISIS-MIB", "ciiSysLevelOverloadState"), ("CISCO-IETF-ISIS-MIB", "ciiSysLevelSetOverload"), ("CISCO-IETF-ISIS-MIB", "ciiSysLevelSetOverloadUntil"), ("CISCO-IETF-ISIS-MIB", "ciiSysLevelMetricStyle"), ("CISCO-IETF-ISIS-MIB", "ciiSysLevelSPFConsiders"), ("CISCO-IETF-ISIS-MIB", "ciiSysLevelTEEnabled"), ("CISCO-IETF-ISIS-MIB", "ciiSysReceiveLSPBufferSize"), ("CISCO-IETF-ISIS-MIB", "ciiManAreaAddrExistState"), ("CISCO-IETF-ISIS-MIB", "ciiAreaAddr"), ("CISCO-IETF-ISIS-MIB", "ciiSysProtSuppExistState"), ("CISCO-IETF-ISIS-MIB", "ciiSummAddrExistState"), ("CISCO-IETF-ISIS-MIB", "ciiSummAddrMetric"), ("CISCO-IETF-ISIS-MIB", "ciiSummAddrFullMetric"), ("CISCO-IETF-ISIS-MIB", "ciiRedistributeAddrExistState"), ("CISCO-IETF-ISIS-MIB", "ciiRouterHostName"), ("CISCO-IETF-ISIS-MIB", "ciiRouterID"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatCorrLSPs"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatLSPDbaseOloads"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatManAddrDropFromAreas"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatAttmptToExMaxSeqNums"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatSeqNumSkips"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatOwnLSPPurges"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatIDFieldLenMismatches"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatPartChanges"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatSPFRuns"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatAuthTypeFails"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatAuthFails"), ("CISCO-IETF-ISIS-MIB", "ciiSysStatLSPErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisSystemGroup = ciscoIetfIsisSystemGroup.setStatus('current')
ciscoIetfIsisCircuitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1, 2)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiNextCircIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfSubIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircAdminState"), ("CISCO-IETF-ISIS-MIB", "ciiCircExistState"), ("CISCO-IETF-ISIS-MIB", "ciiCircType"), ("CISCO-IETF-ISIS-MIB", "ciiCircExtDomain"), ("CISCO-IETF-ISIS-MIB", "ciiCircAdjChanges"), ("CISCO-IETF-ISIS-MIB", "ciiCircNumAdj"), ("CISCO-IETF-ISIS-MIB", "ciiCircInitFails"), ("CISCO-IETF-ISIS-MIB", "ciiCircRejAdjs"), ("CISCO-IETF-ISIS-MIB", "ciiCircIDFieldLenMismatches"), ("CISCO-IETF-ISIS-MIB", "ciiCircMaxAreaAddrMismatches"), ("CISCO-IETF-ISIS-MIB", "ciiCircAuthTypeFails"), ("CISCO-IETF-ISIS-MIB", "ciiCircAuthFails"), ("CISCO-IETF-ISIS-MIB", "ciiCircLANDesISChanges"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevel"), ("CISCO-IETF-ISIS-MIB", "ciiCircPassiveCircuit"), ("CISCO-IETF-ISIS-MIB", "ciiCircMeshGroupEnabled"), ("CISCO-IETF-ISIS-MIB", "ciiCircMeshGroup"), ("CISCO-IETF-ISIS-MIB", "ciiCircSmallHellos"), ("CISCO-IETF-ISIS-MIB", "ciiCircLastUpTime"), ("CISCO-IETF-ISIS-MIB", "ciiCirc3WayEnabled"), ("CISCO-IETF-ISIS-MIB", "ciiCircExtendedCircID"), ("CISCO-IETF-ISIS-MIB", "ciiCircIfIndex"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelMetric"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelWideMetric"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelISPriority"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelIDOctet"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelID"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelDesIS"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelHelloMultiplier"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelHelloTimer"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelDRHelloTimer"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelLSPThrottle"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelMinLSPRetransInt"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelCSNPInterval"), ("CISCO-IETF-ISIS-MIB", "ciiCircLevelPartSNPInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisCircuitGroup = ciscoIetfIsisCircuitGroup.setStatus('current')
ciscoIetfIsisISAdjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1, 3)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiISAdjState"), ("CISCO-IETF-ISIS-MIB", "ciiISAdj3WayState"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjNeighSNPAAddress"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjNeighSysType"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjNeighSysID"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjNbrExtendedCircID"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjUsage"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjHoldTimer"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjNeighPriority"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjLastUpTime"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjAreaAddress"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjIPAddrType"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjIPAddrAddress"), ("CISCO-IETF-ISIS-MIB", "ciiISAdjProtSuppProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisISAdjGroup = ciscoIetfIsisISAdjGroup.setStatus('current')
ciscoIetfIsisNotifObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1, 4)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiPduLspId"), ("CISCO-IETF-ISIS-MIB", "ciiPduFragment"), ("CISCO-IETF-ISIS-MIB", "ciiPduFieldLen"), ("CISCO-IETF-ISIS-MIB", "ciiPduMaxAreaAddress"), ("CISCO-IETF-ISIS-MIB", "ciiPduProtocolVersion"), ("CISCO-IETF-ISIS-MIB", "ciiPduLspSize"), ("CISCO-IETF-ISIS-MIB", "ciiPduOriginatingBufferSize"), ("CISCO-IETF-ISIS-MIB", "ciiPduProtocolsSupported"), ("CISCO-IETF-ISIS-MIB", "ciiAdjState"), ("CISCO-IETF-ISIS-MIB", "ciiErrorOffset"), ("CISCO-IETF-ISIS-MIB", "ciiErrorTLVType"), ("CISCO-IETF-ISIS-MIB", "ciiNotifManualAddress"), ("CISCO-IETF-ISIS-MIB", "ciiNotifIsLevelIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisNotifObjectGroup = ciscoIetfIsisNotifObjectGroup.setStatus('current')
ciscoIetfIsisNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1, 5)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiDatabaseOverload"), ("CISCO-IETF-ISIS-MIB", "ciiManualAddressDrops"), ("CISCO-IETF-ISIS-MIB", "ciiCorruptedLSPDetected"), ("CISCO-IETF-ISIS-MIB", "ciiAttemptToExceedMaxSequence"), ("CISCO-IETF-ISIS-MIB", "ciiIDLenMismatch"), ("CISCO-IETF-ISIS-MIB", "ciiMaxAreaAddressesMismatch"), ("CISCO-IETF-ISIS-MIB", "ciiOwnLSPPurge"), ("CISCO-IETF-ISIS-MIB", "ciiSequenceNumberSkip"), ("CISCO-IETF-ISIS-MIB", "ciiAuthenticationTypeFailure"), ("CISCO-IETF-ISIS-MIB", "ciiAuthenticationFailure"), ("CISCO-IETF-ISIS-MIB", "ciiVersionSkew"), ("CISCO-IETF-ISIS-MIB", "ciiAreaMismatch"), ("CISCO-IETF-ISIS-MIB", "ciiRejectedAdjacency"), ("CISCO-IETF-ISIS-MIB", "ciiLSPTooLargeToPropagate"), ("CISCO-IETF-ISIS-MIB", "ciiOrigLSPBuffSizeMismatch"), ("CISCO-IETF-ISIS-MIB", "ciiProtocolsSupportedMismatch"), ("CISCO-IETF-ISIS-MIB", "ciiAdjacencyChange"), ("CISCO-IETF-ISIS-MIB", "ciiLSPErrorDetected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisNotificationGroup = ciscoIetfIsisNotificationGroup.setStatus('current')
ciscoIetfIsisISPDUCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1, 6)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiPacketCountIIHellos"), ("CISCO-IETF-ISIS-MIB", "ciiPacketCountISHellos"), ("CISCO-IETF-ISIS-MIB", "ciiPacketCountESHellos"), ("CISCO-IETF-ISIS-MIB", "ciiPacketCountLSPs"), ("CISCO-IETF-ISIS-MIB", "ciiPacketCountCSNPs"), ("CISCO-IETF-ISIS-MIB", "ciiPacketCountPSNPs"), ("CISCO-IETF-ISIS-MIB", "ciiPacketCountUnknowns"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisISPDUCounterGroup = ciscoIetfIsisISPDUCounterGroup.setStatus('current')
ciscoIetfIsisRATableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1, 7)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiRAExistState"), ("CISCO-IETF-ISIS-MIB", "ciiRAAdminState"), ("CISCO-IETF-ISIS-MIB", "ciiRAAddrPrefix"), ("CISCO-IETF-ISIS-MIB", "ciiRAMapType"), ("CISCO-IETF-ISIS-MIB", "ciiRAMetric"), ("CISCO-IETF-ISIS-MIB", "ciiRAMetricType"), ("CISCO-IETF-ISIS-MIB", "ciiRASNPAAddress"), ("CISCO-IETF-ISIS-MIB", "ciiRASNPAMask"), ("CISCO-IETF-ISIS-MIB", "ciiRASNPAPrefix"), ("CISCO-IETF-ISIS-MIB", "ciiRAType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisRATableGroup = ciscoIetfIsisRATableGroup.setStatus('current')
ciscoIetfIsisISIPRADestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1, 8)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiIPRANextHopType"), ("CISCO-IETF-ISIS-MIB", "ciiIPRANextHop"), ("CISCO-IETF-ISIS-MIB", "ciiIPRAType"), ("CISCO-IETF-ISIS-MIB", "ciiIPRAExistState"), ("CISCO-IETF-ISIS-MIB", "ciiIPRAAdminState"), ("CISCO-IETF-ISIS-MIB", "ciiIPRAMetric"), ("CISCO-IETF-ISIS-MIB", "ciiIPRAFullMetric"), ("CISCO-IETF-ISIS-MIB", "ciiIPRAMetricType"), ("CISCO-IETF-ISIS-MIB", "ciiIPRASNPAAddress"), ("CISCO-IETF-ISIS-MIB", "ciiIPRASourceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisISIPRADestGroup = ciscoIetfIsisISIPRADestGroup.setStatus('current')
ciscoIetfIsisLSPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 118, 2, 1, 9)).setObjects(("CISCO-IETF-ISIS-MIB", "ciiLSPSeq"), ("CISCO-IETF-ISIS-MIB", "ciiLSPZeroLife"), ("CISCO-IETF-ISIS-MIB", "ciiLSPChecksum"), ("CISCO-IETF-ISIS-MIB", "ciiLSPLifetimeRemain"), ("CISCO-IETF-ISIS-MIB", "ciiLSPPDULength"), ("CISCO-IETF-ISIS-MIB", "ciiLSPAttributes"), ("CISCO-IETF-ISIS-MIB", "ciiLSPTLVSeq"), ("CISCO-IETF-ISIS-MIB", "ciiLSPTLVChecksum"), ("CISCO-IETF-ISIS-MIB", "ciiLSPTLVType"), ("CISCO-IETF-ISIS-MIB", "ciiLSPTLVLen"), ("CISCO-IETF-ISIS-MIB", "ciiLSPTLVValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIetfIsisLSPGroup = ciscoIetfIsisLSPGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IETF-ISIS-MIB", ciiCircuitCounterTable=ciiCircuitCounterTable, ciiISAdjUsage=ciiISAdjUsage, ciiAdjState=ciiAdjState, ciiRedistributeAddrTable=ciiRedistributeAddrTable, ciiPacketCountESHellos=ciiPacketCountESHellos, ciiSystem=ciiSystem, ciiLSPTooLargeToPropagate=ciiLSPTooLargeToPropagate, ciiManualAddressDrops=ciiManualAddressDrops, ciiManAreaAddr=ciiManAreaAddr, ciiSysStatIDFieldLenMismatches=ciiSysStatIDFieldLenMismatches, ciiRouterEntry=ciiRouterEntry, CiiLevelState=CiiLevelState, ciscoIetfIsisISAdjGroup=ciscoIetfIsisISAdjGroup, ciiRASNPAPrefix=ciiRASNPAPrefix, ciiDatabaseOverload=ciiDatabaseOverload, ciiISAdjNeighSysID=ciiISAdjNeighSysID, CiiUnsigned16TC=CiiUnsigned16TC, ciiCircLevelHelloTimer=ciiCircLevelHelloTimer, ciiSysStatLSPErrors=ciiSysStatLSPErrors, ciiCircIfIndex=ciiCircIfIndex, ciiPduMaxAreaAddress=ciiPduMaxAreaAddress, ciiProtocolsSupportedMismatch=ciiProtocolsSupportedMismatch, ciiSysStatLevel=ciiSysStatLevel, ciiRAMapType=ciiRAMapType, ciiAdjacencyChange=ciiAdjacencyChange, ciiCircExtDomain=ciiCircExtDomain, ciiCircLevelEntry=ciiCircLevelEntry, ciiRAType=ciiRAType, ciiCircLevelTable=ciiCircLevelTable, ciiSysReceiveLSPBufferSize=ciiSysReceiveLSPBufferSize, ciiSummAddrFullMetric=ciiSummAddrFullMetric, ciiCircMeshGroup=ciiCircMeshGroup, ciiPacketCounterEntry=ciiPacketCounterEntry, ciiNotificationEntry=ciiNotificationEntry, ciiPduLspSize=ciiPduLspSize, ciiPduProtocolsSupported=ciiPduProtocolsSupported, ciiLSPChecksum=ciiLSPChecksum, ciiRedistributeAddrType=ciiRedistributeAddrType, ciiNotifManualAddress=ciiNotifManualAddress, ciiISAdjState=ciiISAdjState, ciiRedistributeAddrExistState=ciiRedistributeAddrExistState, ciiSysLevelMinLSPGenInt=ciiSysLevelMinLSPGenInt, ciiManAreaAddrExistState=ciiManAreaAddrExistState, ciiISAdjTable=ciiISAdjTable, ciiPacketCountISHellos=ciiPacketCountISHellos, ciiPacketCountLevel=ciiPacketCountLevel, ciiIPRATable=ciiIPRATable, ciiISAdjHoldTimer=ciiISAdjHoldTimer, ciiAreaAddrTable=ciiAreaAddrTable, ciiCounters=ciiCounters, ciiRedistributeAddrEntry=ciiRedistributeAddrEntry, ciiCircuitCounterEntry=ciiCircuitCounterEntry, ciiLSPTLVTable=ciiLSPTLVTable, ciiSysVersion=ciiSysVersion, ciiCircInitFails=ciiCircInitFails, ciiCircAuthTypeFails=ciiCircAuthTypeFails, ciiCircLevelWideMetric=ciiCircLevelWideMetric, ciiLSPZeroLife=ciiLSPZeroLife, ciiSysLevelSetOverloadUntil=ciiSysLevelSetOverloadUntil, ciiPacketCountIIHellos=ciiPacketCountIIHellos, ciiRAIndex=ciiRAIndex, ciiLSPErrorDetected=ciiLSPErrorDetected, ciiCorruptedLSPDetected=ciiCorruptedLSPDetected, ciiLSPDataBase=ciiLSPDataBase, ciiAreaAddr=ciiAreaAddr, ciiVersionSkew=ciiVersionSkew, ciiSysL2toL1Leaking=ciiSysL2toL1Leaking, ciiSysProtSuppProtocol=ciiSysProtSuppProtocol, ciscoIetfIsisMIBGroups=ciscoIetfIsisMIBGroups, ciiPacketCountCSNPs=ciiPacketCountCSNPs, ciscoIetfIsisMIBCompliance=ciscoIetfIsisMIBCompliance, ciiLSPID=ciiLSPID, ciscoIetfIsisISPDUCounterGroup=ciscoIetfIsisISPDUCounterGroup, ciiPacketCountUnknowns=ciiPacketCountUnknowns, ciiISAdjAreaAddrTable=ciiISAdjAreaAddrTable, ciiISAdjProtSuppTable=ciiISAdjProtSuppTable, ciiSysMaxLSPGenInt=ciiSysMaxLSPGenInt, PYSNMP_MODULE_ID=ciscoIetfIsisMIB, ciiIPRADestType=ciiIPRADestType, ciiRedistributeAddrAddress=ciiRedistributeAddrAddress, ciiCircLevelCSNPInterval=ciiCircLevelCSNPInterval, ciiIPReachAddr=ciiIPReachAddr, ciiCircLevelID=ciiCircLevelID, ciiISAdjAreaAddrEntry=ciiISAdjAreaAddrEntry, ciscoIetfIsisNotifObjectGroup=ciscoIetfIsisNotifObjectGroup, ciiCircLastUpTime=ciiCircLastUpTime, ciiCircNumAdj=ciiCircNumAdj, ciiSysLevelEntry=ciiSysLevelEntry, CiiDefaultMetric=CiiDefaultMetric, ciiSysLevelSPFConsiders=ciiSysLevelSPFConsiders, CiiFullMetric=CiiFullMetric, ciiErrorTLVType=ciiErrorTLVType, ciiCircAdjChanges=ciiCircAdjChanges, ciscoIetfIsisNotificationGroup=ciscoIetfIsisNotificationGroup, ciiCircLevelMinLSPRetransInt=ciiCircLevelMinLSPRetransInt, ciiSysID=ciiSysID, ciiLSPTLVType=ciiLSPTLVType, ciiIPRANextHopType=ciiIPRANextHopType, ciiSysStatSeqNumSkips=ciiSysStatSeqNumSkips, ciiAttemptToExceedMaxSequence=ciiAttemptToExceedMaxSequence, ciscoIetfIsisCircuitGroup=ciscoIetfIsisCircuitGroup, ciiAreaAddrEntry=ciiAreaAddrEntry, ciiCircMaxAreaAddrMismatches=ciiCircMaxAreaAddrMismatches, ciiRAAdminState=ciiRAAdminState, ciiISAdjEntry=ciiISAdjEntry, CiiSupportedProtocol=CiiSupportedProtocol, ciiSysLevelOverloadState=ciiSysLevelOverloadState, ciiAreaMismatch=ciiAreaMismatch, ciiSysProtSuppEntry=ciiSysProtSuppEntry, CiiPDUHeader=CiiPDUHeader, ciiSequenceNumberSkip=ciiSequenceNumberSkip, ciiRouterTable=ciiRouterTable, ciiPacketCountDirection=ciiPacketCountDirection, ciiRAMetricType=ciiRAMetricType, ciiSysStatAuthFails=ciiSysStatAuthFails, ciiCircuitType=ciiCircuitType, ciiISAdjNeighSNPAAddress=ciiISAdjNeighSNPAAddress, ciiSysMaxAge=ciiSysMaxAge, ciiISAdjIPAddrAddress=ciiISAdjIPAddrAddress, ciiCirc3WayEnabled=ciiCirc3WayEnabled, ciiISAdjNeighPriority=ciiISAdjNeighPriority, ciscoIetfIsisMIBNotifs=ciscoIetfIsisMIBNotifs, ciiLSPSeq=ciiLSPSeq, ciiIPRANextHop=ciiIPRANextHop, ciiPduFieldLen=ciiPduFieldLen, ciiRejectedAdjacency=ciiRejectedAdjacency, ciiCircLevelLSPThrottle=ciiCircLevelLSPThrottle, ciiSysType=ciiSysType, ciiCircIfSubIndex=ciiCircIfSubIndex, ciiRouterHostName=ciiRouterHostName, ciiCircIndex=ciiCircIndex, CiiWideMetric=CiiWideMetric, ciiCircIDFieldLenMismatches=ciiCircIDFieldLenMismatches, ciiIPRAExistState=ciiIPRAExistState, ciiRAMetric=ciiRAMetric, ciiSysLevelIndex=ciiSysLevelIndex, ciiLSPTLVLen=ciiLSPTLVLen, ciiPduFragment=ciiPduFragment, ciiSysStatSPFRuns=ciiSysStatSPFRuns, ciscoIetfIsisMIBAdvCompliance=ciscoIetfIsisMIBAdvCompliance, ciiCircPassiveCircuit=ciiCircPassiveCircuit, ciiPacketCounterTable=ciiPacketCounterTable, ciiSysStatLSPDbaseOloads=ciiSysStatLSPDbaseOloads, ciiSysAdminState=ciiSysAdminState, CiiLSPBuffSize=CiiLSPBuffSize, ciiSysStatOwnLSPPurges=ciiSysStatOwnLSPPurges, ciiISAdj3WayState=ciiISAdj3WayState, ciscoIetfIsisSystemGroup=ciscoIetfIsisSystemGroup, ciiRouterLevel=ciiRouterLevel, ciiCirc=ciiCirc, ciscoIetfIsisISIPRADestGroup=ciscoIetfIsisISIPRADestGroup, ciiReachAddr=ciiReachAddr, CiiISPriority=CiiISPriority, ciiRAEntry=ciiRAEntry, ciiLSPSummaryTable=ciiLSPSummaryTable, ciiLSPSummaryEntry=ciiLSPSummaryEntry, ciiErrorOffset=ciiErrorOffset, ciiSysLevelMetricStyle=ciiSysLevelMetricStyle, ciiCircLevelHelloMultiplier=ciiCircLevelHelloMultiplier, ciiLSPPDULength=ciiLSPPDULength, ciiRedistributeAddrPrefixLen=ciiRedistributeAddrPrefixLen, CiiOSINSAddress=CiiOSINSAddress, ciiNotifIsLevelIndex=ciiNotifIsLevelIndex, ciiISAdjNeighSysType=ciiISAdjNeighSysType, ciiRAAddrPrefix=ciiRAAddrPrefix, ciiCircLevelDesIS=ciiCircLevelDesIS, ciiNextCircIndex=ciiNextCircIndex, ciiIDLenMismatch=ciiIDLenMismatch, ciiSysStatAttmptToExMaxSeqNums=ciiSysStatAttmptToExMaxSeqNums, ciiManAreaAddrTable=ciiManAreaAddrTable, ciiSystemCounterEntry=ciiSystemCounterEntry, ciiLSPLifetimeRemain=ciiLSPLifetimeRemain, CiiLinkStatePDUID=CiiLinkStatePDUID, ciiLSPTLVEntry=ciiLSPTLVEntry, ciiSysWaitTime=ciiSysWaitTime, ciiCircLevelDRHelloTimer=ciiCircLevelDRHelloTimer, ciiSummAddressType=ciiSummAddressType, ciscoIetfIsisMIBObjects=ciscoIetfIsisMIBObjects, ciiSummAddrTable=ciiSummAddrTable, ciscoIetfIsisMIBConform=ciscoIetfIsisMIBConform, ciiIPRAEntry=ciiIPRAEntry, ciiIPRAMetricType=ciiIPRAMetricType, ciiSysProtSuppExistState=ciiSysProtSuppExistState, ciiSysStatPartChanges=ciiSysStatPartChanges, CiiUnsigned8TC=CiiUnsigned8TC, ciiCircAuthFails=ciiCircAuthFails, ciscoIetfIsisRATableGroup=ciscoIetfIsisRATableGroup, ciiCircTable=ciiCircTable, ciiAuthenticationFailure=ciiAuthenticationFailure, ciiCircLevelValues=ciiCircLevelValues, ciiISAdjAreaAddrIndex=ciiISAdjAreaAddrIndex, ciiSysLevelOrigLSPBuffSize=ciiSysLevelOrigLSPBuffSize, ciiSysLevelTEEnabled=ciiSysLevelTEEnabled, ciiSummAddrPrefixLen=ciiSummAddrPrefixLen, ciiIPRASNPAAddress=ciiIPRASNPAAddress, ciiCircType=ciiCircType, ciiISAdjIPAddrTable=ciiISAdjIPAddrTable, ciiISAdjProtSuppProtocol=ciiISAdjProtSuppProtocol, ciiPduOriginatingBufferSize=ciiPduOriginatingBufferSize, ciiIPRADest=ciiIPRADest, ciiLSPTLVSeq=ciiLSPTLVSeq, ciiIPRAFullMetric=ciiIPRAFullMetric, ciiRASNPAMask=ciiRASNPAMask, ciiLSPTLVIndex=ciiLSPTLVIndex, CiiISLevel=CiiISLevel, ciiCircLevelMetric=ciiCircLevelMetric, ciiISAdjNbrExtendedCircID=ciiISAdjNbrExtendedCircID, ciiIPRANextHopIndex=ciiIPRANextHopIndex, ciiISAdjIPAddrEntry=ciiISAdjIPAddrEntry, ciiLSPLevel=ciiLSPLevel, ciscoIetfIsisMIB=ciscoIetfIsisMIB, ciiSysStatCorrLSPs=ciiSysStatCorrLSPs, ciiLSPTLVChecksum=ciiLSPTLVChecksum, ciiIPRADestPrefixLen=ciiIPRADestPrefixLen, ciiCircRejAdjs=ciiCircRejAdjs, CiiAdminState=CiiAdminState, ciiCircAdminState=ciiCircAdminState, ciiCircEntry=ciiCircEntry, ciiSystemCounterTable=ciiSystemCounterTable, ciiISAdjIPAddrIndex=ciiISAdjIPAddrIndex, ciiOwnLSPPurge=ciiOwnLSPPurge, ciiCircExistState=ciiCircExistState, ciiRouterID=ciiRouterID, ciiCircLevel=ciiCircLevel, ciiSysLevel=ciiSysLevel, ciiSummAddrMetric=ciiSummAddrMetric, ciiIPRAType=ciiIPRAType, ciiISAdjLastUpTime=ciiISAdjLastUpTime, ciiSysMaxPathSplits=ciiSysMaxPathSplits, ciiPacketCountLSPs=ciiPacketCountLSPs, ciiRAExistState=ciiRAExistState, ciiSysObject=ciiSysObject, ciiCircMeshGroupEnabled=ciiCircMeshGroupEnabled, CiiMetricStyle=CiiMetricStyle, ciiRASNPAAddress=ciiRASNPAAddress, ciiPduProtocolVersion=ciiPduProtocolVersion, ciiCircLevelIndex=ciiCircLevelIndex, ciiCircLANDesISChanges=ciiCircLANDesISChanges, ciiPacketCountPSNPs=ciiPacketCountPSNPs, ciiAuthenticationTypeFailure=ciiAuthenticationTypeFailure, ciiManAreaAddrEntry=ciiManAreaAddrEntry, ciiIPRAMetric=ciiIPRAMetric, ciiSysPollESHelloRate=ciiSysPollESHelloRate, ciiRATable=ciiRATable, ciiMaxAreaAddressesMismatch=ciiMaxAreaAddressesMismatch, ciiSysStatAuthTypeFails=ciiSysStatAuthTypeFails, ciiISAdjIPAddrType=ciiISAdjIPAddrType, CiiCircuitID=CiiCircuitID, ciiSysLevelTable=ciiSysLevelTable, CiiMetricType=CiiMetricType, ciscoIetfIsisMIBCompliances=ciscoIetfIsisMIBCompliances, ciiSysStatManAddrDropFromAreas=ciiSysStatManAddrDropFromAreas, ciiCircExtendedCircID=ciiCircExtendedCircID, ciiISAdjIndex=ciiISAdjIndex)
mibBuilder.exportSymbols("CISCO-IETF-ISIS-MIB", ciiSysProtSuppTable=ciiSysProtSuppTable, ciiSummAddrEntry=ciiSummAddrEntry, ciiCircLevelIDOctet=ciiCircLevelIDOctet, ciiISAdj=ciiISAdj, ciiSummAddress=ciiSummAddress, ciiISAdjProtSuppEntry=ciiISAdjProtSuppEntry, ciscoIetfIsisLSPGroup=ciscoIetfIsisLSPGroup, ciiNotification=ciiNotification, ciiPduLspId=ciiPduLspId, ciiRouterSysID=ciiRouterSysID, ciiLSPAttributes=ciiLSPAttributes, CiiSystemID=CiiSystemID, ciiCircLevelPartSNPInterval=ciiCircLevelPartSNPInterval, ciiLSPTLVValue=ciiLSPTLVValue, ciiCircLevelISPriority=ciiCircLevelISPriority, ciiIPRASourceType=ciiIPRASourceType, ciiISAdjAreaAddress=ciiISAdjAreaAddress, ciiCircSmallHellos=ciiCircSmallHellos, ciiSysLevelSetOverload=ciiSysLevelSetOverload, ciiIPRAAdminState=ciiIPRAAdminState, ciiSummAddrExistState=ciiSummAddrExistState, ciiOrigLSPBuffSizeMismatch=ciiOrigLSPBuffSizeMismatch)
