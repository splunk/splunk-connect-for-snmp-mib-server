#
# PySNMP MIB module OMNI-gx2Dm200-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OMNI-gx2Dm200-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:23:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
gx2Dm200, = mibBuilder.importSymbols("GX2HFC-MIB", "gx2Dm200")
trapPerceivedSeverity, trapNetworkElemModelNumber, trapNETrapLastTrapTimeStamp, trapIdentifier, trapChangedObjectId, trapNetworkElemAdminState, trapNetworkElemSerialNum, trapNetworkElemAvailStatus, trapChangedValueDisplayString, trapText, trapChangedValueInteger, trapNetworkElemAlarmStatus, trapNetworkElemOperState = mibBuilder.importSymbols("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity", "trapNetworkElemModelNumber", "trapNETrapLastTrapTimeStamp", "trapIdentifier", "trapChangedObjectId", "trapNetworkElemAdminState", "trapNetworkElemSerialNum", "trapNetworkElemAvailStatus", "trapChangedValueDisplayString", "trapText", "trapChangedValueInteger", "trapNetworkElemAlarmStatus", "trapNetworkElemOperState")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Unsigned32, NotificationType, Gauge32, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, NotificationType, Integer32, ModuleIdentity, Counter64, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "NotificationType", "Gauge32", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "NotificationType", "Integer32", "ModuleIdentity", "Counter64", "MibIdentifier", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class Float(Counter32):
    pass

gx2Dm200Descriptor = MibIdentifier((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 1))
gx2Dm200AnalogTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2), )
if mibBuilder.loadTexts: gx2Dm200AnalogTable.setStatus('mandatory')
gx2Dm200AnalogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1), ).setIndexNames((0, "OMNI-gx2Dm200-MIB", "gx2Dm200AnalogTableIndex"))
if mibBuilder.loadTexts: gx2Dm200AnalogEntry.setStatus('mandatory')
gx2Dm200DigitalTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3), )
if mibBuilder.loadTexts: gx2Dm200DigitalTable.setStatus('mandatory')
gx2Dm200DigitalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2), ).setIndexNames((0, "OMNI-gx2Dm200-MIB", "gx2Dm200DigitalTableIndex"))
if mibBuilder.loadTexts: gx2Dm200DigitalEntry.setStatus('mandatory')
gx2Dm200StatusTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4), )
if mibBuilder.loadTexts: gx2Dm200StatusTable.setStatus('mandatory')
gx2Dm200StatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3), ).setIndexNames((0, "OMNI-gx2Dm200-MIB", "gx2Dm200StatusTableIndex"))
if mibBuilder.loadTexts: gx2Dm200StatusEntry.setStatus('mandatory')
gx2Dm200FactoryTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5), )
if mibBuilder.loadTexts: gx2Dm200FactoryTable.setStatus('mandatory')
gx2Dm200FactoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4), ).setIndexNames((0, "OMNI-gx2Dm200-MIB", "gx2Dm200FactoryTableIndex"))
if mibBuilder.loadTexts: gx2Dm200FactoryEntry.setStatus('mandatory')
gx2Dm200AnalogTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Dm200AnalogTableIndex.setStatus('mandatory')
dm200labelOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelOffsetNomMonitor.setStatus('optional')
dm200uomOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200uomOffsetNomMonitor.setStatus('optional')
dm200majorHighOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 4), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorHighOffsetNomMonitor.setStatus('obsolete')
dm200majorLowOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 5), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorLowOffsetNomMonitor.setStatus('obsolete')
dm200minorHighOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 6), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorHighOffsetNomMonitor.setStatus('obsolete')
dm200minorLowOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 7), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorLowOffsetNomMonitor.setStatus('obsolete')
dm200currentValueOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 8), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200currentValueOffsetNomMonitor.setStatus('mandatory')
dm200stateFlagOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateFlagOffsetNomMonitor.setStatus('mandatory')
dm200minValueOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 10), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minValueOffsetNomMonitor.setStatus('mandatory')
dm200maxValueOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 11), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200maxValueOffsetNomMonitor.setStatus('mandatory')
dm200alarmStateOffsetNomMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200alarmStateOffsetNomMonitor.setStatus('mandatory')
dm200labelAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelAttenSetting.setStatus('optional')
dm200uomAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200uomAttenSetting.setStatus('optional')
dm200majorHighAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 15), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorHighAttenSetting.setStatus('obsolete')
dm200majorLowAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 16), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorLowAttenSetting.setStatus('obsolete')
dm200minorHighAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 17), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorHighAttenSetting.setStatus('obsolete')
dm200minorLowAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 18), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorLowAttenSetting.setStatus('obsolete')
dm200currentValueAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 19), Float()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dm200currentValueAttenSetting.setStatus('mandatory')
dm200stateFlagAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateFlagAttenSetting.setStatus('mandatory')
dm200minValueAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 21), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minValueAttenSetting.setStatus('mandatory')
dm200maxValueAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 22), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200maxValueAttenSetting.setStatus('mandatory')
dm200alarmStateAttenSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200alarmStateAttenSetting.setStatus('mandatory')
dm200labelLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelLaserPower.setStatus('optional')
dm200uomLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200uomLaserPower.setStatus('optional')
dm200majorHighLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 26), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorHighLaserPower.setStatus('mandatory')
dm200majorLowLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 27), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorLowLaserPower.setStatus('mandatory')
dm200minorHighLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 28), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorHighLaserPower.setStatus('obsolete')
dm200minorLowLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 29), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorLowLaserPower.setStatus('obsolete')
dm200currentValueLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 30), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200currentValueLaserPower.setStatus('mandatory')
dm200stateFlagLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateFlagLaserPower.setStatus('mandatory')
dm200minValueLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 32), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minValueLaserPower.setStatus('mandatory')
dm200maxValueLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 33), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200maxValueLaserPower.setStatus('mandatory')
dm200alarmStateLaserPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200alarmStateLaserPower.setStatus('mandatory')
dm200labelLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelLaserTemp.setStatus('optional')
dm200uomLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200uomLaserTemp.setStatus('optional')
dm200majorHighLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 37), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorHighLaserTemp.setStatus('mandatory')
dm200majorLowLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 38), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorLowLaserTemp.setStatus('mandatory')
dm200minorHighLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 39), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorHighLaserTemp.setStatus('obsolete')
dm200minorLowLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 40), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorLowLaserTemp.setStatus('obsolete')
dm200currentValueLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 41), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200currentValueLaserTemp.setStatus('mandatory')
dm200stateFlagLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateFlagLaserTemp.setStatus('mandatory')
dm200minValueLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 43), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minValueLaserTemp.setStatus('mandatory')
dm200maxValueLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 44), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200maxValueLaserTemp.setStatus('mandatory')
dm200alarmStateLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200alarmStateLaserTemp.setStatus('mandatory')
dm200labelLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelLaserCurrent.setStatus('optional')
dm200uomLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200uomLaserCurrent.setStatus('optional')
dm200majorHighLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 48), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorHighLaserCurrent.setStatus('mandatory')
dm200majorLowLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 49), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorLowLaserCurrent.setStatus('mandatory')
dm200minorHighLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 50), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorHighLaserCurrent.setStatus('obsolete')
dm200minorLowLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 51), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorLowLaserCurrent.setStatus('obsolete')
dm200currentValueLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 52), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200currentValueLaserCurrent.setStatus('mandatory')
dm200stateFlagLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateFlagLaserCurrent.setStatus('mandatory')
dm200minValueLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 54), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minValueLaserCurrent.setStatus('mandatory')
dm200maxValueLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 55), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200maxValueLaserCurrent.setStatus('mandatory')
dm200alarmStateLaserCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200alarmStateLaserCurrent.setStatus('mandatory')
dm200labelTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelTecCurrent.setStatus('optional')
dm200uomTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200uomTecCurrent.setStatus('optional')
dm200majorHighTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 59), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorHighTecCurrent.setStatus('mandatory')
dm200majorLowTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 60), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorLowTecCurrent.setStatus('mandatory')
dm200minorHighTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 61), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorHighTecCurrent.setStatus('obsolete')
dm200minorLowTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 62), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorLowTecCurrent.setStatus('obsolete')
dm200currentValueTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 63), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200currentValueTecCurrent.setStatus('mandatory')
dm200stateFlagTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateFlagTecCurrent.setStatus('mandatory')
dm200minValueTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 65), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minValueTecCurrent.setStatus('mandatory')
dm200maxValueTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 66), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200maxValueTecCurrent.setStatus('mandatory')
dm200alarmStateTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200alarmStateTecCurrent.setStatus('mandatory')
dm200labelModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelModTemp.setStatus('optional')
dm200uomModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200uomModTemp.setStatus('optional')
dm200majorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 70), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorHighModTemp.setStatus('mandatory')
dm200majorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 71), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorLowModTemp.setStatus('mandatory')
dm200minorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 72), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorHighModTemp.setStatus('mandatory')
dm200minorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 73), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorLowModTemp.setStatus('mandatory')
dm200currentValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 74), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200currentValueModTemp.setStatus('mandatory')
dm200stateFlagModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateFlagModTemp.setStatus('mandatory')
dm200minValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 76), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minValueModTemp.setStatus('mandatory')
dm200maxValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 77), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200maxValueModTemp.setStatus('mandatory')
dm200alarmStateModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200alarmStateModTemp.setStatus('mandatory')
dm200labelFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelFanCurrent.setStatus('optional')
dm200uomFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200uomFanCurrent.setStatus('optional')
dm200majorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 81), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorHighFanCurrent.setStatus('mandatory')
dm200majorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 82), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200majorLowFanCurrent.setStatus('mandatory')
dm200minorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 83), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorHighFanCurrent.setStatus('obsolete')
dm200minorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 84), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minorLowFanCurrent.setStatus('obsolete')
dm200currentValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 85), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200currentValueFanCurrent.setStatus('mandatory')
dm200stateFlagFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateFlagFanCurrent.setStatus('mandatory')
dm200minValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 87), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200minValueFanCurrent.setStatus('mandatory')
dm200maxValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 88), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200maxValueFanCurrent.setStatus('mandatory')
dm200alarmStateFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 2, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200alarmStateFanCurrent.setStatus('mandatory')
gx2Dm200DigitalTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Dm200DigitalTableIndex.setStatus('mandatory')
dm200labelRfInput = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelRfInput.setStatus('optional')
dm200enumRfInput = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200enumRfInput.setStatus('optional')
dm200valueRfInput = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dm200valueRfInput.setStatus('mandatory')
dm200stateflagRfInput = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagRfInput.setStatus('mandatory')
dm200labelOptOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelOptOutput.setStatus('optional')
dm200enumOptOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200enumOptOutput.setStatus('optional')
dm200valueOptOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dm200valueOptOutput.setStatus('mandatory')
dm200stateflagOptOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagOptOutput.setStatus('mandatory')
dm200labelSbsControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelSbsControl.setStatus('optional')
dm200enumSbsControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200enumSbsControl.setStatus('optional')
dm200valueSbsControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dm200valueSbsControl.setStatus('mandatory')
dm200stateflagSbsControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagSbsControl.setStatus('mandatory')
dm200labelFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelFactoryDefault.setStatus('optional')
dm200enumFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200enumFactoryDefault.setStatus('optional')
dm200valueFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dm200valueFactoryDefault.setStatus('mandatory')
dm200stateflagFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 3, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagFactoryDefault.setStatus('mandatory')
gx2Dm200StatusTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Dm200StatusTableIndex.setStatus('mandatory')
dm200labelBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelBoot.setStatus('optional')
dm200valueBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200valueBoot.setStatus('mandatory')
dm200stateflagBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagBoot.setStatus('mandatory')
dm200labelFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelFlash.setStatus('optional')
dm200valueFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200valueFlash.setStatus('mandatory')
dm200stateflagFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagFlash.setStatus('mandatory')
dm200labelFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelFactoryDataCRC.setStatus('optional')
dm200valueFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200valueFactoryDataCRC.setStatus('mandatory')
dm200stateflagFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagFactoryDataCRC.setStatus('mandatory')
dm200labelLaserDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelLaserDataCRC.setStatus('optional')
dm200valueLaserDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200valueLaserDataCRC.setStatus('mandatory')
dm200stateflagLaserDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagLaserDataCRC.setStatus('mandatory')
dm200labelAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelAlarmDataCrc.setStatus('optional')
dm200valueAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200valueAlarmDataCrc.setStatus('mandatory')
dm200stateflagAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagAlarmDataCrc.setStatus('mandatory')
dm200labelRFInputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200labelRFInputStatus.setStatus('optional')
dm200valueRFInputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200valueRFInputStatus.setStatus('mandatory')
dm200stateflagRFInputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 4, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200stateflagRFInputStatus.setStatus('mandatory')
gx2Dm200FactoryTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Dm200FactoryTableIndex.setStatus('mandatory')
dm200bootControlByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200bootControlByte.setStatus('mandatory')
dm200bootStatusByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200bootStatusByte.setStatus('mandatory')
dm200bank1CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200bank1CRC.setStatus('mandatory')
dm200bank2CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200bank2CRC.setStatus('mandatory')
dm200prgEEPROMByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200prgEEPROMByte.setStatus('mandatory')
dm200factoryCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200factoryCRC.setStatus('mandatory')
dm200calculateCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("factory", 1), ("na", 2), ("alarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200calculateCRC.setStatus('obsolete')
dm200hourMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200hourMeter.setStatus('mandatory')
dm200flashPrgCntA = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200flashPrgCntA.setStatus('mandatory')
dm200flashPrgCntB = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200flashPrgCntB.setStatus('mandatory')
dm200flashBankARev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200flashBankARev.setStatus('mandatory')
dm200flashBankBRev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19, 5, 4, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dm200flashBankBRev.setStatus('mandatory')
trapDM200ConfigChangeInteger = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,1)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200ConfigChangeDisplayString = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,2)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueDisplayString"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200fanCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,3)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200ModuleTempAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,4)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200omiOffsetAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,5)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200tecCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,6)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200LaserCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,7)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200LaserTempAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,8)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200LaserPowerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,9)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200FlashAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,10)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200BankBootAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,11)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200AlarmDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,12)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200FactoryDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,13)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200CalDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,14)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200ResetFacDefault = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,15)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200UserRFOffAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,16)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200UserOpticalOffAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,17)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200UserSBSOffAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,18)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200RFInputAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,19)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapDM200RFOverloadAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 19) + (0,20)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
mibBuilder.exportSymbols("OMNI-gx2Dm200-MIB", dm200labelOptOutput=dm200labelOptOutput, dm200minValueLaserCurrent=dm200minValueLaserCurrent, dm200valueFactoryDefault=dm200valueFactoryDefault, dm200minValueFanCurrent=dm200minValueFanCurrent, dm200labelRfInput=dm200labelRfInput, dm200stateflagLaserDataCRC=dm200stateflagLaserDataCRC, Float=Float, dm200labelAttenSetting=dm200labelAttenSetting, gx2Dm200AnalogEntry=gx2Dm200AnalogEntry, dm200labelLaserPower=dm200labelLaserPower, dm200maxValueFanCurrent=dm200maxValueFanCurrent, dm200stateflagRfInput=dm200stateflagRfInput, dm200stateFlagOffsetNomMonitor=dm200stateFlagOffsetNomMonitor, dm200majorLowAttenSetting=dm200majorLowAttenSetting, dm200majorLowTecCurrent=dm200majorLowTecCurrent, gx2Dm200DigitalTable=gx2Dm200DigitalTable, dm200uomLaserTemp=dm200uomLaserTemp, dm200majorHighModTemp=dm200majorHighModTemp, dm200valueFlash=dm200valueFlash, trapDM200FlashAlarm=trapDM200FlashAlarm, dm200stateFlagLaserPower=dm200stateFlagLaserPower, dm200currentValueFanCurrent=dm200currentValueFanCurrent, dm200labelLaserTemp=dm200labelLaserTemp, dm200enumOptOutput=dm200enumOptOutput, dm200labelRFInputStatus=dm200labelRFInputStatus, dm200majorHighLaserTemp=dm200majorHighLaserTemp, dm200flashPrgCntA=dm200flashPrgCntA, dm200minorHighFanCurrent=dm200minorHighFanCurrent, dm200stateFlagLaserTemp=dm200stateFlagLaserTemp, dm200minorLowLaserPower=dm200minorLowLaserPower, dm200majorLowLaserCurrent=dm200majorLowLaserCurrent, dm200alarmStateModTemp=dm200alarmStateModTemp, dm200bank2CRC=dm200bank2CRC, dm200uomOffsetNomMonitor=dm200uomOffsetNomMonitor, gx2Dm200FactoryTableIndex=gx2Dm200FactoryTableIndex, dm200uomFanCurrent=dm200uomFanCurrent, dm200bootControlByte=dm200bootControlByte, trapDM200LaserCurrentAlarm=trapDM200LaserCurrentAlarm, dm200labelOffsetNomMonitor=dm200labelOffsetNomMonitor, dm200labelFlash=dm200labelFlash, dm200minorHighLaserCurrent=dm200minorHighLaserCurrent, trapDM200LaserPowerAlarm=trapDM200LaserPowerAlarm, dm200stateflagRFInputStatus=dm200stateflagRFInputStatus, dm200currentValueLaserCurrent=dm200currentValueLaserCurrent, dm200minValueAttenSetting=dm200minValueAttenSetting, trapDM200ConfigChangeInteger=trapDM200ConfigChangeInteger, dm200stateflagOptOutput=dm200stateflagOptOutput, dm200maxValueOffsetNomMonitor=dm200maxValueOffsetNomMonitor, dm200currentValueLaserPower=dm200currentValueLaserPower, gx2Dm200StatusEntry=gx2Dm200StatusEntry, dm200valueFactoryDataCRC=dm200valueFactoryDataCRC, dm200labelLaserCurrent=dm200labelLaserCurrent, dm200bootStatusByte=dm200bootStatusByte, gx2Dm200DigitalEntry=gx2Dm200DigitalEntry, dm200minorHighTecCurrent=dm200minorHighTecCurrent, dm200majorLowLaserTemp=dm200majorLowLaserTemp, trapDM200BankBootAlarm=trapDM200BankBootAlarm, dm200alarmStateTecCurrent=dm200alarmStateTecCurrent, dm200currentValueAttenSetting=dm200currentValueAttenSetting, dm200alarmStateOffsetNomMonitor=dm200alarmStateOffsetNomMonitor, dm200minorHighLaserTemp=dm200minorHighLaserTemp, dm200currentValueOffsetNomMonitor=dm200currentValueOffsetNomMonitor, dm200minorHighLaserPower=dm200minorHighLaserPower, dm200stateflagFactoryDefault=dm200stateflagFactoryDefault, dm200alarmStateFanCurrent=dm200alarmStateFanCurrent, dm200valueRfInput=dm200valueRfInput, dm200minValueLaserTemp=dm200minValueLaserTemp, dm200minorHighAttenSetting=dm200minorHighAttenSetting, dm200minValueTecCurrent=dm200minValueTecCurrent, trapDM200AlarmDataCRCAlarm=trapDM200AlarmDataCRCAlarm, gx2Dm200Descriptor=gx2Dm200Descriptor, dm200currentValueLaserTemp=dm200currentValueLaserTemp, dm200minValueOffsetNomMonitor=dm200minValueOffsetNomMonitor, dm200majorLowLaserPower=dm200majorLowLaserPower, dm200stateflagAlarmDataCrc=dm200stateflagAlarmDataCrc, dm200flashBankBRev=dm200flashBankBRev, trapDM200FactoryDataCRCAlarm=trapDM200FactoryDataCRCAlarm, dm200valueAlarmDataCrc=dm200valueAlarmDataCrc, dm200valueRFInputStatus=dm200valueRFInputStatus, dm200majorHighLaserPower=dm200majorHighLaserPower, dm200stateFlagLaserCurrent=dm200stateFlagLaserCurrent, dm200flashBankARev=dm200flashBankARev, dm200enumSbsControl=dm200enumSbsControl, trapDM200ResetFacDefault=trapDM200ResetFacDefault, dm200stateFlagModTemp=dm200stateFlagModTemp, dm200majorHighAttenSetting=dm200majorHighAttenSetting, dm200enumFactoryDefault=dm200enumFactoryDefault, dm200majorHighFanCurrent=dm200majorHighFanCurrent, dm200labelFanCurrent=dm200labelFanCurrent, dm200maxValueAttenSetting=dm200maxValueAttenSetting, dm200minorLowAttenSetting=dm200minorLowAttenSetting, dm200maxValueLaserTemp=dm200maxValueLaserTemp, dm200minorLowOffsetNomMonitor=dm200minorLowOffsetNomMonitor, gx2Dm200StatusTableIndex=gx2Dm200StatusTableIndex, dm200alarmStateAttenSetting=dm200alarmStateAttenSetting, gx2Dm200StatusTable=gx2Dm200StatusTable, dm200uomLaserPower=dm200uomLaserPower, dm200minorHighModTemp=dm200minorHighModTemp, dm200stateflagBoot=dm200stateflagBoot, dm200uomAttenSetting=dm200uomAttenSetting, dm200uomTecCurrent=dm200uomTecCurrent, dm200minValueLaserPower=dm200minValueLaserPower, dm200factoryCRC=dm200factoryCRC, trapDM200RFOverloadAlarm=trapDM200RFOverloadAlarm, trapDM200CalDataCRCAlarm=trapDM200CalDataCRCAlarm, dm200prgEEPROMByte=dm200prgEEPROMByte, dm200valueSbsControl=dm200valueSbsControl, dm200labelFactoryDefault=dm200labelFactoryDefault, trapDM200UserOpticalOffAlarm=trapDM200UserOpticalOffAlarm, dm200maxValueTecCurrent=dm200maxValueTecCurrent, dm200valueOptOutput=dm200valueOptOutput, dm200majorLowModTemp=dm200majorLowModTemp, dm200uomLaserCurrent=dm200uomLaserCurrent, dm200labelFactoryDataCRC=dm200labelFactoryDataCRC, dm200valueBoot=dm200valueBoot, dm200maxValueLaserPower=dm200maxValueLaserPower, dm200labelLaserDataCRC=dm200labelLaserDataCRC, dm200uomModTemp=dm200uomModTemp, dm200labelSbsControl=dm200labelSbsControl, trapDM200ConfigChangeDisplayString=trapDM200ConfigChangeDisplayString, dm200stateflagFlash=dm200stateflagFlash, trapDM200UserRFOffAlarm=trapDM200UserRFOffAlarm, dm200alarmStateLaserCurrent=dm200alarmStateLaserCurrent, trapDM200ModuleTempAlarm=trapDM200ModuleTempAlarm, dm200majorLowFanCurrent=dm200majorLowFanCurrent, dm200stateflagFactoryDataCRC=dm200stateflagFactoryDataCRC, dm200currentValueTecCurrent=dm200currentValueTecCurrent, dm200currentValueModTemp=dm200currentValueModTemp, dm200alarmStateLaserPower=dm200alarmStateLaserPower, trapDM200RFInputAlarm=trapDM200RFInputAlarm, trapDM200UserSBSOffAlarm=trapDM200UserSBSOffAlarm, dm200stateFlagAttenSetting=dm200stateFlagAttenSetting, dm200minorHighOffsetNomMonitor=dm200minorHighOffsetNomMonitor, gx2Dm200AnalogTable=gx2Dm200AnalogTable, gx2Dm200FactoryEntry=gx2Dm200FactoryEntry, dm200calculateCRC=dm200calculateCRC, dm200labelTecCurrent=dm200labelTecCurrent, trapDM200omiOffsetAlarm=trapDM200omiOffsetAlarm, dm200minorLowLaserCurrent=dm200minorLowLaserCurrent, dm200alarmStateLaserTemp=dm200alarmStateLaserTemp, dm200stateFlagTecCurrent=dm200stateFlagTecCurrent, dm200maxValueModTemp=dm200maxValueModTemp, dm200minorLowFanCurrent=dm200minorLowFanCurrent, dm200majorLowOffsetNomMonitor=dm200majorLowOffsetNomMonitor, dm200hourMeter=dm200hourMeter, dm200majorHighLaserCurrent=dm200majorHighLaserCurrent, dm200majorHighOffsetNomMonitor=dm200majorHighOffsetNomMonitor, trapDM200LaserTempAlarm=trapDM200LaserTempAlarm, dm200minorLowLaserTemp=dm200minorLowLaserTemp, dm200valueLaserDataCRC=dm200valueLaserDataCRC, dm200labelAlarmDataCrc=dm200labelAlarmDataCrc, dm200majorHighTecCurrent=dm200majorHighTecCurrent, dm200enumRfInput=dm200enumRfInput, dm200stateflagSbsControl=dm200stateflagSbsControl, dm200bank1CRC=dm200bank1CRC, dm200stateFlagFanCurrent=dm200stateFlagFanCurrent, gx2Dm200AnalogTableIndex=gx2Dm200AnalogTableIndex, trapDM200fanCurrentAlarm=trapDM200fanCurrentAlarm, dm200flashPrgCntB=dm200flashPrgCntB, dm200minorLowModTemp=dm200minorLowModTemp, trapDM200tecCurrentAlarm=trapDM200tecCurrentAlarm, dm200maxValueLaserCurrent=dm200maxValueLaserCurrent, gx2Dm200FactoryTable=gx2Dm200FactoryTable, dm200minorLowTecCurrent=dm200minorLowTecCurrent, dm200labelModTemp=dm200labelModTemp, dm200labelBoot=dm200labelBoot, gx2Dm200DigitalTableIndex=gx2Dm200DigitalTableIndex, dm200minValueModTemp=dm200minValueModTemp)
