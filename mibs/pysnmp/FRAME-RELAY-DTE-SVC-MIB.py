#
# PySNMP MIB module FRAME-RELAY-DTE-SVC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FRAME-RELAY-DTE-SVC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:02:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
DLCI, frame_relay = mibBuilder.importSymbols("RFC1315-MIB", "DLCI", "frame-relay")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, NotificationType, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, Integer32, Unsigned32, Counter64, ObjectIdentity, MibIdentifier, TimeTicks, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "Integer32", "Unsigned32", "Counter64", "ObjectIdentity", "MibIdentifier", "TimeTicks", "NotificationType", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
DisplayString, TimeStamp, RowStatus = mibBuilder.importSymbols("SNMPv2-TC-v1", "DisplayString", "TimeStamp", "RowStatus")
frameRelayDteSvc = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 7))
frDteSvc = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 7, 1))
frSvcDlcmiTable = MibTable((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1), )
if mibBuilder.loadTexts: frSvcDlcmiTable.setStatus('mandatory')
frSvcDlcmiEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1), ).setIndexNames((0, "FRAME-RELAY-DTE-SVC-MIB", "frSvcDlcmiIfIndex"))
if mibBuilder.loadTexts: frSvcDlcmiEntry.setStatus('mandatory')
frSvcDlcmiIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcDlcmiIfIndex.setStatus('mandatory')
frSvcDlcmiState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("q933SVC", 1), ("x36", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiState.setStatus('mandatory')
frSvcDlcmiMaxNumCalls = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcDlcmiMaxNumCalls.setStatus('mandatory')
frSvcDlcmiCallSetupTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 4), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiCallSetupTimer.setStatus('mandatory')
frSvcDlcmiCallProceedingTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 5), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiCallProceedingTimer.setStatus('mandatory')
frSvcDlcmiCallDisconnectTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 6), Integer32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiCallDisconnectTimer.setStatus('mandatory')
frSvcDlcmiCallReleaseTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 7), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiCallReleaseTimer.setStatus('mandatory')
frSvcDlcmiStatusEnquiryTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 8), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiStatusEnquiryTimer.setStatus('mandatory')
frSvcDlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiErrorThreshold.setStatus('mandatory')
frSvcDlcmiResetSentTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 10), Integer32().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiResetSentTimer.setStatus('mandatory')
frSvcDlcmiResetAckTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiResetAckTimer.setStatus('mandatory')
frSvcDlcmiIdleTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 12), Integer32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiIdleTimer.setStatus('mandatory')
frSvcDlcmiRetransmissionTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 13), TimeTicks().clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiRetransmissionTimer.setStatus('mandatory')
frSvcDlcmiNumRetransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 14), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiNumRetransmissions.setStatus('mandatory')
frSvcDlcmiMaxInfoFieldSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 15), Integer32().clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiMaxInfoFieldSize.setStatus('mandatory')
frSvcDlcmiMaxInfoFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcDlcmiMaxInfoFrames.setStatus('mandatory')
frSvcDlcmiQ922State = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("teiUnassigned", 1), ("assignAwaitingTei", 2), ("establishingAwaitingTei", 3), ("teiAssigned", 4), ("awaitingEstablishment", 5), ("awaitingRelease", 6), ("multipleFrameEstablished", 7), ("timerRecovery", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcDlcmiQ922State.setStatus('mandatory')
frSvcTable = MibTable((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2), )
if mibBuilder.loadTexts: frSvcTable.setStatus('mandatory')
frSvcEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1), ).setIndexNames((0, "FRAME-RELAY-DTE-SVC-MIB", "frSvcIfIndex"), (0, "FRAME-RELAY-DTE-SVC-MIB", "frSvcDlci"))
if mibBuilder.loadTexts: frSvcEntry.setStatus('mandatory')
frSvcIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcIfIndex.setStatus('mandatory')
frSvcDlci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 2), DLCI()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcDlci.setStatus('mandatory')
frSvcReceivedFECNs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcReceivedFECNs.setStatus('mandatory')
frSvcReceivedBECNs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcReceivedBECNs.setStatus('mandatory')
frSvcSentFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcSentFrames.setStatus('mandatory')
frSvcSentOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcSentOctets.setStatus('mandatory')
frSvcReceivedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcReceivedFrames.setStatus('mandatory')
frSvcReceivedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcReceivedOctets.setStatus('mandatory')
frSvcCreationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcCreationTime.setStatus('mandatory')
frSvcInMaxFmifSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 10), Integer32().clone(262)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcInMaxFmifSize.setStatus('mandatory')
frSvcOutMaxFmifSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 11), Integer32().clone(262)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcOutMaxFmifSize.setStatus('mandatory')
frSvcInCommittedBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcInCommittedBurst.setStatus('mandatory')
frSvcOutCommittedBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcOutCommittedBurst.setStatus('mandatory')
frSvcInExcessBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcInExcessBurst.setStatus('mandatory')
frSvcOutExcessBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcOutExcessBurst.setStatus('mandatory')
frSvcInCIR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcInCIR.setStatus('mandatory')
frSvcOutCIR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcOutCIR.setStatus('mandatory')
frSvcInMinCIR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcInMinCIR.setStatus('mandatory')
frSvcOutMinCIR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcOutMinCIR.setStatus('mandatory')
frSvcState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inProcess", 1), ("complete", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcState.setStatus('mandatory')
frSvcCallReferenceValue = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcCallReferenceValue.setStatus('mandatory')
frSvcCallingAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcCallingAddr.setStatus('mandatory')
frSvcCallingSubAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcCallingSubAddr.setStatus('mandatory')
frSvcCalledAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcCalledAddr.setStatus('mandatory')
frSvcCalledSubAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcCalledSubAddr.setStatus('mandatory')
frSvcCallSetup = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("setup", 1), ("disconnect", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frSvcCallSetup.setStatus('mandatory')
frSvcCallOrigination = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 7, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("remote", 1), ("local", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frSvcCallOrigination.setStatus('mandatory')
mibBuilder.exportSymbols("FRAME-RELAY-DTE-SVC-MIB", frSvcDlcmiCallSetupTimer=frSvcDlcmiCallSetupTimer, frSvcEntry=frSvcEntry, frSvcOutMaxFmifSize=frSvcOutMaxFmifSize, frSvcInCIR=frSvcInCIR, frSvcState=frSvcState, frSvcCallSetup=frSvcCallSetup, frSvcDlcmiMaxInfoFieldSize=frSvcDlcmiMaxInfoFieldSize, frSvcCallingAddr=frSvcCallingAddr, frSvcReceivedOctets=frSvcReceivedOctets, frSvcDlcmiCallReleaseTimer=frSvcDlcmiCallReleaseTimer, frSvcIfIndex=frSvcIfIndex, frSvcDlcmiMaxNumCalls=frSvcDlcmiMaxNumCalls, frSvcDlcmiEntry=frSvcDlcmiEntry, frameRelayDteSvc=frameRelayDteSvc, frSvcInExcessBurst=frSvcInExcessBurst, frSvcInMaxFmifSize=frSvcInMaxFmifSize, frSvcOutCommittedBurst=frSvcOutCommittedBurst, frSvcOutCIR=frSvcOutCIR, frSvcDlcmiNumRetransmissions=frSvcDlcmiNumRetransmissions, frSvcSentOctets=frSvcSentOctets, frDteSvc=frDteSvc, frSvcReceivedFECNs=frSvcReceivedFECNs, frSvcReceivedBECNs=frSvcReceivedBECNs, frSvcCallReferenceValue=frSvcCallReferenceValue, frSvcDlcmiMaxInfoFrames=frSvcDlcmiMaxInfoFrames, frSvcDlcmiCallProceedingTimer=frSvcDlcmiCallProceedingTimer, frSvcCalledSubAddr=frSvcCalledSubAddr, frSvcTable=frSvcTable, frSvcDlcmiCallDisconnectTimer=frSvcDlcmiCallDisconnectTimer, frSvcReceivedFrames=frSvcReceivedFrames, frSvcDlci=frSvcDlci, frSvcOutExcessBurst=frSvcOutExcessBurst, frSvcDlcmiQ922State=frSvcDlcmiQ922State, frSvcDlcmiRetransmissionTimer=frSvcDlcmiRetransmissionTimer, frSvcSentFrames=frSvcSentFrames, frSvcDlcmiTable=frSvcDlcmiTable, frSvcDlcmiIdleTimer=frSvcDlcmiIdleTimer, frSvcCallOrigination=frSvcCallOrigination, frSvcDlcmiErrorThreshold=frSvcDlcmiErrorThreshold, frSvcCallingSubAddr=frSvcCallingSubAddr, frSvcCreationTime=frSvcCreationTime, frSvcDlcmiResetSentTimer=frSvcDlcmiResetSentTimer, frSvcDlcmiState=frSvcDlcmiState, frSvcOutMinCIR=frSvcOutMinCIR, frSvcDlcmiResetAckTimer=frSvcDlcmiResetAckTimer, frSvcCalledAddr=frSvcCalledAddr, frSvcInCommittedBurst=frSvcInCommittedBurst, frSvcDlcmiStatusEnquiryTimer=frSvcDlcmiStatusEnquiryTimer, frSvcInMinCIR=frSvcInMinCIR, frSvcDlcmiIfIndex=frSvcDlcmiIfIndex)
