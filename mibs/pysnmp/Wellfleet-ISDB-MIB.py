#
# PySNMP MIB module Wellfleet-ISDB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-ISDB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, NotificationType, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, ModuleIdentity, Gauge32, TimeTicks, iso, Counter32, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "ModuleIdentity", "Gauge32", "TimeTicks", "iso", "Counter32", "MibIdentifier", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfIsdbGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfIsdbGroup")
wfIsdbCfgTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1), )
if mibBuilder.loadTexts: wfIsdbCfgTable.setStatus('mandatory')
wfIsdbCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1), ).setIndexNames((0, "Wellfleet-ISDB-MIB", "wfIsdbCfgSlot"), (0, "Wellfleet-ISDB-MIB", "wfIsdbCfgConnector"))
if mibBuilder.loadTexts: wfIsdbCfgEntry.setStatus('mandatory')
wfIsdbCfgDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbCfgDelete.setStatus('mandatory')
wfIsdbCfgDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbCfgDisable.setStatus('mandatory')
wfIsdbCfgState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbCfgState.setStatus('mandatory')
wfIsdbCfgSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbCfgSlot.setStatus('mandatory')
wfIsdbCfgConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbCfgConnector.setStatus('mandatory')
wfIsdbCfgCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbCfgCircuit.setStatus('mandatory')
wfIsdbCfgLogFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbCfgLogFilter.setStatus('mandatory')
wfIsdbCfgPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 8), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbCfgPollInterval.setStatus('mandatory')
wfIsdbCfgAutoRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 9), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbCfgAutoRestart.setStatus('mandatory')
wfIsdbCfgAutoUld = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbCfgAutoUld.setStatus('mandatory')
wfIsdbCfgUldVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 11), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbCfgUldVolume.setStatus('mandatory')
wfIsdbImageVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbImageVersion.setStatus('mandatory')
wfIsdbImageDate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbImageDate.setStatus('mandatory')
wfIsdbDiagVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbDiagVersion.setStatus('mandatory')
wfIsdbDiagDate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbDiagDate.setStatus('mandatory')
wfIsdbStatTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2), )
if mibBuilder.loadTexts: wfIsdbStatTable.setStatus('mandatory')
wfIsdbStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1), ).setIndexNames((0, "Wellfleet-ISDB-MIB", "wfIsdbStatSlot"), (0, "Wellfleet-ISDB-MIB", "wfIsdbStatConnector"))
if mibBuilder.loadTexts: wfIsdbStatEntry.setStatus('mandatory')
wfIsdbStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatState.setStatus('mandatory')
wfIsdbStatSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatSlot.setStatus('mandatory')
wfIsdbStatConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatConnector.setStatus('mandatory')
wfIsdbStatVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatVersion.setStatus('mandatory')
wfIsdbStatCurrentConnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatCurrentConnCount.setStatus('mandatory')
wfIsdbStatTotalConnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTotalConnCount.setStatus('mandatory')
wfIsdbStatStartCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatStartCount.setStatus('mandatory')
wfIsdbStatCpuIdleCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatCpuIdleCurrent.setStatus('mandatory')
wfIsdbStatCpuIdleTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatCpuIdleTotal.setStatus('mandatory')
wfIsdbStatMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatMemoryFree.setStatus('mandatory')
wfIsdbStatMemoryLargestBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatMemoryLargestBlock.setStatus('mandatory')
wfIsdbStatTaskCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTaskCount.setStatus('mandatory')
wfIsdbStatMsgQueueLacks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatMsgQueueLacks.setStatus('mandatory')
wfIsdbStatHardwareTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatHardwareTimeouts.setStatus('mandatory')
wfIsdbStatAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatAlarmCount.setStatus('mandatory')
wfIsdbStatAuthorUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatAuthorUnknown.setStatus('mandatory')
wfIsdbStatAv1Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatAv1Ints.setStatus('mandatory')
wfIsdbStatAv2Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatAv2Ints.setStatus('mandatory')
wfIsdbStatAv3Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatAv3Ints.setStatus('mandatory')
wfIsdbStatAv4Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatAv4Ints.setStatus('mandatory')
wfIsdbStatAv5Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatAv5Ints.setStatus('mandatory')
wfIsdbStatAv6Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatAv6Ints.setStatus('mandatory')
wfIsdbStatAv7Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatAv7Ints.setStatus('mandatory')
wfIsdbStatScc3Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatScc3Ints.setStatus('mandatory')
wfIsdbStatErrorInts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatErrorInts.setStatus('mandatory')
wfIsdbStatTimer1Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTimer1Ints.setStatus('mandatory')
wfIsdbStatTimer2Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTimer2Ints.setStatus('mandatory')
wfIsdbStatTimer3Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTimer3Ints.setStatus('mandatory')
wfIsdbStatTimer4Ints = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTimer4Ints.setStatus('mandatory')
wfIsdbStatBusErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatBusErrors.setStatus('mandatory')
wfIsdbStatRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxFrames.setStatus('mandatory')
wfIsdbStatRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxOctets.setStatus('mandatory')
wfIsdbStatRxLacks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxLacks.setStatus('mandatory')
wfIsdbStatRxDataLinkMsgLacks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxDataLinkMsgLacks.setStatus('mandatory')
wfIsdbStatRxManagementMsgLacks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxManagementMsgLacks.setStatus('mandatory')
wfIsdbStatRxBadFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxBadFrames.setStatus('mandatory')
wfIsdbStatRxOverFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxOverFlows.setStatus('mandatory')
wfIsdbStatRxRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxRunts.setStatus('mandatory')
wfIsdbStatRxLargeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxLargeFrames.setStatus('mandatory')
wfIsdbStatRxSmallFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxSmallFrames.setStatus('mandatory')
wfIsdbStatRxIncompleteFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxIncompleteFrames.setStatus('mandatory')
wfIsdbStatRxInts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxInts.setStatus('mandatory')
wfIsdbStatRxDataLinkFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxDataLinkFrames.setStatus('mandatory')
wfIsdbStatRxDataLinkDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxDataLinkDiscards.setStatus('mandatory')
wfIsdbStatRxManagementFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxManagementFrames.setStatus('mandatory')
wfIsdbStatRxUnknownFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatRxUnknownFrames.setStatus('mandatory')
wfIsdbStatTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxFrames.setStatus('mandatory')
wfIsdbStatTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxOctets.setStatus('mandatory')
wfIsdbStatTxLacks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxLacks.setStatus('mandatory')
wfIsdbStatTxUnderFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxUnderFlows.setStatus('mandatory')
wfIsdbStatTxAbortedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxAbortedFrames.setStatus('mandatory')
wfIsdbStatTxMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxMsgs.setStatus('mandatory')
wfIsdbStatTxLargeMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxLargeMsgs.setStatus('mandatory')
wfIsdbStatTxSmallMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxSmallMsgs.setStatus('mandatory')
wfIsdbStatTxInts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxInts.setStatus('mandatory')
wfIsdbStatTxDataLinkFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxDataLinkFrames.setStatus('mandatory')
wfIsdbStatTxManagementFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxManagementFrames.setStatus('mandatory')
wfIsdbStatTxUnknownFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 2, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbStatTxUnknownFrames.setStatus('mandatory')
wfIsdbPortDefaultCfgTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3), )
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgTable.setStatus('mandatory')
wfIsdbPortDefaultCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1), ).setIndexNames((0, "Wellfleet-ISDB-MIB", "wfIsdbPortDefaultCfgSlot"), (0, "Wellfleet-ISDB-MIB", "wfIsdbPortDefaultCfgConnector"), (0, "Wellfleet-ISDB-MIB", "wfIsdbPortDefaultCfgNumber"))
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgEntry.setStatus('mandatory')
wfIsdbPortDefaultCfgDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgDelete.setStatus('mandatory')
wfIsdbPortDefaultCfgDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgDisable.setStatus('mandatory')
wfIsdbPortDefaultCfgState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgState.setStatus('mandatory')
wfIsdbPortDefaultCfgSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgSlot.setStatus('mandatory')
wfIsdbPortDefaultCfgConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgConnector.setStatus('mandatory')
wfIsdbPortDefaultCfgNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgNumber.setStatus('mandatory')
wfIsdbPortDefaultCfgBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("baudrate300b", 300), ("baudrate1200b", 1200), ("baudrate2400b", 2400), ("baudrate4800b", 4800), ("baudrate9600b", 9600), ("baudrate19200b", 19200))).clone('baudrate9600b')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgBaudRate.setStatus('mandatory')
wfIsdbPortDefaultCfgDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 6, 7, 8))).clone(namedValues=NamedValues(("five", 5), ("six", 6), ("seven", 7), ("eight", 8))).clone('eight')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgDataBits.setStatus('mandatory')
wfIsdbPortDefaultCfgParity = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("mark", 4), ("space", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgParity.setStatus('mandatory')
wfIsdbPortDefaultCfgStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("s1bit", 1), ("s15bit", 2), ("s2bit", 3))).clone('s1bit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgStopBits.setStatus('mandatory')
wfIsdbPortDefaultCfgCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("alwaysOn", 1), ("alwaysOff", 2), ("followFlowControl", 3), ("followRTS", 4))).clone('alwaysOn')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgCts.setStatus('mandatory')
wfIsdbPortDefaultCfgDsr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("alwaysOn", 1), ("alwaysOff", 2), ("followDTR", 3), ("toggleOnDisconnect", 4))).clone('alwaysOn')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgDsr.setStatus('mandatory')
wfIsdbPortDefaultCfgDcd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("alwaysOn", 1), ("alwaysOff", 2), ("followDTR", 3), ("followVC", 4))).clone('alwaysOn')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgDcd.setStatus('mandatory')
wfIsdbPortDefaultCfgPrompt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgPrompt.setStatus('mandatory')
wfIsdbPortDefaultCfgCommandParser = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("menu", 1), ("test", 2), ("x25pad", 3), ("loopback", 4))).clone('x25pad')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgCommandParser.setStatus('mandatory')
wfIsdbPortDefaultCfgInactivityTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgInactivityTimeOut.setStatus('mandatory')
wfIsdbPortDefaultCfgRxQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 8192)).clone(8192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgRxQueueSize.setStatus('mandatory')
wfIsdbPortDefaultCfgTxQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 8192)).clone(8192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgTxQueueSize.setStatus('mandatory')
wfIsdbPortDefaultCfgRxXoff = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgRxXoff.setStatus('mandatory')
wfIsdbPortDefaultCfgTxXoff = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgTxXoff.setStatus('mandatory')
wfIsdbPortDefaultCfgDtrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgDtrAction.setStatus('mandatory')
wfIsdbPortDefaultCfgRxXoffAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIsdbPortDefaultCfgRxXoffAction.setStatus('mandatory')
wfIsdbPortCurrentCfgTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4), )
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgTable.setStatus('mandatory')
wfIsdbPortCurrentCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1), ).setIndexNames((0, "Wellfleet-ISDB-MIB", "wfIsdbPortCurrentCfgSlot"), (0, "Wellfleet-ISDB-MIB", "wfIsdbPortCurrentCfgConnector"), (0, "Wellfleet-ISDB-MIB", "wfIsdbPortCurrentCfgNumber"))
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgEntry.setStatus('mandatory')
wfIsdbPortCurrentCfgState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgState.setStatus('mandatory')
wfIsdbPortCurrentCfgSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgSlot.setStatus('mandatory')
wfIsdbPortCurrentCfgConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgConnector.setStatus('mandatory')
wfIsdbPortCurrentCfgNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgNumber.setStatus('mandatory')
wfIsdbPortCurrentCfgBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("baudrate300b", 300), ("baudrate1200b", 1200), ("baudrate2400b", 2400), ("baudrate4800b", 4800), ("baudrate9600b", 9600), ("baudrate19200b", 19200)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgBaudRate.setStatus('mandatory')
wfIsdbPortCurrentCfgDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 6, 7, 8))).clone(namedValues=NamedValues(("five", 5), ("six", 6), ("seven", 7), ("eight", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgDataBits.setStatus('mandatory')
wfIsdbPortCurrentCfgParity = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("mark", 4), ("space", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgParity.setStatus('mandatory')
wfIsdbPortCurrentCfgStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("s1bit", 1), ("s15bit", 2), ("s2bit", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgStopBits.setStatus('mandatory')
wfIsdbPortCurrentCfgCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("alwaysOn", 1), ("alwaysOff", 2), ("followFlowControl", 3), ("followRTS", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgCts.setStatus('mandatory')
wfIsdbPortCurrentCfgDsr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("alwaysOn", 1), ("alwaysOff", 2), ("followDTR", 3), ("toggleOnDisconnect", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgDsr.setStatus('mandatory')
wfIsdbPortCurrentCfgDcd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("alwaysOn", 1), ("alwaysOff", 2), ("followDTR", 3), ("followVC", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgDcd.setStatus('mandatory')
wfIsdbPortCurrentCfgPrompt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgPrompt.setStatus('mandatory')
wfIsdbPortCurrentCfgCommandParser = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("menu", 1), ("test", 2), ("x25pad", 3), ("loopback", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgCommandParser.setStatus('mandatory')
wfIsdbPortCurrentCfgInactivityTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgInactivityTimeout.setStatus('mandatory')
wfIsdbPortCurrentCfgRxQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgRxQueueSize.setStatus('mandatory')
wfIsdbPortCurrentCfgTxQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgTxQueueSize.setStatus('mandatory')
wfIsdbPortCurrentCfgRxXoff = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgRxXoff.setStatus('mandatory')
wfIsdbPortCurrentCfgTxXoff = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgTxXoff.setStatus('mandatory')
wfIsdbPortCurrentCfgDtrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgDtrAction.setStatus('mandatory')
wfIsdbPortCurrentCfgRxXoffAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 4, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortCurrentCfgRxXoffAction.setStatus('mandatory')
wfIsdbPortStatTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5), )
if mibBuilder.loadTexts: wfIsdbPortStatTable.setStatus('mandatory')
wfIsdbPortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1), ).setIndexNames((0, "Wellfleet-ISDB-MIB", "wfIsdbPortStatSlot"), (0, "Wellfleet-ISDB-MIB", "wfIsdbPortStatConnector"), (0, "Wellfleet-ISDB-MIB", "wfIsdbPortStatNumber"))
if mibBuilder.loadTexts: wfIsdbPortStatEntry.setStatus('mandatory')
wfIsdbPortStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatState.setStatus('mandatory')
wfIsdbPortStatSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatSlot.setStatus('mandatory')
wfIsdbPortStatConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatConnector.setStatus('mandatory')
wfIsdbPortStatNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatNumber.setStatus('mandatory')
wfIsdbPortStatRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatRxOctets.setStatus('mandatory')
wfIsdbPortStatRxLacks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatRxLacks.setStatus('mandatory')
wfIsdbPortStatRxWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatRxWaits.setStatus('mandatory')
wfIsdbPortStatTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatTxOctets.setStatus('mandatory')
wfIsdbPortStatTxLacks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatTxLacks.setStatus('mandatory')
wfIsdbPortStatTxWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatTxWaits.setStatus('mandatory')
wfIsdbPortStatBreaksDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatBreaksDetected.setStatus('mandatory')
wfIsdbPortStatParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatParityErrors.setStatus('mandatory')
wfIsdbPortStatFramingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatFramingErrors.setStatus('mandatory')
wfIsdbPortStatOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatOverrunErrors.setStatus('mandatory')
wfIsdbPortStatCtsState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatCtsState.setStatus('mandatory')
wfIsdbPortStatCtsTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatCtsTransitions.setStatus('mandatory')
wfIsdbPortStatRtsState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatRtsState.setStatus('mandatory')
wfIsdbPortStatRtsTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatRtsTransitions.setStatus('mandatory')
wfIsdbPortStatDsrState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatDsrState.setStatus('mandatory')
wfIsdbPortStatDsrTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatDsrTransitions.setStatus('mandatory')
wfIsdbPortStatDcdState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatDcdState.setStatus('mandatory')
wfIsdbPortStatDcdTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatDcdTransitions.setStatus('mandatory')
wfIsdbPortStatDtrState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatDtrState.setStatus('mandatory')
wfIsdbPortStatDtrTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatDtrTransitions.setStatus('mandatory')
wfIsdbPortStatRxInts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatRxInts.setStatus('mandatory')
wfIsdbPortStatTxInts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatTxInts.setStatus('mandatory')
wfIsdbPortStatModemInts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatModemInts.setStatus('mandatory')
wfIsdbPortStatSpecialCharCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatSpecialCharCount.setStatus('mandatory')
wfIsdbPortStatRxState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatRxState.setStatus('mandatory')
wfIsdbPortStatRxFlowState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("normal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatRxFlowState.setStatus('mandatory')
wfIsdbPortStatTxState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatTxState.setStatus('mandatory')
wfIsdbPortStatTxFlowState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 33, 5, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("normal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIsdbPortStatTxFlowState.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-ISDB-MIB", wfIsdbCfgDelete=wfIsdbCfgDelete, wfIsdbStatTimer2Ints=wfIsdbStatTimer2Ints, wfIsdbPortStatCtsState=wfIsdbPortStatCtsState, wfIsdbPortCurrentCfgSlot=wfIsdbPortCurrentCfgSlot, wfIsdbStatAv4Ints=wfIsdbStatAv4Ints, wfIsdbStatRxUnknownFrames=wfIsdbStatRxUnknownFrames, wfIsdbPortCurrentCfgRxXoff=wfIsdbPortCurrentCfgRxXoff, wfIsdbPortStatOverrunErrors=wfIsdbPortStatOverrunErrors, wfIsdbPortDefaultCfgDtrAction=wfIsdbPortDefaultCfgDtrAction, wfIsdbPortStatEntry=wfIsdbPortStatEntry, wfIsdbStatTxLargeMsgs=wfIsdbStatTxLargeMsgs, wfIsdbDiagDate=wfIsdbDiagDate, wfIsdbStatAuthorUnknown=wfIsdbStatAuthorUnknown, wfIsdbImageVersion=wfIsdbImageVersion, wfIsdbPortCurrentCfgBaudRate=wfIsdbPortCurrentCfgBaudRate, wfIsdbStatTimer1Ints=wfIsdbStatTimer1Ints, wfIsdbPortCurrentCfgPrompt=wfIsdbPortCurrentCfgPrompt, wfIsdbPortDefaultCfgCommandParser=wfIsdbPortDefaultCfgCommandParser, wfIsdbStatAv5Ints=wfIsdbStatAv5Ints, wfIsdbPortDefaultCfgCts=wfIsdbPortDefaultCfgCts, wfIsdbStatMemoryFree=wfIsdbStatMemoryFree, wfIsdbStatAlarmCount=wfIsdbStatAlarmCount, wfIsdbStatRxManagementMsgLacks=wfIsdbStatRxManagementMsgLacks, wfIsdbStatRxRunts=wfIsdbStatRxRunts, wfIsdbPortStatRtsState=wfIsdbPortStatRtsState, wfIsdbStatTxInts=wfIsdbStatTxInts, wfIsdbPortStatRtsTransitions=wfIsdbPortStatRtsTransitions, wfIsdbPortCurrentCfgRxXoffAction=wfIsdbPortCurrentCfgRxXoffAction, wfIsdbStatRxBadFrames=wfIsdbStatRxBadFrames, wfIsdbPortDefaultCfgDelete=wfIsdbPortDefaultCfgDelete, wfIsdbPortStatSpecialCharCount=wfIsdbPortStatSpecialCharCount, wfIsdbPortCurrentCfgNumber=wfIsdbPortCurrentCfgNumber, wfIsdbPortStatTxLacks=wfIsdbPortStatTxLacks, wfIsdbStatRxDataLinkDiscards=wfIsdbStatRxDataLinkDiscards, wfIsdbStatRxDataLinkMsgLacks=wfIsdbStatRxDataLinkMsgLacks, wfIsdbStatAv3Ints=wfIsdbStatAv3Ints, wfIsdbCfgAutoUld=wfIsdbCfgAutoUld, wfIsdbPortDefaultCfgPrompt=wfIsdbPortDefaultCfgPrompt, wfIsdbPortDefaultCfgDataBits=wfIsdbPortDefaultCfgDataBits, wfIsdbPortDefaultCfgRxQueueSize=wfIsdbPortDefaultCfgRxQueueSize, wfIsdbPortDefaultCfgDisable=wfIsdbPortDefaultCfgDisable, wfIsdbPortStatTxFlowState=wfIsdbPortStatTxFlowState, wfIsdbStatTimer4Ints=wfIsdbStatTimer4Ints, wfIsdbPortStatNumber=wfIsdbPortStatNumber, wfIsdbPortCurrentCfgCommandParser=wfIsdbPortCurrentCfgCommandParser, wfIsdbPortDefaultCfgTxQueueSize=wfIsdbPortDefaultCfgTxQueueSize, wfIsdbPortStatParityErrors=wfIsdbPortStatParityErrors, wfIsdbCfgConnector=wfIsdbCfgConnector, wfIsdbPortCurrentCfgDataBits=wfIsdbPortCurrentCfgDataBits, wfIsdbPortCurrentCfgState=wfIsdbPortCurrentCfgState, wfIsdbStatTxAbortedFrames=wfIsdbStatTxAbortedFrames, wfIsdbPortStatDcdState=wfIsdbPortStatDcdState, wfIsdbPortCurrentCfgTxXoff=wfIsdbPortCurrentCfgTxXoff, wfIsdbPortStatRxInts=wfIsdbPortStatRxInts, wfIsdbStatRxIncompleteFrames=wfIsdbStatRxIncompleteFrames, wfIsdbPortStatDtrTransitions=wfIsdbPortStatDtrTransitions, wfIsdbPortCurrentCfgTable=wfIsdbPortCurrentCfgTable, wfIsdbPortStatDcdTransitions=wfIsdbPortStatDcdTransitions, wfIsdbPortDefaultCfgInactivityTimeOut=wfIsdbPortDefaultCfgInactivityTimeOut, wfIsdbStatVersion=wfIsdbStatVersion, wfIsdbStatCpuIdleTotal=wfIsdbStatCpuIdleTotal, wfIsdbStatRxFrames=wfIsdbStatRxFrames, wfIsdbPortCurrentCfgConnector=wfIsdbPortCurrentCfgConnector, wfIsdbPortDefaultCfgBaudRate=wfIsdbPortDefaultCfgBaudRate, wfIsdbStatAv1Ints=wfIsdbStatAv1Ints, wfIsdbStatSlot=wfIsdbStatSlot, wfIsdbStatBusErrors=wfIsdbStatBusErrors, wfIsdbPortCurrentCfgEntry=wfIsdbPortCurrentCfgEntry, wfIsdbPortStatCtsTransitions=wfIsdbPortStatCtsTransitions, wfIsdbStatAv2Ints=wfIsdbStatAv2Ints, wfIsdbStatConnector=wfIsdbStatConnector, wfIsdbStatRxOverFlows=wfIsdbStatRxOverFlows, wfIsdbStatTxUnknownFrames=wfIsdbStatTxUnknownFrames, wfIsdbPortCurrentCfgDsr=wfIsdbPortCurrentCfgDsr, wfIsdbPortStatRxFlowState=wfIsdbPortStatRxFlowState, wfIsdbStatStartCount=wfIsdbStatStartCount, wfIsdbStatScc3Ints=wfIsdbStatScc3Ints, wfIsdbStatTxUnderFlows=wfIsdbStatTxUnderFlows, wfIsdbPortStatModemInts=wfIsdbPortStatModemInts, wfIsdbStatTxManagementFrames=wfIsdbStatTxManagementFrames, wfIsdbPortStatDtrState=wfIsdbPortStatDtrState, wfIsdbPortDefaultCfgParity=wfIsdbPortDefaultCfgParity, wfIsdbCfgUldVolume=wfIsdbCfgUldVolume, wfIsdbCfgTable=wfIsdbCfgTable, wfIsdbStatTable=wfIsdbStatTable, wfIsdbStatRxLacks=wfIsdbStatRxLacks, wfIsdbPortDefaultCfgEntry=wfIsdbPortDefaultCfgEntry, wfIsdbStatState=wfIsdbStatState, wfIsdbStatCpuIdleCurrent=wfIsdbStatCpuIdleCurrent, wfIsdbStatTxFrames=wfIsdbStatTxFrames, wfIsdbPortStatTxWaits=wfIsdbPortStatTxWaits, wfIsdbCfgAutoRestart=wfIsdbCfgAutoRestart, wfIsdbStatTimer3Ints=wfIsdbStatTimer3Ints, wfIsdbStatTaskCount=wfIsdbStatTaskCount, wfIsdbImageDate=wfIsdbImageDate, wfIsdbPortStatRxWaits=wfIsdbPortStatRxWaits, wfIsdbPortDefaultCfgSlot=wfIsdbPortDefaultCfgSlot, wfIsdbPortDefaultCfgTxXoff=wfIsdbPortDefaultCfgTxXoff, wfIsdbPortDefaultCfgRxXoffAction=wfIsdbPortDefaultCfgRxXoffAction, wfIsdbPortCurrentCfgCts=wfIsdbPortCurrentCfgCts, wfIsdbPortStatDsrState=wfIsdbPortStatDsrState, wfIsdbStatErrorInts=wfIsdbStatErrorInts, wfIsdbCfgDisable=wfIsdbCfgDisable, wfIsdbCfgSlot=wfIsdbCfgSlot, wfIsdbPortStatRxOctets=wfIsdbPortStatRxOctets, wfIsdbPortStatFramingErrors=wfIsdbPortStatFramingErrors, wfIsdbPortDefaultCfgDcd=wfIsdbPortDefaultCfgDcd, wfIsdbStatRxDataLinkFrames=wfIsdbStatRxDataLinkFrames, wfIsdbPortStatRxState=wfIsdbPortStatRxState, wfIsdbPortStatTxInts=wfIsdbPortStatTxInts, wfIsdbPortDefaultCfgRxXoff=wfIsdbPortDefaultCfgRxXoff, wfIsdbPortDefaultCfgState=wfIsdbPortDefaultCfgState, wfIsdbCfgEntry=wfIsdbCfgEntry, wfIsdbStatAv6Ints=wfIsdbStatAv6Ints, wfIsdbStatHardwareTimeouts=wfIsdbStatHardwareTimeouts, wfIsdbPortDefaultCfgConnector=wfIsdbPortDefaultCfgConnector, wfIsdbPortCurrentCfgParity=wfIsdbPortCurrentCfgParity, wfIsdbPortStatTxOctets=wfIsdbPortStatTxOctets, wfIsdbPortDefaultCfgDsr=wfIsdbPortDefaultCfgDsr, wfIsdbStatTxDataLinkFrames=wfIsdbStatTxDataLinkFrames, wfIsdbPortCurrentCfgDcd=wfIsdbPortCurrentCfgDcd, wfIsdbStatMsgQueueLacks=wfIsdbStatMsgQueueLacks, wfIsdbStatEntry=wfIsdbStatEntry, wfIsdbPortStatSlot=wfIsdbPortStatSlot, wfIsdbPortStatState=wfIsdbPortStatState, wfIsdbPortStatBreaksDetected=wfIsdbPortStatBreaksDetected, wfIsdbCfgCircuit=wfIsdbCfgCircuit, wfIsdbPortStatTxState=wfIsdbPortStatTxState, wfIsdbStatTotalConnCount=wfIsdbStatTotalConnCount, wfIsdbPortDefaultCfgStopBits=wfIsdbPortDefaultCfgStopBits, wfIsdbPortDefaultCfgTable=wfIsdbPortDefaultCfgTable, wfIsdbPortStatTable=wfIsdbPortStatTable, wfIsdbStatTxMsgs=wfIsdbStatTxMsgs, wfIsdbStatRxSmallFrames=wfIsdbStatRxSmallFrames, wfIsdbPortDefaultCfgNumber=wfIsdbPortDefaultCfgNumber, wfIsdbPortCurrentCfgTxQueueSize=wfIsdbPortCurrentCfgTxQueueSize, wfIsdbStatRxInts=wfIsdbStatRxInts, wfIsdbPortCurrentCfgInactivityTimeout=wfIsdbPortCurrentCfgInactivityTimeout, wfIsdbPortStatConnector=wfIsdbPortStatConnector, wfIsdbStatCurrentConnCount=wfIsdbStatCurrentConnCount, wfIsdbStatTxLacks=wfIsdbStatTxLacks, wfIsdbPortCurrentCfgStopBits=wfIsdbPortCurrentCfgStopBits, wfIsdbCfgPollInterval=wfIsdbCfgPollInterval, wfIsdbStatRxLargeFrames=wfIsdbStatRxLargeFrames, wfIsdbCfgLogFilter=wfIsdbCfgLogFilter, wfIsdbCfgState=wfIsdbCfgState, wfIsdbStatAv7Ints=wfIsdbStatAv7Ints, wfIsdbStatTxSmallMsgs=wfIsdbStatTxSmallMsgs, wfIsdbStatRxManagementFrames=wfIsdbStatRxManagementFrames, wfIsdbPortCurrentCfgRxQueueSize=wfIsdbPortCurrentCfgRxQueueSize, wfIsdbDiagVersion=wfIsdbDiagVersion, wfIsdbPortStatDsrTransitions=wfIsdbPortStatDsrTransitions, wfIsdbPortCurrentCfgDtrAction=wfIsdbPortCurrentCfgDtrAction, wfIsdbStatTxOctets=wfIsdbStatTxOctets, wfIsdbPortStatRxLacks=wfIsdbPortStatRxLacks, wfIsdbStatMemoryLargestBlock=wfIsdbStatMemoryLargestBlock, wfIsdbStatRxOctets=wfIsdbStatRxOctets)
