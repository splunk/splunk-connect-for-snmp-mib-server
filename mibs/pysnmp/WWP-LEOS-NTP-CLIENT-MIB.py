#
# PySNMP MIB module WWP-LEOS-NTP-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-NTP-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
AddressFamilyNumbers, = mibBuilder.importSymbols("IANA-ADDRESS-FAMILY-NUMBERS-MIB", "AddressFamilyNumbers")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter64, IpAddress, NotificationType, Integer32, Counter32, ModuleIdentity, ObjectIdentity, Unsigned32, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "IpAddress", "NotificationType", "Integer32", "Counter32", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosNtpClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18))
wwpLeosNtpClientMIB.setRevisions(('2012-09-12 00:00', '2012-05-31 00:00', '2012-03-27 00:00', '2011-07-05 00:00', '2011-03-29 12:00', '2008-05-20 00:00', '2007-12-20 00:00', '2007-07-15 10:00', '2003-04-11 17:00',))
if mibBuilder.loadTexts: wwpLeosNtpClientMIB.setLastUpdated('201209120000Z')
if mibBuilder.loadTexts: wwpLeosNtpClientMIB.setOrganization('Ciena, Inc')
class Md5Key(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

wwpLeosNtpClientMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1))
wwpLeosNtpClient = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1))
wwpLeosNtpClientNotifAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 2))
wwpLeosNtpClientMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 2))
wwpLeosNtpClientMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 2, 0))
wwpLeosNtpClientMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 3))
wwpLeosNtpClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 3, 1))
wwpLeosNtpClientMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 3, 2))
wwpLeosNtpClientState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpClientState.setStatus('current')
wwpLeosNtpClientMode = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("polling", 1), ("broadcast", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpClientMode.setStatus('current')
wwpLeosNtpClientPollFreq = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpClientPollFreq.setStatus('current')
wwpLeosNtpClientTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4), )
if mibBuilder.loadTexts: wwpLeosNtpClientTable.setStatus('current')
wwpLeosNtpClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1), ).setIndexNames((0, "WWP-LEOS-NTP-CLIENT-MIB", "wwpLeosNtpServerIndex"))
if mibBuilder.loadTexts: wwpLeosNtpClientEntry.setStatus('current')
wwpLeosNtpServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: wwpLeosNtpServerIndex.setStatus('current')
wwpLeosNtpServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 2), AddressFamilyNumbers()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpServerAddrType.setStatus('current')
wwpLeosNtpServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpServerAddr.setStatus('current')
wwpLeosNtpServerResolvedAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpServerResolvedAddr.setStatus('current')
wwpLeosNtpServerUserPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpServerUserPri.setStatus('deprecated')
wwpLeosNtpServerDhcpPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpServerDhcpPri.setStatus('deprecated')
wwpLeosNtpServerUserAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpServerUserAdminState.setStatus('current')
wwpLeosNtpServerScope = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("user", 1), ("dhcp", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpServerScope.setStatus('current')
wwpLeosNtpServerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("notConfigured", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpServerOperState.setStatus('current')
wwpLeosNtpServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosNtpServerStatus.setStatus('current')
wwpLeosNtpServerKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpServerKeyId.setStatus('current')
wwpLeosNtpServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 255, 256))).clone(namedValues=NamedValues(("reject", 1), ("insane", 2), ("correct", 3), ("standby", 4), ("candidate", 5), ("selected", 6), ("syspeer", 7), ("ppspeer", 8), ("reaching", 255), ("error", 256)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpServerState.setStatus('current')
wwpLeosNtpServerResolvedInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 13), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpServerResolvedInetAddrType.setStatus('current')
wwpLeosNtpServerResolvedInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 4, 1, 14), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpServerResolvedInetAddr.setStatus('current')
wwpLeosNtpAuthTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 5), )
if mibBuilder.loadTexts: wwpLeosNtpAuthTable.setStatus('current')
wwpLeosNtpAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 5, 1), ).setIndexNames((0, "WWP-LEOS-NTP-CLIENT-MIB", "wwpLeosNtpAuthKeyId"))
if mibBuilder.loadTexts: wwpLeosNtpAuthEntry.setStatus('current')
wwpLeosNtpAuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: wwpLeosNtpAuthKeyId.setStatus('current')
wwpLeosNtpAuthMd5Key = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 5, 1, 2), Md5Key().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpAuthMd5Key.setStatus('current')
wwpLeosNtpAuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosNtpAuthRowStatus.setStatus('current')
wwpLeosNtpAuthMD5KeyEnc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 5, 1, 4), Md5Key().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpAuthMD5KeyEnc.setStatus('current')
wwpLeosNtpClientMD5State = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpClientMD5State.setStatus('current')
wwpLeosNtpClientDrift = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpClientDrift.setStatus('current')
wwpLeosNtpClientFastOffset = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpClientFastOffset.setStatus('current')
wwpLeosNtpClientSlowOffset = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpClientSlowOffset.setStatus('current')
wwpLeosNtpClientMinPollFreq = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpClientMinPollFreq.setStatus('current')
wwpLeosNtpClientMaxPollFreq = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpClientMaxPollFreq.setStatus('current')
wwpLeosNtpClientOffset = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpClientOffset.setStatus('deprecated')
wwpLeosNtpClientDelay = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpClientDelay.setStatus('current')
wwpLeosNtpClientJitter = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpClientJitter.setStatus('current')
wwpLeosNtpClientNtpOffset = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpClientNtpOffset.setStatus('current')
wwpLeosNtpClientNtpFastStartMode = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpClientNtpFastStartMode.setStatus('current')
wwpLeosNtpMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 18), )
if mibBuilder.loadTexts: wwpLeosNtpMulticastTable.setStatus('current')
wwpLeosNtpMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 18, 1), ).setIndexNames((0, "WWP-LEOS-NTP-CLIENT-MIB", "wwpLeosNtpMulticastIndex"))
if mibBuilder.loadTexts: wwpLeosNtpMulticastEntry.setStatus('current')
wwpLeosNtpMulticastIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: wwpLeosNtpMulticastIndex.setStatus('current')
wwpLeosNtpMulticastInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 18, 1, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpMulticastInetAddrType.setStatus('current')
wwpLeosNtpMulticastInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 18, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpMulticastInetAddr.setStatus('current')
wwpLeosNtpMulticastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 18, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosNtpMulticastRowStatus.setStatus('current')
wwpLeosNtpClientSyncChangeNotifAdminState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosNtpClientSyncChangeNotifAdminState.setStatus('current')
wwpLeosNtpClientSyncState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("synchronized", 1), ("not-synchronized", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNtpClientSyncState.setStatus('current')
wwpLeosNtpClientSyncStatusChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 18, 2, 0, 1)).setObjects(("WWP-LEOS-NTP-CLIENT-MIB", "wwpLeosNtpClientSyncState"))
if mibBuilder.loadTexts: wwpLeosNtpClientSyncStatusChangeNotification.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-NTP-CLIENT-MIB", wwpLeosNtpServerDhcpPri=wwpLeosNtpServerDhcpPri, wwpLeosNtpAuthMD5KeyEnc=wwpLeosNtpAuthMD5KeyEnc, wwpLeosNtpClientState=wwpLeosNtpClientState, wwpLeosNtpServerState=wwpLeosNtpServerState, wwpLeosNtpClientTable=wwpLeosNtpClientTable, wwpLeosNtpAuthTable=wwpLeosNtpAuthTable, wwpLeosNtpClientSyncChangeNotifAdminState=wwpLeosNtpClientSyncChangeNotifAdminState, wwpLeosNtpClientMIBNotificationPrefix=wwpLeosNtpClientMIBNotificationPrefix, wwpLeosNtpMulticastRowStatus=wwpLeosNtpMulticastRowStatus, wwpLeosNtpClientMIBNotifications=wwpLeosNtpClientMIBNotifications, wwpLeosNtpClientMD5State=wwpLeosNtpClientMD5State, wwpLeosNtpServerScope=wwpLeosNtpServerScope, wwpLeosNtpClientJitter=wwpLeosNtpClientJitter, wwpLeosNtpClientDelay=wwpLeosNtpClientDelay, wwpLeosNtpClientOffset=wwpLeosNtpClientOffset, wwpLeosNtpServerResolvedInetAddrType=wwpLeosNtpServerResolvedInetAddrType, wwpLeosNtpClientEntry=wwpLeosNtpClientEntry, wwpLeosNtpServerUserAdminState=wwpLeosNtpServerUserAdminState, wwpLeosNtpClientMIBCompliances=wwpLeosNtpClientMIBCompliances, wwpLeosNtpAuthRowStatus=wwpLeosNtpAuthRowStatus, wwpLeosNtpAuthEntry=wwpLeosNtpAuthEntry, wwpLeosNtpServerResolvedAddr=wwpLeosNtpServerResolvedAddr, wwpLeosNtpClientSlowOffset=wwpLeosNtpClientSlowOffset, wwpLeosNtpServerUserPri=wwpLeosNtpServerUserPri, wwpLeosNtpMulticastInetAddr=wwpLeosNtpMulticastInetAddr, wwpLeosNtpClientNtpFastStartMode=wwpLeosNtpClientNtpFastStartMode, wwpLeosNtpMulticastInetAddrType=wwpLeosNtpMulticastInetAddrType, wwpLeosNtpClientPollFreq=wwpLeosNtpClientPollFreq, wwpLeosNtpServerAddrType=wwpLeosNtpServerAddrType, wwpLeosNtpClient=wwpLeosNtpClient, wwpLeosNtpServerAddr=wwpLeosNtpServerAddr, wwpLeosNtpClientSyncState=wwpLeosNtpClientSyncState, wwpLeosNtpClientSyncStatusChangeNotification=wwpLeosNtpClientSyncStatusChangeNotification, wwpLeosNtpAuthKeyId=wwpLeosNtpAuthKeyId, wwpLeosNtpServerKeyId=wwpLeosNtpServerKeyId, wwpLeosNtpClientNtpOffset=wwpLeosNtpClientNtpOffset, wwpLeosNtpClientMinPollFreq=wwpLeosNtpClientMinPollFreq, Md5Key=Md5Key, wwpLeosNtpClientFastOffset=wwpLeosNtpClientFastOffset, wwpLeosNtpClientNotifAttrs=wwpLeosNtpClientNotifAttrs, wwpLeosNtpClientDrift=wwpLeosNtpClientDrift, wwpLeosNtpServerStatus=wwpLeosNtpServerStatus, wwpLeosNtpClientMIBConformance=wwpLeosNtpClientMIBConformance, wwpLeosNtpServerIndex=wwpLeosNtpServerIndex, wwpLeosNtpClientMaxPollFreq=wwpLeosNtpClientMaxPollFreq, wwpLeosNtpMulticastTable=wwpLeosNtpMulticastTable, wwpLeosNtpServerOperState=wwpLeosNtpServerOperState, wwpLeosNtpMulticastIndex=wwpLeosNtpMulticastIndex, wwpLeosNtpMulticastEntry=wwpLeosNtpMulticastEntry, PYSNMP_MODULE_ID=wwpLeosNtpClientMIB, wwpLeosNtpClientMIBGroups=wwpLeosNtpClientMIBGroups, wwpLeosNtpServerResolvedInetAddr=wwpLeosNtpServerResolvedInetAddr, wwpLeosNtpClientMode=wwpLeosNtpClientMode, wwpLeosNtpClientMIB=wwpLeosNtpClientMIB, wwpLeosNtpClientMIBObjects=wwpLeosNtpClientMIBObjects, wwpLeosNtpAuthMd5Key=wwpLeosNtpAuthMd5Key)
