#
# PySNMP MIB module HH3C-T1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-T1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, TimeTicks, Integer32, Gauge32, iso, ModuleIdentity, Bits, ObjectIdentity, Counter32, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "TimeTicks", "Integer32", "Gauge32", "iso", "ModuleIdentity", "Bits", "ObjectIdentity", "Counter32", "Unsigned32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hh3cT1 = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 29))
hh3cT1.setRevisions(('2012-07-16 17:41', '2009-06-08 17:41', '2004-12-01 14:36',))
if mibBuilder.loadTexts: hh3cT1.setLastUpdated('201207161741Z')
if mibBuilder.loadTexts: hh3cT1.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3ct1InterfaceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1), )
if mibBuilder.loadTexts: hh3ct1InterfaceStatusTable.setStatus('current')
hh3ct1InterfaceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3ct1InterfaceStatusEntry.setStatus('current')
hh3ct1InterfaceInErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInErrs.setStatus('current')
hh3ct1InterfaceInRuntsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInRuntsErrs.setStatus('current')
hh3ct1InterfaceInGiantsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInGiantsErrs.setStatus('current')
hh3ct1InterfaceInCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInCrcErrs.setStatus('current')
hh3ct1InterfaceInAlignErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInAlignErrs.setStatus('current')
hh3ct1InterfaceInOverRunsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInOverRunsErrs.setStatus('current')
hh3ct1InterfaceInDribblesErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInDribblesErrs.setStatus('current')
hh3ct1InterfaceInAbortedSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInAbortedSeqErrs.setStatus('current')
hh3ct1InterfaceInNoBufferErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInNoBufferErrs.setStatus('current')
hh3ct1InterfaceInFramingErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceInFramingErrs.setStatus('current')
hh3ct1InterfaceOutputErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceOutputErrs.setStatus('current')
hh3ct1InterfaceOutUnderRunErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceOutUnderRunErrs.setStatus('current')
hh3ct1InterfaceOutCollisonsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceOutCollisonsErrs.setStatus('current')
hh3ct1InterfaceOutDeferedErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1InterfaceOutDeferedErrs.setStatus('current')
hh3ct1Table = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 29, 2), )
if mibBuilder.loadTexts: hh3ct1Table.setStatus('current')
hh3ct1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 29, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3ct1Entry.setStatus('current')
class Hh3cT1TimeSlot(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

hh3ct1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 2, 1, 1), Bits().clone(namedValues=NamedValues(("voice", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1Type.setStatus('current')
hh3ct1Clock = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("slave", 1), ("master", 2), ("internal", 3), ("line", 4), ("linePri", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3ct1Clock.setStatus('current')
hh3ct1FrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sf", 1), ("esf", 2))).clone('esf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3ct1FrameFormat.setStatus('current')
hh3ct1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ami", 1), ("b8zs", 2))).clone('b8zs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3ct1LineCode.setStatus('current')
hh3ct1PriSetTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 2, 1, 5), Hh3cT1TimeSlot()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3ct1PriSetTimeSlot.setStatus('current')
hh3ct1DChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1DChannelIndex.setStatus('current')
hh3ct1SubScribLineChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1SubScribLineChannelIndex.setStatus('current')
hh3ct1InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 29, 3), )
if mibBuilder.loadTexts: hh3ct1InterfaceTable.setStatus('current')
hh3ct1InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 29, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3ct1InterfaceEntry.setStatus('current')
hh3ct1ControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 29, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ct1ControllerIndex.setStatus('current')
mibBuilder.exportSymbols("HH3C-T1-MIB", hh3ct1FrameFormat=hh3ct1FrameFormat, hh3ct1InterfaceInNoBufferErrs=hh3ct1InterfaceInNoBufferErrs, hh3ct1InterfaceInAbortedSeqErrs=hh3ct1InterfaceInAbortedSeqErrs, hh3ct1InterfaceOutDeferedErrs=hh3ct1InterfaceOutDeferedErrs, hh3ct1InterfaceStatusTable=hh3ct1InterfaceStatusTable, hh3ct1InterfaceInCrcErrs=hh3ct1InterfaceInCrcErrs, hh3ct1InterfaceEntry=hh3ct1InterfaceEntry, hh3ct1InterfaceInRuntsErrs=hh3ct1InterfaceInRuntsErrs, hh3ct1PriSetTimeSlot=hh3ct1PriSetTimeSlot, hh3cT1=hh3cT1, hh3ct1DChannelIndex=hh3ct1DChannelIndex, hh3ct1InterfaceTable=hh3ct1InterfaceTable, hh3ct1Entry=hh3ct1Entry, hh3ct1Table=hh3ct1Table, hh3ct1LineCode=hh3ct1LineCode, Hh3cT1TimeSlot=Hh3cT1TimeSlot, hh3ct1InterfaceOutputErrs=hh3ct1InterfaceOutputErrs, hh3ct1SubScribLineChannelIndex=hh3ct1SubScribLineChannelIndex, hh3ct1InterfaceOutCollisonsErrs=hh3ct1InterfaceOutCollisonsErrs, hh3ct1ControllerIndex=hh3ct1ControllerIndex, hh3ct1InterfaceInErrs=hh3ct1InterfaceInErrs, hh3ct1Type=hh3ct1Type, hh3ct1InterfaceInAlignErrs=hh3ct1InterfaceInAlignErrs, hh3ct1Clock=hh3ct1Clock, hh3ct1InterfaceOutUnderRunErrs=hh3ct1InterfaceOutUnderRunErrs, hh3ct1InterfaceInGiantsErrs=hh3ct1InterfaceInGiantsErrs, PYSNMP_MODULE_ID=hh3cT1, hh3ct1InterfaceInOverRunsErrs=hh3ct1InterfaceInOverRunsErrs, hh3ct1InterfaceStatusEntry=hh3ct1InterfaceStatusEntry, hh3ct1InterfaceInDribblesErrs=hh3ct1InterfaceInDribblesErrs, hh3ct1InterfaceInFramingErrs=hh3ct1InterfaceInFramingErrs)
