#
# PySNMP MIB module VPLS-GENERIC-DRAFT-01-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VPLS-GENERIC-DRAFT-01-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:28:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
jnxExperiment, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxExperiment")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
transmission, ObjectIdentity, Unsigned32, MibIdentifier, IpAddress, Integer32, ModuleIdentity, TimeTicks, Gauge32, iso, NotificationType, Counter64, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "transmission", "ObjectIdentity", "Unsigned32", "MibIdentifier", "IpAddress", "Integer32", "ModuleIdentity", "TimeTicks", "Gauge32", "iso", "NotificationType", "Counter64", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
DisplayString, TextualConvention, RowStatus, StorageType, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "StorageType", "TruthValue")
VPNIdOrZero, = mibBuilder.importSymbols("VPN-TC-STD-MIB", "VPNIdOrZero")
jnxVplsGenericDraft01MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 8))
jnxVplsGenericDraft01MIB.setRevisions(('2011-03-26 12:00', '2006-08-30 12:00', '2006-06-04 12:00',))
if mibBuilder.loadTexts: jnxVplsGenericDraft01MIB.setLastUpdated('201103261200Z')
if mibBuilder.loadTexts: jnxVplsGenericDraft01MIB.setOrganization('Layer 2 Virtual Private Networks (L2VPN) Working Group')
class PwIndexType(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class JnxVplsBgpRouteDistinguisher(TextualConvention, OctetString):
    reference = '[RFC4364]'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 256)

class JnxVplsBgpRouteTarget(TextualConvention, OctetString):
    reference = '[RFC4364]'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 256)

class JnxVplsBgpRouteTargetType(TextualConvention, Integer32):
    reference = '[RFC4364]'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("import", 1), ("export", 2), ("both", 3))

jnxVplsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 8, 0))
jnxVplsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1))
jnxVplsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5, 8, 2))
jnxVplsConfigIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigIndexNext.setStatus('current')
jnxVplsConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2), )
if mibBuilder.loadTexts: jnxVplsConfigTable.setStatus('current')
jnxVplsConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1), ).setIndexNames((0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigIndex"))
if mibBuilder.loadTexts: jnxVplsConfigEntry.setStatus('current')
jnxVplsConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigIndex.setStatus('current')
jnxVplsConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigName.setStatus('current')
jnxVplsConfigDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigDescr.setStatus('current')
jnxVplsConfigAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigAdminStatus.setStatus('current')
jnxVplsConfigMacLearning = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 6), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigMacLearning.setStatus('current')
jnxVplsConfigDiscardUnknownDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigDiscardUnknownDest.setStatus('current')
jnxVplsConfigMacAging = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 8), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigMacAging.setStatus('current')
jnxVplsConfigFwdFullHighWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(95)).setUnits('percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigFwdFullHighWatermark.setStatus('current')
jnxVplsConfigFwdFullLowWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setUnits('percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigFwdFullLowWatermark.setStatus('current')
jnxVplsConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 12), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigRowStatus.setStatus('current')
jnxVplsConfigMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1518)).clone(1518)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigMtu.setStatus('current')
jnxVplsConfigVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 14), VPNIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigVpnId.setStatus('current')
jnxVplsConfigServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("vlan", 1), ("ethernet", 2))).clone('vlan')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigServiceType.setStatus('current')
jnxVplsConfigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 2, 1, 16), StorageType().clone('volatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsConfigStorageType.setStatus('current')
jnxVplsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 3), )
if mibBuilder.loadTexts: jnxVplsStatusTable.setStatus('current')
jnxVplsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 3, 1), ).setIndexNames((0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigIndex"))
if mibBuilder.loadTexts: jnxVplsStatusEntry.setStatus('current')
jnxVplsStatusOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("other", 0), ("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsStatusOperStatus.setStatus('current')
jnxVplsStatusPeerCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsStatusPeerCount.setStatus('current')
jnxVplsPwBindTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 4), )
if mibBuilder.loadTexts: jnxVplsPwBindTable.setStatus('current')
jnxVplsPwBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 4, 1), ).setIndexNames((0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigIndex"), (0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsPwBindIndex"))
if mibBuilder.loadTexts: jnxVplsPwBindEntry.setStatus('current')
jnxVplsPwBindConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("autodiscovery", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsPwBindConfigType.setStatus('current')
jnxVplsPwBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mesh", 1), ("spoke", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsPwBindType.setStatus('current')
jnxVplsPwBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 4, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsPwBindRowStatus.setStatus('current')
jnxVplsPwBindStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 4, 1, 4), StorageType().clone('volatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsPwBindStorageType.setStatus('current')
jnxVplsPwBindIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 4, 1, 5), PwIndexType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsPwBindIndex.setStatus('current')
jnxVplsBgpADConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 5), )
if mibBuilder.loadTexts: jnxVplsBgpADConfigTable.setStatus('current')
jnxVplsBgpADConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 5, 1), ).setIndexNames((0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigIndex"))
if mibBuilder.loadTexts: jnxVplsBgpADConfigEntry.setStatus('current')
jnxVplsBgpADConfigRouteDistinguisher = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 5, 1, 1), JnxVplsBgpRouteDistinguisher()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsBgpADConfigRouteDistinguisher.setStatus('current')
jnxVplsBgpADConfigPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsBgpADConfigPrefix.setStatus('current')
jnxVplsBgpADConfigVplsId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 5, 1, 3), JnxVplsBgpRouteDistinguisher()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsBgpADConfigVplsId.setStatus('current')
jnxVplsBgpADConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 5, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsBgpADConfigRowStatus.setStatus('current')
jnxVplsBgpRteTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 6), )
if mibBuilder.loadTexts: jnxVplsBgpRteTargetTable.setStatus('current')
jnxVplsBgpRteTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 6, 1), ).setIndexNames((0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigIndex"), (0, "VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsBgpRteTargetIndex"))
if mibBuilder.loadTexts: jnxVplsBgpRteTargetEntry.setStatus('current')
jnxVplsBgpRteTargetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxVplsBgpRteTargetIndex.setStatus('current')
jnxVplsBgpRteTargetRTType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 6, 1, 2), JnxVplsBgpRouteTargetType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsBgpRteTargetRTType.setStatus('current')
jnxVplsBgpRteTargetRT = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 6, 1, 3), JnxVplsBgpRouteTarget()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsBgpRteTargetRT.setStatus('current')
jnxVplsBgpRteTargetRTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 6, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxVplsBgpRteTargetRTRowStatus.setStatus('current')
jnxVplsStatusNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxVplsStatusNotifEnable.setStatus('current')
jnxVplsNotificationMaxRate = MibScalar((1, 3, 6, 1, 4, 1, 2636, 5, 8, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jnxVplsNotificationMaxRate.setStatus('current')
jnxVplsStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 2636, 5, 8, 0, 1)).setObjects(("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigVpnId"), ("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigAdminStatus"), ("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsStatusOperStatus"))
if mibBuilder.loadTexts: jnxVplsStatusChanged.setStatus('current')
jnxVplsFwdFullAlarmRaised = NotificationType((1, 3, 6, 1, 4, 1, 2636, 5, 8, 0, 2)).setObjects(("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigVpnId"), ("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigFwdFullHighWatermark"), ("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigFwdFullLowWatermark"))
if mibBuilder.loadTexts: jnxVplsFwdFullAlarmRaised.setStatus('current')
jnxVplsFwdFullAlarmCleared = NotificationType((1, 3, 6, 1, 4, 1, 2636, 5, 8, 0, 3)).setObjects(("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigVpnId"), ("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigFwdFullHighWatermark"), ("VPLS-GENERIC-DRAFT-01-MIB", "jnxVplsConfigFwdFullLowWatermark"))
if mibBuilder.loadTexts: jnxVplsFwdFullAlarmCleared.setStatus('current')
mibBuilder.exportSymbols("VPLS-GENERIC-DRAFT-01-MIB", jnxVplsConfigMacLearning=jnxVplsConfigMacLearning, jnxVplsConfigAdminStatus=jnxVplsConfigAdminStatus, jnxVplsBgpRteTargetRT=jnxVplsBgpRteTargetRT, jnxVplsConfigDiscardUnknownDest=jnxVplsConfigDiscardUnknownDest, jnxVplsStatusNotifEnable=jnxVplsStatusNotifEnable, jnxVplsConfigFwdFullLowWatermark=jnxVplsConfigFwdFullLowWatermark, jnxVplsStatusPeerCount=jnxVplsStatusPeerCount, PwIndexType=PwIndexType, jnxVplsConfigMacAging=jnxVplsConfigMacAging, jnxVplsPwBindEntry=jnxVplsPwBindEntry, jnxVplsBgpADConfigRouteDistinguisher=jnxVplsBgpADConfigRouteDistinguisher, jnxVplsConfigIndexNext=jnxVplsConfigIndexNext, jnxVplsNotificationMaxRate=jnxVplsNotificationMaxRate, jnxVplsPwBindTable=jnxVplsPwBindTable, jnxVplsConfigFwdFullHighWatermark=jnxVplsConfigFwdFullHighWatermark, jnxVplsPwBindConfigType=jnxVplsPwBindConfigType, jnxVplsStatusOperStatus=jnxVplsStatusOperStatus, jnxVplsBgpRteTargetRTRowStatus=jnxVplsBgpRteTargetRTRowStatus, JnxVplsBgpRouteTargetType=JnxVplsBgpRouteTargetType, jnxVplsConfigRowStatus=jnxVplsConfigRowStatus, jnxVplsStatusEntry=jnxVplsStatusEntry, jnxVplsBgpRteTargetTable=jnxVplsBgpRteTargetTable, JnxVplsBgpRouteDistinguisher=JnxVplsBgpRouteDistinguisher, jnxVplsConformance=jnxVplsConformance, jnxVplsConfigTable=jnxVplsConfigTable, jnxVplsBgpADConfigEntry=jnxVplsBgpADConfigEntry, jnxVplsConfigIndex=jnxVplsConfigIndex, jnxVplsObjects=jnxVplsObjects, jnxVplsBgpRteTargetEntry=jnxVplsBgpRteTargetEntry, jnxVplsConfigEntry=jnxVplsConfigEntry, jnxVplsConfigDescr=jnxVplsConfigDescr, jnxVplsPwBindIndex=jnxVplsPwBindIndex, jnxVplsBgpRteTargetRTType=jnxVplsBgpRteTargetRTType, jnxVplsFwdFullAlarmRaised=jnxVplsFwdFullAlarmRaised, jnxVplsConfigVpnId=jnxVplsConfigVpnId, jnxVplsPwBindRowStatus=jnxVplsPwBindRowStatus, jnxVplsBgpADConfigTable=jnxVplsBgpADConfigTable, jnxVplsPwBindStorageType=jnxVplsPwBindStorageType, jnxVplsStatusTable=jnxVplsStatusTable, PYSNMP_MODULE_ID=jnxVplsGenericDraft01MIB, jnxVplsFwdFullAlarmCleared=jnxVplsFwdFullAlarmCleared, jnxVplsPwBindType=jnxVplsPwBindType, jnxVplsBgpADConfigVplsId=jnxVplsBgpADConfigVplsId, jnxVplsConfigMtu=jnxVplsConfigMtu, jnxVplsBgpADConfigRowStatus=jnxVplsBgpADConfigRowStatus, jnxVplsBgpRteTargetIndex=jnxVplsBgpRteTargetIndex, jnxVplsGenericDraft01MIB=jnxVplsGenericDraft01MIB, JnxVplsBgpRouteTarget=JnxVplsBgpRouteTarget, jnxVplsStatusChanged=jnxVplsStatusChanged, jnxVplsConfigName=jnxVplsConfigName, jnxVplsNotifications=jnxVplsNotifications, jnxVplsBgpADConfigPrefix=jnxVplsBgpADConfigPrefix, jnxVplsConfigServiceType=jnxVplsConfigServiceType, jnxVplsConfigStorageType=jnxVplsConfigStorageType)
