#
# PySNMP MIB module HUAWEI-LswQos-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-LswQos-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:34:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
lswCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "lswCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, TimeTicks, Gauge32, ModuleIdentity, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, Counter32, IpAddress, NotificationType, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "Gauge32", "ModuleIdentity", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "Counter32", "IpAddress", "NotificationType", "MibIdentifier", "ObjectIdentity")
DisplayString, TextualConvention, RowStatus, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "MacAddress", "TruthValue")
hwLswQosAclMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16))
hwLswQosAclMib.setRevisions(('2002-11-19 00:00',))
if mibBuilder.loadTexts: hwLswQosAclMib.setLastUpdated('200211190000Z')
if mibBuilder.loadTexts: hwLswQosAclMib.setOrganization('HUAWEI LANSWITCH')
class HwMirrorOrMonitorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("port", 1), ("board", 2))

hwLswQosMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2))
hwPriorityTrustMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 0), ("dscp", 1), ("ipprecedence", 2), ("cos", 3), ("localprecedence", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPriorityTrustMode.setStatus('current')
hwPortMonitorBothIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortMonitorBothIfIndex.setStatus('current')
hwQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3), )
if mibBuilder.loadTexts: hwQueueTable.setStatus('current')
hwQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwQueueIfIndex"))
if mibBuilder.loadTexts: hwQueueEntry.setStatus('current')
hwQueueIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwQueueIfIndex.setStatus('current')
hwQueueScheduleMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("sp", 1), ("wrr", 2), ("wrr-max-delay", 3), ("sc-0", 4), ("sc-1", 5), ("sc-2", 6), ("rr", 7), ("wfq", 8), ("hq-wrr", 9))).clone('sp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueScheduleMode.setStatus('current')
hwQueueWeight1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueWeight1.setStatus('current')
hwQueueWeight2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueWeight2.setStatus('current')
hwQueueWeight3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueWeight3.setStatus('current')
hwQueueWeight4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueWeight4.setStatus('current')
hwQueueMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueMaxDelay.setStatus('current')
hwQueueWeight5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueWeight5.setStatus('current')
hwQueueWeight6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueWeight6.setStatus('current')
hwQueueWeight7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueWeight7.setStatus('current')
hwQueueWeight8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQueueWeight8.setStatus('current')
hwRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4), )
if mibBuilder.loadTexts: hwRateLimitTable.setStatus('current')
hwRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwRateLimitAclIndex"), (0, "HUAWEI-LswQos-MIB", "hwRateLimitIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwRateLimitVlanID"), (0, "HUAWEI-LswQos-MIB", "hwRateLimitDirection"))
if mibBuilder.loadTexts: hwRateLimitEntry.setStatus('current')
hwRateLimitAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitAclIndex.setStatus('current')
hwRateLimitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitIfIndex.setStatus('current')
hwRateLimitVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitVlanID.setStatus('current')
hwRateLimitDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("input", 1), ("output", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitDirection.setStatus('current')
hwRateLimitUserAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000, 5999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitUserAclNum.setStatus('current')
hwRateLimitUserAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitUserAclRule.setStatus('current')
hwRateLimitIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitIpAclNum.setStatus('current')
hwRateLimitIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitIpAclRule.setStatus('current')
hwRateLimitLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitLinkAclNum.setStatus('current')
hwRateLimitLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitLinkAclRule.setStatus('current')
hwRateLimitTargetRateMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitTargetRateMbps.setStatus('current')
hwRateLimitTargetRateKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitTargetRateKbps.setStatus('current')
hwRateLimitPeakRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 8388608), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitPeakRate.setStatus('current')
hwRateLimitCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 34120000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitCIR.setStatus('current')
hwRateLimitCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitCBS.setStatus('current')
hwRateLimitEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435455))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitEBS.setStatus('current')
hwRateLimitPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 34120000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitPIR.setStatus('current')
hwRateLimitConformLocalPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 18), Integer32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitConformLocalPre.setStatus('current')
hwRateLimitConformActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 0), ("remark-cos", 1), ("remark-drop-priority", 2), ("remark-cos-drop-priority", 3), ("remark-policed-service", 4), ("remark-dscp", 5))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitConformActionType.setStatus('current')
hwRateLimitExceedActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 0), ("forward", 1), ("drop", 2), ("remarkdscp", 3), ("exceed-cos", 4))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitExceedActionType.setStatus('current')
hwRateLimitExceedDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitExceedDscp.setStatus('current')
hwRateLimitRuntime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRateLimitRuntime.setStatus('current')
hwRateLimitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitRowStatus.setStatus('current')
hwRateLimitExceedCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 24), Integer32().clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitExceedCos.setStatus('current')
hwRateLimitConformCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitConformCos.setStatus('current')
hwRateLimitConformDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitConformDscp.setStatus('current')
hwRateLimitMeterStatByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRateLimitMeterStatByteCount.setStatus('current')
hwRateLimitMeterStatByteXCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRateLimitMeterStatByteXCount.setStatus('current')
hwRateLimitMeterStatState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 4, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("set", 1), ("unDo", 2), ("reset", 3), ("running", 4), ("notRunning", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRateLimitMeterStatState.setStatus('current')
hwPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5), )
if mibBuilder.loadTexts: hwPriorityTable.setStatus('current')
hwPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwPriorityAclIndex"), (0, "HUAWEI-LswQos-MIB", "hwPriorityIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwPriorityVlanID"), (0, "HUAWEI-LswQos-MIB", "hwPriorityDirection"))
if mibBuilder.loadTexts: hwPriorityEntry.setStatus('current')
hwPriorityAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityAclIndex.setStatus('current')
hwPriorityIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityIfIndex.setStatus('current')
hwPriorityVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityVlanID.setStatus('current')
hwPriorityDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("input", 1), ("output", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityDirection.setStatus('current')
hwPriorityUserAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000, 5999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityUserAclNum.setStatus('current')
hwPriorityUserAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityUserAclRule.setStatus('current')
hwPriorityIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityIpAclNum.setStatus('current')
hwPriorityIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityIpAclRule.setStatus('current')
hwPriorityLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityLinkAclNum.setStatus('current')
hwPriorityLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityLinkAclRule.setStatus('current')
hwPriorityDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityDscp.setStatus('current')
hwPriorityIpPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityIpPre.setStatus('current')
hwPriorityIpPreFromCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 13), TruthValue().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityIpPreFromCos.setStatus('current')
hwPriorityCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityCos.setStatus('current')
hwPriorityCosFromIpPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 15), TruthValue().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityCosFromIpPre.setStatus('current')
hwPriorityLocalPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityLocalPre.setStatus('current')
hwPriorityPolicedServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 0), ("auto", 1), ("trust-dscp", 2), ("new-dscp", 3), ("untrusted", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityPolicedServiceType.setStatus('current')
hwPriorityPolicedServiceDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityPolicedServiceDscp.setStatus('current')
hwPriorityPolicedServiceExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityPolicedServiceExp.setStatus('current')
hwPriorityPolicedServiceCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityPolicedServiceCos.setStatus('current')
hwPriorityPolicedServiceLoaclPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityPolicedServiceLoaclPre.setStatus('current')
hwPriorityPolicedServiceDropPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityPolicedServiceDropPriority.setStatus('current')
hwPriorityRuntime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPriorityRuntime.setStatus('current')
hwPriorityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 5, 1, 24), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPriorityRowStatus.setStatus('current')
hwRedirectTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6), )
if mibBuilder.loadTexts: hwRedirectTable.setStatus('current')
hwRedirectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwRedirectAclIndex"), (0, "HUAWEI-LswQos-MIB", "hwRedirectIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwRedirectVlanID"), (0, "HUAWEI-LswQos-MIB", "hwRedirectDirection"))
if mibBuilder.loadTexts: hwRedirectEntry.setStatus('current')
hwRedirectAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectAclIndex.setStatus('current')
hwRedirectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectIfIndex.setStatus('current')
hwRedirectVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectVlanID.setStatus('current')
hwRedirectDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("input", 1), ("output", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectDirection.setStatus('current')
hwRedirectUserAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000, 5999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectUserAclNum.setStatus('current')
hwRedirectUserAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectUserAclRule.setStatus('current')
hwRedirectIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectIpAclNum.setStatus('current')
hwRedirectIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectIpAclRule.setStatus('current')
hwRedirectLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectLinkAclNum.setStatus('current')
hwRedirectLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectLinkAclRule.setStatus('current')
hwRedirectToCpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 11), TruthValue().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectToCpu.setStatus('current')
hwRedirectToIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectToIfIndex.setStatus('current')
hwRedirectToNextHop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectToNextHop1.setStatus('current')
hwRedirectToNextHop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectToNextHop2.setStatus('current')
hwRedirectRuntime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRedirectRuntime.setStatus('current')
hwRedirectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectRowStatus.setStatus('current')
hwRedirectToSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectToSlotNo.setStatus('current')
hwRedirectRemarkedDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectRemarkedDSCP.setStatus('current')
hwRedirectRemarkedPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectRemarkedPri.setStatus('current')
hwRedirectRemarkedTos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectRemarkedTos.setStatus('current')
hwRedirectToNextHop3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 21), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectToNextHop3.setStatus('current')
hwRedirectTargetVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectTargetVlanID.setStatus('current')
hwRedirectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("strict-priority", 1), ("load-balance", 2))).clone('strict-priority')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectMode.setStatus('current')
hwRedirectToNestedVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 24), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectToNestedVlanID.setStatus('current')
hwRedirectToModifiedVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 6, 1, 25), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedirectToModifiedVlanID.setStatus('current')
hwStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7), )
if mibBuilder.loadTexts: hwStatisticTable.setStatus('current')
hwStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwStatisticAclIndex"), (0, "HUAWEI-LswQos-MIB", "hwStatisticIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwStatisticVlanID"), (0, "HUAWEI-LswQos-MIB", "hwStatisticDirection"))
if mibBuilder.loadTexts: hwStatisticEntry.setStatus('current')
hwStatisticAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticAclIndex.setStatus('current')
hwStatisticIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticIfIndex.setStatus('current')
hwStatisticVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticVlanID.setStatus('current')
hwStatisticDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("input", 1), ("output", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticDirection.setStatus('current')
hwStatisticUserAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000, 5999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticUserAclNum.setStatus('current')
hwStatisticUserAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticUserAclRule.setStatus('current')
hwStatisticIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticIpAclNum.setStatus('current')
hwStatisticIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticIpAclRule.setStatus('current')
hwStatisticLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticLinkAclNum.setStatus('current')
hwStatisticLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticLinkAclRule.setStatus('current')
hwStatisticRuntime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStatisticRuntime.setStatus('current')
hwStatisticPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStatisticPacketCount.setStatus('current')
hwStatisticByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStatisticByteCount.setStatus('current')
hwStatisticCountClear = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("nouse", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStatisticCountClear.setStatus('current')
hwStatisticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwStatisticRowStatus.setStatus('current')
hwStatisticPacketXCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStatisticPacketXCount.setStatus('current')
hwStatisticByteXCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStatisticByteXCount.setStatus('current')
hwMirrorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8), )
if mibBuilder.loadTexts: hwMirrorTable.setStatus('current')
hwMirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwMirrorAclIndex"), (0, "HUAWEI-LswQos-MIB", "hwMirrorIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwMirrorVlanID"), (0, "HUAWEI-LswQos-MIB", "hwMirrorDirection"))
if mibBuilder.loadTexts: hwMirrorEntry.setStatus('current')
hwMirrorAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorAclIndex.setStatus('current')
hwMirrorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorIfIndex.setStatus('current')
hwMirrorVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorVlanID.setStatus('current')
hwMirrorDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("input", 1), ("output", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorDirection.setStatus('current')
hwMirrorUserAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000, 5999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorUserAclNum.setStatus('current')
hwMirrorUserAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorUserAclRule.setStatus('current')
hwMirrorIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorIpAclNum.setStatus('current')
hwMirrorIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorIpAclRule.setStatus('current')
hwMirrorLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorLinkAclNum.setStatus('current')
hwMirrorLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorLinkAclRule.setStatus('current')
hwMirrorToIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorToIfIndex.setStatus('current')
hwMirrorToCpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorToCpu.setStatus('current')
hwMirrorRuntime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMirrorRuntime.setStatus('current')
hwMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorRowStatus.setStatus('current')
hwMirrorToGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 8, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorToGroup.setStatus('current')
hwPortMirrorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 9), )
if mibBuilder.loadTexts: hwPortMirrorTable.setStatus('current')
hwPortMirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 9, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwPortMirrorIfIndex"))
if mibBuilder.loadTexts: hwPortMirrorEntry.setStatus('current')
hwPortMirrorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 9, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortMirrorIfIndex.setStatus('current')
hwPortMirrorDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("in", 1), ("out", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortMirrorDirection.setStatus('current')
hwPortMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortMirrorRowStatus.setStatus('current')
hwLineRateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 10), )
if mibBuilder.loadTexts: hwLineRateTable.setStatus('current')
hwLineRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 10, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwLineRateIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwLineRateDirection"))
if mibBuilder.loadTexts: hwLineRateEntry.setStatus('current')
hwLineRateIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 10, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLineRateIfIndex.setStatus('current')
hwLineRateDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLineRateDirection.setStatus('current')
hwLineRateValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 10, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLineRateValue.setStatus('current')
hwLineRateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLineRateRowStatus.setStatus('current')
hwBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11), )
if mibBuilder.loadTexts: hwBandwidthTable.setStatus('current')
hwBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwBandwidthAclIndex"), (0, "HUAWEI-LswQos-MIB", "hwBandwidthIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwBandwidthVlanID"), (0, "HUAWEI-LswQos-MIB", "hwBandwidthDirection"))
if mibBuilder.loadTexts: hwBandwidthEntry.setStatus('current')
hwBandwidthAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBandwidthAclIndex.setStatus('current')
hwBandwidthIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBandwidthIfIndex.setStatus('current')
hwBandwidthVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBandwidthVlanID.setStatus('current')
hwBandwidthDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("invalid", 0), ("output", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBandwidthDirection.setStatus('current')
hwBandwidthIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBandwidthIpAclNum.setStatus('current')
hwBandwidthIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBandwidthIpAclRule.setStatus('current')
hwBandwidthLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBandwidthLinkAclNum.setStatus('current')
hwBandwidthLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBandwidthLinkAclRule.setStatus('current')
hwBandwidthMinGuaranteedWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8388608))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBandwidthMinGuaranteedWidth.setStatus('current')
hwBandwidthMaxGuaranteedWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8388608))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBandwidthMaxGuaranteedWidth.setStatus('current')
hwBandwidthWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBandwidthWeight.setStatus('current')
hwBandwidthRuntime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBandwidthRuntime.setStatus('current')
hwBandwidthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 11, 1, 13), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBandwidthRowStatus.setStatus('current')
hwRedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12), )
if mibBuilder.loadTexts: hwRedTable.setStatus('current')
hwRedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwRedAclIndex"), (0, "HUAWEI-LswQos-MIB", "hwRedIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwRedVlanID"), (0, "HUAWEI-LswQos-MIB", "hwRedDirection"))
if mibBuilder.loadTexts: hwRedEntry.setStatus('current')
hwRedAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedAclIndex.setStatus('current')
hwRedIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedIfIndex.setStatus('current')
hwRedVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedVlanID.setStatus('current')
hwRedDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("invalid", 0), ("output", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedDirection.setStatus('current')
hwRedIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedIpAclNum.setStatus('current')
hwRedIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedIpAclRule.setStatus('current')
hwRedLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedLinkAclNum.setStatus('current')
hwRedLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRedLinkAclRule.setStatus('current')
hwRedStartQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 262128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRedStartQueueLen.setStatus('current')
hwRedStopQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 262128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRedStopQueueLen.setStatus('current')
hwRedProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRedProbability.setStatus('current')
hwRedRuntime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRedRuntime.setStatus('current')
hwRedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 12, 1, 13), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRedRowStatus.setStatus('current')
hwMirrorGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 13), )
if mibBuilder.loadTexts: hwMirrorGroupTable.setStatus('current')
hwMirrorGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 13, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwMirrorGroupID"))
if mibBuilder.loadTexts: hwMirrorGroupEntry.setStatus('current')
hwMirrorGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMirrorGroupID.setStatus('current')
hwMirrorGroupDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("input", 1), ("output", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMirrorGroupDirection.setStatus('current')
hwMirrorGroupMirrorIfIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 13, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 257))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMirrorGroupMirrorIfIndexList.setStatus('current')
hwMirrorGroupMonitorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 13, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMirrorGroupMonitorIfIndex.setStatus('current')
hwMirrorGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 13, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMirrorGroupRowStatus.setStatus('current')
hwFlowtempTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14), )
if mibBuilder.loadTexts: hwFlowtempTable.setStatus('current')
hwFlowtempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwFlowtempIndex"))
if mibBuilder.loadTexts: hwFlowtempEntry.setStatus('current')
hwFlowtempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("user-defined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFlowtempIndex.setStatus('current')
hwFlowtempIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempIpProtocol.setStatus('current')
hwFlowtempTcpFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempTcpFlag.setStatus('current')
hwFlowtempSPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempSPort.setStatus('current')
hwFlowtempDPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempDPort.setStatus('current')
hwFlowtempIcmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempIcmpType.setStatus('current')
hwFlowtempIcmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempIcmpCode.setStatus('current')
hwFlowtempFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 8), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempFragment.setStatus('current')
hwFlowtempDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempDscp.setStatus('current')
hwFlowtempIpPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempIpPre.setStatus('current')
hwFlowtempTos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempTos.setStatus('current')
hwFlowtempSIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempSIp.setStatus('current')
hwFlowtempSIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempSIpMask.setStatus('current')
hwFlowtempDIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempDIp.setStatus('current')
hwFlowtempDIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 15), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempDIpMask.setStatus('current')
hwFlowtempEthProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 16), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempEthProtocol.setStatus('current')
hwFlowtempSMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempSMac.setStatus('current')
hwFlowtempSMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 18), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempSMacMask.setStatus('current')
hwFlowtempDMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 19), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempDMac.setStatus('current')
hwFlowtempDMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 20), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempDMacMask.setStatus('current')
hwFlowtempVpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 21), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempVpn.setStatus('current')
hwFlowtempRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempRowStatus.setStatus('current')
hwFlowtempVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 23), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempVlanId.setStatus('current')
hwFlowtempCos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 14, 1, 24), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempCos.setStatus('current')
hwFlowtempEnableTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 15), )
if mibBuilder.loadTexts: hwFlowtempEnableTable.setStatus('current')
hwFlowtempEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 15, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwFlowtempEnableIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwFlowtempEnableVlanID"))
if mibBuilder.loadTexts: hwFlowtempEnableEntry.setStatus('current')
hwFlowtempEnableIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 15, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempEnableIfIndex.setStatus('current')
hwFlowtempEnableVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFlowtempEnableVlanID.setStatus('current')
hwFlowtempEnableFlowtempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("user-defined", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFlowtempEnableFlowtempIndex.setStatus('current')
hwTrafficShapeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 16), )
if mibBuilder.loadTexts: hwTrafficShapeTable.setStatus('current')
hwTrafficShapeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 16, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwTrafficShapeIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwTrafficShapeQueueId"))
if mibBuilder.loadTexts: hwTrafficShapeEntry.setStatus('current')
hwTrafficShapeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 16, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrafficShapeIfIndex.setStatus('current')
hwTrafficShapeQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrafficShapeQueueId.setStatus('current')
hwTrafficShapeMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 16, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrafficShapeMaxRate.setStatus('current')
hwTrafficShapeBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 16, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrafficShapeBurstSize.setStatus('current')
hwTrafficShapeBufferLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 8000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrafficShapeBufferLimit.setStatus('current')
hwTrafficShapeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 16, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrafficShapeRowStatus.setStatus('current')
hwPortQueueTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 17), )
if mibBuilder.loadTexts: hwPortQueueTable.setStatus('current')
hwPortQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 17, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwPortQueueIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwPortQueueQueueID"))
if mibBuilder.loadTexts: hwPortQueueEntry.setStatus('current')
hwPortQueueIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortQueueIfIndex.setStatus('current')
hwPortQueueQueueID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortQueueQueueID.setStatus('current')
hwPortQueueWrrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sp", 1), ("wrr-high-priority", 2), ("wrr-low-priority", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortQueueWrrPriority.setStatus('current')
hwPortQueueWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortQueueWeight.setStatus('current')
hwDropModeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 18), )
if mibBuilder.loadTexts: hwDropModeTable.setStatus('current')
hwDropModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 18, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwDropModeIfIndex"))
if mibBuilder.loadTexts: hwDropModeEntry.setStatus('current')
hwDropModeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDropModeIfIndex.setStatus('current')
hwDropModeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("random-detect", 1), ("tail-drop", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDropModeMode.setStatus('current')
hwDropModeWredIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDropModeWredIndex.setStatus('current')
hwWredTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19), )
if mibBuilder.loadTexts: hwWredTable.setStatus('current')
hwWredEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwWredIndex"), (0, "HUAWEI-LswQos-MIB", "hwWredQueueId"))
if mibBuilder.loadTexts: hwWredEntry.setStatus('current')
hwWredIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWredIndex.setStatus('current')
hwWredQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwWredQueueId.setStatus('current')
hwWredGreenMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredGreenMinThreshold.setStatus('current')
hwWredGreenMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredGreenMaxThreshold.setStatus('current')
hwWredGreenMaxProb = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredGreenMaxProb.setStatus('current')
hwWredYellowMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredYellowMinThreshold.setStatus('current')
hwWredYellowMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredYellowMaxThreshold.setStatus('current')
hwWredYellowMaxProb = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredYellowMaxProb.setStatus('current')
hwWredRedMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredRedMinThreshold.setStatus('current')
hwWredRedMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredRedMaxThreshold.setStatus('current')
hwWredRedMaxProb = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredRedMaxProb.setStatus('current')
hwWredExponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 19, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWredExponent.setStatus('current')
hwCosToLocalPrecedenceMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 20), )
if mibBuilder.loadTexts: hwCosToLocalPrecedenceMapTable.setStatus('current')
hwCosToLocalPrecedenceMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 20, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwCosToLocalPrecedenceMapCosIndex"))
if mibBuilder.loadTexts: hwCosToLocalPrecedenceMapEntry.setStatus('current')
hwCosToLocalPrecedenceMapCosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCosToLocalPrecedenceMapCosIndex.setStatus('current')
hwCosToLocalPrecedenceMapLocalPrecedenceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 20, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCosToLocalPrecedenceMapLocalPrecedenceValue.setStatus('current')
hwCosToDropPrecedenceMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 21), )
if mibBuilder.loadTexts: hwCosToDropPrecedenceMapTable.setStatus('current')
hwCosToDropPrecedenceMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 21, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwCosToDropPrecedenceMapCosIndex"))
if mibBuilder.loadTexts: hwCosToDropPrecedenceMapEntry.setStatus('current')
hwCosToDropPrecedenceMapCosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCosToDropPrecedenceMapCosIndex.setStatus('current')
hwCosToDropPrecedenceMapDropPrecedenceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCosToDropPrecedenceMapDropPrecedenceValue.setStatus('current')
hwDscpMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 22), )
if mibBuilder.loadTexts: hwDscpMapTable.setStatus('current')
hwDscpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 22, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwDscpMapConformLevel"), (0, "HUAWEI-LswQos-MIB", "hwDscpMapDscpIndex"))
if mibBuilder.loadTexts: hwDscpMapEntry.setStatus('current')
hwDscpMapConformLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDscpMapConformLevel.setStatus('current')
hwDscpMapDscpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDscpMapDscpIndex.setStatus('current')
hwDscpMapDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 22, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpMapDscpValue.setStatus('current')
hwDscpMapExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 22, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpMapExpValue.setStatus('current')
hwDscpMapCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 22, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpMapCosValue.setStatus('current')
hwDscpMapLocalPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 22, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpMapLocalPrecedence.setStatus('current')
hwDscpMapDropPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 22, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpMapDropPrecedence.setStatus('current')
hwExpMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 23), )
if mibBuilder.loadTexts: hwExpMapTable.setStatus('current')
hwExpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 23, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwExpMapConformLevel"), (0, "HUAWEI-LswQos-MIB", "hwExpMapExpIndex"))
if mibBuilder.loadTexts: hwExpMapEntry.setStatus('current')
hwExpMapConformLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwExpMapConformLevel.setStatus('current')
hwExpMapExpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 23, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwExpMapExpIndex.setStatus('current')
hwExpMapDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwExpMapDscpValue.setStatus('current')
hwExpMapExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwExpMapExpValue.setStatus('current')
hwExpMapCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwExpMapCosValue.setStatus('current')
hwExpMapLocalPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 23, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwExpMapLocalPrecedence.setStatus('current')
hwExpMapDropPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 23, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwExpMapDropPrecedence.setStatus('current')
hwLocalPrecedenceMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 24), )
if mibBuilder.loadTexts: hwLocalPrecedenceMapTable.setStatus('current')
hwLocalPrecedenceMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 24, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwLocalPrecedenceMapConformLevel"), (0, "HUAWEI-LswQos-MIB", "hwLocalPrecedenceMapLocalPrecedenceIndex"))
if mibBuilder.loadTexts: hwLocalPrecedenceMapEntry.setStatus('current')
hwLocalPrecedenceMapConformLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLocalPrecedenceMapConformLevel.setStatus('current')
hwLocalPrecedenceMapLocalPrecedenceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 24, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalPrecedenceMapLocalPrecedenceIndex.setStatus('current')
hwLocalPrecedenceMapCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 24, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLocalPrecedenceMapCosValue.setStatus('current')
hwPortWredTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 25), )
if mibBuilder.loadTexts: hwPortWredTable.setStatus('current')
hwPortWredEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 25, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwPortWredIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwPortWredQueueID"))
if mibBuilder.loadTexts: hwPortWredEntry.setStatus('current')
hwPortWredIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 25, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortWredIfIndex.setStatus('current')
hwPortWredQueueID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortWredQueueID.setStatus('current')
hwPortWredQueueStartLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortWredQueueStartLength.setStatus('current')
hwPortWredQueueProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortWredQueueProbability.setStatus('current')
hwMirroringGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 26), )
if mibBuilder.loadTexts: hwMirroringGroupTable.setStatus('current')
hwMirroringGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 26, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwMirroringGroupID"))
if mibBuilder.loadTexts: hwMirroringGroupEntry.setStatus('current')
hwMirroringGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: hwMirroringGroupID.setStatus('current')
hwMirroringGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("remote-source", 2), ("remote-destination", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupType.setStatus('current')
hwMirroringGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 26, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMirroringGroupStatus.setStatus('current')
hwMirroringGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 26, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupRowStatus.setStatus('current')
hwMirroringGroupMirrorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 27), )
if mibBuilder.loadTexts: hwMirroringGroupMirrorTable.setStatus('current')
hwMirroringGroupMirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 27, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwMirroringGroupID"))
if mibBuilder.loadTexts: hwMirroringGroupMirrorEntry.setStatus('current')
hwMirroringGroupMirrorInboundIfIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 27, 1, 1), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirrorInboundIfIndexList.setStatus('current')
hwMirroringGroupMirrorOutboundIfIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 27, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirrorOutboundIfIndexList.setStatus('current')
hwMirroringGroupMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 27, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirrorRowStatus.setStatus('current')
hwMirroringGroupMirrorInTypeList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 27, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirrorInTypeList.setStatus('current')
hwMirroringGroupMirrorOutTypeList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 27, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirrorOutTypeList.setStatus('current')
hwMirroringGroupMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 28), )
if mibBuilder.loadTexts: hwMirroringGroupMonitorTable.setStatus('current')
hwMirroringGroupMonitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 28, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwMirroringGroupID"))
if mibBuilder.loadTexts: hwMirroringGroupMonitorEntry.setStatus('current')
hwMirroringGroupMonitorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 28, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMonitorIfIndex.setStatus('current')
hwMirroringGroupMonitorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 28, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMonitorRowStatus.setStatus('current')
hwMirroringGroupMonitorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 28, 1, 3), HwMirrorOrMonitorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMonitorType.setStatus('current')
hwMirroringGroupReflectorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 29), )
if mibBuilder.loadTexts: hwMirroringGroupReflectorTable.setStatus('current')
hwMirroringGroupReflectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 29, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwMirroringGroupID"))
if mibBuilder.loadTexts: hwMirroringGroupReflectorEntry.setStatus('current')
hwMirroringGroupReflectorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 29, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupReflectorIfIndex.setStatus('current')
hwMirroringGroupReflectorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 29, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupReflectorRowStatus.setStatus('current')
hwMirroringGroupRprobeVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 30), )
if mibBuilder.loadTexts: hwMirroringGroupRprobeVlanTable.setStatus('current')
hwMirroringGroupRprobeVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 30, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwMirroringGroupID"))
if mibBuilder.loadTexts: hwMirroringGroupRprobeVlanEntry.setStatus('current')
hwMirroringGroupRprobeVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupRprobeVlanID.setStatus('current')
hwMirroringGroupRprobeVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 30, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupRprobeVlanRowStatus.setStatus('current')
hwMirroringGroupMirrorMacTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 31), )
if mibBuilder.loadTexts: hwMirroringGroupMirrorMacTable.setStatus('current')
hwMirroringGroupMirrorMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 31, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwMirroringGroupID"), (0, "HUAWEI-LswQos-MIB", "hwMirroringGroupMirrorMacSeq"))
if mibBuilder.loadTexts: hwMirroringGroupMirrorMacEntry.setStatus('current')
hwMirroringGroupMirrorMacSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 31, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMirroringGroupMirrorMacSeq.setStatus('current')
hwMirroringGroupMirrorMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 31, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirrorMac.setStatus('current')
hwMirrorMacVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 31, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirrorMacVlanID.setStatus('current')
hwMirroringGroupMirroMacStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 31, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirroMacStatus.setStatus('current')
hwMirroringGroupMirrorVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 32), )
if mibBuilder.loadTexts: hwMirroringGroupMirrorVlanTable.setStatus('current')
hwMirroringGroupMirrorVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 32, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwMirroringGroupID"), (0, "HUAWEI-LswQos-MIB", "hwMirroringGroupMirrorVlanSeq"))
if mibBuilder.loadTexts: hwMirroringGroupMirrorVlanEntry.setStatus('current')
hwMirroringGroupMirrorVlanSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 32, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMirroringGroupMirrorVlanSeq.setStatus('current')
hwMirroringGroupMirrorVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 32, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirrorVlanID.setStatus('current')
hwMirroringGroupMirrorVlanDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 32, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirrorVlanDirection.setStatus('current')
hwMirroringGroupMirroVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 32, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMirroringGroupMirroVlanStatus.setStatus('current')
hwPortTrustTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 33), )
if mibBuilder.loadTexts: hwPortTrustTable.setStatus('current')
hwPortTrustEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 33, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwPortTrustIfIndex"))
if mibBuilder.loadTexts: hwPortTrustEntry.setStatus('current')
hwPortTrustIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 33, 1, 1), Integer32())
if mibBuilder.loadTexts: hwPortTrustIfIndex.setStatus('current')
hwPortTrustTrustType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 33, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("port", 1), ("cos", 2), ("dscp", 3))).clone('port')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortTrustTrustType.setStatus('current')
hwPortTrustOvercastType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 33, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noOvercast", 1), ("overcastDSCP", 2), ("overcastCOS", 3))).clone('noOvercast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortTrustOvercastType.setStatus('current')
hwPortTrustReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 33, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortTrustReset.setStatus('current')
hwRemarkVlanIDTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34), )
if mibBuilder.loadTexts: hwRemarkVlanIDTable.setStatus('current')
hwRemarkVlanIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwRemarkVlanIDAclIndex"), (0, "HUAWEI-LswQos-MIB", "hwRemarkVlanIDIfIndex"), (0, "HUAWEI-LswQos-MIB", "hwRemarkVlanIDVlanID"), (0, "HUAWEI-LswQos-MIB", "hwRemarkVlanIDDirection"))
if mibBuilder.loadTexts: hwRemarkVlanIDEntry.setStatus('current')
hwRemarkVlanIDAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2999)))
if mibBuilder.loadTexts: hwRemarkVlanIDAclIndex.setStatus('current')
hwRemarkVlanIDIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 2), Integer32())
if mibBuilder.loadTexts: hwRemarkVlanIDIfIndex.setStatus('current')
hwRemarkVlanIDVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hwRemarkVlanIDVlanID.setStatus('current')
hwRemarkVlanIDDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("input", 1), ("output", 2))))
if mibBuilder.loadTexts: hwRemarkVlanIDDirection.setStatus('current')
hwRemarkVlanIDUserAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000, 5999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemarkVlanIDUserAclNum.setStatus('current')
hwRemarkVlanIDUserAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemarkVlanIDUserAclRule.setStatus('current')
hwRemarkVlanIDIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemarkVlanIDIpAclNum.setStatus('current')
hwRemarkVlanIDIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemarkVlanIDIpAclRule.setStatus('current')
hwRemarkVlanIDLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ValueRangeConstraint(10000, 12999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemarkVlanIDLinkAclNum.setStatus('current')
hwRemarkVlanIDLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemarkVlanIDLinkAclRule.setStatus('current')
hwRemarkVlanIDRemarkVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemarkVlanIDRemarkVlanID.setStatus('current')
hwRemarkVlanIDPacketType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("all", 1), ("tagged", 2), ("untagged", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemarkVlanIDPacketType.setStatus('current')
hwRemarkVlanIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 34, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRemarkVlanIDRowStatus.setStatus('current')
hwCosToDscpMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 35), )
if mibBuilder.loadTexts: hwCosToDscpMapTable.setStatus('current')
hwCosToDscpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 35, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwCosToDscpMapCosIndex"))
if mibBuilder.loadTexts: hwCosToDscpMapEntry.setStatus('current')
hwCosToDscpMapCosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 35, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hwCosToDscpMapCosIndex.setStatus('current')
hwCosToDscpMapDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 35, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCosToDscpMapDscpValue.setStatus('current')
hwCosToDscpMapReSet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 35, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCosToDscpMapReSet.setStatus('current')
hwDscpToLocalPreMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 36), )
if mibBuilder.loadTexts: hwDscpToLocalPreMapTable.setStatus('current')
hwDscpToLocalPreMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 36, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwDscpToLocalPreMapDscpIndex"))
if mibBuilder.loadTexts: hwDscpToLocalPreMapEntry.setStatus('current')
hwDscpToLocalPreMapDscpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 36, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: hwDscpToLocalPreMapDscpIndex.setStatus('current')
hwDscpToLocalPreMapLocalPreVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 36, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpToLocalPreMapLocalPreVal.setStatus('current')
hwDscpToLocalPreMapReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 36, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpToLocalPreMapReset.setStatus('current')
hwDscpToDropPreMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 37), )
if mibBuilder.loadTexts: hwDscpToDropPreMapTable.setStatus('current')
hwDscpToDropPreMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 37, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwDscpToDropPreMapDscpIndex"))
if mibBuilder.loadTexts: hwDscpToDropPreMapEntry.setStatus('current')
hwDscpToDropPreMapDscpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 37, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: hwDscpToDropPreMapDscpIndex.setStatus('current')
hwDscpToDropPreMapDropPreVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 37, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpToDropPreMapDropPreVal.setStatus('current')
hwDscpToDropPreMapReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 37, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpToDropPreMapReset.setStatus('current')
hwDscpToCosMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 38), )
if mibBuilder.loadTexts: hwDscpToCosMapTable.setStatus('current')
hwDscpToCosMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 38, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwDscpToCosMapDscpIndex"))
if mibBuilder.loadTexts: hwDscpToCosMapEntry.setStatus('current')
hwDscpToCosMapDscpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 38, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: hwDscpToCosMapDscpIndex.setStatus('current')
hwDscpToCosMapCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 38, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpToCosMapCosValue.setStatus('current')
hwDscpToCosMapReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 38, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpToCosMapReset.setStatus('current')
hwDscpToDscpMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 39), )
if mibBuilder.loadTexts: hwDscpToDscpMapTable.setStatus('current')
hwDscpToDscpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 39, 1), ).setIndexNames((0, "HUAWEI-LswQos-MIB", "hwDscpToDscpMapDscpIndex"))
if mibBuilder.loadTexts: hwDscpToDscpMapEntry.setStatus('current')
hwDscpToDscpMapDscpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: hwDscpToDscpMapDscpIndex.setStatus('current')
hwDscpToDscpMapDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 39, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpToDscpMapDscpValue.setStatus('current')
hwDscpToDscpMapReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 23, 1, 16, 2, 39, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDscpToDscpMapReset.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-LswQos-MIB", hwWredExponent=hwWredExponent, hwPortTrustReset=hwPortTrustReset, hwRedVlanID=hwRedVlanID, hwRedirectRuntime=hwRedirectRuntime, hwLineRateTable=hwLineRateTable, hwPriorityTable=hwPriorityTable, hwRateLimitIfIndex=hwRateLimitIfIndex, hwBandwidthDirection=hwBandwidthDirection, hwRateLimitMeterStatByteCount=hwRateLimitMeterStatByteCount, hwFlowtempEnableFlowtempIndex=hwFlowtempEnableFlowtempIndex, hwFlowtempDMac=hwFlowtempDMac, hwRedirectTable=hwRedirectTable, hwMirroringGroupMirrorMacSeq=hwMirroringGroupMirrorMacSeq, hwLineRateRowStatus=hwLineRateRowStatus, hwWredGreenMaxThreshold=hwWredGreenMaxThreshold, hwDscpToDropPreMapDropPreVal=hwDscpToDropPreMapDropPreVal, hwMirroringGroupReflectorEntry=hwMirroringGroupReflectorEntry, hwRedirectIfIndex=hwRedirectIfIndex, hwPriorityPolicedServiceType=hwPriorityPolicedServiceType, hwRedirectToCpu=hwRedirectToCpu, hwWredRedMinThreshold=hwWredRedMinThreshold, hwStatisticVlanID=hwStatisticVlanID, hwRedirectRemarkedDSCP=hwRedirectRemarkedDSCP, hwQueueTable=hwQueueTable, hwRemarkVlanIDUserAclNum=hwRemarkVlanIDUserAclNum, hwRedirectLinkAclNum=hwRedirectLinkAclNum, hwDscpToLocalPreMapEntry=hwDscpToLocalPreMapEntry, hwRateLimitPIR=hwRateLimitPIR, hwPortWredQueueID=hwPortWredQueueID, hwWredQueueId=hwWredQueueId, hwRedIfIndex=hwRedIfIndex, hwRedirectRowStatus=hwRedirectRowStatus, hwQueueWeight4=hwQueueWeight4, hwFlowtempDPort=hwFlowtempDPort, hwPriorityPolicedServiceDropPriority=hwPriorityPolicedServiceDropPriority, hwPriorityRuntime=hwPriorityRuntime, hwRedirectEntry=hwRedirectEntry, hwPortMirrorTable=hwPortMirrorTable, hwStatisticUserAclRule=hwStatisticUserAclRule, hwRedStartQueueLen=hwRedStartQueueLen, hwDscpToDropPreMapTable=hwDscpToDropPreMapTable, hwWredYellowMaxThreshold=hwWredYellowMaxThreshold, hwBandwidthVlanID=hwBandwidthVlanID, hwMirrorEntry=hwMirrorEntry, hwRedirectVlanID=hwRedirectVlanID, hwRedLinkAclRule=hwRedLinkAclRule, hwMirroringGroupRprobeVlanID=hwMirroringGroupRprobeVlanID, hwMirroringGroupMirrorVlanDirection=hwMirroringGroupMirrorVlanDirection, hwStatisticPacketXCount=hwStatisticPacketXCount, hwMirrorGroupMonitorIfIndex=hwMirrorGroupMonitorIfIndex, hwMirroringGroupMirrorEntry=hwMirroringGroupMirrorEntry, hwPriorityIpAclRule=hwPriorityIpAclRule, hwLineRateEntry=hwLineRateEntry, hwMirrorIfIndex=hwMirrorIfIndex, hwCosToDropPrecedenceMapDropPrecedenceValue=hwCosToDropPrecedenceMapDropPrecedenceValue, hwWredRedMaxThreshold=hwWredRedMaxThreshold, hwStatisticPacketCount=hwStatisticPacketCount, hwMirrorToGroup=hwMirrorToGroup, hwPortMirrorDirection=hwPortMirrorDirection, hwStatisticAclIndex=hwStatisticAclIndex, hwFlowtempDscp=hwFlowtempDscp, hwFlowtempEnableIfIndex=hwFlowtempEnableIfIndex, hwDscpMapDropPrecedence=hwDscpMapDropPrecedence, hwRemarkVlanIDIfIndex=hwRemarkVlanIDIfIndex, hwPortTrustIfIndex=hwPortTrustIfIndex, hwCosToDscpMapDscpValue=hwCosToDscpMapDscpValue, hwMirroringGroupRowStatus=hwMirroringGroupRowStatus, hwMirrorMacVlanID=hwMirrorMacVlanID, hwRemarkVlanIDRowStatus=hwRemarkVlanIDRowStatus, hwMirroringGroupMirrorVlanID=hwMirroringGroupMirrorVlanID, hwMirroringGroupMonitorEntry=hwMirroringGroupMonitorEntry, hwFlowtempTos=hwFlowtempTos, hwFlowtempVpn=hwFlowtempVpn, hwRedirectToNextHop3=hwRedirectToNextHop3, hwCosToLocalPrecedenceMapCosIndex=hwCosToLocalPrecedenceMapCosIndex, hwTrafficShapeTable=hwTrafficShapeTable, hwCosToDscpMapEntry=hwCosToDscpMapEntry, hwQueueScheduleMode=hwQueueScheduleMode, hwCosToLocalPrecedenceMapLocalPrecedenceValue=hwCosToLocalPrecedenceMapLocalPrecedenceValue, hwMirrorGroupTable=hwMirrorGroupTable, hwRateLimitUserAclNum=hwRateLimitUserAclNum, hwRateLimitRuntime=hwRateLimitRuntime, hwDscpMapConformLevel=hwDscpMapConformLevel, hwDscpToLocalPreMapDscpIndex=hwDscpToLocalPreMapDscpIndex, hwBandwidthLinkAclNum=hwBandwidthLinkAclNum, hwFlowtempTable=hwFlowtempTable, hwCosToDropPrecedenceMapCosIndex=hwCosToDropPrecedenceMapCosIndex, hwLswQosMibObject=hwLswQosMibObject, hwCosToLocalPrecedenceMapTable=hwCosToLocalPrecedenceMapTable, hwMirroringGroupMirroMacStatus=hwMirroringGroupMirroMacStatus, hwPriorityIpPreFromCos=hwPriorityIpPreFromCos, hwPriorityTrustMode=hwPriorityTrustMode, hwMirroringGroupMirrorRowStatus=hwMirroringGroupMirrorRowStatus, hwRateLimitUserAclRule=hwRateLimitUserAclRule, hwFlowtempSIpMask=hwFlowtempSIpMask, hwMirroringGroupMonitorRowStatus=hwMirroringGroupMonitorRowStatus, hwLineRateIfIndex=hwLineRateIfIndex, hwQueueEntry=hwQueueEntry, hwRedirectMode=hwRedirectMode, hwLocalPrecedenceMapTable=hwLocalPrecedenceMapTable, hwDscpToDscpMapDscpValue=hwDscpToDscpMapDscpValue, hwBandwidthAclIndex=hwBandwidthAclIndex, hwQueueWeight2=hwQueueWeight2, hwMirroringGroupReflectorTable=hwMirroringGroupReflectorTable, hwFlowtempFragment=hwFlowtempFragment, hwDscpToCosMapDscpIndex=hwDscpToCosMapDscpIndex, hwWredEntry=hwWredEntry, hwMirrorVlanID=hwMirrorVlanID, hwCosToLocalPrecedenceMapEntry=hwCosToLocalPrecedenceMapEntry, hwQueueWeight5=hwQueueWeight5, hwMirroringGroupRprobeVlanEntry=hwMirroringGroupRprobeVlanEntry, hwPortQueueIfIndex=hwPortQueueIfIndex, hwRateLimitIpAclNum=hwRateLimitIpAclNum, hwBandwidthLinkAclRule=hwBandwidthLinkAclRule, hwDscpMapEntry=hwDscpMapEntry, hwFlowtempSMac=hwFlowtempSMac, hwFlowtempDIp=hwFlowtempDIp, hwRedirectToIfIndex=hwRedirectToIfIndex, hwDscpToCosMapCosValue=hwDscpToCosMapCosValue, hwMirroringGroupMirrorVlanSeq=hwMirroringGroupMirrorVlanSeq, hwRedirectAclIndex=hwRedirectAclIndex, hwPortQueueQueueID=hwPortQueueQueueID, hwPriorityDirection=hwPriorityDirection, hwRedirectLinkAclRule=hwRedirectLinkAclRule, hwLocalPrecedenceMapLocalPrecedenceIndex=hwLocalPrecedenceMapLocalPrecedenceIndex, hwRemarkVlanIDEntry=hwRemarkVlanIDEntry, hwCosToDscpMapTable=hwCosToDscpMapTable, hwPriorityCosFromIpPre=hwPriorityCosFromIpPre, hwRateLimitConformDscp=hwRateLimitConformDscp, hwPriorityPolicedServiceExp=hwPriorityPolicedServiceExp, hwRedirectRemarkedPri=hwRedirectRemarkedPri, hwStatisticRuntime=hwStatisticRuntime, hwRedirectToModifiedVlanID=hwRedirectToModifiedVlanID, hwRateLimitDirection=hwRateLimitDirection, hwPriorityPolicedServiceDscp=hwPriorityPolicedServiceDscp, hwFlowtempEnableTable=hwFlowtempEnableTable, hwRateLimitTable=hwRateLimitTable, hwDscpMapDscpIndex=hwDscpMapDscpIndex, hwMirroringGroupMonitorIfIndex=hwMirroringGroupMonitorIfIndex, hwLineRateDirection=hwLineRateDirection, hwMirroringGroupMirrorMacEntry=hwMirroringGroupMirrorMacEntry, hwRedDirection=hwRedDirection, hwLswQosAclMib=hwLswQosAclMib, hwExpMapLocalPrecedence=hwExpMapLocalPrecedence, hwPriorityDscp=hwPriorityDscp, hwRedIpAclRule=hwRedIpAclRule, hwPortQueueWrrPriority=hwPortQueueWrrPriority, hwDscpToLocalPreMapLocalPreVal=hwDscpToLocalPreMapLocalPreVal, hwPriorityRowStatus=hwPriorityRowStatus, hwRateLimitConformActionType=hwRateLimitConformActionType, hwRemarkVlanIDAclIndex=hwRemarkVlanIDAclIndex, hwRemarkVlanIDVlanID=hwRemarkVlanIDVlanID, hwWredIndex=hwWredIndex, hwPriorityPolicedServiceCos=hwPriorityPolicedServiceCos, hwRateLimitIpAclRule=hwRateLimitIpAclRule, hwRemarkVlanIDUserAclRule=hwRemarkVlanIDUserAclRule, hwFlowtempDIpMask=hwFlowtempDIpMask, hwRemarkVlanIDIpAclNum=hwRemarkVlanIDIpAclNum, hwMirrorGroupMirrorIfIndexList=hwMirrorGroupMirrorIfIndexList, hwMirroringGroupStatus=hwMirroringGroupStatus, hwCosToDropPrecedenceMapEntry=hwCosToDropPrecedenceMapEntry, hwMirroringGroupEntry=hwMirroringGroupEntry, hwTrafficShapeIfIndex=hwTrafficShapeIfIndex, hwMirroringGroupMirrorMacTable=hwMirroringGroupMirrorMacTable, hwRateLimitEntry=hwRateLimitEntry, hwRedirectToNextHop2=hwRedirectToNextHop2, hwMirroringGroupMirrorMac=hwMirroringGroupMirrorMac, hwTrafficShapeEntry=hwTrafficShapeEntry, hwFlowtempIpPre=hwFlowtempIpPre, hwPriorityUserAclNum=hwPriorityUserAclNum, hwRateLimitTargetRateKbps=hwRateLimitTargetRateKbps, hwDscpMapCosValue=hwDscpMapCosValue, hwBandwidthWeight=hwBandwidthWeight, hwRateLimitVlanID=hwRateLimitVlanID, hwPortMirrorIfIndex=hwPortMirrorIfIndex, hwFlowtempTcpFlag=hwFlowtempTcpFlag, hwWredYellowMinThreshold=hwWredYellowMinThreshold, hwWredYellowMaxProb=hwWredYellowMaxProb, hwFlowtempIndex=hwFlowtempIndex, hwRateLimitLinkAclRule=hwRateLimitLinkAclRule, hwMirrorToIfIndex=hwMirrorToIfIndex, hwFlowtempSMacMask=hwFlowtempSMacMask, hwMirrorGroupEntry=hwMirrorGroupEntry, hwMirrorLinkAclRule=hwMirrorLinkAclRule, hwStatisticTable=hwStatisticTable, hwMirroringGroupMirrorOutTypeList=hwMirroringGroupMirrorOutTypeList, hwFlowtempEnableVlanID=hwFlowtempEnableVlanID, hwPriorityPolicedServiceLoaclPre=hwPriorityPolicedServiceLoaclPre, hwRedRowStatus=hwRedRowStatus, hwRateLimitRowStatus=hwRateLimitRowStatus, hwMirroringGroupID=hwMirroringGroupID, hwQueueIfIndex=hwQueueIfIndex, hwPortMirrorEntry=hwPortMirrorEntry, hwMirroringGroupMirroVlanStatus=hwMirroringGroupMirroVlanStatus, hwRateLimitAclIndex=hwRateLimitAclIndex, hwRedAclIndex=hwRedAclIndex, hwRemarkVlanIDDirection=hwRemarkVlanIDDirection, hwTrafficShapeQueueId=hwTrafficShapeQueueId, hwFlowtempCos=hwFlowtempCos, hwDscpMapLocalPrecedence=hwDscpMapLocalPrecedence, hwQueueWeight1=hwQueueWeight1, hwRateLimitLinkAclNum=hwRateLimitLinkAclNum, hwRedirectUserAclRule=hwRedirectUserAclRule, PYSNMP_MODULE_ID=hwLswQosAclMib, hwRedEntry=hwRedEntry, hwPriorityLinkAclNum=hwPriorityLinkAclNum, hwDscpToDscpMapTable=hwDscpToDscpMapTable, hwRemarkVlanIDRemarkVlanID=hwRemarkVlanIDRemarkVlanID, hwExpMapTable=hwExpMapTable, hwPortTrustEntry=hwPortTrustEntry, hwMirrorUserAclRule=hwMirrorUserAclRule, hwMirrorTable=hwMirrorTable, hwRedIpAclNum=hwRedIpAclNum, hwDscpMapTable=hwDscpMapTable, hwMirrorUserAclNum=hwMirrorUserAclNum, hwBandwidthMinGuaranteedWidth=hwBandwidthMinGuaranteedWidth, hwFlowtempEntry=hwFlowtempEntry, hwPriorityEntry=hwPriorityEntry, hwDscpToDropPreMapReset=hwDscpToDropPreMapReset, hwDropModeEntry=hwDropModeEntry, hwRemarkVlanIDLinkAclNum=hwRemarkVlanIDLinkAclNum, hwBandwidthTable=hwBandwidthTable, hwTrafficShapeBurstSize=hwTrafficShapeBurstSize, hwRemarkVlanIDPacketType=hwRemarkVlanIDPacketType, hwPriorityIfIndex=hwPriorityIfIndex, hwRedProbability=hwRedProbability, hwStatisticByteCount=hwStatisticByteCount, hwCosToDscpMapReSet=hwCosToDscpMapReSet, hwBandwidthRowStatus=hwBandwidthRowStatus, hwPriorityUserAclRule=hwPriorityUserAclRule, hwRedStopQueueLen=hwRedStopQueueLen, hwPortTrustOvercastType=hwPortTrustOvercastType, hwRemarkVlanIDLinkAclRule=hwRemarkVlanIDLinkAclRule, hwRateLimitEBS=hwRateLimitEBS, hwRedirectToNestedVlanID=hwRedirectToNestedVlanID, hwRateLimitExceedCos=hwRateLimitExceedCos, hwMirroringGroupType=hwMirroringGroupType, hwPortQueueTable=hwPortQueueTable, hwFlowtempIpProtocol=hwFlowtempIpProtocol, hwRedRuntime=hwRedRuntime, hwMirrorRowStatus=hwMirrorRowStatus, hwBandwidthEntry=hwBandwidthEntry, hwDscpMapExpValue=hwDscpMapExpValue, hwDropModeMode=hwDropModeMode, hwRateLimitTargetRateMbps=hwRateLimitTargetRateMbps, hwMirrorToCpu=hwMirrorToCpu, hwRateLimitCBS=hwRateLimitCBS, hwRedirectIpAclNum=hwRedirectIpAclNum, hwDscpToCosMapEntry=hwDscpToCosMapEntry, hwTrafficShapeRowStatus=hwTrafficShapeRowStatus, hwMirrorIpAclRule=hwMirrorIpAclRule, hwCosToDscpMapCosIndex=hwCosToDscpMapCosIndex, hwMirroringGroupMirrorInTypeList=hwMirroringGroupMirrorInTypeList, hwDropModeIfIndex=hwDropModeIfIndex)
mibBuilder.exportSymbols("HUAWEI-LswQos-MIB", hwStatisticEntry=hwStatisticEntry, hwBandwidthRuntime=hwBandwidthRuntime, hwExpMapCosValue=hwExpMapCosValue, hwExpMapEntry=hwExpMapEntry, hwRateLimitCIR=hwRateLimitCIR, hwRateLimitConformLocalPre=hwRateLimitConformLocalPre, hwMirrorAclIndex=hwMirrorAclIndex, hwQueueMaxDelay=hwQueueMaxDelay, hwWredGreenMaxProb=hwWredGreenMaxProb, hwDscpToLocalPreMapTable=hwDscpToLocalPreMapTable, hwFlowtempRowStatus=hwFlowtempRowStatus, hwPortMonitorBothIfIndex=hwPortMonitorBothIfIndex, hwPriorityVlanID=hwPriorityVlanID, hwDropModeWredIndex=hwDropModeWredIndex, hwBandwidthIpAclNum=hwBandwidthIpAclNum, hwFlowtempIcmpType=hwFlowtempIcmpType, hwMirroringGroupMirrorOutboundIfIndexList=hwMirroringGroupMirrorOutboundIfIndexList, hwFlowtempEnableEntry=hwFlowtempEnableEntry, hwDscpToCosMapReset=hwDscpToCosMapReset, hwPortMirrorRowStatus=hwPortMirrorRowStatus, hwDscpToDropPreMapDscpIndex=hwDscpToDropPreMapDscpIndex, hwPortWredQueueStartLength=hwPortWredQueueStartLength, hwRateLimitExceedActionType=hwRateLimitExceedActionType, hwMirroringGroupMonitorType=hwMirroringGroupMonitorType, hwPriorityLinkAclRule=hwPriorityLinkAclRule, hwStatisticCountClear=hwStatisticCountClear, hwFlowtempDMacMask=hwFlowtempDMacMask, hwRateLimitMeterStatByteXCount=hwRateLimitMeterStatByteXCount, hwExpMapDscpValue=hwExpMapDscpValue, hwPortWredTable=hwPortWredTable, hwDscpMapDscpValue=hwDscpMapDscpValue, hwPriorityCos=hwPriorityCos, hwQueueWeight6=hwQueueWeight6, hwRedirectToNextHop1=hwRedirectToNextHop1, hwStatisticUserAclNum=hwStatisticUserAclNum, hwMirrorGroupDirection=hwMirrorGroupDirection, hwExpMapDropPrecedence=hwExpMapDropPrecedence, hwFlowtempVlanId=hwFlowtempVlanId, hwRedirectDirection=hwRedirectDirection, hwDropModeTable=hwDropModeTable, hwDscpToDscpMapReset=hwDscpToDscpMapReset, hwPriorityAclIndex=hwPriorityAclIndex, hwPortTrustTable=hwPortTrustTable, hwFlowtempSIp=hwFlowtempSIp, hwCosToDropPrecedenceMapTable=hwCosToDropPrecedenceMapTable, hwRedirectUserAclNum=hwRedirectUserAclNum, hwStatisticLinkAclNum=hwStatisticLinkAclNum, hwRateLimitExceedDscp=hwRateLimitExceedDscp, hwPriorityIpPre=hwPriorityIpPre, hwPortWredEntry=hwPortWredEntry, hwQueueWeight8=hwQueueWeight8, hwMirroringGroupReflectorIfIndex=hwMirroringGroupReflectorIfIndex, hwFlowtempSPort=hwFlowtempSPort, hwMirroringGroupRprobeVlanRowStatus=hwMirroringGroupRprobeVlanRowStatus, hwMirroringGroupReflectorRowStatus=hwMirroringGroupReflectorRowStatus, hwPortWredQueueProbability=hwPortWredQueueProbability, hwPortQueueWeight=hwPortQueueWeight, hwWredRedMaxProb=hwWredRedMaxProb, hwFlowtempEthProtocol=hwFlowtempEthProtocol, hwMirroringGroupMirrorInboundIfIndexList=hwMirroringGroupMirrorInboundIfIndexList, hwPriorityLocalPre=hwPriorityLocalPre, hwPortTrustTrustType=hwPortTrustTrustType, hwFlowtempIcmpCode=hwFlowtempIcmpCode, hwRateLimitMeterStatState=hwRateLimitMeterStatState, hwPortWredIfIndex=hwPortWredIfIndex, hwStatisticLinkAclRule=hwStatisticLinkAclRule, hwRedTable=hwRedTable, hwRateLimitPeakRate=hwRateLimitPeakRate, hwStatisticByteXCount=hwStatisticByteXCount, hwDscpToDropPreMapEntry=hwDscpToDropPreMapEntry, hwDscpToCosMapTable=hwDscpToCosMapTable, hwTrafficShapeMaxRate=hwTrafficShapeMaxRate, hwMirroringGroupTable=hwMirroringGroupTable, hwMirroringGroupRprobeVlanTable=hwMirroringGroupRprobeVlanTable, hwMirroringGroupMirrorVlanEntry=hwMirroringGroupMirrorVlanEntry, hwMirrorGroupID=hwMirrorGroupID, hwExpMapExpValue=hwExpMapExpValue, hwLocalPrecedenceMapEntry=hwLocalPrecedenceMapEntry, hwWredTable=hwWredTable, hwDscpToLocalPreMapReset=hwDscpToLocalPreMapReset, hwLocalPrecedenceMapConformLevel=hwLocalPrecedenceMapConformLevel, hwMirroringGroupMirrorVlanTable=hwMirroringGroupMirrorVlanTable, hwBandwidthMaxGuaranteedWidth=hwBandwidthMaxGuaranteedWidth, hwMirroringGroupMirrorTable=hwMirroringGroupMirrorTable, hwRemarkVlanIDIpAclRule=hwRemarkVlanIDIpAclRule, hwStatisticIfIndex=hwStatisticIfIndex, hwRedirectIpAclRule=hwRedirectIpAclRule, hwBandwidthIpAclRule=hwBandwidthIpAclRule, hwMirrorIpAclNum=hwMirrorIpAclNum, hwMirrorGroupRowStatus=hwMirrorGroupRowStatus, HwMirrorOrMonitorType=HwMirrorOrMonitorType, hwExpMapExpIndex=hwExpMapExpIndex, hwTrafficShapeBufferLimit=hwTrafficShapeBufferLimit, hwMirroringGroupMonitorTable=hwMirroringGroupMonitorTable, hwMirrorDirection=hwMirrorDirection, hwQueueWeight3=hwQueueWeight3, hwRedLinkAclNum=hwRedLinkAclNum, hwMirrorRuntime=hwMirrorRuntime, hwQueueWeight7=hwQueueWeight7, hwWredGreenMinThreshold=hwWredGreenMinThreshold, hwPriorityIpAclNum=hwPriorityIpAclNum, hwStatisticIpAclRule=hwStatisticIpAclRule, hwLineRateValue=hwLineRateValue, hwDscpToDscpMapEntry=hwDscpToDscpMapEntry, hwRedirectToSlotNo=hwRedirectToSlotNo, hwStatisticRowStatus=hwStatisticRowStatus, hwExpMapConformLevel=hwExpMapConformLevel, hwRemarkVlanIDTable=hwRemarkVlanIDTable, hwStatisticIpAclNum=hwStatisticIpAclNum, hwRedirectTargetVlanID=hwRedirectTargetVlanID, hwRedirectRemarkedTos=hwRedirectRemarkedTos, hwPortQueueEntry=hwPortQueueEntry, hwBandwidthIfIndex=hwBandwidthIfIndex, hwStatisticDirection=hwStatisticDirection, hwRateLimitConformCos=hwRateLimitConformCos, hwDscpToDscpMapDscpIndex=hwDscpToDscpMapDscpIndex, hwMirrorLinkAclNum=hwMirrorLinkAclNum, hwLocalPrecedenceMapCosValue=hwLocalPrecedenceMapCosValue)
