#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-LanDriversMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-LanDriversMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
mscLpIndex, mscLp = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex", "mscLp")
FddiMACLongAddressType, FddiTimeMilli, Unsigned32, InterfaceIndex, Integer32, RowStatus, StorageType, DisplayString, Gauge32, FddiTimeNano, Counter32, MacAddress = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "FddiMACLongAddressType", "FddiTimeMilli", "Unsigned32", "InterfaceIndex", "Integer32", "RowStatus", "StorageType", "DisplayString", "Gauge32", "FddiTimeNano", "Counter32", "MacAddress")
AsciiString, PassportCounter64, EnterpriseDateAndTime, Link, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "AsciiString", "PassportCounter64", "EnterpriseDateAndTime", "Link", "NonReplicated")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, ModuleIdentity, Unsigned32, TimeTicks, iso, ObjectIdentity, Integer32, IpAddress, Gauge32, Counter32, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "ModuleIdentity", "Unsigned32", "TimeTicks", "iso", "ObjectIdentity", "Integer32", "IpAddress", "Gauge32", "Counter32", "NotificationType", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
lanDriversMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 30))
mscLpEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3))
mscLpEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 1), )
if mibBuilder.loadTexts: mscLpEnetRowStatusTable.setStatus('mandatory')
mscLpEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetRowStatusEntry.setStatus('mandatory')
mscLpEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetRowStatus.setStatus('mandatory')
mscLpEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetComponentName.setStatus('mandatory')
mscLpEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetStorageType.setStatus('mandatory')
mscLpEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)))
if mibBuilder.loadTexts: mscLpEnetIndex.setStatus('mandatory')
mscLpEnetCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 10), )
if mibBuilder.loadTexts: mscLpEnetCidDataTable.setStatus('mandatory')
mscLpEnetCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetCidDataEntry.setStatus('mandatory')
mscLpEnetCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetCustomerIdentifier.setStatus('mandatory')
mscLpEnetIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 11), )
if mibBuilder.loadTexts: mscLpEnetIfEntryTable.setStatus('mandatory')
mscLpEnetIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetIfEntryEntry.setStatus('mandatory')
mscLpEnetIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetIfAdminStatus.setStatus('mandatory')
mscLpEnetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetIfIndex.setStatus('mandatory')
mscLpEnetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 12), )
if mibBuilder.loadTexts: mscLpEnetProvTable.setStatus('mandatory')
mscLpEnetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetProvEntry.setStatus('mandatory')
mscLpEnetHeartbeatPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetHeartbeatPacket.setStatus('mandatory')
mscLpEnetApplicationFramerName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 12, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetApplicationFramerName.setStatus('mandatory')
mscLpEnetAdminInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 13), )
if mibBuilder.loadTexts: mscLpEnetAdminInfoTable.setStatus('mandatory')
mscLpEnetAdminInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetAdminInfoEntry.setStatus('mandatory')
mscLpEnetVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 13, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetVendor.setStatus('mandatory')
mscLpEnetCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 13, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetCommentText.setStatus('mandatory')
mscLpEnetStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 15), )
if mibBuilder.loadTexts: mscLpEnetStateTable.setStatus('mandatory')
mscLpEnetStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetStateEntry.setStatus('mandatory')
mscLpEnetAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetAdminState.setStatus('mandatory')
mscLpEnetOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetOperationalState.setStatus('mandatory')
mscLpEnetUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetUsageState.setStatus('mandatory')
mscLpEnetOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 16), )
if mibBuilder.loadTexts: mscLpEnetOperStatusTable.setStatus('mandatory')
mscLpEnetOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetOperStatusEntry.setStatus('mandatory')
mscLpEnetSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetSnmpOperStatus.setStatus('mandatory')
mscLpEnetOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 17), )
if mibBuilder.loadTexts: mscLpEnetOperTable.setStatus('mandatory')
mscLpEnetOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetOperEntry.setStatus('mandatory')
mscLpEnetMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 17, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetMacAddress.setStatus('mandatory')
mscLpEnetStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18), )
if mibBuilder.loadTexts: mscLpEnetStatsTable.setStatus('mandatory')
mscLpEnetStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetStatsEntry.setStatus('mandatory')
mscLpEnetAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetAlignmentErrors.setStatus('mandatory')
mscLpEnetFcsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetFcsErrors.setStatus('mandatory')
mscLpEnetSingleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetSingleCollisionFrames.setStatus('mandatory')
mscLpEnetMultipleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetMultipleCollisionFrames.setStatus('mandatory')
mscLpEnetSqeTestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetSqeTestErrors.setStatus('mandatory')
mscLpEnetDeferredTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetDeferredTransmissions.setStatus('mandatory')
mscLpEnetLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLateCollisions.setStatus('mandatory')
mscLpEnetExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetExcessiveCollisions.setStatus('mandatory')
mscLpEnetMacTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetMacTransmitErrors.setStatus('mandatory')
mscLpEnetCarrierSenseErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetCarrierSenseErrors.setStatus('mandatory')
mscLpEnetFrameTooLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetFrameTooLongs.setStatus('mandatory')
mscLpEnetMacReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 18, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetMacReceiveErrors.setStatus('mandatory')
mscLpEnetLt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2))
mscLpEnetLtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 1), )
if mibBuilder.loadTexts: mscLpEnetLtRowStatusTable.setStatus('mandatory')
mscLpEnetLtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"))
if mibBuilder.loadTexts: mscLpEnetLtRowStatusEntry.setStatus('mandatory')
mscLpEnetLtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtRowStatus.setStatus('mandatory')
mscLpEnetLtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtComponentName.setStatus('mandatory')
mscLpEnetLtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtStorageType.setStatus('mandatory')
mscLpEnetLtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtIndex.setStatus('mandatory')
mscLpEnetLtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 20), )
if mibBuilder.loadTexts: mscLpEnetLtTopTable.setStatus('mandatory')
mscLpEnetLtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"))
if mibBuilder.loadTexts: mscLpEnetLtTopEntry.setStatus('mandatory')
mscLpEnetLtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtTData.setStatus('mandatory')
mscLpEnetLtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2))
mscLpEnetLtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFrmCmpRowStatusTable.setStatus('mandatory')
mscLpEnetLtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFrmCmpRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFrmCmpRowStatus.setStatus('mandatory')
mscLpEnetLtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFrmCmpComponentName.setStatus('mandatory')
mscLpEnetLtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFrmCmpStorageType.setStatus('mandatory')
mscLpEnetLtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFrmCmpIndex.setStatus('mandatory')
mscLpEnetLtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFrmCmpTopTable.setStatus('mandatory')
mscLpEnetLtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFrmCmpTopEntry.setStatus('mandatory')
mscLpEnetLtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFrmCmpTData.setStatus('mandatory')
mscLpEnetLtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3))
mscLpEnetLtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFrmCpyRowStatusTable.setStatus('mandatory')
mscLpEnetLtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFrmCpyRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFrmCpyRowStatus.setStatus('mandatory')
mscLpEnetLtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFrmCpyComponentName.setStatus('mandatory')
mscLpEnetLtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFrmCpyStorageType.setStatus('mandatory')
mscLpEnetLtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFrmCpyIndex.setStatus('mandatory')
mscLpEnetLtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFrmCpyTopTable.setStatus('mandatory')
mscLpEnetLtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFrmCpyTopEntry.setStatus('mandatory')
mscLpEnetLtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFrmCpyTData.setStatus('mandatory')
mscLpEnetLtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4))
mscLpEnetLtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4, 1), )
if mibBuilder.loadTexts: mscLpEnetLtPrtCfgRowStatusTable.setStatus('mandatory')
mscLpEnetLtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpEnetLtPrtCfgRowStatusEntry.setStatus('mandatory')
mscLpEnetLtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtPrtCfgRowStatus.setStatus('mandatory')
mscLpEnetLtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtPrtCfgComponentName.setStatus('mandatory')
mscLpEnetLtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtPrtCfgStorageType.setStatus('mandatory')
mscLpEnetLtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtPrtCfgIndex.setStatus('mandatory')
mscLpEnetLtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4, 10), )
if mibBuilder.loadTexts: mscLpEnetLtPrtCfgTopTable.setStatus('mandatory')
mscLpEnetLtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpEnetLtPrtCfgTopEntry.setStatus('mandatory')
mscLpEnetLtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtPrtCfgTData.setStatus('mandatory')
mscLpEnetLtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5))
mscLpEnetLtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbRowStatus.setStatus('mandatory')
mscLpEnetLtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbComponentName.setStatus('mandatory')
mscLpEnetLtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbStorageType.setStatus('mandatory')
mscLpEnetLtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbIndex.setStatus('mandatory')
mscLpEnetLtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 20), )
if mibBuilder.loadTexts: mscLpEnetLtFbTopTable.setStatus('mandatory')
mscLpEnetLtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbTopEntry.setStatus('mandatory')
mscLpEnetLtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbTData.setStatus('mandatory')
mscLpEnetLtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2))
mscLpEnetLtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbTxInfoRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbTxInfoRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbTxInfoRowStatus.setStatus('mandatory')
mscLpEnetLtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbTxInfoComponentName.setStatus('mandatory')
mscLpEnetLtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbTxInfoStorageType.setStatus('mandatory')
mscLpEnetLtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbTxInfoIndex.setStatus('mandatory')
mscLpEnetLtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFbTxInfoTopTable.setStatus('mandatory')
mscLpEnetLtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbTxInfoTopEntry.setStatus('mandatory')
mscLpEnetLtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbTxInfoTData.setStatus('mandatory')
mscLpEnetLtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3))
mscLpEnetLtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbFddiMacRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbFddiMacRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbFddiMacRowStatus.setStatus('mandatory')
mscLpEnetLtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbFddiMacComponentName.setStatus('mandatory')
mscLpEnetLtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbFddiMacStorageType.setStatus('mandatory')
mscLpEnetLtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbFddiMacIndex.setStatus('mandatory')
mscLpEnetLtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFbFddiMacTopTable.setStatus('mandatory')
mscLpEnetLtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbFddiMacTopEntry.setStatus('mandatory')
mscLpEnetLtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbFddiMacTData.setStatus('mandatory')
mscLpEnetLtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4))
mscLpEnetLtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbMacEnetRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbMacEnetRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbMacEnetRowStatus.setStatus('mandatory')
mscLpEnetLtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbMacEnetComponentName.setStatus('mandatory')
mscLpEnetLtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbMacEnetStorageType.setStatus('mandatory')
mscLpEnetLtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbMacEnetIndex.setStatus('mandatory')
mscLpEnetLtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFbMacEnetTopTable.setStatus('mandatory')
mscLpEnetLtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbMacEnetTopEntry.setStatus('mandatory')
mscLpEnetLtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbMacEnetTData.setStatus('mandatory')
mscLpEnetLtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5))
mscLpEnetLtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbMacTrRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbMacTrRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbMacTrRowStatus.setStatus('mandatory')
mscLpEnetLtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbMacTrComponentName.setStatus('mandatory')
mscLpEnetLtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbMacTrStorageType.setStatus('mandatory')
mscLpEnetLtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbMacTrIndex.setStatus('mandatory')
mscLpEnetLtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFbMacTrTopTable.setStatus('mandatory')
mscLpEnetLtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbMacTrTopEntry.setStatus('mandatory')
mscLpEnetLtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbMacTrTData.setStatus('mandatory')
mscLpEnetLtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6))
mscLpEnetLtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbDataRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbDataIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbDataRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbDataRowStatus.setStatus('mandatory')
mscLpEnetLtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbDataComponentName.setStatus('mandatory')
mscLpEnetLtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbDataStorageType.setStatus('mandatory')
mscLpEnetLtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbDataIndex.setStatus('mandatory')
mscLpEnetLtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFbDataTopTable.setStatus('mandatory')
mscLpEnetLtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbDataIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbDataTopEntry.setStatus('mandatory')
mscLpEnetLtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbDataTData.setStatus('mandatory')
mscLpEnetLtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7))
mscLpEnetLtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbIpHRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbIpHRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbIpHRowStatus.setStatus('mandatory')
mscLpEnetLtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbIpHComponentName.setStatus('mandatory')
mscLpEnetLtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbIpHStorageType.setStatus('mandatory')
mscLpEnetLtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbIpHIndex.setStatus('mandatory')
mscLpEnetLtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFbIpHTopTable.setStatus('mandatory')
mscLpEnetLtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbIpHTopEntry.setStatus('mandatory')
mscLpEnetLtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbIpHTData.setStatus('mandatory')
mscLpEnetLtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8))
mscLpEnetLtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbLlchRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbLlchRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbLlchRowStatus.setStatus('mandatory')
mscLpEnetLtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbLlchComponentName.setStatus('mandatory')
mscLpEnetLtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbLlchStorageType.setStatus('mandatory')
mscLpEnetLtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbLlchIndex.setStatus('mandatory')
mscLpEnetLtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFbLlchTopTable.setStatus('mandatory')
mscLpEnetLtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbLlchTopEntry.setStatus('mandatory')
mscLpEnetLtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbLlchTData.setStatus('mandatory')
mscLpEnetLtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9))
mscLpEnetLtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbAppleHRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbAppleHRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbAppleHRowStatus.setStatus('mandatory')
mscLpEnetLtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbAppleHComponentName.setStatus('mandatory')
mscLpEnetLtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbAppleHStorageType.setStatus('mandatory')
mscLpEnetLtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbAppleHIndex.setStatus('mandatory')
mscLpEnetLtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFbAppleHTopTable.setStatus('mandatory')
mscLpEnetLtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbAppleHTopEntry.setStatus('mandatory')
mscLpEnetLtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbAppleHTData.setStatus('mandatory')
mscLpEnetLtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10))
mscLpEnetLtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10, 1), )
if mibBuilder.loadTexts: mscLpEnetLtFbIpxHRowStatusTable.setStatus('mandatory')
mscLpEnetLtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbIpxHRowStatusEntry.setStatus('mandatory')
mscLpEnetLtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbIpxHRowStatus.setStatus('mandatory')
mscLpEnetLtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbIpxHComponentName.setStatus('mandatory')
mscLpEnetLtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtFbIpxHStorageType.setStatus('mandatory')
mscLpEnetLtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtFbIpxHIndex.setStatus('mandatory')
mscLpEnetLtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10, 10), )
if mibBuilder.loadTexts: mscLpEnetLtFbIpxHTopTable.setStatus('mandatory')
mscLpEnetLtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpEnetLtFbIpxHTopEntry.setStatus('mandatory')
mscLpEnetLtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtFbIpxHTData.setStatus('mandatory')
mscLpEnetLtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6))
mscLpEnetLtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6, 1), )
if mibBuilder.loadTexts: mscLpEnetLtCntlRowStatusTable.setStatus('mandatory')
mscLpEnetLtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtCntlIndex"))
if mibBuilder.loadTexts: mscLpEnetLtCntlRowStatusEntry.setStatus('mandatory')
mscLpEnetLtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtCntlRowStatus.setStatus('mandatory')
mscLpEnetLtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtCntlComponentName.setStatus('mandatory')
mscLpEnetLtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetLtCntlStorageType.setStatus('mandatory')
mscLpEnetLtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetLtCntlIndex.setStatus('mandatory')
mscLpEnetLtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6, 10), )
if mibBuilder.loadTexts: mscLpEnetLtCntlTopTable.setStatus('mandatory')
mscLpEnetLtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetLtCntlIndex"))
if mibBuilder.loadTexts: mscLpEnetLtCntlTopEntry.setStatus('mandatory')
mscLpEnetLtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetLtCntlTData.setStatus('mandatory')
mscLpEnetTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5))
mscLpEnetTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 1), )
if mibBuilder.loadTexts: mscLpEnetTestRowStatusTable.setStatus('mandatory')
mscLpEnetTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetTestIndex"))
if mibBuilder.loadTexts: mscLpEnetTestRowStatusEntry.setStatus('mandatory')
mscLpEnetTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestRowStatus.setStatus('mandatory')
mscLpEnetTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestComponentName.setStatus('mandatory')
mscLpEnetTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestStorageType.setStatus('mandatory')
mscLpEnetTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEnetTestIndex.setStatus('mandatory')
mscLpEnetTestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 10), )
if mibBuilder.loadTexts: mscLpEnetTestPTOTable.setStatus('mandatory')
mscLpEnetTestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetTestIndex"))
if mibBuilder.loadTexts: mscLpEnetTestPTOEntry.setStatus('mandatory')
mscLpEnetTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetTestType.setStatus('mandatory')
mscLpEnetTestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetTestFrmSize.setStatus('mandatory')
mscLpEnetTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEnetTestDuration.setStatus('mandatory')
mscLpEnetTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11), )
if mibBuilder.loadTexts: mscLpEnetTestResultsTable.setStatus('mandatory')
mscLpEnetTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEnetTestIndex"))
if mibBuilder.loadTexts: mscLpEnetTestResultsEntry.setStatus('mandatory')
mscLpEnetTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestElapsedTime.setStatus('mandatory')
mscLpEnetTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestTimeRemaining.setStatus('mandatory')
mscLpEnetTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestCauseOfTermination.setStatus('mandatory')
mscLpEnetTestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestFrmTx.setStatus('mandatory')
mscLpEnetTestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestBitsTx.setStatus('mandatory')
mscLpEnetTestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestFrmRx.setStatus('mandatory')
mscLpEnetTestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestBitsRx.setStatus('mandatory')
mscLpEnetTestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 3, 5, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEnetTestErroredFrmRx.setStatus('mandatory')
mscLpFi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4))
mscLpFiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 1), )
if mibBuilder.loadTexts: mscLpFiRowStatusTable.setStatus('mandatory')
mscLpFiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiRowStatusEntry.setStatus('mandatory')
mscLpFiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiRowStatus.setStatus('mandatory')
mscLpFiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiComponentName.setStatus('mandatory')
mscLpFiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiStorageType.setStatus('mandatory')
mscLpFiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: mscLpFiIndex.setStatus('mandatory')
mscLpFiCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 10), )
if mibBuilder.loadTexts: mscLpFiCidDataTable.setStatus('mandatory')
mscLpFiCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiCidDataEntry.setStatus('mandatory')
mscLpFiCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiCustomerIdentifier.setStatus('mandatory')
mscLpFiIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 11), )
if mibBuilder.loadTexts: mscLpFiIfEntryTable.setStatus('mandatory')
mscLpFiIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiIfEntryEntry.setStatus('mandatory')
mscLpFiIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiIfAdminStatus.setStatus('mandatory')
mscLpFiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiIfIndex.setStatus('mandatory')
mscLpFiSmtProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12), )
if mibBuilder.loadTexts: mscLpFiSmtProvTable.setStatus('mandatory')
mscLpFiSmtProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiSmtProvEntry.setStatus('mandatory')
mscLpFiUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="46444449")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiUserData.setStatus('mandatory')
mscLpFiAcceptAa = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiAcceptAa.setStatus('mandatory')
mscLpFiAcceptBb = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiAcceptBb.setStatus('mandatory')
mscLpFiAcceptAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiAcceptAs.setStatus('mandatory')
mscLpFiAcceptBs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiAcceptBs.setStatus('mandatory')
mscLpFiAcceptAm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiAcceptAm.setStatus('mandatory')
mscLpFiAcceptBm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiAcceptBm.setStatus('mandatory')
mscLpFiUseThruBa = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiUseThruBa.setStatus('mandatory')
mscLpFiNeighborNotifyInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiNeighborNotifyInterval.setStatus('mandatory')
mscLpFiStatusReportPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiStatusReportPolicy.setStatus('mandatory')
mscLpFiTraceMaxExpirationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 12), FddiTimeMilli().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(7000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiTraceMaxExpirationTimer.setStatus('mandatory')
mscLpFiApplicationFramerName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 12, 1, 13), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiApplicationFramerName.setStatus('mandatory')
mscLpFiMacProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 13), )
if mibBuilder.loadTexts: mscLpFiMacProvTable.setStatus('mandatory')
mscLpFiMacProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiMacProvEntry.setStatus('mandatory')
mscLpFiTokenRequestTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 13, 1, 1), FddiTimeNano().subtype(subtypeSpec=ValueRangeConstraint(20480, 1340000000)).clone(165290000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiTokenRequestTimer.setStatus('mandatory')
mscLpFiTokenMaxTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 13, 1, 2), FddiTimeNano().subtype(subtypeSpec=ValueRangeConstraint(40960, 1342200000)).clone(167770000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiTokenMaxTimer.setStatus('mandatory')
mscLpFiValidTransmissionTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 13, 1, 3), FddiTimeNano().subtype(subtypeSpec=ValueRangeConstraint(40960, 1342200000)).clone(2621400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiValidTransmissionTimer.setStatus('mandatory')
mscLpFiAdminInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 14), )
if mibBuilder.loadTexts: mscLpFiAdminInfoTable.setStatus('mandatory')
mscLpFiAdminInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiAdminInfoEntry.setStatus('mandatory')
mscLpFiVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 14, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiVendor.setStatus('mandatory')
mscLpFiCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 14, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiCommentText.setStatus('mandatory')
mscLpFiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 16), )
if mibBuilder.loadTexts: mscLpFiStateTable.setStatus('mandatory')
mscLpFiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiStateEntry.setStatus('mandatory')
mscLpFiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiAdminState.setStatus('mandatory')
mscLpFiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiOperationalState.setStatus('mandatory')
mscLpFiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiUsageState.setStatus('mandatory')
mscLpFiOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 17), )
if mibBuilder.loadTexts: mscLpFiOperStatusTable.setStatus('mandatory')
mscLpFiOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiOperStatusEntry.setStatus('mandatory')
mscLpFiSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiSnmpOperStatus.setStatus('mandatory')
mscLpFiSmtOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 18), )
if mibBuilder.loadTexts: mscLpFiSmtOperTable.setStatus('mandatory')
mscLpFiSmtOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiSmtOperEntry.setStatus('mandatory')
mscLpFiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 18, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiVersion.setStatus('mandatory')
mscLpFiBypassPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 18, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiBypassPresent.setStatus('mandatory')
mscLpFiEcmState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 18, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("out", 1), ("in", 2), ("trace", 3), ("leave", 4), ("pathTest", 5), ("insert", 6), ("check", 7), ("deinsert", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiEcmState.setStatus('mandatory')
mscLpFiCfState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 18, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("isolated", 1), ("localA", 2), ("localB", 3), ("localAB", 4), ("localS", 5), ("wrapA", 6), ("wrapB", 7), ("wrapAB", 8), ("wrapS", 9), ("cWrapA", 10), ("cWrapB", 11), ("cWrapS", 12), ("thru", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiCfState.setStatus('mandatory')
mscLpFiMacOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19), )
if mibBuilder.loadTexts: mscLpFiMacOperTable.setStatus('mandatory')
mscLpFiMacOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiMacOperEntry.setStatus('mandatory')
mscLpFiRingLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1280, 1342000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiRingLatency.setStatus('mandatory')
mscLpFiMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 10), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiMacAddress.setStatus('mandatory')
mscLpFiUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 11), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiUpstreamNeighbor.setStatus('mandatory')
mscLpFiDownstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 12), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiDownstreamNeighbor.setStatus('mandatory')
mscLpFiOldUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 13), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiOldUpstreamNeighbor.setStatus('mandatory')
mscLpFiOldDownstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 14), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiOldDownstreamNeighbor.setStatus('mandatory')
mscLpFiDupAddressTest = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notDone", 1), ("pass", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiDupAddressTest.setStatus('mandatory')
mscLpFiTokenNegotiatedTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 18), FddiTimeNano().subtype(subtypeSpec=ValueRangeConstraint(80, 1340000000)).clone(167772000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTokenNegotiatedTimer.setStatus('mandatory')
mscLpFiFrameCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiFrameCounts.setStatus('mandatory')
mscLpFiCopiedCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiCopiedCounts.setStatus('mandatory')
mscLpFiTransmitCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTransmitCounts.setStatus('mandatory')
mscLpFiErrorCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiErrorCounts.setStatus('mandatory')
mscLpFiLostCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLostCounts.setStatus('mandatory')
mscLpFiRmtState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("isolated", 1), ("nonOp", 2), ("ringOp", 3), ("detect", 4), ("nonOpDup", 5), ("ringOpDup", 6), ("directed", 7), ("trace", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiRmtState.setStatus('mandatory')
mscLpFiFrameErrorFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 19, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiFrameErrorFlag.setStatus('mandatory')
mscLpFiMacCOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 20), )
if mibBuilder.loadTexts: mscLpFiMacCOperTable.setStatus('mandatory')
mscLpFiMacCOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiMacCOperEntry.setStatus('mandatory')
mscLpFiTokenCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 20, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTokenCounts.setStatus('mandatory')
mscLpFiTvxExpiredCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 20, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTvxExpiredCounts.setStatus('mandatory')
mscLpFiNotCopiedCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 20, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiNotCopiedCounts.setStatus('mandatory')
mscLpFiLateCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 20, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLateCounts.setStatus('mandatory')
mscLpFiRingOpCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 20, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiRingOpCounts.setStatus('mandatory')
mscLpFiNcMacOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 26), )
if mibBuilder.loadTexts: mscLpFiNcMacOperTable.setStatus('mandatory')
mscLpFiNcMacOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 26, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"))
if mibBuilder.loadTexts: mscLpFiNcMacOperEntry.setStatus('mandatory')
mscLpFiNcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 26, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiNcMacAddress.setStatus('mandatory')
mscLpFiNcUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 26, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiNcUpstreamNeighbor.setStatus('mandatory')
mscLpFiNcDownstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 26, 1, 3), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiNcDownstreamNeighbor.setStatus('mandatory')
mscLpFiNcOldUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 26, 1, 4), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiNcOldUpstreamNeighbor.setStatus('mandatory')
mscLpFiNcOldDownstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 26, 1, 5), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiNcOldDownstreamNeighbor.setStatus('mandatory')
mscLpFiLt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2))
mscLpFiLtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 1), )
if mibBuilder.loadTexts: mscLpFiLtRowStatusTable.setStatus('mandatory')
mscLpFiLtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"))
if mibBuilder.loadTexts: mscLpFiLtRowStatusEntry.setStatus('mandatory')
mscLpFiLtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtRowStatus.setStatus('mandatory')
mscLpFiLtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtComponentName.setStatus('mandatory')
mscLpFiLtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtStorageType.setStatus('mandatory')
mscLpFiLtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtIndex.setStatus('mandatory')
mscLpFiLtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 20), )
if mibBuilder.loadTexts: mscLpFiLtTopTable.setStatus('mandatory')
mscLpFiLtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"))
if mibBuilder.loadTexts: mscLpFiLtTopEntry.setStatus('mandatory')
mscLpFiLtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtTData.setStatus('mandatory')
mscLpFiLtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2))
mscLpFiLtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2, 1), )
if mibBuilder.loadTexts: mscLpFiLtFrmCmpRowStatusTable.setStatus('mandatory')
mscLpFiLtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpFiLtFrmCmpRowStatusEntry.setStatus('mandatory')
mscLpFiLtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFrmCmpRowStatus.setStatus('mandatory')
mscLpFiLtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFrmCmpComponentName.setStatus('mandatory')
mscLpFiLtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFrmCmpStorageType.setStatus('mandatory')
mscLpFiLtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFrmCmpIndex.setStatus('mandatory')
mscLpFiLtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2, 10), )
if mibBuilder.loadTexts: mscLpFiLtFrmCmpTopTable.setStatus('mandatory')
mscLpFiLtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpFiLtFrmCmpTopEntry.setStatus('mandatory')
mscLpFiLtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFrmCmpTData.setStatus('mandatory')
mscLpFiLtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3))
mscLpFiLtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3, 1), )
if mibBuilder.loadTexts: mscLpFiLtFrmCpyRowStatusTable.setStatus('mandatory')
mscLpFiLtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpFiLtFrmCpyRowStatusEntry.setStatus('mandatory')
mscLpFiLtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFrmCpyRowStatus.setStatus('mandatory')
mscLpFiLtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFrmCpyComponentName.setStatus('mandatory')
mscLpFiLtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFrmCpyStorageType.setStatus('mandatory')
mscLpFiLtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFrmCpyIndex.setStatus('mandatory')
mscLpFiLtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3, 10), )
if mibBuilder.loadTexts: mscLpFiLtFrmCpyTopTable.setStatus('mandatory')
mscLpFiLtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpFiLtFrmCpyTopEntry.setStatus('mandatory')
mscLpFiLtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFrmCpyTData.setStatus('mandatory')
mscLpFiLtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4))
mscLpFiLtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4, 1), )
if mibBuilder.loadTexts: mscLpFiLtPrtCfgRowStatusTable.setStatus('mandatory')
mscLpFiLtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpFiLtPrtCfgRowStatusEntry.setStatus('mandatory')
mscLpFiLtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtPrtCfgRowStatus.setStatus('mandatory')
mscLpFiLtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtPrtCfgComponentName.setStatus('mandatory')
mscLpFiLtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtPrtCfgStorageType.setStatus('mandatory')
mscLpFiLtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtPrtCfgIndex.setStatus('mandatory')
mscLpFiLtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4, 10), )
if mibBuilder.loadTexts: mscLpFiLtPrtCfgTopTable.setStatus('mandatory')
mscLpFiLtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpFiLtPrtCfgTopEntry.setStatus('mandatory')
mscLpFiLtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtPrtCfgTData.setStatus('mandatory')
mscLpFiLtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5))
mscLpFiLtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbRowStatusTable.setStatus('mandatory')
mscLpFiLtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbRowStatus.setStatus('mandatory')
mscLpFiLtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbComponentName.setStatus('mandatory')
mscLpFiLtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbStorageType.setStatus('mandatory')
mscLpFiLtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbIndex.setStatus('mandatory')
mscLpFiLtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 20), )
if mibBuilder.loadTexts: mscLpFiLtFbTopTable.setStatus('mandatory')
mscLpFiLtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbTopEntry.setStatus('mandatory')
mscLpFiLtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbTData.setStatus('mandatory')
mscLpFiLtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2))
mscLpFiLtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbTxInfoRowStatusTable.setStatus('mandatory')
mscLpFiLtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbTxInfoRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbTxInfoRowStatus.setStatus('mandatory')
mscLpFiLtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbTxInfoComponentName.setStatus('mandatory')
mscLpFiLtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbTxInfoStorageType.setStatus('mandatory')
mscLpFiLtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbTxInfoIndex.setStatus('mandatory')
mscLpFiLtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2, 10), )
if mibBuilder.loadTexts: mscLpFiLtFbTxInfoTopTable.setStatus('mandatory')
mscLpFiLtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbTxInfoTopEntry.setStatus('mandatory')
mscLpFiLtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbTxInfoTData.setStatus('mandatory')
mscLpFiLtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3))
mscLpFiLtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbFddiMacRowStatusTable.setStatus('mandatory')
mscLpFiLtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbFddiMacRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbFddiMacRowStatus.setStatus('mandatory')
mscLpFiLtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbFddiMacComponentName.setStatus('mandatory')
mscLpFiLtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbFddiMacStorageType.setStatus('mandatory')
mscLpFiLtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbFddiMacIndex.setStatus('mandatory')
mscLpFiLtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3, 10), )
if mibBuilder.loadTexts: mscLpFiLtFbFddiMacTopTable.setStatus('mandatory')
mscLpFiLtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbFddiMacTopEntry.setStatus('mandatory')
mscLpFiLtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbFddiMacTData.setStatus('mandatory')
mscLpFiLtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4))
mscLpFiLtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbMacEnetRowStatusTable.setStatus('mandatory')
mscLpFiLtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbMacEnetRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbMacEnetRowStatus.setStatus('mandatory')
mscLpFiLtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbMacEnetComponentName.setStatus('mandatory')
mscLpFiLtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbMacEnetStorageType.setStatus('mandatory')
mscLpFiLtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbMacEnetIndex.setStatus('mandatory')
mscLpFiLtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4, 10), )
if mibBuilder.loadTexts: mscLpFiLtFbMacEnetTopTable.setStatus('mandatory')
mscLpFiLtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbMacEnetTopEntry.setStatus('mandatory')
mscLpFiLtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbMacEnetTData.setStatus('mandatory')
mscLpFiLtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5))
mscLpFiLtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbMacTrRowStatusTable.setStatus('mandatory')
mscLpFiLtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbMacTrRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbMacTrRowStatus.setStatus('mandatory')
mscLpFiLtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbMacTrComponentName.setStatus('mandatory')
mscLpFiLtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbMacTrStorageType.setStatus('mandatory')
mscLpFiLtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbMacTrIndex.setStatus('mandatory')
mscLpFiLtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5, 10), )
if mibBuilder.loadTexts: mscLpFiLtFbMacTrTopTable.setStatus('mandatory')
mscLpFiLtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbMacTrTopEntry.setStatus('mandatory')
mscLpFiLtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbMacTrTData.setStatus('mandatory')
mscLpFiLtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6))
mscLpFiLtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbDataRowStatusTable.setStatus('mandatory')
mscLpFiLtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbDataIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbDataRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbDataRowStatus.setStatus('mandatory')
mscLpFiLtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbDataComponentName.setStatus('mandatory')
mscLpFiLtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbDataStorageType.setStatus('mandatory')
mscLpFiLtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbDataIndex.setStatus('mandatory')
mscLpFiLtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6, 10), )
if mibBuilder.loadTexts: mscLpFiLtFbDataTopTable.setStatus('mandatory')
mscLpFiLtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbDataIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbDataTopEntry.setStatus('mandatory')
mscLpFiLtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbDataTData.setStatus('mandatory')
mscLpFiLtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7))
mscLpFiLtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbIpHRowStatusTable.setStatus('mandatory')
mscLpFiLtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbIpHRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbIpHRowStatus.setStatus('mandatory')
mscLpFiLtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbIpHComponentName.setStatus('mandatory')
mscLpFiLtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbIpHStorageType.setStatus('mandatory')
mscLpFiLtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbIpHIndex.setStatus('mandatory')
mscLpFiLtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7, 10), )
if mibBuilder.loadTexts: mscLpFiLtFbIpHTopTable.setStatus('mandatory')
mscLpFiLtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbIpHTopEntry.setStatus('mandatory')
mscLpFiLtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbIpHTData.setStatus('mandatory')
mscLpFiLtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8))
mscLpFiLtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbLlchRowStatusTable.setStatus('mandatory')
mscLpFiLtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbLlchRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbLlchRowStatus.setStatus('mandatory')
mscLpFiLtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbLlchComponentName.setStatus('mandatory')
mscLpFiLtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbLlchStorageType.setStatus('mandatory')
mscLpFiLtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbLlchIndex.setStatus('mandatory')
mscLpFiLtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8, 10), )
if mibBuilder.loadTexts: mscLpFiLtFbLlchTopTable.setStatus('mandatory')
mscLpFiLtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbLlchTopEntry.setStatus('mandatory')
mscLpFiLtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbLlchTData.setStatus('mandatory')
mscLpFiLtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9))
mscLpFiLtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbAppleHRowStatusTable.setStatus('mandatory')
mscLpFiLtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbAppleHRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbAppleHRowStatus.setStatus('mandatory')
mscLpFiLtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbAppleHComponentName.setStatus('mandatory')
mscLpFiLtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbAppleHStorageType.setStatus('mandatory')
mscLpFiLtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbAppleHIndex.setStatus('mandatory')
mscLpFiLtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9, 10), )
if mibBuilder.loadTexts: mscLpFiLtFbAppleHTopTable.setStatus('mandatory')
mscLpFiLtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbAppleHTopEntry.setStatus('mandatory')
mscLpFiLtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbAppleHTData.setStatus('mandatory')
mscLpFiLtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10))
mscLpFiLtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10, 1), )
if mibBuilder.loadTexts: mscLpFiLtFbIpxHRowStatusTable.setStatus('mandatory')
mscLpFiLtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbIpxHRowStatusEntry.setStatus('mandatory')
mscLpFiLtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbIpxHRowStatus.setStatus('mandatory')
mscLpFiLtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbIpxHComponentName.setStatus('mandatory')
mscLpFiLtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtFbIpxHStorageType.setStatus('mandatory')
mscLpFiLtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtFbIpxHIndex.setStatus('mandatory')
mscLpFiLtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10, 10), )
if mibBuilder.loadTexts: mscLpFiLtFbIpxHTopTable.setStatus('mandatory')
mscLpFiLtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpFiLtFbIpxHTopEntry.setStatus('mandatory')
mscLpFiLtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtFbIpxHTData.setStatus('mandatory')
mscLpFiLtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6))
mscLpFiLtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6, 1), )
if mibBuilder.loadTexts: mscLpFiLtCntlRowStatusTable.setStatus('mandatory')
mscLpFiLtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtCntlIndex"))
if mibBuilder.loadTexts: mscLpFiLtCntlRowStatusEntry.setStatus('mandatory')
mscLpFiLtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtCntlRowStatus.setStatus('mandatory')
mscLpFiLtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtCntlComponentName.setStatus('mandatory')
mscLpFiLtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiLtCntlStorageType.setStatus('mandatory')
mscLpFiLtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiLtCntlIndex.setStatus('mandatory')
mscLpFiLtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6, 10), )
if mibBuilder.loadTexts: mscLpFiLtCntlTopTable.setStatus('mandatory')
mscLpFiLtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiLtCntlIndex"))
if mibBuilder.loadTexts: mscLpFiLtCntlTopEntry.setStatus('mandatory')
mscLpFiLtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiLtCntlTData.setStatus('mandatory')
mscLpFiPhy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3))
mscLpFiPhyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 1), )
if mibBuilder.loadTexts: mscLpFiPhyRowStatusTable.setStatus('mandatory')
mscLpFiPhyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiPhyFddiPhyTypeIndex"))
if mibBuilder.loadTexts: mscLpFiPhyRowStatusEntry.setStatus('mandatory')
mscLpFiPhyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiPhyRowStatus.setStatus('mandatory')
mscLpFiPhyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhyComponentName.setStatus('mandatory')
mscLpFiPhyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhyStorageType.setStatus('mandatory')
mscLpFiPhyFddiPhyTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("a", 0), ("b", 1))))
if mibBuilder.loadTexts: mscLpFiPhyFddiPhyTypeIndex.setStatus('mandatory')
mscLpFiPhyProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 10), )
if mibBuilder.loadTexts: mscLpFiPhyProvTable.setStatus('mandatory')
mscLpFiPhyProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiPhyFddiPhyTypeIndex"))
if mibBuilder.loadTexts: mscLpFiPhyProvEntry.setStatus('mandatory')
mscLpFiPhyLerCutoff = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiPhyLerCutoff.setStatus('mandatory')
mscLpFiPhyLerAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiPhyLerAlarm.setStatus('mandatory')
mscLpFiPhyLinkErrorMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiPhyLinkErrorMonitor.setStatus('mandatory')
mscLpFiPhyOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11), )
if mibBuilder.loadTexts: mscLpFiPhyOperTable.setStatus('mandatory')
mscLpFiPhyOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiPhyFddiPhyTypeIndex"))
if mibBuilder.loadTexts: mscLpFiPhyOperEntry.setStatus('mandatory')
mscLpFiPhyNeighborType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("a", 1), ("b", 2), ("s", 3), ("m", 4), ("none", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhyNeighborType.setStatus('mandatory')
mscLpFiPhyLctFailCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhyLctFailCounts.setStatus('mandatory')
mscLpFiPhyLerEstimate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhyLerEstimate.setStatus('mandatory')
mscLpFiPhyLemRejectCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhyLemRejectCounts.setStatus('mandatory')
mscLpFiPhyLemCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhyLemCounts.setStatus('mandatory')
mscLpFiPhyPcmState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("off", 1), ("break", 2), ("trace", 3), ("connect", 4), ("next", 5), ("signal", 6), ("join", 7), ("verify", 8), ("active", 9), ("maint", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhyPcmState.setStatus('mandatory')
mscLpFiPhyLerFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhyLerFlag.setStatus('mandatory')
mscLpFiPhySignalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("escape", 0), ("phyTypeL", 1), ("phyTypeH", 2), ("accept", 3), ("lctLengthL", 4), ("lctLengthH", 5), ("macAvail", 6), ("lctResult", 7), ("macLoop", 8), ("macOnPhy", 9), ("signalingDone", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhySignalState.setStatus('mandatory')
mscLpFiPhySignalBitsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhySignalBitsRcvd.setStatus('mandatory')
mscLpFiPhySignalBitsTxmt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 3, 11, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiPhySignalBitsTxmt.setStatus('mandatory')
mscLpFiTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5))
mscLpFiTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 1), )
if mibBuilder.loadTexts: mscLpFiTestRowStatusTable.setStatus('mandatory')
mscLpFiTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiTestIndex"))
if mibBuilder.loadTexts: mscLpFiTestRowStatusEntry.setStatus('mandatory')
mscLpFiTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestRowStatus.setStatus('mandatory')
mscLpFiTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestComponentName.setStatus('mandatory')
mscLpFiTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestStorageType.setStatus('mandatory')
mscLpFiTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpFiTestIndex.setStatus('mandatory')
mscLpFiTestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 10), )
if mibBuilder.loadTexts: mscLpFiTestPTOTable.setStatus('mandatory')
mscLpFiTestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiTestIndex"))
if mibBuilder.loadTexts: mscLpFiTestPTOEntry.setStatus('mandatory')
mscLpFiTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiTestType.setStatus('mandatory')
mscLpFiTestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiTestFrmSize.setStatus('mandatory')
mscLpFiTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpFiTestDuration.setStatus('mandatory')
mscLpFiTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11), )
if mibBuilder.loadTexts: mscLpFiTestResultsTable.setStatus('mandatory')
mscLpFiTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpFiTestIndex"))
if mibBuilder.loadTexts: mscLpFiTestResultsEntry.setStatus('mandatory')
mscLpFiTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestElapsedTime.setStatus('mandatory')
mscLpFiTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestTimeRemaining.setStatus('mandatory')
mscLpFiTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestCauseOfTermination.setStatus('mandatory')
mscLpFiTestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestFrmTx.setStatus('mandatory')
mscLpFiTestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestBitsTx.setStatus('mandatory')
mscLpFiTestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestFrmRx.setStatus('mandatory')
mscLpFiTestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestBitsRx.setStatus('mandatory')
mscLpFiTestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 4, 5, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpFiTestErroredFrmRx.setStatus('mandatory')
mscLpTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13))
mscLpTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 1), )
if mibBuilder.loadTexts: mscLpTrRowStatusTable.setStatus('mandatory')
mscLpTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrRowStatusEntry.setStatus('mandatory')
mscLpTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrRowStatus.setStatus('mandatory')
mscLpTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrComponentName.setStatus('mandatory')
mscLpTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrStorageType.setStatus('mandatory')
mscLpTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)))
if mibBuilder.loadTexts: mscLpTrIndex.setStatus('mandatory')
mscLpTrCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 10), )
if mibBuilder.loadTexts: mscLpTrCidDataTable.setStatus('mandatory')
mscLpTrCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrCidDataEntry.setStatus('mandatory')
mscLpTrCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrCustomerIdentifier.setStatus('mandatory')
mscLpTrIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 11), )
if mibBuilder.loadTexts: mscLpTrIfEntryTable.setStatus('mandatory')
mscLpTrIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrIfEntryEntry.setStatus('mandatory')
mscLpTrIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrIfAdminStatus.setStatus('mandatory')
mscLpTrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrIfIndex.setStatus('mandatory')
mscLpTrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 12), )
if mibBuilder.loadTexts: mscLpTrProvTable.setStatus('mandatory')
mscLpTrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrProvEntry.setStatus('mandatory')
mscLpTrRingSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("fourMegabit", 3), ("sixteenMegabit", 4))).clone('sixteenMegabit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrRingSpeed.setStatus('mandatory')
mscLpTrMonitorParticipate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrMonitorParticipate.setStatus('mandatory')
mscLpTrFunctionalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 12, 1, 3), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="0300feff8f01")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrFunctionalAddress.setStatus('mandatory')
mscLpTrNodeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 12, 1, 4), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrNodeAddress.setStatus('mandatory')
mscLpTrGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 12, 1, 5), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="030001000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrGroupAddress.setStatus('mandatory')
mscLpTrProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 12, 1, 6), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 18)).clone(hexValue="4c414e20546f6b656e2052696e67")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrProductId.setStatus('mandatory')
mscLpTrApplicationFramerName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 12, 1, 7), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrApplicationFramerName.setStatus('mandatory')
mscLpTrAdminInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 13), )
if mibBuilder.loadTexts: mscLpTrAdminInfoTable.setStatus('mandatory')
mscLpTrAdminInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrAdminInfoEntry.setStatus('mandatory')
mscLpTrVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 13, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrVendor.setStatus('mandatory')
mscLpTrCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 13, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrCommentText.setStatus('mandatory')
mscLpTrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 15), )
if mibBuilder.loadTexts: mscLpTrStateTable.setStatus('mandatory')
mscLpTrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrStateEntry.setStatus('mandatory')
mscLpTrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrAdminState.setStatus('mandatory')
mscLpTrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrOperationalState.setStatus('mandatory')
mscLpTrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrUsageState.setStatus('mandatory')
mscLpTrOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 16), )
if mibBuilder.loadTexts: mscLpTrOperStatusTable.setStatus('mandatory')
mscLpTrOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrOperStatusEntry.setStatus('mandatory')
mscLpTrSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrSnmpOperStatus.setStatus('mandatory')
mscLpTrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 17), )
if mibBuilder.loadTexts: mscLpTrOperTable.setStatus('mandatory')
mscLpTrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrOperEntry.setStatus('mandatory')
mscLpTrMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 17, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrMacAddress.setStatus('mandatory')
mscLpTrRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("opened", 1), ("closed", 2), ("opening", 3), ("closing", 4), ("openFailure", 5), ("ringFailure", 6))).clone('ringFailure')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrRingState.setStatus('mandatory')
mscLpTrRingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 17, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3).clone(hexValue="000040")).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrRingStatus.setStatus('mandatory')
mscLpTrRingOpenStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("noOpen", 1), ("badParam", 2), ("lobeFailed", 3), ("signalLoss", 4), ("insertionTimeout", 5), ("ringFailed", 6), ("beaconing", 7), ("duplicateMac", 8), ("requestFailed", 9), ("removeReceived", 10), ("open", 11))).clone('noOpen')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrRingOpenStatus.setStatus('mandatory')
mscLpTrUpStream = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 17, 1, 7), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrUpStream.setStatus('mandatory')
mscLpTrChipSet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ibm16", 1), ("titms380", 2), ("titms380c16", 3), ("titms380c26", 4))).clone('titms380c16')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrChipSet.setStatus('mandatory')
mscLpTrLastTimeBeaconSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 17, 1, 10), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLastTimeBeaconSent.setStatus('mandatory')
mscLpTrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18), )
if mibBuilder.loadTexts: mscLpTrStatsTable.setStatus('mandatory')
mscLpTrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrStatsEntry.setStatus('mandatory')
mscLpTrLineErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLineErrors.setStatus('mandatory')
mscLpTrBurstErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrBurstErrors.setStatus('mandatory')
mscLpTrAcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrAcErrors.setStatus('mandatory')
mscLpTrAbortTransErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrAbortTransErrors.setStatus('mandatory')
mscLpTrInternalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrInternalErrors.setStatus('mandatory')
mscLpTrLostFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLostFrameErrors.setStatus('mandatory')
mscLpTrReceiveCongestions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrReceiveCongestions.setStatus('mandatory')
mscLpTrFrameCopiedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrFrameCopiedErrors.setStatus('mandatory')
mscLpTrTokenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTokenErrors.setStatus('mandatory')
mscLpTrSoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrSoftErrors.setStatus('mandatory')
mscLpTrHardErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrHardErrors.setStatus('mandatory')
mscLpTrSignalLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrSignalLoss.setStatus('mandatory')
mscLpTrTransmitBeacons = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTransmitBeacons.setStatus('mandatory')
mscLpTrRingRecoverys = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrRingRecoverys.setStatus('mandatory')
mscLpTrLobeWires = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLobeWires.setStatus('mandatory')
mscLpTrRemoveRings = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrRemoveRings.setStatus('mandatory')
mscLpTrSingleStation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrSingleStation.setStatus('mandatory')
mscLpTrFreqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 18, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrFreqErrors.setStatus('mandatory')
mscLpTrNcMacOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 20), )
if mibBuilder.loadTexts: mscLpTrNcMacOperTable.setStatus('mandatory')
mscLpTrNcMacOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"))
if mibBuilder.loadTexts: mscLpTrNcMacOperEntry.setStatus('mandatory')
mscLpTrNcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 20, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrNcMacAddress.setStatus('mandatory')
mscLpTrNcUpStream = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 20, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrNcUpStream.setStatus('mandatory')
mscLpTrLt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2))
mscLpTrLtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 1), )
if mibBuilder.loadTexts: mscLpTrLtRowStatusTable.setStatus('mandatory')
mscLpTrLtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"))
if mibBuilder.loadTexts: mscLpTrLtRowStatusEntry.setStatus('mandatory')
mscLpTrLtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtRowStatus.setStatus('mandatory')
mscLpTrLtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtComponentName.setStatus('mandatory')
mscLpTrLtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtStorageType.setStatus('mandatory')
mscLpTrLtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtIndex.setStatus('mandatory')
mscLpTrLtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 20), )
if mibBuilder.loadTexts: mscLpTrLtTopTable.setStatus('mandatory')
mscLpTrLtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"))
if mibBuilder.loadTexts: mscLpTrLtTopEntry.setStatus('mandatory')
mscLpTrLtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtTData.setStatus('mandatory')
mscLpTrLtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2))
mscLpTrLtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2, 1), )
if mibBuilder.loadTexts: mscLpTrLtFrmCmpRowStatusTable.setStatus('mandatory')
mscLpTrLtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpTrLtFrmCmpRowStatusEntry.setStatus('mandatory')
mscLpTrLtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFrmCmpRowStatus.setStatus('mandatory')
mscLpTrLtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFrmCmpComponentName.setStatus('mandatory')
mscLpTrLtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFrmCmpStorageType.setStatus('mandatory')
mscLpTrLtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFrmCmpIndex.setStatus('mandatory')
mscLpTrLtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2, 10), )
if mibBuilder.loadTexts: mscLpTrLtFrmCmpTopTable.setStatus('mandatory')
mscLpTrLtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpTrLtFrmCmpTopEntry.setStatus('mandatory')
mscLpTrLtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFrmCmpTData.setStatus('mandatory')
mscLpTrLtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3))
mscLpTrLtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3, 1), )
if mibBuilder.loadTexts: mscLpTrLtFrmCpyRowStatusTable.setStatus('mandatory')
mscLpTrLtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpTrLtFrmCpyRowStatusEntry.setStatus('mandatory')
mscLpTrLtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFrmCpyRowStatus.setStatus('mandatory')
mscLpTrLtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFrmCpyComponentName.setStatus('mandatory')
mscLpTrLtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFrmCpyStorageType.setStatus('mandatory')
mscLpTrLtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFrmCpyIndex.setStatus('mandatory')
mscLpTrLtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3, 10), )
if mibBuilder.loadTexts: mscLpTrLtFrmCpyTopTable.setStatus('mandatory')
mscLpTrLtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpTrLtFrmCpyTopEntry.setStatus('mandatory')
mscLpTrLtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFrmCpyTData.setStatus('mandatory')
mscLpTrLtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4))
mscLpTrLtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4, 1), )
if mibBuilder.loadTexts: mscLpTrLtPrtCfgRowStatusTable.setStatus('mandatory')
mscLpTrLtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpTrLtPrtCfgRowStatusEntry.setStatus('mandatory')
mscLpTrLtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtPrtCfgRowStatus.setStatus('mandatory')
mscLpTrLtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtPrtCfgComponentName.setStatus('mandatory')
mscLpTrLtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtPrtCfgStorageType.setStatus('mandatory')
mscLpTrLtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtPrtCfgIndex.setStatus('mandatory')
mscLpTrLtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4, 10), )
if mibBuilder.loadTexts: mscLpTrLtPrtCfgTopTable.setStatus('mandatory')
mscLpTrLtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpTrLtPrtCfgTopEntry.setStatus('mandatory')
mscLpTrLtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtPrtCfgTData.setStatus('mandatory')
mscLpTrLtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5))
mscLpTrLtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbRowStatusTable.setStatus('mandatory')
mscLpTrLtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbRowStatus.setStatus('mandatory')
mscLpTrLtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbComponentName.setStatus('mandatory')
mscLpTrLtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbStorageType.setStatus('mandatory')
mscLpTrLtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbIndex.setStatus('mandatory')
mscLpTrLtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 20), )
if mibBuilder.loadTexts: mscLpTrLtFbTopTable.setStatus('mandatory')
mscLpTrLtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbTopEntry.setStatus('mandatory')
mscLpTrLtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbTData.setStatus('mandatory')
mscLpTrLtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2))
mscLpTrLtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbTxInfoRowStatusTable.setStatus('mandatory')
mscLpTrLtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbTxInfoRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbTxInfoRowStatus.setStatus('mandatory')
mscLpTrLtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbTxInfoComponentName.setStatus('mandatory')
mscLpTrLtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbTxInfoStorageType.setStatus('mandatory')
mscLpTrLtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbTxInfoIndex.setStatus('mandatory')
mscLpTrLtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2, 10), )
if mibBuilder.loadTexts: mscLpTrLtFbTxInfoTopTable.setStatus('mandatory')
mscLpTrLtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbTxInfoTopEntry.setStatus('mandatory')
mscLpTrLtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbTxInfoTData.setStatus('mandatory')
mscLpTrLtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3))
mscLpTrLtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbFddiMacRowStatusTable.setStatus('mandatory')
mscLpTrLtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbFddiMacRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbFddiMacRowStatus.setStatus('mandatory')
mscLpTrLtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbFddiMacComponentName.setStatus('mandatory')
mscLpTrLtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbFddiMacStorageType.setStatus('mandatory')
mscLpTrLtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbFddiMacIndex.setStatus('mandatory')
mscLpTrLtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3, 10), )
if mibBuilder.loadTexts: mscLpTrLtFbFddiMacTopTable.setStatus('mandatory')
mscLpTrLtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbFddiMacTopEntry.setStatus('mandatory')
mscLpTrLtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbFddiMacTData.setStatus('mandatory')
mscLpTrLtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4))
mscLpTrLtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbMacEnetRowStatusTable.setStatus('mandatory')
mscLpTrLtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbMacEnetRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbMacEnetRowStatus.setStatus('mandatory')
mscLpTrLtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbMacEnetComponentName.setStatus('mandatory')
mscLpTrLtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbMacEnetStorageType.setStatus('mandatory')
mscLpTrLtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbMacEnetIndex.setStatus('mandatory')
mscLpTrLtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4, 10), )
if mibBuilder.loadTexts: mscLpTrLtFbMacEnetTopTable.setStatus('mandatory')
mscLpTrLtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbMacEnetTopEntry.setStatus('mandatory')
mscLpTrLtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbMacEnetTData.setStatus('mandatory')
mscLpTrLtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5))
mscLpTrLtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbMacTrRowStatusTable.setStatus('mandatory')
mscLpTrLtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbMacTrRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbMacTrRowStatus.setStatus('mandatory')
mscLpTrLtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbMacTrComponentName.setStatus('mandatory')
mscLpTrLtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbMacTrStorageType.setStatus('mandatory')
mscLpTrLtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbMacTrIndex.setStatus('mandatory')
mscLpTrLtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5, 10), )
if mibBuilder.loadTexts: mscLpTrLtFbMacTrTopTable.setStatus('mandatory')
mscLpTrLtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbMacTrTopEntry.setStatus('mandatory')
mscLpTrLtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbMacTrTData.setStatus('mandatory')
mscLpTrLtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6))
mscLpTrLtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbDataRowStatusTable.setStatus('mandatory')
mscLpTrLtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbDataIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbDataRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbDataRowStatus.setStatus('mandatory')
mscLpTrLtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbDataComponentName.setStatus('mandatory')
mscLpTrLtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbDataStorageType.setStatus('mandatory')
mscLpTrLtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbDataIndex.setStatus('mandatory')
mscLpTrLtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6, 10), )
if mibBuilder.loadTexts: mscLpTrLtFbDataTopTable.setStatus('mandatory')
mscLpTrLtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbDataIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbDataTopEntry.setStatus('mandatory')
mscLpTrLtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbDataTData.setStatus('mandatory')
mscLpTrLtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7))
mscLpTrLtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbIpHRowStatusTable.setStatus('mandatory')
mscLpTrLtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbIpHRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbIpHRowStatus.setStatus('mandatory')
mscLpTrLtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbIpHComponentName.setStatus('mandatory')
mscLpTrLtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbIpHStorageType.setStatus('mandatory')
mscLpTrLtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbIpHIndex.setStatus('mandatory')
mscLpTrLtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7, 10), )
if mibBuilder.loadTexts: mscLpTrLtFbIpHTopTable.setStatus('mandatory')
mscLpTrLtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbIpHTopEntry.setStatus('mandatory')
mscLpTrLtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbIpHTData.setStatus('mandatory')
mscLpTrLtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8))
mscLpTrLtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbLlchRowStatusTable.setStatus('mandatory')
mscLpTrLtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbLlchRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbLlchRowStatus.setStatus('mandatory')
mscLpTrLtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbLlchComponentName.setStatus('mandatory')
mscLpTrLtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbLlchStorageType.setStatus('mandatory')
mscLpTrLtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbLlchIndex.setStatus('mandatory')
mscLpTrLtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8, 10), )
if mibBuilder.loadTexts: mscLpTrLtFbLlchTopTable.setStatus('mandatory')
mscLpTrLtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbLlchTopEntry.setStatus('mandatory')
mscLpTrLtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbLlchTData.setStatus('mandatory')
mscLpTrLtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9))
mscLpTrLtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbAppleHRowStatusTable.setStatus('mandatory')
mscLpTrLtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbAppleHRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbAppleHRowStatus.setStatus('mandatory')
mscLpTrLtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbAppleHComponentName.setStatus('mandatory')
mscLpTrLtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbAppleHStorageType.setStatus('mandatory')
mscLpTrLtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbAppleHIndex.setStatus('mandatory')
mscLpTrLtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9, 10), )
if mibBuilder.loadTexts: mscLpTrLtFbAppleHTopTable.setStatus('mandatory')
mscLpTrLtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbAppleHTopEntry.setStatus('mandatory')
mscLpTrLtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbAppleHTData.setStatus('mandatory')
mscLpTrLtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10))
mscLpTrLtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10, 1), )
if mibBuilder.loadTexts: mscLpTrLtFbIpxHRowStatusTable.setStatus('mandatory')
mscLpTrLtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbIpxHRowStatusEntry.setStatus('mandatory')
mscLpTrLtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbIpxHRowStatus.setStatus('mandatory')
mscLpTrLtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbIpxHComponentName.setStatus('mandatory')
mscLpTrLtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtFbIpxHStorageType.setStatus('mandatory')
mscLpTrLtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtFbIpxHIndex.setStatus('mandatory')
mscLpTrLtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10, 10), )
if mibBuilder.loadTexts: mscLpTrLtFbIpxHTopTable.setStatus('mandatory')
mscLpTrLtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpTrLtFbIpxHTopEntry.setStatus('mandatory')
mscLpTrLtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtFbIpxHTData.setStatus('mandatory')
mscLpTrLtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6))
mscLpTrLtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6, 1), )
if mibBuilder.loadTexts: mscLpTrLtCntlRowStatusTable.setStatus('mandatory')
mscLpTrLtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtCntlIndex"))
if mibBuilder.loadTexts: mscLpTrLtCntlRowStatusEntry.setStatus('mandatory')
mscLpTrLtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtCntlRowStatus.setStatus('mandatory')
mscLpTrLtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtCntlComponentName.setStatus('mandatory')
mscLpTrLtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrLtCntlStorageType.setStatus('mandatory')
mscLpTrLtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrLtCntlIndex.setStatus('mandatory')
mscLpTrLtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6, 10), )
if mibBuilder.loadTexts: mscLpTrLtCntlTopTable.setStatus('mandatory')
mscLpTrLtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrLtCntlIndex"))
if mibBuilder.loadTexts: mscLpTrLtCntlTopEntry.setStatus('mandatory')
mscLpTrLtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrLtCntlTData.setStatus('mandatory')
mscLpTrTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5))
mscLpTrTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 1), )
if mibBuilder.loadTexts: mscLpTrTestRowStatusTable.setStatus('mandatory')
mscLpTrTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrTestIndex"))
if mibBuilder.loadTexts: mscLpTrTestRowStatusEntry.setStatus('mandatory')
mscLpTrTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestRowStatus.setStatus('mandatory')
mscLpTrTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestComponentName.setStatus('mandatory')
mscLpTrTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestStorageType.setStatus('mandatory')
mscLpTrTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpTrTestIndex.setStatus('mandatory')
mscLpTrTestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 10), )
if mibBuilder.loadTexts: mscLpTrTestPTOTable.setStatus('mandatory')
mscLpTrTestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrTestIndex"))
if mibBuilder.loadTexts: mscLpTrTestPTOEntry.setStatus('mandatory')
mscLpTrTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrTestType.setStatus('mandatory')
mscLpTrTestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrTestFrmSize.setStatus('mandatory')
mscLpTrTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpTrTestDuration.setStatus('mandatory')
mscLpTrTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11), )
if mibBuilder.loadTexts: mscLpTrTestResultsTable.setStatus('mandatory')
mscLpTrTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpTrTestIndex"))
if mibBuilder.loadTexts: mscLpTrTestResultsEntry.setStatus('mandatory')
mscLpTrTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestElapsedTime.setStatus('mandatory')
mscLpTrTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestTimeRemaining.setStatus('mandatory')
mscLpTrTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestCauseOfTermination.setStatus('mandatory')
mscLpTrTestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestFrmTx.setStatus('mandatory')
mscLpTrTestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestBitsTx.setStatus('mandatory')
mscLpTrTestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestFrmRx.setStatus('mandatory')
mscLpTrTestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestBitsRx.setStatus('mandatory')
mscLpTrTestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 13, 5, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpTrTestErroredFrmRx.setStatus('mandatory')
mscLpIlsFwdr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21))
mscLpIlsFwdrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrRowStatus.setStatus('mandatory')
mscLpIlsFwdrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrComponentName.setStatus('mandatory')
mscLpIlsFwdrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrStorageType.setStatus('mandatory')
mscLpIlsFwdrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: mscLpIlsFwdrIndex.setStatus('mandatory')
mscLpIlsFwdrIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 11), )
if mibBuilder.loadTexts: mscLpIlsFwdrIfEntryTable.setStatus('mandatory')
mscLpIlsFwdrIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrIfEntryEntry.setStatus('mandatory')
mscLpIlsFwdrIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrIfAdminStatus.setStatus('mandatory')
mscLpIlsFwdrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrIfIndex.setStatus('mandatory')
mscLpIlsFwdrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 12), )
if mibBuilder.loadTexts: mscLpIlsFwdrStateTable.setStatus('mandatory')
mscLpIlsFwdrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrStateEntry.setStatus('mandatory')
mscLpIlsFwdrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrAdminState.setStatus('mandatory')
mscLpIlsFwdrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrOperationalState.setStatus('mandatory')
mscLpIlsFwdrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrUsageState.setStatus('mandatory')
mscLpIlsFwdrOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 13), )
if mibBuilder.loadTexts: mscLpIlsFwdrOperStatusTable.setStatus('mandatory')
mscLpIlsFwdrOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrOperStatusEntry.setStatus('mandatory')
mscLpIlsFwdrSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrSnmpOperStatus.setStatus('mandatory')
mscLpIlsFwdrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 14), )
if mibBuilder.loadTexts: mscLpIlsFwdrStatsTable.setStatus('mandatory')
mscLpIlsFwdrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrStatsEntry.setStatus('mandatory')
mscLpIlsFwdrFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 14, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrFramesReceived.setStatus('mandatory')
mscLpIlsFwdrProcessedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 14, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrProcessedCount.setStatus('mandatory')
mscLpIlsFwdrErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 14, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrErrorCount.setStatus('mandatory')
mscLpIlsFwdrFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 14, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrFramesDiscarded.setStatus('mandatory')
mscLpIlsFwdrLinkToTrafficSourceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 312), )
if mibBuilder.loadTexts: mscLpIlsFwdrLinkToTrafficSourceTable.setStatus('mandatory')
mscLpIlsFwdrLinkToTrafficSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 312, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLinkToTrafficSourceValue"))
if mibBuilder.loadTexts: mscLpIlsFwdrLinkToTrafficSourceEntry.setStatus('mandatory')
mscLpIlsFwdrLinkToTrafficSourceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 312, 1, 1), Link()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLinkToTrafficSourceValue.setStatus('mandatory')
mscLpIlsFwdrLt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2))
mscLpIlsFwdrLtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtComponentName.setStatus('mandatory')
mscLpIlsFwdrLtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtStorageType.setStatus('mandatory')
mscLpIlsFwdrLtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtIndex.setStatus('mandatory')
mscLpIlsFwdrLtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 20), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtTopTable.setStatus('mandatory')
mscLpIlsFwdrLtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtTData.setStatus('mandatory')
mscLpIlsFwdrLtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2))
mscLpIlsFwdrLtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCmpRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCmpRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCmpRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCmpComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCmpStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCmpIndex.setStatus('mandatory')
mscLpIlsFwdrLtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCmpTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCmpTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCmpTData.setStatus('mandatory')
mscLpIlsFwdrLtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3))
mscLpIlsFwdrLtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCpyRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCpyRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCpyRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCpyComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCpyStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCpyIndex.setStatus('mandatory')
mscLpIlsFwdrLtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCpyTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCpyTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFrmCpyTData.setStatus('mandatory')
mscLpIlsFwdrLtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4))
mscLpIlsFwdrLtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtPrtCfgRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtPrtCfgRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtPrtCfgRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtPrtCfgComponentName.setStatus('mandatory')
mscLpIlsFwdrLtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtPrtCfgStorageType.setStatus('mandatory')
mscLpIlsFwdrLtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtPrtCfgIndex.setStatus('mandatory')
mscLpIlsFwdrLtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtPrtCfgTopTable.setStatus('mandatory')
mscLpIlsFwdrLtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtPrtCfgTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtPrtCfgTData.setStatus('mandatory')
mscLpIlsFwdrLtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5))
mscLpIlsFwdrLtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 20), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTData.setStatus('mandatory')
mscLpIlsFwdrLtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2))
mscLpIlsFwdrLtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTxInfoRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTxInfoRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTxInfoRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTxInfoComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTxInfoStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTxInfoIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTxInfoTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTxInfoTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbTxInfoTData.setStatus('mandatory')
mscLpIlsFwdrLtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3))
mscLpIlsFwdrLtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbFddiMacRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbFddiMacRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbFddiMacRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbFddiMacComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbFddiMacStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbFddiMacIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbFddiMacTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbFddiMacTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbFddiMacTData.setStatus('mandatory')
mscLpIlsFwdrLtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4))
mscLpIlsFwdrLtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacEnetRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacEnetRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacEnetRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacEnetComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacEnetStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacEnetIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacEnetTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacEnetTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacEnetTData.setStatus('mandatory')
mscLpIlsFwdrLtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5))
mscLpIlsFwdrLtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacTrRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacTrRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacTrRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacTrComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacTrStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacTrIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacTrTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacTrTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbMacTrTData.setStatus('mandatory')
mscLpIlsFwdrLtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6))
mscLpIlsFwdrLtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbDataRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbDataIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbDataRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbDataRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbDataComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbDataStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbDataIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbDataTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbDataIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbDataTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbDataTData.setStatus('mandatory')
mscLpIlsFwdrLtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7))
mscLpIlsFwdrLtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpHRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpHRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpHRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpHComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpHStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpHIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpHTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpHTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpHTData.setStatus('mandatory')
mscLpIlsFwdrLtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8))
mscLpIlsFwdrLtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbLlchRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbLlchRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbLlchRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbLlchComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbLlchStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbLlchIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbLlchTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbLlchTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbLlchTData.setStatus('mandatory')
mscLpIlsFwdrLtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9))
mscLpIlsFwdrLtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbAppleHRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbAppleHRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbAppleHRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbAppleHComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbAppleHStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbAppleHIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbAppleHTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbAppleHTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbAppleHTData.setStatus('mandatory')
mscLpIlsFwdrLtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10))
mscLpIlsFwdrLtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpxHRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpxHRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpxHRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpxHComponentName.setStatus('mandatory')
mscLpIlsFwdrLtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpxHStorageType.setStatus('mandatory')
mscLpIlsFwdrLtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpxHIndex.setStatus('mandatory')
mscLpIlsFwdrLtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpxHTopTable.setStatus('mandatory')
mscLpIlsFwdrLtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpxHTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtFbIpxHTData.setStatus('mandatory')
mscLpIlsFwdrLtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6))
mscLpIlsFwdrLtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtCntlRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrLtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtCntlIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtCntlRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrLtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtCntlRowStatus.setStatus('mandatory')
mscLpIlsFwdrLtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtCntlComponentName.setStatus('mandatory')
mscLpIlsFwdrLtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrLtCntlStorageType.setStatus('mandatory')
mscLpIlsFwdrLtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrLtCntlIndex.setStatus('mandatory')
mscLpIlsFwdrLtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrLtCntlTopTable.setStatus('mandatory')
mscLpIlsFwdrLtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrLtCntlIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrLtCntlTopEntry.setStatus('mandatory')
mscLpIlsFwdrLtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrLtCntlTData.setStatus('mandatory')
mscLpIlsFwdrTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5))
mscLpIlsFwdrTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 1), )
if mibBuilder.loadTexts: mscLpIlsFwdrTestRowStatusTable.setStatus('mandatory')
mscLpIlsFwdrTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrTestIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrTestRowStatusEntry.setStatus('mandatory')
mscLpIlsFwdrTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestRowStatus.setStatus('mandatory')
mscLpIlsFwdrTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestComponentName.setStatus('mandatory')
mscLpIlsFwdrTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestStorageType.setStatus('mandatory')
mscLpIlsFwdrTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpIlsFwdrTestIndex.setStatus('mandatory')
mscLpIlsFwdrTestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 10), )
if mibBuilder.loadTexts: mscLpIlsFwdrTestPTOTable.setStatus('mandatory')
mscLpIlsFwdrTestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrTestIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrTestPTOEntry.setStatus('mandatory')
mscLpIlsFwdrTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrTestType.setStatus('mandatory')
mscLpIlsFwdrTestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrTestFrmSize.setStatus('mandatory')
mscLpIlsFwdrTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpIlsFwdrTestDuration.setStatus('mandatory')
mscLpIlsFwdrTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11), )
if mibBuilder.loadTexts: mscLpIlsFwdrTestResultsTable.setStatus('mandatory')
mscLpIlsFwdrTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpIlsFwdrTestIndex"))
if mibBuilder.loadTexts: mscLpIlsFwdrTestResultsEntry.setStatus('mandatory')
mscLpIlsFwdrTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestElapsedTime.setStatus('mandatory')
mscLpIlsFwdrTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestTimeRemaining.setStatus('mandatory')
mscLpIlsFwdrTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestCauseOfTermination.setStatus('mandatory')
mscLpIlsFwdrTestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestFrmTx.setStatus('mandatory')
mscLpIlsFwdrTestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestBitsTx.setStatus('mandatory')
mscLpIlsFwdrTestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestFrmRx.setStatus('mandatory')
mscLpIlsFwdrTestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestBitsRx.setStatus('mandatory')
mscLpIlsFwdrTestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 21, 5, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpIlsFwdrTestErroredFrmRx.setStatus('mandatory')
mscLpEth100 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25))
mscLpEth100RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 1), )
if mibBuilder.loadTexts: mscLpEth100RowStatusTable.setStatus('mandatory')
mscLpEth100RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100RowStatusEntry.setStatus('mandatory')
mscLpEth100RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100RowStatus.setStatus('mandatory')
mscLpEth100ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100ComponentName.setStatus('mandatory')
mscLpEth100StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100StorageType.setStatus('mandatory')
mscLpEth100Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscLpEth100Index.setStatus('mandatory')
mscLpEth100CidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 10), )
if mibBuilder.loadTexts: mscLpEth100CidDataTable.setStatus('mandatory')
mscLpEth100CidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100CidDataEntry.setStatus('mandatory')
mscLpEth100CustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100CustomerIdentifier.setStatus('mandatory')
mscLpEth100IfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 11), )
if mibBuilder.loadTexts: mscLpEth100IfEntryTable.setStatus('mandatory')
mscLpEth100IfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100IfEntryEntry.setStatus('mandatory')
mscLpEth100IfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100IfAdminStatus.setStatus('mandatory')
mscLpEth100IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100IfIndex.setStatus('mandatory')
mscLpEth100ProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 12), )
if mibBuilder.loadTexts: mscLpEth100ProvTable.setStatus('mandatory')
mscLpEth100ProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100ProvEntry.setStatus('mandatory')
mscLpEth100DuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2))).clone('half')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100DuplexMode.setStatus('mandatory')
mscLpEth100LineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), )).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LineSpeed.setStatus('mandatory')
mscLpEth100AutoNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100AutoNegotiation.setStatus('mandatory')
mscLpEth100ApplicationFramerName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 12, 1, 4), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100ApplicationFramerName.setStatus('mandatory')
mscLpEth100AdminInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 13), )
if mibBuilder.loadTexts: mscLpEth100AdminInfoTable.setStatus('mandatory')
mscLpEth100AdminInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100AdminInfoEntry.setStatus('mandatory')
mscLpEth100Vendor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 13, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100Vendor.setStatus('mandatory')
mscLpEth100CommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 13, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100CommentText.setStatus('mandatory')
mscLpEth100StateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 15), )
if mibBuilder.loadTexts: mscLpEth100StateTable.setStatus('mandatory')
mscLpEth100StateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100StateEntry.setStatus('mandatory')
mscLpEth100AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100AdminState.setStatus('mandatory')
mscLpEth100OperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100OperationalState.setStatus('mandatory')
mscLpEth100UsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100UsageState.setStatus('mandatory')
mscLpEth100OperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 16), )
if mibBuilder.loadTexts: mscLpEth100OperStatusTable.setStatus('mandatory')
mscLpEth100OperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100OperStatusEntry.setStatus('mandatory')
mscLpEth100SnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100SnmpOperStatus.setStatus('mandatory')
mscLpEth100OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 17), )
if mibBuilder.loadTexts: mscLpEth100OperTable.setStatus('mandatory')
mscLpEth100OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100OperEntry.setStatus('mandatory')
mscLpEth100MacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 17, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100MacAddress.setStatus('mandatory')
mscLpEth100AutoNegStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("succeeded", 1), ("failed", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100AutoNegStatus.setStatus('mandatory')
mscLpEth100ActualLineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 17, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100ActualLineSpeed.setStatus('mandatory')
mscLpEth100ActualDuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100ActualDuplexMode.setStatus('mandatory')
mscLpEth100Eth100StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 18), )
if mibBuilder.loadTexts: mscLpEth100Eth100StatsTable.setStatus('mandatory')
mscLpEth100Eth100StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100Eth100StatsEntry.setStatus('mandatory')
mscLpEth100FramesTransmittedOk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 18, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100FramesTransmittedOk.setStatus('mandatory')
mscLpEth100FramesReceivedOk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100FramesReceivedOk.setStatus('mandatory')
mscLpEth100OctetsTransmittedOk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100OctetsTransmittedOk.setStatus('mandatory')
mscLpEth100OctetsReceivedOk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100OctetsReceivedOk.setStatus('mandatory')
mscLpEth100UndersizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100UndersizeFrames.setStatus('mandatory')
mscLpEth100ReceivedOctetsIntoRouterBr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 18, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100ReceivedOctetsIntoRouterBr.setStatus('mandatory')
mscLpEth100ReceivedFramesIntoRouterBr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 18, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100ReceivedFramesIntoRouterBr.setStatus('mandatory')
mscLpEth100StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19), )
if mibBuilder.loadTexts: mscLpEth100StatsTable.setStatus('mandatory')
mscLpEth100StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"))
if mibBuilder.loadTexts: mscLpEth100StatsEntry.setStatus('mandatory')
mscLpEth100AlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100AlignmentErrors.setStatus('mandatory')
mscLpEth100FcsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100FcsErrors.setStatus('mandatory')
mscLpEth100SingleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100SingleCollisionFrames.setStatus('mandatory')
mscLpEth100MultipleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100MultipleCollisionFrames.setStatus('mandatory')
mscLpEth100SqeTestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100SqeTestErrors.setStatus('mandatory')
mscLpEth100DeferredTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100DeferredTransmissions.setStatus('mandatory')
mscLpEth100LateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LateCollisions.setStatus('mandatory')
mscLpEth100ExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100ExcessiveCollisions.setStatus('mandatory')
mscLpEth100MacTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100MacTransmitErrors.setStatus('mandatory')
mscLpEth100CarrierSenseErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100CarrierSenseErrors.setStatus('mandatory')
mscLpEth100FrameTooLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100FrameTooLongs.setStatus('mandatory')
mscLpEth100MacReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 19, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100MacReceiveErrors.setStatus('mandatory')
mscLpEth100Lt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2))
mscLpEth100LtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 1), )
if mibBuilder.loadTexts: mscLpEth100LtRowStatusTable.setStatus('mandatory')
mscLpEth100LtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"))
if mibBuilder.loadTexts: mscLpEth100LtRowStatusEntry.setStatus('mandatory')
mscLpEth100LtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtRowStatus.setStatus('mandatory')
mscLpEth100LtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtComponentName.setStatus('mandatory')
mscLpEth100LtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtStorageType.setStatus('mandatory')
mscLpEth100LtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtIndex.setStatus('mandatory')
mscLpEth100LtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 20), )
if mibBuilder.loadTexts: mscLpEth100LtTopTable.setStatus('mandatory')
mscLpEth100LtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"))
if mibBuilder.loadTexts: mscLpEth100LtTopEntry.setStatus('mandatory')
mscLpEth100LtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtTData.setStatus('mandatory')
mscLpEth100LtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2))
mscLpEth100LtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFrmCmpRowStatusTable.setStatus('mandatory')
mscLpEth100LtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFrmCmpRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFrmCmpRowStatus.setStatus('mandatory')
mscLpEth100LtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFrmCmpComponentName.setStatus('mandatory')
mscLpEth100LtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFrmCmpStorageType.setStatus('mandatory')
mscLpEth100LtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFrmCmpIndex.setStatus('mandatory')
mscLpEth100LtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFrmCmpTopTable.setStatus('mandatory')
mscLpEth100LtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFrmCmpIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFrmCmpTopEntry.setStatus('mandatory')
mscLpEth100LtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFrmCmpTData.setStatus('mandatory')
mscLpEth100LtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3))
mscLpEth100LtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFrmCpyRowStatusTable.setStatus('mandatory')
mscLpEth100LtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFrmCpyRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFrmCpyRowStatus.setStatus('mandatory')
mscLpEth100LtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFrmCpyComponentName.setStatus('mandatory')
mscLpEth100LtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFrmCpyStorageType.setStatus('mandatory')
mscLpEth100LtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFrmCpyIndex.setStatus('mandatory')
mscLpEth100LtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFrmCpyTopTable.setStatus('mandatory')
mscLpEth100LtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFrmCpyIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFrmCpyTopEntry.setStatus('mandatory')
mscLpEth100LtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFrmCpyTData.setStatus('mandatory')
mscLpEth100LtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4))
mscLpEth100LtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4, 1), )
if mibBuilder.loadTexts: mscLpEth100LtPrtCfgRowStatusTable.setStatus('mandatory')
mscLpEth100LtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpEth100LtPrtCfgRowStatusEntry.setStatus('mandatory')
mscLpEth100LtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtPrtCfgRowStatus.setStatus('mandatory')
mscLpEth100LtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtPrtCfgComponentName.setStatus('mandatory')
mscLpEth100LtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtPrtCfgStorageType.setStatus('mandatory')
mscLpEth100LtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtPrtCfgIndex.setStatus('mandatory')
mscLpEth100LtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4, 10), )
if mibBuilder.loadTexts: mscLpEth100LtPrtCfgTopTable.setStatus('mandatory')
mscLpEth100LtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtPrtCfgIndex"))
if mibBuilder.loadTexts: mscLpEth100LtPrtCfgTopEntry.setStatus('mandatory')
mscLpEth100LtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtPrtCfgTData.setStatus('mandatory')
mscLpEth100LtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5))
mscLpEth100LtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbRowStatus.setStatus('mandatory')
mscLpEth100LtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbComponentName.setStatus('mandatory')
mscLpEth100LtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbStorageType.setStatus('mandatory')
mscLpEth100LtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbIndex.setStatus('mandatory')
mscLpEth100LtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 20), )
if mibBuilder.loadTexts: mscLpEth100LtFbTopTable.setStatus('mandatory')
mscLpEth100LtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbTopEntry.setStatus('mandatory')
mscLpEth100LtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbTData.setStatus('mandatory')
mscLpEth100LtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2))
mscLpEth100LtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbTxInfoRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbTxInfoRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbTxInfoRowStatus.setStatus('mandatory')
mscLpEth100LtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbTxInfoComponentName.setStatus('mandatory')
mscLpEth100LtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbTxInfoStorageType.setStatus('mandatory')
mscLpEth100LtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbTxInfoIndex.setStatus('mandatory')
mscLpEth100LtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFbTxInfoTopTable.setStatus('mandatory')
mscLpEth100LtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbTxInfoIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbTxInfoTopEntry.setStatus('mandatory')
mscLpEth100LtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbTxInfoTData.setStatus('mandatory')
mscLpEth100LtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3))
mscLpEth100LtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbFddiMacRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbFddiMacRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbFddiMacRowStatus.setStatus('mandatory')
mscLpEth100LtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbFddiMacComponentName.setStatus('mandatory')
mscLpEth100LtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbFddiMacStorageType.setStatus('mandatory')
mscLpEth100LtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbFddiMacIndex.setStatus('mandatory')
mscLpEth100LtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFbFddiMacTopTable.setStatus('mandatory')
mscLpEth100LtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbFddiMacIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbFddiMacTopEntry.setStatus('mandatory')
mscLpEth100LtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbFddiMacTData.setStatus('mandatory')
mscLpEth100LtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4))
mscLpEth100LtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbMacEnetRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbMacEnetRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbMacEnetRowStatus.setStatus('mandatory')
mscLpEth100LtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbMacEnetComponentName.setStatus('mandatory')
mscLpEth100LtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbMacEnetStorageType.setStatus('mandatory')
mscLpEth100LtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbMacEnetIndex.setStatus('mandatory')
mscLpEth100LtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFbMacEnetTopTable.setStatus('mandatory')
mscLpEth100LtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbMacEnetIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbMacEnetTopEntry.setStatus('mandatory')
mscLpEth100LtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbMacEnetTData.setStatus('mandatory')
mscLpEth100LtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5))
mscLpEth100LtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbMacTrRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbMacTrRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbMacTrRowStatus.setStatus('mandatory')
mscLpEth100LtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbMacTrComponentName.setStatus('mandatory')
mscLpEth100LtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbMacTrStorageType.setStatus('mandatory')
mscLpEth100LtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbMacTrIndex.setStatus('mandatory')
mscLpEth100LtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFbMacTrTopTable.setStatus('mandatory')
mscLpEth100LtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbMacTrIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbMacTrTopEntry.setStatus('mandatory')
mscLpEth100LtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbMacTrTData.setStatus('mandatory')
mscLpEth100LtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6))
mscLpEth100LtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbDataRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbDataIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbDataRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbDataRowStatus.setStatus('mandatory')
mscLpEth100LtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbDataComponentName.setStatus('mandatory')
mscLpEth100LtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbDataStorageType.setStatus('mandatory')
mscLpEth100LtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbDataIndex.setStatus('mandatory')
mscLpEth100LtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFbDataTopTable.setStatus('mandatory')
mscLpEth100LtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbDataIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbDataTopEntry.setStatus('mandatory')
mscLpEth100LtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbDataTData.setStatus('mandatory')
mscLpEth100LtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7))
mscLpEth100LtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbIpHRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbIpHRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbIpHRowStatus.setStatus('mandatory')
mscLpEth100LtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbIpHComponentName.setStatus('mandatory')
mscLpEth100LtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbIpHStorageType.setStatus('mandatory')
mscLpEth100LtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbIpHIndex.setStatus('mandatory')
mscLpEth100LtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFbIpHTopTable.setStatus('mandatory')
mscLpEth100LtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIpHIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbIpHTopEntry.setStatus('mandatory')
mscLpEth100LtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbIpHTData.setStatus('mandatory')
mscLpEth100LtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8))
mscLpEth100LtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbLlchRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbLlchRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbLlchRowStatus.setStatus('mandatory')
mscLpEth100LtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbLlchComponentName.setStatus('mandatory')
mscLpEth100LtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbLlchStorageType.setStatus('mandatory')
mscLpEth100LtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbLlchIndex.setStatus('mandatory')
mscLpEth100LtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFbLlchTopTable.setStatus('mandatory')
mscLpEth100LtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbLlchIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbLlchTopEntry.setStatus('mandatory')
mscLpEth100LtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbLlchTData.setStatus('mandatory')
mscLpEth100LtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9))
mscLpEth100LtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbAppleHRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbAppleHRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbAppleHRowStatus.setStatus('mandatory')
mscLpEth100LtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbAppleHComponentName.setStatus('mandatory')
mscLpEth100LtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbAppleHStorageType.setStatus('mandatory')
mscLpEth100LtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbAppleHIndex.setStatus('mandatory')
mscLpEth100LtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFbAppleHTopTable.setStatus('mandatory')
mscLpEth100LtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbAppleHIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbAppleHTopEntry.setStatus('mandatory')
mscLpEth100LtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbAppleHTData.setStatus('mandatory')
mscLpEth100LtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10))
mscLpEth100LtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10, 1), )
if mibBuilder.loadTexts: mscLpEth100LtFbIpxHRowStatusTable.setStatus('mandatory')
mscLpEth100LtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbIpxHRowStatusEntry.setStatus('mandatory')
mscLpEth100LtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbIpxHRowStatus.setStatus('mandatory')
mscLpEth100LtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbIpxHComponentName.setStatus('mandatory')
mscLpEth100LtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtFbIpxHStorageType.setStatus('mandatory')
mscLpEth100LtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtFbIpxHIndex.setStatus('mandatory')
mscLpEth100LtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10, 10), )
if mibBuilder.loadTexts: mscLpEth100LtFbIpxHTopTable.setStatus('mandatory')
mscLpEth100LtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtFbIpxHIndex"))
if mibBuilder.loadTexts: mscLpEth100LtFbIpxHTopEntry.setStatus('mandatory')
mscLpEth100LtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtFbIpxHTData.setStatus('mandatory')
mscLpEth100LtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6))
mscLpEth100LtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6, 1), )
if mibBuilder.loadTexts: mscLpEth100LtCntlRowStatusTable.setStatus('mandatory')
mscLpEth100LtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtCntlIndex"))
if mibBuilder.loadTexts: mscLpEth100LtCntlRowStatusEntry.setStatus('mandatory')
mscLpEth100LtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtCntlRowStatus.setStatus('mandatory')
mscLpEth100LtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtCntlComponentName.setStatus('mandatory')
mscLpEth100LtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100LtCntlStorageType.setStatus('mandatory')
mscLpEth100LtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100LtCntlIndex.setStatus('mandatory')
mscLpEth100LtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6, 10), )
if mibBuilder.loadTexts: mscLpEth100LtCntlTopTable.setStatus('mandatory')
mscLpEth100LtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100LtCntlIndex"))
if mibBuilder.loadTexts: mscLpEth100LtCntlTopEntry.setStatus('mandatory')
mscLpEth100LtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100LtCntlTData.setStatus('mandatory')
mscLpEth100Test = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3))
mscLpEth100TestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 1), )
if mibBuilder.loadTexts: mscLpEth100TestRowStatusTable.setStatus('mandatory')
mscLpEth100TestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100TestIndex"))
if mibBuilder.loadTexts: mscLpEth100TestRowStatusEntry.setStatus('mandatory')
mscLpEth100TestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestRowStatus.setStatus('mandatory')
mscLpEth100TestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestComponentName.setStatus('mandatory')
mscLpEth100TestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestStorageType.setStatus('mandatory')
mscLpEth100TestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLpEth100TestIndex.setStatus('mandatory')
mscLpEth100TestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 10), )
if mibBuilder.loadTexts: mscLpEth100TestPTOTable.setStatus('mandatory')
mscLpEth100TestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100TestIndex"))
if mibBuilder.loadTexts: mscLpEth100TestPTOEntry.setStatus('mandatory')
mscLpEth100TestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100TestType.setStatus('mandatory')
mscLpEth100TestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100TestFrmSize.setStatus('mandatory')
mscLpEth100TestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEth100TestDuration.setStatus('mandatory')
mscLpEth100TestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11), )
if mibBuilder.loadTexts: mscLpEth100TestResultsTable.setStatus('mandatory')
mscLpEth100TestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100Index"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLpEth100TestIndex"))
if mibBuilder.loadTexts: mscLpEth100TestResultsEntry.setStatus('mandatory')
mscLpEth100TestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestElapsedTime.setStatus('mandatory')
mscLpEth100TestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestTimeRemaining.setStatus('mandatory')
mscLpEth100TestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestCauseOfTermination.setStatus('mandatory')
mscLpEth100TestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestFrmTx.setStatus('mandatory')
mscLpEth100TestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestBitsTx.setStatus('mandatory')
mscLpEth100TestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestFrmRx.setStatus('mandatory')
mscLpEth100TestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestBitsRx.setStatus('mandatory')
mscLpEth100TestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 25, 3, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEth100TestErroredFrmRx.setStatus('mandatory')
mscLa = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105))
mscLaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 1), )
if mibBuilder.loadTexts: mscLaRowStatusTable.setStatus('mandatory')
mscLaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaIndex"))
if mibBuilder.loadTexts: mscLaRowStatusEntry.setStatus('mandatory')
mscLaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLaRowStatus.setStatus('mandatory')
mscLaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaComponentName.setStatus('mandatory')
mscLaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaStorageType.setStatus('mandatory')
mscLaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: mscLaIndex.setStatus('mandatory')
mscLaCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 10), )
if mibBuilder.loadTexts: mscLaCidDataTable.setStatus('mandatory')
mscLaCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaIndex"))
if mibBuilder.loadTexts: mscLaCidDataEntry.setStatus('mandatory')
mscLaCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLaCustomerIdentifier.setStatus('mandatory')
mscLaMediaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 11), )
if mibBuilder.loadTexts: mscLaMediaProvTable.setStatus('mandatory')
mscLaMediaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaIndex"))
if mibBuilder.loadTexts: mscLaMediaProvEntry.setStatus('mandatory')
mscLaLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 11, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLaLinkToProtocolPort.setStatus('mandatory')
mscLaIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 12), )
if mibBuilder.loadTexts: mscLaIfEntryTable.setStatus('mandatory')
mscLaIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaIndex"))
if mibBuilder.loadTexts: mscLaIfEntryEntry.setStatus('mandatory')
mscLaIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLaIfAdminStatus.setStatus('mandatory')
mscLaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 12, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaIfIndex.setStatus('mandatory')
mscLaStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 13), )
if mibBuilder.loadTexts: mscLaStateTable.setStatus('mandatory')
mscLaStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaIndex"))
if mibBuilder.loadTexts: mscLaStateEntry.setStatus('mandatory')
mscLaAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaAdminState.setStatus('mandatory')
mscLaOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaOperationalState.setStatus('mandatory')
mscLaUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaUsageState.setStatus('mandatory')
mscLaOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 14), )
if mibBuilder.loadTexts: mscLaOperStatusTable.setStatus('mandatory')
mscLaOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaIndex"))
if mibBuilder.loadTexts: mscLaOperStatusEntry.setStatus('mandatory')
mscLaSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaSnmpOperStatus.setStatus('mandatory')
mscLaFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2))
mscLaFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 1), )
if mibBuilder.loadTexts: mscLaFramerRowStatusTable.setStatus('mandatory')
mscLaFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaFramerIndex"))
if mibBuilder.loadTexts: mscLaFramerRowStatusEntry.setStatus('mandatory')
mscLaFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaFramerRowStatus.setStatus('mandatory')
mscLaFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaFramerComponentName.setStatus('mandatory')
mscLaFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLaFramerStorageType.setStatus('mandatory')
mscLaFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscLaFramerIndex.setStatus('mandatory')
mscLaFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 10), )
if mibBuilder.loadTexts: mscLaFramerProvTable.setStatus('mandatory')
mscLaFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaFramerIndex"))
if mibBuilder.loadTexts: mscLaFramerProvEntry.setStatus('mandatory')
mscLaFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLaFramerInterfaceName.setStatus('obsolete')
mscLaFramerInterfaceNamesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 431), )
if mibBuilder.loadTexts: mscLaFramerInterfaceNamesTable.setStatus('mandatory')
mscLaFramerInterfaceNamesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 431, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-LanDriversMIB", "mscLaFramerInterfaceNamesValue"))
if mibBuilder.loadTexts: mscLaFramerInterfaceNamesEntry.setStatus('mandatory')
mscLaFramerInterfaceNamesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 431, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLaFramerInterfaceNamesValue.setStatus('mandatory')
mscLaFramerInterfaceNamesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 105, 2, 431, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscLaFramerInterfaceNamesRowStatus.setStatus('mandatory')
lanDriversGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 30, 1))
lanDriversGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 30, 1, 1))
lanDriversGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 30, 1, 1, 3))
lanDriversGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 30, 1, 1, 3, 2))
lanDriversCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 30, 3))
lanDriversCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 30, 3, 1))
lanDriversCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 30, 3, 1, 3))
lanDriversCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 30, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-LanDriversMIB", mscLpFiLtCntlRowStatusTable=mscLpFiLtCntlRowStatusTable, mscLpTrSoftErrors=mscLpTrSoftErrors, mscLpTrLtFrmCpyTData=mscLpTrLtFrmCpyTData, mscLpIlsFwdrLtFbLlch=mscLpIlsFwdrLtFbLlch, mscLpFiNcOldUpstreamNeighbor=mscLpFiNcOldUpstreamNeighbor, mscLpFiLtFbData=mscLpFiLtFbData, mscLpEnetLtRowStatus=mscLpEnetLtRowStatus, mscLpEth100LtCntlRowStatusEntry=mscLpEth100LtCntlRowStatusEntry, mscLpFiAcceptBs=mscLpFiAcceptBs, mscLpEnetLtFbLlchRowStatus=mscLpEnetLtFbLlchRowStatus, mscLpFiLtFrmCpyRowStatusEntry=mscLpFiLtFrmCpyRowStatusEntry, mscLpTrLtFbAppleHStorageType=mscLpTrLtFbAppleHStorageType, mscLpEth100LtFbData=mscLpEth100LtFbData, mscLpEth100LtFbTxInfoIndex=mscLpEth100LtFbTxInfoIndex, mscLpIlsFwdrLtFbLlchRowStatusEntry=mscLpIlsFwdrLtFbLlchRowStatusEntry, mscLpEnetLtFbIpxHRowStatusEntry=mscLpEnetLtFbIpxHRowStatusEntry, mscLpFiLtFrmCmpRowStatus=mscLpFiLtFrmCmpRowStatus, mscLpFiLtFrmCpyRowStatusTable=mscLpFiLtFrmCpyRowStatusTable, mscLpFiLtFbTxInfoIndex=mscLpFiLtFbTxInfoIndex, mscLpFiLtFbIpHTData=mscLpFiLtFbIpHTData, mscLpEth100OperTable=mscLpEth100OperTable, mscLpEnetLtFrmCmpStorageType=mscLpEnetLtFrmCmpStorageType, mscLpFiRingLatency=mscLpFiRingLatency, mscLpFiTestElapsedTime=mscLpFiTestElapsedTime, mscLpEth100LtFbDataComponentName=mscLpEth100LtFbDataComponentName, mscLpEth100LtFbMacEnetRowStatusTable=mscLpEth100LtFbMacEnetRowStatusTable, mscLpEth100ActualDuplexMode=mscLpEth100ActualDuplexMode, mscLpTrTestIndex=mscLpTrTestIndex, mscLpEth100LtFbLlchComponentName=mscLpEth100LtFbLlchComponentName, mscLpFiTestFrmSize=mscLpFiTestFrmSize, mscLpTrLtFbAppleHIndex=mscLpTrLtFbAppleHIndex, mscLpTrTestRowStatusTable=mscLpTrTestRowStatusTable, mscLpIlsFwdrTestResultsTable=mscLpIlsFwdrTestResultsTable, mscLpIlsFwdrUsageState=mscLpIlsFwdrUsageState, mscLpTrTestCauseOfTermination=mscLpTrTestCauseOfTermination, mscLpFiLtFbAppleHTopEntry=mscLpFiLtFbAppleHTopEntry, mscLpIlsFwdrProcessedCount=mscLpIlsFwdrProcessedCount, mscLpEnetLtFbDataRowStatusTable=mscLpEnetLtFbDataRowStatusTable, mscLpFiLtFbLlchRowStatus=mscLpFiLtFbLlchRowStatus, mscLpEnetLtFbLlchIndex=mscLpEnetLtFbLlchIndex, mscLpTrLastTimeBeaconSent=mscLpTrLastTimeBeaconSent, mscLpEth100LtFbAppleHRowStatusTable=mscLpEth100LtFbAppleHRowStatusTable, mscLpFiLtFrmCmpTopEntry=mscLpFiLtFrmCmpTopEntry, mscLpEnetLtTopEntry=mscLpEnetLtTopEntry, mscLpFiValidTransmissionTimer=mscLpFiValidTransmissionTimer, mscLpFiOperationalState=mscLpFiOperationalState, mscLpFiIfAdminStatus=mscLpFiIfAdminStatus, mscLpFiPhyRowStatus=mscLpFiPhyRowStatus, mscLpEth100LtRowStatusEntry=mscLpEth100LtRowStatusEntry, mscLpEth100CidDataTable=mscLpEth100CidDataTable, mscLpEnetLtPrtCfgIndex=mscLpEnetLtPrtCfgIndex, mscLpEnetLtPrtCfgTopEntry=mscLpEnetLtPrtCfgTopEntry, mscLpEnetLtIndex=mscLpEnetLtIndex, mscLpTrLtFbIpHStorageType=mscLpTrLtFbIpHStorageType, mscLpEth100LtFbMacTrRowStatus=mscLpEth100LtFbMacTrRowStatus, mscLpEth100ApplicationFramerName=mscLpEth100ApplicationFramerName, mscLpFiCfState=mscLpFiCfState, mscLpTrLtCntlTData=mscLpTrLtCntlTData, mscLpEnetLtFbMacEnetIndex=mscLpEnetLtFbMacEnetIndex, mscLpEth100LtFbFddiMacComponentName=mscLpEth100LtFbFddiMacComponentName, mscLpEnetMacReceiveErrors=mscLpEnetMacReceiveErrors, mscLpIlsFwdrLtFbAppleHTopTable=mscLpIlsFwdrLtFbAppleHTopTable, mscLpIlsFwdrFramesReceived=mscLpIlsFwdrFramesReceived, mscLpEnetLtFrmCmpRowStatus=mscLpEnetLtFrmCmpRowStatus, mscLpIlsFwdrSnmpOperStatus=mscLpIlsFwdrSnmpOperStatus, mscLpEnetLtFbTxInfoStorageType=mscLpEnetLtFbTxInfoStorageType, mscLpEnetLtFbFddiMacIndex=mscLpEnetLtFbFddiMacIndex, mscLpEth100LtFbIpHStorageType=mscLpEth100LtFbIpHStorageType, mscLpTrLobeWires=mscLpTrLobeWires, mscLpEnetOperStatusTable=mscLpEnetOperStatusTable, mscLpEth100CidDataEntry=mscLpEth100CidDataEntry, mscLpFiLtFbLlchTopTable=mscLpFiLtFbLlchTopTable, mscLpIlsFwdrLtFbTopTable=mscLpIlsFwdrLtFbTopTable, mscLpIlsFwdrLtFrmCpyComponentName=mscLpIlsFwdrLtFrmCpyComponentName, mscLpIlsFwdrLtCntlRowStatusEntry=mscLpIlsFwdrLtCntlRowStatusEntry, mscLpTrLtFbLlchTopTable=mscLpTrLtFbLlchTopTable, mscLpEth100SnmpOperStatus=mscLpEth100SnmpOperStatus, mscLpEth100LtFbFddiMacRowStatusTable=mscLpEth100LtFbFddiMacRowStatusTable, mscLpEnetAlignmentErrors=mscLpEnetAlignmentErrors, mscLpEth100RowStatusEntry=mscLpEth100RowStatusEntry, mscLpIlsFwdrLtPrtCfgRowStatusEntry=mscLpIlsFwdrLtPrtCfgRowStatusEntry, mscLpEnetComponentName=mscLpEnetComponentName, mscLpIlsFwdrLtFbDataRowStatusEntry=mscLpIlsFwdrLtFbDataRowStatusEntry, mscLpFiLtFbMacEnetRowStatusTable=mscLpFiLtFbMacEnetRowStatusTable, mscLpIlsFwdrTestRowStatusTable=mscLpIlsFwdrTestRowStatusTable, mscLpFiNcMacOperTable=mscLpFiNcMacOperTable, mscLpFiLtFbLlch=mscLpFiLtFbLlch, mscLpFiMacProvEntry=mscLpFiMacProvEntry, mscLpTrLtFbTxInfoRowStatusTable=mscLpTrLtFbTxInfoRowStatusTable, mscLpTrLtFbLlchTopEntry=mscLpTrLtFbLlchTopEntry, mscLpEth100LtFbLlchRowStatus=mscLpEth100LtFbLlchRowStatus, mscLpTrLtFbIpxHRowStatusEntry=mscLpTrLtFbIpxHRowStatusEntry, mscLpEnetLtCntlTopTable=mscLpEnetLtCntlTopTable, mscLpFiLtFbMacEnetTopTable=mscLpFiLtFbMacEnetTopTable, mscLpEnetLtFrmCmpTopTable=mscLpEnetLtFrmCmpTopTable, mscLpEth100LtFbMacEnetComponentName=mscLpEth100LtFbMacEnetComponentName, mscLpIlsFwdrLtFbMacTrRowStatusEntry=mscLpIlsFwdrLtFbMacTrRowStatusEntry, mscLpEth100LtFrmCpy=mscLpEth100LtFrmCpy, mscLpEth100LtFbMacEnetTopEntry=mscLpEth100LtFbMacEnetTopEntry, mscLpEth100LtFbFddiMacIndex=mscLpEth100LtFbFddiMacIndex, mscLpTrLtFrmCmpRowStatus=mscLpTrLtFrmCmpRowStatus, mscLpFiMacOperTable=mscLpFiMacOperTable, mscLpFiLtFrmCmpTData=mscLpFiLtFrmCmpTData, mscLpTrLtFrmCpyRowStatus=mscLpTrLtFrmCpyRowStatus, mscLpIlsFwdrLtPrtCfgTopTable=mscLpIlsFwdrLtPrtCfgTopTable, mscLpTrLtFbTxInfoTData=mscLpTrLtFbTxInfoTData, mscLpEnetLtFbDataTData=mscLpEnetLtFbDataTData, mscLpTrTestPTOTable=mscLpTrTestPTOTable, mscLpEnetLtFbFddiMacTopEntry=mscLpEnetLtFbFddiMacTopEntry, mscLpFiLtFbAppleHStorageType=mscLpFiLtFbAppleHStorageType, mscLpFiStateTable=mscLpFiStateTable, mscLpFiStateEntry=mscLpFiStateEntry, mscLpTrLtFbData=mscLpTrLtFbData, mscLpFiTestFrmRx=mscLpFiTestFrmRx, mscLpIlsFwdrLtFbTxInfoTData=mscLpIlsFwdrLtFbTxInfoTData, mscLpFiFrameCounts=mscLpFiFrameCounts, mscLpIlsFwdrStorageType=mscLpIlsFwdrStorageType, mscLpIlsFwdrLtFbLlchRowStatusTable=mscLpIlsFwdrLtFbLlchRowStatusTable, mscLpEth100OperStatusTable=mscLpEth100OperStatusTable, mscLpTrTransmitBeacons=mscLpTrTransmitBeacons, mscLpEth100Eth100StatsEntry=mscLpEth100Eth100StatsEntry, mscLpEth100RowStatus=mscLpEth100RowStatus, mscLpEth100LtFbLlchStorageType=mscLpEth100LtFbLlchStorageType, mscLpEnetLtFbMacEnetTopTable=mscLpEnetLtFbMacEnetTopTable, mscLpFiLtFbTxInfoTData=mscLpFiLtFbTxInfoTData, mscLpEnetLtFrmCpyTopTable=mscLpEnetLtFrmCpyTopTable, mscLaMediaProvTable=mscLaMediaProvTable, mscLpTrCommentText=mscLpTrCommentText, mscLpTrNcMacOperTable=mscLpTrNcMacOperTable, mscLpIlsFwdrTestFrmTx=mscLpIlsFwdrTestFrmTx, mscLpFiLtFbMacTrComponentName=mscLpFiLtFbMacTrComponentName, mscLpTrLtFbMacEnetTData=mscLpTrLtFbMacEnetTData, mscLpEnetLtFbIpxHRowStatus=mscLpEnetLtFbIpxHRowStatus, mscLpEnetLtCntlRowStatusEntry=mscLpEnetLtCntlRowStatusEntry, mscLpFiCidDataTable=mscLpFiCidDataTable, mscLpFiPhySignalState=mscLpFiPhySignalState, mscLpTrLtFbIpHRowStatus=mscLpTrLtFbIpHRowStatus, mscLpIlsFwdrLtFrmCpyIndex=mscLpIlsFwdrLtFrmCpyIndex, mscLpIlsFwdrLtFbComponentName=mscLpIlsFwdrLtFbComponentName, mscLpTrProvTable=mscLpTrProvTable, mscLpEth100LtFbTxInfo=mscLpEth100LtFbTxInfo, mscLpEth100TestTimeRemaining=mscLpEth100TestTimeRemaining, mscLpIlsFwdrLtFbDataTData=mscLpIlsFwdrLtFbDataTData, mscLpIlsFwdrComponentName=mscLpIlsFwdrComponentName, mscLpFiPhyComponentName=mscLpFiPhyComponentName, mscLpEnetLtFbFddiMacRowStatusTable=mscLpEnetLtFbFddiMacRowStatusTable, mscLpEnetLtFbDataTopTable=mscLpEnetLtFbDataTopTable, mscLpEth100LtFbIpxHRowStatusTable=mscLpEth100LtFbIpxHRowStatusTable, mscLpFiLtFrmCpyComponentName=mscLpFiLtFrmCpyComponentName, mscLpFiPhyLerAlarm=mscLpFiPhyLerAlarm, mscLpIlsFwdrLtFbMacTrRowStatus=mscLpIlsFwdrLtFbMacTrRowStatus, mscLpEth100AutoNegStatus=mscLpEth100AutoNegStatus, mscLpEnetFcsErrors=mscLpEnetFcsErrors, mscLpEth100LtFbTData=mscLpEth100LtFbTData, mscLaFramerInterfaceNamesTable=mscLaFramerInterfaceNamesTable, mscLpFiPhyLemCounts=mscLpFiPhyLemCounts, mscLpEth100LtFbIpxHComponentName=mscLpEth100LtFbIpxHComponentName, mscLpTrLtFbMacTrComponentName=mscLpTrLtFbMacTrComponentName, mscLpTrLtFbRowStatusTable=mscLpTrLtFbRowStatusTable, mscLpEnetTestRowStatusEntry=mscLpEnetTestRowStatusEntry, mscLpTrLtFbIpHRowStatusEntry=mscLpTrLtFbIpHRowStatusEntry, mscLpTrLtFbLlchStorageType=mscLpTrLtFbLlchStorageType, mscLpEnetLtFbIpxH=mscLpEnetLtFbIpxH, mscLpTrLtFrmCpyTopTable=mscLpTrLtFrmCpyTopTable, mscLpEth100TestPTOTable=mscLpEth100TestPTOTable, mscLpTrLtPrtCfgTopEntry=mscLpTrLtPrtCfgTopEntry, mscLpFiNeighborNotifyInterval=mscLpFiNeighborNotifyInterval, mscLpEnetTestBitsRx=mscLpEnetTestBitsRx, mscLpIlsFwdrLtFbIpH=mscLpIlsFwdrLtFbIpH, mscLpFiLtFbMacTr=mscLpFiLtFbMacTr, mscLpEth100LtFbAppleH=mscLpEth100LtFbAppleH, mscLpFiTest=mscLpFiTest, mscLpEth100LtFbDataTopEntry=mscLpEth100LtFbDataTopEntry, mscLpIlsFwdr=mscLpIlsFwdr, mscLpTrRingOpenStatus=mscLpTrRingOpenStatus, mscLaFramerProvTable=mscLaFramerProvTable, mscLpFiLtFbLlchTopEntry=mscLpFiLtFbLlchTopEntry, mscLpIlsFwdrTestDuration=mscLpIlsFwdrTestDuration, mscLpIlsFwdrLtFbTxInfoRowStatus=mscLpIlsFwdrLtFbTxInfoRowStatus, mscLpFiLtPrtCfgRowStatus=mscLpFiLtPrtCfgRowStatus, mscLpFiTestTimeRemaining=mscLpFiTestTimeRemaining, mscLpIlsFwdrLtFbTxInfoIndex=mscLpIlsFwdrLtFbTxInfoIndex, mscLpEnetLtFrmCpyRowStatusTable=mscLpEnetLtFrmCpyRowStatusTable, mscLpIlsFwdrRowStatusTable=mscLpIlsFwdrRowStatusTable, mscLpEth100LtTData=mscLpEth100LtTData, mscLpEth100LtPrtCfgRowStatus=mscLpEth100LtPrtCfgRowStatus, mscLaIndex=mscLaIndex, mscLpEth100LtFbIpxHRowStatus=mscLpEth100LtFbIpxHRowStatus, mscLpTrNcUpStream=mscLpTrNcUpStream, mscLpEnetTestIndex=mscLpEnetTestIndex, mscLpTrTestDuration=mscLpTrTestDuration, mscLpIlsFwdrLtCntlComponentName=mscLpIlsFwdrLtCntlComponentName, mscLaRowStatusEntry=mscLaRowStatusEntry, mscLpFiTestErroredFrmRx=mscLpFiTestErroredFrmRx, mscLpTrLineErrors=mscLpTrLineErrors, mscLpFiOldUpstreamNeighbor=mscLpFiOldUpstreamNeighbor, mscLpFiLtCntlRowStatusEntry=mscLpFiLtCntlRowStatusEntry, mscLpTrLtFbIpHComponentName=mscLpTrLtFbIpHComponentName, mscLpFiTestComponentName=mscLpFiTestComponentName, mscLpEnetLtFbAppleHIndex=mscLpEnetLtFbAppleHIndex, mscLpIlsFwdrLtFbAppleHRowStatusTable=mscLpIlsFwdrLtFbAppleHRowStatusTable, mscLpEth100ProvTable=mscLpEth100ProvTable, mscLpEth100AutoNegotiation=mscLpEth100AutoNegotiation, mscLpEnetLtFbMacTrStorageType=mscLpEnetLtFbMacTrStorageType, mscLpIlsFwdrLtFbStorageType=mscLpIlsFwdrLtFbStorageType, mscLpEnetLtFb=mscLpEnetLtFb, mscLpTrLtFbMacTrStorageType=mscLpTrLtFbMacTrStorageType, mscLpFiSmtProvTable=mscLpFiSmtProvTable, mscLpIlsFwdrLtFbMacEnetStorageType=mscLpIlsFwdrLtFbMacEnetStorageType, mscLpEnetLtFrmCpyTData=mscLpEnetLtFrmCpyTData, mscLpIlsFwdrLtFbAppleH=mscLpIlsFwdrLtFbAppleH, mscLpTrLtCntlRowStatusEntry=mscLpTrLtCntlRowStatusEntry, mscLpFiVersion=mscLpFiVersion, mscLpFiLtFbRowStatusEntry=mscLpFiLtFbRowStatusEntry, mscLpEnetLtFbFddiMacComponentName=mscLpEnetLtFbFddiMacComponentName, mscLpEnetLtFbMacTrTopTable=mscLpEnetLtFbMacTrTopTable, mscLaFramerInterfaceNamesEntry=mscLaFramerInterfaceNamesEntry, mscLpTrLtFbMacEnetIndex=mscLpTrLtFbMacEnetIndex, mscLpEnetLtFbIpHRowStatusEntry=mscLpEnetLtFbIpHRowStatusEntry, mscLpEnetLtFbLlch=mscLpEnetLtFbLlch, mscLpEth100LtFrmCmpRowStatusTable=mscLpEth100LtFrmCmpRowStatusTable, mscLpEnetLtFbMacTrIndex=mscLpEnetLtFbMacTrIndex, mscLpEnetLtFbIpHRowStatus=mscLpEnetLtFbIpHRowStatus, mscLpEth100LtFbDataRowStatus=mscLpEth100LtFbDataRowStatus, mscLpFiLtRowStatusTable=mscLpFiLtRowStatusTable, mscLpEnetLtFbMacEnetRowStatusTable=mscLpEnetLtFbMacEnetRowStatusTable, mscLpFiLtFbFddiMacRowStatus=mscLpFiLtFbFddiMacRowStatus, mscLpFiMacCOperEntry=mscLpFiMacCOperEntry, mscLpFiCidDataEntry=mscLpFiCidDataEntry, mscLpEth100IfAdminStatus=mscLpEth100IfAdminStatus, mscLpEnetLtFbLlchComponentName=mscLpEnetLtFbLlchComponentName, mscLpFiLtFbRowStatus=mscLpFiLtFbRowStatus, mscLpFiRowStatusTable=mscLpFiRowStatusTable, mscLpIlsFwdrLtFbMacEnetRowStatusTable=mscLpIlsFwdrLtFbMacEnetRowStatusTable, mscLpTrStatsTable=mscLpTrStatsTable, mscLpTrLtFbDataStorageType=mscLpTrLtFbDataStorageType, mscLpTrTestElapsedTime=mscLpTrTestElapsedTime, mscLpIlsFwdrLtCntlTopEntry=mscLpIlsFwdrLtCntlTopEntry, mscLpIlsFwdrLtFrmCmp=mscLpIlsFwdrLtFrmCmp, mscLpEth100LtFbIpHRowStatusEntry=mscLpEth100LtFbIpHRowStatusEntry, mscLpEnetLtFbMacEnetTopEntry=mscLpEnetLtFbMacEnetTopEntry, mscLaCustomerIdentifier=mscLaCustomerIdentifier, mscLpEth100LtFbTxInfoTopEntry=mscLpEth100LtFbTxInfoTopEntry, mscLpFiCustomerIdentifier=mscLpFiCustomerIdentifier, mscLpTrLtFbLlchRowStatusEntry=mscLpTrLtFbLlchRowStatusEntry, mscLpFiTestResultsEntry=mscLpFiTestResultsEntry, mscLpEnetOperStatusEntry=mscLpEnetOperStatusEntry, mscLpFiCopiedCounts=mscLpFiCopiedCounts, mscLpEth100LtFrmCmpIndex=mscLpEth100LtFrmCmpIndex, mscLpIlsFwdrLtFbLlchTData=mscLpIlsFwdrLtFbLlchTData, mscLpFi=mscLpFi, mscLpEnetLtFbIpHTopTable=mscLpEnetLtFbIpHTopTable, mscLpIlsFwdrLtPrtCfgStorageType=mscLpIlsFwdrLtPrtCfgStorageType, mscLpTrInternalErrors=mscLpTrInternalErrors)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-LanDriversMIB", mscLpIlsFwdrRowStatus=mscLpIlsFwdrRowStatus, mscLpEnetLtTopTable=mscLpEnetLtTopTable, mscLpIlsFwdrLtFbTxInfoComponentName=mscLpIlsFwdrLtFbTxInfoComponentName, mscLpEth100TestFrmSize=mscLpEth100TestFrmSize, mscLpEnetTestElapsedTime=mscLpEnetTestElapsedTime, mscLpTrLtPrtCfgComponentName=mscLpTrLtPrtCfgComponentName, mscLpEnetAdminInfoEntry=mscLpEnetAdminInfoEntry, mscLpEnetLtFbMacTrTData=mscLpEnetLtFbMacTrTData, mscLpTrRemoveRings=mscLpTrRemoveRings, mscLpTrSingleStation=mscLpTrSingleStation, mscLpTrLtFb=mscLpTrLtFb, mscLpTrLtFbDataRowStatusTable=mscLpTrLtFbDataRowStatusTable, mscLpIlsFwdrLtFbLlchRowStatus=mscLpIlsFwdrLtFbLlchRowStatus, mscLpFiAdminInfoEntry=mscLpFiAdminInfoEntry, mscLpEth100StorageType=mscLpEth100StorageType, mscLpEth100StatsTable=mscLpEth100StatsTable, mscLpFiLtCntlIndex=mscLpFiLtCntlIndex, mscLpFiLtFrmCmpComponentName=mscLpFiLtFrmCmpComponentName, mscLpEth100TestResultsEntry=mscLpEth100TestResultsEntry, mscLpTrLtFbIpxH=mscLpTrLtFbIpxH, mscLpEth100LtFrmCmpTopEntry=mscLpEth100LtFrmCmpTopEntry, mscLpIlsFwdrLtFbIpHRowStatusTable=mscLpIlsFwdrLtFbIpHRowStatusTable, mscLpEnetLtFbIpxHStorageType=mscLpEnetLtFbIpxHStorageType, mscLaFramerInterfaceName=mscLaFramerInterfaceName, mscLpFiLtFbIpHRowStatusEntry=mscLpFiLtFbIpHRowStatusEntry, mscLpEnetStateTable=mscLpEnetStateTable, mscLpFiLtFbIpH=mscLpFiLtFbIpH, mscLpFiLtFbTxInfoTopEntry=mscLpFiLtFbTxInfoTopEntry, mscLpFiPhyNeighborType=mscLpFiPhyNeighborType, mscLpFiRowStatusEntry=mscLpFiRowStatusEntry, mscLpFiRingOpCounts=mscLpFiRingOpCounts, mscLpTrOperEntry=mscLpTrOperEntry, mscLpIlsFwdrStateTable=mscLpIlsFwdrStateTable, mscLpIlsFwdrLtFbData=mscLpIlsFwdrLtFbData, mscLpFiPhyLemRejectCounts=mscLpFiPhyLemRejectCounts, mscLpEth100=mscLpEth100, mscLpIlsFwdrLt=mscLpIlsFwdrLt, mscLaRowStatus=mscLaRowStatus, mscLpFiLtPrtCfgTopTable=mscLpFiLtPrtCfgTopTable, mscLpEnetLtFbTxInfoRowStatus=mscLpEnetLtFbTxInfoRowStatus, mscLpEth100LtFbAppleHTData=mscLpEth100LtFbAppleHTData, mscLpTrSignalLoss=mscLpTrSignalLoss, mscLpTrLtFbIpxHTData=mscLpTrLtFbIpxHTData, mscLpFiPhyFddiPhyTypeIndex=mscLpFiPhyFddiPhyTypeIndex, mscLpTrAdminState=mscLpTrAdminState, mscLpIlsFwdrLtCntlRowStatusTable=mscLpIlsFwdrLtCntlRowStatusTable, mscLpEnetLtFbIpHTopEntry=mscLpEnetLtFbIpHTopEntry, mscLpEth100LateCollisions=mscLpEth100LateCollisions, mscLpTrLtRowStatusEntry=mscLpTrLtRowStatusEntry, mscLpEth100RowStatusTable=mscLpEth100RowStatusTable, mscLpTrLtFbMacEnetRowStatusTable=mscLpTrLtFbMacEnetRowStatusTable, mscLpIlsFwdrLtFrmCpyStorageType=mscLpIlsFwdrLtFrmCpyStorageType, mscLpEnetTestRowStatusTable=mscLpEnetTestRowStatusTable, mscLpFiLtFbAppleHTopTable=mscLpFiLtFbAppleHTopTable, mscLpTrLtFbLlchTData=mscLpTrLtFbLlchTData, mscLpEth100OctetsReceivedOk=mscLpEth100OctetsReceivedOk, mscLpTrLtFrmCpyComponentName=mscLpTrLtFrmCpyComponentName, mscLpEnetLtCntlStorageType=mscLpEnetLtCntlStorageType, mscLpTrLtFbAppleHRowStatusEntry=mscLpTrLtFbAppleHRowStatusEntry, mscLpEnetLtFrmCpyRowStatus=mscLpEnetLtFrmCpyRowStatus, mscLpFiCommentText=mscLpFiCommentText, lanDriversGroupCA02=lanDriversGroupCA02, mscLpFiMacProvTable=mscLpFiMacProvTable, mscLpIlsFwdrLinkToTrafficSourceValue=mscLpIlsFwdrLinkToTrafficSourceValue, mscLaIfAdminStatus=mscLaIfAdminStatus, mscLaIfIndex=mscLaIfIndex, mscLpTrLtCntlRowStatus=mscLpTrLtCntlRowStatus, mscLpEnetTest=mscLpEnetTest, mscLpEnetLtFrmCpyTopEntry=mscLpEnetLtFrmCpyTopEntry, mscLpEnetHeartbeatPacket=mscLpEnetHeartbeatPacket, mscLpFiLtFbTxInfoRowStatusTable=mscLpFiLtFbTxInfoRowStatusTable, mscLpIlsFwdrIfAdminStatus=mscLpIlsFwdrIfAdminStatus, mscLpEnetRowStatus=mscLpEnetRowStatus, mscLpEth100CustomerIdentifier=mscLpEth100CustomerIdentifier, mscLpEnetTestPTOTable=mscLpEnetTestPTOTable, mscLpIlsFwdrLtCntlStorageType=mscLpIlsFwdrLtCntlStorageType, mscLpEth100LtFrmCmpRowStatus=mscLpEth100LtFrmCmpRowStatus, mscLpFiTestCauseOfTermination=mscLpFiTestCauseOfTermination, mscLpIlsFwdrLtFrmCpyTopTable=mscLpIlsFwdrLtFrmCpyTopTable, mscLpTrLtFbAppleHRowStatusTable=mscLpTrLtFbAppleHRowStatusTable, mscLpTrLtFbMacTr=mscLpTrLtFbMacTr, mscLpEth100OperationalState=mscLpEth100OperationalState, mscLpEth100LtFbComponentName=mscLpEth100LtFbComponentName, mscLpFiLtRowStatusEntry=mscLpFiLtRowStatusEntry, mscLpTrLtTopTable=mscLpTrLtTopTable, mscLpTrTestFrmSize=mscLpTrTestFrmSize, mscLpIlsFwdrLtPrtCfg=mscLpIlsFwdrLtPrtCfg, mscLpFiMacOperEntry=mscLpFiMacOperEntry, mscLpEnetSqeTestErrors=mscLpEnetSqeTestErrors, mscLpFiTestFrmTx=mscLpFiTestFrmTx, mscLpFiTestRowStatusTable=mscLpFiTestRowStatusTable, mscLpTrLtFbIpxHTopEntry=mscLpTrLtFbIpxHTopEntry, mscLpEth100LtFbIpxHTData=mscLpEth100LtFbIpxHTData, mscLpEnetLtPrtCfgRowStatusEntry=mscLpEnetLtPrtCfgRowStatusEntry, mscLpEth100UsageState=mscLpEth100UsageState, mscLpEth100LtFrmCmpTData=mscLpEth100LtFrmCmpTData, mscLaFramerIndex=mscLaFramerIndex, mscLpFiPhyOperTable=mscLpFiPhyOperTable, mscLaFramerInterfaceNamesRowStatus=mscLaFramerInterfaceNamesRowStatus, mscLpEth100LtFbMacTrRowStatusTable=mscLpEth100LtFbMacTrRowStatusTable, mscLpTrLtFbTxInfo=mscLpTrLtFbTxInfo, mscLpTrLtFbIpxHStorageType=mscLpTrLtFbIpxHStorageType, mscLpTrOperStatusEntry=mscLpTrOperStatusEntry, mscLpIlsFwdrLtFbMacEnetIndex=mscLpIlsFwdrLtFbMacEnetIndex, mscLpTrLtFbFddiMacTopTable=mscLpTrLtFbFddiMacTopTable, mscLpFiLtCntlTData=mscLpFiLtCntlTData, mscLpTrLtFbTxInfoTopEntry=mscLpTrLtFbTxInfoTopEntry, mscLpFiLtFb=mscLpFiLtFb, mscLpFiLtFbDataRowStatusTable=mscLpFiLtFbDataRowStatusTable, mscLpFiLtFbIpxH=mscLpFiLtFbIpxH, mscLpFiPhySignalBitsRcvd=mscLpFiPhySignalBitsRcvd, mscLpTrLtFrmCmpTopEntry=mscLpTrLtFrmCmpTopEntry, mscLpEth100LtFbAppleHComponentName=mscLpEth100LtFbAppleHComponentName, mscLpFiLtFbIpxHRowStatusTable=mscLpFiLtFbIpxHRowStatusTable, mscLpTrLtFbAppleHComponentName=mscLpTrLtFbAppleHComponentName, mscLpEnetLtFbMacEnetTData=mscLpEnetLtFbMacEnetTData, mscLpFiLtFbMacTrIndex=mscLpFiLtFbMacTrIndex, mscLpTrLtFbTxInfoStorageType=mscLpTrLtFbTxInfoStorageType, mscLpEth100SingleCollisionFrames=mscLpEth100SingleCollisionFrames, mscLpIlsFwdrLtCntlRowStatus=mscLpIlsFwdrLtCntlRowStatus, mscLpEnetTestType=mscLpEnetTestType, mscLpEth100MacTransmitErrors=mscLpEth100MacTransmitErrors, mscLpTrLtFrmCmpStorageType=mscLpTrLtFrmCmpStorageType, mscLpTrLtComponentName=mscLpTrLtComponentName, mscLpFiLtFrmCmpIndex=mscLpFiLtFrmCmpIndex, mscLpFiLtFrmCpyTData=mscLpFiLtFrmCpyTData, mscLpFiPhySignalBitsTxmt=mscLpFiPhySignalBitsTxmt, mscLpEth100LtCntlRowStatusTable=mscLpEth100LtCntlRowStatusTable, mscLpFiIfEntryTable=mscLpFiIfEntryTable, mscLpIlsFwdrLtFbIpHRowStatusEntry=mscLpIlsFwdrLtFbIpHRowStatusEntry, mscLpFiSnmpOperStatus=mscLpFiSnmpOperStatus, mscLpTrLtFbIpH=mscLpTrLtFbIpH, mscLpIlsFwdrLtFbIpHTopEntry=mscLpIlsFwdrLtFbIpHTopEntry, mscLpEth100LtFbTxInfoStorageType=mscLpEth100LtFbTxInfoStorageType, mscLpIlsFwdrLtFbTxInfoTopTable=mscLpIlsFwdrLtFbTxInfoTopTable, mscLpEnetMacAddress=mscLpEnetMacAddress, mscLpEth100LtFbDataStorageType=mscLpEth100LtFbDataStorageType, mscLpEnetLtFbTxInfoComponentName=mscLpEnetLtFbTxInfoComponentName, mscLpFiLtFbFddiMacIndex=mscLpFiLtFbFddiMacIndex, mscLpEth100LtFb=mscLpEth100LtFb, mscLpFiOperStatusEntry=mscLpFiOperStatusEntry, mscLpIlsFwdrLtFbRowStatusTable=mscLpIlsFwdrLtFbRowStatusTable, mscLpTrLtFbFddiMacRowStatus=mscLpTrLtFbFddiMacRowStatus, mscLpTrLtFbIpxHRowStatusTable=mscLpTrLtFbIpxHRowStatusTable, mscLpIlsFwdrLtFbAppleHTopEntry=mscLpIlsFwdrLtFbAppleHTopEntry, mscLpTrLtFbFddiMacTopEntry=mscLpTrLtFbFddiMacTopEntry, mscLpEnetCidDataEntry=mscLpEnetCidDataEntry, mscLpEnetStatsTable=mscLpEnetStatsTable, mscLpFiLtFbMacTrRowStatusEntry=mscLpFiLtFbMacTrRowStatusEntry, mscLpFiLtIndex=mscLpFiLtIndex, mscLpTrLtFbMacTrRowStatus=mscLpTrLtFbMacTrRowStatus, mscLpIlsFwdrLtFbIpxHRowStatusTable=mscLpIlsFwdrLtFbIpxHRowStatusTable, mscLpIlsFwdrLtFbMacEnetTopTable=mscLpIlsFwdrLtFbMacEnetTopTable, mscLpFiLtFbFddiMacTopTable=mscLpFiLtFbFddiMacTopTable, mscLpEth100LtFbIpHRowStatusTable=mscLpEth100LtFbIpHRowStatusTable, mscLpFiNcDownstreamNeighbor=mscLpFiNcDownstreamNeighbor, mscLpIlsFwdrLtCntl=mscLpIlsFwdrLtCntl, mscLpEth100LtFbFddiMacRowStatusEntry=mscLpEth100LtFbFddiMacRowStatusEntry, mscLpEth100StatsEntry=mscLpEth100StatsEntry, mscLpEnetLtFbDataComponentName=mscLpEnetLtFbDataComponentName, mscLpEnetLtFbComponentName=mscLpEnetLtFbComponentName, mscLpFiLtFbAppleHRowStatusEntry=mscLpFiLtFbAppleHRowStatusEntry, mscLpIlsFwdrLtFbMacEnetComponentName=mscLpIlsFwdrLtFbMacEnetComponentName, mscLpEth100FramesReceivedOk=mscLpEth100FramesReceivedOk, mscLpTrLtFbMacEnetRowStatusEntry=mscLpTrLtFbMacEnetRowStatusEntry, mscLpTrLtFrmCpyTopEntry=mscLpTrLtFrmCpyTopEntry, mscLpEth100LtFbFddiMac=mscLpEth100LtFbFddiMac, mscLpFiLtFbTxInfoTopTable=mscLpFiLtFbTxInfoTopTable, mscLpFiLtPrtCfg=mscLpFiLtPrtCfg, mscLpFiLtFbDataRowStatus=mscLpFiLtFbDataRowStatus, mscLpEnetLtFrmCmpRowStatusTable=mscLpEnetLtFrmCmpRowStatusTable, mscLpFiLtFbFddiMacComponentName=mscLpFiLtFbFddiMacComponentName, mscLpFiPhyLinkErrorMonitor=mscLpFiPhyLinkErrorMonitor, mscLpTrAbortTransErrors=mscLpTrAbortTransErrors, mscLpTrLtFbStorageType=mscLpTrLtFbStorageType, mscLpEnetLtFbFddiMac=mscLpEnetLtFbFddiMac, mscLpIlsFwdrLtCntlIndex=mscLpIlsFwdrLtCntlIndex, mscLpEnetLtFrmCmpComponentName=mscLpEnetLtFrmCmpComponentName, mscLpFiNotCopiedCounts=mscLpFiNotCopiedCounts, mscLpFiTokenNegotiatedTimer=mscLpFiTokenNegotiatedTimer, mscLpIlsFwdrLtCntlTopTable=mscLpIlsFwdrLtCntlTopTable, mscLpEth100LtCntlRowStatus=mscLpEth100LtCntlRowStatus, mscLpFiLtFbFddiMacRowStatusTable=mscLpFiLtFbFddiMacRowStatusTable, mscLpEth100TestStorageType=mscLpEth100TestStorageType, mscLpTrLtFbTxInfoRowStatus=mscLpTrLtFbTxInfoRowStatus, mscLpIlsFwdrLtFrmCpy=mscLpIlsFwdrLtFrmCpy, mscLpEnetLtFbFddiMacTopTable=mscLpEnetLtFbFddiMacTopTable, mscLpFiPhyLerFlag=mscLpFiPhyLerFlag, mscLpFiLtFbLlchRowStatusEntry=mscLpFiLtFbLlchRowStatusEntry, mscLpEnetLtFrmCmp=mscLpEnetLtFrmCmp, mscLpFiTestIndex=mscLpFiTestIndex, mscLpTrStorageType=mscLpTrStorageType, mscLpTrLostFrameErrors=mscLpTrLostFrameErrors, mscLpEnetLtFrmCmpTData=mscLpEnetLtFrmCmpTData, mscLpEnetLtPrtCfg=mscLpEnetLtPrtCfg, mscLpTrLtFbIpHTData=mscLpTrLtFbIpHTData, mscLpIlsFwdrLtFbDataComponentName=mscLpIlsFwdrLtFbDataComponentName, mscLpEth100IfEntryTable=mscLpEth100IfEntryTable, mscLpEth100SqeTestErrors=mscLpEth100SqeTestErrors, mscLpEnetLtPrtCfgStorageType=mscLpEnetLtPrtCfgStorageType, mscLpFiLtCntlTopEntry=mscLpFiLtCntlTopEntry, mscLpEth100LtFbFddiMacTData=mscLpEth100LtFbFddiMacTData, mscLpTrLtFrmCpyStorageType=mscLpTrLtFrmCpyStorageType, mscLpTrOperationalState=mscLpTrOperationalState, mscLpFiLtFbIpHStorageType=mscLpFiLtFbIpHStorageType, mscLpFiLtFbRowStatusTable=mscLpFiLtFbRowStatusTable, mscLpIlsFwdrLtFbLlchTopTable=mscLpIlsFwdrLtFbLlchTopTable, mscLpFiPhy=mscLpFiPhy, mscLpEnetTestDuration=mscLpEnetTestDuration, mscLpIlsFwdrLtFbMacTrTData=mscLpIlsFwdrLtFbMacTrTData, mscLpTrStateEntry=mscLpTrStateEntry, mscLpIlsFwdrLtFbRowStatus=mscLpIlsFwdrLtFbRowStatus, mscLpEnetAdminState=mscLpEnetAdminState, mscLpEnetLtFbTxInfoTopTable=mscLpEnetLtFbTxInfoTopTable, mscLpEnetLtFbIpxHIndex=mscLpEnetLtFbIpxHIndex, mscLpTrLtPrtCfgStorageType=mscLpTrLtPrtCfgStorageType, mscLpIlsFwdrLtFbIndex=mscLpIlsFwdrLtFbIndex, mscLaCidDataTable=mscLaCidDataTable, mscLpIlsFwdrLtFrmCpyTopEntry=mscLpIlsFwdrLtFrmCpyTopEntry, mscLpEnetLtFbLlchRowStatusEntry=mscLpEnetLtFbLlchRowStatusEntry, mscLpFiLtRowStatus=mscLpFiLtRowStatus, mscLpFiTestBitsTx=mscLpFiTestBitsTx, mscLpIlsFwdrLtFbLlchIndex=mscLpIlsFwdrLtFbLlchIndex, mscLpTrLtFbFddiMacRowStatusEntry=mscLpTrLtFbFddiMacRowStatusEntry, mscLpIlsFwdrLtFbIpHTopTable=mscLpIlsFwdrLtFbIpHTopTable, mscLpEnetProvEntry=mscLpEnetProvEntry, mscLpEnetLtFbRowStatus=mscLpEnetLtFbRowStatus, mscLpTrTestBitsTx=mscLpTrTestBitsTx, mscLpEth100LtFbAppleHRowStatusEntry=mscLpEth100LtFbAppleHRowStatusEntry, mscLpEth100LtFbIpxHTopEntry=mscLpEth100LtFbIpxHTopEntry, mscLpEnetLtFbIpHTData=mscLpEnetLtFbIpHTData, mscLpFiTestPTOTable=mscLpFiTestPTOTable, mscLpEnetProvTable=mscLpEnetProvTable, mscLpTrIndex=mscLpTrIndex, mscLpEth100LtFrmCmpStorageType=mscLpEth100LtFrmCmpStorageType, mscLpFiTestType=mscLpFiTestType, mscLpTrChipSet=mscLpTrChipSet, mscLpFiLtCntlComponentName=mscLpFiLtCntlComponentName, mscLpFiLtStorageType=mscLpFiLtStorageType, mscLpIlsFwdrLtFrmCmpRowStatusEntry=mscLpIlsFwdrLtFrmCmpRowStatusEntry, mscLpEth100LtRowStatus=mscLpEth100LtRowStatus, mscLpEth100LineSpeed=mscLpEth100LineSpeed, mscLpFiLtFrmCpy=mscLpFiLtFrmCpy, mscLpFiLtFbAppleHRowStatusTable=mscLpFiLtFbAppleHRowStatusTable, mscLpTrLtFbAppleHRowStatus=mscLpTrLtFbAppleHRowStatus, mscLpTrRingStatus=mscLpTrRingStatus, mscLpEth100AdminState=mscLpEth100AdminState, mscLpEth100LtFbMacTrTopTable=mscLpEth100LtFbMacTrTopTable, mscLpIlsFwdrLtFbIpxHRowStatusEntry=mscLpIlsFwdrLtFbIpxHRowStatusEntry, mscLpTrTestType=mscLpTrTestType, mscLpEnetLtFbIpHStorageType=mscLpEnetLtFbIpHStorageType, mscLpIlsFwdrIfEntryEntry=mscLpIlsFwdrIfEntryEntry, mscLaAdminState=mscLaAdminState, mscLpFiLtFrmCmpRowStatusEntry=mscLpFiLtFrmCmpRowStatusEntry)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-LanDriversMIB", mscLpFiAcceptAa=mscLpFiAcceptAa, mscLpEnetLtFbLlchStorageType=mscLpEnetLtFbLlchStorageType, mscLpEnetLtFbMacTrRowStatus=mscLpEnetLtFbMacTrRowStatus, mscLpFiLtFbDataIndex=mscLpFiLtFbDataIndex, mscLpIlsFwdrTestType=mscLpIlsFwdrTestType, mscLpTrLtCntlComponentName=mscLpTrLtCntlComponentName, mscLpEnetLtFbMacEnet=mscLpEnetLtFbMacEnet, mscLpIlsFwdrLtFbIpxH=mscLpIlsFwdrLtFbIpxH, mscLpEth100LtTopTable=mscLpEth100LtTopTable, mscLpFiTokenCounts=mscLpFiTokenCounts, mscLpEth100UndersizeFrames=mscLpEth100UndersizeFrames, mscLaFramerStorageType=mscLaFramerStorageType, mscLpFiTokenRequestTimer=mscLpFiTokenRequestTimer, mscLpFiLtFrmCpyIndex=mscLpFiLtFrmCpyIndex, mscLpTrLtFbTopTable=mscLpTrLtFbTopTable, mscLpIlsFwdrLtFrmCmpTopEntry=mscLpIlsFwdrLtFrmCmpTopEntry, mscLpFiLtFbDataRowStatusEntry=mscLpFiLtFbDataRowStatusEntry, mscLpTrFreqErrors=mscLpTrFreqErrors, mscLpTrLtFrmCmpIndex=mscLpTrLtFrmCmpIndex, mscLpIlsFwdrLtFbAppleHRowStatusEntry=mscLpIlsFwdrLtFbAppleHRowStatusEntry, mscLpEnetLtFbMacEnetRowStatusEntry=mscLpEnetLtFbMacEnetRowStatusEntry, mscLpIlsFwdrLtFbFddiMacTopTable=mscLpIlsFwdrLtFbFddiMacTopTable, mscLaComponentName=mscLaComponentName, mscLpEnetLtFbLlchTopTable=mscLpEnetLtFbLlchTopTable, mscLpFiPhyOperEntry=mscLpFiPhyOperEntry, mscLpEth100LtPrtCfgRowStatusTable=mscLpEth100LtPrtCfgRowStatusTable, mscLpTrLtFbDataTopTable=mscLpTrLtFbDataTopTable, mscLpEnetLtFbTData=mscLpEnetLtFbTData, mscLpFiLtPrtCfgRowStatusTable=mscLpFiLtPrtCfgRowStatusTable, mscLpTrOperTable=mscLpTrOperTable, mscLpEnetTestTimeRemaining=mscLpEnetTestTimeRemaining, mscLpTrLtFbMacTrTopEntry=mscLpTrLtFbMacTrTopEntry, mscLpEth100LtFbMacEnetIndex=mscLpEth100LtFbMacEnetIndex, mscLpFiLtFbMacEnetComponentName=mscLpFiLtFbMacEnetComponentName, mscLpFiLtFbIpxHIndex=mscLpFiLtFbIpxHIndex, mscLpEnetLtFbFddiMacRowStatusEntry=mscLpEnetLtFbFddiMacRowStatusEntry, mscLpTrReceiveCongestions=mscLpTrReceiveCongestions, mscLpTrLtPrtCfgTData=mscLpTrLtPrtCfgTData, mscLpEth100LtRowStatusTable=mscLpEth100LtRowStatusTable, mscLpEth100LtFbAppleHRowStatus=mscLpEth100LtFbAppleHRowStatus, mscLpIlsFwdrLtFbFddiMacRowStatusTable=mscLpIlsFwdrLtFbFddiMacRowStatusTable, mscLpTrLtPrtCfgRowStatusTable=mscLpTrLtPrtCfgRowStatusTable, mscLpTrLtFrmCmpTData=mscLpTrLtFrmCmpTData, mscLpEth100TestDuration=mscLpEth100TestDuration, mscLpEth100ReceivedOctetsIntoRouterBr=mscLpEth100ReceivedOctetsIntoRouterBr, mscLpTrApplicationFramerName=mscLpTrApplicationFramerName, mscLpFiLtFbTxInfo=mscLpFiLtFbTxInfo, mscLpTrLtFbFddiMacStorageType=mscLpTrLtFbFddiMacStorageType, mscLpEnetOperEntry=mscLpEnetOperEntry, mscLpEnetTestResultsTable=mscLpEnetTestResultsTable, mscLpEnetStatsEntry=mscLpEnetStatsEntry, mscLpTrTest=mscLpTrTest, mscLpIlsFwdrLtFbIpHRowStatus=mscLpIlsFwdrLtFbIpHRowStatus, mscLpEth100Eth100StatsTable=mscLpEth100Eth100StatsTable, mscLpEth100FrameTooLongs=mscLpEth100FrameTooLongs, mscLpFiLostCounts=mscLpFiLostCounts, mscLpEth100LtFbFddiMacTopTable=mscLpEth100LtFbFddiMacTopTable, mscLpEth100Index=mscLpEth100Index, mscLpTrIfIndex=mscLpTrIfIndex, mscLpTrLtFrmCpyRowStatusTable=mscLpTrLtFrmCpyRowStatusTable, mscLpEnetLtFbDataRowStatusEntry=mscLpEnetLtFbDataRowStatusEntry, mscLpFiOldDownstreamNeighbor=mscLpFiOldDownstreamNeighbor, mscLpFiTransmitCounts=mscLpFiTransmitCounts, mscLpEnetLtFrmCpyIndex=mscLpEnetLtFrmCpyIndex, mscLpIlsFwdrLtFbMacTrStorageType=mscLpIlsFwdrLtFbMacTrStorageType, mscLpIlsFwdrLtFrmCmpComponentName=mscLpIlsFwdrLtFrmCmpComponentName, mscLpFiDownstreamNeighbor=mscLpFiDownstreamNeighbor, mscLpEnetLtCntl=mscLpEnetLtCntl, mscLpFiLtFbAppleHTData=mscLpFiLtFbAppleHTData, mscLpIlsFwdrLtFrmCmpRowStatusTable=mscLpIlsFwdrLtFrmCmpRowStatusTable, mscLpEnetLtFbAppleHRowStatusEntry=mscLpEnetLtFbAppleHRowStatusEntry, mscLpFiPhyRowStatusEntry=mscLpFiPhyRowStatusEntry, mscLpEth100LtFbAppleHTopTable=mscLpEth100LtFbAppleHTopTable, lanDriversCapabilitiesCA02A=lanDriversCapabilitiesCA02A, mscLpEth100Test=mscLpEth100Test, mscLpEnetRowStatusEntry=mscLpEnetRowStatusEntry, mscLpEth100LtFbIpxHTopTable=mscLpEth100LtFbIpxHTopTable, mscLaRowStatusTable=mscLaRowStatusTable, mscLpIlsFwdrLinkToTrafficSourceEntry=mscLpIlsFwdrLinkToTrafficSourceEntry, mscLpFiRowStatus=mscLpFiRowStatus, mscLpTrLtFrmCpyIndex=mscLpTrLtFrmCpyIndex, mscLpTrLtFbIpHTopTable=mscLpTrLtFbIpHTopTable, mscLpFiTraceMaxExpirationTimer=mscLpFiTraceMaxExpirationTimer, mscLpEnetLtFbDataRowStatus=mscLpEnetLtFbDataRowStatus, mscLpEnetLateCollisions=mscLpEnetLateCollisions, mscLpTrTestComponentName=mscLpTrTestComponentName, mscLpEnetStorageType=mscLpEnetStorageType, mscLpEnetLtFbRowStatusEntry=mscLpEnetLtFbRowStatusEntry, mscLpEth100ComponentName=mscLpEth100ComponentName, mscLpTrRingState=mscLpTrRingState, mscLpTrNcMacOperEntry=mscLpTrNcMacOperEntry, mscLpEth100TestErroredFrmRx=mscLpEth100TestErroredFrmRx, lanDriversCapabilitiesCA=lanDriversCapabilitiesCA, mscLpEnetLtFbAppleHTopTable=mscLpEnetLtFbAppleHTopTable, mscLpFiLtFbMacEnetTData=mscLpFiLtFbMacEnetTData, mscLpEnetTestErroredFrmRx=mscLpEnetTestErroredFrmRx, mscLpEnetLtCntlIndex=mscLpEnetLtCntlIndex, mscLpEth100LtFbMacEnetTopTable=mscLpEth100LtFbMacEnetTopTable, mscLpTrLtPrtCfgRowStatusEntry=mscLpTrLtPrtCfgRowStatusEntry, mscLpEth100TestRowStatusEntry=mscLpEth100TestRowStatusEntry, mscLpIlsFwdrLtFbTxInfoRowStatusEntry=mscLpIlsFwdrLtFbTxInfoRowStatusEntry, mscLpIlsFwdrLtFbTxInfoTopEntry=mscLpIlsFwdrLtFbTxInfoTopEntry, mscLpEnetLtFbAppleHTData=mscLpEnetLtFbAppleHTData, mscLpFiLtFbDataTData=mscLpFiLtFbDataTData, mscLpIlsFwdrOperationalState=mscLpIlsFwdrOperationalState, mscLpTrLtFbDataRowStatusEntry=mscLpTrLtFbDataRowStatusEntry, mscLpFiLtFbMacEnetRowStatus=mscLpFiLtFbMacEnetRowStatus, mscLpFiLtFbMacTrRowStatusTable=mscLpFiLtFbMacTrRowStatusTable, mscLpEnetLtFbIpxHTopEntry=mscLpEnetLtFbIpxHTopEntry, mscLpEnetLtComponentName=mscLpEnetLtComponentName, mscLpEth100LtFbLlchIndex=mscLpEth100LtFbLlchIndex, mscLpFiLtFbFddiMacTopEntry=mscLpFiLtFbFddiMacTopEntry, mscLpEth100LtFrmCpyStorageType=mscLpEth100LtFrmCpyStorageType, mscLpEnetTestRowStatus=mscLpEnetTestRowStatus, mscLpEth100LtFbAppleHTopEntry=mscLpEth100LtFbAppleHTopEntry, mscLpEth100TestRowStatus=mscLpEth100TestRowStatus, mscLpTrMonitorParticipate=mscLpTrMonitorParticipate, mscLpIlsFwdrLtFbDataTopEntry=mscLpIlsFwdrLtFbDataTopEntry, mscLaOperStatusTable=mscLaOperStatusTable, mscLpIlsFwdrTestPTOTable=mscLpIlsFwdrTestPTOTable, mscLpEth100IfIndex=mscLpEth100IfIndex, mscLpTrLtFbIpHTopEntry=mscLpTrLtFbIpHTopEntry, mscLpIlsFwdrLtFbMacTrComponentName=mscLpIlsFwdrLtFbMacTrComponentName, mscLpEth100FramesTransmittedOk=mscLpEth100FramesTransmittedOk, mscLpFiLtFbLlchIndex=mscLpFiLtFbLlchIndex, mscLpFiLtFbTopTable=mscLpFiLtFbTopTable, mscLpEnetTestComponentName=mscLpEnetTestComponentName, mscLpIlsFwdrLtFbAppleHStorageType=mscLpIlsFwdrLtFbAppleHStorageType, mscLpEnetCarrierSenseErrors=mscLpEnetCarrierSenseErrors, mscLpEnetLtFbFddiMacRowStatus=mscLpEnetLtFbFddiMacRowStatus, mscLpEnetLt=mscLpEnetLt, mscLpEnetTestStorageType=mscLpEnetTestStorageType, mscLpFiUpstreamNeighbor=mscLpFiUpstreamNeighbor, mscLpIlsFwdrRowStatusEntry=mscLpIlsFwdrRowStatusEntry, mscLpIlsFwdrTestStorageType=mscLpIlsFwdrTestStorageType, mscLpEth100LtFrmCpyIndex=mscLpEth100LtFrmCpyIndex, mscLpIlsFwdrTestFrmSize=mscLpIlsFwdrTestFrmSize, mscLpFiLtPrtCfgTopEntry=mscLpFiLtPrtCfgTopEntry, mscLpEth100LtFbLlchRowStatusEntry=mscLpEth100LtFbLlchRowStatusEntry, mscLpIlsFwdrErrorCount=mscLpIlsFwdrErrorCount, mscLpEth100LtFbMacEnetStorageType=mscLpEth100LtFbMacEnetStorageType, mscLpEnetLtFbTxInfoRowStatusTable=mscLpEnetLtFbTxInfoRowStatusTable, lanDriversMIB=lanDriversMIB, mscLpEnetLtFbTopTable=mscLpEnetLtFbTopTable, mscLpTrLtFbLlchComponentName=mscLpTrLtFbLlchComponentName, mscLpEth100LtFbDataTopTable=mscLpEth100LtFbDataTopTable, mscLpEth100LtFbIpH=mscLpEth100LtFbIpH, mscLpIlsFwdrLtFbAppleHComponentName=mscLpIlsFwdrLtFbAppleHComponentName, mscLpEth100StateEntry=mscLpEth100StateEntry, mscLpEth100LtCntlComponentName=mscLpEth100LtCntlComponentName, mscLpFiLtFbAppleHIndex=mscLpFiLtFbAppleHIndex, mscLpEnetLtFbAppleHComponentName=mscLpEnetLtFbAppleHComponentName, mscLpTrLtFrmCpyRowStatusEntry=mscLpTrLtFrmCpyRowStatusEntry, mscLpEth100ProvEntry=mscLpEth100ProvEntry, mscLpTrLtFbAppleHTopEntry=mscLpTrLtFbAppleHTopEntry, mscLpIlsFwdrLtFbIpHIndex=mscLpIlsFwdrLtFbIpHIndex, mscLpFiLtFrmCpyRowStatus=mscLpFiLtFrmCpyRowStatus, mscLpTrLtFbTxInfoComponentName=mscLpTrLtFbTxInfoComponentName, mscLpTrIfAdminStatus=mscLpTrIfAdminStatus, mscLpFiIfEntryEntry=mscLpFiIfEntryEntry, mscLpEth100LtFrmCpyTopEntry=mscLpEth100LtFrmCpyTopEntry, mscLpTrLtFrmCpy=mscLpTrLtFrmCpy, mscLpEth100LtPrtCfgIndex=mscLpEth100LtPrtCfgIndex, mscLpEnetLtTData=mscLpEnetLtTData, mscLpEnetTestFrmTx=mscLpEnetTestFrmTx, mscLpFiAcceptAs=mscLpFiAcceptAs, mscLpFiUserData=mscLpFiUserData, mscLpTrLtCntlIndex=mscLpTrLtCntlIndex, mscLpFiLtFbTxInfoRowStatusEntry=mscLpFiLtFbTxInfoRowStatusEntry, mscLpEth100LtTopEntry=mscLpEth100LtTopEntry, mscLpFiLtFbTxInfoRowStatus=mscLpFiLtFbTxInfoRowStatus, mscLpFiApplicationFramerName=mscLpFiApplicationFramerName, mscLpEth100AdminInfoEntry=mscLpEth100AdminInfoEntry, mscLpTrLtFbIpxHTopTable=mscLpTrLtFbIpxHTopTable, mscLpFiAdminInfoTable=mscLpFiAdminInfoTable, mscLpTrTestResultsTable=mscLpTrTestResultsTable, mscLpEth100Vendor=mscLpEth100Vendor, mscLpEnetLtFbDataStorageType=mscLpEnetLtFbDataStorageType, mscLpEnetTestPTOEntry=mscLpEnetTestPTOEntry, mscLpEth100LtFbLlchTopEntry=mscLpEth100LtFbLlchTopEntry, mscLpIlsFwdrLtRowStatusEntry=mscLpIlsFwdrLtRowStatusEntry, mscLpIlsFwdrLtFbFddiMac=mscLpIlsFwdrLtFbFddiMac, mscLpFiAdminState=mscLpFiAdminState, mscLpEth100LtFbIpHTData=mscLpEth100LtFbIpHTData, mscLpFiTestStorageType=mscLpFiTestStorageType, mscLpEth100LtFbAppleHIndex=mscLpEth100LtFbAppleHIndex, mscLpIlsFwdrLtFbLlchStorageType=mscLpIlsFwdrLtFbLlchStorageType, mscLpFiMacCOperTable=mscLpFiMacCOperTable, mscLpTrStatsEntry=mscLpTrStatsEntry, mscLpFiFrameErrorFlag=mscLpFiFrameErrorFlag, mscLpEth100LtPrtCfg=mscLpEth100LtPrtCfg, mscLpFiUsageState=mscLpFiUsageState, mscLpFiTestPTOEntry=mscLpFiTestPTOEntry, mscLpIlsFwdrTestBitsTx=mscLpIlsFwdrTestBitsTx, mscLpEth100LtFbIpxHRowStatusEntry=mscLpEth100LtFbIpxHRowStatusEntry, mscLpIlsFwdrLtFbIpHTData=mscLpIlsFwdrLtFbIpHTData, mscLpTrLtFbTopEntry=mscLpTrLtFbTopEntry, mscLpEth100LtFbAppleHStorageType=mscLpEth100LtFbAppleHStorageType, mscLpIlsFwdrLtPrtCfgRowStatusTable=mscLpIlsFwdrLtPrtCfgRowStatusTable, mscLpEth100TestCauseOfTermination=mscLpEth100TestCauseOfTermination, mscLpFiAcceptBm=mscLpFiAcceptBm, mscLpTrLtCntlTopTable=mscLpTrLtCntlTopTable, mscLpEth100LtFrmCmpRowStatusEntry=mscLpEth100LtFrmCmpRowStatusEntry, mscLpEth100TestPTOEntry=mscLpEth100TestPTOEntry, mscLpEnetCommentText=mscLpEnetCommentText, mscLpEnetLtCntlComponentName=mscLpEnetLtCntlComponentName, mscLpIlsFwdrTestRowStatus=mscLpIlsFwdrTestRowStatus, mscLpIlsFwdrTestResultsEntry=mscLpIlsFwdrTestResultsEntry, mscLpIlsFwdrLtTopEntry=mscLpIlsFwdrLtTopEntry, mscLpFiLtFbIpxHComponentName=mscLpFiLtFbIpxHComponentName, mscLaFramerRowStatusEntry=mscLaFramerRowStatusEntry, mscLpTrLtFrmCmp=mscLpTrLtFrmCmp, mscLpEnetLtPrtCfgTData=mscLpEnetLtPrtCfgTData, mscLpFiDupAddressTest=mscLpFiDupAddressTest, mscLpIlsFwdrOperStatusEntry=mscLpIlsFwdrOperStatusEntry, mscLpFiLtFbStorageType=mscLpFiLtFbStorageType, mscLpEnetLtCntlRowStatusTable=mscLpEnetLtCntlRowStatusTable, mscLpEnetLtFbFddiMacTData=mscLpEnetLtFbFddiMacTData, mscLaSnmpOperStatus=mscLaSnmpOperStatus, mscLpTrTestResultsEntry=mscLpTrTestResultsEntry, mscLpTrLtFbTxInfoIndex=mscLpTrLtFbTxInfoIndex, mscLpIlsFwdrLtFbMacEnetRowStatus=mscLpIlsFwdrLtFbMacEnetRowStatus, mscLpEnetSnmpOperStatus=mscLpEnetSnmpOperStatus, mscLpIlsFwdrLtFbFddiMacIndex=mscLpIlsFwdrLtFbFddiMacIndex, mscLpEth100MacReceiveErrors=mscLpEth100MacReceiveErrors, mscLpEnetOperTable=mscLpEnetOperTable, mscLpFiLtFbMacEnet=mscLpFiLtFbMacEnet, mscLpEth100AlignmentErrors=mscLpEth100AlignmentErrors, mscLpEth100LtPrtCfgRowStatusEntry=mscLpEth100LtPrtCfgRowStatusEntry, mscLaFramerProvEntry=mscLaFramerProvEntry, mscLpEnet=mscLpEnet, mscLpEnetTestFrmSize=mscLpEnetTestFrmSize, mscLpFiLtFbIpHComponentName=mscLpFiLtFbIpHComponentName, mscLpIlsFwdrStatsEntry=mscLpIlsFwdrStatsEntry, mscLpTrLtFbIpxHIndex=mscLpTrLtFbIpxHIndex, mscLpIlsFwdrTestIndex=mscLpIlsFwdrTestIndex, mscLpTrRowStatus=mscLpTrRowStatus, mscLpFiBypassPresent=mscLpFiBypassPresent, mscLpTrLtFbIpHRowStatusTable=mscLpTrLtFbIpHRowStatusTable, mscLpFiLtFbMacEnetTopEntry=mscLpFiLtFbMacEnetTopEntry, mscLpEth100TestElapsedTime=mscLpEth100TestElapsedTime, mscLpFiLtFbAppleH=mscLpFiLtFbAppleH, mscLpTrLtFbDataRowStatus=mscLpTrLtFbDataRowStatus, mscLpIlsFwdrTestElapsedTime=mscLpIlsFwdrTestElapsedTime, mscLpEth100TestResultsTable=mscLpEth100TestResultsTable, mscLpEnetIfEntryEntry=mscLpEnetIfEntryEntry, mscLpFiErrorCounts=mscLpFiErrorCounts, mscLpFiLtFbMacTrStorageType=mscLpFiLtFbMacTrStorageType, mscLpFiPhyProvEntry=mscLpFiPhyProvEntry, mscLpTrLtFbMacEnetTopEntry=mscLpTrLtFbMacEnetTopEntry, mscLpIlsFwdrLtFrmCpyRowStatusTable=mscLpIlsFwdrLtFrmCpyRowStatusTable, mscLpEnetLtFbTxInfoTData=mscLpEnetLtFbTxInfoTData, mscLpFiNcMacAddress=mscLpFiNcMacAddress, mscLpFiLtFrmCmpRowStatusTable=mscLpFiLtFrmCmpRowStatusTable)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-LanDriversMIB", mscLpEth100AdminInfoTable=mscLpEth100AdminInfoTable, mscLpEnetIndex=mscLpEnetIndex, mscLpTrLtPrtCfg=mscLpTrLtPrtCfg, mscLpEth100LtFbIpHTopEntry=mscLpEth100LtFbIpHTopEntry, mscLpEnetLtFrmCpy=mscLpEnetLtFrmCpy, mscLpFiTestBitsRx=mscLpFiTestBitsRx, mscLpTrTestTimeRemaining=mscLpTrTestTimeRemaining, mscLpIlsFwdrLtFbTopEntry=mscLpIlsFwdrLtFbTopEntry, mscLaFramer=mscLaFramer, mscLpTrStateTable=mscLpTrStateTable, mscLpIlsFwdrLtFbDataIndex=mscLpIlsFwdrLtFbDataIndex, mscLpTrLtFrmCmpComponentName=mscLpTrLtFrmCmpComponentName, mscLpEth100CommentText=mscLpEth100CommentText, mscLpFiEcmState=mscLpFiEcmState, mscLpEth100LtIndex=mscLpEth100LtIndex, mscLpEth100LtFbTxInfoRowStatusTable=mscLpEth100LtFbTxInfoRowStatusTable, mscLpEth100LtCntlTopEntry=mscLpEth100LtCntlTopEntry, mscLpEth100ExcessiveCollisions=mscLpEth100ExcessiveCollisions, mscLpIlsFwdrLtFbIpxHTopTable=mscLpIlsFwdrLtFbIpxHTopTable, mscLpFiPhyPcmState=mscLpFiPhyPcmState, mscLpTrLtFrmCmpRowStatusTable=mscLpTrLtFrmCmpRowStatusTable, mscLpFiNcMacOperEntry=mscLpFiNcMacOperEntry, mscLpFiLtFbLlchRowStatusTable=mscLpFiLtFbLlchRowStatusTable, mscLpIlsFwdrLtFbMacTrRowStatusTable=mscLpIlsFwdrLtFbMacTrRowStatusTable, mscLpIlsFwdrLtFbDataStorageType=mscLpIlsFwdrLtFbDataStorageType, mscLpEth100LtFbLlchTopTable=mscLpEth100LtFbLlchTopTable, mscLpEth100TestFrmRx=mscLpEth100TestFrmRx, mscLpTrLtRowStatusTable=mscLpTrLtRowStatusTable, mscLpEth100LtFrmCmp=mscLpEth100LtFrmCmp, mscLpEth100TestBitsTx=mscLpEth100TestBitsTx, mscLpEnetLtStorageType=mscLpEnetLtStorageType, mscLpEth100LtPrtCfgStorageType=mscLpEth100LtPrtCfgStorageType, mscLpFiIndex=mscLpFiIndex, mscLpFiLtFbMacTrTData=mscLpFiLtFbMacTrTData, mscLpFiLtFbMacEnetStorageType=mscLpFiLtFbMacEnetStorageType, mscLpFiLtFbIpHTopTable=mscLpFiLtFbIpHTopTable, mscLpTrLtFbTxInfoRowStatusEntry=mscLpTrLtFbTxInfoRowStatusEntry, mscLpIlsFwdrLtPrtCfgTopEntry=mscLpIlsFwdrLtPrtCfgTopEntry, mscLpFiIfIndex=mscLpFiIfIndex, mscLpEnetLtFbAppleHTopEntry=mscLpEnetLtFbAppleHTopEntry, mscLpFiLt=mscLpFiLt, mscLpEth100LtFbIpxHStorageType=mscLpEth100LtFbIpxHStorageType, mscLpTrUpStream=mscLpTrUpStream, mscLaStateTable=mscLaStateTable, mscLpFiLtFbLlchStorageType=mscLpFiLtFbLlchStorageType, mscLpEth100MacAddress=mscLpEth100MacAddress, mscLpTrLtFbIpxHRowStatus=mscLpTrLtFbIpxHRowStatus, mscLpEth100LtStorageType=mscLpEth100LtStorageType, mscLpIlsFwdrTestFrmRx=mscLpIlsFwdrTestFrmRx, mscLpEnetLtFbIpHRowStatusTable=mscLpEnetLtFbIpHRowStatusTable, mscLpIlsFwdrLtIndex=mscLpIlsFwdrLtIndex, mscLpEnetLtFbTopEntry=mscLpEnetLtFbTopEntry, mscLpIlsFwdrLtFbMacEnet=mscLpIlsFwdrLtFbMacEnet, mscLpIlsFwdrLtFbIpHComponentName=mscLpIlsFwdrLtFbIpHComponentName, mscLpTrLtCntlStorageType=mscLpTrLtCntlStorageType, mscLpEnetSingleCollisionFrames=mscLpEnetSingleCollisionFrames, mscLpTrLtFbTData=mscLpTrLtFbTData, mscLpFiComponentName=mscLpFiComponentName, mscLpFiLtFrmCmp=mscLpFiLtFrmCmp, mscLpFiLtFbDataComponentName=mscLpFiLtFbDataComponentName, mscLpEnetLtFbIpH=mscLpEnetLtFbIpH, mscLpTrLtFbAppleHTData=mscLpTrLtFbAppleHTData, mscLpIlsFwdrLtFrmCpyTData=mscLpIlsFwdrLtFrmCpyTData, mscLpEth100LtCntlTData=mscLpEth100LtCntlTData, mscLpEnetFrameTooLongs=mscLpEnetFrameTooLongs, mscLpIlsFwdrLtFbAppleHRowStatus=mscLpIlsFwdrLtFbAppleHRowStatus, mscLpIlsFwdrTestComponentName=mscLpIlsFwdrTestComponentName, mscLpTrLtFrmCmpRowStatusEntry=mscLpTrLtFrmCmpRowStatusEntry, mscLpEth100LtFbIpxHIndex=mscLpEth100LtFbIpxHIndex, mscLpEnetCustomerIdentifier=mscLpEnetCustomerIdentifier, mscLpFiLtFrmCpyStorageType=mscLpFiLtFrmCpyStorageType, mscLpTrIfEntryEntry=mscLpTrIfEntryEntry, mscLpEnetLtFbMacEnetRowStatus=mscLpEnetLtFbMacEnetRowStatus, mscLpTrLtFbLlch=mscLpTrLtFbLlch, mscLpFiSmtProvEntry=mscLpFiSmtProvEntry, mscLpTrRowStatusEntry=mscLpTrRowStatusEntry, mscLpEnetLtFbMacEnetStorageType=mscLpEnetLtFbMacEnetStorageType, mscLpFiStorageType=mscLpFiStorageType, mscLpFiLtFbFddiMacTData=mscLpFiLtFbFddiMacTData, mscLpFiLtCntlStorageType=mscLpFiLtCntlStorageType, mscLpEnetTestResultsEntry=mscLpEnetTestResultsEntry, mscLpTrNodeAddress=mscLpTrNodeAddress, mscLpFiLtTopEntry=mscLpFiLtTopEntry, mscLpTrUsageState=mscLpTrUsageState, mscLpTrFrameCopiedErrors=mscLpTrFrameCopiedErrors, mscLpIlsFwdrLtFbIpxHTopEntry=mscLpIlsFwdrLtFbIpxHTopEntry, mscLaUsageState=mscLaUsageState, mscLpTrLtFbFddiMacComponentName=mscLpTrLtFbFddiMacComponentName, mscLpEnetLtFrmCmpRowStatusEntry=mscLpEnetLtFrmCmpRowStatusEntry, mscLpTrLtFbMacEnetRowStatus=mscLpTrLtFbMacEnetRowStatus, mscLpTrLtFbFddiMac=mscLpTrLtFbFddiMac, mscLpEth100LtComponentName=mscLpEth100LtComponentName, mscLpTrLtFbFddiMacTData=mscLpTrLtFbFddiMacTData, mscLpFiLtFbMacEnetIndex=mscLpFiLtFbMacEnetIndex, mscLpTrLtIndex=mscLpTrLtIndex, mscLpEnetRowStatusTable=mscLpEnetRowStatusTable, mscLpTr=mscLpTr, mscLpIlsFwdrTestTimeRemaining=mscLpIlsFwdrTestTimeRemaining, mscLpEth100DeferredTransmissions=mscLpEth100DeferredTransmissions, mscLpEth100LtFbLlchTData=mscLpEth100LtFbLlchTData, mscLpTrLtFbMacEnetTopTable=mscLpTrLtFbMacEnetTopTable, mscLpTrLtFbLlchRowStatusTable=mscLpTrLtFbLlchRowStatusTable, mscLpTrGroupAddress=mscLpTrGroupAddress, mscLpIlsFwdrTestBitsRx=mscLpIlsFwdrTestBitsRx, mscLpEnetLtFbMacTrTopEntry=mscLpEnetLtFbMacTrTopEntry, mscLpEnetLtFbData=mscLpEnetLtFbData, mscLpTrLtCntlTopEntry=mscLpTrLtCntlTopEntry, mscLpIlsFwdrLinkToTrafficSourceTable=mscLpIlsFwdrLinkToTrafficSourceTable, mscLpEth100OperStatusEntry=mscLpEth100OperStatusEntry, mscLpEth100LtFbTxInfoRowStatus=mscLpEth100LtFbTxInfoRowStatus, mscLpTrLtTopEntry=mscLpTrLtTopEntry, mscLpIlsFwdrLtPrtCfgTData=mscLpIlsFwdrLtPrtCfgTData, mscLpTrRingSpeed=mscLpTrRingSpeed, mscLpIlsFwdrLtFrmCmpTopTable=mscLpIlsFwdrLtFrmCmpTopTable, mscLpIlsFwdrLtFbAppleHTData=mscLpIlsFwdrLtFbAppleHTData, mscLpIlsFwdrLtFbFddiMacStorageType=mscLpIlsFwdrLtFbFddiMacStorageType, mscLpEth100LtCntl=mscLpEth100LtCntl, mscLpEnetDeferredTransmissions=mscLpEnetDeferredTransmissions, mscLpFiLtFbIpHIndex=mscLpFiLtFbIpHIndex, mscLpFiTestDuration=mscLpFiTestDuration, mscLpTrNcMacAddress=mscLpTrNcMacAddress, mscLpIlsFwdrLtFbDataRowStatus=mscLpIlsFwdrLtFbDataRowStatus, mscLpIlsFwdrLtFbLlchComponentName=mscLpIlsFwdrLtFbLlchComponentName, mscLpEth100LtFrmCmpComponentName=mscLpEth100LtFrmCmpComponentName, mscLpEnetLtFbIpxHComponentName=mscLpEnetLtFbIpxHComponentName, mscLpTrLtFbMacEnetStorageType=mscLpTrLtFbMacEnetStorageType, mscLpEth100TestIndex=mscLpEth100TestIndex, mscLpEth100LtFbIpHIndex=mscLpEth100LtFbIpHIndex, mscLpIlsFwdrIfIndex=mscLpIlsFwdrIfIndex, mscLpEth100LtFbFddiMacRowStatus=mscLpEth100LtFbFddiMacRowStatus, mscLpEnetTestCauseOfTermination=mscLpEnetTestCauseOfTermination, mscLpFiLtFbMacEnetRowStatusEntry=mscLpFiLtFbMacEnetRowStatusEntry, mscLpEnetStateEntry=mscLpEnetStateEntry, mscLpEnetLtPrtCfgRowStatusTable=mscLpEnetLtPrtCfgRowStatusTable, mscLpEnetLtFbRowStatusTable=mscLpEnetLtFbRowStatusTable, mscLpTrLtPrtCfgTopTable=mscLpTrLtPrtCfgTopTable, mscLpEnetLtFbLlchTData=mscLpEnetLtFbLlchTData, mscLpEth100LtFbDataRowStatusTable=mscLpEth100LtFbDataRowStatusTable, mscLpEnetApplicationFramerName=mscLpEnetApplicationFramerName, mscLpFiUseThruBa=mscLpFiUseThruBa, mscLpFiStatusReportPolicy=mscLpFiStatusReportPolicy, mscLpTrLtFbRowStatus=mscLpTrLtFbRowStatus, mscLpTrLtFrmCmpTopTable=mscLpTrLtFrmCmpTopTable, mscLpFiLtPrtCfgIndex=mscLpFiLtPrtCfgIndex, mscLpEnetIfEntryTable=mscLpEnetIfEntryTable, mscLpFiAcceptBb=mscLpFiAcceptBb, mscLpEth100LtFbTxInfoTData=mscLpEth100LtFbTxInfoTData, mscLpEnetAdminInfoTable=mscLpEnetAdminInfoTable, mscLaStorageType=mscLaStorageType, mscLpFiLtFbIndex=mscLpFiLtFbIndex, mscLpEnetLtPrtCfgComponentName=mscLpEnetLtPrtCfgComponentName, mscLpTrLtFbAppleH=mscLpTrLtFbAppleH, mscLpFiPhyRowStatusTable=mscLpFiPhyRowStatusTable, mscLpIlsFwdrLtFbTxInfoStorageType=mscLpIlsFwdrLtFbTxInfoStorageType, mscLpEth100LtFrmCpyRowStatus=mscLpEth100LtFrmCpyRowStatus, mscLpEth100LtFbRowStatus=mscLpEth100LtFbRowStatus, mscLpEnetUsageState=mscLpEnetUsageState, mscLpIlsFwdrIndex=mscLpIlsFwdrIndex, mscLpEnetLtFbAppleHStorageType=mscLpEnetLtFbAppleHStorageType, mscLpTrTestStorageType=mscLpTrTestStorageType, mscLpEnetIfAdminStatus=mscLpEnetIfAdminStatus, mscLpTrRingRecoverys=mscLpTrRingRecoverys, lanDriversGroup=lanDriversGroup, mscLpEnetVendor=mscLpEnetVendor, mscLpEnetLtFbMacTrRowStatusEntry=mscLpEnetLtFbMacTrRowStatusEntry, mscLpEnetLtCntlTopEntry=mscLpEnetLtCntlTopEntry, mscLpEnetLtFbIpHIndex=mscLpEnetLtFbIpHIndex, mscLpFiLtComponentName=mscLpFiLtComponentName, mscLaLinkToProtocolPort=mscLaLinkToProtocolPort, mscLpEth100LtFrmCpyRowStatusTable=mscLpEth100LtFrmCpyRowStatusTable, mscLpEnetTestBitsTx=mscLpEnetTestBitsTx, mscLpTrLtFbDataIndex=mscLpTrLtFbDataIndex, mscLpFiLtFbIpxHRowStatusEntry=mscLpFiLtFbIpxHRowStatusEntry, mscLpTrLtFbFddiMacRowStatusTable=mscLpTrLtFbFddiMacRowStatusTable, mscLpFiLtPrtCfgTData=mscLpFiLtPrtCfgTData, lanDriversCapabilities=lanDriversCapabilities, mscLpFiTvxExpiredCounts=mscLpFiTvxExpiredCounts, mscLpEnetLtFbLlchRowStatusTable=mscLpEnetLtFbLlchRowStatusTable, mscLpFiLtFbDataStorageType=mscLpFiLtFbDataStorageType, mscLpTrAdminInfoTable=mscLpTrAdminInfoTable, mscLpTrAcErrors=mscLpTrAcErrors, mscLpTrLtFbRowStatusEntry=mscLpTrLtFbRowStatusEntry, mscLpEnetLtFbDataTopEntry=mscLpEnetLtFbDataTopEntry, mscLpEth100ReceivedFramesIntoRouterBr=mscLpEth100ReceivedFramesIntoRouterBr, mscLpEth100LtFbTopTable=mscLpEth100LtFbTopTable, mscLpIlsFwdrLtFbFddiMacRowStatus=mscLpIlsFwdrLtFbFddiMacRowStatus, mscLpFiTokenMaxTimer=mscLpFiTokenMaxTimer, mscLpEth100LtFbFddiMacStorageType=mscLpEth100LtFbFddiMacStorageType, mscLpFiLtFbTopEntry=mscLpFiLtFbTopEntry, mscLpEnetLtFrmCpyRowStatusEntry=mscLpEnetLtFrmCpyRowStatusEntry, mscLpTrLtFbDataTData=mscLpTrLtFbDataTData, mscLpTrLtTData=mscLpTrLtTData, mscLpIlsFwdrLtComponentName=mscLpIlsFwdrLtComponentName, mscLpIlsFwdrLtFrmCmpStorageType=mscLpIlsFwdrLtFrmCmpStorageType, mscLpEth100LtFrmCpyTopTable=mscLpEth100LtFrmCpyTopTable, mscLpEth100LtPrtCfgComponentName=mscLpEth100LtPrtCfgComponentName, mscLpTrMacAddress=mscLpTrMacAddress, mscLaOperationalState=mscLaOperationalState, mscLpTrLtFbLlchIndex=mscLpTrLtFbLlchIndex, mscLpEnetLtFrmCpyStorageType=mscLpEnetLtFrmCpyStorageType, mscLpFiLtFbLlchTData=mscLpFiLtFbLlchTData, mscLpTrHardErrors=mscLpTrHardErrors, mscLpEth100LtCntlTopTable=mscLpEth100LtCntlTopTable, mscLpFiSmtOperTable=mscLpFiSmtOperTable, mscLpTrTestFrmRx=mscLpTrTestFrmRx, mscLpFiVendor=mscLpFiVendor, mscLpEth100LtFrmCmpTopTable=mscLpEth100LtFrmCmpTopTable, mscLpEth100LtFbMacEnetRowStatus=mscLpEth100LtFbMacEnetRowStatus, mscLpFiLtFbAppleHRowStatus=mscLpFiLtFbAppleHRowStatus, mscLpTrLtFbMacTrTData=mscLpTrLtFbMacTrTData, mscLa=mscLa, mscLpFiMacAddress=mscLpFiMacAddress, mscLpIlsFwdrTestErroredFrmRx=mscLpIlsFwdrTestErroredFrmRx, mscLpEth100LtFbTxInfoTopTable=mscLpEth100LtFbTxInfoTopTable, mscLpIlsFwdrIfEntryTable=mscLpIlsFwdrIfEntryTable, mscLpEth100LtFbIpHComponentName=mscLpEth100LtFbIpHComponentName, mscLpEnetLtFbMacTr=mscLpEnetLtFbMacTr, mscLpEnetLtFbMacTrComponentName=mscLpEnetLtFbMacTrComponentName, lanDriversGroupCA02A=lanDriversGroupCA02A, mscLpEnetLtCntlRowStatus=mscLpEnetLtCntlRowStatus, mscLpFiLtFbTData=mscLpFiLtFbTData, mscLpFiLtPrtCfgRowStatusEntry=mscLpFiLtPrtCfgRowStatusEntry, mscLpFiLtCntlTopTable=mscLpFiLtCntlTopTable, mscLpEnetLtFrmCmpTopEntry=mscLpEnetLtFrmCmpTopEntry, mscLpFiPhyLerCutoff=mscLpFiPhyLerCutoff, mscLpFiTestRowStatus=mscLpFiTestRowStatus, mscLpTrLtFbMacTrRowStatusTable=mscLpTrLtFbMacTrRowStatusTable, mscLpEth100LtFbMacTrRowStatusEntry=mscLpEth100LtFbMacTrRowStatusEntry, mscLpTrTestFrmTx=mscLpTrTestFrmTx, mscLpEnetExcessiveCollisions=mscLpEnetExcessiveCollisions, mscLpEth100LtPrtCfgTData=mscLpEth100LtPrtCfgTData, mscLpFiLtFbDataTopTable=mscLpFiLtFbDataTopTable, mscLpEth100LtFbIpHRowStatus=mscLpEth100LtFbIpHRowStatus, mscLpEnetLtFbMacEnetComponentName=mscLpEnetLtFbMacEnetComponentName, mscLpEnetLtFbAppleH=mscLpEnetLtFbAppleH, mscLpFiPhyStorageType=mscLpFiPhyStorageType, mscLpIlsFwdrLtRowStatusTable=mscLpIlsFwdrLtRowStatusTable, mscLpFiLtFbMacTrRowStatus=mscLpFiLtFbMacTrRowStatus, mscLpTrFunctionalAddress=mscLpTrFunctionalAddress, mscLpIlsFwdrTest=mscLpIlsFwdrTest, mscLpEth100DuplexMode=mscLpEth100DuplexMode, mscLpEnetLtFrmCmpIndex=mscLpEnetLtFrmCmpIndex, mscLpEnetLtFbStorageType=mscLpEnetLtFbStorageType, mscLpIlsFwdrLtFbMacEnetRowStatusEntry=mscLpIlsFwdrLtFbMacEnetRowStatusEntry, mscLpEth100LtFbIpHTopTable=mscLpEth100LtFbIpHTopTable, mscLpIlsFwdrStateEntry=mscLpIlsFwdrStateEntry, mscLpFiLtFbIpHRowStatus=mscLpFiLtFbIpHRowStatus, mscLpIlsFwdrAdminState=mscLpIlsFwdrAdminState, mscLpIlsFwdrLtFbMacEnetTopEntry=mscLpIlsFwdrLtFbMacEnetTopEntry, mscLpEnetLtFbTxInfoTopEntry=mscLpEnetLtFbTxInfoTopEntry, mscLpTrLtFbComponentName=mscLpTrLtFbComponentName, mscLpEth100LtFbRowStatusTable=mscLpEth100LtFbRowStatusTable, mscLpFiNcOldDownstreamNeighbor=mscLpFiNcOldDownstreamNeighbor, mscLpFiPhyLerEstimate=mscLpFiPhyLerEstimate)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-LanDriversMIB", mscLpTrTestErroredFrmRx=mscLpTrTestErroredFrmRx, mscLpEnetLtFbLlchTopEntry=mscLpEnetLtFbLlchTopEntry, mscLpTrLtCntl=mscLpTrLtCntl, mscLpFiLtFrmCpyTopEntry=mscLpFiLtFrmCpyTopEntry, mscLpFiLtFbFddiMacStorageType=mscLpFiLtFbFddiMacStorageType, mscLpEnetLtFbIpxHTData=mscLpEnetLtFbIpxHTData, mscLpFiLtFrmCpyTopTable=mscLpFiLtFrmCpyTopTable, mscLpFiLtPrtCfgComponentName=mscLpFiLtPrtCfgComponentName, mscLpIlsFwdrLtFbFddiMacRowStatusEntry=mscLpIlsFwdrLtFbFddiMacRowStatusEntry, mscLpEth100StateTable=mscLpEth100StateTable, mscLpEth100LtFbIndex=mscLpEth100LtFbIndex, mscLpEth100LtFbMacTrStorageType=mscLpEth100LtFbMacTrStorageType, mscLpFiLtFbFddiMacRowStatusEntry=mscLpFiLtFbFddiMacRowStatusEntry, mscLpEth100TestComponentName=mscLpEth100TestComponentName, mscLpIlsFwdrOperStatusTable=mscLpIlsFwdrOperStatusTable, mscLpFiAcceptAm=mscLpFiAcceptAm, mscLpTrCidDataEntry=mscLpTrCidDataEntry, mscLpEth100LtFrmCpyRowStatusEntry=mscLpEth100LtFrmCpyRowStatusEntry, mscLpEnetLtRowStatusTable=mscLpEnetLtRowStatusTable, mscLpFiLtFbTxInfoStorageType=mscLpFiLtFbTxInfoStorageType, mscLpFiLtFbIpxHTopTable=mscLpFiLtFbIpxHTopTable, mscLpFiLtFbMacTrTopTable=mscLpFiLtFbMacTrTopTable, mscLpIlsFwdrLtFrmCmpRowStatus=mscLpIlsFwdrLtFrmCmpRowStatus, mscLaIfEntryEntry=mscLaIfEntryEntry, mscLpIlsFwdrLtFrmCmpIndex=mscLpIlsFwdrLtFrmCmpIndex, mscLpEth100TestRowStatusTable=mscLpEth100TestRowStatusTable, mscLpFiLateCounts=mscLpFiLateCounts, mscLpIlsFwdrLtFbIpxHRowStatus=mscLpIlsFwdrLtFbIpxHRowStatus, mscLpEnetLtFbIndex=mscLpEnetLtFbIndex, mscLpTrTestPTOEntry=mscLpTrTestPTOEntry, mscLpTrTokenErrors=mscLpTrTokenErrors, mscLpTrTestRowStatus=mscLpTrTestRowStatus, mscLpIlsFwdrLtStorageType=mscLpIlsFwdrLtStorageType, mscLpEth100LtFbMacTr=mscLpEth100LtFbMacTr, mscLpFiNcUpstreamNeighbor=mscLpFiNcUpstreamNeighbor, mscLpEth100TestBitsRx=mscLpEth100TestBitsRx, mscLpFiLtFbIpxHTopEntry=mscLpFiLtFbIpxHTopEntry, mscLpEnetLtFbTxInfoIndex=mscLpEnetLtFbTxInfoIndex, mscLpFiLtFbDataTopEntry=mscLpFiLtFbDataTopEntry, mscLpTrLtFbFddiMacIndex=mscLpTrLtFbFddiMacIndex, mscLpEth100LtFbMacTrComponentName=mscLpEth100LtFbMacTrComponentName, mscLpEnetLtFbIpxHRowStatusTable=mscLpEnetLtFbIpxHRowStatusTable, mscLpIlsFwdrLtFbMacEnetTData=mscLpIlsFwdrLtFbMacEnetTData, mscLpEth100LtCntlIndex=mscLpEth100LtCntlIndex, mscLpEnetTestFrmRx=mscLpEnetTestFrmRx, mscLpIlsFwdrFramesDiscarded=mscLpIlsFwdrFramesDiscarded, mscLpTrLtRowStatus=mscLpTrLtRowStatus, mscLpEth100MultipleCollisionFrames=mscLpEth100MultipleCollisionFrames, mscLpTrLtStorageType=mscLpTrLtStorageType, mscLpIlsFwdrLtFbTxInfoRowStatusTable=mscLpIlsFwdrLtFbTxInfoRowStatusTable, mscLpIlsFwdrLtFbMacTrTopEntry=mscLpIlsFwdrLtFbMacTrTopEntry, mscLpEnetOperationalState=mscLpEnetOperationalState, mscLpEth100LtFbLlchRowStatusTable=mscLpEth100LtFbLlchRowStatusTable, mscLpTrTestRowStatusEntry=mscLpTrTestRowStatusEntry, lanDriversGroupCA=lanDriversGroupCA, mscLpTrTestBitsRx=mscLpTrTestBitsRx, mscLpTrLtFbIpHIndex=mscLpTrLtFbIpHIndex, mscLpIlsFwdrLtFbIpHStorageType=mscLpIlsFwdrLtFbIpHStorageType, mscLpFiLtCntlRowStatus=mscLpFiLtCntlRowStatus, mscLpEth100LtFbMacEnetRowStatusEntry=mscLpEth100LtFbMacEnetRowStatusEntry, mscLpTrComponentName=mscLpTrComponentName, mscLpEnetMacTransmitErrors=mscLpEnetMacTransmitErrors, mscLpFiLtFbIpHRowStatusTable=mscLpFiLtFbIpHRowStatusTable, mscLpIlsFwdrLtFb=mscLpIlsFwdrLtFb, mscLpEth100TestType=mscLpEth100TestType, mscLpEth100IfEntryEntry=mscLpEth100IfEntryEntry, mscLpTrLtPrtCfgIndex=mscLpTrLtPrtCfgIndex, mscLpEnetLtFbDataIndex=mscLpEnetLtFbDataIndex, mscLpTrLtCntlRowStatusTable=mscLpTrLtCntlRowStatusTable, mscLpFiPhyLctFailCounts=mscLpFiPhyLctFailCounts, mscLpFiSmtOperEntry=mscLpFiSmtOperEntry, mscLpIlsFwdrLtFbDataTopTable=mscLpIlsFwdrLtFbDataTopTable, mscLpEth100LtFbStorageType=mscLpEth100LtFbStorageType, mscLpFiLtFbComponentName=mscLpFiLtFbComponentName, mscLpFiLtFbLlchComponentName=mscLpFiLtFbLlchComponentName, mscLpIlsFwdrLtFbDataRowStatusTable=mscLpIlsFwdrLtFbDataRowStatusTable, mscLpFiRmtState=mscLpFiRmtState, mscLpEnetLtFbAppleHRowStatusTable=mscLpEnetLtFbAppleHRowStatusTable, mscLpEth100LtCntlStorageType=mscLpEth100LtCntlStorageType, mscLpIlsFwdrLtCntlTData=mscLpIlsFwdrLtCntlTData, mscLpEnetCidDataTable=mscLpEnetCidDataTable, mscLpIlsFwdrTestPTOEntry=mscLpIlsFwdrTestPTOEntry, mscLaFramerComponentName=mscLaFramerComponentName, mscLpFiLtCntl=mscLpFiLtCntl, mscLpFiLtFrmCmpTopTable=mscLpFiLtFrmCmpTopTable, mscLaIfEntryTable=mscLaIfEntryTable, mscLpEth100LtPrtCfgTopEntry=mscLpEth100LtPrtCfgTopEntry, mscLpTrLtFbLlchRowStatus=mscLpTrLtFbLlchRowStatus, mscLpTrLtFbMacTrIndex=mscLpTrLtFbMacTrIndex, mscLpIlsFwdrLtRowStatus=mscLpIlsFwdrLtRowStatus, mscLpEth100LtFrmCpyTData=mscLpEth100LtFrmCpyTData, mscLpEth100LtFbTopEntry=mscLpEth100LtFbTopEntry, mscLaFramerRowStatusTable=mscLaFramerRowStatusTable, mscLpTrAdminInfoEntry=mscLpTrAdminInfoEntry, mscLpEth100LtFbMacTrTData=mscLpEth100LtFbMacTrTData, mscLpIlsFwdrLtTopTable=mscLpIlsFwdrLtTopTable, mscLpEnetLtFbAppleHRowStatus=mscLpEnetLtFbAppleHRowStatus, mscLpFiPhyProvTable=mscLpFiPhyProvTable, mscLpFiTestRowStatusEntry=mscLpFiTestRowStatusEntry, mscLpIlsFwdrLtPrtCfgRowStatus=mscLpIlsFwdrLtPrtCfgRowStatus, mscLpTrCidDataTable=mscLpTrCidDataTable, mscLpEnetLtCntlTData=mscLpEnetLtCntlTData, mscLpFiLtFbIpHTopEntry=mscLpFiLtFbIpHTopEntry, mscLpTrOperStatusTable=mscLpTrOperStatusTable, mscLpEnetLtFbTxInfoRowStatusEntry=mscLpEnetLtFbTxInfoRowStatusEntry, mscLpTrLtFbMacTrRowStatusEntry=mscLpTrLtFbMacTrRowStatusEntry, mscLpEnetLtFbIpxHTopTable=mscLpEnetLtFbIpxHTopTable, mscLpIlsFwdrLtFbIpxHStorageType=mscLpIlsFwdrLtFbIpxHStorageType, mscLpIlsFwdrStatsTable=mscLpIlsFwdrStatsTable, mscLpIlsFwdrLtFrmCpyRowStatusEntry=mscLpIlsFwdrLtFrmCpyRowStatusEntry, mscLpIlsFwdrLtFbFddiMacTopEntry=mscLpIlsFwdrLtFbFddiMacTopEntry, mscLpTrSnmpOperStatus=mscLpTrSnmpOperStatus, mscLpTrLtFbDataComponentName=mscLpTrLtFbDataComponentName, mscLpIlsFwdrLtFbIpxHTData=mscLpIlsFwdrLtFbIpxHTData, mscLpTrLtFbMacEnetComponentName=mscLpTrLtFbMacEnetComponentName, mscLpIlsFwdrTestRowStatusEntry=mscLpIlsFwdrTestRowStatusEntry, mscLpFiLtPrtCfgStorageType=mscLpFiLtPrtCfgStorageType, mscLpIlsFwdrLtFbTxInfo=mscLpIlsFwdrLtFbTxInfo, mscLpEth100LtFbMacTrIndex=mscLpEth100LtFbMacTrIndex, mscLpFiLtFbIpxHTData=mscLpFiLtFbIpxHTData, mscLpTrVendor=mscLpTrVendor, mscLpIlsFwdrLtPrtCfgIndex=mscLpIlsFwdrLtPrtCfgIndex, mscLpTrLtFbMacEnet=mscLpTrLtFbMacEnet, mscLpIlsFwdrTestCauseOfTermination=mscLpIlsFwdrTestCauseOfTermination, mscLpTrBurstErrors=mscLpTrBurstErrors, mscLpEth100LtFbTxInfoRowStatusEntry=mscLpEth100LtFbTxInfoRowStatusEntry, mscLaOperStatusEntry=mscLaOperStatusEntry, mscLpTrLtFbMacTrTopTable=mscLpTrLtFbMacTrTopTable, mscLpEth100CarrierSenseErrors=mscLpEth100CarrierSenseErrors, mscLpFiLtFbFddiMac=mscLpFiLtFbFddiMac, mscLpIlsFwdrLtFbTData=mscLpIlsFwdrLtFbTData, mscLpIlsFwdrLtFbMacTr=mscLpIlsFwdrLtFbMacTr, mscLpIlsFwdrLtFbMacTrIndex=mscLpIlsFwdrLtFbMacTrIndex, mscLpIlsFwdrLtFbFddiMacTData=mscLpIlsFwdrLtFbFddiMacTData, mscLpEth100OperEntry=mscLpEth100OperEntry, mscLpIlsFwdrLtFrmCpyRowStatus=mscLpIlsFwdrLtFrmCpyRowStatus, mscLaFramerRowStatus=mscLaFramerRowStatus, mscLpEnetLtFbFddiMacStorageType=mscLpEnetLtFbFddiMacStorageType, mscLpFiOperStatusTable=mscLpFiOperStatusTable, mscLaStateEntry=mscLaStateEntry, mscLpTrLtFbDataTopEntry=mscLpTrLtFbDataTopEntry, mscLpTrLtFbIpxHComponentName=mscLpTrLtFbIpxHComponentName, mscLpEth100LtFbTxInfoComponentName=mscLpEth100LtFbTxInfoComponentName, mscLpTrLtFbAppleHTopTable=mscLpTrLtFbAppleHTopTable, mscLpEth100LtFbLlch=mscLpEth100LtFbLlch, mscLpEth100Lt=mscLpEth100Lt, mscLpFiLtFrmCmpStorageType=mscLpFiLtFrmCmpStorageType, mscLaFramerInterfaceNamesValue=mscLaFramerInterfaceNamesValue, mscLpEth100LtPrtCfgTopTable=mscLpEth100LtPrtCfgTopTable, mscLpTrProvEntry=mscLpTrProvEntry, mscLpEth100TestFrmTx=mscLpEth100TestFrmTx, lanDriversCapabilitiesCA02=lanDriversCapabilitiesCA02, mscLpEth100LtFbRowStatusEntry=mscLpEth100LtFbRowStatusEntry, mscLpTrLtFbIndex=mscLpTrLtFbIndex, mscLpFiLtFbIpxHRowStatus=mscLpFiLtFbIpxHRowStatus, mscLpFiTestResultsTable=mscLpFiTestResultsTable, mscLpIlsFwdrLtFbLlchTopEntry=mscLpIlsFwdrLtFbLlchTopEntry, mscLpEth100LtFbDataIndex=mscLpEth100LtFbDataIndex, mscLpEth100LtFbIpxH=mscLpEth100LtFbIpxH, mscLpIlsFwdrLtTData=mscLpIlsFwdrLtTData, mscLpIlsFwdrLtFbIpxHIndex=mscLpIlsFwdrLtFbIpxHIndex, mscLpEth100LtFbFddiMacTopEntry=mscLpEth100LtFbFddiMacTopEntry, mscLaCidDataEntry=mscLaCidDataEntry, mscLpEth100LtFbMacTrTopEntry=mscLpEth100LtFbMacTrTopEntry, mscLpEnetLtPrtCfgTopTable=mscLpEnetLtPrtCfgTopTable, mscLpTrProductId=mscLpTrProductId, mscLpEnetMultipleCollisionFrames=mscLpEnetMultipleCollisionFrames, mscLpIlsFwdrLtFbAppleHIndex=mscLpIlsFwdrLtFbAppleHIndex, mscLpIlsFwdrLtPrtCfgComponentName=mscLpIlsFwdrLtPrtCfgComponentName, mscLpTrRowStatusTable=mscLpTrRowStatusTable, mscLpEnetLtFrmCpyComponentName=mscLpEnetLtFrmCpyComponentName, mscLpEnetLtRowStatusEntry=mscLpEnetLtRowStatusEntry, mscLpFiLtTopTable=mscLpFiLtTopTable, mscLpTrCustomerIdentifier=mscLpTrCustomerIdentifier, mscLpTrLtPrtCfgRowStatus=mscLpTrLtPrtCfgRowStatus, mscLpEth100ActualLineSpeed=mscLpEth100ActualLineSpeed, mscLpFiLtTData=mscLpFiLtTData, mscLpEth100LtFbMacEnetTData=mscLpEth100LtFbMacEnetTData, mscLpIlsFwdrLtFbIpxHComponentName=mscLpIlsFwdrLtFbIpxHComponentName, mscLpEnetLtFbIpHComponentName=mscLpEnetLtFbIpHComponentName, mscLpTrLt=mscLpTrLt, mscLpEth100OctetsTransmittedOk=mscLpEth100OctetsTransmittedOk, mscLpEth100LtFbDataTData=mscLpEth100LtFbDataTData, mscLpIlsFwdrLtFrmCmpTData=mscLpIlsFwdrLtFrmCmpTData, mscLpEth100LtFbMacEnet=mscLpEth100LtFbMacEnet, mscLpFiLtFbIpxHStorageType=mscLpFiLtFbIpxHStorageType, mscLpIlsFwdrLtFbFddiMacComponentName=mscLpIlsFwdrLtFbFddiMacComponentName, mscLpEnetIfIndex=mscLpEnetIfIndex, mscLpTrLtFbTxInfoTopTable=mscLpTrLtFbTxInfoTopTable, mscLpFiLtFbTxInfoComponentName=mscLpFiLtFbTxInfoComponentName, mscLpEth100LtFrmCpyComponentName=mscLpEth100LtFrmCpyComponentName, mscLpEnetLtPrtCfgRowStatus=mscLpEnetLtPrtCfgRowStatus, mscLpFiLtFbMacTrTopEntry=mscLpFiLtFbMacTrTopEntry, mscLpEnetLtFbMacTrRowStatusTable=mscLpEnetLtFbMacTrRowStatusTable, mscLpFiLtFbAppleHComponentName=mscLpFiLtFbAppleHComponentName, mscLpEth100FcsErrors=mscLpEth100FcsErrors, mscLpEnetLtFbTxInfo=mscLpEnetLtFbTxInfo, mscLpIlsFwdrLtFbRowStatusEntry=mscLpIlsFwdrLtFbRowStatusEntry, mscLpIlsFwdrLtFbMacTrTopTable=mscLpIlsFwdrLtFbMacTrTopTable, mscLpEth100LtFbDataRowStatusEntry=mscLpEth100LtFbDataRowStatusEntry, mscLaMediaProvEntry=mscLaMediaProvEntry, mscLpTrIfEntryTable=mscLpTrIfEntryTable)
