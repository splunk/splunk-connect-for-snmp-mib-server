#
# PySNMP MIB module XLDV20PM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XLDV20PM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
onu, = mibBuilder.importSymbols("AN-MIB", "onu")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, TimeTicks, MibIdentifier, IpAddress, Counter64, ModuleIdentity, Gauge32, Bits, iso, Unsigned32, NotificationType, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "MibIdentifier", "IpAddress", "Counter64", "ModuleIdentity", "Gauge32", "Bits", "iso", "Unsigned32", "NotificationType", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
Xldv20ControlStatus, xldv20Traps, xldv20TvTimeAndDate, Unsigned16, Xldv20AdminState, Xldv20FlowDirection, xldv20IfIndex = mibBuilder.importSymbols("XLDV20-MIB", "Xldv20ControlStatus", "xldv20Traps", "xldv20TvTimeAndDate", "Unsigned16", "Xldv20AdminState", "Xldv20FlowDirection", "xldv20IfIndex")
xldv20Pm = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5))
class Xldv20pmIntervalType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("min15", 1), ("day", 2))

class Xldv20pmControlReq(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))
    namedValues = NamedValues(("noRequest", 1), ("resetIndividCurrent", 2), ("setNrHistEntriesSize", 3), ("paramFaulty", 4), ("nrHistEntriesSizeNotAcceptable", 5), ("dataDaseMemoryNotAvailable", 6), ("create", 7), ("delete", 8), ("addEndpoint", 9), ("removeEndpoint", 10), ("indexLimitExceeded", 11), ("atmPmObjectActive", 12), ("atmPmObjectNotExists", 13), ("endpointExistsAlready", 14), ("requestBusy", 15), ("setDataFailed", 16), ("aswTimeout", 17), ("commandFailed", 18), ("commandSucceeded", 19))

class Xldv20pmCounterName(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))
    namedValues = NamedValues(("noPmCounter", 0), ("neBackgroundBlockErrors", 1), ("neCodeViolations", 2), ("neCodeViolationsCP", 3), ("neCodeViolationsP", 4), ("neCodeViolationsPLCP", 5), ("neErroredSeconds", 6), ("neErroredSecondsCP", 7), ("neErroredSecondsPLCP", 8), ("neSas", 9), ("neSeverelyErroredFrameSeconds", 10), ("neSeverelyErroredSeconds", 11), ("neSeverelyErroredSecondsCP", 12), ("neSeverelyErroredSecondsPLCP", 13), ("neUnavailableSeconds", 14), ("neUnavailableSecondsPLCP", 15), ("neAisSeconds", 16), ("neOfsSeconds", 17), ("neLosSeconds", 18), ("feBackgroundBlockErrors", 19), ("feCodeViolations", 20), ("feCodeViolationsCP", 21), ("feCodeViolationsPLCP", 22), ("feErroredSeconds", 23), ("feErroredSecondsCP", 24), ("feErroredSecondsPLCP", 25), ("feSas", 26), ("feSeverelyErroredSeconds", 27), ("feSeverelyErroredSecondsCP", 28), ("feSeverelyErroredSecondsPLCP", 29), ("feUnavailableSeconds", 30), ("feUnavailableSecondsPLCP", 31), ("discardedCells", 32), ("imaGroupUnavailSecs", 33), ("imaGroupNeNumFailures", 34), ("imaLinkImaViolations", 35), ("imaLinkOifAnomalies", 36), ("imaLinkNeSevErroredSecs", 37), ("imaLinkFeSevErroredSecs", 38), ("imaLinkNeUnavailSecs", 39), ("imaLinkFeUnavailSecs", 40), ("imaLinkNeTxUnusableSecs", 41), ("imaLinkNeRxUnusableSecs", 42), ("imaLinkFeTxUnusableSecs", 43), ("imaLinkFeRxUnusableSecs", 44), ("imaLinkNeTxNumFailures", 45), ("imaLinkNeRxNumFailures", 46), ("maxPmCounter", 47))

class Xldv20pmType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))
    namedValues = NamedValues(("pmTypeUnknown", 0), ("s1F1PMo", 1), ("s1F2PMo", 2), ("s1F3PMo", 3), ("s3F1PMo", 4), ("s3F2PMo", 5), ("s3F3PMo", 6), ("d3F2PMo", 7), ("d3F3PMo", 8), ("e3F3PMo", 9), ("adcF3PMo", 10), ("s1PrM", 11), ("s3PrM", 12), ("e3PrM", 13), ("d3PrM", 14), ("adcPrM", 15), ("e1ImaPrM", 16), ("d1ImaPrM", 17), ("e1ImaPMo", 18), ("d1ImaPMo", 19), ("atmImaPMo", 20), ("maxPmType", 21))

class Xldv20pmFlowType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("undefined", 0), ("f4Segment", 1), ("f4EndToEnd", 2), ("f5Segment", 3), ("f5EndToEnd", 4))

class Xldv20pmSuspectType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("undefined", 0), ("reliable", 1), ("suspect", 2))

class Xldv20pmConnectionIndexType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("undefined", 0), ("vplUni", 1), ("vplNni", 2), ("vclUni", 3), ("vclNni", 4))

class Xldv20pmRoleType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("undefined", 0), ("analyseWithBackwardReporting", 1), ("analyseWithoutBackwardReporting", 2), ("generateWithCollect", 3), ("generateWithoutCollect", 4))

class Xldv20pmEndpointType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("source", 1), ("sink", 2))

class Xldv20pmBlockSizeType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 128, 256, 512, 1024))
    namedValues = NamedValues(("undefined", 0), ("blockSize128", 128), ("blockSize256", 256), ("blockSize512", 512), ("blockSize1024", 1024))

class Xldv20pmAtmCounterType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("transmittedUserCells", 1), ("lostUserCells", 2), ("misinsertedUserCells", 3))

xldv20pmPerformanceManagementControl = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1))
xldv20pmPerformanceMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2))
xldv20pmProtocolMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3))
xldv20pmThresholding = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4))
xldv20pmTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5))
xldv20pmControl = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1))
xldv20pmCoIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1, 1), Unsigned16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmCoIfIndex.setStatus('mandatory')
xldv20pmCoNrHistEntriesSize = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmCoNrHistEntriesSize.setStatus('mandatory')
xldv20pmCoIntervalType = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1, 3), Xldv20pmIntervalType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmCoIntervalType.setStatus('mandatory')
xldv20pmCoControlReq = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1, 4), Xldv20pmControlReq()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmCoControlReq.setStatus('mandatory')
xldv20pmCoControlStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1, 5), Xldv20ControlStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCoControlStatus.setStatus('mandatory')
xldv20pmCoRemainingHistoryEntriesSize = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCoRemainingHistoryEntriesSize.setStatus('mandatory')
xldv20pmCoOAMLevel = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmCoOAMLevel.setStatus('mandatory')
xldv20pmCoControlReqResult = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1, 8), Xldv20pmControlReq()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCoControlReqResult.setStatus('mandatory')
xldv20pmCoControlTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCoControlTimeStamp.setStatus('mandatory')
xldv20pmAtmControl = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2))
xldv20pmAcoIndex = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 1), Unsigned16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoIndex.setStatus('mandatory')
xldv20pmAcoNrHistEntriesSize = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoNrHistEntriesSize.setStatus('mandatory')
xldv20pmAcoIntervalType = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 3), Xldv20pmIntervalType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoIntervalType.setStatus('mandatory')
xldv20pmAcoControlReq = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 4), Xldv20pmControlReq()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoControlReq.setStatus('mandatory')
xldv20pmAcoControlStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 5), Xldv20ControlStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcoControlStatus.setStatus('mandatory')
xldv20pmAcoRemainingHistoryEntriesSize = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcoRemainingHistoryEntriesSize.setStatus('mandatory')
xldv20pmAcoFlowType = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 7), Xldv20pmFlowType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoFlowType.setStatus('mandatory')
xldv20pmAcoFlowDirection = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 8), Xldv20FlowDirection()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoFlowDirection.setStatus('mandatory')
xldv20pmAcoConnectionIndex = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoConnectionIndex.setStatus('mandatory')
xldv20pmAcoConnectionIndexType = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 10), Xldv20pmConnectionIndexType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoConnectionIndexType.setStatus('mandatory')
xldv20pmAcoRole = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 12), Xldv20pmRoleType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoRole.setStatus('mandatory')
xldv20pmAcoEndpointType = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 13), Xldv20pmEndpointType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcoEndpointType.setStatus('mandatory')
xldv20pmAcoControlReqResult = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 14), Xldv20pmControlReq()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcoControlReqResult.setStatus('mandatory')
xldv20pmAcoControlTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 1, 2, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcoControlTimeStamp.setStatus('mandatory')
xldv20pmCommonCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2), )
if mibBuilder.loadTexts: xldv20pmCommonCurrentTable.setStatus('mandatory')
xldv20pmCommonCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmCcIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmCcOAMLevel"))
if mibBuilder.loadTexts: xldv20pmCommonCurrentEntry.setStatus('mandatory')
xldv20pmCcIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcIntervalType.setStatus('mandatory')
xldv20pmCcOAMLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcOAMLevel.setStatus('mandatory')
xldv20pmCcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 3), Xldv20AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmCcAdminState.setStatus('mandatory')
xldv20pmCcSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 4), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcSuspectFlag.setStatus('mandatory')
xldv20pmCcHistEntrySize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcHistEntrySize.setStatus('mandatory')
xldv20pmCcNrHistEntriesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcNrHistEntriesAvailable.setStatus('mandatory')
xldv20pmCcElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcElapsedTime.setStatus('mandatory')
xldv20pmCcThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmCcThresholdLimitIndex.setStatus('mandatory')
xldv20pmCcNeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcNeErroredSeconds.setStatus('mandatory')
xldv20pmCcFeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcFeErroredSeconds.setStatus('mandatory')
xldv20pmCcNeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcNeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmCcFeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcFeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmCcNeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcNeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmCcFeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcFeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmCcNeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcNeUnavailableSeconds.setStatus('mandatory')
xldv20pmCcFeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmCcFeUnavailableSeconds.setStatus('mandatory')
xldv20pmCommonHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3), )
if mibBuilder.loadTexts: xldv20pmCommonHistoryTable.setStatus('mandatory')
xldv20pmCommonHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmChIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmChOAMLevel"), (0, "XLDV20PM-MIB", "xldv20pmChHistEntryNr"))
if mibBuilder.loadTexts: xldv20pmCommonHistoryEntry.setStatus('mandatory')
xldv20pmChIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChIntervalType.setStatus('mandatory')
xldv20pmChOAMLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChOAMLevel.setStatus('mandatory')
xldv20pmChHistEntryNr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChHistEntryNr.setStatus('mandatory')
xldv20pmChSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 4), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChSuspectFlag.setStatus('mandatory')
xldv20pmChPeriodEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChPeriodEndTime.setStatus('mandatory')
xldv20pmChNeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChNeErroredSeconds.setStatus('mandatory')
xldv20pmChFeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChFeErroredSeconds.setStatus('mandatory')
xldv20pmChNeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChNeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmChFeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChFeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmChNeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChNeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmChFeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChFeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmChNeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChNeUnavailableSeconds.setStatus('mandatory')
xldv20pmChFeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmChFeUnavailableSeconds.setStatus('mandatory')
xldv20pmS3CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4), )
if mibBuilder.loadTexts: xldv20pmS3CurrentTable.setStatus('mandatory')
xldv20pmS3CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmS3cIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmS3cOAMLevel"))
if mibBuilder.loadTexts: xldv20pmS3CurrentEntry.setStatus('mandatory')
xldv20pmS3cIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cIntervalType.setStatus('mandatory')
xldv20pmS3cOAMLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cOAMLevel.setStatus('mandatory')
xldv20pmS3cAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 3), Xldv20AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmS3cAdminState.setStatus('mandatory')
xldv20pmS3cSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 4), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cSuspectFlag.setStatus('mandatory')
xldv20pmS3cHistEntrySize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cHistEntrySize.setStatus('mandatory')
xldv20pmS3cNrHistEntriesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cNrHistEntriesAvailable.setStatus('mandatory')
xldv20pmS3cElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cElapsedTime.setStatus('mandatory')
xldv20pmS3cThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmS3cThresholdLimitIndex.setStatus('mandatory')
xldv20pmS3cNeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cNeErroredSeconds.setStatus('mandatory')
xldv20pmS3cFeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cFeErroredSeconds.setStatus('mandatory')
xldv20pmS3cNeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cNeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmS3cFeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cFeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmS3cNeCodeViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cNeCodeViolations.setStatus('mandatory')
xldv20pmS3cFeCodeViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cFeCodeViolations.setStatus('mandatory')
xldv20pmS3cNeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cNeUnavailableSeconds.setStatus('mandatory')
xldv20pmS3cFeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cFeUnavailableSeconds.setStatus('mandatory')
xldv20pmS3cNeSeverelyErroredFrameSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3cNeSeverelyErroredFrameSeconds.setStatus('mandatory')
xldv20pmS3HistoryTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5), )
if mibBuilder.loadTexts: xldv20pmS3HistoryTable.setStatus('mandatory')
xldv20pmS3HistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmS3hIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmS3hOAMLevel"), (0, "XLDV20PM-MIB", "xldv20pmS3hHistEntryNr"))
if mibBuilder.loadTexts: xldv20pmS3HistoryEntry.setStatus('mandatory')
xldv20pmS3hIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hIntervalType.setStatus('mandatory')
xldv20pmS3hOAMLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hOAMLevel.setStatus('mandatory')
xldv20pmS3hHistEntryNr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hHistEntryNr.setStatus('mandatory')
xldv20pmS3hSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 4), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hSuspectFlag.setStatus('mandatory')
xldv20pmS3hPeriodEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hPeriodEndTime.setStatus('mandatory')
xldv20pmS3hNeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hNeErroredSeconds.setStatus('mandatory')
xldv20pmS3hFeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hFeErroredSeconds.setStatus('mandatory')
xldv20pmS3hNeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hNeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmS3hFeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hFeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmS3hNeCodeViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hNeCodeViolations.setStatus('mandatory')
xldv20pmS3hFeCodeViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hFeCodeViolations.setStatus('mandatory')
xldv20pmS3hNeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hNeUnavailableSeconds.setStatus('mandatory')
xldv20pmS3hFeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hFeUnavailableSeconds.setStatus('mandatory')
xldv20pmS3hNeSeverelyErroredFrameSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS3hNeSeverelyErroredFrameSeconds.setStatus('mandatory')
xldv20pmD3CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6), )
if mibBuilder.loadTexts: xldv20pmD3CurrentTable.setStatus('mandatory')
xldv20pmD3CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmD3cIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmD3cOAMLevel"))
if mibBuilder.loadTexts: xldv20pmD3CurrentEntry.setStatus('mandatory')
xldv20pmD3cIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cIntervalType.setStatus('mandatory')
xldv20pmD3cOAMLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cOAMLevel.setStatus('mandatory')
xldv20pmD3cAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 3), Xldv20AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmD3cAdminState.setStatus('mandatory')
xldv20pmD3cSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 4), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cSuspectFlag.setStatus('mandatory')
xldv20pmD3cHistEntrySize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cHistEntrySize.setStatus('mandatory')
xldv20pmD3cNrHistEntriesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNrHistEntriesAvailable.setStatus('mandatory')
xldv20pmD3cElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cElapsedTime.setStatus('mandatory')
xldv20pmD3cThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmD3cThresholdLimitIndex.setStatus('mandatory')
xldv20pmD3cNeErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeErroredSecondsCP.setStatus('mandatory')
xldv20pmD3cFeErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cFeErroredSecondsCP.setStatus('mandatory')
xldv20pmD3cNeErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeErroredSecondsPLCP.setStatus('mandatory')
xldv20pmD3cFeErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cFeErroredSecondsPLCP.setStatus('mandatory')
xldv20pmD3cNeSeverelyErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeSeverelyErroredSecondsCP.setStatus('mandatory')
xldv20pmD3cFeSeverelyErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cFeSeverelyErroredSecondsCP.setStatus('mandatory')
xldv20pmD3cNeSeverelyErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeSeverelyErroredSecondsPLCP.setStatus('mandatory')
xldv20pmD3cFeSeverelyErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cFeSeverelyErroredSecondsPLCP.setStatus('mandatory')
xldv20pmD3cNeCodeViolationsP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeCodeViolationsP.setStatus('mandatory')
xldv20pmD3cNeCodeViolationsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeCodeViolationsCP.setStatus('mandatory')
xldv20pmD3cFeCodeViolationsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cFeCodeViolationsCP.setStatus('mandatory')
xldv20pmD3cNeCodeViolationsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeCodeViolationsPLCP.setStatus('mandatory')
xldv20pmD3cFeCodeViolationsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cFeCodeViolationsPLCP.setStatus('mandatory')
xldv20pmD3cNeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeUnavailableSeconds.setStatus('mandatory')
xldv20pmD3cFeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cFeUnavailableSeconds.setStatus('mandatory')
xldv20pmD3cNeUnavailableSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeUnavailableSecondsPLCP.setStatus('mandatory')
xldv20pmD3cFeUnavailableSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cFeUnavailableSecondsPLCP.setStatus('mandatory')
xldv20pmD3cNeSas = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cNeSas.setStatus('mandatory')
xldv20pmD3cFeSas = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 6, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3cFeSas.setStatus('mandatory')
xldv20pmD3HistoryTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7), )
if mibBuilder.loadTexts: xldv20pmD3HistoryTable.setStatus('mandatory')
xldv20pmD3HistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmD3hIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmD3hOAMLevel"), (0, "XLDV20PM-MIB", "xldv20pmD3hHistEntryNr"))
if mibBuilder.loadTexts: xldv20pmD3HistoryEntry.setStatus('mandatory')
xldv20pmD3hIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hIntervalType.setStatus('mandatory')
xldv20pmD3hOAMLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hOAMLevel.setStatus('mandatory')
xldv20pmD3hHistEntryNr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hHistEntryNr.setStatus('mandatory')
xldv20pmD3hSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 4), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hSuspectFlag.setStatus('mandatory')
xldv20pmD3hPeriodEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hPeriodEndTime.setStatus('mandatory')
xldv20pmD3hNeErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeErroredSecondsCP.setStatus('mandatory')
xldv20pmD3hFeErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hFeErroredSecondsCP.setStatus('mandatory')
xldv20pmD3hNeErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeErroredSecondsPLCP.setStatus('mandatory')
xldv20pmD3hFeErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hFeErroredSecondsPLCP.setStatus('mandatory')
xldv20pmD3hNeSeverelyErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeSeverelyErroredSecondsCP.setStatus('mandatory')
xldv20pmD3hFeSeverelyErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hFeSeverelyErroredSecondsCP.setStatus('mandatory')
xldv20pmD3hNeSeverelyErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeSeverelyErroredSecondsPLCP.setStatus('mandatory')
xldv20pmD3hFeSeverelyErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hFeSeverelyErroredSecondsPLCP.setStatus('mandatory')
xldv20pmD3hNeCodeViolationsP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeCodeViolationsP.setStatus('mandatory')
xldv20pmD3hNeCodeViolationsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeCodeViolationsCP.setStatus('mandatory')
xldv20pmD3hFeCodeViolationsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hFeCodeViolationsCP.setStatus('mandatory')
xldv20pmD3hNeCodeViolationsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeCodeViolationsPLCP.setStatus('mandatory')
xldv20pmD3hFeCodeViolationsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hFeCodeViolationsPLCP.setStatus('mandatory')
xldv20pmD3hNeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeUnavailableSeconds.setStatus('mandatory')
xldv20pmD3hFeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hFeUnavailableSeconds.setStatus('mandatory')
xldv20pmD3hNeUnavailableSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeUnavailableSecondsPLCP.setStatus('mandatory')
xldv20pmD3hFeUnavailableSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hFeUnavailableSecondsPLCP.setStatus('mandatory')
xldv20pmD3hNeSas = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hNeSas.setStatus('mandatory')
xldv20pmD3hFeSas = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 7, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmD3hFeSas.setStatus('mandatory')
xldv20pmS1CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8), )
if mibBuilder.loadTexts: xldv20pmS1CurrentTable.setStatus('mandatory')
xldv20pmS1CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmS1cIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmS1cOAMLevel"))
if mibBuilder.loadTexts: xldv20pmS1CurrentEntry.setStatus('mandatory')
xldv20pmS1cIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cIntervalType.setStatus('mandatory')
xldv20pmS1cOAMLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cOAMLevel.setStatus('mandatory')
xldv20pmS1cAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 3), Xldv20AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmS1cAdminState.setStatus('mandatory')
xldv20pmS1cSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 4), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cSuspectFlag.setStatus('mandatory')
xldv20pmS1cHistEntrySize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cHistEntrySize.setStatus('mandatory')
xldv20pmS1cNrHistEntriesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cNrHistEntriesAvailable.setStatus('mandatory')
xldv20pmS1cElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cElapsedTime.setStatus('mandatory')
xldv20pmS1cThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmS1cThresholdLimitIndex.setStatus('mandatory')
xldv20pmS1cNeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cNeErroredSeconds.setStatus('mandatory')
xldv20pmS1cFeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cFeErroredSeconds.setStatus('mandatory')
xldv20pmS1cNeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cNeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmS1cFeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cFeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmS1cNeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cNeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmS1cFeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cFeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmS1cNeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cNeUnavailableSeconds.setStatus('mandatory')
xldv20pmS1cFeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cFeUnavailableSeconds.setStatus('mandatory')
xldv20pmS1cNeOfsSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cNeOfsSeconds.setStatus('mandatory')
xldv20pmS1cNeAisSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cNeAisSeconds.setStatus('mandatory')
xldv20pmS1cNeLosSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 8, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1cNeLosSeconds.setStatus('mandatory')
xldv20pmS1HistoryTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9), )
if mibBuilder.loadTexts: xldv20pmS1HistoryTable.setStatus('mandatory')
xldv20pmS1HistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmS1hIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmS1hOAMLevel"), (0, "XLDV20PM-MIB", "xldv20pmS1hHistEntryNr"))
if mibBuilder.loadTexts: xldv20pmS1HistoryEntry.setStatus('mandatory')
xldv20pmS1hIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hIntervalType.setStatus('mandatory')
xldv20pmS1hOAMLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hOAMLevel.setStatus('mandatory')
xldv20pmS1hHistEntryNr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hHistEntryNr.setStatus('mandatory')
xldv20pmS1hSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 4), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hSuspectFlag.setStatus('mandatory')
xldv20pmS1hPeriodEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hPeriodEndTime.setStatus('mandatory')
xldv20pmS1hNeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hNeErroredSeconds.setStatus('mandatory')
xldv20pmS1hFeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hFeErroredSeconds.setStatus('mandatory')
xldv20pmS1hNeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hNeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmS1hFeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hFeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmS1hNeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hNeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmS1hFeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hFeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmS1hNeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hNeUnavailableSeconds.setStatus('mandatory')
xldv20pmS1hFeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hFeUnavailableSeconds.setStatus('mandatory')
xldv20pmS1hNeOfsSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hNeOfsSeconds.setStatus('mandatory')
xldv20pmS1hNeAisSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hNeAisSeconds.setStatus('mandatory')
xldv20pmS1hNeLosSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 9, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmS1hNeLosSeconds.setStatus('mandatory')
xldv20pmAtmObjectsTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 10), )
if mibBuilder.loadTexts: xldv20pmAtmObjectsTable.setStatus('mandatory')
xldv20pmAtmObjectsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 10, 1), ).setIndexNames((0, "XLDV20PM-MIB", "xldv20pmAoIndex"))
if mibBuilder.loadTexts: xldv20pmAtmObjectsEntry.setStatus('mandatory')
xldv20pmAoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAoIndex.setStatus('mandatory')
xldv20pmAoFlowType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 10, 1, 2), Xldv20pmFlowType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAoFlowType.setStatus('mandatory')
xldv20pmAoAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 10, 1, 3), Xldv20AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAoAdminState.setStatus('mandatory')
xldv20pmAoBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 10, 1, 4), Xldv20pmBlockSizeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAoBlockSize.setStatus('mandatory')
xldv20pmAtmEndpointsTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 11), )
if mibBuilder.loadTexts: xldv20pmAtmEndpointsTable.setStatus('mandatory')
xldv20pmAtmEndpointsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 11, 1), ).setIndexNames((0, "XLDV20PM-MIB", "xldv20pmAoIndex"), (0, "XLDV20PM-MIB", "xldv20pmAeEndpointType"))
if mibBuilder.loadTexts: xldv20pmAtmEndpointsEntry.setStatus('mandatory')
xldv20pmAeEndpointType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 11, 1, 1), Xldv20pmEndpointType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAeEndpointType.setStatus('mandatory')
xldv20pmAeConnectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAeConnectionIndex.setStatus('mandatory')
xldv20pmAeConnectionIndexType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 11, 1, 3), Xldv20pmConnectionIndexType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAeConnectionIndexType.setStatus('mandatory')
xldv20pmAeRole = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 11, 1, 4), Xldv20pmRoleType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAeRole.setStatus('mandatory')
xldv20pmAeFlowDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 11, 1, 5), Xldv20FlowDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAeFlowDirection.setStatus('mandatory')
xldv20pmAtmCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12), )
if mibBuilder.loadTexts: xldv20pmAtmCurrentTable.setStatus('mandatory')
xldv20pmAtmCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1), ).setIndexNames((0, "XLDV20PM-MIB", "xldv20pmAoIndex"), (0, "XLDV20PM-MIB", "xldv20pmAcIntervalType"))
if mibBuilder.loadTexts: xldv20pmAtmCurrentEntry.setStatus('mandatory')
xldv20pmAcIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcIntervalType.setStatus('mandatory')
xldv20pmAcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 2), Xldv20AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcAdminState.setStatus('mandatory')
xldv20pmAcSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 3), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcSuspectFlag.setStatus('mandatory')
xldv20pmAcHistEntrySize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcHistEntrySize.setStatus('mandatory')
xldv20pmAcNrHistEntriesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcNrHistEntriesAvailable.setStatus('mandatory')
xldv20pmAcElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcElapsedTime.setStatus('mandatory')
xldv20pmAcThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAcThresholdLimitIndex.setStatus('mandatory')
xldv20pmAcTransmittedUserCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcTransmittedUserCells.setStatus('mandatory')
xldv20pmAcLostUserCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcLostUserCells.setStatus('mandatory')
xldv20pmAcMisinsertedUserCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAcMisinsertedUserCells.setStatus('mandatory')
xldv20pmAtmHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 13), )
if mibBuilder.loadTexts: xldv20pmAtmHistoryTable.setStatus('mandatory')
xldv20pmAtmHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 13, 1), ).setIndexNames((0, "XLDV20PM-MIB", "xldv20pmAoIndex"), (0, "XLDV20PM-MIB", "xldv20pmAhIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmAhHistEntryNr"))
if mibBuilder.loadTexts: xldv20pmAtmHistoryEntry.setStatus('mandatory')
xldv20pmAhIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 13, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAhIntervalType.setStatus('mandatory')
xldv20pmAhHistEntryNr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAhHistEntryNr.setStatus('mandatory')
xldv20pmAhSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 13, 1, 3), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAhSuspectFlag.setStatus('mandatory')
xldv20pmAhPeriodEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAhPeriodEndTime.setStatus('mandatory')
xldv20pmAhTransmittedUserCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAhTransmittedUserCells.setStatus('mandatory')
xldv20pmAhLostUserCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAhLostUserCells.setStatus('mandatory')
xldv20pmAhMisinsertedUserCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAhMisinsertedUserCells.setStatus('mandatory')
xldv20pmImaGroupCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14), )
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentTable.setStatus('mandatory')
xldv20pmImaGroupCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmImaGroupCurrentIntervalType"))
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentEntry.setStatus('mandatory')
xldv20pmImaGroupCurrentIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentIntervalType.setStatus('mandatory')
xldv20pmImaGroupCurrentAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1, 2), Xldv20AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentAdminState.setStatus('mandatory')
xldv20pmImaGroupCurrentSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1, 3), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentSuspectFlag.setStatus('mandatory')
xldv20pmImaGroupCurrentHistEntrySize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentHistEntrySize.setStatus('mandatory')
xldv20pmImaGroupCurrentNrHistEntriesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentNrHistEntriesAvailable.setStatus('mandatory')
xldv20pmImaGroupCurrentElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentElapsedTime.setStatus('mandatory')
xldv20pmImaGroupCurrentThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentThresholdLimitIndex.setStatus('mandatory')
xldv20pmImaGroupCurrentUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentUnavailSecs.setStatus('mandatory')
xldv20pmImaGroupCurrentNeNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 14, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupCurrentNeNumFailures.setStatus('mandatory')
xldv20pmImaGroupHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 15), )
if mibBuilder.loadTexts: xldv20pmImaGroupHistoryTable.setStatus('mandatory')
xldv20pmImaGroupHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 15, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmImaGroupHistoryIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmImaGroupHistoryHistEntryNr"))
if mibBuilder.loadTexts: xldv20pmImaGroupHistoryEntry.setStatus('mandatory')
xldv20pmImaGroupHistoryIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 15, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupHistoryIntervalType.setStatus('mandatory')
xldv20pmImaGroupHistoryHistEntryNr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupHistoryHistEntryNr.setStatus('mandatory')
xldv20pmImaGroupHistorySuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 15, 1, 3), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupHistorySuspectFlag.setStatus('mandatory')
xldv20pmImaGroupHistoryPeriodEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupHistoryPeriodEndTime.setStatus('mandatory')
xldv20pmImaGroupHistoryUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 15, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupHistoryUnavailSecs.setStatus('mandatory')
xldv20pmImaGroupHistoryNeNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 15, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaGroupHistoryNeNumFailures.setStatus('mandatory')
xldv20pmImaLinkCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16), )
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentTable.setStatus('mandatory')
xldv20pmImaLinkCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmImaLinkCurrentIntervalType"))
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentEntry.setStatus('mandatory')
xldv20pmImaLinkCurrentIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentIntervalType.setStatus('mandatory')
xldv20pmImaLinkCurrentAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 2), Xldv20AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentAdminState.setStatus('mandatory')
xldv20pmImaLinkCurrentSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 3), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentSuspectFlag.setStatus('mandatory')
xldv20pmImaLinkCurrentHistEntrySize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentHistEntrySize.setStatus('mandatory')
xldv20pmImaLinkCurrentNrHistEntriesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentNrHistEntriesAvailable.setStatus('mandatory')
xldv20pmImaLinkCurrentElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentElapsedTime.setStatus('mandatory')
xldv20pmImaLinkCurrentThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentThresholdLimitIndex.setStatus('mandatory')
xldv20pmImaLinkCurrentImaViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentImaViolations.setStatus('mandatory')
xldv20pmImaLinkCurrentOifAnomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentOifAnomalies.setStatus('mandatory')
xldv20pmImaLinkCurrentNeSevErroredSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentNeSevErroredSecs.setStatus('mandatory')
xldv20pmImaLinkCurrentFeSevErroredSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentFeSevErroredSecs.setStatus('mandatory')
xldv20pmImaLinkCurrentNeUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentNeUnavailSecs.setStatus('mandatory')
xldv20pmImaLinkCurrentFeUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentFeUnavailSecs.setStatus('mandatory')
xldv20pmImaLinkCurrentNeTxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentNeTxUnusableSecs.setStatus('mandatory')
xldv20pmImaLinkCurrentNeRxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentNeRxUnusableSecs.setStatus('mandatory')
xldv20pmImaLinkCurrentFeTxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentFeTxUnusableSecs.setStatus('mandatory')
xldv20pmImaLinkCurrentFeRxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentFeRxUnusableSecs.setStatus('mandatory')
xldv20pmImaLinkCurrentNeTxNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentNeTxNumFailures.setStatus('mandatory')
xldv20pmImaLinkCurrentNeRxNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 16, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkCurrentNeRxNumFailures.setStatus('mandatory')
xldv20pmImaLinkHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17), )
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryTable.setStatus('mandatory')
xldv20pmImaLinkHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmImaLinkHistoryIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmImaLinkHistoryHistEntryNr"))
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryEntry.setStatus('mandatory')
xldv20pmImaLinkHistoryIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryIntervalType.setStatus('mandatory')
xldv20pmImaLinkHistoryHistEntryNr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryHistEntryNr.setStatus('mandatory')
xldv20pmImaLinkHistorySuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 3), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistorySuspectFlag.setStatus('mandatory')
xldv20pmImaLinkHistoryPeriodEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryPeriodEndTime.setStatus('mandatory')
xldv20pmImaLinkHistoryImaViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryImaViolations.setStatus('mandatory')
xldv20pmImaLinkHistoryOifAnomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryOifAnomalies.setStatus('mandatory')
xldv20pmImaLinkHistoryNeSevErroredSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryNeSevErroredSecs.setStatus('mandatory')
xldv20pmImaLinkHistoryFeSevErroredSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryFeSevErroredSecs.setStatus('mandatory')
xldv20pmImaLinkHistoryNeUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryNeUnavailSecs.setStatus('mandatory')
xldv20pmImaLinkHistoryFeUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryFeUnavailSecs.setStatus('mandatory')
xldv20pmImaLinkHistoryNeTxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryNeTxUnusableSecs.setStatus('mandatory')
xldv20pmImaLinkHistoryNeRxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryNeRxUnusableSecs.setStatus('mandatory')
xldv20pmImaLinkHistoryFeTxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryFeTxUnusableSecs.setStatus('mandatory')
xldv20pmImaLinkHistoryFeRxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryFeRxUnusableSecs.setStatus('mandatory')
xldv20pmImaLinkHistoryNeTxNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryNeTxNumFailures.setStatus('mandatory')
xldv20pmImaLinkHistoryNeRxNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 2, 17, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmImaLinkHistoryNeRxNumFailures.setStatus('mandatory')
xldv20pmTcaPrMCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1), )
if mibBuilder.loadTexts: xldv20pmTcaPrMCurrentTable.setStatus('mandatory')
xldv20pmTcaPrMCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmTcIntervalType"))
if mibBuilder.loadTexts: xldv20pmTcaPrMCurrentEntry.setStatus('mandatory')
xldv20pmTcIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmTcIntervalType.setStatus('mandatory')
xldv20pmTcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1, 1, 2), Xldv20AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmTcAdminState.setStatus('mandatory')
xldv20pmTcSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1, 1, 3), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmTcSuspectFlag.setStatus('mandatory')
xldv20pmTcHistEntrySize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmTcHistEntrySize.setStatus('mandatory')
xldv20pmTcNrHistEntriesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmTcNrHistEntriesAvailable.setStatus('mandatory')
xldv20pmTcElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmTcElapsedTime.setStatus('mandatory')
xldv20pmTcThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmTcThresholdLimitIndex.setStatus('mandatory')
xldv20pmTcDiscardedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmTcDiscardedCells.setStatus('mandatory')
xldv20pmTcaPrMHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 2), )
if mibBuilder.loadTexts: xldv20pmTcaPrMHistoryTable.setStatus('mandatory')
xldv20pmTcaPrMHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 2, 1), ).setIndexNames((0, "XLDV20-MIB", "xldv20IfIndex"), (0, "XLDV20PM-MIB", "xldv20pmThIntervalType"), (0, "XLDV20PM-MIB", "xldv20pmThHistEntryNr"))
if mibBuilder.loadTexts: xldv20pmTcaPrMHistoryEntry.setStatus('mandatory')
xldv20pmThIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 2, 1, 1), Xldv20pmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmThIntervalType.setStatus('mandatory')
xldv20pmThHistEntryNr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmThHistEntryNr.setStatus('mandatory')
xldv20pmThSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 2, 1, 3), Xldv20pmSuspectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmThSuspectFlag.setStatus('mandatory')
xldv20pmThPeriodEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmThPeriodEndTime.setStatus('mandatory')
xldv20pmThDiscardedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmThDiscardedCells.setStatus('mandatory')
xldv20pmThresholdLimitTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1), )
if mibBuilder.loadTexts: xldv20pmThresholdLimitTable.setStatus('mandatory')
xldv20pmThresholdLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1), ).setIndexNames((0, "XLDV20PM-MIB", "xldv20pmThlThresholdLimitIndex"))
if mibBuilder.loadTexts: xldv20pmThresholdLimitEntry.setStatus('mandatory')
xldv20pmThlThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmThlThresholdLimitIndex.setStatus('mandatory')
xldv20pmThlNeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmThlNeCodeViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeCodeViolations.setStatus('mandatory')
xldv20pmThlNeCodeViolationsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeCodeViolationsCP.setStatus('mandatory')
xldv20pmThlNeCodeViolationsP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeCodeViolationsP.setStatus('mandatory')
xldv20pmThlNeCodeViolationsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeCodeViolationsPLCP.setStatus('mandatory')
xldv20pmThlNeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeErroredSeconds.setStatus('mandatory')
xldv20pmThlNeErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeErroredSecondsCP.setStatus('mandatory')
xldv20pmThlNeErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeErroredSecondsPLCP.setStatus('mandatory')
xldv20pmThlNeSas = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeSas.setStatus('mandatory')
xldv20pmThlNeSeverelyErroredFrameSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeSeverelyErroredFrameSeconds.setStatus('mandatory')
xldv20pmThlNeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmThlNeSeverelyErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeSeverelyErroredSecondsCP.setStatus('mandatory')
xldv20pmThlNeSeverelyErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeSeverelyErroredSecondsPLCP.setStatus('mandatory')
xldv20pmThlNeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeUnavailableSeconds.setStatus('mandatory')
xldv20pmThlNeUnavailableSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeUnavailableSecondsPLCP.setStatus('mandatory')
xldv20pmThlNeAisSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeAisSeconds.setStatus('mandatory')
xldv20pmThlNeOfsSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeOfsSeconds.setStatus('mandatory')
xldv20pmThlNeLosSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlNeLosSeconds.setStatus('mandatory')
xldv20pmThlFeBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeBackgroundBlockErrors.setStatus('mandatory')
xldv20pmThlFeCodeViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeCodeViolations.setStatus('mandatory')
xldv20pmThlFeCodeViolationsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeCodeViolationsCP.setStatus('mandatory')
xldv20pmThlFeCodeViolationsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeCodeViolationsPLCP.setStatus('mandatory')
xldv20pmThlFeErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeErroredSeconds.setStatus('mandatory')
xldv20pmThlFeErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeErroredSecondsCP.setStatus('mandatory')
xldv20pmThlFeErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeErroredSecondsPLCP.setStatus('mandatory')
xldv20pmThlFeSas = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeSas.setStatus('mandatory')
xldv20pmThlFeSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeSeverelyErroredSeconds.setStatus('mandatory')
xldv20pmThlFeSeverelyErroredSecondsCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeSeverelyErroredSecondsCP.setStatus('mandatory')
xldv20pmThlFeSeverelyErroredSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeSeverelyErroredSecondsPLCP.setStatus('mandatory')
xldv20pmThlFeUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeUnavailableSeconds.setStatus('mandatory')
xldv20pmThlFeUnavailableSecondsPLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlFeUnavailableSecondsPLCP.setStatus('mandatory')
xldv20pmThlDiscardedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlDiscardedCells.setStatus('mandatory')
xldv20pmThlImaGroupUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaGroupUnavailSecs.setStatus('mandatory')
xldv20pmThlImaGroupNeNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaGroupNeNumFailures.setStatus('mandatory')
xldv20pmThlImaLinkImaViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkImaViolations.setStatus('mandatory')
xldv20pmThlImaLinkOifAnomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkOifAnomalies.setStatus('mandatory')
xldv20pmThlImaLinkNeSevErroredSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkNeSevErroredSecs.setStatus('mandatory')
xldv20pmThlImaLinkFeSevErroredSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkFeSevErroredSecs.setStatus('mandatory')
xldv20pmThlImaLinkNeUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkNeUnavailSecs.setStatus('mandatory')
xldv20pmThlImaLinkFeUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkFeUnavailSecs.setStatus('mandatory')
xldv20pmThlImaLinkNeTxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkNeTxUnusableSecs.setStatus('mandatory')
xldv20pmThlImaLinkNeRxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkNeRxUnusableSecs.setStatus('mandatory')
xldv20pmThlImaLinkFeTxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkFeTxUnusableSecs.setStatus('mandatory')
xldv20pmThlImaLinkFeRxUnusableSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkFeRxUnusableSecs.setStatus('mandatory')
xldv20pmThlImaLinkNeTxNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkNeTxNumFailures.setStatus('mandatory')
xldv20pmThlImaLinkNeRxNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmThlImaLinkNeRxNumFailures.setStatus('mandatory')
xldv20pmAtmThresholdLimitTable = MibTable((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 2), )
if mibBuilder.loadTexts: xldv20pmAtmThresholdLimitTable.setStatus('mandatory')
xldv20pmAtmThresholdLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 2, 1), ).setIndexNames((0, "XLDV20PM-MIB", "xldv20pmAtlThresholdLimitIndex"))
if mibBuilder.loadTexts: xldv20pmAtmThresholdLimitEntry.setStatus('mandatory')
xldv20pmAtlThresholdLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xldv20pmAtlThresholdLimitIndex.setStatus('mandatory')
xldv20pmAtlTransmittedUserCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAtlTransmittedUserCells.setStatus('mandatory')
xldv20pmAtlLostUserCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAtlLostUserCells.setStatus('mandatory')
xldv20pmAtlMisinsertedUserCells = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xldv20pmAtlMisinsertedUserCells.setStatus('mandatory')
xldv20pmTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1))
xldv20pmTvIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1, 1), Unsigned16())
if mibBuilder.loadTexts: xldv20pmTvIfIndex.setStatus('mandatory')
xldv20pmTvPmType = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1, 2), Xldv20pmType())
if mibBuilder.loadTexts: xldv20pmTvPmType.setStatus('mandatory')
xldv20pmTvPmCounter = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1, 3), Xldv20pmCounterName())
if mibBuilder.loadTexts: xldv20pmTvPmCounter.setStatus('mandatory')
xldv20pmTvCurrentCounterValue = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1, 4), Counter32())
if mibBuilder.loadTexts: xldv20pmTvCurrentCounterValue.setStatus('mandatory')
xldv20pmTvCurrentCounterLimit = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1, 5), Counter32())
if mibBuilder.loadTexts: xldv20pmTvCurrentCounterLimit.setStatus('mandatory')
xldv20pmTvAtmPmCounter = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1, 6), Xldv20pmAtmCounterType())
if mibBuilder.loadTexts: xldv20pmTvAtmPmCounter.setStatus('mandatory')
xldv20pmTvAtmObjectIndex = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1, 7), Unsigned16())
if mibBuilder.loadTexts: xldv20pmTvAtmObjectIndex.setStatus('mandatory')
xldv20pmTvEndpointType = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1, 8), Xldv20pmEndpointType())
if mibBuilder.loadTexts: xldv20pmTvEndpointType.setStatus('mandatory')
xldv20pmTvIntervalType = MibScalar((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 1, 9), Xldv20pmIntervalType())
if mibBuilder.loadTexts: xldv20pmTvIntervalType.setStatus('mandatory')
xldv20pmTrapTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 5, 5, 2))
xldv20pmTrThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 4, 10) + (0,200)).setObjects(("XLDV20-MIB", "xldv20TvTimeAndDate"), ("XLDV20PM-MIB", "xldv20pmTvIfIndex"), ("XLDV20PM-MIB", "xldv20pmTvPmType"), ("XLDV20PM-MIB", "xldv20pmTvPmCounter"), ("XLDV20PM-MIB", "xldv20pmTvIntervalType"), ("XLDV20PM-MIB", "xldv20pmTvCurrentCounterValue"), ("XLDV20PM-MIB", "xldv20pmTvCurrentCounterLimit"))
xldv20pmTrAtmThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 4, 10) + (0,300)).setObjects(("XLDV20-MIB", "xldv20TvTimeAndDate"), ("XLDV20PM-MIB", "xldv20pmTvAtmObjectIndex"), ("XLDV20PM-MIB", "xldv20pmTvAtmPmCounter"), ("XLDV20PM-MIB", "xldv20pmTvIntervalType"), ("XLDV20PM-MIB", "xldv20pmTvCurrentCounterValue"), ("XLDV20PM-MIB", "xldv20pmTvCurrentCounterLimit"))
xldv20pmTrAtmObjectCreation = NotificationType((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 4, 10) + (0,302)).setObjects(("XLDV20-MIB", "xldv20TvTimeAndDate"), ("XLDV20PM-MIB", "xldv20pmTvAtmObjectIndex"))
xldv20pmTrAtmObjectDeletion = NotificationType((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 4, 10) + (0,303)).setObjects(("XLDV20-MIB", "xldv20TvTimeAndDate"), ("XLDV20PM-MIB", "xldv20pmTvAtmObjectIndex"))
xldv20pmTrAtmEndpointObjectCreation = NotificationType((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 4, 10) + (0,304)).setObjects(("XLDV20-MIB", "xldv20TvTimeAndDate"), ("XLDV20PM-MIB", "xldv20pmTvAtmObjectIndex"), ("XLDV20PM-MIB", "xldv20pmTvEndpointType"))
xldv20pmTrAtmEndpointObjectDeletion = NotificationType((1, 3, 6, 1, 4, 1, 231, 7, 1, 2, 1, 1, 4, 10) + (0,305)).setObjects(("XLDV20-MIB", "xldv20TvTimeAndDate"), ("XLDV20PM-MIB", "xldv20pmTvAtmObjectIndex"), ("XLDV20PM-MIB", "xldv20pmTvEndpointType"))
mibBuilder.exportSymbols("XLDV20PM-MIB", xldv20pmAcoRemainingHistoryEntriesSize=xldv20pmAcoRemainingHistoryEntriesSize, xldv20pmAtmThresholdLimitTable=xldv20pmAtmThresholdLimitTable, xldv20pmAcoEndpointType=xldv20pmAcoEndpointType, xldv20pmAcoControlStatus=xldv20pmAcoControlStatus, xldv20pmS3cNeSeverelyErroredSeconds=xldv20pmS3cNeSeverelyErroredSeconds, xldv20pmImaLinkHistoryImaViolations=xldv20pmImaLinkHistoryImaViolations, xldv20pmS3cAdminState=xldv20pmS3cAdminState, Xldv20pmEndpointType=Xldv20pmEndpointType, xldv20pmImaGroupHistoryPeriodEndTime=xldv20pmImaGroupHistoryPeriodEndTime, xldv20pmImaLinkHistoryIntervalType=xldv20pmImaLinkHistoryIntervalType, xldv20pmAeConnectionIndexType=xldv20pmAeConnectionIndexType, xldv20pmImaLinkHistoryHistEntryNr=xldv20pmImaLinkHistoryHistEntryNr, xldv20pmThlNeErroredSeconds=xldv20pmThlNeErroredSeconds, xldv20pmCcElapsedTime=xldv20pmCcElapsedTime, xldv20pmThlFeUnavailableSeconds=xldv20pmThlFeUnavailableSeconds, xldv20pmImaLinkCurrentFeUnavailSecs=xldv20pmImaLinkCurrentFeUnavailSecs, xldv20pmS1cFeErroredSeconds=xldv20pmS1cFeErroredSeconds, xldv20pmS1cIntervalType=xldv20pmS1cIntervalType, xldv20pmAoAdminState=xldv20pmAoAdminState, xldv20pmS3cSuspectFlag=xldv20pmS3cSuspectFlag, xldv20pmS1cNrHistEntriesAvailable=xldv20pmS1cNrHistEntriesAvailable, xldv20pmImaLinkCurrentAdminState=xldv20pmImaLinkCurrentAdminState, xldv20pmCoControlStatus=xldv20pmCoControlStatus, xldv20pmD3cFeSas=xldv20pmD3cFeSas, xldv20pmAcTransmittedUserCells=xldv20pmAcTransmittedUserCells, xldv20pmTcElapsedTime=xldv20pmTcElapsedTime, xldv20pmAcThresholdLimitIndex=xldv20pmAcThresholdLimitIndex, xldv20pmImaLinkCurrentIntervalType=xldv20pmImaLinkCurrentIntervalType, xldv20pmD3cFeCodeViolationsCP=xldv20pmD3cFeCodeViolationsCP, xldv20pmTrAtmEndpointObjectDeletion=xldv20pmTrAtmEndpointObjectDeletion, xldv20Pm=xldv20Pm, xldv20pmAtmHistoryEntry=xldv20pmAtmHistoryEntry, xldv20pmTrapVars=xldv20pmTrapVars, Xldv20pmBlockSizeType=Xldv20pmBlockSizeType, xldv20pmThlNeCodeViolationsPLCP=xldv20pmThlNeCodeViolationsPLCP, xldv20pmD3cNeCodeViolationsP=xldv20pmD3cNeCodeViolationsP, xldv20pmCcFeErroredSeconds=xldv20pmCcFeErroredSeconds, xldv20pmImaLinkHistoryNeRxUnusableSecs=xldv20pmImaLinkHistoryNeRxUnusableSecs, xldv20pmThlFeErroredSeconds=xldv20pmThlFeErroredSeconds, xldv20pmImaLinkCurrentNeTxNumFailures=xldv20pmImaLinkCurrentNeTxNumFailures, xldv20pmImaLinkCurrentTable=xldv20pmImaLinkCurrentTable, xldv20pmAcoFlowDirection=xldv20pmAcoFlowDirection, xldv20pmAhLostUserCells=xldv20pmAhLostUserCells, xldv20pmPerformanceMonitoring=xldv20pmPerformanceMonitoring, xldv20pmS3cFeSeverelyErroredSeconds=xldv20pmS3cFeSeverelyErroredSeconds, xldv20pmTvPmType=xldv20pmTvPmType, xldv20pmAhSuspectFlag=xldv20pmAhSuspectFlag, xldv20pmTcaPrMHistoryTable=xldv20pmTcaPrMHistoryTable, xldv20pmImaGroupCurrentEntry=xldv20pmImaGroupCurrentEntry, xldv20pmS3cNeUnavailableSeconds=xldv20pmS3cNeUnavailableSeconds, xldv20pmImaLinkCurrentFeSevErroredSecs=xldv20pmImaLinkCurrentFeSevErroredSecs, xldv20pmAcIntervalType=xldv20pmAcIntervalType, xldv20pmS3hFeSeverelyErroredSeconds=xldv20pmS3hFeSeverelyErroredSeconds, xldv20pmAcoIndex=xldv20pmAcoIndex, xldv20pmCommonCurrentEntry=xldv20pmCommonCurrentEntry, xldv20pmImaGroupHistoryUnavailSecs=xldv20pmImaGroupHistoryUnavailSecs, xldv20pmTvEndpointType=xldv20pmTvEndpointType, xldv20pmD3hFeErroredSecondsPLCP=xldv20pmD3hFeErroredSecondsPLCP, xldv20pmS1hNeAisSeconds=xldv20pmS1hNeAisSeconds, xldv20pmChNeSeverelyErroredSeconds=xldv20pmChNeSeverelyErroredSeconds, xldv20pmImaGroupHistorySuspectFlag=xldv20pmImaGroupHistorySuspectFlag, xldv20pmCoNrHistEntriesSize=xldv20pmCoNrHistEntriesSize, xldv20pmThlImaGroupNeNumFailures=xldv20pmThlImaGroupNeNumFailures, xldv20pmProtocolMonitoring=xldv20pmProtocolMonitoring, xldv20pmImaLinkHistoryEntry=xldv20pmImaLinkHistoryEntry, xldv20pmD3cAdminState=xldv20pmD3cAdminState, xldv20pmChSuspectFlag=xldv20pmChSuspectFlag, xldv20pmS1hFeErroredSeconds=xldv20pmS1hFeErroredSeconds, xldv20pmD3hNeSeverelyErroredSecondsPLCP=xldv20pmD3hNeSeverelyErroredSecondsPLCP, xldv20pmAhTransmittedUserCells=xldv20pmAhTransmittedUserCells, xldv20pmThlNeErroredSecondsPLCP=xldv20pmThlNeErroredSecondsPLCP, xldv20pmS3hOAMLevel=xldv20pmS3hOAMLevel, xldv20pmD3cNeErroredSecondsCP=xldv20pmD3cNeErroredSecondsCP, xldv20pmAeFlowDirection=xldv20pmAeFlowDirection, xldv20pmAcHistEntrySize=xldv20pmAcHistEntrySize, xldv20pmS3hNeUnavailableSeconds=xldv20pmS3hNeUnavailableSeconds, xldv20pmS1hFeUnavailableSeconds=xldv20pmS1hFeUnavailableSeconds, xldv20pmCoOAMLevel=xldv20pmCoOAMLevel, xldv20pmImaLinkHistoryNeTxUnusableSecs=xldv20pmImaLinkHistoryNeTxUnusableSecs, xldv20pmTrAtmThresholdCrossingAlert=xldv20pmTrAtmThresholdCrossingAlert, xldv20pmChNeErroredSeconds=xldv20pmChNeErroredSeconds, xldv20pmS3cHistEntrySize=xldv20pmS3cHistEntrySize, xldv20pmImaLinkHistoryNeUnavailSecs=xldv20pmImaLinkHistoryNeUnavailSecs, xldv20pmThlFeErroredSecondsPLCP=xldv20pmThlFeErroredSecondsPLCP, xldv20pmThlNeSas=xldv20pmThlNeSas, xldv20pmImaGroupCurrentIntervalType=xldv20pmImaGroupCurrentIntervalType, xldv20pmS1cNeOfsSeconds=xldv20pmS1cNeOfsSeconds, xldv20pmAcoControlReqResult=xldv20pmAcoControlReqResult, xldv20pmThIntervalType=xldv20pmThIntervalType, xldv20pmAcoRole=xldv20pmAcoRole, xldv20pmAcoControlReq=xldv20pmAcoControlReq, xldv20pmS3hFeCodeViolations=xldv20pmS3hFeCodeViolations, xldv20pmAoIndex=xldv20pmAoIndex, xldv20pmImaGroupCurrentElapsedTime=xldv20pmImaGroupCurrentElapsedTime, xldv20pmCoControlTimeStamp=xldv20pmCoControlTimeStamp, xldv20pmTcSuspectFlag=xldv20pmTcSuspectFlag, xldv20pmCcNeSeverelyErroredSeconds=xldv20pmCcNeSeverelyErroredSeconds, xldv20pmImaLinkCurrentFeRxUnusableSecs=xldv20pmImaLinkCurrentFeRxUnusableSecs, xldv20pmTrAtmObjectDeletion=xldv20pmTrAtmObjectDeletion, xldv20pmThresholdLimitEntry=xldv20pmThresholdLimitEntry, xldv20pmThlFeSas=xldv20pmThlFeSas, xldv20pmD3HistoryTable=xldv20pmD3HistoryTable, xldv20pmAtlLostUserCells=xldv20pmAtlLostUserCells, xldv20pmS3cOAMLevel=xldv20pmS3cOAMLevel, xldv20pmCcThresholdLimitIndex=xldv20pmCcThresholdLimitIndex, xldv20pmS1hFeSeverelyErroredSeconds=xldv20pmS1hFeSeverelyErroredSeconds, xldv20pmCcFeBackgroundBlockErrors=xldv20pmCcFeBackgroundBlockErrors, xldv20pmS1hHistEntryNr=xldv20pmS1hHistEntryNr, xldv20pmImaGroupHistoryHistEntryNr=xldv20pmImaGroupHistoryHistEntryNr, xldv20pmThlFeSeverelyErroredSecondsPLCP=xldv20pmThlFeSeverelyErroredSecondsPLCP, Xldv20pmAtmCounterType=Xldv20pmAtmCounterType, xldv20pmD3cNeCodeViolationsCP=xldv20pmD3cNeCodeViolationsCP, xldv20pmD3cNeCodeViolationsPLCP=xldv20pmD3cNeCodeViolationsPLCP, xldv20pmThlNeSeverelyErroredSecondsCP=xldv20pmThlNeSeverelyErroredSecondsCP, xldv20pmAcLostUserCells=xldv20pmAcLostUserCells, xldv20pmS3cElapsedTime=xldv20pmS3cElapsedTime, xldv20pmTrAtmEndpointObjectCreation=xldv20pmTrAtmEndpointObjectCreation, Xldv20pmRoleType=Xldv20pmRoleType, xldv20pmChOAMLevel=xldv20pmChOAMLevel, xldv20pmChPeriodEndTime=xldv20pmChPeriodEndTime, xldv20pmChFeSeverelyErroredSeconds=xldv20pmChFeSeverelyErroredSeconds, xldv20pmImaLinkHistoryFeTxUnusableSecs=xldv20pmImaLinkHistoryFeTxUnusableSecs, xldv20pmImaLinkCurrentHistEntrySize=xldv20pmImaLinkCurrentHistEntrySize, xldv20pmS1cOAMLevel=xldv20pmS1cOAMLevel, xldv20pmThlImaLinkFeRxUnusableSecs=xldv20pmThlImaLinkFeRxUnusableSecs, xldv20pmImaLinkHistoryFeRxUnusableSecs=xldv20pmImaLinkHistoryFeRxUnusableSecs, xldv20pmImaLinkHistoryNeSevErroredSecs=xldv20pmImaLinkHistoryNeSevErroredSecs, xldv20pmChFeErroredSeconds=xldv20pmChFeErroredSeconds, xldv20pmChHistEntryNr=xldv20pmChHistEntryNr, xldv20pmD3hFeSeverelyErroredSecondsCP=xldv20pmD3hFeSeverelyErroredSecondsCP, xldv20pmD3hNeCodeViolationsP=xldv20pmD3hNeCodeViolationsP, xldv20pmImaGroupCurrentHistEntrySize=xldv20pmImaGroupCurrentHistEntrySize, xldv20pmAtlMisinsertedUserCells=xldv20pmAtlMisinsertedUserCells, xldv20pmD3cNeUnavailableSecondsPLCP=xldv20pmD3cNeUnavailableSecondsPLCP, xldv20pmThlImaLinkNeTxNumFailures=xldv20pmThlImaLinkNeTxNumFailures, xldv20pmS3hIntervalType=xldv20pmS3hIntervalType, xldv20pmImaLinkCurrentElapsedTime=xldv20pmImaLinkCurrentElapsedTime, xldv20pmChNeBackgroundBlockErrors=xldv20pmChNeBackgroundBlockErrors, xldv20pmD3hFeUnavailableSecondsPLCP=xldv20pmD3hFeUnavailableSecondsPLCP, xldv20pmD3CurrentEntry=xldv20pmD3CurrentEntry, xldv20pmImaLinkCurrentNeRxNumFailures=xldv20pmImaLinkCurrentNeRxNumFailures, xldv20pmChNeUnavailableSeconds=xldv20pmChNeUnavailableSeconds, Xldv20pmType=Xldv20pmType, xldv20pmThlImaLinkFeUnavailSecs=xldv20pmThlImaLinkFeUnavailSecs, xldv20pmPerformanceManagementControl=xldv20pmPerformanceManagementControl, xldv20pmThlDiscardedCells=xldv20pmThlDiscardedCells, xldv20pmThlImaLinkNeRxNumFailures=xldv20pmThlImaLinkNeRxNumFailures, xldv20pmS1hPeriodEndTime=xldv20pmS1hPeriodEndTime, xldv20pmAcoConnectionIndex=xldv20pmAcoConnectionIndex, xldv20pmImaGroupHistoryTable=xldv20pmImaGroupHistoryTable, xldv20pmD3cFeUnavailableSecondsPLCP=xldv20pmD3cFeUnavailableSecondsPLCP, xldv20pmThlImaLinkFeSevErroredSecs=xldv20pmThlImaLinkFeSevErroredSecs, xldv20pmS1cFeBackgroundBlockErrors=xldv20pmS1cFeBackgroundBlockErrors, xldv20pmS3CurrentTable=xldv20pmS3CurrentTable, xldv20pmD3cThresholdLimitIndex=xldv20pmD3cThresholdLimitIndex, xldv20pmD3hNeCodeViolationsCP=xldv20pmD3hNeCodeViolationsCP, xldv20pmThlFeCodeViolations=xldv20pmThlFeCodeViolations, xldv20pmTrapTypes=xldv20pmTrapTypes, xldv20pmD3cNeErroredSecondsPLCP=xldv20pmD3cNeErroredSecondsPLCP, xldv20pmS3CurrentEntry=xldv20pmS3CurrentEntry, xldv20pmS3hHistEntryNr=xldv20pmS3hHistEntryNr, xldv20pmAhMisinsertedUserCells=xldv20pmAhMisinsertedUserCells, xldv20pmD3cFeSeverelyErroredSecondsPLCP=xldv20pmD3cFeSeverelyErroredSecondsPLCP, Xldv20pmCounterName=Xldv20pmCounterName, xldv20pmS1CurrentEntry=xldv20pmS1CurrentEntry, xldv20pmD3cFeCodeViolationsPLCP=xldv20pmD3cFeCodeViolationsPLCP, xldv20pmImaLinkCurrentNeSevErroredSecs=xldv20pmImaLinkCurrentNeSevErroredSecs, xldv20pmAcSuspectFlag=xldv20pmAcSuspectFlag, xldv20pmD3hFeUnavailableSeconds=xldv20pmD3hFeUnavailableSeconds, xldv20pmS3HistoryEntry=xldv20pmS3HistoryEntry, xldv20pmS1cElapsedTime=xldv20pmS1cElapsedTime, xldv20pmTrThresholdCrossingAlert=xldv20pmTrThresholdCrossingAlert, xldv20pmS3hNeCodeViolations=xldv20pmS3hNeCodeViolations, xldv20pmAtmCurrentTable=xldv20pmAtmCurrentTable, xldv20pmImaLinkCurrentNeRxUnusableSecs=xldv20pmImaLinkCurrentNeRxUnusableSecs, xldv20pmThlNeLosSeconds=xldv20pmThlNeLosSeconds, xldv20pmAtmCurrentEntry=xldv20pmAtmCurrentEntry, xldv20pmChFeBackgroundBlockErrors=xldv20pmChFeBackgroundBlockErrors, xldv20pmTvAtmPmCounter=xldv20pmTvAtmPmCounter, xldv20pmThlFeCodeViolationsCP=xldv20pmThlFeCodeViolationsCP, xldv20pmTcaPrMCurrentTable=xldv20pmTcaPrMCurrentTable, xldv20pmThPeriodEndTime=xldv20pmThPeriodEndTime, xldv20pmS1cSuspectFlag=xldv20pmS1cSuspectFlag, xldv20pmThlNeCodeViolationsP=xldv20pmThlNeCodeViolationsP, xldv20pmAoBlockSize=xldv20pmAoBlockSize, xldv20pmTvCurrentCounterLimit=xldv20pmTvCurrentCounterLimit, xldv20pmTvCurrentCounterValue=xldv20pmTvCurrentCounterValue, xldv20pmAcoControlTimeStamp=xldv20pmAcoControlTimeStamp, xldv20pmThlNeSeverelyErroredFrameSeconds=xldv20pmThlNeSeverelyErroredFrameSeconds, xldv20pmImaLinkHistoryNeTxNumFailures=xldv20pmImaLinkHistoryNeTxNumFailures, Xldv20pmConnectionIndexType=Xldv20pmConnectionIndexType, xldv20pmChIntervalType=xldv20pmChIntervalType, xldv20pmImaLinkHistorySuspectFlag=xldv20pmImaLinkHistorySuspectFlag, xldv20pmD3hNeErroredSecondsPLCP=xldv20pmD3hNeErroredSecondsPLCP, xldv20pmCoControlReqResult=xldv20pmCoControlReqResult, xldv20pmAcoConnectionIndexType=xldv20pmAcoConnectionIndexType, xldv20pmTrAtmObjectCreation=xldv20pmTrAtmObjectCreation, xldv20pmS1cNeUnavailableSeconds=xldv20pmS1cNeUnavailableSeconds, Xldv20pmControlReq=Xldv20pmControlReq, xldv20pmD3cFeErroredSecondsPLCP=xldv20pmD3cFeErroredSecondsPLCP, xldv20pmImaGroupCurrentNrHistEntriesAvailable=xldv20pmImaGroupCurrentNrHistEntriesAvailable, xldv20pmImaGroupHistoryIntervalType=xldv20pmImaGroupHistoryIntervalType, xldv20pmControl=xldv20pmControl, xldv20pmS3cNeCodeViolations=xldv20pmS3cNeCodeViolations, xldv20pmAeConnectionIndex=xldv20pmAeConnectionIndex, xldv20pmCcNeErroredSeconds=xldv20pmCcNeErroredSeconds, xldv20pmS3cNeSeverelyErroredFrameSeconds=xldv20pmS3cNeSeverelyErroredFrameSeconds, xldv20pmD3cNeSeverelyErroredSecondsPLCP=xldv20pmD3cNeSeverelyErroredSecondsPLCP, xldv20pmThlNeBackgroundBlockErrors=xldv20pmThlNeBackgroundBlockErrors, xldv20pmAtmObjectsEntry=xldv20pmAtmObjectsEntry, xldv20pmD3cHistEntrySize=xldv20pmD3cHistEntrySize, xldv20pmAtlTransmittedUserCells=xldv20pmAtlTransmittedUserCells, xldv20pmThlImaLinkNeUnavailSecs=xldv20pmThlImaLinkNeUnavailSecs, xldv20pmCoRemainingHistoryEntriesSize=xldv20pmCoRemainingHistoryEntriesSize, xldv20pmCcFeSeverelyErroredSeconds=xldv20pmCcFeSeverelyErroredSeconds, xldv20pmCcNeUnavailableSeconds=xldv20pmCcNeUnavailableSeconds, xldv20pmD3hFeCodeViolationsPLCP=xldv20pmD3hFeCodeViolationsPLCP, xldv20pmD3hFeSeverelyErroredSecondsPLCP=xldv20pmD3hFeSeverelyErroredSecondsPLCP, xldv20pmCcFeUnavailableSeconds=xldv20pmCcFeUnavailableSeconds, xldv20pmThlNeAisSeconds=xldv20pmThlNeAisSeconds, xldv20pmD3hNeSas=xldv20pmD3hNeSas, xldv20pmTvAtmObjectIndex=xldv20pmTvAtmObjectIndex, xldv20pmImaLinkCurrentImaViolations=xldv20pmImaLinkCurrentImaViolations, xldv20pmThlFeCodeViolationsPLCP=xldv20pmThlFeCodeViolationsPLCP, xldv20pmThlFeSeverelyErroredSeconds=xldv20pmThlFeSeverelyErroredSeconds, xldv20pmS1hNeErroredSeconds=xldv20pmS1hNeErroredSeconds, xldv20pmCcSuspectFlag=xldv20pmCcSuspectFlag, xldv20pmThlImaLinkNeTxUnusableSecs=xldv20pmThlImaLinkNeTxUnusableSecs, xldv20pmImaGroupHistoryNeNumFailures=xldv20pmImaGroupHistoryNeNumFailures, xldv20pmD3cIntervalType=xldv20pmD3cIntervalType, xldv20pmAcoIntervalType=xldv20pmAcoIntervalType, xldv20pmS3cNeErroredSeconds=xldv20pmS3cNeErroredSeconds, xldv20pmD3hNeSeverelyErroredSecondsCP=xldv20pmD3hNeSeverelyErroredSecondsCP, xldv20pmThlFeSeverelyErroredSecondsCP=xldv20pmThlFeSeverelyErroredSecondsCP, xldv20pmImaGroupCurrentUnavailSecs=xldv20pmImaGroupCurrentUnavailSecs, xldv20pmD3hFeErroredSecondsCP=xldv20pmD3hFeErroredSecondsCP, xldv20pmTcaPrMCurrentEntry=xldv20pmTcaPrMCurrentEntry, xldv20pmS1cNeErroredSeconds=xldv20pmS1cNeErroredSeconds, xldv20pmThlNeUnavailableSecondsPLCP=xldv20pmThlNeUnavailableSecondsPLCP, xldv20pmImaLinkHistoryOifAnomalies=xldv20pmImaLinkHistoryOifAnomalies, xldv20pmAcoFlowType=xldv20pmAcoFlowType, xldv20pmD3cFeErroredSecondsCP=xldv20pmD3cFeErroredSecondsCP, Xldv20pmSuspectType=Xldv20pmSuspectType, xldv20pmThlFeBackgroundBlockErrors=xldv20pmThlFeBackgroundBlockErrors, Xldv20pmFlowType=Xldv20pmFlowType, xldv20pmThlNeCodeViolations=xldv20pmThlNeCodeViolations, xldv20pmAtmThresholdLimitEntry=xldv20pmAtmThresholdLimitEntry, xldv20pmS3hNeSeverelyErroredSeconds=xldv20pmS3hNeSeverelyErroredSeconds, xldv20pmS1HistoryEntry=xldv20pmS1HistoryEntry, xldv20pmS3cFeErroredSeconds=xldv20pmS3cFeErroredSeconds, xldv20pmImaLinkHistoryTable=xldv20pmImaLinkHistoryTable, xldv20pmCcIntervalType=xldv20pmCcIntervalType, xldv20pmD3hNeCodeViolationsPLCP=xldv20pmD3hNeCodeViolationsPLCP, xldv20pmS1cThresholdLimitIndex=xldv20pmS1cThresholdLimitIndex)
mibBuilder.exportSymbols("XLDV20PM-MIB", xldv20pmS3cFeCodeViolations=xldv20pmS3cFeCodeViolations, xldv20pmD3cNeSeverelyErroredSecondsCP=xldv20pmD3cNeSeverelyErroredSecondsCP, xldv20pmS3hNeErroredSeconds=xldv20pmS3hNeErroredSeconds, xldv20pmImaLinkCurrentNeUnavailSecs=xldv20pmImaLinkCurrentNeUnavailSecs, xldv20pmS1cNeAisSeconds=xldv20pmS1cNeAisSeconds, xldv20pmS3cIntervalType=xldv20pmS3cIntervalType, xldv20pmS3HistoryTable=xldv20pmS3HistoryTable, xldv20pmThlThresholdLimitIndex=xldv20pmThlThresholdLimitIndex, xldv20pmAhIntervalType=xldv20pmAhIntervalType, xldv20pmAcElapsedTime=xldv20pmAcElapsedTime, xldv20pmCommonHistoryTable=xldv20pmCommonHistoryTable, xldv20pmS1hOAMLevel=xldv20pmS1hOAMLevel, xldv20pmAtmEndpointsEntry=xldv20pmAtmEndpointsEntry, xldv20pmD3cNeUnavailableSeconds=xldv20pmD3cNeUnavailableSeconds, xldv20pmD3cOAMLevel=xldv20pmD3cOAMLevel, xldv20pmS1hNeOfsSeconds=xldv20pmS1hNeOfsSeconds, xldv20pmImaGroupHistoryEntry=xldv20pmImaGroupHistoryEntry, xldv20pmThlNeErroredSecondsCP=xldv20pmThlNeErroredSecondsCP, xldv20pmD3hHistEntryNr=xldv20pmD3hHistEntryNr, xldv20pmD3hIntervalType=xldv20pmD3hIntervalType, xldv20pmD3CurrentTable=xldv20pmD3CurrentTable, xldv20pmThlImaLinkNeRxUnusableSecs=xldv20pmThlImaLinkNeRxUnusableSecs, xldv20pmTcaPrMHistoryEntry=xldv20pmTcaPrMHistoryEntry, xldv20pmS3cFeUnavailableSeconds=xldv20pmS3cFeUnavailableSeconds, xldv20pmCoIfIndex=xldv20pmCoIfIndex, xldv20pmAeRole=xldv20pmAeRole, xldv20pmCoControlReq=xldv20pmCoControlReq, xldv20pmD3hFeCodeViolationsCP=xldv20pmD3hFeCodeViolationsCP, xldv20pmThlNeOfsSeconds=xldv20pmThlNeOfsSeconds, xldv20pmThlImaLinkNeSevErroredSecs=xldv20pmThlImaLinkNeSevErroredSecs, xldv20pmS3hNeSeverelyErroredFrameSeconds=xldv20pmS3hNeSeverelyErroredFrameSeconds, xldv20pmTcHistEntrySize=xldv20pmTcHistEntrySize, xldv20pmThlNeSeverelyErroredSecondsPLCP=xldv20pmThlNeSeverelyErroredSecondsPLCP, xldv20pmS3hFeErroredSeconds=xldv20pmS3hFeErroredSeconds, xldv20pmD3hPeriodEndTime=xldv20pmD3hPeriodEndTime, xldv20pmAhPeriodEndTime=xldv20pmAhPeriodEndTime, xldv20pmTcAdminState=xldv20pmTcAdminState, xldv20pmAtmEndpointsTable=xldv20pmAtmEndpointsTable, xldv20pmThresholding=xldv20pmThresholding, xldv20pmS1hNeSeverelyErroredSeconds=xldv20pmS1hNeSeverelyErroredSeconds, xldv20pmS1cNeLosSeconds=xldv20pmS1cNeLosSeconds, xldv20pmD3HistoryEntry=xldv20pmD3HistoryEntry, xldv20pmS1cHistEntrySize=xldv20pmS1cHistEntrySize, xldv20pmD3cSuspectFlag=xldv20pmD3cSuspectFlag, xldv20pmImaLinkCurrentNeTxUnusableSecs=xldv20pmImaLinkCurrentNeTxUnusableSecs, xldv20pmD3hNeErroredSecondsCP=xldv20pmD3hNeErroredSecondsCP, xldv20pmThlNeCodeViolationsCP=xldv20pmThlNeCodeViolationsCP, xldv20pmImaLinkCurrentNrHistEntriesAvailable=xldv20pmImaLinkCurrentNrHistEntriesAvailable, xldv20pmD3cFeUnavailableSeconds=xldv20pmD3cFeUnavailableSeconds, xldv20pmD3hSuspectFlag=xldv20pmD3hSuspectFlag, xldv20pmThlNeUnavailableSeconds=xldv20pmThlNeUnavailableSeconds, xldv20pmImaLinkCurrentFeTxUnusableSecs=xldv20pmImaLinkCurrentFeTxUnusableSecs, xldv20pmS1cFeSeverelyErroredSeconds=xldv20pmS1cFeSeverelyErroredSeconds, xldv20pmChFeUnavailableSeconds=xldv20pmChFeUnavailableSeconds, xldv20pmImaLinkHistoryPeriodEndTime=xldv20pmImaLinkHistoryPeriodEndTime, xldv20pmImaGroupCurrentTable=xldv20pmImaGroupCurrentTable, xldv20pmS1HistoryTable=xldv20pmS1HistoryTable, xldv20pmAcAdminState=xldv20pmAcAdminState, xldv20pmS1hIntervalType=xldv20pmS1hIntervalType, xldv20pmAtmObjectsTable=xldv20pmAtmObjectsTable, xldv20pmImaLinkCurrentThresholdLimitIndex=xldv20pmImaLinkCurrentThresholdLimitIndex, xldv20pmThlImaGroupUnavailSecs=xldv20pmThlImaGroupUnavailSecs, xldv20pmD3cNrHistEntriesAvailable=xldv20pmD3cNrHistEntriesAvailable, xldv20pmAtmHistoryTable=xldv20pmAtmHistoryTable, xldv20pmS1hNeBackgroundBlockErrors=xldv20pmS1hNeBackgroundBlockErrors, xldv20pmTvPmCounter=xldv20pmTvPmCounter, xldv20pmD3cFeSeverelyErroredSecondsCP=xldv20pmD3cFeSeverelyErroredSecondsCP, xldv20pmD3hFeSas=xldv20pmD3hFeSas, xldv20pmCcNrHistEntriesAvailable=xldv20pmCcNrHistEntriesAvailable, xldv20pmCommonHistoryEntry=xldv20pmCommonHistoryEntry, xldv20pmImaLinkCurrentSuspectFlag=xldv20pmImaLinkCurrentSuspectFlag, xldv20pmAoFlowType=xldv20pmAoFlowType, xldv20pmS1hNeUnavailableSeconds=xldv20pmS1hNeUnavailableSeconds, Xldv20pmIntervalType=Xldv20pmIntervalType, xldv20pmS1hFeBackgroundBlockErrors=xldv20pmS1hFeBackgroundBlockErrors, xldv20pmS3cThresholdLimitIndex=xldv20pmS3cThresholdLimitIndex, xldv20pmCcOAMLevel=xldv20pmCcOAMLevel, xldv20pmImaGroupCurrentThresholdLimitIndex=xldv20pmImaGroupCurrentThresholdLimitIndex, xldv20pmImaLinkCurrentOifAnomalies=xldv20pmImaLinkCurrentOifAnomalies, xldv20pmS1CurrentTable=xldv20pmS1CurrentTable, xldv20pmAtlThresholdLimitIndex=xldv20pmAtlThresholdLimitIndex, xldv20pmAcMisinsertedUserCells=xldv20pmAcMisinsertedUserCells, xldv20pmAhHistEntryNr=xldv20pmAhHistEntryNr, xldv20pmS1cAdminState=xldv20pmS1cAdminState, xldv20pmThlNeSeverelyErroredSeconds=xldv20pmThlNeSeverelyErroredSeconds, xldv20pmCcHistEntrySize=xldv20pmCcHistEntrySize, xldv20pmImaLinkHistoryFeUnavailSecs=xldv20pmImaLinkHistoryFeUnavailSecs, xldv20pmCcNeBackgroundBlockErrors=xldv20pmCcNeBackgroundBlockErrors, xldv20pmTcThresholdLimitIndex=xldv20pmTcThresholdLimitIndex, xldv20pmD3hOAMLevel=xldv20pmD3hOAMLevel, xldv20pmCoIntervalType=xldv20pmCoIntervalType, xldv20pmImaLinkHistoryNeRxNumFailures=xldv20pmImaLinkHistoryNeRxNumFailures, xldv20pmD3hNeUnavailableSecondsPLCP=xldv20pmD3hNeUnavailableSecondsPLCP, xldv20pmS1hSuspectFlag=xldv20pmS1hSuspectFlag, xldv20pmD3cElapsedTime=xldv20pmD3cElapsedTime, xldv20pmCommonCurrentTable=xldv20pmCommonCurrentTable, xldv20pmImaGroupCurrentSuspectFlag=xldv20pmImaGroupCurrentSuspectFlag, xldv20pmThlImaLinkOifAnomalies=xldv20pmThlImaLinkOifAnomalies, xldv20pmTcDiscardedCells=xldv20pmTcDiscardedCells, xldv20pmTvIntervalType=xldv20pmTvIntervalType, xldv20pmThDiscardedCells=xldv20pmThDiscardedCells, xldv20pmThlImaLinkImaViolations=xldv20pmThlImaLinkImaViolations, xldv20pmImaLinkHistoryFeSevErroredSecs=xldv20pmImaLinkHistoryFeSevErroredSecs, xldv20pmS1cNeSeverelyErroredSeconds=xldv20pmS1cNeSeverelyErroredSeconds, xldv20pmAcNrHistEntriesAvailable=xldv20pmAcNrHistEntriesAvailable, xldv20pmD3hNeUnavailableSeconds=xldv20pmD3hNeUnavailableSeconds, xldv20pmImaGroupCurrentAdminState=xldv20pmImaGroupCurrentAdminState, xldv20pmThHistEntryNr=xldv20pmThHistEntryNr, xldv20pmS3hPeriodEndTime=xldv20pmS3hPeriodEndTime, xldv20pmThlFeErroredSecondsCP=xldv20pmThlFeErroredSecondsCP, xldv20pmS3hSuspectFlag=xldv20pmS3hSuspectFlag, xldv20pmImaGroupCurrentNeNumFailures=xldv20pmImaGroupCurrentNeNumFailures, xldv20pmS1cFeUnavailableSeconds=xldv20pmS1cFeUnavailableSeconds, xldv20pmS3hFeUnavailableSeconds=xldv20pmS3hFeUnavailableSeconds, xldv20pmAtmControl=xldv20pmAtmControl, xldv20pmTcIntervalType=xldv20pmTcIntervalType, xldv20pmCcAdminState=xldv20pmCcAdminState, xldv20pmD3cNeSas=xldv20pmD3cNeSas, xldv20pmAeEndpointType=xldv20pmAeEndpointType, xldv20pmS3cNrHistEntriesAvailable=xldv20pmS3cNrHistEntriesAvailable, xldv20pmThSuspectFlag=xldv20pmThSuspectFlag, xldv20pmTcNrHistEntriesAvailable=xldv20pmTcNrHistEntriesAvailable, xldv20pmImaLinkCurrentEntry=xldv20pmImaLinkCurrentEntry, xldv20pmThresholdLimitTable=xldv20pmThresholdLimitTable, xldv20pmAcoNrHistEntriesSize=xldv20pmAcoNrHistEntriesSize, xldv20pmS1hNeLosSeconds=xldv20pmS1hNeLosSeconds, xldv20pmTraps=xldv20pmTraps, xldv20pmS1cNeBackgroundBlockErrors=xldv20pmS1cNeBackgroundBlockErrors, xldv20pmThlImaLinkFeTxUnusableSecs=xldv20pmThlImaLinkFeTxUnusableSecs, xldv20pmThlFeUnavailableSecondsPLCP=xldv20pmThlFeUnavailableSecondsPLCP, xldv20pmTvIfIndex=xldv20pmTvIfIndex)
