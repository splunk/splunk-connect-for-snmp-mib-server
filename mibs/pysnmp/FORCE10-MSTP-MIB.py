#
# PySNMP MIB module FORCE10-MSTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FORCE10-MSTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:00:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
Timeout, BridgeId, dot1dBridge = mibBuilder.importSymbols("BRIDGE-MIB", "Timeout", "BridgeId", "dot1dBridge")
f10Experiment, = mibBuilder.importSymbols("FORCE10-SMI", "f10Experiment")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, TimeTicks, mib_2, Unsigned32, Counter64, Integer32, Bits, MibIdentifier, ObjectIdentity, Counter32, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "mib-2", "Unsigned32", "Counter64", "Integer32", "Bits", "MibIdentifier", "ObjectIdentity", "Counter32", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress")
DisplayString, TextualConvention, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "TruthValue")
f10Mstp = ModuleIdentity((1, 3, 6, 1, 4, 1, 6027, 20, 2))
if mibBuilder.loadTexts: f10Mstp.setLastUpdated('200804011200Z')
if mibBuilder.loadTexts: f10Mstp.setOrganization('Force10 Networks, Inc.')
class PortIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4094)

class PortIndexOrZero(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class MstiInstanceIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 64)

class BpduCounter(TextualConvention, Counter32):
    status = 'current'
    displayHint = 'd'

class MstiOrCistInstanceIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 64)

class PortId(TextualConvention, OctetString):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

mstpGen = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10))
mstpGenBridgeMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 2), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenBridgeMaxAge.setStatus('current')
mstpGenBridgeHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 3), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenBridgeHelloTime.setStatus('current')
mstpGenBridgeForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 4), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenBridgeForwardDelay.setStatus('current')
mstpGenMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 8), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpGenMaxAge.setStatus('current')
mstpGenHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 9), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpGenHelloTime.setStatus('current')
mstpGenForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 10), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpGenForwardDelay.setStatus('current')
mstpGenMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenMaxHops.setStatus('current')
mstpGenHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 15), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenHoldTime.setStatus('current')
mstpGenMigrateTime = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 16), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenMigrateTime.setStatus('current')
mstpGenPathCostDefault = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pathCostDefault8021d1998", 1), ("pathCostDefault8021t2001", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenPathCostDefault.setStatus('current')
mstpGenCapable = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("nonStp", 0), ("dot1d1998", 1), ("dot1w", 2), ("dot1d2004", 3), ("dot1s", 4), ("dot1q", 5), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpGenCapable.setStatus('current')
mstpGenForceVersion = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("forceNonStp", 0), ("forceLegacyDot1d", 1), ("forceDot1w", 2), ("autoDot1s", 3), ("unknown", 4))).clone('autoDot1s')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenForceVersion.setStatus('current')
mstpGenCfgIdFmtSel = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenCfgIdFmtSel.setStatus('current')
mstpGenCfgIdName = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenCfgIdName.setStatus('current')
mstpGenCfgIdRevLevel = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpGenCfgIdRevLevel.setStatus('current')
mstpGenCfgIdDigest = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpGenCfgIdDigest.setStatus('current')
mstpGenReginalRoot = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 34), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpGenReginalRoot.setStatus('current')
mstpGenExternalRootCost = MibScalar((1, 3, 6, 1, 4, 1, 6027, 20, 2, 10, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpGenExternalRootCost.setStatus('current')
mstpPortTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11), )
if mibBuilder.loadTexts: mstpPortTable.setStatus('current')
mstpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1), ).setIndexNames((0, "FORCE10-MSTP-MIB", "mstpPortIndex"))
if mibBuilder.loadTexts: mstpPortEntry.setStatus('current')
mstpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 1), PortIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortIndex.setStatus('current')
mstpPortAdminMACEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpPortAdminMACEnable.setStatus('current')
mstpPortOperMACEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortOperMACEnable.setStatus('current')
mstpPortUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortUpTime.setStatus('current')
mstpPortAdminExternalPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpPortAdminExternalPathCost.setStatus('current')
mstpPortOperExternalPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortOperExternalPathCost.setStatus('current')
mstpPortAdminEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpPortAdminEdge.setStatus('current')
mstpPortOperEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortOperEdge.setStatus('current')
mstpPortAutoEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpPortAutoEdge.setStatus('current')
mstpPortAdminPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("forceTrue", 0), ("forceFalse", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpPortAdminPointToPoint.setStatus('current')
mstpPortOperPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortOperPointToPoint.setStatus('current')
mstpPortHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 12), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpPortHelloTime.setStatus('current')
mstpPortAdminNonStp = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpPortAdminNonStp.setStatus('current')
mstpPortProtocolMigration = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpPortProtocolMigration.setStatus('current')
mstpPortRxTcnBpduCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 15), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortRxTcnBpduCounter.setStatus('current')
mstpPortRxCfgBpduCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 16), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortRxCfgBpduCounter.setStatus('current')
mstpPortRxRstBpduCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 17), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortRxRstBpduCounter.setStatus('current')
mstpPortRxMstBpduCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 18), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortRxMstBpduCounter.setStatus('current')
mstpPortTxTcnBpduCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 19), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortTxTcnBpduCounter.setStatus('current')
mstpPortTxCfgBpduCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 20), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortTxCfgBpduCounter.setStatus('current')
mstpPortTxRstBpduCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 21), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortTxRstBpduCounter.setStatus('current')
mstpPortTxMstBpduCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 11, 1, 22), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpPortTxMstBpduCounter.setStatus('current')
mstpMapTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 20, 2, 12), )
if mibBuilder.loadTexts: mstpMapTable.setStatus('current')
mstpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 20, 2, 12, 1), ).setIndexNames((0, "FORCE10-MSTP-MIB", "mstpMapMSTiID"), (0, "FORCE10-MSTP-MIB", "mstpMapVlanRangeIndex"))
if mibBuilder.loadTexts: mstpMapEntry.setStatus('current')
mstpMapMSTiID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 12, 1, 1), MstiInstanceIndex())
if mibBuilder.loadTexts: mstpMapMSTiID.setStatus('current')
mstpMapVlanRangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: mstpMapVlanRangeIndex.setStatus('current')
mstpMapVlanMin = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 12, 1, 3), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mstpMapVlanMin.setStatus('current')
mstpMapVlanMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 12, 1, 4), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mstpMapVlanMax.setStatus('current')
mstpMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 12, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mstpMapRowStatus.setStatus('current')
mstpXstTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13), )
if mibBuilder.loadTexts: mstpXstTable.setStatus('current')
mstpXstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1), ).setIndexNames((0, "FORCE10-MSTP-MIB", "mstpXstId"))
if mibBuilder.loadTexts: mstpXstEntry.setStatus('current')
mstpXstId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 1), MstiOrCistInstanceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstId.setStatus('current')
mstpXstBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpXstBridgePriority.setStatus('current')
mstpXstBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 3), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstBridgeId.setStatus('current')
mstpXstDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 4), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstDesignatedRoot.setStatus('current')
mstpXstDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 5), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstDesignatedBridge.setStatus('current')
mstpXstInternalRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstInternalRootCost.setStatus('current')
mstpXstRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 7), PortIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstRootPort.setStatus('current')
mstpXstMasterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 8), PortIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstMasterPort.setStatus('current')
mstpXstTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstTimeSinceTopologyChange.setStatus('current')
mstpXstTopologyChangesCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstTopologyChangesCount.setStatus('current')
mstpXstTopologyChangeFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 13, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstTopologyChangeFlag.setStatus('current')
mstpXstPortTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14), )
if mibBuilder.loadTexts: mstpXstPortTable.setStatus('current')
mstpXstPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1), ).setIndexNames((0, "FORCE10-MSTP-MIB", "mstpXstPortXstId"), (0, "FORCE10-MSTP-MIB", "mstpXstPortIndex"))
if mibBuilder.loadTexts: mstpXstPortEntry.setStatus('current')
mstpXstPortXstId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 1), MstiOrCistInstanceIndex())
if mibBuilder.loadTexts: mstpXstPortXstId.setStatus('current')
mstpXstPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 2), PortIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortIndex.setStatus('current')
mstpXstPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("discarding", 2), ("learning", 3), ("forwarding", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortState.setStatus('current')
mstpXstPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("disabled", 1), ("alternate", 2), ("backup", 3), ("root", 4), ("designated", 5), ("master", 6), ("nonStp", 7), ("unknown", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortRole.setStatus('current')
mstpXstPortDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortDesignatedRoot.setStatus('current')
mstpXstPortExternalRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortExternalRootCost.setStatus('current')
mstpXstPortRegionalBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 8), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortRegionalBridge.setStatus('current')
mstpXstPortInternalRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortInternalRootCost.setStatus('current')
mstpXstPortDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 10), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortDesignatedBridge.setStatus('current')
mstpXstPortDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 14), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortDesignatedPort.setStatus('current')
mstpXstPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpXstPortPriority.setStatus('current')
mstpXstPortAdminInternalPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mstpXstPortAdminInternalPathCost.setStatus('current')
mstpXstPortOperInternalPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 20, 2, 14, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mstpXstPortOperInternalPathCost.setStatus('current')
mstpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 20, 2, 0))
mstpNewRootBridge = NotificationType((1, 3, 6, 1, 4, 1, 6027, 20, 2, 0, 1)).setObjects(("FORCE10-MSTP-MIB", "mstpXstId"))
if mibBuilder.loadTexts: mstpNewRootBridge.setStatus('current')
mstpNewRootPort = NotificationType((1, 3, 6, 1, 4, 1, 6027, 20, 2, 0, 2)).setObjects(("FORCE10-MSTP-MIB", "mstpXstId"), ("FORCE10-MSTP-MIB", "mstpXstPortIndex"))
if mibBuilder.loadTexts: mstpNewRootPort.setStatus('current')
mstpTopologyChange = NotificationType((1, 3, 6, 1, 4, 1, 6027, 20, 2, 0, 3)).setObjects(("FORCE10-MSTP-MIB", "mstpXstId"), ("FORCE10-MSTP-MIB", "mstpXstPortIndex"), ("FORCE10-MSTP-MIB", "mstpXstPortState"))
if mibBuilder.loadTexts: mstpTopologyChange.setStatus('current')
mibBuilder.exportSymbols("FORCE10-MSTP-MIB", MstiOrCistInstanceIndex=MstiOrCistInstanceIndex, mstpPortRxCfgBpduCounter=mstpPortRxCfgBpduCounter, mstpGenMigrateTime=mstpGenMigrateTime, mstpPortOperMACEnable=mstpPortOperMACEnable, mstpGenReginalRoot=mstpGenReginalRoot, mstpNewRootPort=mstpNewRootPort, mstpPortAdminExternalPathCost=mstpPortAdminExternalPathCost, mstpGenCapable=mstpGenCapable, mstpPortIndex=mstpPortIndex, mstpPortTable=mstpPortTable, mstpPortTxCfgBpduCounter=mstpPortTxCfgBpduCounter, mstpXstPortExternalRootCost=mstpXstPortExternalRootCost, MstiInstanceIndex=MstiInstanceIndex, mstpGenPathCostDefault=mstpGenPathCostDefault, PortId=PortId, mstpGenExternalRootCost=mstpGenExternalRootCost, mstpMapEntry=mstpMapEntry, mstpXstPortInternalRootCost=mstpXstPortInternalRootCost, PYSNMP_MODULE_ID=f10Mstp, mstpXstInternalRootCost=mstpXstInternalRootCost, mstpMapVlanMin=mstpMapVlanMin, f10Mstp=f10Mstp, mstpPortAdminEdge=mstpPortAdminEdge, mstpPortAutoEdge=mstpPortAutoEdge, mstpXstPortDesignatedBridge=mstpXstPortDesignatedBridge, mstpGen=mstpGen, mstpMapVlanMax=mstpMapVlanMax, mstpXstTopologyChangesCount=mstpXstTopologyChangesCount, mstpXstPortXstId=mstpXstPortXstId, mstpPortRxTcnBpduCounter=mstpPortRxTcnBpduCounter, mstpMapTable=mstpMapTable, mstpXstPortTable=mstpXstPortTable, mstpPortHelloTime=mstpPortHelloTime, mstpGenMaxAge=mstpGenMaxAge, mstpPortTxMstBpduCounter=mstpPortTxMstBpduCounter, mstpPortTxRstBpduCounter=mstpPortTxRstBpduCounter, mstpXstDesignatedRoot=mstpXstDesignatedRoot, mstpGenBridgeForwardDelay=mstpGenBridgeForwardDelay, mstpXstPortDesignatedPort=mstpXstPortDesignatedPort, mstpXstPortRegionalBridge=mstpXstPortRegionalBridge, mstpGenMaxHops=mstpGenMaxHops, mstpGenCfgIdName=mstpGenCfgIdName, mstpTraps=mstpTraps, mstpPortAdminPointToPoint=mstpPortAdminPointToPoint, mstpPortAdminNonStp=mstpPortAdminNonStp, mstpXstPortAdminInternalPathCost=mstpXstPortAdminInternalPathCost, mstpGenBridgeHelloTime=mstpGenBridgeHelloTime, mstpGenForceVersion=mstpGenForceVersion, mstpPortEntry=mstpPortEntry, mstpMapMSTiID=mstpMapMSTiID, PortIndexOrZero=PortIndexOrZero, mstpPortOperExternalPathCost=mstpPortOperExternalPathCost, mstpXstId=mstpXstId, mstpXstPortOperInternalPathCost=mstpXstPortOperInternalPathCost, mstpXstPortEntry=mstpXstPortEntry, mstpXstPortRole=mstpXstPortRole, mstpXstPortIndex=mstpXstPortIndex, PortIndex=PortIndex, mstpPortRxMstBpduCounter=mstpPortRxMstBpduCounter, mstpPortTxTcnBpduCounter=mstpPortTxTcnBpduCounter, mstpXstPortPriority=mstpXstPortPriority, mstpPortOperEdge=mstpPortOperEdge, mstpXstDesignatedBridge=mstpXstDesignatedBridge, mstpMapRowStatus=mstpMapRowStatus, mstpXstBridgeId=mstpXstBridgeId, mstpPortOperPointToPoint=mstpPortOperPointToPoint, mstpXstTable=mstpXstTable, mstpXstPortState=mstpXstPortState, mstpPortRxRstBpduCounter=mstpPortRxRstBpduCounter, mstpXstEntry=mstpXstEntry, mstpNewRootBridge=mstpNewRootBridge, mstpPortUpTime=mstpPortUpTime, mstpGenCfgIdRevLevel=mstpGenCfgIdRevLevel, mstpGenBridgeMaxAge=mstpGenBridgeMaxAge, mstpGenCfgIdFmtSel=mstpGenCfgIdFmtSel, mstpXstTopologyChangeFlag=mstpXstTopologyChangeFlag, mstpXstTimeSinceTopologyChange=mstpXstTimeSinceTopologyChange, mstpGenForwardDelay=mstpGenForwardDelay, mstpGenCfgIdDigest=mstpGenCfgIdDigest, mstpMapVlanRangeIndex=mstpMapVlanRangeIndex, mstpPortProtocolMigration=mstpPortProtocolMigration, BpduCounter=BpduCounter, mstpXstRootPort=mstpXstRootPort, mstpTopologyChange=mstpTopologyChange, mstpXstBridgePriority=mstpXstBridgePriority, mstpGenHoldTime=mstpGenHoldTime, mstpGenHelloTime=mstpGenHelloTime, mstpXstMasterPort=mstpXstMasterPort, mstpPortAdminMACEnable=mstpPortAdminMACEnable, mstpXstPortDesignatedRoot=mstpXstPortDesignatedRoot)
