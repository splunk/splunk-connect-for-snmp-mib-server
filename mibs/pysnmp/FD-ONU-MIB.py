#
# PySNMP MIB module FD-ONU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FD-ONU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:59:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
DeviceOperation, OperSwitch, DeviceStatus, DeviceType, epon = mibBuilder.importSymbols("EPON-EOC-MIB", "DeviceOperation", "OperSwitch", "DeviceStatus", "DeviceType", "epon")
oltId, linkId = mibBuilder.importSymbols("FD-OLT-MIB", "oltId", "linkId")
ponCardSlotId, = mibBuilder.importSymbols("FD-SYSTEM-MIB", "ponCardSlotId")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, Counter32, ObjectIdentity, NotificationType, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, Integer32, TimeTicks, MibIdentifier, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "ObjectIdentity", "NotificationType", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "Integer32", "TimeTicks", "MibIdentifier", "IpAddress", "iso")
DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress")
fdOnu = ModuleIdentity((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4))
if mibBuilder.loadTexts: fdOnu.setLastUpdated('201005271056Z')
if mibBuilder.loadTexts: fdOnu.setOrganization('epon eoc factory.')
onuBaseManageTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1), )
if mibBuilder.loadTexts: onuBaseManageTable.setStatus('current')
onuBaseManageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: onuBaseManageEntry.setStatus('current')
onuId = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: onuId.setStatus('current')
onuDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 2), DeviceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuDeviceType.setStatus('current')
onuFactorySerial = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuFactorySerial.setStatus('current')
onuUserInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuUserInfo.setStatus('current')
onuHwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuHwRev.setStatus('current')
onuFwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuFwRev.setStatus('current')
onuBaseMac = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuBaseMac.setStatus('current')
maxAllowedLLIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxAllowedLLIDs.setStatus('current')
registeredLLIDNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: registeredLLIDNum.setStatus('current')
onuOnLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 11), DeviceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuOnLineStatus.setStatus('current')
onuUserTrafficEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 12), OperSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuUserTrafficEnable.setStatus('current')
onuRangeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuRangeValue.setStatus('current')
supportUniPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: supportUniPorts.setStatus('current')
onuOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 32), DeviceOperation()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuOperation.setStatus('current')
onuUpgradeStat = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6, 7, 8))).clone(namedValues=NamedValues(("booting", 1), ("normalRun", 2), ("upgrading", 6), ("upgradeOk", 7), ("upgradeErr", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuUpgradeStat.setStatus('current')
onuLinkIdMap = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 34), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuLinkIdMap.setStatus('current')
onuMgmtType = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tk", 1), ("ctc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuMgmtType.setStatus('current')
onuLaserRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuLaserRxPower.setStatus('current')
onuLaserTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuLaserTxPower.setStatus('current')
onuAdvancedManage = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2))
onuChipInfoTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1), )
if mibBuilder.loadTexts: onuChipInfoTable.setStatus('current')
onuChipInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: onuChipInfoEntry.setStatus('current')
onuChipProCode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuChipProCode.setStatus('current')
onuChipProVer = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuChipProVer.setStatus('current')
onuChipId = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuChipId.setStatus('current')
onuChipVer = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuChipVer.setStatus('current')
onuBootVer = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuBootVer.setStatus('current')
onuPersVer = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuPersVer.setStatus('current')
onuChipApp0Ver = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuChipApp0Ver.setStatus('current')
onuChipApp1Ver = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuChipApp1Ver.setStatus('current')
onuChipDiagVer = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuChipDiagVer.setStatus('current')
onuAdvancedConfigTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 2), )
if mibBuilder.loadTexts: onuAdvancedConfigTable.setStatus('current')
onuAdvancedConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 2, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: onuAdvancedConfigEntry.setStatus('current')
onuAddiVlanEthType = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuAddiVlanEthType.setStatus('current')
onuRstpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 2, 1, 2), OperSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuRstpEnable.setStatus('current')
onuLocalSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 2, 1, 3), OperSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuLocalSwitch.setStatus('current')
onuCatv = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 2, 2, 1, 4), OperSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuCatv.setStatus('current')
onuUniPortTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3), )
if mibBuilder.loadTexts: onuUniPortTable.setStatus('current')
onuUniPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "uniPortId"))
if mibBuilder.loadTexts: onuUniPortEntry.setStatus('current')
uniPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48))).clone(namedValues=NamedValues(("uniPort1", 1), ("uniPort2", 2), ("uniPort3", 3), ("uniPort4", 4), ("uniPort5", 5), ("uniPort6", 6), ("uniPort7", 7), ("uniPort8", 8), ("uniPort9", 9), ("uniPort10", 10), ("uniPort11", 11), ("uniPort12", 12), ("uniPort13", 13), ("uniPort14", 14), ("uniPort15", 15), ("uniPort16", 16), ("uniPort17", 17), ("uniPort18", 18), ("uniPort19", 19), ("uniPort20", 20), ("uniPort21", 21), ("uniPort22", 22), ("uniPort23", 23), ("uniPort24", 24), ("uniPort25", 25), ("uniPort26", 26), ("uniPort27", 27), ("uniPort28", 28), ("uniPort29", 29), ("uniPort30", 30), ("uniPort31", 31), ("uniPort32", 32), ("uniPort33", 33), ("uniPort34", 34), ("uniPort35", 35), ("uniPort36", 36), ("uniPort37", 37), ("uniPort38", 38), ("uniPort39", 39), ("uniPort40", 40), ("uniPort41", 41), ("uniPort42", 42), ("uniPort43", 43), ("uniPort44", 44), ("uniPort45", 45), ("uniPort46", 46), ("uniPort47", 47), ("uniPort48", 48))))
if mibBuilder.loadTexts: uniPortId.setStatus('current')
uniPortUserInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uniPortUserInfo.setStatus('current')
uniPortLink = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linkup", 1), ("linkdown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uniPortLink.setStatus('current')
uniPortAutoNego = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 4), OperSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uniPortAutoNego.setStatus('current')
uniPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mbps10", 1), ("mbps100", 2), ("mbps1000", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uniPortSpeed.setStatus('current')
uniPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full", 1), ("half", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uniPortDuplex.setStatus('current')
uniPortFlowCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 7), OperSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uniPortFlowCtrl.setStatus('current')
uniPortMacEntryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uniPortMacEntryLimit.setStatus('current')
uniPortMacAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 286))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uniPortMacAgeTime.setStatus('current')
uniPortFowardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("d8021mode", 1), ("dropUntilLearned", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uniPortFowardMode.setStatus('current')
uniPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 11), OperSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uniPortEnable.setStatus('current')
uniPortRstpState = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("blocking", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uniPortRstpState.setStatus('current')
onuQueueCfgTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 4), )
if mibBuilder.loadTexts: onuQueueCfgTable.setStatus('current')
onuQueueCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 4, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: onuQueueCfgEntry.setStatus('current')
onuQueueCfgData = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 4, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuQueueCfgData.setStatus('current')
onuAclRuleTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 5), )
if mibBuilder.loadTexts: onuAclRuleTable.setStatus('current')
onuAclRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 5, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "onuIntPortId"))
if mibBuilder.loadTexts: onuAclRuleEntry.setStatus('current')
onuIntPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onuPonPort", 1), ("onuIntUniPort", 2))))
if mibBuilder.loadTexts: onuIntPortId.setStatus('current')
onuAclRuleCfgData = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 5, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuAclRuleCfgData.setStatus('current')
onuPortVlanTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 6), )
if mibBuilder.loadTexts: onuPortVlanTable.setStatus('current')
onuPortVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 6, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "onuPortId"))
if mibBuilder.loadTexts: onuPortVlanEntry.setStatus('current')
onuPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48))).clone(namedValues=NamedValues(("ponPort", 1), ("uniPort1", 2), ("uniPort2", 3), ("uniPort3", 4), ("uniPort4", 5), ("uniPort5", 6), ("uniPort6", 7), ("uniPort7", 8), ("uniPort8", 9), ("uniPort9", 10), ("uniPort10", 11), ("uniPort11", 12), ("uniPort12", 13), ("uniPort13", 14), ("uniPort14", 15), ("uniPort15", 16), ("uniPort16", 17), ("uniPort17", 18), ("uniPort18", 19), ("uniPort19", 20), ("uniPort20", 21), ("uniPort21", 22), ("uniPort22", 23), ("uniPort23", 24), ("uniPort24", 25), ("uniPort25", 26), ("uniPort26", 27), ("uniPort27", 28), ("uniPort28", 29), ("uniPort29", 30), ("uniPort30", 31), ("uniPort31", 32), ("uniPort32", 33), ("uniPort33", 34), ("uniPort34", 35), ("uniPort35", 36), ("uniPort36", 37), ("uniPort37", 38), ("uniPort38", 39), ("uniPort39", 40), ("uniPort40", 41), ("uniPort41", 42), ("uniPort42", 43), ("uniPort43", 44), ("uniPort44", 45), ("uniPort45", 46), ("uniPort46", 47), ("uniPort47", 48))))
if mibBuilder.loadTexts: onuPortId.setStatus('current')
onuPortVlanData = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 6, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortVlanData.setStatus('current')
onuPortQos = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7))
portEgressShappingTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 1), )
if mibBuilder.loadTexts: portEgressShappingTable.setStatus('current')
portEgressShappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 1, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "uniPortId"))
if mibBuilder.loadTexts: portEgressShappingEntry.setStatus('current')
scheduleAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("weightedFair", 1), ("strictPriority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scheduleAlgorithm.setStatus('current')
maxTrafficOutputRate = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxTrafficOutputRate.setStatus('current')
outputModule = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outputModule.setStatus('current')
portIngressPolicingTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 2), )
if mibBuilder.loadTexts: portIngressPolicingTable.setStatus('current')
portIngressPolicingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 2, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "uniPortId"))
if mibBuilder.loadTexts: portIngressPolicingEntry.setStatus('current')
policingTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("broadCast", 1), ("multiCast", 2), ("broadcastMulticastAndFloodedUnicast", 3), ("allFrameTypes", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: policingTrafficType.setStatus('current')
maxTrafficInputRate = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxTrafficInputRate.setStatus('current')
inputModule = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inputModule.setStatus('current')
igmpSnooping = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 8))
igmpSnoopParaTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 8, 1), )
if mibBuilder.loadTexts: igmpSnoopParaTable.setStatus('current')
igmpSnoopParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 8, 1, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: igmpSnoopParaEntry.setStatus('current')
igmpSnoopParaData = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 8, 1, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopParaData.setStatus('current')
igmpSnoopGroupTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 8, 2), )
if mibBuilder.loadTexts: igmpSnoopGroupTable.setStatus('current')
igmpSnoopGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 8, 2, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "uniPortId"))
if mibBuilder.loadTexts: igmpSnoopGroupEntry.setStatus('current')
igmpSnoopGroupData = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 8, 2, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopGroupData.setStatus('current')
onuLoopTestTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 9), )
if mibBuilder.loadTexts: onuLoopTestTable.setStatus('current')
onuLoopTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 9, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: onuLoopTestEntry.setStatus('current')
onuLoopTestData = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 9, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuLoopTestData.setStatus('current')
onuLoopTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 9, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuLoopTestResult.setStatus('current')
onuDynMac = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 10))
onuDynMacOperTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 10, 1), )
if mibBuilder.loadTexts: onuDynMacOperTable.setStatus('current')
onuDynMacOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 10, 1, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "uniPortId"))
if mibBuilder.loadTexts: onuDynMacOperEntry.setStatus('current')
onuDynMacOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("refresh", 2), ("clear", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuDynMacOperation.setStatus('current')
onuDynMacTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 10, 2), )
if mibBuilder.loadTexts: onuDynMacTable.setStatus('current')
onuDynMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 10, 2, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "uniPortId"), (0, "FD-ONU-MIB", "onuDynMacIndex"))
if mibBuilder.loadTexts: onuDynMacEntry.setStatus('current')
onuDynMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: onuDynMacIndex.setStatus('current')
onuDynMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 10, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuDynMacAddr.setStatus('current')
onuVoiceService = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11))
onuIADInfoTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 1), )
if mibBuilder.loadTexts: onuIADInfoTable.setStatus('current')
onuIADInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 1, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: onuIADInfoEntry.setStatus('current')
onuIADMac = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuIADMac.setStatus('current')
onuIADProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("h248", 0), ("sip", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuIADProtocol.setStatus('current')
onuIADSwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuIADSwVersion.setStatus('current')
onuIADSwTime = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuIADSwTime.setStatus('current')
onuIADVoipNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuIADVoipNum.setStatus('current')
onuIADParamCfgTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2), )
if mibBuilder.loadTexts: onuIADParamCfgTable.setStatus('current')
onuIADParamCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: onuIADParamCfgEntry.setStatus('current')
onuIADMode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("static", 0), ("dhcp", 1), ("pppoe", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADMode.setStatus('current')
onuIADIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADIpAddr.setStatus('current')
onuIADNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADNetMask.setStatus('current')
onuIADDefaultGw = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADDefaultGw.setStatus('current')
onuIADPppoeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("chap", 1), ("pap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADPppoeMode.setStatus('current')
onuIADPppoeUsrnm = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADPppoeUsrnm.setStatus('current')
onuIADPppoePw = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADPppoePw.setStatus('current')
onuIADTagMode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("passThrough", 0), ("tag", 1), ("vlanStack", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADTagMode.setStatus('current')
onuIADVoiceCVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADVoiceCVlan.setStatus('current')
onuIADVoiceSVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADVoiceSVlan.setStatus('current')
onuIADVoicePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADVoicePriority.setStatus('current')
onuIADH248Param = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3))
h248ParamCfgTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1), )
if mibBuilder.loadTexts: h248ParamCfgTable.setStatus('current')
h248ParamCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: h248ParamCfgEntry.setStatus('current')
h248MgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248MgPort.setStatus('current')
h248MgcIp = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248MgcIp.setStatus('current')
h248MgcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248MgcPort.setStatus('current')
h248BakMacIp = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248BakMacIp.setStatus('current')
h248BakMgcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248BakMgcPort.setStatus('current')
h248ActiveMgc = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("backup", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248ActiveMgc.setStatus('current')
h248RegMode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ipAddress", 0), ("domainName", 1), ("deviceName", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248RegMode.setStatus('current')
h248MID = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248MID.setStatus('current')
h248HbMode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("close", 0), ("h248ctc", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248HbMode.setStatus('current')
h248HbCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248HbCycle.setStatus('current')
h248HbCount = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248HbCount.setStatus('current')
h248UserTIDTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 2), )
if mibBuilder.loadTexts: h248UserTIDTable.setStatus('current')
h248UserTIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 2, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "onuIADPotsId"))
if mibBuilder.loadTexts: h248UserTIDEntry.setStatus('current')
onuVoipPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuVoipPortId.setStatus('current')
h248UserTIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248UserTIDName.setStatus('current')
h248RtpTIDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 3), )
if mibBuilder.loadTexts: h248RtpTIDCfgTable.setStatus('current')
h248RtpTIDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 3, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: h248RtpTIDCfgEntry.setStatus('current')
h248RtpTIDNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248RtpTIDNum.setStatus('current')
h248RtpTIDPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248RtpTIDPrefix.setStatus('current')
h248RtpTIDDigitBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248RtpTIDDigitBegin.setStatus('current')
h248RtpTIDMode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("align", 0), ("nonAlign", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248RtpTIDMode.setStatus('current')
h248RtpTIDDigitLen = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h248RtpTIDDigitLen.setStatus('current')
h248RtpTIDInfoTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 4), )
if mibBuilder.loadTexts: h248RtpTIDInfoTable.setStatus('current')
h248RtpTIDInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 4, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: h248RtpTIDInfoEntry.setStatus('current')
h248RtpTIDCount = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h248RtpTIDCount.setStatus('current')
h248FstRtpTIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 3, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h248FstRtpTIDName.setStatus('current')
onuIADSipParam = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4))
sipParamCfgTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1), )
if mibBuilder.loadTexts: sipParamCfgTable.setStatus('current')
sipParamCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: sipParamCfgEntry.setStatus('current')
sipMgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipMgPort.setStatus('current')
sipProxySvrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxySvrIp.setStatus('current')
sipProxySvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxySvrPort.setStatus('current')
sipBakProxySvrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipBakProxySvrIp.setStatus('current')
sipBakProxySvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipBakProxySvrPort.setStatus('current')
sipActiveProxySvr = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipActiveProxySvr.setStatus('current')
sipRegSvrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegSvrIp.setStatus('current')
sipRegSvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegSvrPort.setStatus('current')
sipBakRegSvrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipBakRegSvrIp.setStatus('current')
sipBakRegSvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipBakRegSvrPort.setStatus('current')
sipOutBoundSvrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipOutBoundSvrIp.setStatus('current')
sipOutBoundSvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipOutBoundSvrPort.setStatus('current')
sipRegInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegInterval.setStatus('current')
sipHbSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipHbSwitch.setStatus('current')
sipHbCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipHbCycle.setStatus('current')
sipHbCount = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipHbCount.setStatus('current')
sipUserCfgTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 2), )
if mibBuilder.loadTexts: sipUserCfgTable.setStatus('current')
sipUserCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 2, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "onuIADPotsId"))
if mibBuilder.loadTexts: sipUserCfgEntry.setStatus('current')
sipUserAccount = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUserAccount.setStatus('current')
sipUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUserName.setStatus('current')
sipUserPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUserPasswd.setStatus('current')
sipDigitMapTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 3), )
if mibBuilder.loadTexts: sipDigitMapTable.setStatus('current')
sipDigitMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 3, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: sipDigitMapEntry.setStatus('current')
sipDigitMapLen = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDigitMapLen.setStatus('current')
sipDigitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 4, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipDigitMap.setStatus('current')
onuIADFaxCfgTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 5), )
if mibBuilder.loadTexts: onuIADFaxCfgTable.setStatus('current')
onuIADFaxCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 5, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: onuIADFaxCfgEntry.setStatus('current')
onuIADVoiceFaxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("passthrough", 0), ("t38", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADVoiceFaxMode.setStatus('current')
onuIADVoiceFaxControl = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("negotiation", 0), ("autoVBD", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADVoiceFaxControl.setStatus('current')
onuIADOperTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 6), )
if mibBuilder.loadTexts: onuIADOperTable.setStatus('current')
onuIADOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 6, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"))
if mibBuilder.loadTexts: onuIADOperEntry.setStatus('current')
onuIADOperStatusSet = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("reregister", 0), ("logout", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADOperStatusSet.setStatus('current')
onuIADOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("registering", 0), ("regSuccess", 1), ("iadFault", 2), ("logout", 3), ("iadRestarting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuIADOperStatus.setStatus('current')
onuIADPOTSStatusTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 7), )
if mibBuilder.loadTexts: onuIADPOTSStatusTable.setStatus('current')
onuIADPOTSStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 7, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "onuIADPotsId"))
if mibBuilder.loadTexts: onuIADPOTSStatusEntry.setStatus('current')
onuIADPotsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("registering", 0), ("idle", 1), ("pickUp", 2), ("dialing", 3), ("ringing", 4), ("ringBack", 5), ("connecting", 6), ("connected", 7), ("releasing", 8), ("regFailure", 9), ("notActivated", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuIADPotsStatus.setStatus('current')
onuIADPotsServiceState = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("endLocal", 0), ("endRemote", 1), ("endAuto", 2), ("normal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuIADPotsServiceState.setStatus('current')
onuIADPotsCodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("g711a", 0), ("g729", 1), ("g711u", 2), ("g723", 3), ("g726", 4), ("t38", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuIADPotsCodeMode.setStatus('current')
onuIADPotsId = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("iadPots1", 1), ("iadPots2", 2), ("iadPots3", 3), ("iadPots4", 4), ("iadPots5", 5), ("iadPots6", 6), ("iadPots7", 7), ("iadPots8", 8))))
if mibBuilder.loadTexts: onuIADPotsId.setStatus('current')
onuIADPOTSEnableTable = MibTable((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 8), )
if mibBuilder.loadTexts: onuIADPOTSEnableTable.setStatus('current')
onuIADPOTSEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 8, 1), ).setIndexNames((0, "FD-SYSTEM-MIB", "ponCardSlotId"), (0, "FD-OLT-MIB", "oltId"), (0, "FD-ONU-MIB", "onuId"), (0, "FD-ONU-MIB", "onuIADPotsId"))
if mibBuilder.loadTexts: onuIADPOTSEnableEntry.setStatus('current')
potsId = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("iadPots1", 1), ("iadPots2", 2), ("iadPots3", 3), ("iadPots4", 4), ("iadPots5", 5), ("iadPots6", 6), ("iadPots7", 7), ("iadPots8", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: potsId.setStatus('current')
onuIADPotsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 11, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuIADPotsEnable.setStatus('current')
fdOnuConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15))
fdOnuGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15, 1))
fdOnuBaseManageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15, 1, 1)).setObjects(("FD-ONU-MIB", "onuDeviceType"), ("FD-ONU-MIB", "onuFactorySerial"), ("FD-ONU-MIB", "onuUserInfo"), ("FD-ONU-MIB", "onuHwRev"), ("FD-ONU-MIB", "onuFwRev"), ("FD-ONU-MIB", "onuBaseMac"), ("FD-ONU-MIB", "maxAllowedLLIDs"), ("FD-ONU-MIB", "registeredLLIDNum"), ("FD-ONU-MIB", "onuOnLineStatus"), ("FD-ONU-MIB", "onuUserTrafficEnable"), ("FD-ONU-MIB", "onuRangeValue"), ("FD-ONU-MIB", "onuMgmtType"), ("FD-ONU-MIB", "onuLaserRxPower"), ("FD-ONU-MIB", "onuLaserTxPower"), ("FD-ONU-MIB", "onuOperation"), ("FD-ONU-MIB", "onuRstpEnable"), ("FD-ONU-MIB", "onuQueueCfgData"), ("FD-ONU-MIB", "onuAclRuleCfgData"), ("FD-ONU-MIB", "onuPortVlanData"), ("FD-ONU-MIB", "maxTrafficOutputRate"), ("FD-ONU-MIB", "outputModule"), ("FD-ONU-MIB", "scheduleAlgorithm"), ("FD-ONU-MIB", "policingTrafficType"), ("FD-ONU-MIB", "maxTrafficInputRate"), ("FD-ONU-MIB", "inputModule"), ("FD-ONU-MIB", "onuDynMacOperation"), ("FD-ONU-MIB", "supportUniPorts"), ("FD-ONU-MIB", "onuLinkIdMap"), ("FD-ONU-MIB", "onuDynMacAddr"), ("FD-ONU-MIB", "onuUpgradeStat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fdOnuBaseManageGroup = fdOnuBaseManageGroup.setStatus('current')
fdOnuAdvanceManageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15, 1, 2)).setObjects(("FD-ONU-MIB", "onuChipProCode"), ("FD-ONU-MIB", "onuChipProVer"), ("FD-ONU-MIB", "onuChipId"), ("FD-ONU-MIB", "onuChipVer"), ("FD-ONU-MIB", "onuBootVer"), ("FD-ONU-MIB", "onuPersVer"), ("FD-ONU-MIB", "onuChipApp0Ver"), ("FD-ONU-MIB", "onuChipApp1Ver"), ("FD-ONU-MIB", "onuChipDiagVer"), ("FD-ONU-MIB", "onuAddiVlanEthType"), ("FD-ONU-MIB", "onuRstpEnable"), ("FD-ONU-MIB", "onuLocalSwitch"), ("FD-ONU-MIB", "onuCatv"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fdOnuAdvanceManageGroup = fdOnuAdvanceManageGroup.setStatus('current')
fdOnuPortParaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15, 1, 3)).setObjects(("FD-ONU-MIB", "uniPortUserInfo"), ("FD-ONU-MIB", "uniPortLink"), ("FD-ONU-MIB", "uniPortAutoNego"), ("FD-ONU-MIB", "uniPortSpeed"), ("FD-ONU-MIB", "uniPortDuplex"), ("FD-ONU-MIB", "uniPortFlowCtrl"), ("FD-ONU-MIB", "uniPortMacEntryLimit"), ("FD-ONU-MIB", "uniPortMacAgeTime"), ("FD-ONU-MIB", "uniPortFowardMode"), ("FD-ONU-MIB", "uniPortEnable"), ("FD-ONU-MIB", "uniPortRstpState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fdOnuPortParaGroup = fdOnuPortParaGroup.setStatus('current')
onuIgmpSnoopGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15, 1, 4)).setObjects(("FD-ONU-MIB", "igmpSnoopParaData"), ("FD-ONU-MIB", "igmpSnoopGroupData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    onuIgmpSnoopGroup = onuIgmpSnoopGroup.setStatus('current')
fdOnuLpTestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15, 1, 5)).setObjects(("FD-ONU-MIB", "onuLoopTestData"), ("FD-ONU-MIB", "onuLoopTestResult"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fdOnuLpTestGroup = fdOnuLpTestGroup.setStatus('current')
fdOnuVoiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15, 1, 6)).setObjects(("FD-ONU-MIB", "onuIADMac"), ("FD-ONU-MIB", "onuIADProtocol"), ("FD-ONU-MIB", "onuIADSwVersion"), ("FD-ONU-MIB", "onuIADSwTime"), ("FD-ONU-MIB", "onuIADVoipNum"), ("FD-ONU-MIB", "onuIADMode"), ("FD-ONU-MIB", "onuIADIpAddr"), ("FD-ONU-MIB", "onuIADNetMask"), ("FD-ONU-MIB", "onuIADDefaultGw"), ("FD-ONU-MIB", "onuIADPppoeMode"), ("FD-ONU-MIB", "onuIADPppoeUsrnm"), ("FD-ONU-MIB", "onuIADPppoePw"), ("FD-ONU-MIB", "onuIADTagMode"), ("FD-ONU-MIB", "onuIADVoiceCVlan"), ("FD-ONU-MIB", "onuIADVoiceSVlan"), ("FD-ONU-MIB", "onuIADVoicePriority"), ("FD-ONU-MIB", "h248MgPort"), ("FD-ONU-MIB", "h248MgcIp"), ("FD-ONU-MIB", "h248MgcPort"), ("FD-ONU-MIB", "h248BakMacIp"), ("FD-ONU-MIB", "h248BakMgcPort"), ("FD-ONU-MIB", "h248ActiveMgc"), ("FD-ONU-MIB", "h248RegMode"), ("FD-ONU-MIB", "h248MID"), ("FD-ONU-MIB", "h248HbMode"), ("FD-ONU-MIB", "h248HbCycle"), ("FD-ONU-MIB", "h248HbCount"), ("FD-ONU-MIB", "onuVoipPortId"), ("FD-ONU-MIB", "h248UserTIDName"), ("FD-ONU-MIB", "h248RtpTIDNum"), ("FD-ONU-MIB", "h248RtpTIDPrefix"), ("FD-ONU-MIB", "h248RtpTIDDigitBegin"), ("FD-ONU-MIB", "h248RtpTIDMode"), ("FD-ONU-MIB", "h248RtpTIDDigitLen"), ("FD-ONU-MIB", "h248RtpTIDCount"), ("FD-ONU-MIB", "h248FstRtpTIDName"), ("FD-ONU-MIB", "sipMgPort"), ("FD-ONU-MIB", "sipProxySvrIp"), ("FD-ONU-MIB", "sipProxySvrPort"), ("FD-ONU-MIB", "sipBakProxySvrIp"), ("FD-ONU-MIB", "sipBakProxySvrPort"), ("FD-ONU-MIB", "sipActiveProxySvr"), ("FD-ONU-MIB", "sipRegSvrIp"), ("FD-ONU-MIB", "sipRegSvrPort"), ("FD-ONU-MIB", "sipBakRegSvrIp"), ("FD-ONU-MIB", "sipBakRegSvrPort"), ("FD-ONU-MIB", "sipOutBoundSvrIp"), ("FD-ONU-MIB", "sipOutBoundSvrPort"), ("FD-ONU-MIB", "sipRegInterval"), ("FD-ONU-MIB", "sipHbSwitch"), ("FD-ONU-MIB", "sipHbCycle"), ("FD-ONU-MIB", "sipHbCount"), ("FD-ONU-MIB", "sipUserAccount"), ("FD-ONU-MIB", "sipUserName"), ("FD-ONU-MIB", "sipUserPasswd"), ("FD-ONU-MIB", "sipDigitMapLen"), ("FD-ONU-MIB", "sipDigitMap"), ("FD-ONU-MIB", "onuIADVoiceFaxMode"), ("FD-ONU-MIB", "onuIADVoiceFaxControl"), ("FD-ONU-MIB", "onuIADOperStatusSet"), ("FD-ONU-MIB", "onuIADOperStatus"), ("FD-ONU-MIB", "onuIADPotsStatus"), ("FD-ONU-MIB", "onuIADPotsServiceState"), ("FD-ONU-MIB", "onuIADPotsCodeMode"), ("FD-ONU-MIB", "onuIADPotsEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fdOnuVoiceGroup = fdOnuVoiceGroup.setStatus('current')
fdOnuCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15, 2))
fdOnuCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 34592, 1, 3, 4, 15, 2, 1)).setObjects(("FD-ONU-MIB", "fdOnuBaseManageGroup"), ("FD-ONU-MIB", "fdOnuPortParaGroup"), ("FD-ONU-MIB", "onuIgmpSnoopGroup"), ("FD-ONU-MIB", "fdOnuLpTestGroup"), ("FD-ONU-MIB", "fdOnuVoiceGroup"), ("FD-ONU-MIB", "fdOnuAdvanceManageGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fdOnuCompliance = fdOnuCompliance.setStatus('current')
mibBuilder.exportSymbols("FD-ONU-MIB", igmpSnoopGroupData=igmpSnoopGroupData, onuIADSwVersion=onuIADSwVersion, h248ParamCfgEntry=h248ParamCfgEntry, h248HbCount=h248HbCount, onuDynMacOperEntry=onuDynMacOperEntry, h248RtpTIDCount=h248RtpTIDCount, uniPortFowardMode=uniPortFowardMode, onuChipId=onuChipId, onuChipVer=onuChipVer, onuIADVoiceSVlan=onuIADVoiceSVlan, onuChipApp0Ver=onuChipApp0Ver, fdOnuPortParaGroup=fdOnuPortParaGroup, onuVoipPortId=onuVoipPortId, sipDigitMapEntry=sipDigitMapEntry, onuDynMacOperTable=onuDynMacOperTable, sipHbSwitch=sipHbSwitch, onuIADPOTSEnableEntry=onuIADPOTSEnableEntry, onuQueueCfgEntry=onuQueueCfgEntry, onuBaseManageTable=onuBaseManageTable, onuIADPotsId=onuIADPotsId, fdOnuCompliances=fdOnuCompliances, onuPersVer=onuPersVer, onuPortQos=onuPortQos, h248UserTIDEntry=h248UserTIDEntry, sipBakProxySvrPort=sipBakProxySvrPort, igmpSnooping=igmpSnooping, onuAdvancedManage=onuAdvancedManage, onuIADPotsCodeMode=onuIADPotsCodeMode, h248RtpTIDInfoTable=h248RtpTIDInfoTable, fdOnuAdvanceManageGroup=fdOnuAdvanceManageGroup, uniPortAutoNego=uniPortAutoNego, fdOnuCompliance=fdOnuCompliance, onuUpgradeStat=onuUpgradeStat, sipUserAccount=sipUserAccount, onuIADProtocol=onuIADProtocol, sipDigitMapLen=sipDigitMapLen, onuUserInfo=onuUserInfo, onuLoopTestTable=onuLoopTestTable, onuBaseManageEntry=onuBaseManageEntry, onuChipDiagVer=onuChipDiagVer, onuIADParamCfgTable=onuIADParamCfgTable, onuPortVlanTable=onuPortVlanTable, onuIADVoiceCVlan=onuIADVoiceCVlan, uniPortFlowCtrl=uniPortFlowCtrl, maxAllowedLLIDs=maxAllowedLLIDs, igmpSnoopGroupTable=igmpSnoopGroupTable, onuIADOperEntry=onuIADOperEntry, sipUserCfgEntry=sipUserCfgEntry, onuIADInfoEntry=onuIADInfoEntry, onuDynMacEntry=onuDynMacEntry, onuRangeValue=onuRangeValue, onuIADVoicePriority=onuIADVoicePriority, onuOnLineStatus=onuOnLineStatus, sipDigitMapTable=sipDigitMapTable, onuIADOperTable=onuIADOperTable, onuIADFaxCfgTable=onuIADFaxCfgTable, portIngressPolicingEntry=portIngressPolicingEntry, onuIADNetMask=onuIADNetMask, onuIADMode=onuIADMode, onuBootVer=onuBootVer, onuLaserTxPower=onuLaserTxPower, onuDynMacOperation=onuDynMacOperation, maxTrafficOutputRate=maxTrafficOutputRate, h248RtpTIDDigitBegin=h248RtpTIDDigitBegin, onuIADOperStatusSet=onuIADOperStatusSet, onuId=onuId, outputModule=outputModule, onuLaserRxPower=onuLaserRxPower, onuChipApp1Ver=onuChipApp1Ver, onuFactorySerial=onuFactorySerial, uniPortMacEntryLimit=uniPortMacEntryLimit, onuVoiceService=onuVoiceService, h248HbMode=h248HbMode, onuAclRuleEntry=onuAclRuleEntry, onuOperation=onuOperation, onuLoopTestEntry=onuLoopTestEntry, sipActiveProxySvr=sipActiveProxySvr, onuDynMacIndex=onuDynMacIndex, onuIADPotsStatus=onuIADPotsStatus, onuLoopTestResult=onuLoopTestResult, h248RegMode=h248RegMode, onuAdvancedConfigTable=onuAdvancedConfigTable, uniPortEnable=uniPortEnable, onuPortVlanEntry=onuPortVlanEntry, h248RtpTIDNum=h248RtpTIDNum, registeredLLIDNum=registeredLLIDNum, onuIADPppoeMode=onuIADPppoeMode, h248RtpTIDInfoEntry=h248RtpTIDInfoEntry, uniPortUserInfo=uniPortUserInfo, uniPortDuplex=uniPortDuplex, onuIADTagMode=onuIADTagMode, onuIADVoiceFaxMode=onuIADVoiceFaxMode, sipParamCfgEntry=sipParamCfgEntry, onuQueueCfgData=onuQueueCfgData, h248HbCycle=h248HbCycle, uniPortSpeed=uniPortSpeed, sipMgPort=sipMgPort, onuLinkIdMap=onuLinkIdMap, sipProxySvrPort=sipProxySvrPort, sipHbCount=sipHbCount, h248RtpTIDCfgEntry=h248RtpTIDCfgEntry, fdOnuGroups=fdOnuGroups, igmpSnoopParaTable=igmpSnoopParaTable, h248MgPort=h248MgPort, fdOnuLpTestGroup=fdOnuLpTestGroup, fdOnu=fdOnu, onuIADVoipNum=onuIADVoipNum, onuUniPortEntry=onuUniPortEntry, onuLoopTestData=onuLoopTestData, onuIADH248Param=onuIADH248Param, h248FstRtpTIDName=h248FstRtpTIDName, supportUniPorts=supportUniPorts, sipOutBoundSvrIp=sipOutBoundSvrIp, sipUserName=sipUserName, sipUserPasswd=sipUserPasswd, onuIntPortId=onuIntPortId, onuIADFaxCfgEntry=onuIADFaxCfgEntry, onuIADOperStatus=onuIADOperStatus, onuIgmpSnoopGroup=onuIgmpSnoopGroup, onuIADDefaultGw=onuIADDefaultGw, onuIADPppoePw=onuIADPppoePw, maxTrafficInputRate=maxTrafficInputRate, onuIADPotsServiceState=onuIADPotsServiceState, h248MID=h248MID, onuDeviceType=onuDeviceType, igmpSnoopGroupEntry=igmpSnoopGroupEntry, onuIADPOTSStatusEntry=onuIADPOTSStatusEntry, fdOnuVoiceGroup=fdOnuVoiceGroup, onuIADSwTime=onuIADSwTime, h248MgcIp=h248MgcIp, h248MgcPort=h248MgcPort, onuDynMacTable=onuDynMacTable, uniPortId=uniPortId, onuDynMac=onuDynMac, onuRstpEnable=onuRstpEnable, policingTrafficType=policingTrafficType, onuUserTrafficEnable=onuUserTrafficEnable, onuAdvancedConfigEntry=onuAdvancedConfigEntry, onuBaseMac=onuBaseMac, igmpSnoopParaEntry=igmpSnoopParaEntry, h248BakMacIp=h248BakMacIp, sipUserCfgTable=sipUserCfgTable, onuIADPotsEnable=onuIADPotsEnable, onuIADPOTSStatusTable=onuIADPOTSStatusTable, portEgressShappingTable=portEgressShappingTable, onuIADSipParam=onuIADSipParam, h248UserTIDName=h248UserTIDName, onuLocalSwitch=onuLocalSwitch, onuIADIpAddr=onuIADIpAddr, h248ParamCfgTable=h248ParamCfgTable, sipRegSvrPort=sipRegSvrPort, onuIADPppoeUsrnm=onuIADPppoeUsrnm, fdOnuBaseManageGroup=fdOnuBaseManageGroup, sipBakProxySvrIp=sipBakProxySvrIp, onuChipProCode=onuChipProCode, sipOutBoundSvrPort=sipOutBoundSvrPort, onuChipInfoEntry=onuChipInfoEntry, uniPortLink=uniPortLink, h248RtpTIDCfgTable=h248RtpTIDCfgTable, sipRegInterval=sipRegInterval, onuChipInfoTable=onuChipInfoTable, onuIADPOTSEnableTable=onuIADPOTSEnableTable, sipDigitMap=sipDigitMap, onuMgmtType=onuMgmtType, igmpSnoopParaData=igmpSnoopParaData, onuIADMac=onuIADMac, potsId=potsId, onuFwRev=onuFwRev, onuIADParamCfgEntry=onuIADParamCfgEntry, h248UserTIDTable=h248UserTIDTable, onuAclRuleCfgData=onuAclRuleCfgData, sipBakRegSvrIp=sipBakRegSvrIp, sipProxySvrIp=sipProxySvrIp, fdOnuConformance=fdOnuConformance, onuChipProVer=onuChipProVer, PYSNMP_MODULE_ID=fdOnu, onuCatv=onuCatv, onuQueueCfgTable=onuQueueCfgTable, h248ActiveMgc=h248ActiveMgc, onuIADInfoTable=onuIADInfoTable, sipRegSvrIp=sipRegSvrIp, h248RtpTIDMode=h248RtpTIDMode, portIngressPolicingTable=portIngressPolicingTable, sipParamCfgTable=sipParamCfgTable, onuAddiVlanEthType=onuAddiVlanEthType, sipBakRegSvrPort=sipBakRegSvrPort, inputModule=inputModule, onuIADVoiceFaxControl=onuIADVoiceFaxControl, portEgressShappingEntry=portEgressShappingEntry, scheduleAlgorithm=scheduleAlgorithm, onuUniPortTable=onuUniPortTable, onuAclRuleTable=onuAclRuleTable, h248BakMgcPort=h248BakMgcPort, uniPortMacAgeTime=uniPortMacAgeTime, sipHbCycle=sipHbCycle, onuPortVlanData=onuPortVlanData, onuDynMacAddr=onuDynMacAddr, uniPortRstpState=uniPortRstpState, h248RtpTIDDigitLen=h248RtpTIDDigitLen, onuHwRev=onuHwRev, h248RtpTIDPrefix=h248RtpTIDPrefix, onuPortId=onuPortId)
