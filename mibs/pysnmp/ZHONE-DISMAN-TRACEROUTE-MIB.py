#
# PySNMP MIB module ZHONE-DISMAN-TRACEROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-DISMAN-TRACEROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:41:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, mib_2, TimeTicks, Unsigned32, ModuleIdentity, ObjectIdentity, Counter32, NotificationType, Integer32, iso, Bits, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "mib-2", "TimeTicks", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "Counter32", "NotificationType", "Integer32", "iso", "Bits", "Counter64", "MibIdentifier")
RowStatus, StorageType, DisplayString, TextualConvention, TruthValue, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "StorageType", "DisplayString", "TextualConvention", "TruthValue", "DateAndTime")
OperationResponseStatus, = mibBuilder.importSymbols("ZHONE-DISMAN-PING-MIB", "OperationResponseStatus")
zhoneIp, = mibBuilder.importSymbols("Zhone", "zhoneIp")
zhoneTraceRouteMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20))
zhoneTraceRouteMIB.setRevisions(('2000-09-21 00:00',))
if mibBuilder.loadTexts: zhoneTraceRouteMIB.setLastUpdated('200009210000Z')
if mibBuilder.loadTexts: zhoneTraceRouteMIB.setOrganization('IETF Distributed Management Working Group')
zhoneTraceRouteNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 0))
zhoneTraceRouteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1))
zhoneTraceRouteConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 2))
zhoneTraceRouteImplementationTypeDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 3))
zhoneTraceRouteUsingUdpProbes = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 3, 1))
if mibBuilder.loadTexts: zhoneTraceRouteUsingUdpProbes.setStatus('current')
zhoneTraceRouteMaxConcurrentRequests = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 1), Unsigned32().clone(10)).setUnits('requests').setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneTraceRouteMaxConcurrentRequests.setStatus('current')
zhoneTraceRouteCtlIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteCtlIndexNext.setStatus('current')
zhoneTraceRouteCtlTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3), )
if mibBuilder.loadTexts: zhoneTraceRouteCtlTable.setStatus('current')
zhoneTraceRouteCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1), ).setIndexNames((0, "ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlIndex"))
if mibBuilder.loadTexts: zhoneTraceRouteCtlEntry.setStatus('current')
zhoneTraceRouteCtlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteCtlIndex.setStatus('current')
zhoneTraceRouteCtlTargetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlTargetAddressType.setStatus('current')
zhoneTraceRouteCtlTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlTargetAddress.setStatus('current')
zhoneTraceRouteCtlByPassRouteTable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlByPassRouteTable.setStatus('current')
zhoneTraceRouteCtlDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65507))).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlDataSize.setStatus('current')
zhoneTraceRouteCtlTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(3)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlTimeOut.setStatus('current')
zhoneTraceRouteCtlProbesPerHop = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setUnits('probes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlProbesPerHop.setStatus('current')
zhoneTraceRouteCtlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(33434)).setUnits('UDP Port').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlPort.setStatus('current')
zhoneTraceRouteCtlMaxTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(30)).setUnits('time-to-live value').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlMaxTtl.setStatus('current')
zhoneTraceRouteCtlDSField = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlDSField.setStatus('current')
zhoneTraceRouteCtlSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 11), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlSourceAddressType.setStatus('current')
zhoneTraceRouteCtlSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 12), InetAddress().clone(hexValue="0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlSourceAddress.setStatus('current')
zhoneTraceRouteCtlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 13), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlIfIndex.setStatus('current')
zhoneTraceRouteCtlMiscOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 14), SnmpAdminString().clone(hexValue="0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlMiscOptions.setStatus('current')
zhoneTraceRouteCtlMaxFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(5)).setUnits('timeouts').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlMaxFailures.setStatus('current')
zhoneTraceRouteCtlDontFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlDontFragment.setStatus('current')
zhoneTraceRouteCtlInitialTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlInitialTtl.setStatus('current')
zhoneTraceRouteCtlFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 18), Unsigned32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlFrequency.setStatus('current')
zhoneTraceRouteCtlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 19), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlStorageType.setStatus('current')
zhoneTraceRouteCtlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlAdminStatus.setStatus('current')
zhoneTraceRouteCtlDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 21), SnmpAdminString().clone(hexValue="0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlDescr.setStatus('current')
zhoneTraceRouteCtlMaxRows = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 22), Unsigned32().clone(50)).setUnits('rows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlMaxRows.setStatus('current')
zhoneTraceRouteCtlTrapGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 23), Bits().clone(namedValues=NamedValues(("pathChange", 0), ("testFailure", 1), ("testCompletion", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlTrapGeneration.setStatus('current')
zhoneTraceRouteCtlCreateHopsEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 24), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlCreateHopsEntries.setStatus('current')
zhoneTraceRouteCtlType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 25), ObjectIdentifier().clone((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 3, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlType.setStatus('current')
zhoneTraceRouteCtlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 3, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneTraceRouteCtlRowStatus.setStatus('current')
zhoneTraceRouteResultsTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4), )
if mibBuilder.loadTexts: zhoneTraceRouteResultsTable.setStatus('current')
zhoneTraceRouteResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4, 1), ).setIndexNames((0, "ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlIndex"))
if mibBuilder.loadTexts: zhoneTraceRouteResultsEntry.setStatus('current')
zhoneTraceRouteResultsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteResultsOperStatus.setStatus('current')
zhoneTraceRouteResultsCurHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4, 1, 2), Gauge32()).setUnits('hops').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteResultsCurHopCount.setStatus('current')
zhoneTraceRouteResultsCurProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4, 1, 3), Gauge32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteResultsCurProbeCount.setStatus('current')
zhoneTraceRouteResultsIpTgtAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteResultsIpTgtAddrType.setStatus('current')
zhoneTraceRouteResultsIpTgtAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteResultsIpTgtAddr.setStatus('current')
zhoneTraceRouteResultsTestAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4, 1, 6), Unsigned32()).setUnits('tests').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteResultsTestAttempts.setStatus('current')
zhoneTraceRouteResultsTestSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4, 1, 7), Unsigned32()).setUnits('tests').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteResultsTestSuccesses.setStatus('current')
zhoneTraceRouteResultsLastGoodPath = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 4, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteResultsLastGoodPath.setStatus('current')
zhoneTraceRouteHopsTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5), )
if mibBuilder.loadTexts: zhoneTraceRouteHopsTable.setStatus('current')
zhoneTraceRouteHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1), ).setIndexNames((0, "ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlIndex"), (0, "ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsHopIndex"))
if mibBuilder.loadTexts: zhoneTraceRouteHopsEntry.setStatus('current')
zhoneTraceRouteHopsHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: zhoneTraceRouteHopsHopIndex.setStatus('current')
zhoneTraceRouteHopsIpTgtAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteHopsIpTgtAddressType.setStatus('current')
zhoneTraceRouteHopsIpTgtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteHopsIpTgtAddress.setStatus('current')
zhoneTraceRouteHopsMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteHopsMinRtt.setStatus('current')
zhoneTraceRouteHopsMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteHopsMaxRtt.setStatus('current')
zhoneTraceRouteHopsAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteHopsAverageRtt.setStatus('current')
zhoneTraceRouteHopsRttSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteHopsRttSumOfSquares.setStatus('current')
zhoneTraceRouteHopsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteHopsSentProbes.setStatus('current')
zhoneTraceRouteHopsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteHopsProbeResponses.setStatus('current')
zhoneTraceRouteHopsLastGoodProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 1, 5, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneTraceRouteHopsLastGoodProbe.setStatus('current')
zhoneTraceRoutePathChange = NotificationType((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 0, 1)).setObjects(("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsIpTgtAddr"))
if mibBuilder.loadTexts: zhoneTraceRoutePathChange.setStatus('current')
zhoneTraceRouteTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 0, 2)).setObjects(("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsIpTgtAddr"))
if mibBuilder.loadTexts: zhoneTraceRouteTestFailed.setStatus('current')
zhoneTraceRouteTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 0, 3)).setObjects(("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsIpTgtAddr"))
if mibBuilder.loadTexts: zhoneTraceRouteTestCompleted.setStatus('current')
zhoneTraceRouteGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 2, 1))
zhoneTraceRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 2, 1, 1)).setObjects(("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteMaxConcurrentRequests"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlTargetAddressType"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlTargetAddress"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlByPassRouteTable"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlDataSize"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlTimeOut"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlProbesPerHop"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlPort"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlMaxTtl"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlDSField"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlSourceAddressType"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlSourceAddress"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlIfIndex"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlMiscOptions"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlMaxFailures"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlDontFragment"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlInitialTtl"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlFrequency"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlStorageType"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlAdminStatus"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlMaxRows"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlTrapGeneration"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlDescr"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlCreateHopsEntries"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlType"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteCtlRowStatus"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsOperStatus"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsCurHopCount"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsCurProbeCount"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsIpTgtAddrType"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsIpTgtAddr"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsTestAttempts"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsTestSuccesses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneTraceRouteGroup = zhoneTraceRouteGroup.setStatus('current')
zhoneTraceRouteTimeStampGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 2, 1, 2)).setObjects(("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteResultsLastGoodPath"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneTraceRouteTimeStampGroup = zhoneTraceRouteTimeStampGroup.setStatus('current')
zhoneTraceRouteNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 2, 1, 3)).setObjects(("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRoutePathChange"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteTestFailed"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteTestCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneTraceRouteNotificationsGroup = zhoneTraceRouteNotificationsGroup.setStatus('current')
zhoneTraceRouteHopsTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 4, 1, 20, 2, 1, 4)).setObjects(("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsIpTgtAddressType"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsIpTgtAddress"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsMinRtt"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsMaxRtt"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsAverageRtt"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsRttSumOfSquares"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsSentProbes"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsProbeResponses"), ("ZHONE-DISMAN-TRACEROUTE-MIB", "zhoneTraceRouteHopsLastGoodProbe"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneTraceRouteHopsTableGroup = zhoneTraceRouteHopsTableGroup.setStatus('current')
mibBuilder.exportSymbols("ZHONE-DISMAN-TRACEROUTE-MIB", zhoneTraceRouteMaxConcurrentRequests=zhoneTraceRouteMaxConcurrentRequests, zhoneTraceRouteResultsLastGoodPath=zhoneTraceRouteResultsLastGoodPath, zhoneTraceRouteResultsIpTgtAddrType=zhoneTraceRouteResultsIpTgtAddrType, zhoneTraceRouteHopsTable=zhoneTraceRouteHopsTable, zhoneTraceRouteCtlDataSize=zhoneTraceRouteCtlDataSize, zhoneTraceRouteCtlIfIndex=zhoneTraceRouteCtlIfIndex, zhoneTraceRouteCtlDescr=zhoneTraceRouteCtlDescr, zhoneTraceRouteCtlSourceAddress=zhoneTraceRouteCtlSourceAddress, zhoneTraceRouteHopsHopIndex=zhoneTraceRouteHopsHopIndex, zhoneTraceRouteHopsEntry=zhoneTraceRouteHopsEntry, zhoneTraceRouteResultsIpTgtAddr=zhoneTraceRouteResultsIpTgtAddr, zhoneTraceRouteHopsProbeResponses=zhoneTraceRouteHopsProbeResponses, zhoneTraceRouteNotificationsGroup=zhoneTraceRouteNotificationsGroup, zhoneTraceRouteCtlDSField=zhoneTraceRouteCtlDSField, zhoneTraceRouteHopsTableGroup=zhoneTraceRouteHopsTableGroup, zhoneTraceRouteImplementationTypeDomains=zhoneTraceRouteImplementationTypeDomains, zhoneTraceRouteCtlType=zhoneTraceRouteCtlType, zhoneTraceRouteHopsSentProbes=zhoneTraceRouteHopsSentProbes, zhoneTraceRouteCtlSourceAddressType=zhoneTraceRouteCtlSourceAddressType, zhoneTraceRouteResultsEntry=zhoneTraceRouteResultsEntry, zhoneTraceRouteCtlTrapGeneration=zhoneTraceRouteCtlTrapGeneration, zhoneTraceRouteCtlTimeOut=zhoneTraceRouteCtlTimeOut, zhoneTraceRouteCtlTable=zhoneTraceRouteCtlTable, zhoneTraceRouteResultsCurHopCount=zhoneTraceRouteResultsCurHopCount, zhoneTraceRouteTimeStampGroup=zhoneTraceRouteTimeStampGroup, zhoneTraceRouteHopsLastGoodProbe=zhoneTraceRouteHopsLastGoodProbe, zhoneTraceRouteCtlFrequency=zhoneTraceRouteCtlFrequency, PYSNMP_MODULE_ID=zhoneTraceRouteMIB, zhoneTraceRouteHopsMinRtt=zhoneTraceRouteHopsMinRtt, zhoneTraceRouteHopsIpTgtAddressType=zhoneTraceRouteHopsIpTgtAddressType, zhoneTraceRouteHopsMaxRtt=zhoneTraceRouteHopsMaxRtt, zhoneTraceRouteObjects=zhoneTraceRouteObjects, zhoneTraceRouteCtlMaxFailures=zhoneTraceRouteCtlMaxFailures, zhoneTraceRouteCtlAdminStatus=zhoneTraceRouteCtlAdminStatus, zhoneTraceRouteCtlByPassRouteTable=zhoneTraceRouteCtlByPassRouteTable, zhoneTraceRouteCtlInitialTtl=zhoneTraceRouteCtlInitialTtl, zhoneTraceRouteCtlTargetAddressType=zhoneTraceRouteCtlTargetAddressType, zhoneTraceRouteCtlMaxTtl=zhoneTraceRouteCtlMaxTtl, zhoneTraceRouteCtlMiscOptions=zhoneTraceRouteCtlMiscOptions, zhoneTraceRouteResultsOperStatus=zhoneTraceRouteResultsOperStatus, zhoneTraceRouteResultsTestSuccesses=zhoneTraceRouteResultsTestSuccesses, zhoneTraceRouteHopsAverageRtt=zhoneTraceRouteHopsAverageRtt, zhoneTraceRouteConformance=zhoneTraceRouteConformance, zhoneTraceRouteCtlProbesPerHop=zhoneTraceRouteCtlProbesPerHop, zhoneTraceRouteTestFailed=zhoneTraceRouteTestFailed, zhoneTraceRouteMIB=zhoneTraceRouteMIB, zhoneTraceRouteGroups=zhoneTraceRouteGroups, zhoneTraceRouteTestCompleted=zhoneTraceRouteTestCompleted, zhoneTraceRouteResultsTestAttempts=zhoneTraceRouteResultsTestAttempts, zhoneTraceRouteCtlTargetAddress=zhoneTraceRouteCtlTargetAddress, zhoneTraceRouteCtlStorageType=zhoneTraceRouteCtlStorageType, zhoneTraceRouteUsingUdpProbes=zhoneTraceRouteUsingUdpProbes, zhoneTraceRouteResultsCurProbeCount=zhoneTraceRouteResultsCurProbeCount, zhoneTraceRouteCtlEntry=zhoneTraceRouteCtlEntry, zhoneTraceRouteCtlIndex=zhoneTraceRouteCtlIndex, zhoneTraceRouteGroup=zhoneTraceRouteGroup, zhoneTraceRoutePathChange=zhoneTraceRoutePathChange, zhoneTraceRouteNotifications=zhoneTraceRouteNotifications, zhoneTraceRouteCtlPort=zhoneTraceRouteCtlPort, zhoneTraceRouteCtlMaxRows=zhoneTraceRouteCtlMaxRows, zhoneTraceRouteHopsRttSumOfSquares=zhoneTraceRouteHopsRttSumOfSquares, zhoneTraceRouteCtlIndexNext=zhoneTraceRouteCtlIndexNext, zhoneTraceRouteCtlDontFragment=zhoneTraceRouteCtlDontFragment, zhoneTraceRouteCtlRowStatus=zhoneTraceRouteCtlRowStatus, zhoneTraceRouteHopsIpTgtAddress=zhoneTraceRouteHopsIpTgtAddress, zhoneTraceRouteResultsTable=zhoneTraceRouteResultsTable, zhoneTraceRouteCtlCreateHopsEntries=zhoneTraceRouteCtlCreateHopsEntries)
