#
# PySNMP MIB module Wellfleet-SDLC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-SDLC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Gauge32, MibIdentifier, Counter64, Unsigned32, ObjectIdentity, TimeTicks, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "MibIdentifier", "Counter64", "Unsigned32", "ObjectIdentity", "TimeTicks", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "Integer32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfSdlcGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfSdlcGroup")
wfSdlc = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 1))
wfSdlcDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcDelete.setStatus('mandatory')
wfSdlcDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcDisable.setStatus('mandatory')
wfSdlcState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcState.setStatus('mandatory')
wfSdlcPortAdminTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2), )
if mibBuilder.loadTexts: wfSdlcPortAdminTable.setStatus('mandatory')
wfSdlcPortAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1), ).setIndexNames((0, "Wellfleet-SDLC-MIB", "wfSdlcPortAdminIndex"))
if mibBuilder.loadTexts: wfSdlcPortAdminEntry.setStatus('mandatory')
wfSdlcPortAdminDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminDelete.setStatus('mandatory')
wfSdlcPortAdminDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminDisable.setStatus('mandatory')
wfSdlcPortAdminIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortAdminIndex.setStatus('mandatory')
wfSdlcPortAdminAddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminAddress4.setStatus('mandatory')
wfSdlcPortAdminType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("leased", 1), ("switched", 2))).clone('leased')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminType.setStatus('mandatory')
wfSdlcPortAdminTopology = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ptop", 1), ("multipoint", 2))).clone('ptop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminTopology.setStatus('mandatory')
wfSdlcPortAdminACTIVTO = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminACTIVTO.setStatus('mandatory')
wfSdlcPortAdminPAUSE = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminPAUSE.setStatus('mandatory')
wfSdlcPortAdminCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminCredit.setStatus('mandatory')
wfSdlcPortAdminIdleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(6000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminIdleTimer.setStatus('mandatory')
wfSdlcPortAdminIdleRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminIdleRetry.setStatus('mandatory')
wfSdlcPortAdminNPRcvTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminNPRcvTimer.setStatus('mandatory')
wfSdlcPortAdminNPRcvRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminNPRcvRetry.setStatus('mandatory')
wfSdlcPortAdminWriteTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminWriteTimer.setStatus('mandatory')
wfSdlcPortAdminWriteRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminWriteRetry.setStatus('mandatory')
wfSdlcPortAdminLinkConnTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminLinkConnTimer.setStatus('mandatory')
wfSdlcPortAdminLinkConnRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminLinkConnRetry.setStatus('mandatory')
wfSdlcPortAdminPriFdplx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminPriFdplx.setStatus('mandatory')
wfSdlcPortAdminSecFdplx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminSecFdplx.setStatus('mandatory')
wfSdlcPortAdminUseRej = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminUseRej.setStatus('mandatory')
wfSdlcPortAdminPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("leased", 1), ("dialout", 2), ("autoanswer", 3), ("autoanswerdialout", 4), ("mandialout", 5), ("mananswer", 6), ("mananswerdialout", 7))).clone('leased')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminPortType.setStatus('mandatory')
wfSdlcPortAdminMaxXidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)).clone(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminMaxXidSize.setStatus('mandatory')
wfSdlcPortAdminMaxRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminMaxRetryCount.setStatus('mandatory')
wfSdlcPortAdminMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(265, 521, 1033, 2057, 4105))).clone(namedValues=NamedValues(("pdu0265", 265), ("pdu0521", 521), ("pdu1033", 1033), ("pdu2057", 2057), ("pdu4105", 4105))).clone('pdu1033')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminMaxFrameSize.setStatus('mandatory')
wfSdlcPortAdminDlcName8 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminDlcName8.setStatus('mandatory')
wfSdlcPortAdminCpType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("learn", 1), ("len", 2), ("network", 3), ("end", 4), ("vrn", 5))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminCpType.setStatus('mandatory')
wfSdlcPortAdminLsRole = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("neg", 1), ("pri", 2), ("sec", 3))).clone('pri')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminLsRole.setStatus('mandatory')
wfSdlcPortAdminPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminPortNumber.setStatus('mandatory')
wfSdlcPortAdminLsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminLsAddress.setStatus('mandatory')
wfSdlcPortAdminTotLsActLim = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminTotLsActLim.setStatus('mandatory')
wfSdlcPortAdminInLsActLim = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminInLsActLim.setStatus('mandatory')
wfSdlcPortAdminOutLsActLim = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminOutLsActLim.setStatus('mandatory')
wfSdlcPortAdminNegLsSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminNegLsSupp.setStatus('mandatory')
wfSdlcPortAdminRcvPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminRcvPoolSize.setStatus('mandatory')
wfSdlcPortAdminStatsColl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminStatsColl.setStatus('mandatory')
wfSdlcPortAdminDebugFlg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 2, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcPortAdminDebugFlg.setStatus('mandatory')
wfSdlcPortOperTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3), )
if mibBuilder.loadTexts: wfSdlcPortOperTable.setStatus('mandatory')
wfSdlcPortOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1), ).setIndexNames((0, "Wellfleet-SDLC-MIB", "wfSdlcPortOperIndex"))
if mibBuilder.loadTexts: wfSdlcPortOperEntry.setStatus('mandatory')
wfSdlcPortOperIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperIndex.setStatus('mandatory')
wfSdlcPortOperAddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperAddress4.setStatus('mandatory')
wfSdlcPortOperRole = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("sec", 1), ("pri", 2), ("neg", 4))).clone('pri')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperRole.setStatus('mandatory')
wfSdlcPortOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("leased", 1), ("switched", 2))).clone('leased')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperType.setStatus('mandatory')
wfSdlcPortOperTopology = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ptop", 1), ("multipoint", 2))).clone('multipoint')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperTopology.setStatus('mandatory')
wfSdlcPortOperACTIVTO = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperACTIVTO.setStatus('mandatory')
wfSdlcPortOperPAUSE = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperPAUSE.setStatus('mandatory')
wfSdlcPortOperSlowPollMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("servlim", 1), ("pause", 2), ("other", 3))).clone('pause')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperSlowPollMethod.setStatus('mandatory')
wfSdlcPortOperSlowPollTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperSlowPollTimer.setStatus('mandatory')
wfSdlcPortOperAbmSuppInd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("notsupported", 2))).clone('notsupported')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperAbmSuppInd.setStatus('mandatory')
wfSdlcPortOperSimRimSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("notsupported", 2))).clone('supported')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperSimRimSupp.setStatus('mandatory')
wfSdlcPortOperSecInitNonactSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("notsupported", 2))).clone('notsupported')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortOperSecInitNonactSupp.setStatus('mandatory')
wfSdlcPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 4), )
if mibBuilder.loadTexts: wfSdlcPortStatsTable.setStatus('mandatory')
wfSdlcPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 4, 1), ).setIndexNames((0, "Wellfleet-SDLC-MIB", "wfSdlcPortStatsIndex"))
if mibBuilder.loadTexts: wfSdlcPortStatsEntry.setStatus('mandatory')
wfSdlcPortStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortStatsIndex.setStatus('mandatory')
wfSdlcPortStatsDwarfFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcPortStatsDwarfFrames.setStatus('mandatory')
wfSdlcLSAdminTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5), )
if mibBuilder.loadTexts: wfSdlcLSAdminTable.setStatus('mandatory')
wfSdlcLSAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1), ).setIndexNames((0, "Wellfleet-SDLC-MIB", "wfSdlcLSAdminIfIndex"), (0, "Wellfleet-SDLC-MIB", "wfSdlcLSAdminAddress"))
if mibBuilder.loadTexts: wfSdlcLSAdminEntry.setStatus('mandatory')
wfSdlcLSAdminDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminDelete.setStatus('mandatory')
wfSdlcLSAdminDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminDisable.setStatus('mandatory')
wfSdlcLSAdminIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSAdminIfIndex.setStatus('mandatory')
wfSdlcLSAdminAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSAdminAddress.setStatus('mandatory')
wfSdlcLSAdminGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminGroupAddress.setStatus('mandatory')
wfSdlcLSAdminRole = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("negot", 1), ("primary", 2), ("sec", 3), ("msec", 4))).clone('primary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminRole.setStatus('mandatory')
wfSdlcLSAdminMAXDATA = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(265, 521, 1033, 2057, 4105))).clone(namedValues=NamedValues(("pdu0265", 265), ("pdu0521", 521), ("pdu1033", 1033), ("pdu2057", 2057), ("pdu4105", 4105))).clone('pdu1033')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminMAXDATA.setStatus('mandatory')
wfSdlcLSAdminREPLYTO = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminREPLYTO.setStatus('mandatory')
wfSdlcLSAdminMAXIN = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminMAXIN.setStatus('mandatory')
wfSdlcLSAdminMAXOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminMAXOUT.setStatus('mandatory')
wfSdlcLSAdminMODULO = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(8, 128))).clone(namedValues=NamedValues(("default", 8), ("extended", 128))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminMODULO.setStatus('mandatory')
wfSdlcLSAdminRETRIESm = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminRETRIESm.setStatus('mandatory')
wfSdlcLSAdminRETRIESt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminRETRIESt.setStatus('mandatory')
wfSdlcLSAdminRETRIESn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminRETRIESn.setStatus('mandatory')
wfSdlcLSAdminRNRLIMIT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 90)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminRNRLIMIT.setStatus('mandatory')
wfSdlcLSAdminContTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(4000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminContTimer.setStatus('mandatory')
wfSdlcLSAdminContTimerRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminContTimerRetry.setStatus('mandatory')
wfSdlcLSAdminContTimer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(4000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminContTimer2.setStatus('mandatory')
wfSdlcLSAdminContTimer2Retry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminContTimer2Retry.setStatus('mandatory')
wfSdlcLSAdminDiscTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(4000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminDiscTimer.setStatus('mandatory')
wfSdlcLSAdminDiscTimerRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminDiscTimerRetry.setStatus('mandatory')
wfSdlcLSAdminNvePollTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminNvePollTimer.setStatus('mandatory')
wfSdlcLSAdminNvePollTimerRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminNvePollTimerRetry.setStatus('mandatory')
wfSdlcLSAdminNvePollTimer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminNvePollTimer2.setStatus('mandatory')
wfSdlcLSAdminNvePollTimer2Retry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminNvePollTimer2Retry.setStatus('mandatory')
wfSdlcLSAdminNoRespTimerRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminNoRespTimerRetry.setStatus('mandatory')
wfSdlcLSAdminRemBusyTimerRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64000)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminRemBusyTimerRetry.setStatus('mandatory')
wfSdlcLSAdminRRTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminRRTimer.setStatus('mandatory')
wfSdlcLSAdminGpAddName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminGpAddName.setStatus('mandatory')
wfSdlcLSAdminPollFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(83, 147, 191, 223, 243))).clone(namedValues=NamedValues(("disc", 83), ("snrm", 147), ("xid", 191), ("snrme", 223), ("test", 243))).clone('xid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminPollFrame.setStatus('mandatory')
wfSdlcLSAdminPollOnIframe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminPollOnIframe.setStatus('mandatory')
wfSdlcLSAdminLinkStationName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminLinkStationName.setStatus('mandatory')
wfSdlcLSAdminAdjNodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("learn", 1), ("len", 2), ("network", 3), ("end", 4), ("vrn", 5))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminAdjNodeType.setStatus('mandatory')
wfSdlcLSAdminSimRim = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 5, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSdlcLSAdminSimRim.setStatus('mandatory')
wfSdlcLSOperTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6), )
if mibBuilder.loadTexts: wfSdlcLSOperTable.setStatus('mandatory')
wfSdlcLSOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1), ).setIndexNames((0, "Wellfleet-SDLC-MIB", "wfSdlcLSOperIfIndex"), (0, "Wellfleet-SDLC-MIB", "wfSdlcLSOperAddress"))
if mibBuilder.loadTexts: wfSdlcLSOperEntry.setStatus('mandatory')
wfSdlcLSOperIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperIfIndex.setStatus('mandatory')
wfSdlcLSOperAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperAddress.setStatus('mandatory')
wfSdlcLSOperRole = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("negot", 1), ("primary", 2), ("sec", 3), ("msec", 4))).clone('sec')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperRole.setStatus('mandatory')
wfSdlcLSOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("discont", 1), ("conpend", 2), ("contact", 3), ("dispend", 4))).clone('discont')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperState.setStatus('mandatory')
wfSdlcLSOperMAXDATA = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(265, 521, 1033, 2057, 4105))).clone(namedValues=NamedValues(("pdu0265", 265), ("pdu0521", 521), ("pdu1033", 1033), ("pdu2057", 2057), ("pdu4105", 4105))).clone('pdu1033')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperMAXDATA.setStatus('mandatory')
wfSdlcLSOperREPLYTO = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperREPLYTO.setStatus('mandatory')
wfSdlcLSOperMAXIN = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperMAXIN.setStatus('mandatory')
wfSdlcLSOperMAXOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperMAXOUT.setStatus('mandatory')
wfSdlcLSOperMODULO = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperMODULO.setStatus('mandatory')
wfSdlcLSOperRETRIESm = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperRETRIESm.setStatus('mandatory')
wfSdlcLSOperRETRIESt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperRETRIESt.setStatus('mandatory')
wfSdlcLSOperRETRIESn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperRETRIESn.setStatus('mandatory')
wfSdlcLSOperRNRLIMIT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperRNRLIMIT.setStatus('mandatory')
wfSdlcLSOperDATMODE = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2))).clone('half')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperDATMODE.setStatus('mandatory')
wfSdlcLSOperCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperCreateTime.setStatus('mandatory')
wfSdlcLSOperLastFailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("undefined", 1), ("rxfrmr", 2), ("txfrmr", 3), ("noresp", 4), ("protoerr", 5), ("noactiv", 6), ("rnrlimit", 7), ("retriesexp", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperLastFailCause.setStatus('mandatory')
wfSdlcLSOperLastFailCtrlIn2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperLastFailCtrlIn2.setStatus('mandatory')
wfSdlcLSOperLastFailCtrlOut2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperLastFailCtrlOut2.setStatus('mandatory')
wfSdlcLSOperLastFailFRMRInfo5 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperLastFailFRMRInfo5.setStatus('mandatory')
wfSdlcLSOperLastFailREPLYTOs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperLastFailREPLYTOs.setStatus('mandatory')
wfSdlcLSOperGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSOperGroupAddress.setStatus('mandatory')
wfSdlcLSStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7), )
if mibBuilder.loadTexts: wfSdlcLSStatsTable.setStatus('mandatory')
wfSdlcLSStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1), ).setIndexNames((0, "Wellfleet-SDLC-MIB", "wfSdlcLSStatsIfIndex"), (0, "Wellfleet-SDLC-MIB", "wfSdlcLSStatsAddress"))
if mibBuilder.loadTexts: wfSdlcLSStatsEntry.setStatus('mandatory')
wfSdlcLSStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsIfIndex.setStatus('mandatory')
wfSdlcLSStatsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsAddress.setStatus('mandatory')
wfSdlcLSStatsBLUsIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsBLUsIns.setStatus('mandatory')
wfSdlcLSStatsBLUsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsBLUsOuts.setStatus('mandatory')
wfSdlcLSStatsOctetsIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsOctetsIns.setStatus('mandatory')
wfSdlcLSStatsOctetsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsOctetsOuts.setStatus('mandatory')
wfSdlcLSStatsPollsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsPollsOuts.setStatus('mandatory')
wfSdlcLSStatsPollRspOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsPollRspOuts.setStatus('mandatory')
wfSdlcLSStatsLocalBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsLocalBusies.setStatus('mandatory')
wfSdlcLSStatsRemoteBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsRemoteBusies.setStatus('mandatory')
wfSdlcLSStatsIFramesIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsIFramesIns.setStatus('mandatory')
wfSdlcLSStatsIFramesOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsIFramesOuts.setStatus('mandatory')
wfSdlcLSStatsRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsRetransmits.setStatus('mandatory')
wfSdlcLSStatsIOctetsIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsIOctetsIns.setStatus('mandatory')
wfSdlcLSStatsIOctetsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsIOctetsOuts.setStatus('mandatory')
wfSdlcLSStatsUIFramesIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsUIFramesIns.setStatus('mandatory')
wfSdlcLSStatsUIFramesOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsUIFramesOuts.setStatus('mandatory')
wfSdlcLSStatsXIDsIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsXIDsIns.setStatus('mandatory')
wfSdlcLSStatsXIDsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsXIDsOuts.setStatus('mandatory')
wfSdlcLSStatsTESTsIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsTESTsIns.setStatus('mandatory')
wfSdlcLSStatsTESTsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsTESTsOuts.setStatus('mandatory')
wfSdlcLSStatsREJsIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsREJsIns.setStatus('mandatory')
wfSdlcLSStatsREJsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsREJsOuts.setStatus('mandatory')
wfSdlcLSStatsFRMRsIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsFRMRsIns.setStatus('mandatory')
wfSdlcLSStatsFRMRsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsFRMRsOuts.setStatus('mandatory')
wfSdlcLSStatsSimsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsSimsIn.setStatus('mandatory')
wfSdlcLSStatsSimsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsSimsOut.setStatus('mandatory')
wfSdlcLSStatsRimsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsRimsIn.setStatus('mandatory')
wfSdlcLSStatsRimsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 7, 7, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSdlcLSStatsRimsOut.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-SDLC-MIB", wfSdlcLSStatsBLUsIns=wfSdlcLSStatsBLUsIns, wfSdlcPortAdminNPRcvRetry=wfSdlcPortAdminNPRcvRetry, wfSdlcPortAdminNPRcvTimer=wfSdlcPortAdminNPRcvTimer, wfSdlcLSAdminContTimer2Retry=wfSdlcLSAdminContTimer2Retry, wfSdlcLSStatsOctetsOuts=wfSdlcLSStatsOctetsOuts, wfSdlcLSOperTable=wfSdlcLSOperTable, wfSdlcLSOperState=wfSdlcLSOperState, wfSdlcLSStatsIOctetsIns=wfSdlcLSStatsIOctetsIns, wfSdlcPortAdminIdleTimer=wfSdlcPortAdminIdleTimer, wfSdlcPortAdminDebugFlg=wfSdlcPortAdminDebugFlg, wfSdlcLSAdminDiscTimerRetry=wfSdlcLSAdminDiscTimerRetry, wfSdlcLSAdminSimRim=wfSdlcLSAdminSimRim, wfSdlcPortOperSimRimSupp=wfSdlcPortOperSimRimSupp, wfSdlcLSAdminMODULO=wfSdlcLSAdminMODULO, wfSdlcLSStatsUIFramesIns=wfSdlcLSStatsUIFramesIns, wfSdlcLSAdminMAXDATA=wfSdlcLSAdminMAXDATA, wfSdlcLSStatsUIFramesOuts=wfSdlcLSStatsUIFramesOuts, wfSdlcLSStatsAddress=wfSdlcLSStatsAddress, wfSdlcLSOperMAXOUT=wfSdlcLSOperMAXOUT, wfSdlcLSStatsSimsOut=wfSdlcLSStatsSimsOut, wfSdlcLSOperRole=wfSdlcLSOperRole, wfSdlcPortAdminCpType=wfSdlcPortAdminCpType, wfSdlcLSOperLastFailFRMRInfo5=wfSdlcLSOperLastFailFRMRInfo5, wfSdlcLSAdminRETRIESt=wfSdlcLSAdminRETRIESt, wfSdlcPortAdminPriFdplx=wfSdlcPortAdminPriFdplx, wfSdlcLSStatsTable=wfSdlcLSStatsTable, wfSdlcLSAdminNoRespTimerRetry=wfSdlcLSAdminNoRespTimerRetry, wfSdlcPortAdminRcvPoolSize=wfSdlcPortAdminRcvPoolSize, wfSdlcLSStatsFRMRsOuts=wfSdlcLSStatsFRMRsOuts, wfSdlcLSStatsRimsOut=wfSdlcLSStatsRimsOut, wfSdlcLSAdminGroupAddress=wfSdlcLSAdminGroupAddress, wfSdlcLSOperLastFailCause=wfSdlcLSOperLastFailCause, wfSdlcPortAdminLsRole=wfSdlcPortAdminLsRole, wfSdlcPortAdminSecFdplx=wfSdlcPortAdminSecFdplx, wfSdlcPortOperIndex=wfSdlcPortOperIndex, wfSdlcLSAdminRemBusyTimerRetry=wfSdlcLSAdminRemBusyTimerRetry, wfSdlcPortOperACTIVTO=wfSdlcPortOperACTIVTO, wfSdlcPortAdminWriteRetry=wfSdlcPortAdminWriteRetry, wfSdlcLSOperLastFailCtrlIn2=wfSdlcLSOperLastFailCtrlIn2, wfSdlcPortOperAbmSuppInd=wfSdlcPortOperAbmSuppInd, wfSdlcLSAdminNvePollTimer2Retry=wfSdlcLSAdminNvePollTimer2Retry, wfSdlcPortAdminPAUSE=wfSdlcPortAdminPAUSE, wfSdlcPortAdminCredit=wfSdlcPortAdminCredit, wfSdlcPortAdminIdleRetry=wfSdlcPortAdminIdleRetry, wfSdlcPortAdminTotLsActLim=wfSdlcPortAdminTotLsActLim, wfSdlcLSOperCreateTime=wfSdlcLSOperCreateTime, wfSdlcPortAdminStatsColl=wfSdlcPortAdminStatsColl, wfSdlcLSAdminContTimer=wfSdlcLSAdminContTimer, wfSdlcPortAdminDelete=wfSdlcPortAdminDelete, wfSdlcLSAdminDiscTimer=wfSdlcLSAdminDiscTimer, wfSdlcLSStatsOctetsIns=wfSdlcLSStatsOctetsIns, wfSdlcPortOperTable=wfSdlcPortOperTable, wfSdlcPortAdminPortNumber=wfSdlcPortAdminPortNumber, wfSdlcLSOperAddress=wfSdlcLSOperAddress, wfSdlcPortAdminUseRej=wfSdlcPortAdminUseRej, wfSdlcLSOperMODULO=wfSdlcLSOperMODULO, wfSdlcPortAdminLinkConnTimer=wfSdlcPortAdminLinkConnTimer, wfSdlcPortAdminType=wfSdlcPortAdminType, wfSdlcLSStatsBLUsOuts=wfSdlcLSStatsBLUsOuts, wfSdlcPortOperSecInitNonactSupp=wfSdlcPortOperSecInitNonactSupp, wfSdlcPortAdminMaxRetryCount=wfSdlcPortAdminMaxRetryCount, wfSdlcPortAdminLsAddress=wfSdlcPortAdminLsAddress, wfSdlcLSAdminLinkStationName=wfSdlcLSAdminLinkStationName, wfSdlcLSAdminNvePollTimer=wfSdlcLSAdminNvePollTimer, wfSdlcPortStatsIndex=wfSdlcPortStatsIndex, wfSdlcPortAdminTopology=wfSdlcPortAdminTopology, wfSdlcLSStatsEntry=wfSdlcLSStatsEntry, wfSdlcLSAdminMAXOUT=wfSdlcLSAdminMAXOUT, wfSdlcPortAdminInLsActLim=wfSdlcPortAdminInLsActLim, wfSdlcPortAdminIndex=wfSdlcPortAdminIndex, wfSdlcLSOperGroupAddress=wfSdlcLSOperGroupAddress, wfSdlcLSStatsPollRspOuts=wfSdlcLSStatsPollRspOuts, wfSdlcLSOperLastFailCtrlOut2=wfSdlcLSOperLastFailCtrlOut2, wfSdlcPortAdminAddress4=wfSdlcPortAdminAddress4, wfSdlcLSAdminDelete=wfSdlcLSAdminDelete, wfSdlcLSAdminAdjNodeType=wfSdlcLSAdminAdjNodeType, wfSdlcLSStatsIFramesOuts=wfSdlcLSStatsIFramesOuts, wfSdlcPortAdminTable=wfSdlcPortAdminTable, wfSdlcLSOperLastFailREPLYTOs=wfSdlcLSOperLastFailREPLYTOs, wfSdlcPortAdminPortType=wfSdlcPortAdminPortType, wfSdlcLSAdminContTimer2=wfSdlcLSAdminContTimer2, wfSdlcLSStatsLocalBusies=wfSdlcLSStatsLocalBusies, wfSdlcLSStatsRemoteBusies=wfSdlcLSStatsRemoteBusies, wfSdlcPortStatsDwarfFrames=wfSdlcPortStatsDwarfFrames, wfSdlcPortAdminMaxXidSize=wfSdlcPortAdminMaxXidSize, wfSdlcPortStatsTable=wfSdlcPortStatsTable, wfSdlcPortAdminNegLsSupp=wfSdlcPortAdminNegLsSupp, wfSdlcPortOperType=wfSdlcPortOperType, wfSdlcLSAdminDisable=wfSdlcLSAdminDisable, wfSdlcLSStatsTESTsIns=wfSdlcLSStatsTESTsIns, wfSdlcPortOperPAUSE=wfSdlcPortOperPAUSE, wfSdlcLSAdminNvePollTimerRetry=wfSdlcLSAdminNvePollTimerRetry, wfSdlcPortOperSlowPollMethod=wfSdlcPortOperSlowPollMethod, wfSdlcLSOperDATMODE=wfSdlcLSOperDATMODE, wfSdlcLSStatsIOctetsOuts=wfSdlcLSStatsIOctetsOuts, wfSdlcLSStatsRetransmits=wfSdlcLSStatsRetransmits, wfSdlcLSOperEntry=wfSdlcLSOperEntry, wfSdlcPortAdminEntry=wfSdlcPortAdminEntry, wfSdlcPortOperAddress4=wfSdlcPortOperAddress4, wfSdlcLSAdminRNRLIMIT=wfSdlcLSAdminRNRLIMIT, wfSdlcLSStatsXIDsOuts=wfSdlcLSStatsXIDsOuts, wfSdlcDelete=wfSdlcDelete, wfSdlcPortOperTopology=wfSdlcPortOperTopology, wfSdlcPortOperSlowPollTimer=wfSdlcPortOperSlowPollTimer, wfSdlcLSAdminRRTimer=wfSdlcLSAdminRRTimer, wfSdlcLSAdminEntry=wfSdlcLSAdminEntry, wfSdlcLSOperMAXDATA=wfSdlcLSOperMAXDATA, wfSdlcLSOperRNRLIMIT=wfSdlcLSOperRNRLIMIT, wfSdlcPortAdminDlcName8=wfSdlcPortAdminDlcName8, wfSdlc=wfSdlc, wfSdlcLSStatsIfIndex=wfSdlcLSStatsIfIndex, wfSdlcLSStatsRimsIn=wfSdlcLSStatsRimsIn, wfSdlcLSStatsSimsIn=wfSdlcLSStatsSimsIn, wfSdlcLSOperREPLYTO=wfSdlcLSOperREPLYTO, wfSdlcPortAdminACTIVTO=wfSdlcPortAdminACTIVTO, wfSdlcLSAdminMAXIN=wfSdlcLSAdminMAXIN, wfSdlcLSAdminRETRIESn=wfSdlcLSAdminRETRIESn, wfSdlcLSStatsXIDsIns=wfSdlcLSStatsXIDsIns, wfSdlcLSOperRETRIESm=wfSdlcLSOperRETRIESm, wfSdlcLSAdminPollFrame=wfSdlcLSAdminPollFrame, wfSdlcLSAdminGpAddName=wfSdlcLSAdminGpAddName, wfSdlcLSStatsIFramesIns=wfSdlcLSStatsIFramesIns, wfSdlcLSAdminAddress=wfSdlcLSAdminAddress, wfSdlcLSAdminREPLYTO=wfSdlcLSAdminREPLYTO, wfSdlcLSStatsTESTsOuts=wfSdlcLSStatsTESTsOuts, wfSdlcDisable=wfSdlcDisable, wfSdlcPortStatsEntry=wfSdlcPortStatsEntry, wfSdlcLSAdminIfIndex=wfSdlcLSAdminIfIndex, wfSdlcPortAdminLinkConnRetry=wfSdlcPortAdminLinkConnRetry, wfSdlcLSStatsFRMRsIns=wfSdlcLSStatsFRMRsIns, wfSdlcPortAdminDisable=wfSdlcPortAdminDisable, wfSdlcLSOperRETRIESt=wfSdlcLSOperRETRIESt, wfSdlcPortAdminMaxFrameSize=wfSdlcPortAdminMaxFrameSize, wfSdlcLSAdminRole=wfSdlcLSAdminRole, wfSdlcLSAdminContTimerRetry=wfSdlcLSAdminContTimerRetry, wfSdlcLSAdminRETRIESm=wfSdlcLSAdminRETRIESm, wfSdlcLSAdminNvePollTimer2=wfSdlcLSAdminNvePollTimer2, wfSdlcPortOperEntry=wfSdlcPortOperEntry, wfSdlcLSOperIfIndex=wfSdlcLSOperIfIndex, wfSdlcState=wfSdlcState, wfSdlcLSOperMAXIN=wfSdlcLSOperMAXIN, wfSdlcPortAdminOutLsActLim=wfSdlcPortAdminOutLsActLim, wfSdlcLSAdminTable=wfSdlcLSAdminTable, wfSdlcLSStatsPollsOuts=wfSdlcLSStatsPollsOuts, wfSdlcLSStatsREJsIns=wfSdlcLSStatsREJsIns, wfSdlcPortOperRole=wfSdlcPortOperRole, wfSdlcLSOperRETRIESn=wfSdlcLSOperRETRIESn, wfSdlcLSAdminPollOnIframe=wfSdlcLSAdminPollOnIframe, wfSdlcPortAdminWriteTimer=wfSdlcPortAdminWriteTimer, wfSdlcLSStatsREJsOuts=wfSdlcLSStatsREJsOuts)
