#
# PySNMP MIB module NQA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NQA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:33:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
HWDot1agCfmIngressActionFieldValue, HWDot1agCfmRelayActionFieldValue, HWDot1agCfmEgressActionFieldValue = mibBuilder.importSymbols("HUAWEI-ETHOAM-MIB", "HWDot1agCfmIngressActionFieldValue", "HWDot1agCfmRelayActionFieldValue", "HWDot1agCfmEgressActionFieldValue")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
Dot1agCfmMaintAssocName, Dot1agCfmMaintDomainName, Dot1agCfmMepIdOrZero = mibBuilder.importSymbols("IEEE802171-CFM-MIB", "Dot1agCfmMaintAssocName", "Dot1agCfmMaintDomainName", "Dot1agCfmMepIdOrZero")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanIdOrNone, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, IpAddress, Counter32, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, mib_2, Unsigned32, Counter64, TimeTicks, iso, NotificationGroup, ModuleIdentity, ObjectIdentity, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "Counter32", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "mib-2", "Unsigned32", "Counter64", "TimeTicks", "iso", "NotificationGroup", "ModuleIdentity", "ObjectIdentity", "Integer32", "Bits")
StorageType, RowStatus, TruthValue, TimeStamp, DateAndTime, DisplayString, TextualConvention, TimeInterval, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "RowStatus", "TruthValue", "TimeStamp", "DateAndTime", "DisplayString", "TextualConvention", "TimeInterval", "MacAddress")
nqa = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111))
if mibBuilder.loadTexts: nqa.setLastUpdated('200601091739Z')
if mibBuilder.loadTexts: nqa.setOrganization('Huawei Technologies Co., Ltd.')
class NqaType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33))
    namedValues = NamedValues(("unknown", 0), ("tcpConnect", 1), ("udpEcho", 2), ("httpAppl", 3), ("ftpAppl", 4), ("jitterAppl", 5), ("icmpAppl", 6), ("snmpAppl", 7), ("traceRoute", 8), ("lspPing", 9), ("lspTraceRoute", 10), ("dnsAppl", 11), ("dhcpAppl", 12), ("dlswAppl", 13), ("pwe3Ping", 14), ("pwe3Tracert", 15), ("mPing", 16), ("mTracert", 17), ("macPing", 18), ("macTunnelPing", 19), ("lspJitter", 20), ("pathMtu", 21), ("icmpJitter", 22), ("pathJitter", 23), ("pppoe", 24), ("vplsmPing", 25), ("vplsmacPing", 26), ("vplsmacTrace", 27), ("vplsMTrace", 28), ("gmacping", 29), ("gmactrace", 30), ("mactrace", 31), ("vplspwping", 32), ("vplspwtrace", 33))

class EnableValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enable", 1), ("disable", 2))

class NqaDistanceNodeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("macAddress", 1), ("mepID", 2))

class HWLldpPortIdSubtype(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("interfaceAlias", 1), ("portComponent", 2), ("macAddress", 3), ("networkAddress", 4), ("interfaceName", 5), ("agentCircuitId", 6), ("local", 7))

class HWLldpPortId(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

class NqaOperation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("noOperation", 1), ("httpGet", 2), ("httpPost", 3), ("ftpGet", 4), ("ftpPut", 5))

nqaBase = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1))
nqaVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVersion.setStatus('current')
nqaEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 2), EnableValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaEnable.setStatus('current')
nqaReset = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 3), EnableValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaReset.setStatus('current')
nqaTimeOfLastSetError = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaTimeOfLastSetError.setStatus('current')
nqaLastSetError = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaLastSetError.setStatus('current')
nqaNumOfCurrentCtrlEntry = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaNumOfCurrentCtrlEntry.setStatus('current')
nqaMaxConcurrentRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 7), Unsigned32()).setUnits('requests').setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaMaxConcurrentRequests.setStatus('current')
nqaMaxNumOfRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 8), Unsigned32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMaxNumOfRequests.setStatus('current')
nqaJitterVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaJitterVersion.setStatus('current')
nqaSupportTestType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 10), Bits().clone(namedValues=NamedValues(("icmp", 0), ("tcp", 1), ("udp", 2), ("http", 3), ("ftp", 4), ("jitter", 5), ("snmp", 6), ("trace", 7), ("lspPing", 8), ("lspTrace", 9), ("dns", 10), ("dhcp", 11), ("dlsw", 12), ("pwe3Ping", 13), ("pwe3Trace", 14), ("mPing", 15), ("mTrace", 16), ("macPing", 17), ("macTunnelPing", 18), ("lspJitter", 19), ("icmpJitter", 20), ("pathJitter", 21), ("pathMtu", 22), ("pppoe", 23), ("vplsmPing", 24), ("vplsmacPing", 25), ("vplsmacTrace", 26), ("vplsMTrace", 27), ("gmacping", 28), ("gmactrace", 29), ("mactrace", 30), ("vplspwping", 31), ("vplspwtrace", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaSupportTestType.setStatus('current')
nqaSupportServerType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 1, 11), Bits().clone(namedValues=NamedValues(("tcpServer", 0), ("udpServer", 1), ("icmpServer", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaSupportServerType.setStatus('current')
nqaCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2))
nqaAdminCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1), )
if mibBuilder.loadTexts: nqaAdminCtrlTable.setStatus('current')
nqaAdminCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"))
if mibBuilder.loadTexts: nqaAdminCtrlEntry.setStatus('current')
nqaAdminCtrlOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: nqaAdminCtrlOwnerIndex.setStatus('current')
nqaAdminCtrlTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: nqaAdminCtrlTestName.setStatus('current')
nqaAdminCtrlTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAdminCtrlTag.setStatus('current')
nqaAdminCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 4), NqaType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAdminCtrlType.setStatus('current')
nqaAdminCtrlFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 5), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAdminCtrlFrequency.setStatus('current')
nqaAdminCtrlTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAdminCtrlTimeOut.setStatus('current')
nqaAdminCtrlThreshold1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 7), Integer32()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAdminCtrlThreshold1.setStatus('current')
nqaAdminCtrlThreshold2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 8), Integer32()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAdminCtrlThreshold2.setStatus('current')
nqaAdminCtrlThreshold3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 9), Integer32()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAdminCtrlThreshold3.setStatus('current')
nqaAdminCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAdminCtrlStatus.setStatus('current')
nqaAdminParaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2), )
if mibBuilder.loadTexts: nqaAdminParaTable.setStatus('current')
nqaAdminParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"))
if mibBuilder.loadTexts: nqaAdminParaEntry.setStatus('current')
nqaAdminParaTargetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 1), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaTargetAddressType.setStatus('current')
nqaAdminParaTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaTargetAddress.setStatus('current')
nqaAdminParaTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 3), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaTargetPort.setStatus('current')
nqaAdminParaSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 4), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaSourceAddressType.setStatus('current')
nqaAdminParaSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaSourceAddress.setStatus('current')
nqaAdminParaSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 6), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaSourcePort.setStatus('current')
nqaAdminParaMaxTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('time-to-live value').setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMaxTtl.setStatus('current')
nqaAdminParaInitialTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaInitialTtl.setStatus('current')
nqaAdminParaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 9), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaStorageType.setStatus('current')
nqaAdminParaMaxFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setUnits('timeouts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMaxFailures.setStatus('current')
nqaAdminParaDontFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaDontFragment.setStatus('current')
nqaAdminParaDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 12), Unsigned32()).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaDataSize.setStatus('current')
nqaAdminParaDataFill = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 13), OctetString().clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaDataFill.setStatus('current')
nqaAdminParaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 14), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaIfIndex.setStatus('current')
nqaAdminParaByPassRouteTable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaByPassRouteTable.setStatus('current')
nqaAdminParaMiscOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 16), SnmpAdminString().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMiscOptions.setStatus('current')
nqaAdminParaProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setUnits('probes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaProbeCount.setStatus('current')
nqaAdminParaTrapGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 18), Bits().clone(namedValues=NamedValues(("probeFailure", 0), ("testFailure", 1), ("testCompletion", 2), ("overRtdThreshold", 3), ("overOwdThresholdSd", 4), ("overOwdThresholdDs", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaTrapGeneration.setStatus('current')
nqaAdminParaTrapProbeFailureFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaTrapProbeFailureFilter.setStatus('current')
nqaAdminParaTrapTestFailureFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaTrapTestFailureFilter.setStatus('current')
nqaAdminParaDSField = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaDSField.setStatus('current')
nqaAdminParaDnsServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 22), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaDnsServerAddressType.setStatus('current')
nqaAdminParaDnsServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 23), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaDnsServerAddress.setStatus('current')
nqaAdminParaOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 24), NqaOperation().clone('noOperation')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaOperation.setStatus('current')
nqaAdminParaHttpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaHttpVersion.setStatus('current')
nqaAdminParaHttpOperationString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaHttpOperationString.setStatus('current')
nqaAdminParaTestFailurePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaTestFailurePercent.setStatus('current')
nqaAdminParaFtpUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaFtpUserName.setStatus('current')
nqaAdminParaFtpPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaFtpPassword.setStatus('current')
nqaAdminParaFtpFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaFtpFilePath.setStatus('current')
nqaAdminParaFtpFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaFtpFileSize.setStatus('current')
nqaAdminParaInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('millseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaInterval.setStatus('current')
nqaAdminParaNumPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 33), Integer32().clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaNumPackets.setStatus('current')
nqaAdminParaVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaVrfName.setStatus('current')
nqaAdminParaLspAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 255))).clone(namedValues=NamedValues(("ipv4", 1), ("te", 3), ("ring", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspAddressType.setStatus('current')
nqaAdminParaLspAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspAddressMask.setStatus('current')
nqaAdminParaLspIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 37), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspIpAddress.setStatus('current')
nqaAdminParaLspPWE3VcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 38), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspPWE3VcId.setStatus('current')
nqaAdminParaLspPWE3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 17, 18, 19, 21, 64))).clone(namedValues=NamedValues(("fr", 1), ("atmAal5Sdu", 2), ("atm-cell-transport", 3), ("vlan", 4), ("ethernet", 5), ("hdlc", 6), ("ppp", 7), ("atm-nto1-vcc", 9), ("atm-nto1-vpc", 10), ("ip-layer2", 11), ("atm-1to1-vcc", 12), ("atm-1to1-vpc", 13), ("satop-e1", 17), ("satop-t1", 18), ("satop-e3", 19), ("cesopsn-basic", 21), ("ipInterworking", 64)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspPWE3Type.setStatus('current')
nqaAdminParaLspPWE3Option = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("labelAlert", 1), ("controlWord", 2), ("normal", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspPWE3Option.setStatus('current')
nqaAdminParaLspPWE3RemoteVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 41), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspPWE3RemoteVcId.setStatus('current')
nqaAdminParaLspPWE3RemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 42), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspPWE3RemoteAddress.setStatus('current')
nqaAdminParaLspExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspExp.setStatus('current')
nqaAdminParaLspReplyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noReply", 1), ("udp", 2), ("udpRouterAlert", 3), ("levelControlChannel", 4), ("udpviaVPLS", 5))).clone('udp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspReplyMode.setStatus('current')
nqaAdminParaResultRowMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 45), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaResultRowMax.setStatus('current')
nqaAdminParaHistoryRowMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 46), Integer32().clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaHistoryRowMax.setStatus('current')
nqaAdminParaCreateHopsEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 47), EnableValue().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaCreateHopsEntries.setStatus('current')
nqaAdminParaLspVCType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ldp", 1), ("bgp", 2), ("bgpad", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspVCType.setStatus('current')
nqaAdminParaMTraceLastHopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 49), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMTraceLastHopAddress.setStatus('current')
nqaAdminParaMTraceSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 50), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMTraceSourceAddress.setStatus('current')
nqaAdminParaMTraceGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 51), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMTraceGroupAddress.setStatus('current')
nqaAdminParaMTraceMaxTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 52), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMTraceMaxTtl.setStatus('current')
nqaAdminParaMTraceSendMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("multicastTree", 1), ("allRouter", 2), ("destination", 3), ("lastHop", 4))).clone('multicastTree')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMTraceSendMode.setStatus('current')
nqaAdminParaMTraceResponseTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 54), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMTraceResponseTtl.setStatus('current')
nqaAdminParaMTraceResponseAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 55), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMTraceResponseAddressType.setStatus('current')
nqaAdminParaMTraceResponseAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 56), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMTraceResponseAddress.setStatus('current')
nqaAdminParaDistanceNodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 57), NqaDistanceNodeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaDistanceNodeType.setStatus('current')
nqaAdminParaMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 58), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMacAddress.setStatus('current')
nqaAdminParaRMepID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 59), Dot1agCfmMepIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaRMepID.setStatus('current')
nqaAdminParaMDName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 60), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 43))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMDName.setStatus('current')
nqaAdminParaMAName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 61), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 45))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMAName.setStatus('current')
nqaAdminParaMacTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 62), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaMacTunnelName.setStatus('current')
nqaAdminParaPathMtuStep = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaPathMtuStep.setStatus('current')
nqaAdminParaPathMtuDiscoveryPathMtuMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(48, 9198))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaPathMtuDiscoveryPathMtuMax.setStatus('current')
nqaAdminParaIcmpJitterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("icmpTimestamp", 1), ("icmpEcho", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaIcmpJitterMode.setStatus('current')
nqaAdminParaCodecType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notDefined", 1), ("g711Alaw", 2), ("g711Ulaw", 3), ("g729A", 4))).clone('notDefined')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaCodecType.setStatus('current')
nqaAdminParaIcpifAdvFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 67), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaIcpifAdvFactor.setStatus('current')
nqaAdminParaFtpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaFtpMode.setStatus('current')
nqaAdminParaHardwareBased = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 69), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaHardwareBased.setStatus('current')
nqaAdminParaPppoeUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 70), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaPppoeUserName.setStatus('current')
nqaAdminParaPppoePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 71), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaPppoePassword.setStatus('current')
nqaAdminParaPppoeVlanIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4093))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaPppoeVlanIf.setStatus('current')
nqaAdminParaPppoeAuthenticationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("chap", 1), ("pap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaPppoeAuthenticationMode.setStatus('current')
nqaAdminParaPppoeRedialUpTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaPppoeRedialUpTimes.setStatus('current')
nqaAdminParaPppoeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaPppoeInterval.setStatus('current')
nqaAdminParaVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 76), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaVsiName.setStatus('current')
nqaAdminParaVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 77), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaVlanId.setStatus('current')
nqaAdminParaLspTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("main", 0), ("hotstandby", 1))).clone('main')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspTunnelType.setStatus('current')
nqaAdminParaLspNextHopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 79), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspNextHopAddress.setStatus('current')
nqaAdminParaLspVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("draft6", 1), ("rfc4379", 2), ("ptnmode", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaLspVersion.setStatus('current')
nqaAdminParaRemoteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 81), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaRemoteAddressType.setStatus('current')
nqaAdminParaRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 82), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaRemoteAddress.setStatus('current')
nqaAdminParaTimeUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 2, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("us", 1), ("ms", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminParaTimeUnit.setStatus('current')
nqaAdminParaExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5), )
if mibBuilder.loadTexts: nqaAdminParaExtTable.setStatus('current')
nqaAdminParaExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"))
if mibBuilder.loadTexts: nqaAdminParaExtEntry.setStatus('current')
nqaAdminExtPara1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara1.setStatus('current')
nqaAdminExtPara2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara2.setStatus('current')
nqaAdminExtPara3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara3.setStatus('current')
nqaAdminExtPara4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara4.setStatus('current')
nqaAdminExtPara5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara5.setStatus('current')
nqaAdminExtPara6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara6.setStatus('current')
nqaAdminExtPara7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara7.setStatus('current')
nqaAdminExtPara8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara8.setStatus('current')
nqaAdminExtPara9 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara9.setStatus('current')
nqaAdminExtPara10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara10.setStatus('current')
nqaAdminExtPara11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara11.setStatus('current')
nqaAdminExtPara12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara12.setStatus('current')
nqaAdminExtPara13 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara13.setStatus('current')
nqaAdminExtPara14 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara14.setStatus('current')
nqaAdminExtPara15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara15.setStatus('current')
nqaAdminExtPara16 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara16.setStatus('current')
nqaAdminExtPara17 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara17.setStatus('current')
nqaAdminExtPara18 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara18.setStatus('current')
nqaAdminExtPara19 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara19.setStatus('current')
nqaAdminExtPara20 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara20.setStatus('current')
nqaAdminExtPara21 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 21), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara21.setStatus('current')
nqaAdminExtPara22 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara22.setStatus('current')
nqaAdminExtPara23 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 23), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara23.setStatus('current')
nqaAdminExtPara24 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara24.setStatus('current')
nqaAdminExtPara25 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 25), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara25.setStatus('current')
nqaAdminExtPara26 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara26.setStatus('current')
nqaAdminExtPara27 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara27.setStatus('current')
nqaAdminExtPara28 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara28.setStatus('current')
nqaAdminExtPara29 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara29.setStatus('current')
nqaAdminExtPara30 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara30.setStatus('current')
nqaAdminExtPara31 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 31), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara31.setStatus('current')
nqaAdminExtPara32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 32), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara32.setStatus('current')
nqaAdminExtPara33 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 33), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara33.setStatus('current')
nqaAdminExtPara34 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 34), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara34.setStatus('current')
nqaAdminExtPara35 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 35), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara35.setStatus('current')
nqaAdminExtPara36 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 36), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara36.setStatus('current')
nqaAdminExtPara37 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 37), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara37.setStatus('current')
nqaAdminExtPara38 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 38), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara38.setStatus('current')
nqaAdminExtPara39 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 39), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara39.setStatus('current')
nqaAdminExtPara40 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 40), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara40.setStatus('current')
nqaAdminExtPara41 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 41), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara41.setStatus('current')
nqaAdminExtPara42 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 42), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara42.setStatus('current')
nqaAdminExtPara43 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 43), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara43.setStatus('current')
nqaAdminExtPara44 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 44), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara44.setStatus('current')
nqaAdminExtPara45 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 45), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara45.setStatus('current')
nqaAdminExtPara46 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 46), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara46.setStatus('current')
nqaAdminExtPara47 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 47), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara47.setStatus('current')
nqaAdminExtPara48 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 48), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara48.setStatus('current')
nqaAdminExtPara49 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 49), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAdminExtPara49.setStatus('current')
nqaAdminExtPara50 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 5, 1, 50), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaAdminExtPara50.setStatus('current')
nqaScheduleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3), )
if mibBuilder.loadTexts: nqaScheduleTable.setStatus('current')
nqaScheduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"))
if mibBuilder.loadTexts: nqaScheduleEntry.setStatus('current')
nqaScheduleStartType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("startNow", 1), ("startAt", 2), ("startAfter", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaScheduleStartType.setStatus('current')
nqaScheduleStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaScheduleStartTime.setStatus('current')
nqaScheduleEndType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("endAt", 1), ("endAfter", 2), ("endLifetime", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaScheduleEndType.setStatus('current')
nqaScheduleEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaScheduleEndTime.setStatus('current')
nqaScheduleAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaScheduleAgeTime.setStatus('current')
nqaScheduleElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaScheduleElapsedTime.setStatus('current')
nqaScheduleNumOfInitiations = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaScheduleNumOfInitiations.setStatus('current')
nqaScheduleLastFinishIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaScheduleLastFinishIndex.setStatus('current')
nqaScheduleOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("reset", 1), ("stop", 2), ("restart", 3), ("active", 4), ("inactive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaScheduleOperStatus.setStatus('current')
nqaScheduleLastCollectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaScheduleLastCollectIndex.setStatus('current')
nqaGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 4), )
if mibBuilder.loadTexts: nqaGroupTable.setStatus('current')
nqaGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 4, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"))
if mibBuilder.loadTexts: nqaGroupEntry.setStatus('current')
nqaGroupStatusType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("leader", 2), ("member", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaGroupStatusType.setStatus('current')
nqaGroupPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 4, 1, 2), Integer32().clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaGroupPeriod.setStatus('current')
nqaGroupLeaderOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 4, 1, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaGroupLeaderOwnerIndex.setStatus('current')
nqaGroupLeaderTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 4, 1, 4), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaGroupLeaderTestName.setStatus('current')
nqaGroupMemberNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaGroupMemberNum.setStatus('current')
nqaGroupMemberFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 2, 4, 1, 6), EnableValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaGroupMemberFree.setStatus('current')
nqaServer = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3))
nqaServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 1), EnableValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaServerEnable.setStatus('current')
nqaTcpServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 2), )
if mibBuilder.loadTexts: nqaTcpServerTable.setStatus('current')
nqaTcpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 2, 1), ).setIndexNames((0, "NQA-MIB", "nqaTcpServerAddress"), (0, "NQA-MIB", "nqaTcpServerPort"), (0, "NQA-MIB", "nqaTcpServerVrfName"))
if mibBuilder.loadTexts: nqaTcpServerEntry.setStatus('current')
nqaTcpServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 2, 1, 1), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaTcpServerAddressType.setStatus('current')
nqaTcpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: nqaTcpServerAddress.setStatus('current')
nqaTcpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 2, 1, 3), InetPortNumber())
if mibBuilder.loadTexts: nqaTcpServerPort.setStatus('current')
nqaTcpServerVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: nqaTcpServerVrfName.setStatus('current')
nqaTcpServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaTcpServerStatus.setStatus('current')
nqaUdpServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 3), )
if mibBuilder.loadTexts: nqaUdpServerTable.setStatus('current')
nqaUdpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 3, 1), ).setIndexNames((0, "NQA-MIB", "nqaUdpServerAddress"), (0, "NQA-MIB", "nqaUdpServerPort"), (0, "NQA-MIB", "nqaUdpServerVrfName"))
if mibBuilder.loadTexts: nqaUdpServerEntry.setStatus('current')
nqaUdpServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 3, 1, 1), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaUdpServerAddressType.setStatus('current')
nqaUdpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: nqaUdpServerAddress.setStatus('current')
nqaUdpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 3, 1, 3), InetPortNumber())
if mibBuilder.loadTexts: nqaUdpServerPort.setStatus('current')
nqaUdpServerVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: nqaUdpServerVrfName.setStatus('current')
nqaUdpServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaUdpServerStatus.setStatus('current')
nqaIcmpServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 4), )
if mibBuilder.loadTexts: nqaIcmpServerTable.setStatus('current')
nqaIcmpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 4, 1), ).setIndexNames((0, "NQA-MIB", "nqaIcmpServerAddress"), (0, "NQA-MIB", "nqaIcmpServerVrfName"))
if mibBuilder.loadTexts: nqaIcmpServerEntry.setStatus('current')
nqaIcmpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 4, 1, 1), InetAddress())
if mibBuilder.loadTexts: nqaIcmpServerAddress.setStatus('current')
nqaIcmpServerVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: nqaIcmpServerVrfName.setStatus('current')
nqaIcmpServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 4, 1, 3), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaIcmpServerAddressType.setStatus('current')
nqaIcmpServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 3, 4, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaIcmpServerStatus.setStatus('current')
nqaStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4))
nqaResultsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1), )
if mibBuilder.loadTexts: nqaResultsTable.setStatus('current')
nqaResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaResultsIndex"), (0, "NQA-MIB", "nqaResultsHopIndex"))
if mibBuilder.loadTexts: nqaResultsEntry.setStatus('current')
nqaResultsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaResultsIndex.setStatus('current')
nqaResultsHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: nqaResultsHopIndex.setStatus('current')
nqaResultsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noResult", 0), ("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsCompletions.setStatus('current')
nqaResultsTestAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 4), Counter32()).setUnits('tests').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsTestAttempts.setStatus('current')
nqaResultsCurHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 5), Gauge32()).setUnits('hops').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsCurHopCount.setStatus('current')
nqaResultsCurProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 6), Gauge32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsCurProbeCount.setStatus('current')
nqaResultsRTDOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsRTDOverThresholds.setStatus('current')
nqaResultsSumCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsSumCompletionTime.setStatus('current')
nqaResultsSumCompletionTime2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsSumCompletionTime2Low.setStatus('current')
nqaResultsSumCompletionTime2High = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsSumCompletionTime2High.setStatus('current')
nqaResultsCompletionTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsCompletionTimeMin.setStatus('current')
nqaResultsCompletionTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsCompletionTimeMax.setStatus('current')
nqaResultsDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsDisconnects.setStatus('current')
nqaResultsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsTimeouts.setStatus('current')
nqaResultsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsBusies.setStatus('current')
nqaResultsNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsNoConnections.setStatus('current')
nqaResultsSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsSequenceErrors.setStatus('current')
nqaResultsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsDrops.setStatus('current')
nqaResultsAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 19), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsAddressType.setStatus('current')
nqaResultsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 20), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsAddress.setStatus('current')
nqaResultsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 21), Counter32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsProbeResponses.setStatus('current')
nqaResultsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 22), Counter32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsSentProbes.setStatus('current')
nqaResultsLastGoodProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 23), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsLastGoodProbe.setStatus('current')
nqaResultsLastGoodPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsLastGoodPath.setStatus('current')
nqaResultsTestFinished = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noFinish", 0), ("finish", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsTestFinished.setStatus('current')
nqaResultsRttAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsRttAvg.setStatus('current')
nqaResultsLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 1, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaResultsLostPacketRatio.setStatus('current')
nqaHTTPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2), )
if mibBuilder.loadTexts: nqaHTTPStatsTable.setStatus('current')
nqaHTTPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaHTTPStatsIndex"))
if mibBuilder.loadTexts: nqaHTTPStatsEntry.setStatus('current')
nqaHTTPStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaHTTPStatsIndex.setStatus('current')
nqaHTTPStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noResult", 0), ("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsCompletions.setStatus('current')
nqaHTTPStatsRTDOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsRTDOverThresholds.setStatus('current')
nqaHTTPStatsRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsRTTSum.setStatus('current')
nqaHTTPStatsRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsRTTMin.setStatus('current')
nqaHTTPStatsRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsRTTMax.setStatus('current')
nqaHTTPStatsDNSRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsDNSRTTSum.setStatus('current')
nqaHTTPStatsDNSRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsDNSRTTMin.setStatus('current')
nqaHTTPStatsDNSRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsDNSRTTMax.setStatus('current')
nqaHTTPStatsTCPConnectRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTCPConnectRTTSum.setStatus('current')
nqaHTTPStatsTCPConnectRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTCPConnectRTTMin.setStatus('current')
nqaHTTPStatsTCPConnectRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTCPConnectRTTMax.setStatus('current')
nqaHTTPStatsTransactionRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTransactionRTTSum.setStatus('current')
nqaHTTPStatsTransactionRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTransactionRTTMin.setStatus('current')
nqaHTTPStatsTransactionRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTransactionRTTMax.setStatus('current')
nqaHTTPStatsMessageBodyOctetsSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsMessageBodyOctetsSum.setStatus('current')
nqaHTTPStatsDNSServerTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsDNSServerTimeouts.setStatus('current')
nqaHTTPStatsTCPConnectTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTCPConnectTimeouts.setStatus('current')
nqaHTTPStatsTransactionTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTransactionTimeouts.setStatus('current')
nqaHTTPStatsDNSQueryErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsDNSQueryErrors.setStatus('current')
nqaHTTPStatsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsErrors.setStatus('current')
nqaHTTPStatsTcpConnErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTcpConnErrors.setStatus('current')
nqaHTTPStatsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsProbeResponses.setStatus('current')
nqaHTTPStatsSendProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsSendProbes.setStatus('current')
nqaHTTPStatsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsBusies.setStatus('current')
nqaHTTPStatsTestFinished = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noFinish", 0), ("finish", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsTestFinished.setStatus('current')
nqaHTTPStatsRttAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsRttAvg.setStatus('current')
nqaHTTPStatsLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 2, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHTTPStatsLostPacketRatio.setStatus('current')
nqaJitterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3), )
if mibBuilder.loadTexts: nqaJitterStatsTable.setStatus('current')
nqaJitterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaJitterStatsIndex"))
if mibBuilder.loadTexts: nqaJitterStatsEntry.setStatus('current')
nqaJitterStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaJitterStatsIndex.setStatus('current')
nqaJitterStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noResult", 0), ("success", 1), ("failure", 2), ("negotiateFailed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsCompletions.setStatus('current')
nqaJitterStatsRTDOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsRTDOverThresholds.setStatus('current')
nqaJitterStatsNumOfRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsNumOfRTT.setStatus('current')
nqaJitterStatsRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsRTTSum.setStatus('current')
nqaJitterStatsRTTSum2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsRTTSum2Low.setStatus('current')
nqaJitterStatsRTTSum2High = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsRTTSum2High.setStatus('current')
nqaJitterStatsRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsRTTMin.setStatus('current')
nqaJitterStatsRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsRTTMax.setStatus('current')
nqaJitterStatsMinOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMinOfPositivesSD.setStatus('current')
nqaJitterStatsMaxOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMaxOfPositivesSD.setStatus('current')
nqaJitterStatsNumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsNumOfPositivesSD.setStatus('current')
nqaJitterStatsSumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSumOfPositivesSD.setStatus('current')
nqaJitterStatsSum2OfPositivesSDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2OfPositivesSDLow.setStatus('current')
nqaJitterStatsSum2OfPositivesSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2OfPositivesSDHigh.setStatus('current')
nqaJitterStatsMinOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMinOfNegativesSD.setStatus('current')
nqaJitterStatsMaxOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMaxOfNegativesSD.setStatus('current')
nqaJitterStatsNumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsNumOfNegativesSD.setStatus('current')
nqaJitterStatsSumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSumOfNegativesSD.setStatus('current')
nqaJitterStatsSum2OfNegativesSDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2OfNegativesSDLow.setStatus('current')
nqaJitterStatsSum2OfNegativesSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2OfNegativesSDHigh.setStatus('current')
nqaJitterStatsMinOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMinOfPositivesDS.setStatus('current')
nqaJitterStatsMaxOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMaxOfPositivesDS.setStatus('current')
nqaJitterStatsNumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsNumOfPositivesDS.setStatus('current')
nqaJitterStatsSumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSumOfPositivesDS.setStatus('current')
nqaJitterStatsSum2OfPositivesDSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2OfPositivesDSLow.setStatus('current')
nqaJitterStatsSum2OfPositivesDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2OfPositivesDSHigh.setStatus('current')
nqaJitterStatsMinOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMinOfNegativesDS.setStatus('current')
nqaJitterStatsMaxOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMaxOfNegativesDS.setStatus('current')
nqaJitterStatsNumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsNumOfNegativesDS.setStatus('current')
nqaJitterStatsSumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSumOfNegativesDS.setStatus('current')
nqaJitterStatsSum2OfNegativesDSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2OfNegativesDSLow.setStatus('current')
nqaJitterStatsSum2OfNegativesDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2OfNegativesDSHigh.setStatus('current')
nqaJitterStatsPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsPacketLossSD.setStatus('current')
nqaJitterStatsPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsPacketLossDS.setStatus('current')
nqaJitterStatsPacketOutOfSequences = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsPacketOutOfSequences.setStatus('current')
nqaJitterStatsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsErrors.setStatus('current')
nqaJitterStatsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsBusies.setStatus('current')
nqaJitterStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsTimeouts.setStatus('current')
nqaJitterStatsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsProbeResponses.setStatus('current')
nqaJitterStatsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSentProbes.setStatus('current')
nqaJitterStatsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsDrops.setStatus('current')
nqaJitterStatsTestFinished = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noFinish", 0), ("finish", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsTestFinished.setStatus('current')
nqaJitterStatsMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 44), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMaxDelaySD.setStatus('current')
nqaJitterStatsMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 45), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMaxDelayDS.setStatus('current')
nqaJitterStatsRTTAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsRTTAvg.setStatus('current')
nqaJitterStatsPacketLossRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsPacketLossRatio.setStatus('current')
nqaJitterStatsAvgJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsAvgJitter.setStatus('current')
nqaJitterStatsAvgJitterSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsAvgJitterSD.setStatus('current')
nqaJitterStatsAvgJitterDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsAvgJitterDS.setStatus('current')
nqaJitterStatsJitterOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 51), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsJitterOut.setStatus('current')
nqaJitterStatsJitterIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 52), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsJitterIn.setStatus('current')
nqaJitterStatsOWDOverThresholdsSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsOWDOverThresholdsSD.setStatus('current')
nqaJitterStatsPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsPktLossUnknown.setStatus('current')
nqaJitterStatsNumOfOWD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsNumOfOWD.setStatus('current')
nqaJitterStatsOWSumSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsOWSumSD.setStatus('current')
nqaJitterStatsOWSumDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsOWSumDS.setStatus('current')
nqaJitterStatsOWDOverThresholdsDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsOWDOverThresholdsDS.setStatus('current')
nqaJitterStatsOperOfIcpif = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsOperOfIcpif.setStatus('current')
nqaJitterStatsOperOfMos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsOperOfMos.setStatus('current')
nqaJitterStatsMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMinDelaySD.setStatus('current')
nqaJitterStatsSum2DelaySDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2DelaySDLow.setStatus('current')
nqaJitterStatsSum2DelaySDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2DelaySDHigh.setStatus('current')
nqaJitterStatsMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsMinDelayDS.setStatus('current')
nqaJitterStatsSum2DelayDSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2DelayDSLow.setStatus('current')
nqaJitterStatsSum2DelayDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsSum2DelayDSHigh.setStatus('current')
nqaJitterStatsTimeUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("us", 1), ("ms", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsTimeUnit.setStatus('current')
nqaJitterStatsAvgDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsAvgDelaySD.setStatus('current')
nqaJitterStatsAvgDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsAvgDelayDS.setStatus('current')
nqaJitterStatsPktRewriteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsPktRewriteNum.setStatus('current')
nqaJitterStatsPktRewriteRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsPktRewriteRatio.setStatus('current')
nqaJitterStatsPktDisorderNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsPktDisorderNum.setStatus('current')
nqaJitterStatsPktDisorderRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsPktDisorderRatio.setStatus('current')
nqaJitterStatsFragPktDisorderNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsFragPktDisorderNum.setStatus('current')
nqaJitterStatsFragPktDisorderRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 3, 1, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterStatsFragPktDisorderRatio.setStatus('current')
nqaFTPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4), )
if mibBuilder.loadTexts: nqaFTPStatsTable.setStatus('current')
nqaFTPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaFTPStatsIndex"))
if mibBuilder.loadTexts: nqaFTPStatsEntry.setStatus('current')
nqaFTPStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaFTPStatsIndex.setStatus('current')
nqaFTPStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noResult", 0), ("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsCompletions.setStatus('current')
nqaFTPStatsRTDOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsRTDOverThresholds.setStatus('current')
nqaFTPStatsCtrlConnMaxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 4), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsCtrlConnMaxTime.setStatus('current')
nqaFTPStatsCtrlConnMinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 5), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsCtrlConnMinTime.setStatus('current')
nqaFTPStatsCtrlConnAveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 6), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsCtrlConnAveTime.setStatus('current')
nqaFTPStatsDataConnMaxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 7), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsDataConnMaxTime.setStatus('current')
nqaFTPStatsDataConnMinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 8), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsDataConnMinTime.setStatus('current')
nqaFTPStatsDataConnAveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 9), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsDataConnAveTime.setStatus('current')
nqaFTPStatsConnectSumTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 10), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsConnectSumTimeMax.setStatus('current')
nqaFTPStatsConnectSumTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 11), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsConnectSumTimeMin.setStatus('current')
nqaFTPStatsConnectSumTimeAve = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 12), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsConnectSumTimeAve.setStatus('current')
nqaFTPStatsMessageBodyOctetsSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsMessageBodyOctetsSum.setStatus('current')
nqaFTPStatsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsErrors.setStatus('current')
nqaFTPStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsTimeouts.setStatus('current')
nqaFTPStatsDiscontinued = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsDiscontinued.setStatus('current')
nqaFTPStatsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsProbeResponses.setStatus('current')
nqaFTPStatsSendProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsSendProbes.setStatus('current')
nqaFTPStatsTestFinished = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noFinish", 0), ("finish", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsTestFinished.setStatus('current')
nqaFTPStatsRttAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsRttAvg.setStatus('current')
nqaFTPStatsLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 4, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFTPStatsLostPacketRatio.setStatus('current')
nqaMpingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5), )
if mibBuilder.loadTexts: nqaMpingStatsTable.setStatus('current')
nqaMpingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaMpingStatsIndex"), (0, "NQA-MIB", "nqaMpingStatsReceiverIndex"))
if mibBuilder.loadTexts: nqaMpingStatsEntry.setStatus('current')
nqaMpingStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaMpingStatsIndex.setStatus('current')
nqaMpingStatsReceiverIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaMpingStatsReceiverIndex.setStatus('current')
nqaMpingStatsTargetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsTargetAddressType.setStatus('current')
nqaMpingStatsTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsTargetAddress.setStatus('current')
nqaMpingStatsReceiverAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsReceiverAddress.setStatus('current')
nqaMpingStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noResult", 1), ("success", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsCompletions.setStatus('current')
nqaMpingStatsRTDOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsRTDOverThresholds.setStatus('current')
nqaMpingStatsSumCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsSumCompletionTime.setStatus('current')
nqaMpingStatsSumCompletionTime2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsSumCompletionTime2Low.setStatus('current')
nqaMpingStatsSumCompletionTime2High = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsSumCompletionTime2High.setStatus('current')
nqaMpingStatsCompletionTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsCompletionTimeMin.setStatus('current')
nqaMpingStatsCompletionTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsCompletionTimeMax.setStatus('current')
nqaMpingStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsTimeouts.setStatus('current')
nqaMpingStatsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsBusies.setStatus('current')
nqaMpingStatsSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsSequenceErrors.setStatus('current')
nqaMpingStatsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsDrops.setStatus('current')
nqaMpingStatsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsProbeResponses.setStatus('current')
nqaMpingStatsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsSentProbes.setStatus('current')
nqaMpingStatsLastGoodProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsLastGoodProbe.setStatus('current')
nqaMpingStatsTestFinished = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noFinish", 1), ("finish", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsTestFinished.setStatus('current')
nqaMpingStatsReceiverCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsReceiverCount.setStatus('current')
nqaMpingStatsLastFibHit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsLastFibHit.setStatus('current')
nqaMpingStatsRttAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsRttAvg.setStatus('current')
nqaMpingStatsLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 5, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingStatsLostPacketRatio.setStatus('current')
nqaMtracertStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6), )
if mibBuilder.loadTexts: nqaMtracertStatsTable.setStatus('current')
nqaMtracertStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaMtracertStatsIndex"), (0, "NQA-MIB", "nqaMtracertStatsHopIndex"))
if mibBuilder.loadTexts: nqaMtracertStatsEntry.setStatus('current')
nqaMtracertStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaMtracertStatsIndex.setStatus('current')
nqaMtracertStatsHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: nqaMtracertStatsHopIndex.setStatus('current')
nqaMtracertStatsAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsAddressType.setStatus('current')
nqaMtracertStatsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsAddress.setStatus('current')
nqaMtracertStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noResult", 1), ("success", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsCompletions.setStatus('current')
nqaMtracertStatsCurHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsCurHopCount.setStatus('current')
nqaMtracertStatsCurProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsCurProbeCount.setStatus('current')
nqaMtracertStatsRTDOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsRTDOverThresholds.setStatus('current')
nqaMtracertStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsTimeouts.setStatus('current')
nqaMtracertStatsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsBusies.setStatus('current')
nqaMtracertStatsSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsSequenceErrors.setStatus('current')
nqaMtracertStatsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsDrops.setStatus('current')
nqaMtracertStatsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsProbeResponses.setStatus('current')
nqaMtracertStatsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsSentProbes.setStatus('current')
nqaMtracertStatsLastGoodProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsLastGoodProbe.setStatus('current')
nqaMtracertStatsLastGoodPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsLastGoodPath.setStatus('current')
nqaMtracertStatsTestFinished = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noFinish", 1), ("finish", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsTestFinished.setStatus('current')
nqaMtracertStatsCurPathTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsCurPathTTL.setStatus('current')
nqaMtracertStatsMaxPathTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsMaxPathTTL.setStatus('current')
nqaMtracertStatsInPkgLossRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsInPkgLossRate.setStatus('current')
nqaMtracertStatsSGPkgLossRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsSGPkgLossRate.setStatus('current')
nqaMtracertStatsInPkgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsInPkgRate.setStatus('current')
nqaMtracertStatsOutPkgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsOutPkgRate.setStatus('current')
nqaMtracertStatsTimeDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 6, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertStatsTimeDelay.setStatus('current')
nqaPathMtuStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7), )
if mibBuilder.loadTexts: nqaPathMtuStatsTable.setStatus('current')
nqaPathMtuStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaPathMtuStatsIndex"))
if mibBuilder.loadTexts: nqaPathMtuStatsEntry.setStatus('current')
nqaPathMtuStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaPathMtuStatsIndex.setStatus('current')
nqaPathMtuStatsAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsAddressType.setStatus('current')
nqaPathMtuStatsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsAddress.setStatus('current')
nqaPathMtuStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noResult", 0), ("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsCompletions.setStatus('current')
nqaPathMtuStatsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsSentProbes.setStatus('current')
nqaPathMtuStatsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsProbeResponses.setStatus('current')
nqaPathMtuStatsDiscoveryPathMtuMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsDiscoveryPathMtuMin.setStatus('current')
nqaPathMtuStatsDiscoveryPathMtuMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsDiscoveryPathMtuMax.setStatus('current')
nqaPathMtuStatsOptimumFirstStep = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsOptimumFirstStep.setStatus('current')
nqaPathMtuStatsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsBusies.setStatus('current')
nqaPathMtuStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsTimeouts.setStatus('current')
nqaPathMtuStatsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsDrops.setStatus('current')
nqaPathMtuStatsPathMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsPathMtu.setStatus('current')
nqaPathMtuStatsTestFinished = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 7, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofinish", 0), ("finish", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathMtuStatsTestFinished.setStatus('current')
nqaPathJitterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8), )
if mibBuilder.loadTexts: nqaPathJitterStatsTable.setStatus('current')
nqaPathJitterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaPathJitterStatsIndex"), (0, "NQA-MIB", "nqaPathJitterStatsHopIndex"))
if mibBuilder.loadTexts: nqaPathJitterStatsEntry.setStatus('current')
nqaPathJitterStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaPathJitterStatsIndex.setStatus('current')
nqaPathJitterStatsHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: nqaPathJitterStatsHopIndex.setStatus('current')
nqaPathJitterStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noResult", 0), ("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsCompletions.setStatus('current')
nqaPathJitterStatsAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsAddressType.setStatus('current')
nqaPathJitterStatsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsAddress.setStatus('current')
nqaPathJitterStatsRtdOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsRtdOverThresholds.setStatus('current')
nqaPathJitterStatsNumOfRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsNumOfRtt.setStatus('current')
nqaPathJitterStatsRttSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsRttSum.setStatus('current')
nqaPathJitterStatsRttSum2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsRttSum2Low.setStatus('current')
nqaPathJitterStatsRttSum2High = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsRttSum2High.setStatus('current')
nqaPathJitterStatsRttMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsRttMin.setStatus('current')
nqaPathJitterStatsRttMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsRttMax.setStatus('current')
nqaPathJitterStatsMinOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMinOfPositivesSD.setStatus('current')
nqaPathJitterStatsMaxOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMaxOfPositivesSD.setStatus('current')
nqaPathJitterStatsNumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsNumOfPositivesSD.setStatus('current')
nqaPathJitterStatsSumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSumOfPositivesSD.setStatus('current')
nqaPathJitterStatsSum2OfPositivesSDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSum2OfPositivesSDLow.setStatus('current')
nqaPathJitterStatsSum2OfPositivesSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSum2OfPositivesSDHigh.setStatus('current')
nqaPathJitterStatsMinOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMinOfNegativesSD.setStatus('current')
nqaPathJitterStatsMaxOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMaxOfNegativesSD.setStatus('current')
nqaPathJitterStatsNumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsNumOfNegativesSD.setStatus('current')
nqaPathJitterStatsSumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSumOfNegativesSD.setStatus('current')
nqaPathJitterStatsSum2OfNegativesSDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSum2OfNegativesSDLow.setStatus('current')
nqaPathJitterStatsSum2OfNegativesSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSum2OfNegativesSDHigh.setStatus('current')
nqaPathJitterStatsMinOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMinOfPositivesDS.setStatus('current')
nqaPathJitterStatsMaxOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMaxOfPositivesDS.setStatus('current')
nqaPathJitterStatsNumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsNumOfPositivesDS.setStatus('current')
nqaPathJitterStatsSumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSumOfPositivesDS.setStatus('current')
nqaPathJitterStatsSum2OfPositivesDSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSum2OfPositivesDSLow.setStatus('current')
nqaPathJitterStatsSum2OfPositivesDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSum2OfPositivesDSHigh.setStatus('current')
nqaPathJitterStatsMinOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMinOfNegativesDS.setStatus('current')
nqaPathJitterStatsMaxOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMaxOfNegativesDS.setStatus('current')
nqaPathJitterStatsNumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsNumOfNegativesDS.setStatus('current')
nqaPathJitterStatsSumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSumOfNegativesDS.setStatus('current')
nqaPathJitterStatsSum2OfNegativesDSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSum2OfNegativesDSLow.setStatus('current')
nqaPathJitterStatsSum2OfNegativesDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSum2OfNegativesDSHigh.setStatus('current')
nqaPathJitterStatsPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsPacketLossSD.setStatus('current')
nqaPathJitterStatsPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsPacketLossDS.setStatus('current')
nqaPathJitterStatsPacketOutOfSequences = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsPacketOutOfSequences.setStatus('current')
nqaPathJitterStatsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsErrors.setStatus('current')
nqaPathJitterStatsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsBusies.setStatus('current')
nqaPathJitterStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsTimeouts.setStatus('current')
nqaPathJitterStatsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsProbeResponses.setStatus('current')
nqaPathJitterStatsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsSentProbes.setStatus('current')
nqaPathJitterStatsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsDrops.setStatus('current')
nqaPathJitterStatsTestFinished = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noFinish", 0), ("finish", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsTestFinished.setStatus('current')
nqaPathJitterStatsMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 47), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMaxDelaySD.setStatus('current')
nqaPathJitterStatsMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 48), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsMaxDelayDS.setStatus('current')
nqaPathJitterStatsRttAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsRttAvg.setStatus('current')
nqaPathJitterStatsPacketLossRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsPacketLossRatio.setStatus('current')
nqaPathJitterStatsAvgJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsAvgJitter.setStatus('current')
nqaPathJitterStatsAvgJitterSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsAvgJitterSD.setStatus('current')
nqaPathJitterStatsAvgJitterDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsAvgJitterDS.setStatus('current')
nqaPathJitterStatsJitterOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 54), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsJitterOut.setStatus('current')
nqaPathJitterStatsJitterIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 55), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsJitterIn.setStatus('current')
nqaPathJitterStatsOwdOverThresholdsSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsOwdOverThresholdsSD.setStatus('current')
nqaPathJitterStatsPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsPktLossUnknown.setStatus('current')
nqaPathJitterStatsNumOfOwd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsNumOfOwd.setStatus('current')
nqaPathJitterStatsOwdSumSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsOwdSumSD.setStatus('current')
nqaPathJitterStatsOwdSumDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsOwdSumDS.setStatus('current')
nqaPathJitterStatsOwdOverThresholdsDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 8, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPathJitterStatsOwdOverThresholdsDS.setStatus('current')
nqaPppoeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9), )
if mibBuilder.loadTexts: nqaPppoeStatsTable.setStatus('current')
nqaPppoeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaPppoeStatsIndex"), (0, "NQA-MIB", "nqaPppoeRedialIndex"))
if mibBuilder.loadTexts: nqaPppoeStatsEntry.setStatus('current')
nqaPppoeStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaPppoeStatsIndex.setStatus('current')
nqaPppoeRedialIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaPppoeRedialIndex.setStatus('current')
nqaPppoeStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dialupSuccess", 1), ("dialupFail", 2), ("stop", 3), ("exceptionStop", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeStatsCompletions.setStatus('current')
nqaPppoeStatsCurrentPhase = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("discovery", 1), ("lcp", 2), ("authorization", 3), ("ncp", 4), ("online", 5), ("stop", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeStatsCurrentPhase.setStatus('current')
nqaPppoeStatsErrorMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 255))).clone(namedValues=NamedValues(("other", 1), ("timeout", 2), ("paramNegotiateFail", 3), ("userAuthenticationFail", 4), ("peerDownRequest", 5), ("noError", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeStatsErrorMessage.setStatus('current')
nqaPppoeDiscoveryTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeDiscoveryTimeout.setStatus('current')
nqaPppoeLcpTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeLcpTimeout.setStatus('current')
nqaPppoeAuthorizationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeAuthorizationTimeout.setStatus('current')
nqaPppoeNcpTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeNcpTimeout.setStatus('current')
nqaPppoeConnectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeConnectionTime.setStatus('current')
nqaPppoeClientSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeClientSessionId.setStatus('current')
nqaPppoeClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 12), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeClientIpAddress.setStatus('current')
nqaPppoeGatewayIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 4, 9, 1, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaPppoeGatewayIpAddress.setStatus('current')
nqaHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5))
nqaHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1), )
if mibBuilder.loadTexts: nqaHistoryTable.setStatus('current')
nqaHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaHistoryIndex"), (0, "NQA-MIB", "nqaHistoryHopIndex"), (0, "NQA-MIB", "nqaHistoryProbeIndex"))
if mibBuilder.loadTexts: nqaHistoryEntry.setStatus('current')
nqaHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaHistoryIndex.setStatus('current')
nqaHistoryHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: nqaHistoryHopIndex.setStatus('current')
nqaHistoryProbeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaHistoryProbeIndex.setStatus('current')
nqaHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHistoryTimeStamp.setStatus('current')
nqaHistoryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHistoryAddressType.setStatus('current')
nqaHistoryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHistoryAddress.setStatus('current')
nqaHistoryCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1, 7), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHistoryCompletionTime.setStatus('current')
nqaHistoryFinishState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("success", 1), ("timeout", 2), ("drop", 3), ("busy", 4), ("overThreshold", 5), ("disconnected", 6), ("noConnected", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHistoryFinishState.setStatus('current')
nqaHistoryLastRC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaHistoryLastRC.setStatus('current')
nqaMpingHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2), )
if mibBuilder.loadTexts: nqaMpingHistoryTable.setStatus('current')
nqaMpingHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaMpingHistoryIndex"), (0, "NQA-MIB", "nqaMpingHistoryReceiverIndex"), (0, "NQA-MIB", "nqaMpingHistoryResponseIndex"))
if mibBuilder.loadTexts: nqaMpingHistoryEntry.setStatus('current')
nqaMpingHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaMpingHistoryIndex.setStatus('current')
nqaMpingHistoryReceiverIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaMpingHistoryReceiverIndex.setStatus('current')
nqaMpingHistoryResponseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaMpingHistoryResponseIndex.setStatus('current')
nqaMpingHistoryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingHistoryAddressType.setStatus('current')
nqaMpingHistoryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingHistoryAddress.setStatus('current')
nqaMpingHistoryReceiverAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingHistoryReceiverAddress.setStatus('current')
nqaMpingHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingHistoryTimeStamp.setStatus('current')
nqaMpingHistoryCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 8), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingHistoryCompletionTime.setStatus('current')
nqaMpingHistoryFinishState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("success", 1), ("timeout", 2), ("drop", 3), ("busy", 4), ("overThreshold", 5), ("disconnected", 6), ("noConnected", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingHistoryFinishState.setStatus('current')
nqaMpingHistoryLastRC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingHistoryLastRC.setStatus('current')
nqaMpingHistoryFibHit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMpingHistoryFibHit.setStatus('current')
nqaMtracertHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3), )
if mibBuilder.loadTexts: nqaMtracertHistoryTable.setStatus('current')
nqaMtracertHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaMtracertHistoryIndex"), (0, "NQA-MIB", "nqaMtracertHistoryHopIndex"))
if mibBuilder.loadTexts: nqaMtracertHistoryEntry.setStatus('current')
nqaMtracertHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaMtracertHistoryIndex.setStatus('current')
nqaMtracertHistoryHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: nqaMtracertHistoryHopIndex.setStatus('current')
nqaMtracertHistoryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryAddressType.setStatus('current')
nqaMtracertHistoryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryAddress.setStatus('current')
nqaMtracertHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryTimeStamp.setStatus('current')
nqaMtracertHistoryCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 6), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryCompletionTime.setStatus('current')
nqaMtracertHistoryLastRC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryLastRC.setStatus('current')
nqaMtracertHistoryCurQueryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("maxHops", 1), ("hopByHop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryCurQueryMode.setStatus('current')
nqaMtracertHistoryQueryArrivalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryQueryArrivalTime.setStatus('current')
nqaMtracertHistoryIncomingIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryIncomingIfAddress.setStatus('current')
nqaMtracertHistoryOutgoingIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 11), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryOutgoingIfAddress.setStatus('current')
nqaMtracertHistoryPreHopRouterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 12), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryPreHopRouterAddress.setStatus('current')
nqaMtracertHistoryInputPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryInputPacketCount.setStatus('current')
nqaMtracertHistoryOutputPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryOutputPacketCount.setStatus('current')
nqaMtracertHistoryTotalSGPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryTotalSGPacketCount.setStatus('current')
nqaMtracertHistoryRtgProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 255))).clone(namedValues=NamedValues(("dvmrp", 1), ("mospf", 2), ("pim", 3), ("cbt", 4), ("pimUsingSpecRteTab", 5), ("pimUsingStaticRte", 6), ("dvmrpUsingStaticRte", 7), ("pimUsingMBGPRte", 8), ("cbtUsingSpecRteTab", 9), ("cbtUsingStaticRte", 10), ("pimUsingState", 11), ("unknownProtocol", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryRtgProtocol.setStatus('current')
nqaMtracertHistoryFwdTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryFwdTTL.setStatus('current')
nqaMtracertHistoryFwdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 130, 131, 132, 255))).clone(namedValues=NamedValues(("noError", 1), ("wrongIf", 2), ("pruneSent", 3), ("pruneRCVD", 4), ("scoped", 5), ("noRoute", 6), ("wrongLastHop", 7), ("notForwarding", 8), ("reachedRP", 9), ("noMulticast", 11), ("infoHidden", 12), ("noSpace", 130), ("oldRouter", 131), ("adminProhib", 132), ("unknownError", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistoryFwdCode.setStatus('current')
nqaMtracertHistroyFinishState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("success", 1), ("timeout", 2), ("busy", 3), ("drop", 4), ("overThreshold", 5), ("disconnected", 6), ("noConnected", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMtracertHistroyFinishState.setStatus('current')
nqaVplsMacTracertHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4), )
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryTable.setStatus('current')
nqaVplsMacTracertHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaVplsMacTracertHistoryIndex"), (0, "NQA-MIB", "nqaVplsMacTracertHistoryHopIndex"), (0, "NQA-MIB", "nqaVplsMacTracertHistoryResponseIndex"))
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryEntry.setStatus('current')
nqaVplsMacTracertHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryIndex.setStatus('current')
nqaVplsMacTracertHistoryHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryHopIndex.setStatus('current')
nqaVplsMacTracertHistoryResponseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryResponseIndex.setStatus('current')
nqaVplsMacTracertHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryTimeStamp.setStatus('current')
nqaVplsMacTracertHistoryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryAddressType.setStatus('current')
nqaVplsMacTracertHistoryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryAddress.setStatus('current')
nqaVplsMacTracertHistoryCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 7), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryCompletionTime.setStatus('current')
nqaVplsMacTracertHistoryFinishState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("success", 1), ("timeout", 2), ("drop", 3), ("busy", 4), ("overThreshold", 5), ("disconnected", 6), ("noConnected", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryFinishState.setStatus('current')
nqaVplsMacTracertHistoryHitFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryHitFlag.setStatus('current')
nqaVplsMacTracertHistoryDSCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryDSCount.setStatus('current')
nqaVplsMacTracertHistorySuccessPathNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 4, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMacTracertHistorySuccessPathNode.setStatus('current')
nqaVplsMacTracertHistoryDSTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 5), )
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryDSTable.setStatus('current')
nqaVplsMacTracertHistoryDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 5, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaVplsMacTracertHistoryIndex"), (0, "NQA-MIB", "nqaVplsMacTracertHistoryHopIndex"), (0, "NQA-MIB", "nqaVplsMacTracertHistoryResponseIndex"), (0, "NQA-MIB", "nqaVplsMacTracertHistoryDSIndex"))
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryDSEntry.setStatus('current')
nqaVplsMacTracertHistoryDSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryDSIndex.setStatus('current')
nqaVplsMacTracertHistoryDSAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 5, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMacTracertHistoryDSAddress.setStatus('current')
nqaVplsMTraceHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6), )
if mibBuilder.loadTexts: nqaVplsMTraceHistoryTable.setStatus('current')
nqaVplsMTraceHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaVplsMTraceHistoryIndex"), (0, "NQA-MIB", "nqaVplsMTraceHistoryHopIndex"), (0, "NQA-MIB", "nqaVplsMTraceHistoryResponseIndex"))
if mibBuilder.loadTexts: nqaVplsMTraceHistoryEntry.setStatus('current')
nqaVplsMTraceHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaVplsMTraceHistoryIndex.setStatus('current')
nqaVplsMTraceHistoryHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: nqaVplsMTraceHistoryHopIndex.setStatus('current')
nqaVplsMTraceHistoryResponseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaVplsMTraceHistoryResponseIndex.setStatus('current')
nqaVplsMTraceHistoryResponserAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryResponserAddressType.setStatus('current')
nqaVplsMTraceHistoryResponserAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryResponserAddress.setStatus('current')
nqaVplsMTraceHistoryUpStreamAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryUpStreamAddressType.setStatus('current')
nqaVplsMTraceHistoryUpStreamAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryUpStreamAddress.setStatus('current')
nqaVplsMTraceHistoryReceivedTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setUnits('time-to-live value').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryReceivedTtl.setStatus('current')
nqaVplsMTraceHistoryIGMPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igmpv1", 1), ("igmpv2", 2), ("igmpv3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryIGMPVersion.setStatus('current')
nqaVplsMTraceHistoryIGMPSnpgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 10), EnableValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryIGMPSnpgEnable.setStatus('current')
nqaVplsMTraceHistoryIGMPProxyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 11), EnableValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryIGMPProxyEnable.setStatus('current')
nqaVplsMTraceHistoryIGMPRouterPortLearningEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 12), EnableValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryIGMPRouterPortLearningEnable.setStatus('current')
nqaVplsMTraceHistoryRequireRouterAlertEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 13), EnableValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryRequireRouterAlertEnable.setStatus('current')
nqaVplsMTraceHistoryForwardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("ip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryForwardMode.setStatus('current')
nqaVplsMTraceHistoryHitFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryHitFlag.setStatus('current')
nqaVplsMTraceHistoryPWExist = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryPWExist.setStatus('current')
nqaVplsMTraceHistoryGroupPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryGroupPolicy.setStatus('current')
nqaVplsMTraceHistoryCACExist = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryCACExist.setStatus('current')
nqaVplsMTraceHistoryRcvQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryRcvQueryCount.setStatus('current')
nqaVplsMTraceHistoryRcvReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryRcvReportCount.setStatus('current')
nqaVplsMTraceHistoryRcvLeaveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryRcvLeaveCount.setStatus('current')
nqaVplsMTraceHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 22), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryTimeStamp.setStatus('current')
nqaVplsMTraceHistoryCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 23), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryCompletionTime.setStatus('current')
nqaVplsMTraceHistoryLastRC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryLastRC.setStatus('current')
nqaVplsMTraceHistoryLastRSC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryLastRSC.setStatus('current')
nqaVplsMTraceHistoryFinishState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("success", 1), ("timeout", 2), ("drop", 3), ("busy", 4), ("overThreshold", 5), ("disconnected", 6), ("noConnected", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistoryFinishState.setStatus('current')
nqaVplsMTraceHistorySuccessPathNode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 6, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onPath", 1), ("notonPath", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaVplsMTraceHistorySuccessPathNode.setStatus('current')
nqaMacTraceHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7), )
if mibBuilder.loadTexts: nqaMacTraceHistoryTable.setStatus('current')
nqaMacTraceHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaMacTraceHistoryIndex"), (0, "NQA-MIB", "nqaMacTraceHistoryReceiveOrder"))
if mibBuilder.loadTexts: nqaMacTraceHistoryEntry.setStatus('current')
nqaMacTraceHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaMacTraceHistoryIndex.setStatus('current')
nqaMacTraceHistoryReceiveOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaMacTraceHistoryReceiveOrder.setStatus('current')
nqaMacTraceHistoryTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryTTL.setStatus('current')
nqaMacTraceHistorySeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistorySeqNumber.setStatus('current')
nqaMacTraceHistoryCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 5), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryCompletionTime.setStatus('current')
nqaMacTraceHistoryForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryForwarded.setStatus('current')
nqaMacTraceHistoryTerminalMep = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryTerminalMep.setStatus('current')
nqaMacTraceHistoryRelayAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 8), HWDot1agCfmRelayActionFieldValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryRelayAction.setStatus('current')
nqaMacTraceHistoryIngressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 9), HWDot1agCfmIngressActionFieldValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryIngressAction.setStatus('current')
nqaMacTraceHistoryIngressMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryIngressMac.setStatus('current')
nqaMacTraceHistoryIngressIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryIngressIfName.setStatus('current')
nqaMacTraceHistoryEgressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 12), HWDot1agCfmEgressActionFieldValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryEgressAction.setStatus('current')
nqaMacTraceHistoryEgressMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 13), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryEgressMac.setStatus('current')
nqaMacTraceHistoryEgressIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 5, 7, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMacTraceHistoryEgressIfName.setStatus('current')
nqaNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6))
nqaResultsProbeFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 1)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaResultsAddressType"), ("NQA-MIB", "nqaResultsAddress"), ("NQA-MIB", "nqaResultsCompletionTimeMin"), ("NQA-MIB", "nqaResultsCompletionTimeMax"), ("NQA-MIB", "nqaResultsSumCompletionTime"), ("NQA-MIB", "nqaResultsProbeResponses"), ("NQA-MIB", "nqaResultsSentProbes"), ("NQA-MIB", "nqaResultsSumCompletionTime2Low"), ("NQA-MIB", "nqaResultsSumCompletionTime2High"), ("NQA-MIB", "nqaResultsLastGoodProbe"), ("NQA-MIB", "nqaResultsLastGoodPath"))
if mibBuilder.loadTexts: nqaResultsProbeFailed.setStatus('current')
nqaResultsTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 2)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaResultsAddressType"), ("NQA-MIB", "nqaResultsAddress"), ("NQA-MIB", "nqaResultsCompletionTimeMin"), ("NQA-MIB", "nqaResultsCompletionTimeMax"), ("NQA-MIB", "nqaResultsSumCompletionTime"), ("NQA-MIB", "nqaResultsProbeResponses"), ("NQA-MIB", "nqaResultsSentProbes"), ("NQA-MIB", "nqaResultsSumCompletionTime2Low"), ("NQA-MIB", "nqaResultsSumCompletionTime2High"), ("NQA-MIB", "nqaResultsLastGoodProbe"), ("NQA-MIB", "nqaResultsLastGoodPath"))
if mibBuilder.loadTexts: nqaResultsTestFailed.setStatus('current')
nqaResultsTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 3)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaResultsAddressType"), ("NQA-MIB", "nqaResultsAddress"), ("NQA-MIB", "nqaResultsCompletionTimeMin"), ("NQA-MIB", "nqaResultsCompletionTimeMax"), ("NQA-MIB", "nqaResultsSumCompletionTime"), ("NQA-MIB", "nqaResultsProbeResponses"), ("NQA-MIB", "nqaResultsSentProbes"), ("NQA-MIB", "nqaResultsSumCompletionTime2Low"), ("NQA-MIB", "nqaResultsSumCompletionTime2High"), ("NQA-MIB", "nqaResultsLastGoodProbe"), ("NQA-MIB", "nqaResultsLastGoodPath"))
if mibBuilder.loadTexts: nqaResultsTestCompleted.setStatus('current')
nqaResultsThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 4)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaResultsAddressType"), ("NQA-MIB", "nqaResultsAddress"), ("NQA-MIB", "nqaAdminCtrlThreshold1"), ("NQA-MIB", "nqaResultsCompletionTimeMax"), ("NQA-MIB", "nqaResultsRTDOverThresholds"))
if mibBuilder.loadTexts: nqaResultsThresholdNotification.setStatus('current')
nqaHTTPStatsProbeFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 5)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaHTTPStatsDNSRTTSum"), ("NQA-MIB", "nqaHTTPStatsTCPConnectRTTSum"), ("NQA-MIB", "nqaHTTPStatsTransactionRTTSum"), ("NQA-MIB", "nqaHTTPStatsDNSServerTimeouts"), ("NQA-MIB", "nqaHTTPStatsTCPConnectTimeouts"), ("NQA-MIB", "nqaHTTPStatsTransactionTimeouts"), ("NQA-MIB", "nqaHTTPStatsDNSQueryErrors"), ("NQA-MIB", "nqaHTTPStatsTcpConnErrors"), ("NQA-MIB", "nqaHTTPStatsErrors"), ("NQA-MIB", "nqaHTTPStatsProbeResponses"), ("NQA-MIB", "nqaHTTPStatsSendProbes"))
if mibBuilder.loadTexts: nqaHTTPStatsProbeFailed.setStatus('current')
nqaHTTPStatsTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 6)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaHTTPStatsDNSRTTSum"), ("NQA-MIB", "nqaHTTPStatsTCPConnectRTTSum"), ("NQA-MIB", "nqaHTTPStatsTransactionRTTSum"), ("NQA-MIB", "nqaHTTPStatsDNSServerTimeouts"), ("NQA-MIB", "nqaHTTPStatsTCPConnectTimeouts"), ("NQA-MIB", "nqaHTTPStatsTransactionTimeouts"), ("NQA-MIB", "nqaHTTPStatsDNSQueryErrors"), ("NQA-MIB", "nqaHTTPStatsTcpConnErrors"), ("NQA-MIB", "nqaHTTPStatsErrors"), ("NQA-MIB", "nqaHTTPStatsProbeResponses"), ("NQA-MIB", "nqaHTTPStatsSendProbes"))
if mibBuilder.loadTexts: nqaHTTPStatsTestFailed.setStatus('current')
nqaHTTPStatsTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 7)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaHTTPStatsDNSRTTSum"), ("NQA-MIB", "nqaHTTPStatsTCPConnectRTTSum"), ("NQA-MIB", "nqaHTTPStatsTransactionRTTSum"), ("NQA-MIB", "nqaHTTPStatsDNSServerTimeouts"), ("NQA-MIB", "nqaHTTPStatsTCPConnectTimeouts"), ("NQA-MIB", "nqaHTTPStatsTransactionTimeouts"), ("NQA-MIB", "nqaHTTPStatsDNSQueryErrors"), ("NQA-MIB", "nqaHTTPStatsTcpConnErrors"), ("NQA-MIB", "nqaHTTPStatsErrors"), ("NQA-MIB", "nqaHTTPStatsProbeResponses"), ("NQA-MIB", "nqaHTTPStatsSendProbes"))
if mibBuilder.loadTexts: nqaHTTPStatsTestCompleted.setStatus('current')
nqaHTTPStatsThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 8)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaAdminCtrlThreshold1"), ("NQA-MIB", "nqaAdminCtrlThreshold2"), ("NQA-MIB", "nqaAdminCtrlThreshold3"), ("NQA-MIB", "nqaHTTPStatsDNSRTTMax"), ("NQA-MIB", "nqaHTTPStatsTCPConnectRTTMax"), ("NQA-MIB", "nqaHTTPStatsTransactionRTTMax"), ("NQA-MIB", "nqaHTTPStatsRTDOverThresholds"))
if mibBuilder.loadTexts: nqaHTTPStatsThresholdNotification.setStatus('current')
nqaJitterStatsProbeFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 9)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaJitterStatsRTTSum"), ("NQA-MIB", "nqaJitterStatsRTTSum2Low"), ("NQA-MIB", "nqaJitterStatsRTTSum2High"), ("NQA-MIB", "nqaJitterStatsRTTMin"), ("NQA-MIB", "nqaJitterStatsRTTMax"), ("NQA-MIB", "nqaJitterStatsPacketOutOfSequences"), ("NQA-MIB", "nqaJitterStatsErrors"), ("NQA-MIB", "nqaJitterStatsBusies"), ("NQA-MIB", "nqaJitterStatsTimeouts"), ("NQA-MIB", "nqaJitterStatsDrops"), ("NQA-MIB", "nqaJitterStatsProbeResponses"), ("NQA-MIB", "nqaJitterStatsSentProbes"), ("NQA-MIB", "nqaJitterStatsMaxDelaySD"), ("NQA-MIB", "nqaJitterStatsMaxDelayDS"), ("NQA-MIB", "nqaJitterStatsJitterOut"), ("NQA-MIB", "nqaJitterStatsJitterIn"), ("NQA-MIB", "nqaJitterStatsOWSumSD"), ("NQA-MIB", "nqaJitterStatsOWSumDS"))
if mibBuilder.loadTexts: nqaJitterStatsProbeFailed.setStatus('current')
nqaJitterStatsTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 10)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaJitterStatsRTTSum"), ("NQA-MIB", "nqaJitterStatsRTTSum2Low"), ("NQA-MIB", "nqaJitterStatsRTTSum2High"), ("NQA-MIB", "nqaJitterStatsRTTMin"), ("NQA-MIB", "nqaJitterStatsRTTMax"), ("NQA-MIB", "nqaJitterStatsPacketOutOfSequences"), ("NQA-MIB", "nqaJitterStatsErrors"), ("NQA-MIB", "nqaJitterStatsBusies"), ("NQA-MIB", "nqaJitterStatsTimeouts"), ("NQA-MIB", "nqaJitterStatsDrops"), ("NQA-MIB", "nqaJitterStatsProbeResponses"), ("NQA-MIB", "nqaJitterStatsSentProbes"), ("NQA-MIB", "nqaJitterStatsMaxDelaySD"), ("NQA-MIB", "nqaJitterStatsMaxDelayDS"), ("NQA-MIB", "nqaJitterStatsJitterOut"), ("NQA-MIB", "nqaJitterStatsJitterIn"), ("NQA-MIB", "nqaJitterStatsOWSumSD"), ("NQA-MIB", "nqaJitterStatsOWSumDS"))
if mibBuilder.loadTexts: nqaJitterStatsTestFailed.setStatus('current')
nqaJitterStatsTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 11)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaJitterStatsRTTSum"), ("NQA-MIB", "nqaJitterStatsRTTSum2Low"), ("NQA-MIB", "nqaJitterStatsRTTSum2High"), ("NQA-MIB", "nqaJitterStatsRTTMin"), ("NQA-MIB", "nqaJitterStatsRTTMax"), ("NQA-MIB", "nqaJitterStatsPacketOutOfSequences"), ("NQA-MIB", "nqaJitterStatsErrors"), ("NQA-MIB", "nqaJitterStatsBusies"), ("NQA-MIB", "nqaJitterStatsTimeouts"), ("NQA-MIB", "nqaJitterStatsDrops"), ("NQA-MIB", "nqaJitterStatsProbeResponses"), ("NQA-MIB", "nqaJitterStatsSentProbes"), ("NQA-MIB", "nqaJitterStatsMaxDelaySD"), ("NQA-MIB", "nqaJitterStatsMaxDelayDS"), ("NQA-MIB", "nqaJitterStatsJitterOut"), ("NQA-MIB", "nqaJitterStatsJitterIn"), ("NQA-MIB", "nqaJitterStatsOWSumSD"), ("NQA-MIB", "nqaJitterStatsOWSumDS"))
if mibBuilder.loadTexts: nqaJitterStatsTestCompleted.setStatus('current')
nqaFTPStatsProbeFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 12)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaFTPStatsCtrlConnMaxTime"), ("NQA-MIB", "nqaFTPStatsDataConnMaxTime"), ("NQA-MIB", "nqaFTPStatsConnectSumTimeMax"), ("NQA-MIB", "nqaFTPStatsErrors"), ("NQA-MIB", "nqaFTPStatsTimeouts"), ("NQA-MIB", "nqaFTPStatsProbeResponses"), ("NQA-MIB", "nqaFTPStatsSendProbes"))
if mibBuilder.loadTexts: nqaFTPStatsProbeFailed.setStatus('current')
nqaFTPStatsTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 13)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaFTPStatsCtrlConnMaxTime"), ("NQA-MIB", "nqaFTPStatsDataConnMaxTime"), ("NQA-MIB", "nqaFTPStatsConnectSumTimeMax"), ("NQA-MIB", "nqaFTPStatsErrors"), ("NQA-MIB", "nqaFTPStatsTimeouts"), ("NQA-MIB", "nqaFTPStatsProbeResponses"), ("NQA-MIB", "nqaFTPStatsSendProbes"))
if mibBuilder.loadTexts: nqaFTPStatsTestFailed.setStatus('current')
nqaFTPStatsTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 14)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaFTPStatsCtrlConnMaxTime"), ("NQA-MIB", "nqaFTPStatsDataConnMaxTime"), ("NQA-MIB", "nqaFTPStatsConnectSumTimeMax"), ("NQA-MIB", "nqaFTPStatsErrors"), ("NQA-MIB", "nqaFTPStatsTimeouts"), ("NQA-MIB", "nqaFTPStatsProbeResponses"), ("NQA-MIB", "nqaFTPStatsSendProbes"))
if mibBuilder.loadTexts: nqaFTPStatsTestCompleted.setStatus('current')
nqaFTPStatsThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 15)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaAdminCtrlThreshold1"), ("NQA-MIB", "nqaAdminCtrlThreshold2"), ("NQA-MIB", "nqaFTPStatsCtrlConnMaxTime"), ("NQA-MIB", "nqaFTPStatsDataConnMaxTime"), ("NQA-MIB", "nqaFTPStatsRTDOverThresholds"))
if mibBuilder.loadTexts: nqaFTPStatsThresholdNotification.setStatus('current')
nqaJitterStatsRTDThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 16)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaAdminCtrlThreshold1"), ("NQA-MIB", "nqaJitterStatsRTTMax"), ("NQA-MIB", "nqaJitterStatsMaxDelaySD"), ("NQA-MIB", "nqaJitterStatsMaxDelayDS"), ("NQA-MIB", "nqaJitterStatsRTDOverThresholds"))
if mibBuilder.loadTexts: nqaJitterStatsRTDThresholdNotification.setStatus('current')
nqaJitterStatsOWDThresholdNotificationSD = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 17)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaAdminCtrlThreshold2"), ("NQA-MIB", "nqaJitterStatsRTTMax"), ("NQA-MIB", "nqaJitterStatsMaxDelaySD"), ("NQA-MIB", "nqaJitterStatsMaxDelayDS"), ("NQA-MIB", "nqaJitterStatsOWDOverThresholdsSD"))
if mibBuilder.loadTexts: nqaJitterStatsOWDThresholdNotificationSD.setStatus('current')
nqaJitterStatsOWDThresholdNotificationDS = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 18)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaAdminCtrlThreshold3"), ("NQA-MIB", "nqaJitterStatsRTTMax"), ("NQA-MIB", "nqaJitterStatsMaxDelaySD"), ("NQA-MIB", "nqaJitterStatsMaxDelayDS"), ("NQA-MIB", "nqaJitterStatsOWDOverThresholdsDS"))
if mibBuilder.loadTexts: nqaJitterStatsOWDThresholdNotificationDS.setStatus('current')
nqaNegotiateFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 19)).setObjects(("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaAdminParaTargetPort"), ("NQA-MIB", "nqaAdminParaVrfName"))
if mibBuilder.loadTexts: nqaNegotiateFailed.setStatus('current')
nqaRisingAlarmNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 20)).setObjects(("NQA-MIB", "nqaAlarmVariable"), ("NQA-MIB", "nqaAlarmSampleType"), ("NQA-MIB", "nqaAlarmValue"), ("NQA-MIB", "nqaAlarmRisingThreshold"), ("NQA-MIB", "nqaAlarmDescription"))
if mibBuilder.loadTexts: nqaRisingAlarmNotification.setStatus('current')
nqaFallingAlarmNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 21)).setObjects(("NQA-MIB", "nqaAlarmVariable"), ("NQA-MIB", "nqaAlarmSampleType"), ("NQA-MIB", "nqaAlarmValue"), ("NQA-MIB", "nqaAlarmFallingThreshold"), ("NQA-MIB", "nqaAlarmDescription"))
if mibBuilder.loadTexts: nqaFallingAlarmNotification.setStatus('current')
nqaFtpSaveRecordNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 22)).setObjects(("NQA-MIB", "nqaFtpSaveRecordLastFileName"))
if mibBuilder.loadTexts: nqaFtpSaveRecordNotification.setStatus('current')
nqaPppoeStatsTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 23)).setObjects(("NQA-MIB", "nqaPppoeStatsCompletions"), ("NQA-MIB", "nqaPppoeStatsCurrentPhase"), ("NQA-MIB", "nqaPppoeStatsErrorMessage"), ("NQA-MIB", "nqaPppoeDiscoveryTimeout"), ("NQA-MIB", "nqaPppoeLcpTimeout"), ("NQA-MIB", "nqaPppoeAuthorizationTimeout"), ("NQA-MIB", "nqaPppoeNcpTimeout"), ("NQA-MIB", "nqaPppoeConnectionTime"), ("NQA-MIB", "nqaPppoeClientSessionId"), ("NQA-MIB", "nqaPppoeClientIpAddress"), ("NQA-MIB", "nqaPppoeGatewayIpAddress"))
if mibBuilder.loadTexts: nqaPppoeStatsTestFailed.setStatus('current')
nqaPppoeStatsTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 6, 24)).setObjects(("NQA-MIB", "nqaPppoeStatsCompletions"), ("NQA-MIB", "nqaPppoeStatsCurrentPhase"), ("NQA-MIB", "nqaPppoeStatsErrorMessage"), ("NQA-MIB", "nqaPppoeDiscoveryTimeout"), ("NQA-MIB", "nqaPppoeLcpTimeout"), ("NQA-MIB", "nqaPppoeAuthorizationTimeout"), ("NQA-MIB", "nqaPppoeNcpTimeout"), ("NQA-MIB", "nqaPppoeConnectionTime"), ("NQA-MIB", "nqaPppoeClientSessionId"), ("NQA-MIB", "nqaPppoeClientIpAddress"), ("NQA-MIB", "nqaPppoeGatewayIpAddress"))
if mibBuilder.loadTexts: nqaPppoeStatsTestCompleted.setStatus('current')
nqaConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7))
nqaGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1))
nqaBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1, 1)).setObjects(("NQA-MIB", "nqaVersion"), ("NQA-MIB", "nqaReset"), ("NQA-MIB", "nqaTimeOfLastSetError"), ("NQA-MIB", "nqaLastSetError"), ("NQA-MIB", "nqaEnable"), ("NQA-MIB", "nqaNumOfCurrentCtrlEntry"), ("NQA-MIB", "nqaMaxConcurrentRequests"), ("NQA-MIB", "nqaMaxNumOfRequests"), ("NQA-MIB", "nqaJitterVersion"), ("NQA-MIB", "nqaSupportTestType"), ("NQA-MIB", "nqaSupportServerType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaBaseGroup = nqaBaseGroup.setStatus('current')
nqaAdminGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1, 2)).setObjects(("NQA-MIB", "nqaAdminCtrlTag"), ("NQA-MIB", "nqaAdminCtrlType"), ("NQA-MIB", "nqaAdminCtrlFrequency"), ("NQA-MIB", "nqaAdminCtrlTimeOut"), ("NQA-MIB", "nqaAdminCtrlThreshold1"), ("NQA-MIB", "nqaAdminCtrlThreshold2"), ("NQA-MIB", "nqaAdminCtrlThreshold3"), ("NQA-MIB", "nqaAdminCtrlStatus"), ("NQA-MIB", "nqaAdminParaTargetAddressType"), ("NQA-MIB", "nqaAdminParaTargetAddress"), ("NQA-MIB", "nqaAdminParaTargetPort"), ("NQA-MIB", "nqaAdminParaSourceAddressType"), ("NQA-MIB", "nqaAdminParaSourceAddress"), ("NQA-MIB", "nqaAdminParaSourcePort"), ("NQA-MIB", "nqaAdminParaMaxTtl"), ("NQA-MIB", "nqaAdminParaInitialTtl"), ("NQA-MIB", "nqaAdminParaStorageType"), ("NQA-MIB", "nqaAdminParaMaxFailures"), ("NQA-MIB", "nqaAdminParaDontFragment"), ("NQA-MIB", "nqaAdminParaDataSize"), ("NQA-MIB", "nqaAdminParaDataFill"), ("NQA-MIB", "nqaAdminParaIfIndex"), ("NQA-MIB", "nqaAdminParaByPassRouteTable"), ("NQA-MIB", "nqaAdminParaMiscOptions"), ("NQA-MIB", "nqaAdminParaProbeCount"), ("NQA-MIB", "nqaAdminParaTrapGeneration"), ("NQA-MIB", "nqaAdminParaTrapProbeFailureFilter"), ("NQA-MIB", "nqaAdminParaTrapTestFailureFilter"), ("NQA-MIB", "nqaAdminParaDSField"), ("NQA-MIB", "nqaAdminParaDnsServerAddressType"), ("NQA-MIB", "nqaAdminParaDnsServerAddress"), ("NQA-MIB", "nqaAdminParaOperation"), ("NQA-MIB", "nqaAdminParaHttpVersion"), ("NQA-MIB", "nqaAdminParaHttpOperationString"), ("NQA-MIB", "nqaAdminParaTestFailurePercent"), ("NQA-MIB", "nqaAdminParaFtpUserName"), ("NQA-MIB", "nqaAdminParaFtpPassword"), ("NQA-MIB", "nqaAdminParaFtpFilePath"), ("NQA-MIB", "nqaAdminParaFtpFileSize"), ("NQA-MIB", "nqaAdminParaInterval"), ("NQA-MIB", "nqaAdminParaNumPackets"), ("NQA-MIB", "nqaAdminParaVrfName"), ("NQA-MIB", "nqaAdminParaLspAddressType"), ("NQA-MIB", "nqaAdminParaLspAddressMask"), ("NQA-MIB", "nqaAdminParaLspIpAddress"), ("NQA-MIB", "nqaAdminParaLspPWE3VcId"), ("NQA-MIB", "nqaAdminParaLspPWE3Type"), ("NQA-MIB", "nqaAdminParaLspPWE3Option"), ("NQA-MIB", "nqaAdminParaLspPWE3RemoteVcId"), ("NQA-MIB", "nqaAdminParaLspPWE3RemoteAddress"), ("NQA-MIB", "nqaAdminParaLspExp"), ("NQA-MIB", "nqaAdminParaLspReplyMode"), ("NQA-MIB", "nqaAdminParaResultRowMax"), ("NQA-MIB", "nqaAdminParaHistoryRowMax"), ("NQA-MIB", "nqaAdminParaCreateHopsEntries"), ("NQA-MIB", "nqaAdminParaLspVCType"), ("NQA-MIB", "nqaAdminParaMTraceLastHopAddress"), ("NQA-MIB", "nqaAdminParaMTraceSourceAddress"), ("NQA-MIB", "nqaAdminParaMTraceGroupAddress"), ("NQA-MIB", "nqaAdminParaMTraceMaxTtl"), ("NQA-MIB", "nqaAdminParaMTraceSendMode"), ("NQA-MIB", "nqaAdminParaMTraceResponseTtl"), ("NQA-MIB", "nqaAdminParaMTraceResponseAddressType"), ("NQA-MIB", "nqaAdminParaMTraceResponseAddress"), ("NQA-MIB", "nqaAdminParaDistanceNodeType"), ("NQA-MIB", "nqaAdminParaMacAddress"), ("NQA-MIB", "nqaAdminParaRMepID"), ("NQA-MIB", "nqaAdminParaMDName"), ("NQA-MIB", "nqaAdminParaMAName"), ("NQA-MIB", "nqaAdminParaMacTunnelName"), ("NQA-MIB", "nqaAdminParaCodecType"), ("NQA-MIB", "nqaAdminParaIcpifAdvFactor"), ("NQA-MIB", "nqaAdminParaFtpMode"), ("NQA-MIB", "nqaScheduleStartType"), ("NQA-MIB", "nqaScheduleStartTime"), ("NQA-MIB", "nqaScheduleEndType"), ("NQA-MIB", "nqaScheduleEndTime"), ("NQA-MIB", "nqaScheduleAgeTime"), ("NQA-MIB", "nqaScheduleNumOfInitiations"), ("NQA-MIB", "nqaAdminParaIcmpJitterMode"), ("NQA-MIB", "nqaAdminParaPathMtuDiscoveryPathMtuMax"), ("NQA-MIB", "nqaAdminParaPathMtuStep"), ("NQA-MIB", "nqaScheduleOperStatus"), ("NQA-MIB", "nqaScheduleElapsedTime"), ("NQA-MIB", "nqaScheduleLastFinishIndex"), ("NQA-MIB", "nqaScheduleLastCollectIndex"), ("NQA-MIB", "nqaGroupStatusType"), ("NQA-MIB", "nqaGroupPeriod"), ("NQA-MIB", "nqaGroupLeaderOwnerIndex"), ("NQA-MIB", "nqaGroupLeaderTestName"), ("NQA-MIB", "nqaGroupMemberNum"), ("NQA-MIB", "nqaGroupMemberFree"), ("NQA-MIB", "nqaAdminParaHardwareBased"), ("NQA-MIB", "nqaAdminParaPppoeUserName"), ("NQA-MIB", "nqaAdminParaPppoePassword"), ("NQA-MIB", "nqaAdminParaPppoeVlanIf"), ("NQA-MIB", "nqaAdminParaPppoeAuthenticationMode"), ("NQA-MIB", "nqaAdminParaPppoeRedialUpTimes"), ("NQA-MIB", "nqaAdminParaPppoeInterval"), ("NQA-MIB", "nqaAdminParaVsiName"), ("NQA-MIB", "nqaAdminParaVlanId"), ("NQA-MIB", "nqaAdminParaLspTunnelType"), ("NQA-MIB", "nqaAdminParaLspNextHopAddress"), ("NQA-MIB", "nqaAdminParaLspVersion"), ("NQA-MIB", "nqaAdminParaRemoteAddressType"), ("NQA-MIB", "nqaAdminParaRemoteAddress"), ("NQA-MIB", "nqaAdminParaTimeUnit"), ("NQA-MIB", "nqaAdminExtPara1"), ("NQA-MIB", "nqaAdminExtPara2"), ("NQA-MIB", "nqaAdminExtPara3"), ("NQA-MIB", "nqaAdminExtPara4"), ("NQA-MIB", "nqaAdminExtPara5"), ("NQA-MIB", "nqaAdminExtPara6"), ("NQA-MIB", "nqaAdminExtPara7"), ("NQA-MIB", "nqaAdminExtPara8"), ("NQA-MIB", "nqaAdminExtPara9"), ("NQA-MIB", "nqaAdminExtPara10"), ("NQA-MIB", "nqaAdminExtPara11"), ("NQA-MIB", "nqaAdminExtPara12"), ("NQA-MIB", "nqaAdminExtPara13"), ("NQA-MIB", "nqaAdminExtPara14"), ("NQA-MIB", "nqaAdminExtPara15"), ("NQA-MIB", "nqaAdminExtPara16"), ("NQA-MIB", "nqaAdminExtPara17"), ("NQA-MIB", "nqaAdminExtPara18"), ("NQA-MIB", "nqaAdminExtPara19"), ("NQA-MIB", "nqaAdminExtPara20"), ("NQA-MIB", "nqaAdminExtPara21"), ("NQA-MIB", "nqaAdminExtPara22"), ("NQA-MIB", "nqaAdminExtPara23"), ("NQA-MIB", "nqaAdminExtPara24"), ("NQA-MIB", "nqaAdminExtPara25"), ("NQA-MIB", "nqaAdminExtPara26"), ("NQA-MIB", "nqaAdminExtPara27"), ("NQA-MIB", "nqaAdminExtPara28"), ("NQA-MIB", "nqaAdminExtPara29"), ("NQA-MIB", "nqaAdminExtPara30"), ("NQA-MIB", "nqaAdminExtPara31"), ("NQA-MIB", "nqaAdminExtPara32"), ("NQA-MIB", "nqaAdminExtPara33"), ("NQA-MIB", "nqaAdminExtPara34"), ("NQA-MIB", "nqaAdminExtPara35"), ("NQA-MIB", "nqaAdminExtPara36"), ("NQA-MIB", "nqaAdminExtPara37"), ("NQA-MIB", "nqaAdminExtPara38"), ("NQA-MIB", "nqaAdminExtPara39"), ("NQA-MIB", "nqaAdminExtPara40"), ("NQA-MIB", "nqaAdminExtPara41"), ("NQA-MIB", "nqaAdminExtPara42"), ("NQA-MIB", "nqaAdminExtPara43"), ("NQA-MIB", "nqaAdminExtPara44"), ("NQA-MIB", "nqaAdminExtPara45"), ("NQA-MIB", "nqaAdminExtPara46"), ("NQA-MIB", "nqaAdminExtPara47"), ("NQA-MIB", "nqaAdminExtPara48"), ("NQA-MIB", "nqaAdminExtPara49"), ("NQA-MIB", "nqaAdminExtPara50"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaAdminGroup = nqaAdminGroup.setStatus('current')
nqaServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1, 3)).setObjects(("NQA-MIB", "nqaTcpServerAddressType"), ("NQA-MIB", "nqaTcpServerStatus"), ("NQA-MIB", "nqaUdpServerAddressType"), ("NQA-MIB", "nqaUdpServerStatus"), ("NQA-MIB", "nqaIcmpServerAddressType"), ("NQA-MIB", "nqaIcmpServerStatus"), ("NQA-MIB", "nqaServerEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaServerGroup = nqaServerGroup.setStatus('current')
nqaStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1, 4))
for _nqaStatsGroup_obj in [[("NQA-MIB", "nqaResultsCompletions"), ("NQA-MIB", "nqaResultsTestAttempts"), ("NQA-MIB", "nqaResultsCurHopCount"), ("NQA-MIB", "nqaResultsCurProbeCount"), ("NQA-MIB", "nqaResultsRTDOverThresholds"), ("NQA-MIB", "nqaResultsCompletionTimeMin"), ("NQA-MIB", "nqaResultsCompletionTimeMax"), ("NQA-MIB", "nqaResultsDisconnects"), ("NQA-MIB", "nqaResultsTimeouts"), ("NQA-MIB", "nqaResultsBusies"), ("NQA-MIB", "nqaResultsNoConnections"), ("NQA-MIB", "nqaResultsSequenceErrors"), ("NQA-MIB", "nqaResultsDrops"), ("NQA-MIB", "nqaResultsAddressType"), ("NQA-MIB", "nqaResultsAddress"), ("NQA-MIB", "nqaResultsProbeResponses"), ("NQA-MIB", "nqaResultsSentProbes"), ("NQA-MIB", "nqaResultsLastGoodProbe"), ("NQA-MIB", "nqaResultsLastGoodPath"), ("NQA-MIB", "nqaResultsTestFinished"), ("NQA-MIB", "nqaHTTPStatsCompletions"), ("NQA-MIB", "nqaHTTPStatsRTDOverThresholds"), ("NQA-MIB", "nqaHTTPStatsRTTSum"), ("NQA-MIB", "nqaHTTPStatsRTTMin"), ("NQA-MIB", "nqaHTTPStatsRTTMax"), ("NQA-MIB", "nqaHTTPStatsDNSRTTSum"), ("NQA-MIB", "nqaHTTPStatsDNSRTTMin"), ("NQA-MIB", "nqaHTTPStatsDNSRTTMax"), ("NQA-MIB", "nqaHTTPStatsTCPConnectRTTSum"), ("NQA-MIB", "nqaHTTPStatsTCPConnectRTTMin"), ("NQA-MIB", "nqaHTTPStatsTCPConnectRTTMax"), ("NQA-MIB", "nqaHTTPStatsTransactionRTTSum"), ("NQA-MIB", "nqaHTTPStatsTransactionRTTMin"), ("NQA-MIB", "nqaHTTPStatsTransactionRTTMax"), ("NQA-MIB", "nqaHTTPStatsMessageBodyOctetsSum"), ("NQA-MIB", "nqaHTTPStatsDNSServerTimeouts"), ("NQA-MIB", "nqaHTTPStatsTCPConnectTimeouts"), ("NQA-MIB", "nqaHTTPStatsTransactionTimeouts"), ("NQA-MIB", "nqaHTTPStatsDNSQueryErrors"), ("NQA-MIB", "nqaHTTPStatsErrors"), ("NQA-MIB", "nqaHTTPStatsTcpConnErrors"), ("NQA-MIB", "nqaHTTPStatsProbeResponses"), ("NQA-MIB", "nqaHTTPStatsSendProbes"), ("NQA-MIB", "nqaHTTPStatsBusies"), ("NQA-MIB", "nqaHTTPStatsTestFinished"), ("NQA-MIB", "nqaJitterStatsCompletions"), ("NQA-MIB", "nqaJitterStatsRTDOverThresholds"), ("NQA-MIB", "nqaJitterStatsNumOfRTT"), ("NQA-MIB", "nqaJitterStatsRTTSum"), ("NQA-MIB", "nqaJitterStatsRTTSum2Low"), ("NQA-MIB", "nqaJitterStatsRTTSum2High"), ("NQA-MIB", "nqaJitterStatsRTTMin"), ("NQA-MIB", "nqaJitterStatsRTTMax"), ("NQA-MIB", "nqaJitterStatsMinOfPositivesSD"), ("NQA-MIB", "nqaJitterStatsMaxOfPositivesSD"), ("NQA-MIB", "nqaJitterStatsNumOfPositivesSD"), ("NQA-MIB", "nqaJitterStatsSumOfPositivesSD"), ("NQA-MIB", "nqaJitterStatsSum2OfPositivesSDLow"), ("NQA-MIB", "nqaJitterStatsSum2OfPositivesSDHigh"), ("NQA-MIB", "nqaJitterStatsMinOfNegativesSD"), ("NQA-MIB", "nqaJitterStatsMaxOfNegativesSD"), ("NQA-MIB", "nqaJitterStatsNumOfNegativesSD"), ("NQA-MIB", "nqaJitterStatsSumOfNegativesSD"), ("NQA-MIB", "nqaJitterStatsSum2OfNegativesSDLow"), ("NQA-MIB", "nqaJitterStatsSum2OfNegativesSDHigh"), ("NQA-MIB", "nqaJitterStatsMinOfPositivesDS"), ("NQA-MIB", "nqaJitterStatsMaxOfPositivesDS"), ("NQA-MIB", "nqaJitterStatsNumOfPositivesDS"), ("NQA-MIB", "nqaJitterStatsSumOfPositivesDS"), ("NQA-MIB", "nqaJitterStatsSum2OfPositivesDSLow"), ("NQA-MIB", "nqaJitterStatsSum2OfPositivesDSHigh"), ("NQA-MIB", "nqaJitterStatsMinOfNegativesDS"), ("NQA-MIB", "nqaJitterStatsMaxOfNegativesDS"), ("NQA-MIB", "nqaJitterStatsNumOfNegativesDS"), ("NQA-MIB", "nqaJitterStatsSumOfNegativesDS"), ("NQA-MIB", "nqaJitterStatsSum2OfNegativesDSLow"), ("NQA-MIB", "nqaJitterStatsSum2OfNegativesDSHigh"), ("NQA-MIB", "nqaJitterStatsPacketLossSD"), ("NQA-MIB", "nqaJitterStatsPacketLossDS"), ("NQA-MIB", "nqaJitterStatsPacketOutOfSequences"), ("NQA-MIB", "nqaJitterStatsErrors"), ("NQA-MIB", "nqaJitterStatsBusies"), ("NQA-MIB", "nqaJitterStatsTimeouts"), ("NQA-MIB", "nqaJitterStatsProbeResponses"), ("NQA-MIB", "nqaJitterStatsSentProbes"), ("NQA-MIB", "nqaJitterStatsDrops"), ("NQA-MIB", "nqaJitterStatsTestFinished"), ("NQA-MIB", "nqaJitterStatsMaxDelaySD"), ("NQA-MIB", "nqaJitterStatsMaxDelayDS"), ("NQA-MIB", "nqaJitterStatsRTTAvg"), ("NQA-MIB", "nqaJitterStatsPacketLossRatio"), ("NQA-MIB", "nqaJitterStatsAvgJitter"), ("NQA-MIB", "nqaJitterStatsAvgJitterSD"), ("NQA-MIB", "nqaJitterStatsAvgJitterDS"), ("NQA-MIB", "nqaJitterStatsJitterOut"), ("NQA-MIB", "nqaJitterStatsJitterIn"), ("NQA-MIB", "nqaJitterStatsOWDOverThresholdsSD"), ("NQA-MIB", "nqaJitterStatsOWDOverThresholdsDS"), ("NQA-MIB", "nqaJitterStatsPktLossUnknown"), ("NQA-MIB", "nqaJitterStatsNumOfOWD"), ("NQA-MIB", "nqaJitterStatsOWSumSD"), ("NQA-MIB", "nqaPathJitterStatsCompletions"), ("NQA-MIB", "nqaPathJitterStatsAddressType"), ("NQA-MIB", "nqaPathJitterStatsAddress"), ("NQA-MIB", "nqaPathJitterStatsRtdOverThresholds"), ("NQA-MIB", "nqaPathJitterStatsNumOfRtt"), ("NQA-MIB", "nqaPathJitterStatsRttSum"), ("NQA-MIB", "nqaJitterStatsOperOfIcpif"), ("NQA-MIB", "nqaJitterStatsOperOfMos"), ("NQA-MIB", "nqaJitterStatsMinDelaySD"), ("NQA-MIB", "nqaJitterStatsSum2DelaySDLow"), ("NQA-MIB", "nqaJitterStatsSum2DelaySDHigh"), ("NQA-MIB", "nqaJitterStatsMinDelayDS"), ("NQA-MIB", "nqaJitterStatsSum2DelayDSLow"), ("NQA-MIB", "nqaJitterStatsSum2DelayDSHigh"), ("NQA-MIB", "nqaJitterStatsTimeUnit"), ("NQA-MIB", "nqaJitterStatsAvgDelaySD"), ("NQA-MIB", "nqaJitterStatsAvgDelayDS"), ("NQA-MIB", "nqaJitterStatsPktRewriteNum"), ("NQA-MIB", "nqaJitterStatsPktRewriteRatio"), ("NQA-MIB", "nqaJitterStatsPktDisorderNum"), ("NQA-MIB", "nqaJitterStatsPktDisorderRatio"), ("NQA-MIB", "nqaJitterStatsFragPktDisorderNum"), ("NQA-MIB", "nqaJitterStatsFragPktDisorderRatio"), ("NQA-MIB", "nqaPathJitterStatsRttSum2Low"), ("NQA-MIB", "nqaPathJitterStatsRttSum2High"), ("NQA-MIB", "nqaPathJitterStatsRttMin"), ("NQA-MIB", "nqaPathJitterStatsRttMax"), ("NQA-MIB", "nqaPathJitterStatsMinOfPositivesSD"), ("NQA-MIB", "nqaPathJitterStatsMaxOfPositivesSD"), ("NQA-MIB", "nqaPathJitterStatsNumOfPositivesSD"), ("NQA-MIB", "nqaPathJitterStatsSumOfPositivesSD"), ("NQA-MIB", "nqaPathJitterStatsSum2OfPositivesSDLow"), ("NQA-MIB", "nqaPathJitterStatsSum2OfPositivesSDHigh"), ("NQA-MIB", "nqaPathJitterStatsMinOfNegativesSD"), ("NQA-MIB", "nqaPathJitterStatsMaxOfNegativesSD"), ("NQA-MIB", "nqaPathJitterStatsNumOfNegativesSD"), ("NQA-MIB", "nqaPathJitterStatsSumOfNegativesSD"), ("NQA-MIB", "nqaPathJitterStatsSum2OfNegativesSDLow"), ("NQA-MIB", "nqaPathJitterStatsSum2OfNegativesSDHigh"), ("NQA-MIB", "nqaPathJitterStatsMinOfPositivesDS"), ("NQA-MIB", "nqaPathJitterStatsMaxOfPositivesDS"), ("NQA-MIB", "nqaPathJitterStatsNumOfPositivesDS"), ("NQA-MIB", "nqaPathJitterStatsSumOfPositivesDS"), ("NQA-MIB", "nqaPathJitterStatsSum2OfPositivesDSLow"), ("NQA-MIB", "nqaPathJitterStatsSum2OfPositivesDSHigh"), ("NQA-MIB", "nqaPathJitterStatsMinOfNegativesDS"), ("NQA-MIB", "nqaPathJitterStatsMaxOfNegativesDS"), ("NQA-MIB", "nqaPathJitterStatsNumOfNegativesDS"), ("NQA-MIB", "nqaPathJitterStatsSumOfNegativesDS"), ("NQA-MIB", "nqaPathJitterStatsSum2OfNegativesDSLow"), ("NQA-MIB", "nqaPathJitterStatsSum2OfNegativesDSHigh"), ("NQA-MIB", "nqaPathJitterStatsPacketLossSD"), ("NQA-MIB", "nqaPathJitterStatsPacketLossDS"), ("NQA-MIB", "nqaPathJitterStatsPacketOutOfSequences"), ("NQA-MIB", "nqaPathJitterStatsErrors"), ("NQA-MIB", "nqaPathJitterStatsBusies"), ("NQA-MIB", "nqaPathJitterStatsTimeouts"), ("NQA-MIB", "nqaPathJitterStatsProbeResponses"), ("NQA-MIB", "nqaPathJitterStatsSentProbes"), ("NQA-MIB", "nqaPathJitterStatsDrops"), ("NQA-MIB", "nqaPathJitterStatsTestFinished"), ("NQA-MIB", "nqaPathJitterStatsMaxDelaySD"), ("NQA-MIB", "nqaPathJitterStatsMaxDelayDS"), ("NQA-MIB", "nqaPathJitterStatsRttAvg"), ("NQA-MIB", "nqaPathJitterStatsPacketLossRatio"), ("NQA-MIB", "nqaPathJitterStatsAvgJitter"), ("NQA-MIB", "nqaPathJitterStatsAvgJitterSD"), ("NQA-MIB", "nqaPathJitterStatsAvgJitterDS"), ("NQA-MIB", "nqaPathJitterStatsJitterOut"), ("NQA-MIB", "nqaPathJitterStatsJitterIn"), ("NQA-MIB", "nqaPathJitterStatsOwdOverThresholdsSD"), ("NQA-MIB", "nqaPathJitterStatsPktLossUnknown"), ("NQA-MIB", "nqaPathJitterStatsNumOfOwd"), ("NQA-MIB", "nqaPathJitterStatsOwdSumSD"), ("NQA-MIB", "nqaPathJitterStatsOwdSumDS"), ("NQA-MIB", "nqaPathJitterStatsOwdOverThresholdsDS"), ("NQA-MIB", "nqaPathMtuStatsAddressType"), ("NQA-MIB", "nqaPathMtuStatsAddress"), ("NQA-MIB", "nqaPathMtuStatsCompletions"), ("NQA-MIB", "nqaPathMtuStatsSentProbes"), ("NQA-MIB", "nqaPathMtuStatsDiscoveryPathMtuMin"), ("NQA-MIB", "nqaPathMtuStatsDiscoveryPathMtuMax"), ("NQA-MIB", "nqaPathMtuStatsOptimumFirstStep"), ("NQA-MIB", "nqaPathMtuStatsBusies"), ("NQA-MIB", "nqaPathMtuStatsTimeouts"), ("NQA-MIB", "nqaPathMtuStatsDrops"), ("NQA-MIB", "nqaPathMtuStatsProbeResponses"), ("NQA-MIB", "nqaPathMtuStatsPathMtu"), ("NQA-MIB", "nqaPathMtuStatsTestFinished"), ("NQA-MIB", "nqaJitterStatsOWSumDS"), ("NQA-MIB", "nqaResultsSumCompletionTime"), ("NQA-MIB", "nqaResultsSumCompletionTime2Low"), ("NQA-MIB", "nqaResultsSumCompletionTime2High"), ("NQA-MIB", "nqaFTPStatsCompletions"), ("NQA-MIB", "nqaFTPStatsRTDOverThresholds"), ("NQA-MIB", "nqaFTPStatsCtrlConnMaxTime"), ("NQA-MIB", "nqaFTPStatsCtrlConnMinTime"), ("NQA-MIB", "nqaFTPStatsCtrlConnAveTime"), ("NQA-MIB", "nqaFTPStatsDataConnMaxTime"), ("NQA-MIB", "nqaFTPStatsDataConnMinTime"), ("NQA-MIB", "nqaFTPStatsDataConnAveTime"), ("NQA-MIB", "nqaFTPStatsConnectSumTimeMax"), ("NQA-MIB", "nqaFTPStatsConnectSumTimeMin"), ("NQA-MIB", "nqaFTPStatsConnectSumTimeAve"), ("NQA-MIB", "nqaFTPStatsMessageBodyOctetsSum"), ("NQA-MIB", "nqaFTPStatsErrors"), ("NQA-MIB", "nqaFTPStatsTimeouts"), ("NQA-MIB", "nqaFTPStatsDiscontinued"), ("NQA-MIB", "nqaFTPStatsProbeResponses"), ("NQA-MIB", "nqaFTPStatsSendProbes"), ("NQA-MIB", "nqaFTPStatsTestFinished"), ("NQA-MIB", "nqaMpingStatsTargetAddressType"), ("NQA-MIB", "nqaMpingStatsTargetAddress"), ("NQA-MIB", "nqaMpingStatsReceiverAddress"), ("NQA-MIB", "nqaMpingStatsCompletions"), ("NQA-MIB", "nqaMpingStatsRTDOverThresholds"), ("NQA-MIB", "nqaMpingStatsSumCompletionTime"), ("NQA-MIB", "nqaMpingStatsSumCompletionTime2Low"), ("NQA-MIB", "nqaMpingStatsSumCompletionTime2High"), ("NQA-MIB", "nqaMpingStatsCompletionTimeMin"), ("NQA-MIB", "nqaMpingStatsCompletionTimeMax"), ("NQA-MIB", "nqaMpingStatsTimeouts"), ("NQA-MIB", "nqaMpingStatsBusies"), ("NQA-MIB", "nqaMpingStatsSequenceErrors"), ("NQA-MIB", "nqaMpingStatsDrops"), ("NQA-MIB", "nqaMpingStatsProbeResponses"), ("NQA-MIB", "nqaMpingStatsSentProbes"), ("NQA-MIB", "nqaMpingStatsLastGoodProbe"), ("NQA-MIB", "nqaMpingStatsTestFinished"), ("NQA-MIB", "nqaMpingStatsReceiverCount"), ("NQA-MIB", "nqaMpingStatsLastFibHit"), ("NQA-MIB", "nqaMpingStatsRttAvg"), ("NQA-MIB", "nqaMpingStatsLostPacketRatio"), ("NQA-MIB", "nqaMtracertStatsAddressType"), ("NQA-MIB", "nqaMtracertStatsAddress"), ("NQA-MIB", "nqaMtracertStatsCompletions"), ("NQA-MIB", "nqaMtracertStatsCurHopCount"), ("NQA-MIB", "nqaMtracertStatsCurProbeCount"), ("NQA-MIB", "nqaMtracertStatsRTDOverThresholds"), ("NQA-MIB", "nqaMtracertStatsTimeouts"), ("NQA-MIB", "nqaMtracertStatsBusies"), ("NQA-MIB", "nqaMtracertStatsSequenceErrors"), ("NQA-MIB", "nqaMtracertStatsDrops"), ("NQA-MIB", "nqaMtracertStatsProbeResponses"), ("NQA-MIB", "nqaMtracertStatsSentProbes"), ("NQA-MIB", "nqaMtracertStatsLastGoodProbe"), ("NQA-MIB", "nqaMtracertStatsLastGoodPath"), ("NQA-MIB", "nqaMtracertStatsTestFinished"), ("NQA-MIB", "nqaMtracertStatsCurPathTTL"), ("NQA-MIB", "nqaMtracertStatsMaxPathTTL"), ("NQA-MIB", "nqaMtracertStatsInPkgLossRate"), ("NQA-MIB", "nqaMtracertStatsSGPkgLossRate"), ("NQA-MIB", "nqaMtracertStatsInPkgRate"), ("NQA-MIB", "nqaMtracertStatsOutPkgRate")], [("NQA-MIB", "nqaMtracertStatsTimeDelay"), ("NQA-MIB", "nqaResultsRttAvg"), ("NQA-MIB", "nqaResultsLostPacketRatio"), ("NQA-MIB", "nqaHTTPStatsRttAvg"), ("NQA-MIB", "nqaHTTPStatsLostPacketRatio"), ("NQA-MIB", "nqaFTPStatsRttAvg"), ("NQA-MIB", "nqaFTPStatsLostPacketRatio"), ("NQA-MIB", "nqaPppoeStatsCompletions"), ("NQA-MIB", "nqaPppoeStatsCurrentPhase"), ("NQA-MIB", "nqaPppoeStatsErrorMessage"), ("NQA-MIB", "nqaPppoeDiscoveryTimeout"), ("NQA-MIB", "nqaPppoeLcpTimeout"), ("NQA-MIB", "nqaPppoeAuthorizationTimeout"), ("NQA-MIB", "nqaPppoeNcpTimeout"), ("NQA-MIB", "nqaPppoeConnectionTime"), ("NQA-MIB", "nqaPppoeClientSessionId"), ("NQA-MIB", "nqaPppoeClientIpAddress"), ("NQA-MIB", "nqaPppoeGatewayIpAddress")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        nqaStatsGroup = nqaStatsGroup.setObjects(*_nqaStatsGroup_obj)
    else:
        nqaStatsGroup = nqaStatsGroup.setObjects(*_nqaStatsGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaStatsGroup = nqaStatsGroup.setStatus('current')
nqaHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1, 5)).setObjects(("NQA-MIB", "nqaHistoryTimeStamp"), ("NQA-MIB", "nqaHistoryAddressType"), ("NQA-MIB", "nqaHistoryAddress"), ("NQA-MIB", "nqaHistoryCompletionTime"), ("NQA-MIB", "nqaHistoryFinishState"), ("NQA-MIB", "nqaHistoryLastRC"), ("NQA-MIB", "nqaMpingHistoryAddressType"), ("NQA-MIB", "nqaMpingHistoryAddress"), ("NQA-MIB", "nqaMpingHistoryReceiverAddress"), ("NQA-MIB", "nqaMpingHistoryTimeStamp"), ("NQA-MIB", "nqaMpingHistoryCompletionTime"), ("NQA-MIB", "nqaMpingHistoryFinishState"), ("NQA-MIB", "nqaMpingHistoryLastRC"), ("NQA-MIB", "nqaMpingHistoryFibHit"), ("NQA-MIB", "nqaMtracertHistoryAddressType"), ("NQA-MIB", "nqaMtracertHistoryAddress"), ("NQA-MIB", "nqaMtracertHistoryTimeStamp"), ("NQA-MIB", "nqaMtracertHistoryCompletionTime"), ("NQA-MIB", "nqaMtracertHistoryLastRC"), ("NQA-MIB", "nqaMtracertHistoryCurQueryMode"), ("NQA-MIB", "nqaMtracertHistoryQueryArrivalTime"), ("NQA-MIB", "nqaMtracertHistoryIncomingIfAddress"), ("NQA-MIB", "nqaMtracertHistoryOutgoingIfAddress"), ("NQA-MIB", "nqaMtracertHistoryPreHopRouterAddress"), ("NQA-MIB", "nqaMtracertHistoryInputPacketCount"), ("NQA-MIB", "nqaMtracertHistoryOutputPacketCount"), ("NQA-MIB", "nqaMtracertHistoryTotalSGPacketCount"), ("NQA-MIB", "nqaMtracertHistoryRtgProtocol"), ("NQA-MIB", "nqaMtracertHistoryFwdTTL"), ("NQA-MIB", "nqaMtracertHistoryFwdCode"), ("NQA-MIB", "nqaMtracertHistroyFinishState"), ("NQA-MIB", "nqaVplsMacTracertHistoryTimeStamp"), ("NQA-MIB", "nqaVplsMacTracertHistoryAddressType"), ("NQA-MIB", "nqaVplsMacTracertHistoryAddress"), ("NQA-MIB", "nqaVplsMacTracertHistoryCompletionTime"), ("NQA-MIB", "nqaVplsMacTracertHistoryFinishState"), ("NQA-MIB", "nqaVplsMacTracertHistoryHitFlag"), ("NQA-MIB", "nqaVplsMacTracertHistoryDSCount"), ("NQA-MIB", "nqaVplsMacTracertHistorySuccessPathNode"), ("NQA-MIB", "nqaVplsMacTracertHistoryDSAddress"), ("NQA-MIB", "nqaVplsMTraceHistoryResponserAddressType"), ("NQA-MIB", "nqaVplsMTraceHistoryResponserAddress"), ("NQA-MIB", "nqaVplsMTraceHistoryUpStreamAddressType"), ("NQA-MIB", "nqaVplsMTraceHistoryUpStreamAddress"), ("NQA-MIB", "nqaVplsMTraceHistoryReceivedTtl"), ("NQA-MIB", "nqaVplsMTraceHistoryIGMPVersion"), ("NQA-MIB", "nqaVplsMTraceHistoryIGMPSnpgEnable"), ("NQA-MIB", "nqaVplsMTraceHistoryIGMPProxyEnable"), ("NQA-MIB", "nqaVplsMTraceHistoryIGMPRouterPortLearningEnable"), ("NQA-MIB", "nqaVplsMTraceHistoryRequireRouterAlertEnable"), ("NQA-MIB", "nqaVplsMTraceHistoryForwardMode"), ("NQA-MIB", "nqaVplsMTraceHistoryHitFlag"), ("NQA-MIB", "nqaVplsMTraceHistoryPWExist"), ("NQA-MIB", "nqaVplsMTraceHistoryGroupPolicy"), ("NQA-MIB", "nqaVplsMTraceHistoryRcvQueryCount"), ("NQA-MIB", "nqaVplsMTraceHistoryRcvReportCount"), ("NQA-MIB", "nqaVplsMTraceHistoryRcvLeaveCount"), ("NQA-MIB", "nqaVplsMTraceHistoryTimeStamp"), ("NQA-MIB", "nqaVplsMTraceHistoryCompletionTime"), ("NQA-MIB", "nqaVplsMTraceHistoryLastRC"), ("NQA-MIB", "nqaVplsMTraceHistoryLastRSC"), ("NQA-MIB", "nqaVplsMTraceHistoryFinishState"), ("NQA-MIB", "nqaVplsMTraceHistorySuccessPathNode"), ("NQA-MIB", "nqaMacTraceHistoryTTL"), ("NQA-MIB", "nqaMacTraceHistorySeqNumber"), ("NQA-MIB", "nqaMacTraceHistoryForwarded"), ("NQA-MIB", "nqaMacTraceHistoryCompletionTime"), ("NQA-MIB", "nqaMacTraceHistoryTerminalMep"), ("NQA-MIB", "nqaMacTraceHistoryRelayAction"), ("NQA-MIB", "nqaMacTraceHistoryIngressAction"), ("NQA-MIB", "nqaMacTraceHistoryIngressMac"), ("NQA-MIB", "nqaMacTraceHistoryIngressIfName"), ("NQA-MIB", "nqaMacTraceHistoryEgressAction"), ("NQA-MIB", "nqaMacTraceHistoryEgressMac"), ("NQA-MIB", "nqaMacTraceHistoryEgressIfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaHistoryGroup = nqaHistoryGroup.setStatus('current')
nqaNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1, 6)).setObjects(("NQA-MIB", "nqaResultsProbeFailed"), ("NQA-MIB", "nqaResultsTestFailed"), ("NQA-MIB", "nqaResultsTestCompleted"), ("NQA-MIB", "nqaResultsThresholdNotification"), ("NQA-MIB", "nqaHTTPStatsProbeFailed"), ("NQA-MIB", "nqaHTTPStatsTestFailed"), ("NQA-MIB", "nqaHTTPStatsTestCompleted"), ("NQA-MIB", "nqaHTTPStatsThresholdNotification"), ("NQA-MIB", "nqaJitterStatsProbeFailed"), ("NQA-MIB", "nqaJitterStatsTestFailed"), ("NQA-MIB", "nqaJitterStatsTestCompleted"), ("NQA-MIB", "nqaFTPStatsProbeFailed"), ("NQA-MIB", "nqaFTPStatsTestFailed"), ("NQA-MIB", "nqaFTPStatsTestCompleted"), ("NQA-MIB", "nqaFTPStatsThresholdNotification"), ("NQA-MIB", "nqaJitterStatsRTDThresholdNotification"), ("NQA-MIB", "nqaJitterStatsOWDThresholdNotificationSD"), ("NQA-MIB", "nqaJitterStatsOWDThresholdNotificationDS"), ("NQA-MIB", "nqaNegotiateFailed"), ("NQA-MIB", "nqaRisingAlarmNotification"), ("NQA-MIB", "nqaFallingAlarmNotification"), ("NQA-MIB", "nqaFtpSaveRecordNotification"), ("NQA-MIB", "nqaPppoeStatsTestFailed"), ("NQA-MIB", "nqaPppoeStatsTestCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaNotificationsGroup = nqaNotificationsGroup.setStatus('current')
nqaCollectStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1, 7)).setObjects(("NQA-MIB", "nqaJitterCollectStatsCompletions"), ("NQA-MIB", "nqaJitterCollectStatsRTDOverThresholds"), ("NQA-MIB", "nqaJitterCollectStatsOWDOverThresholdsSD"), ("NQA-MIB", "nqaJitterCollectStatsOWDOverThresholdsDS"), ("NQA-MIB", "nqaJitterCollectStatsNumOfRTT"), ("NQA-MIB", "nqaJitterCollectStatsRTTSum"), ("NQA-MIB", "nqaJitterCollectStatsRTTSum2Low"), ("NQA-MIB", "nqaJitterCollectStatsRTTSum2High"), ("NQA-MIB", "nqaJitterCollectStatsRTTMin"), ("NQA-MIB", "nqaJitterCollectStatsRTTMax"), ("NQA-MIB", "nqaJitterCollectStatsMinOfPositivesSD"), ("NQA-MIB", "nqaJitterCollectStatsMaxOfPositivesSD"), ("NQA-MIB", "nqaJitterCollectStatsNumOfPositivesSD"), ("NQA-MIB", "nqaJitterCollectStatsSumOfPositivesSD"), ("NQA-MIB", "nqaJitterCollectStatsSum2OfPositivesSDLow"), ("NQA-MIB", "nqaJitterCollectStatsSum2OfPositivesSDHigh"), ("NQA-MIB", "nqaJitterCollectStatsMinOfNegativesSD"), ("NQA-MIB", "nqaJitterCollectStatsMaxOfNegativesSD"), ("NQA-MIB", "nqaJitterCollectStatsNumOfNegativesSD"), ("NQA-MIB", "nqaJitterCollectStatsSumOfNegativesSD"), ("NQA-MIB", "nqaJitterCollectStatsSum2OfNegativesSDLow"), ("NQA-MIB", "nqaJitterCollectStatsSum2OfNegativesSDHigh"), ("NQA-MIB", "nqaJitterCollectStatsMinOfPositivesDS"), ("NQA-MIB", "nqaJitterCollectStatsMaxOfPositivesDS"), ("NQA-MIB", "nqaJitterCollectStatsNumOfPositivesDS"), ("NQA-MIB", "nqaJitterCollectStatsSumOfPositivesDS"), ("NQA-MIB", "nqaJitterCollectStatsSum2OfPositivesDSLow"), ("NQA-MIB", "nqaJitterCollectStatsSum2OfPositivesDSHigh"), ("NQA-MIB", "nqaJitterCollectStatsMinOfNegativesDS"), ("NQA-MIB", "nqaJitterCollectStatsMaxOfNegativesDS"), ("NQA-MIB", "nqaJitterCollectStatsNumOfNegativesDS"), ("NQA-MIB", "nqaJitterCollectStatsSumOfNegativesDS"), ("NQA-MIB", "nqaJitterCollectStatsSum2OfNegativesDSLow"), ("NQA-MIB", "nqaJitterCollectStatsSum2OfNegativesDSHigh"), ("NQA-MIB", "nqaJitterCollectStatsMaxDelaySD"), ("NQA-MIB", "nqaJitterCollectStatsMaxDelayDS"), ("NQA-MIB", "nqaJitterCollectStatsNumOfOWD"), ("NQA-MIB", "nqaJitterCollectStatsOWSumSD"), ("NQA-MIB", "nqaJitterCollectStatsOWSumDS"), ("NQA-MIB", "nqaJitterCollectStatsPacketLossSD"), ("NQA-MIB", "nqaJitterCollectStatsPacketLossDS"), ("NQA-MIB", "nqaJitterCollectStatsPacketLossUnknown"), ("NQA-MIB", "nqaJitterCollectStatsPacketOutOfSequences"), ("NQA-MIB", "nqaJitterCollectStatsPacketLossRatio"), ("NQA-MIB", "nqaJitterCollectStatsErrors"), ("NQA-MIB", "nqaJitterCollectStatsBusies"), ("NQA-MIB", "nqaJitterCollectStatsTimeouts"), ("NQA-MIB", "nqaJitterCollectStatsProbeResponses"), ("NQA-MIB", "nqaJitterCollectStatsSentProbes"), ("NQA-MIB", "nqaJitterCollectStatsDrops"), ("NQA-MIB", "nqaJitterCollectStatsRTTAvg"), ("NQA-MIB", "nqaJitterCollectStatsAvgJitter"), ("NQA-MIB", "nqaJitterCollectStatsAvgJitterSD"), ("NQA-MIB", "nqaJitterCollectStatsAvgJitterDS"), ("NQA-MIB", "nqaJitterCollectStatsJitterOut"), ("NQA-MIB", "nqaJitterCollectStatsJitterIn"), ("NQA-MIB", "nqaJitterCollectStatsMinDelaySD"), ("NQA-MIB", "nqaJitterCollectStatsMinDelayDS"), ("NQA-MIB", "nqaJitterCollectStatsAvgDelaySD"), ("NQA-MIB", "nqaJitterCollectStatsAvgDelayDS"), ("NQA-MIB", "nqaJitterCollectStatsPktRewriteNum"), ("NQA-MIB", "nqaJitterCollectStatsPktRewriteRatio"), ("NQA-MIB", "nqaJitterCollectStatsPktDisorderNum"), ("NQA-MIB", "nqaJitterCollectStatsPktDisorderRatio"), ("NQA-MIB", "nqaJitterCollectStatsFragPktDisorderNum"), ("NQA-MIB", "nqaJitterCollectStatsFragPktDisorderRatio"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaCollectStatsGroup = nqaCollectStatsGroup.setStatus('current')
nqaAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1, 8)).setObjects(("NQA-MIB", "nqaMaxAlarmNum"), ("NQA-MIB", "nqaMaxEventNum"), ("NQA-MIB", "nqaAlarmVariable"), ("NQA-MIB", "nqaAlarmSampleType"), ("NQA-MIB", "nqaAlarmValue"), ("NQA-MIB", "nqaAlarmStartUpNqaAlarm"), ("NQA-MIB", "nqaAlarmRisingThreshold"), ("NQA-MIB", "nqaAlarmDescription"), ("NQA-MIB", "nqaAlarmFallingThreshold"), ("NQA-MIB", "nqaAlarmRisingEventIndex"), ("NQA-MIB", "nqaAlarmFallingEventIndex"), ("NQA-MIB", "nqaAlarmStatus"), ("NQA-MIB", "nqaEventDescription"), ("NQA-MIB", "nqaEventAdminName"), ("NQA-MIB", "nqaEventOperationTag"), ("NQA-MIB", "nqaEventType"), ("NQA-MIB", "nqaEventStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaAlarmGroup = nqaAlarmGroup.setStatus('current')
nqaFtpSaveRecordGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 1, 9)).setObjects(("NQA-MIB", "nqaFtpSaveRecordEnable"), ("NQA-MIB", "nqaFtpSaveRecordIpAddr"), ("NQA-MIB", "nqaFtpSaveRecordVrfName"), ("NQA-MIB", "nqaFtpSaveRecordUserName"), ("NQA-MIB", "nqaFtpSaveRecordPassword"), ("NQA-MIB", "nqaFtpSaveRecordFileName"), ("NQA-MIB", "nqaFtpSaveRecordItemNum"), ("NQA-MIB", "nqaFtpSaveRecordTime"), ("NQA-MIB", "nqaFtpSaveRecordNotificationEnable"), ("NQA-MIB", "nqaFtpSaveRecordLastFileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaFtpSaveRecordGroup = nqaFtpSaveRecordGroup.setStatus('current')
nqaCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 2))
nqaCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 7, 2, 1)).setObjects(("NQA-MIB", "nqaBaseGroup"), ("NQA-MIB", "nqaAdminGroup"), ("NQA-MIB", "nqaStatsGroup"), ("NQA-MIB", "nqaAlarmGroup"), ("NQA-MIB", "nqaFtpSaveRecordGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nqaCompliance = nqaCompliance.setStatus('current')
nqaCollectStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8))
nqaJitterCollectStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1), )
if mibBuilder.loadTexts: nqaJitterCollectStatsTable.setStatus('current')
nqaJitterCollectStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaJitterCollectStatsIndex"))
if mibBuilder.loadTexts: nqaJitterCollectStatsEntry.setStatus('current')
nqaJitterCollectStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nqaJitterCollectStatsIndex.setStatus('current')
nqaJitterCollectStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsCompletions.setStatus('current')
nqaJitterCollectStatsRTDOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsRTDOverThresholds.setStatus('current')
nqaJitterCollectStatsOWDOverThresholdsSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsOWDOverThresholdsSD.setStatus('current')
nqaJitterCollectStatsOWDOverThresholdsDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsOWDOverThresholdsDS.setStatus('current')
nqaJitterCollectStatsNumOfRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsNumOfRTT.setStatus('current')
nqaJitterCollectStatsRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsRTTSum.setStatus('current')
nqaJitterCollectStatsRTTSum2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsRTTSum2Low.setStatus('current')
nqaJitterCollectStatsRTTSum2High = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsRTTSum2High.setStatus('current')
nqaJitterCollectStatsRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsRTTMin.setStatus('current')
nqaJitterCollectStatsRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsRTTMax.setStatus('current')
nqaJitterCollectStatsMinOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMinOfPositivesSD.setStatus('current')
nqaJitterCollectStatsMaxOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMaxOfPositivesSD.setStatus('current')
nqaJitterCollectStatsNumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsNumOfPositivesSD.setStatus('current')
nqaJitterCollectStatsSumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSumOfPositivesSD.setStatus('current')
nqaJitterCollectStatsSum2OfPositivesSDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSum2OfPositivesSDLow.setStatus('current')
nqaJitterCollectStatsSum2OfPositivesSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSum2OfPositivesSDHigh.setStatus('current')
nqaJitterCollectStatsMinOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMinOfNegativesSD.setStatus('current')
nqaJitterCollectStatsMaxOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMaxOfNegativesSD.setStatus('current')
nqaJitterCollectStatsNumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsNumOfNegativesSD.setStatus('current')
nqaJitterCollectStatsSumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSumOfNegativesSD.setStatus('current')
nqaJitterCollectStatsSum2OfNegativesSDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSum2OfNegativesSDLow.setStatus('current')
nqaJitterCollectStatsSum2OfNegativesSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSum2OfNegativesSDHigh.setStatus('current')
nqaJitterCollectStatsMinOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMinOfPositivesDS.setStatus('current')
nqaJitterCollectStatsMaxOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMaxOfPositivesDS.setStatus('current')
nqaJitterCollectStatsNumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsNumOfPositivesDS.setStatus('current')
nqaJitterCollectStatsSumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSumOfPositivesDS.setStatus('current')
nqaJitterCollectStatsSum2OfPositivesDSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSum2OfPositivesDSLow.setStatus('current')
nqaJitterCollectStatsSum2OfPositivesDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSum2OfPositivesDSHigh.setStatus('current')
nqaJitterCollectStatsMinOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMinOfNegativesDS.setStatus('current')
nqaJitterCollectStatsMaxOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMaxOfNegativesDS.setStatus('current')
nqaJitterCollectStatsNumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsNumOfNegativesDS.setStatus('current')
nqaJitterCollectStatsSumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSumOfNegativesDS.setStatus('current')
nqaJitterCollectStatsSum2OfNegativesDSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSum2OfNegativesDSLow.setStatus('current')
nqaJitterCollectStatsSum2OfNegativesDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSum2OfNegativesDSHigh.setStatus('current')
nqaJitterCollectStatsMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 36), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMaxDelaySD.setStatus('current')
nqaJitterCollectStatsMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 37), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMaxDelayDS.setStatus('current')
nqaJitterCollectStatsNumOfOWD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsNumOfOWD.setStatus('current')
nqaJitterCollectStatsOWSumSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsOWSumSD.setStatus('current')
nqaJitterCollectStatsOWSumDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsOWSumDS.setStatus('current')
nqaJitterCollectStatsPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsPacketLossSD.setStatus('current')
nqaJitterCollectStatsPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsPacketLossDS.setStatus('current')
nqaJitterCollectStatsPacketLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsPacketLossUnknown.setStatus('current')
nqaJitterCollectStatsPacketOutOfSequences = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsPacketOutOfSequences.setStatus('current')
nqaJitterCollectStatsPacketLossRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsPacketLossRatio.setStatus('current')
nqaJitterCollectStatsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsErrors.setStatus('current')
nqaJitterCollectStatsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsBusies.setStatus('current')
nqaJitterCollectStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsTimeouts.setStatus('current')
nqaJitterCollectStatsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsProbeResponses.setStatus('current')
nqaJitterCollectStatsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsSentProbes.setStatus('current')
nqaJitterCollectStatsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsDrops.setStatus('current')
nqaJitterCollectStatsRTTAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsRTTAvg.setStatus('current')
nqaJitterCollectStatsAvgJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsAvgJitter.setStatus('current')
nqaJitterCollectStatsAvgJitterSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsAvgJitterSD.setStatus('current')
nqaJitterCollectStatsAvgJitterDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsAvgJitterDS.setStatus('current')
nqaJitterCollectStatsJitterOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 56), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsJitterOut.setStatus('current')
nqaJitterCollectStatsJitterIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 57), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsJitterIn.setStatus('current')
nqaJitterCollectStatsMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 58), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMinDelaySD.setStatus('current')
nqaJitterCollectStatsMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 59), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsMinDelayDS.setStatus('current')
nqaJitterCollectStatsAvgDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 60), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsAvgDelaySD.setStatus('current')
nqaJitterCollectStatsAvgDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 61), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsAvgDelayDS.setStatus('current')
nqaJitterCollectStatsPktRewriteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsPktRewriteNum.setStatus('current')
nqaJitterCollectStatsPktRewriteRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsPktRewriteRatio.setStatus('current')
nqaJitterCollectStatsPktDisorderNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsPktDisorderNum.setStatus('current')
nqaJitterCollectStatsPktDisorderRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsPktDisorderRatio.setStatus('current')
nqaJitterCollectStatsFragPktDisorderNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsFragPktDisorderNum.setStatus('current')
nqaJitterCollectStatsFragPktDisorderRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 8, 1, 1, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaJitterCollectStatsFragPktDisorderRatio.setStatus('current')
nqaAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9))
nqaMaxAlarmNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMaxAlarmNum.setStatus('current')
nqaMaxEventNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaMaxEventNum.setStatus('current')
nqaAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3), )
if mibBuilder.loadTexts: nqaAlarmTable.setStatus('current')
nqaAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1), ).setIndexNames((0, "NQA-MIB", "nqaAdminCtrlOwnerIndex"), (0, "NQA-MIB", "nqaAdminCtrlTestName"), (0, "NQA-MIB", "nqaAlarmIndex"))
if mibBuilder.loadTexts: nqaAlarmEntry.setStatus('current')
nqaAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: nqaAlarmIndex.setStatus('current')
nqaAlarmVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("rttAvg", 1), ("lostPacketRatio", 2), ("packetLossSd", 3), ("packetLossDs", 4), ("jitterRavg", 5), ("jitterSdAvg", 6), ("jitterDsAvg", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAlarmVariable.setStatus('current')
nqaAlarmSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("delta", 1), ("absolute", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAlarmSampleType.setStatus('current')
nqaAlarmValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaAlarmValue.setStatus('current')
nqaAlarmStartUpNqaAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("risingAlarm", 1), ("fallingAlarm", 2), ("risingOrFallingAlarm", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAlarmStartUpNqaAlarm.setStatus('current')
nqaAlarmRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAlarmRisingThreshold.setStatus('current')
nqaAlarmFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAlarmFallingThreshold.setStatus('current')
nqaAlarmRisingEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAlarmRisingEventIndex.setStatus('current')
nqaAlarmFallingEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAlarmFallingEventIndex.setStatus('current')
nqaAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAlarmDescription.setStatus('current')
nqaAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 3, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaAlarmStatus.setStatus('current')
nqaEventTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 4), )
if mibBuilder.loadTexts: nqaEventTable.setStatus('current')
nqaEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 4, 1), ).setIndexNames((0, "NQA-MIB", "nqaEventIndex"))
if mibBuilder.loadTexts: nqaEventEntry.setStatus('current')
nqaEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: nqaEventIndex.setStatus('current')
nqaEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("log", 2), ("trap", 3), ("logAndTrap", 4), ("linkage", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaEventType.setStatus('current')
nqaEventDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 4, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaEventDescription.setStatus('current')
nqaEventAdminName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 4, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaEventAdminName.setStatus('current')
nqaEventOperationTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 4, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaEventOperationTag.setStatus('current')
nqaEventStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 9, 4, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nqaEventStatus.setStatus('current')
nqaSaveRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10))
nqaFtpSaveRecordEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaFtpSaveRecordEnable.setStatus('current')
nqaFtpSaveRecordIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaFtpSaveRecordIpAddr.setStatus('current')
nqaFtpSaveRecordVrfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaFtpSaveRecordVrfName.setStatus('current')
nqaFtpSaveRecordUserName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaFtpSaveRecordUserName.setStatus('current')
nqaFtpSaveRecordPassword = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaFtpSaveRecordPassword.setStatus('current')
nqaFtpSaveRecordFileName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaFtpSaveRecordFileName.setStatus('current')
nqaFtpSaveRecordItemNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10000, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaFtpSaveRecordItemNum.setStatus('current')
nqaFtpSaveRecordTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 43200))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaFtpSaveRecordTime.setStatus('current')
nqaFtpSaveRecordNotificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 9), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nqaFtpSaveRecordNotificationEnable.setStatus('current')
nqaFtpSaveRecordLastFileName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 111, 10, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 220))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nqaFtpSaveRecordLastFileName.setStatus('current')
mibBuilder.exportSymbols("NQA-MIB", nqaMpingStatsBusies=nqaMpingStatsBusies, nqaMaxAlarmNum=nqaMaxAlarmNum, nqaHTTPStatsThresholdNotification=nqaHTTPStatsThresholdNotification, nqaAdminParaPppoeUserName=nqaAdminParaPppoeUserName, nqaAdminParaDontFragment=nqaAdminParaDontFragment, nqaPathJitterStatsAvgJitterSD=nqaPathJitterStatsAvgJitterSD, nqaJitterStatsJitterOut=nqaJitterStatsJitterOut, nqaAdminParaTrapGeneration=nqaAdminParaTrapGeneration, nqaPathJitterStatsOwdOverThresholdsDS=nqaPathJitterStatsOwdOverThresholdsDS, nqaPppoeStatsTable=nqaPppoeStatsTable, nqaPppoeStatsCurrentPhase=nqaPppoeStatsCurrentPhase, nqaJitterCollectStatsFragPktDisorderNum=nqaJitterCollectStatsFragPktDisorderNum, nqaJitterCollectStatsCompletions=nqaJitterCollectStatsCompletions, nqaAdminExtPara47=nqaAdminExtPara47, nqaScheduleStartTime=nqaScheduleStartTime, nqaHTTPStatsDNSServerTimeouts=nqaHTTPStatsDNSServerTimeouts, nqaVplsMTraceHistoryTable=nqaVplsMTraceHistoryTable, nqaMtracertStatsEntry=nqaMtracertStatsEntry, nqaJitterCollectStatsSum2OfPositivesDSHigh=nqaJitterCollectStatsSum2OfPositivesDSHigh, nqaNumOfCurrentCtrlEntry=nqaNumOfCurrentCtrlEntry, nqaJitterCollectStatsRTTSum2Low=nqaJitterCollectStatsRTTSum2Low, nqaPathJitterStatsNumOfPositivesDS=nqaPathJitterStatsNumOfPositivesDS, PYSNMP_MODULE_ID=nqa, nqaMaxConcurrentRequests=nqaMaxConcurrentRequests, nqaAdminExtPara12=nqaAdminExtPara12, nqaMtracertHistoryTable=nqaMtracertHistoryTable, nqaHTTPStatsRTTMin=nqaHTTPStatsRTTMin, nqaPppoeNcpTimeout=nqaPppoeNcpTimeout, nqaAdminParaRemoteAddress=nqaAdminParaRemoteAddress, nqaAdminParaMTraceGroupAddress=nqaAdminParaMTraceGroupAddress, nqaJitterStatsPktLossUnknown=nqaJitterStatsPktLossUnknown, nqaMtracertStatsRTDOverThresholds=nqaMtracertStatsRTDOverThresholds, nqaPathJitterStatsSum2OfNegativesDSLow=nqaPathJitterStatsSum2OfNegativesDSLow, nqaScheduleLastCollectIndex=nqaScheduleLastCollectIndex, nqaMpingHistoryResponseIndex=nqaMpingHistoryResponseIndex, nqaAdminParaMacAddress=nqaAdminParaMacAddress, nqaMtracertStatsLastGoodProbe=nqaMtracertStatsLastGoodProbe, nqaAdminParaTrapProbeFailureFilter=nqaAdminParaTrapProbeFailureFilter, nqaJitterCollectStatsAvgJitter=nqaJitterCollectStatsAvgJitter, nqaPathJitterStatsMaxDelayDS=nqaPathJitterStatsMaxDelayDS, nqaAdminParaLspIpAddress=nqaAdminParaLspIpAddress, nqaJitterCollectStatsPktRewriteRatio=nqaJitterCollectStatsPktRewriteRatio, nqaAlarmRisingEventIndex=nqaAlarmRisingEventIndex, nqaAdminParaTrapTestFailureFilter=nqaAdminParaTrapTestFailureFilter, nqaResultsEntry=nqaResultsEntry, nqaPathJitterStatsIndex=nqaPathJitterStatsIndex, nqaStatsGroup=nqaStatsGroup, nqaAdminParaMTraceSourceAddress=nqaAdminParaMTraceSourceAddress, nqaAdminExtPara46=nqaAdminExtPara46, nqaPathJitterStatsTable=nqaPathJitterStatsTable, nqaHistory=nqaHistory, nqaMtracertHistoryAddress=nqaMtracertHistoryAddress, nqaJitterCollectStatsMaxOfNegativesSD=nqaJitterCollectStatsMaxOfNegativesSD, nqaJitterCollectStatsSum2OfPositivesDSLow=nqaJitterCollectStatsSum2OfPositivesDSLow, nqaTcpServerEntry=nqaTcpServerEntry, nqaConformance=nqaConformance, nqaEventTable=nqaEventTable, nqaJitterStatsOWDThresholdNotificationDS=nqaJitterStatsOWDThresholdNotificationDS, nqaAdminParaInterval=nqaAdminParaInterval, nqaUdpServerPort=nqaUdpServerPort, nqaAdminParaPathMtuDiscoveryPathMtuMax=nqaAdminParaPathMtuDiscoveryPathMtuMax, nqaCtrl=nqaCtrl, nqaJitterStatsBusies=nqaJitterStatsBusies, nqaMpingStatsRTDOverThresholds=nqaMpingStatsRTDOverThresholds, nqaMpingStatsReceiverCount=nqaMpingStatsReceiverCount, nqaVplsMTraceHistorySuccessPathNode=nqaVplsMTraceHistorySuccessPathNode, nqaAdminCtrlEntry=nqaAdminCtrlEntry, nqaAdminParaDnsServerAddressType=nqaAdminParaDnsServerAddressType, nqaPppoeClientIpAddress=nqaPppoeClientIpAddress, nqaJitterCollectStatsMaxOfPositivesDS=nqaJitterCollectStatsMaxOfPositivesDS, nqaAdminExtPara3=nqaAdminExtPara3, nqaPppoeStatsEntry=nqaPppoeStatsEntry, nqaMtracertStatsAddressType=nqaMtracertStatsAddressType, nqaUdpServerAddressType=nqaUdpServerAddressType, nqaAdminParaFtpUserName=nqaAdminParaFtpUserName, nqaResultsLostPacketRatio=nqaResultsLostPacketRatio, nqaAdminParaPppoeVlanIf=nqaAdminParaPppoeVlanIf, nqaJitterCollectStatsMinOfNegativesSD=nqaJitterCollectStatsMinOfNegativesSD, nqaRisingAlarmNotification=nqaRisingAlarmNotification, nqaPathJitterStatsTestFinished=nqaPathJitterStatsTestFinished, HWLldpPortIdSubtype=HWLldpPortIdSubtype, nqaTcpServerAddressType=nqaTcpServerAddressType, nqaMacTraceHistoryTerminalMep=nqaMacTraceHistoryTerminalMep, nqaJitterStatsProbeResponses=nqaJitterStatsProbeResponses, nqaEventIndex=nqaEventIndex, nqaVplsMTraceHistoryLastRSC=nqaVplsMTraceHistoryLastRSC, nqaMacTraceHistoryTable=nqaMacTraceHistoryTable, nqaHTTPStatsTCPConnectRTTMax=nqaHTTPStatsTCPConnectRTTMax, nqaVplsMacTracertHistorySuccessPathNode=nqaVplsMacTracertHistorySuccessPathNode, nqaJitterCollectStatsRTTAvg=nqaJitterCollectStatsRTTAvg, nqaAdminParaExtEntry=nqaAdminParaExtEntry, nqaAdminExtPara5=nqaAdminExtPara5, nqaAdminParaHardwareBased=nqaAdminParaHardwareBased, nqaMaxNumOfRequests=nqaMaxNumOfRequests, nqaResultsLastGoodProbe=nqaResultsLastGoodProbe, nqaMpingHistoryAddressType=nqaMpingHistoryAddressType, nqaMtracertStatsSequenceErrors=nqaMtracertStatsSequenceErrors, nqaJitterStatsMaxDelayDS=nqaJitterStatsMaxDelayDS, nqaJitterStatsFragPktDisorderRatio=nqaJitterStatsFragPktDisorderRatio, nqaPathJitterStatsSumOfNegativesSD=nqaPathJitterStatsSumOfNegativesSD, nqaCompliances=nqaCompliances, nqaMtracertStatsTimeouts=nqaMtracertStatsTimeouts, nqaHTTPStatsTCPConnectTimeouts=nqaHTTPStatsTCPConnectTimeouts, nqaPathJitterStatsSumOfPositivesSD=nqaPathJitterStatsSumOfPositivesSD, nqaAdminParaMaxTtl=nqaAdminParaMaxTtl, nqaJitterCollectStatsOWSumSD=nqaJitterCollectStatsOWSumSD, nqaIcmpServerStatus=nqaIcmpServerStatus, nqaMtracertStatsCurPathTTL=nqaMtracertStatsCurPathTTL, nqaPathJitterStatsSum2OfPositivesDSLow=nqaPathJitterStatsSum2OfPositivesDSLow, nqaPathJitterStatsHopIndex=nqaPathJitterStatsHopIndex, nqaJitterStatsNumOfOWD=nqaJitterStatsNumOfOWD, nqaMtracertHistoryLastRC=nqaMtracertHistoryLastRC, nqaJitterStatsPacketLossDS=nqaJitterStatsPacketLossDS, nqaAdminParaPppoeInterval=nqaAdminParaPppoeInterval, nqaFtpSaveRecordNotification=nqaFtpSaveRecordNotification, nqaAdminExtPara16=nqaAdminExtPara16, nqaUdpServerStatus=nqaUdpServerStatus, nqaAdminExtPara28=nqaAdminExtPara28, nqaResultsSequenceErrors=nqaResultsSequenceErrors, nqaHTTPStatsDNSRTTMax=nqaHTTPStatsDNSRTTMax, nqaMtracertStatsCurHopCount=nqaMtracertStatsCurHopCount, nqaScheduleNumOfInitiations=nqaScheduleNumOfInitiations, nqaVplsMacTracertHistoryDSTable=nqaVplsMacTracertHistoryDSTable, nqaJitterStatsAvgJitter=nqaJitterStatsAvgJitter, nqaJitterStatsSum2OfNegativesDSHigh=nqaJitterStatsSum2OfNegativesDSHigh, nqaVplsMTraceHistoryForwardMode=nqaVplsMTraceHistoryForwardMode, nqaHistoryGroup=nqaHistoryGroup, nqaResultsProbeFailed=nqaResultsProbeFailed, nqaMpingStatsLastFibHit=nqaMpingStatsLastFibHit, nqaJitterStatsFragPktDisorderNum=nqaJitterStatsFragPktDisorderNum, nqaResultsSumCompletionTime2High=nqaResultsSumCompletionTime2High, nqaHTTPStatsTransactionRTTMax=nqaHTTPStatsTransactionRTTMax, NqaType=NqaType, nqaFTPStatsConnectSumTimeMax=nqaFTPStatsConnectSumTimeMax, nqaMacTraceHistoryIngressIfName=nqaMacTraceHistoryIngressIfName, nqaAlarmFallingThreshold=nqaAlarmFallingThreshold, nqaMpingHistoryReceiverAddress=nqaMpingHistoryReceiverAddress, nqaJitterCollectStatsPktDisorderNum=nqaJitterCollectStatsPktDisorderNum, nqaMtracertHistoryFwdTTL=nqaMtracertHistoryFwdTTL, nqaMtracertHistoryOutputPacketCount=nqaMtracertHistoryOutputPacketCount, nqaJitterCollectStatsAvgJitterSD=nqaJitterCollectStatsAvgJitterSD, nqaAdminParaTable=nqaAdminParaTable, nqaMtracertHistoryInputPacketCount=nqaMtracertHistoryInputPacketCount, nqaFTPStatsRTDOverThresholds=nqaFTPStatsRTDOverThresholds, nqaResultsRTDOverThresholds=nqaResultsRTDOverThresholds, nqaAdminExtPara19=nqaAdminExtPara19, nqaJitterCollectStatsPktRewriteNum=nqaJitterCollectStatsPktRewriteNum, nqaPathMtuStatsProbeResponses=nqaPathMtuStatsProbeResponses, nqaTcpServerStatus=nqaTcpServerStatus, nqaAdminCtrlThreshold1=nqaAdminCtrlThreshold1, nqaAdminExtPara38=nqaAdminExtPara38, nqaFtpSaveRecordTime=nqaFtpSaveRecordTime, nqaJitterStatsTestFinished=nqaJitterStatsTestFinished, nqaPathJitterStatsTimeouts=nqaPathJitterStatsTimeouts, nqaPppoeAuthorizationTimeout=nqaPppoeAuthorizationTimeout, nqaJitterCollectStatsMaxDelaySD=nqaJitterCollectStatsMaxDelaySD, nqaFTPStatsDataConnAveTime=nqaFTPStatsDataConnAveTime, nqaJitterStatsOperOfIcpif=nqaJitterStatsOperOfIcpif, nqaHTTPStatsErrors=nqaHTTPStatsErrors, nqaUdpServerAddress=nqaUdpServerAddress, nqaFTPStatsErrors=nqaFTPStatsErrors, nqaJitterStatsSum2DelayDSLow=nqaJitterStatsSum2DelayDSLow, nqaVplsMacTracertHistoryAddress=nqaVplsMacTracertHistoryAddress, nqaJitterCollectStatsJitterIn=nqaJitterCollectStatsJitterIn, nqaJitterCollectStatsPacketLossUnknown=nqaJitterCollectStatsPacketLossUnknown, nqaJitterStatsNumOfNegativesSD=nqaJitterStatsNumOfNegativesSD, nqaMpingStatsSequenceErrors=nqaMpingStatsSequenceErrors, nqaAdminParaRMepID=nqaAdminParaRMepID, nqaFTPStatsTestCompleted=nqaFTPStatsTestCompleted, nqaAdminParaVrfName=nqaAdminParaVrfName, nqaPathJitterStatsPktLossUnknown=nqaPathJitterStatsPktLossUnknown, nqaAdminParaMTraceMaxTtl=nqaAdminParaMTraceMaxTtl, nqaAdminExtPara49=nqaAdminExtPara49, nqaMpingStatsEntry=nqaMpingStatsEntry, nqaResultsTestAttempts=nqaResultsTestAttempts, nqaAdminExtPara43=nqaAdminExtPara43, nqaJitterCollectStatsMaxDelayDS=nqaJitterCollectStatsMaxDelayDS, nqaAdminParaTargetAddressType=nqaAdminParaTargetAddressType, nqaMtracertStatsDrops=nqaMtracertStatsDrops, nqaJitterStatsTestCompleted=nqaJitterStatsTestCompleted, nqaEventOperationTag=nqaEventOperationTag, nqaAdminParaNumPackets=nqaAdminParaNumPackets, nqaJitterCollectStatsRTTMax=nqaJitterCollectStatsRTTMax, nqaResultsDrops=nqaResultsDrops, nqaJitterStatsTable=nqaJitterStatsTable, nqaTcpServerVrfName=nqaTcpServerVrfName, nqaMpingStatsTestFinished=nqaMpingStatsTestFinished, nqaJitterStatsRTTSum=nqaJitterStatsRTTSum, nqaAdminExtPara15=nqaAdminExtPara15, nqaMtracertStatsOutPkgRate=nqaMtracertStatsOutPkgRate, nqaAdminParaStorageType=nqaAdminParaStorageType, nqaServer=nqaServer, nqaPathJitterStatsSumOfPositivesDS=nqaPathJitterStatsSumOfPositivesDS, nqaIcmpServerAddressType=nqaIcmpServerAddressType, nqaHistoryTimeStamp=nqaHistoryTimeStamp, nqaTcpServerTable=nqaTcpServerTable, nqaMtracertHistroyFinishState=nqaMtracertHistroyFinishState, nqaHTTPStatsDNSRTTMin=nqaHTTPStatsDNSRTTMin, nqaHTTPStatsTransactionTimeouts=nqaHTTPStatsTransactionTimeouts, nqaPathJitterStatsPacketLossDS=nqaPathJitterStatsPacketLossDS, nqaJitterCollectStatsOWDOverThresholdsDS=nqaJitterCollectStatsOWDOverThresholdsDS, nqaResultsBusies=nqaResultsBusies, nqaAdminParaMAName=nqaAdminParaMAName, nqaAdminParaMTraceSendMode=nqaAdminParaMTraceSendMode, nqaJitterCollectStatsMinOfPositivesDS=nqaJitterCollectStatsMinOfPositivesDS, nqaResultsCompletionTimeMin=nqaResultsCompletionTimeMin, nqaAdminExtPara18=nqaAdminExtPara18, nqaAdminExtPara27=nqaAdminExtPara27, nqaVplsMacTracertHistoryDSAddress=nqaVplsMacTracertHistoryDSAddress, nqaAdminExtPara21=nqaAdminExtPara21, nqaScheduleLastFinishIndex=nqaScheduleLastFinishIndex, nqaUdpServerVrfName=nqaUdpServerVrfName, nqaPathJitterStatsRttSum2High=nqaPathJitterStatsRttSum2High, nqaMpingStatsCompletionTimeMax=nqaMpingStatsCompletionTimeMax, nqaJitterStatsOWSumSD=nqaJitterStatsOWSumSD, nqaPathJitterStatsNumOfOwd=nqaPathJitterStatsNumOfOwd, nqaAdminParaVsiName=nqaAdminParaVsiName, nqaGroupLeaderOwnerIndex=nqaGroupLeaderOwnerIndex, nqaGroupMemberFree=nqaGroupMemberFree, nqaPathMtuStatsPathMtu=nqaPathMtuStatsPathMtu, nqaAlarmTable=nqaAlarmTable, nqaResultsSumCompletionTime=nqaResultsSumCompletionTime, nqaHTTPStatsTransactionRTTMin=nqaHTTPStatsTransactionRTTMin, nqaEventEntry=nqaEventEntry, nqaPathJitterStatsMinOfNegativesDS=nqaPathJitterStatsMinOfNegativesDS, nqaReset=nqaReset, nqaPathJitterStatsMaxDelaySD=nqaPathJitterStatsMaxDelaySD, nqaAdminParaTestFailurePercent=nqaAdminParaTestFailurePercent, nqaPathJitterStatsSum2OfPositivesDSHigh=nqaPathJitterStatsSum2OfPositivesDSHigh, nqaTcpServerPort=nqaTcpServerPort, nqaAdminExtPara35=nqaAdminExtPara35, nqaPathJitterStatsMinOfNegativesSD=nqaPathJitterStatsMinOfNegativesSD, nqaMtracertHistoryFwdCode=nqaMtracertHistoryFwdCode, nqaAdminExtPara32=nqaAdminExtPara32, nqaFtpSaveRecordGroup=nqaFtpSaveRecordGroup, nqaAdminExtPara14=nqaAdminExtPara14, nqaFtpSaveRecordFileName=nqaFtpSaveRecordFileName, nqaAdminParaMDName=nqaAdminParaMDName, nqaJitterStatsAvgJitterSD=nqaJitterStatsAvgJitterSD, nqaPathMtuStatsAddressType=nqaPathMtuStatsAddressType, nqaAdminParaCreateHopsEntries=nqaAdminParaCreateHopsEntries, nqaAdminParaPppoeAuthenticationMode=nqaAdminParaPppoeAuthenticationMode, nqaJitterStatsSum2DelayDSHigh=nqaJitterStatsSum2DelayDSHigh, nqaMpingHistoryCompletionTime=nqaMpingHistoryCompletionTime, nqaResultsTestFailed=nqaResultsTestFailed, nqaPathJitterStatsMaxOfNegativesSD=nqaPathJitterStatsMaxOfNegativesSD, nqaScheduleOperStatus=nqaScheduleOperStatus, nqaFTPStatsTestFailed=nqaFTPStatsTestFailed, nqaMpingHistoryAddress=nqaMpingHistoryAddress, nqaCollectStatsGroup=nqaCollectStatsGroup, nqaIcmpServerAddress=nqaIcmpServerAddress, nqaAdminParaFtpFilePath=nqaAdminParaFtpFilePath, nqaAdminParaResultRowMax=nqaAdminParaResultRowMax, nqaJitterStatsJitterIn=nqaJitterStatsJitterIn)
mibBuilder.exportSymbols("NQA-MIB", nqaJitterVersion=nqaJitterVersion, nqaScheduleElapsedTime=nqaScheduleElapsedTime, nqaPathJitterStatsNumOfNegativesDS=nqaPathJitterStatsNumOfNegativesDS, nqaAdminExtPara7=nqaAdminExtPara7, nqaHTTPStatsRTTSum=nqaHTTPStatsRTTSum, nqaJitterStatsRTTMax=nqaJitterStatsRTTMax, nqaVplsMacTracertHistoryTable=nqaVplsMacTracertHistoryTable, nqaMtracertStatsBusies=nqaMtracertStatsBusies, nqaAdminParaFtpMode=nqaAdminParaFtpMode, nqaIcmpServerVrfName=nqaIcmpServerVrfName, nqaResultsAddressType=nqaResultsAddressType, nqaJitterStatsSum2OfPositivesDSLow=nqaJitterStatsSum2OfPositivesDSLow, nqaJitterCollectStatsPacketOutOfSequences=nqaJitterCollectStatsPacketOutOfSequences, nqaPathJitterStatsOwdSumSD=nqaPathJitterStatsOwdSumSD, nqaNegotiateFailed=nqaNegotiateFailed, nqaVplsMTraceHistoryCompletionTime=nqaVplsMTraceHistoryCompletionTime, nqaFTPStatsProbeFailed=nqaFTPStatsProbeFailed, nqaIcmpServerEntry=nqaIcmpServerEntry, nqaAlarmGroup=nqaAlarmGroup, nqaJitterStatsNumOfPositivesDS=nqaJitterStatsNumOfPositivesDS, nqaJitterCollectStatsRTTMin=nqaJitterCollectStatsRTTMin, nqaJitterStatsTimeUnit=nqaJitterStatsTimeUnit, nqaAdminParaMacTunnelName=nqaAdminParaMacTunnelName, nqaJitterStatsOperOfMos=nqaJitterStatsOperOfMos, nqaFTPStatsCtrlConnMinTime=nqaFTPStatsCtrlConnMinTime, nqaNotifications=nqaNotifications, nqaResultsTable=nqaResultsTable, nqaHTTPStatsLostPacketRatio=nqaHTTPStatsLostPacketRatio, nqaMpingStatsLostPacketRatio=nqaMpingStatsLostPacketRatio, nqaJitterStatsProbeFailed=nqaJitterStatsProbeFailed, nqaAdminExtPara37=nqaAdminExtPara37, nqaJitterCollectStatsRTTSum=nqaJitterCollectStatsRTTSum, nqaJitterCollectStatsMaxOfNegativesDS=nqaJitterCollectStatsMaxOfNegativesDS, nqaMacTraceHistorySeqNumber=nqaMacTraceHistorySeqNumber, nqaEventStatus=nqaEventStatus, nqaJitterStatsPktDisorderRatio=nqaJitterStatsPktDisorderRatio, nqaHistoryIndex=nqaHistoryIndex, nqaJitterStatsTimeouts=nqaJitterStatsTimeouts, nqaAlarmVariable=nqaAlarmVariable, nqaJitterStatsNumOfNegativesDS=nqaJitterStatsNumOfNegativesDS, nqaMacTraceHistoryCompletionTime=nqaMacTraceHistoryCompletionTime, nqaAdminExtPara13=nqaAdminExtPara13, nqaPathMtuStatsIndex=nqaPathMtuStatsIndex, nqaJitterCollectStatsTimeouts=nqaJitterCollectStatsTimeouts, nqaPathJitterStatsPacketOutOfSequences=nqaPathJitterStatsPacketOutOfSequences, nqaAdminCtrlTable=nqaAdminCtrlTable, nqaScheduleStartType=nqaScheduleStartType, nqaStats=nqaStats, nqaPathJitterStatsSum2OfPositivesSDHigh=nqaPathJitterStatsSum2OfPositivesSDHigh, nqaPppoeLcpTimeout=nqaPppoeLcpTimeout, nqaHTTPStatsIndex=nqaHTTPStatsIndex, nqaHistoryAddress=nqaHistoryAddress, nqaHistoryHopIndex=nqaHistoryHopIndex, nqaAdminExtPara30=nqaAdminExtPara30, nqaJitterStatsSumOfNegativesDS=nqaJitterStatsSumOfNegativesDS, nqaPathJitterStatsAvgJitterDS=nqaPathJitterStatsAvgJitterDS, nqaResultsTestCompleted=nqaResultsTestCompleted, nqaFTPStatsTestFinished=nqaFTPStatsTestFinished, nqaMpingStatsReceiverAddress=nqaMpingStatsReceiverAddress, nqaJitterCollectStatsMinDelaySD=nqaJitterCollectStatsMinDelaySD, nqaJitterStatsNumOfPositivesSD=nqaJitterStatsNumOfPositivesSD, nqaMacTraceHistoryIngressAction=nqaMacTraceHistoryIngressAction, nqaAdminParaProbeCount=nqaAdminParaProbeCount, nqaIcmpServerTable=nqaIcmpServerTable, nqaAdminExtPara1=nqaAdminExtPara1, nqaFtpSaveRecordNotificationEnable=nqaFtpSaveRecordNotificationEnable, nqaResultsLastGoodPath=nqaResultsLastGoodPath, nqaResultsSumCompletionTime2Low=nqaResultsSumCompletionTime2Low, nqaSaveRecord=nqaSaveRecord, nqaVplsMTraceHistoryIndex=nqaVplsMTraceHistoryIndex, nqaMacTraceHistoryIngressMac=nqaMacTraceHistoryIngressMac, nqaMtracertHistoryIndex=nqaMtracertHistoryIndex, nqaJitterCollectStatsSum2OfPositivesSDLow=nqaJitterCollectStatsSum2OfPositivesSDLow, nqaAdminExtPara45=nqaAdminExtPara45, nqaTcpServerAddress=nqaTcpServerAddress, nqaVplsMacTracertHistoryHitFlag=nqaVplsMacTracertHistoryHitFlag, nqaAdminExtPara29=nqaAdminExtPara29, nqaPathJitterStatsAddress=nqaPathJitterStatsAddress, nqaMacTraceHistoryTTL=nqaMacTraceHistoryTTL, nqaMpingHistoryIndex=nqaMpingHistoryIndex, nqaAdminParaMTraceResponseAddress=nqaAdminParaMTraceResponseAddress, nqaJitterStatsNumOfRTT=nqaJitterStatsNumOfRTT, nqaVplsMTraceHistoryLastRC=nqaVplsMTraceHistoryLastRC, nqaJitterStatsSum2DelaySDHigh=nqaJitterStatsSum2DelaySDHigh, nqaEventType=nqaEventType, nqaPathJitterStatsNumOfPositivesSD=nqaPathJitterStatsNumOfPositivesSD, nqaScheduleEndTime=nqaScheduleEndTime, nqaHistoryLastRC=nqaHistoryLastRC, nqaPathMtuStatsDrops=nqaPathMtuStatsDrops, nqaScheduleAgeTime=nqaScheduleAgeTime, nqaAdminParaSourceAddress=nqaAdminParaSourceAddress, nqaJitterStatsSum2OfPositivesDSHigh=nqaJitterStatsSum2OfPositivesDSHigh, nqaMpingStatsTable=nqaMpingStatsTable, nqaMpingHistoryTimeStamp=nqaMpingHistoryTimeStamp, nqaFTPStatsDataConnMaxTime=nqaFTPStatsDataConnMaxTime, nqaMpingStatsDrops=nqaMpingStatsDrops, nqaJitterCollectStatsMaxOfPositivesSD=nqaJitterCollectStatsMaxOfPositivesSD, nqaPppoeStatsTestCompleted=nqaPppoeStatsTestCompleted, nqaResultsNoConnections=nqaResultsNoConnections, nqaMpingStatsTargetAddress=nqaMpingStatsTargetAddress, nqaPathJitterStatsSum2OfNegativesSDHigh=nqaPathJitterStatsSum2OfNegativesSDHigh, nqaAdminParaSourceAddressType=nqaAdminParaSourceAddressType, nqaAdminParaLspPWE3Type=nqaAdminParaLspPWE3Type, nqaJitterCollectStatsNumOfOWD=nqaJitterCollectStatsNumOfOWD, nqaAdminExtPara2=nqaAdminExtPara2, nqaPppoeStatsErrorMessage=nqaPppoeStatsErrorMessage, nqaMtracertHistoryCompletionTime=nqaMtracertHistoryCompletionTime, nqaAdminParaLspVersion=nqaAdminParaLspVersion, nqaAdminParaExtTable=nqaAdminParaExtTable, nqaResultsSentProbes=nqaResultsSentProbes, nqaMpingStatsReceiverIndex=nqaMpingStatsReceiverIndex, nqaVplsMTraceHistoryIGMPVersion=nqaVplsMTraceHistoryIGMPVersion, nqaAlarmStartUpNqaAlarm=nqaAlarmStartUpNqaAlarm, nqaResultsDisconnects=nqaResultsDisconnects, nqaUdpServerTable=nqaUdpServerTable, nqaPathJitterStatsCompletions=nqaPathJitterStatsCompletions, nqaAdminExtPara23=nqaAdminExtPara23, nqaJitterCollectStatsSum2OfPositivesSDHigh=nqaJitterCollectStatsSum2OfPositivesSDHigh, nqaPathJitterStatsMaxOfPositivesSD=nqaPathJitterStatsMaxOfPositivesSD, nqaAdminParaLspAddressType=nqaAdminParaLspAddressType, nqaAdminExtPara8=nqaAdminExtPara8, nqaAdminExtPara48=nqaAdminExtPara48, nqaCollectStats=nqaCollectStats, nqaFtpSaveRecordItemNum=nqaFtpSaveRecordItemNum, nqaAdminParaLspNextHopAddress=nqaAdminParaLspNextHopAddress, nqaAdminGroup=nqaAdminGroup, nqaAdminExtPara25=nqaAdminExtPara25, nqaAdminExtPara41=nqaAdminExtPara41, nqaVplsMacTracertHistoryCompletionTime=nqaVplsMacTracertHistoryCompletionTime, nqaFtpSaveRecordUserName=nqaFtpSaveRecordUserName, nqaJitterStatsPacketLossSD=nqaJitterStatsPacketLossSD, nqaMacTraceHistoryIndex=nqaMacTraceHistoryIndex, nqaJitterStatsIndex=nqaJitterStatsIndex, nqaPathJitterStatsPacketLossSD=nqaPathJitterStatsPacketLossSD, nqaHTTPStatsTransactionRTTSum=nqaHTTPStatsTransactionRTTSum, nqaPathMtuStatsCompletions=nqaPathMtuStatsCompletions, nqaNotificationsGroup=nqaNotificationsGroup, nqaJitterCollectStatsDrops=nqaJitterCollectStatsDrops, EnableValue=EnableValue, nqaScheduleEndType=nqaScheduleEndType, nqaPppoeConnectionTime=nqaPppoeConnectionTime, nqaAdminParaTimeUnit=nqaAdminParaTimeUnit, nqaJitterCollectStatsSumOfPositivesDS=nqaJitterCollectStatsSumOfPositivesDS, nqaFallingAlarmNotification=nqaFallingAlarmNotification, nqaMpingStatsIndex=nqaMpingStatsIndex, nqaHTTPStatsTable=nqaHTTPStatsTable, nqaAdminParaDistanceNodeType=nqaAdminParaDistanceNodeType, nqaJitterStatsSum2OfNegativesSDHigh=nqaJitterStatsSum2OfNegativesSDHigh, nqaJitterStatsTestFailed=nqaJitterStatsTestFailed, nqaResultsHopIndex=nqaResultsHopIndex, nqaPppoeStatsCompletions=nqaPppoeStatsCompletions, nqaLastSetError=nqaLastSetError, nqaPathJitterStatsSumOfNegativesDS=nqaPathJitterStatsSumOfNegativesDS, nqaMpingHistoryEntry=nqaMpingHistoryEntry, nqaVplsMTraceHistoryGroupPolicy=nqaVplsMTraceHistoryGroupPolicy, nqaAdminParaDataFill=nqaAdminParaDataFill, nqaAdminParaHistoryRowMax=nqaAdminParaHistoryRowMax, nqaJitterCollectStatsSum2OfNegativesDSLow=nqaJitterCollectStatsSum2OfNegativesDSLow, nqaJitterStatsOWSumDS=nqaJitterStatsOWSumDS, nqaPathJitterStatsMaxOfPositivesDS=nqaPathJitterStatsMaxOfPositivesDS, nqaJitterCollectStatsTable=nqaJitterCollectStatsTable, nqaPathJitterStatsOwdOverThresholdsSD=nqaPathJitterStatsOwdOverThresholdsSD, nqaPathJitterStatsAvgJitter=nqaPathJitterStatsAvgJitter, nqaMtracertHistoryTimeStamp=nqaMtracertHistoryTimeStamp, nqaAdminCtrlTestName=nqaAdminCtrlTestName, nqaAdminParaLspExp=nqaAdminParaLspExp, nqaMpingStatsTargetAddressType=nqaMpingStatsTargetAddressType, nqaPathJitterStatsAddressType=nqaPathJitterStatsAddressType, nqaMacTraceHistoryEgressIfName=nqaMacTraceHistoryEgressIfName, nqaSupportTestType=nqaSupportTestType, nqaVplsMTraceHistoryCACExist=nqaVplsMTraceHistoryCACExist, nqaPathMtuStatsBusies=nqaPathMtuStatsBusies, nqaPathJitterStatsEntry=nqaPathJitterStatsEntry, nqaMtracertStatsInPkgRate=nqaMtracertStatsInPkgRate, nqaAdminExtPara31=nqaAdminExtPara31, nqaAdminExtPara50=nqaAdminExtPara50, nqaJitterStatsPktDisorderNum=nqaJitterStatsPktDisorderNum, nqaHTTPStatsRttAvg=nqaHTTPStatsRttAvg, nqaHTTPStatsTestFailed=nqaHTTPStatsTestFailed, nqaHTTPStatsTCPConnectRTTMin=nqaHTTPStatsTCPConnectRTTMin, nqaFTPStatsDiscontinued=nqaFTPStatsDiscontinued, nqaAdminParaByPassRouteTable=nqaAdminParaByPassRouteTable, nqaVplsMTraceHistoryRcvQueryCount=nqaVplsMTraceHistoryRcvQueryCount, nqaBaseGroup=nqaBaseGroup, nqaMacTraceHistoryRelayAction=nqaMacTraceHistoryRelayAction, nqaJitterCollectStatsAvgDelaySD=nqaJitterCollectStatsAvgDelaySD, nqaAdminParaPppoePassword=nqaAdminParaPppoePassword, nqaResultsCompletionTimeMax=nqaResultsCompletionTimeMax, nqaFTPStatsProbeResponses=nqaFTPStatsProbeResponses, nqaJitterCollectStatsSentProbes=nqaJitterCollectStatsSentProbes, nqaVplsMTraceHistoryFinishState=nqaVplsMTraceHistoryFinishState, nqaFTPStatsCompletions=nqaFTPStatsCompletions, nqaGroupPeriod=nqaGroupPeriod, nqaVplsMTraceHistoryEntry=nqaVplsMTraceHistoryEntry, nqaAdminParaDSField=nqaAdminParaDSField, nqaFTPStatsTimeouts=nqaFTPStatsTimeouts, nqaAdminCtrlThreshold3=nqaAdminCtrlThreshold3, nqaAdminParaVlanId=nqaAdminParaVlanId, nqaAdminExtPara42=nqaAdminExtPara42, nqaMtracertHistoryEntry=nqaMtracertHistoryEntry, nqaFTPStatsTable=nqaFTPStatsTable, nqaJitterCollectStatsSumOfPositivesSD=nqaJitterCollectStatsSumOfPositivesSD, nqaEventDescription=nqaEventDescription, nqaHistoryTable=nqaHistoryTable, nqaResultsCurProbeCount=nqaResultsCurProbeCount, nqaEventAdminName=nqaEventAdminName, nqaVplsMTraceHistoryIGMPProxyEnable=nqaVplsMTraceHistoryIGMPProxyEnable, nqaPathJitterStatsRttSum=nqaPathJitterStatsRttSum, nqaMtracertStatsTestFinished=nqaMtracertStatsTestFinished, nqaPathMtuStatsDiscoveryPathMtuMin=nqaPathMtuStatsDiscoveryPathMtuMin, nqaResultsCompletions=nqaResultsCompletions, nqaVplsMTraceHistoryResponserAddress=nqaVplsMTraceHistoryResponserAddress, nqaJitterStatsPacketLossRatio=nqaJitterStatsPacketLossRatio, nqaAdminCtrlFrequency=nqaAdminCtrlFrequency, nqaVplsMTraceHistoryIGMPRouterPortLearningEnable=nqaVplsMTraceHistoryIGMPRouterPortLearningEnable, nqaSupportServerType=nqaSupportServerType, nqaJitterStatsAvgDelayDS=nqaJitterStatsAvgDelayDS, nqaGroupLeaderTestName=nqaGroupLeaderTestName, nqaJitterStatsSumOfNegativesSD=nqaJitterStatsSumOfNegativesSD, nqaAdminExtPara20=nqaAdminExtPara20, nqaMtracertStatsMaxPathTTL=nqaMtracertStatsMaxPathTTL, nqaFtpSaveRecordVrfName=nqaFtpSaveRecordVrfName, nqaFTPStatsRttAvg=nqaFTPStatsRttAvg, nqaPathJitterStatsSentProbes=nqaPathJitterStatsSentProbes, HWLldpPortId=HWLldpPortId, nqaFTPStatsDataConnMinTime=nqaFTPStatsDataConnMinTime, nqaAdminExtPara6=nqaAdminExtPara6, nqaJitterCollectStatsEntry=nqaJitterCollectStatsEntry, nqaJitterCollectStatsSum2OfNegativesDSHigh=nqaJitterCollectStatsSum2OfNegativesDSHigh, nqaHTTPStatsTestFinished=nqaHTTPStatsTestFinished, nqaBase=nqaBase, nqaJitterStatsSum2OfNegativesDSLow=nqaJitterStatsSum2OfNegativesDSLow, nqaMtracertStatsProbeResponses=nqaMtracertStatsProbeResponses, nqaMtracertHistoryOutgoingIfAddress=nqaMtracertHistoryOutgoingIfAddress, nqaVplsMacTracertHistoryIndex=nqaVplsMacTracertHistoryIndex, nqaVplsMTraceHistoryHitFlag=nqaVplsMTraceHistoryHitFlag, nqaAdminCtrlType=nqaAdminCtrlType, nqaHistoryAddressType=nqaHistoryAddressType, nqaJitterStatsDrops=nqaJitterStatsDrops, nqaJitterCollectStatsSumOfNegativesDS=nqaJitterCollectStatsSumOfNegativesDS, nqaPathJitterStatsNumOfRtt=nqaPathJitterStatsNumOfRtt, nqaPathJitterStatsProbeResponses=nqaPathJitterStatsProbeResponses, nqaJitterCollectStatsErrors=nqaJitterCollectStatsErrors, nqaMpingStatsProbeResponses=nqaMpingStatsProbeResponses, nqaResultsTestFinished=nqaResultsTestFinished, nqaJitterCollectStatsNumOfPositivesDS=nqaJitterCollectStatsNumOfPositivesDS, nqaAdminParaDataSize=nqaAdminParaDataSize, nqaMtracertStatsCurProbeCount=nqaMtracertStatsCurProbeCount, nqaJitterCollectStatsIndex=nqaJitterCollectStatsIndex, nqaAdminParaTargetPort=nqaAdminParaTargetPort, nqaJitterStatsMinOfNegativesSD=nqaJitterStatsMinOfNegativesSD, nqaPathJitterStatsSum2OfNegativesSDLow=nqaPathJitterStatsSum2OfNegativesSDLow, nqaMpingStatsRttAvg=nqaMpingStatsRttAvg, nqaAdminParaHttpVersion=nqaAdminParaHttpVersion)
mibBuilder.exportSymbols("NQA-MIB", nqaGroupEntry=nqaGroupEntry, nqaScheduleEntry=nqaScheduleEntry, nqaAdminParaMTraceResponseTtl=nqaAdminParaMTraceResponseTtl, nqaPathJitterStatsMinOfPositivesSD=nqaPathJitterStatsMinOfPositivesSD, nqaAdminParaLspPWE3RemoteAddress=nqaAdminParaLspPWE3RemoteAddress, nqaAlarm=nqaAlarm, nqaAdminParaFtpPassword=nqaAdminParaFtpPassword, nqaMpingHistoryReceiverIndex=nqaMpingHistoryReceiverIndex, nqaMtracertStatsHopIndex=nqaMtracertStatsHopIndex, nqaAdminCtrlThreshold2=nqaAdminCtrlThreshold2, nqaJitterStatsPktRewriteNum=nqaJitterStatsPktRewriteNum, nqaJitterStatsMaxDelaySD=nqaJitterStatsMaxDelaySD, nqaJitterStatsSumOfPositivesDS=nqaJitterStatsSumOfPositivesDS, nqaAlarmFallingEventIndex=nqaAlarmFallingEventIndex, nqaAdminParaPathMtuStep=nqaAdminParaPathMtuStep, nqaVersion=nqaVersion, nqaAdminParaFtpFileSize=nqaAdminParaFtpFileSize, nqaVplsMacTracertHistoryFinishState=nqaVplsMacTracertHistoryFinishState, nqaJitterStatsMinDelayDS=nqaJitterStatsMinDelayDS, nqaAdminExtPara39=nqaAdminExtPara39, NqaOperation=NqaOperation, nqaJitterStatsPacketOutOfSequences=nqaJitterStatsPacketOutOfSequences, nqaMtracertHistoryRtgProtocol=nqaMtracertHistoryRtgProtocol, nqaVplsMacTracertHistoryDSIndex=nqaVplsMacTracertHistoryDSIndex, nqaAdminExtPara17=nqaAdminExtPara17, nqaHTTPStatsProbeResponses=nqaHTTPStatsProbeResponses, nqaJitterStatsMaxOfNegativesSD=nqaJitterStatsMaxOfNegativesSD, nqaAdminExtPara26=nqaAdminExtPara26, nqaAdminParaLspVCType=nqaAdminParaLspVCType, nqaMpingHistoryTable=nqaMpingHistoryTable, nqaJitterCollectStatsMinOfPositivesSD=nqaJitterCollectStatsMinOfPositivesSD, nqaUdpServerEntry=nqaUdpServerEntry, nqaAlarmSampleType=nqaAlarmSampleType, nqaAdminParaIcpifAdvFactor=nqaAdminParaIcpifAdvFactor, nqaPppoeStatsIndex=nqaPppoeStatsIndex, nqaPathJitterStatsPacketLossRatio=nqaPathJitterStatsPacketLossRatio, nqaJitterStatsErrors=nqaJitterStatsErrors, nqaMtracertStatsTable=nqaMtracertStatsTable, nqaPathJitterStatsRttMin=nqaPathJitterStatsRttMin, nqaMtracertHistoryIncomingIfAddress=nqaMtracertHistoryIncomingIfAddress, nqaAdminParaLspTunnelType=nqaAdminParaLspTunnelType, nqaFtpSaveRecordEnable=nqaFtpSaveRecordEnable, nqaAdminParaCodecType=nqaAdminParaCodecType, nqaAdminExtPara4=nqaAdminExtPara4, nqaMpingHistoryFinishState=nqaMpingHistoryFinishState, nqaMtracertStatsLastGoodPath=nqaMtracertStatsLastGoodPath, nqaMtracertHistoryPreHopRouterAddress=nqaMtracertHistoryPreHopRouterAddress, nqaJitterCollectStatsAvgDelayDS=nqaJitterCollectStatsAvgDelayDS, nqaAdminParaMiscOptions=nqaAdminParaMiscOptions, nqaJitterStatsRTDOverThresholds=nqaJitterStatsRTDOverThresholds, nqaAdminParaPppoeRedialUpTimes=nqaAdminParaPppoeRedialUpTimes, nqaJitterCollectStatsMinDelayDS=nqaJitterCollectStatsMinDelayDS, nqaResultsThresholdNotification=nqaResultsThresholdNotification, nqaFTPStatsSendProbes=nqaFTPStatsSendProbes, nqaMpingStatsCompletions=nqaMpingStatsCompletions, nqaVplsMacTracertHistoryHopIndex=nqaVplsMacTracertHistoryHopIndex, nqaPathMtuStatsOptimumFirstStep=nqaPathMtuStatsOptimumFirstStep, nqaJitterStatsMaxOfNegativesDS=nqaJitterStatsMaxOfNegativesDS, nqaFTPStatsLostPacketRatio=nqaFTPStatsLostPacketRatio, nqaPathJitterStatsErrors=nqaPathJitterStatsErrors, nqaResultsTimeouts=nqaResultsTimeouts, nqaHistoryFinishState=nqaHistoryFinishState, nqaMpingHistoryLastRC=nqaMpingHistoryLastRC, nqaVplsMTraceHistoryIGMPSnpgEnable=nqaVplsMTraceHistoryIGMPSnpgEnable, nqaJitterStatsAvgDelaySD=nqaJitterStatsAvgDelaySD, nqaMtracertStatsInPkgLossRate=nqaMtracertStatsInPkgLossRate, nqaJitterStatsSum2OfPositivesSDLow=nqaJitterStatsSum2OfPositivesSDLow, nqaAdminExtPara36=nqaAdminExtPara36, nqaJitterCollectStatsNumOfRTT=nqaJitterCollectStatsNumOfRTT, nqaJitterCollectStatsSum2OfNegativesSDLow=nqaJitterCollectStatsSum2OfNegativesSDLow, nqaAdminParaEntry=nqaAdminParaEntry, nqaAdminParaLspPWE3Option=nqaAdminParaLspPWE3Option, nqaServerGroup=nqaServerGroup, nqaJitterStatsSum2DelaySDLow=nqaJitterStatsSum2DelaySDLow, nqaPathMtuStatsSentProbes=nqaPathMtuStatsSentProbes, nqaJitterStatsMinOfPositivesSD=nqaJitterStatsMinOfPositivesSD, nqaMtracertStatsCompletions=nqaMtracertStatsCompletions, nqaPathJitterStatsJitterOut=nqaPathJitterStatsJitterOut, nqaJitterCollectStatsRTTSum2High=nqaJitterCollectStatsRTTSum2High, nqaPathJitterStatsDrops=nqaPathJitterStatsDrops, nqaMtracertStatsSentProbes=nqaMtracertStatsSentProbes, nqaAlarmValue=nqaAlarmValue, nqaPathJitterStatsMaxOfNegativesDS=nqaPathJitterStatsMaxOfNegativesDS, nqaMtracertHistoryHopIndex=nqaMtracertHistoryHopIndex, nqaFTPStatsConnectSumTimeAve=nqaFTPStatsConnectSumTimeAve, NqaDistanceNodeType=NqaDistanceNodeType, nqaVplsMTraceHistoryPWExist=nqaVplsMTraceHistoryPWExist, nqaAdminExtPara11=nqaAdminExtPara11, nqaPathMtuStatsEntry=nqaPathMtuStatsEntry, nqaVplsMacTracertHistoryTimeStamp=nqaVplsMacTracertHistoryTimeStamp, nqaAdminCtrlStatus=nqaAdminCtrlStatus, nqaAdminExtPara44=nqaAdminExtPara44, nqaHTTPStatsBusies=nqaHTTPStatsBusies, nqaFtpSaveRecordPassword=nqaFtpSaveRecordPassword, nqaPathMtuStatsDiscoveryPathMtuMax=nqaPathMtuStatsDiscoveryPathMtuMax, nqaAlarmEntry=nqaAlarmEntry, nqaAlarmRisingThreshold=nqaAlarmRisingThreshold, nqaPathMtuStatsAddress=nqaPathMtuStatsAddress, nqaJitterStatsOWDOverThresholdsSD=nqaJitterStatsOWDOverThresholdsSD, nqaMacTraceHistoryEgressAction=nqaMacTraceHistoryEgressAction, nqaJitterStatsRTTSum2High=nqaJitterStatsRTTSum2High, nqaHTTPStatsTestCompleted=nqaHTTPStatsTestCompleted, nqaPathJitterStatsMinOfPositivesDS=nqaPathJitterStatsMinOfPositivesDS, nqaMpingStatsSentProbes=nqaMpingStatsSentProbes, nqaGroups=nqaGroups, nqaVplsMacTracertHistoryDSCount=nqaVplsMacTracertHistoryDSCount, nqaHTTPStatsTCPConnectRTTSum=nqaHTTPStatsTCPConnectRTTSum, nqaVplsMTraceHistoryResponserAddressType=nqaVplsMTraceHistoryResponserAddressType, nqaFTPStatsEntry=nqaFTPStatsEntry, nqaJitterCollectStatsNumOfNegativesDS=nqaJitterCollectStatsNumOfNegativesDS, nqaHTTPStatsDNSRTTSum=nqaHTTPStatsDNSRTTSum, nqaMtracertStatsIndex=nqaMtracertStatsIndex, nqaMtracertStatsSGPkgLossRate=nqaMtracertStatsSGPkgLossRate, nqaJitterStatsPktRewriteRatio=nqaJitterStatsPktRewriteRatio, nqaHTTPStatsProbeFailed=nqaHTTPStatsProbeFailed, nqaAdminParaMaxFailures=nqaAdminParaMaxFailures, nqaMtracertHistoryQueryArrivalTime=nqaMtracertHistoryQueryArrivalTime, nqaJitterCollectStatsPktDisorderRatio=nqaJitterCollectStatsPktDisorderRatio, nqaVplsMacTracertHistoryAddressType=nqaVplsMacTracertHistoryAddressType, nqaJitterCollectStatsProbeResponses=nqaJitterCollectStatsProbeResponses, nqaHTTPStatsMessageBodyOctetsSum=nqaHTTPStatsMessageBodyOctetsSum, nqaTimeOfLastSetError=nqaTimeOfLastSetError, nqaServerEnable=nqaServerEnable, nqaJitterStatsRTDThresholdNotification=nqaJitterStatsRTDThresholdNotification, nqaJitterStatsSumOfPositivesSD=nqaJitterStatsSumOfPositivesSD, nqaAdminParaMTraceLastHopAddress=nqaAdminParaMTraceLastHopAddress, nqaGroupStatusType=nqaGroupStatusType, nqaPppoeGatewayIpAddress=nqaPppoeGatewayIpAddress, nqaMtracertHistoryAddressType=nqaMtracertHistoryAddressType, nqaVplsMacTracertHistoryEntry=nqaVplsMacTracertHistoryEntry, nqaMpingStatsSumCompletionTime=nqaMpingStatsSumCompletionTime, nqaMacTraceHistoryForwarded=nqaMacTraceHistoryForwarded, nqaMpingStatsCompletionTimeMin=nqaMpingStatsCompletionTimeMin, nqaJitterStatsSentProbes=nqaJitterStatsSentProbes, nqaVplsMacTracertHistoryResponseIndex=nqaVplsMacTracertHistoryResponseIndex, nqaJitterCollectStatsBusies=nqaJitterCollectStatsBusies, nqaPathJitterStatsBusies=nqaPathJitterStatsBusies, nqaCompliance=nqaCompliance, nqaPathJitterStatsNumOfNegativesSD=nqaPathJitterStatsNumOfNegativesSD, nqaJitterStatsMaxOfPositivesDS=nqaJitterStatsMaxOfPositivesDS, nqaResultsProbeResponses=nqaResultsProbeResponses, nqaAdminExtPara22=nqaAdminExtPara22, nqaJitterCollectStatsPacketLossSD=nqaJitterCollectStatsPacketLossSD, nqaMtracertStatsAddress=nqaMtracertStatsAddress, nqaJitterCollectStatsNumOfPositivesSD=nqaJitterCollectStatsNumOfPositivesSD, nqaJitterCollectStatsAvgJitterDS=nqaJitterCollectStatsAvgJitterDS, nqaPppoeStatsTestFailed=nqaPppoeStatsTestFailed, nqaVplsMTraceHistoryHopIndex=nqaVplsMTraceHistoryHopIndex, nqaJitterStatsSum2OfNegativesSDLow=nqaJitterStatsSum2OfNegativesSDLow, nqaAdminCtrlTag=nqaAdminCtrlTag, nqaMacTraceHistoryEntry=nqaMacTraceHistoryEntry, nqaPathJitterStatsSum2OfNegativesDSHigh=nqaPathJitterStatsSum2OfNegativesDSHigh, nqaAdminParaRemoteAddressType=nqaAdminParaRemoteAddressType, nqaPathJitterStatsSum2OfPositivesSDLow=nqaPathJitterStatsSum2OfPositivesSDLow, nqaAdminCtrlOwnerIndex=nqaAdminCtrlOwnerIndex, nqaHTTPStatsRTTMax=nqaHTTPStatsRTTMax, nqaJitterStatsOWDOverThresholdsDS=nqaJitterStatsOWDOverThresholdsDS, nqaVplsMTraceHistoryResponseIndex=nqaVplsMTraceHistoryResponseIndex, nqaVplsMTraceHistoryUpStreamAddressType=nqaVplsMTraceHistoryUpStreamAddressType, nqaJitterStatsEntry=nqaJitterStatsEntry, nqaPathMtuStatsTestFinished=nqaPathMtuStatsTestFinished, nqaJitterCollectStatsSum2OfNegativesSDHigh=nqaJitterCollectStatsSum2OfNegativesSDHigh, nqaHTTPStatsEntry=nqaHTTPStatsEntry, nqaHTTPStatsCompletions=nqaHTTPStatsCompletions, nqaAdminParaSourcePort=nqaAdminParaSourcePort, nqaResultsIndex=nqaResultsIndex, nqaVplsMTraceHistoryReceivedTtl=nqaVplsMTraceHistoryReceivedTtl, nqaAdminParaIfIndex=nqaAdminParaIfIndex, nqaJitterCollectStatsNumOfNegativesSD=nqaJitterCollectStatsNumOfNegativesSD, nqaAdminCtrlTimeOut=nqaAdminCtrlTimeOut, nqaAdminParaLspReplyMode=nqaAdminParaLspReplyMode, nqaPathJitterStatsJitterIn=nqaPathJitterStatsJitterIn, nqaJitterStatsRTTSum2Low=nqaJitterStatsRTTSum2Low, nqaResultsCurHopCount=nqaResultsCurHopCount, nqaJitterStatsOWDThresholdNotificationSD=nqaJitterStatsOWDThresholdNotificationSD, nqaHistoryEntry=nqaHistoryEntry, nqaMtracertHistoryTotalSGPacketCount=nqaMtracertHistoryTotalSGPacketCount, nqaJitterStatsMinDelaySD=nqaJitterStatsMinDelaySD, nqaAdminExtPara34=nqaAdminExtPara34, nqaAlarmDescription=nqaAlarmDescription, nqaJitterStatsRTTAvg=nqaJitterStatsRTTAvg, nqaPppoeClientSessionId=nqaPppoeClientSessionId, nqaPathJitterStatsRttMax=nqaPathJitterStatsRttMax, nqa=nqa, nqaAdminExtPara9=nqaAdminExtPara9, nqaScheduleTable=nqaScheduleTable, nqaHTTPStatsRTDOverThresholds=nqaHTTPStatsRTDOverThresholds, nqaJitterStatsAvgJitterDS=nqaJitterStatsAvgJitterDS, nqaMtracertStatsTimeDelay=nqaMtracertStatsTimeDelay, nqaMpingHistoryFibHit=nqaMpingHistoryFibHit, nqaJitterCollectStatsRTDOverThresholds=nqaJitterCollectStatsRTDOverThresholds, nqaGroupTable=nqaGroupTable, nqaAdminParaIcmpJitterMode=nqaAdminParaIcmpJitterMode, nqaJitterStatsCompletions=nqaJitterStatsCompletions, nqaAdminExtPara40=nqaAdminExtPara40, nqaMpingStatsSumCompletionTime2Low=nqaMpingStatsSumCompletionTime2Low, nqaJitterCollectStatsPacketLossRatio=nqaJitterCollectStatsPacketLossRatio, nqaVplsMTraceHistoryTimeStamp=nqaVplsMTraceHistoryTimeStamp, nqaAlarmStatus=nqaAlarmStatus, nqaFTPStatsIndex=nqaFTPStatsIndex, nqaEnable=nqaEnable, nqaHistoryProbeIndex=nqaHistoryProbeIndex, nqaGroupMemberNum=nqaGroupMemberNum, nqaAdminParaLspPWE3VcId=nqaAdminParaLspPWE3VcId, nqaAlarmIndex=nqaAlarmIndex, nqaFTPStatsConnectSumTimeMin=nqaFTPStatsConnectSumTimeMin, nqaFTPStatsThresholdNotification=nqaFTPStatsThresholdNotification, nqaPathJitterStatsRtdOverThresholds=nqaPathJitterStatsRtdOverThresholds, nqaJitterStatsRTTMin=nqaJitterStatsRTTMin, nqaPathMtuStatsTable=nqaPathMtuStatsTable, nqaAdminExtPara24=nqaAdminExtPara24, nqaAdminParaOperation=nqaAdminParaOperation, nqaHTTPStatsTcpConnErrors=nqaHTTPStatsTcpConnErrors, nqaJitterCollectStatsFragPktDisorderRatio=nqaJitterCollectStatsFragPktDisorderRatio, nqaFTPStatsCtrlConnAveTime=nqaFTPStatsCtrlConnAveTime, nqaFTPStatsMessageBodyOctetsSum=nqaFTPStatsMessageBodyOctetsSum, nqaJitterStatsMaxOfPositivesSD=nqaJitterStatsMaxOfPositivesSD, nqaPppoeDiscoveryTimeout=nqaPppoeDiscoveryTimeout, nqaJitterCollectStatsOWDOverThresholdsSD=nqaJitterCollectStatsOWDOverThresholdsSD, nqaJitterCollectStatsMinOfNegativesDS=nqaJitterCollectStatsMinOfNegativesDS, nqaVplsMTraceHistoryRcvLeaveCount=nqaVplsMTraceHistoryRcvLeaveCount, nqaAdminExtPara10=nqaAdminExtPara10, nqaJitterCollectStatsJitterOut=nqaJitterCollectStatsJitterOut, nqaJitterStatsMinOfPositivesDS=nqaJitterStatsMinOfPositivesDS, nqaMacTraceHistoryEgressMac=nqaMacTraceHistoryEgressMac, nqaAdminParaInitialTtl=nqaAdminParaInitialTtl, nqaMpingStatsSumCompletionTime2High=nqaMpingStatsSumCompletionTime2High, nqaFtpSaveRecordLastFileName=nqaFtpSaveRecordLastFileName, nqaAdminParaLspAddressMask=nqaAdminParaLspAddressMask, nqaAdminParaHttpOperationString=nqaAdminParaHttpOperationString, nqaAdminParaTargetAddress=nqaAdminParaTargetAddress, nqaMpingStatsLastGoodProbe=nqaMpingStatsLastGoodProbe, nqaVplsMTraceHistoryRcvReportCount=nqaVplsMTraceHistoryRcvReportCount, nqaAdminParaLspPWE3RemoteVcId=nqaAdminParaLspPWE3RemoteVcId, nqaAdminParaMTraceResponseAddressType=nqaAdminParaMTraceResponseAddressType, nqaResultsRttAvg=nqaResultsRttAvg, nqaHistoryCompletionTime=nqaHistoryCompletionTime, nqaAdminExtPara33=nqaAdminExtPara33, nqaPathJitterStatsRttAvg=nqaPathJitterStatsRttAvg, nqaFTPStatsCtrlConnMaxTime=nqaFTPStatsCtrlConnMaxTime, nqaJitterCollectStatsSumOfNegativesSD=nqaJitterCollectStatsSumOfNegativesSD, nqaMacTraceHistoryReceiveOrder=nqaMacTraceHistoryReceiveOrder, nqaVplsMTraceHistoryRequireRouterAlertEnable=nqaVplsMTraceHistoryRequireRouterAlertEnable, nqaVplsMTraceHistoryUpStreamAddress=nqaVplsMTraceHistoryUpStreamAddress, nqaPathMtuStatsTimeouts=nqaPathMtuStatsTimeouts, nqaHTTPStatsDNSQueryErrors=nqaHTTPStatsDNSQueryErrors, nqaResultsAddress=nqaResultsAddress, nqaPathJitterStatsOwdSumDS=nqaPathJitterStatsOwdSumDS, nqaJitterStatsSum2OfPositivesSDHigh=nqaJitterStatsSum2OfPositivesSDHigh, nqaAdminParaDnsServerAddress=nqaAdminParaDnsServerAddress, nqaMaxEventNum=nqaMaxEventNum, nqaFtpSaveRecordIpAddr=nqaFtpSaveRecordIpAddr, nqaPppoeRedialIndex=nqaPppoeRedialIndex, nqaMpingStatsTimeouts=nqaMpingStatsTimeouts)
mibBuilder.exportSymbols("NQA-MIB", nqaPathJitterStatsRttSum2Low=nqaPathJitterStatsRttSum2Low, nqaMtracertHistoryCurQueryMode=nqaMtracertHistoryCurQueryMode, nqaJitterCollectStatsOWSumDS=nqaJitterCollectStatsOWSumDS, nqaJitterCollectStatsPacketLossDS=nqaJitterCollectStatsPacketLossDS, nqaJitterStatsMinOfNegativesDS=nqaJitterStatsMinOfNegativesDS, nqaVplsMacTracertHistoryDSEntry=nqaVplsMacTracertHistoryDSEntry, nqaHTTPStatsSendProbes=nqaHTTPStatsSendProbes)
