#
# PySNMP MIB module Wellfleet-SR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-SR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, ObjectIdentity, MibIdentifier, IpAddress, TimeTicks, iso, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, ModuleIdentity, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "MibIdentifier", "IpAddress", "TimeTicks", "iso", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "ModuleIdentity", "Bits", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfBridgeGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfBridgeGroup")
wfBrSourceRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2))
wfBrSr = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1))
wfBrSrBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseDelete.setStatus('mandatory')
wfBrSrBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseDisable.setStatus('mandatory')
wfBrSrBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseState.setStatus('mandatory')
wfBrSrBaseInternalLanId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseInternalLanId.setStatus('mandatory')
wfBrSrBaseBridgeId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseBridgeId.setStatus('mandatory')
wfBrSrBaseGroupLanId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 6), Integer32().clone(4095)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseGroupLanId.setStatus('mandatory')
wfBrSrBaseIpEncapsDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseIpEncapsDisable.setStatus('mandatory')
wfBrSrBaseIpNetworkRingId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseIpNetworkRingId.setStatus('mandatory')
wfBrSrBaseIpInReceives = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseIpInReceives.setStatus('mandatory')
wfBrSrBaseIpSeqErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseIpSeqErrors.setStatus('mandatory')
wfBrSrBaseIpMtuSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 11), Integer32().clone(4562)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseIpMtuSize.setStatus('mandatory')
wfBrSrBaseNbServerRifCacheDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbServerRifCacheDisable.setStatus('mandatory')
wfBrSrBaseNbClientRifCacheDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbClientRifCacheDisable.setStatus('mandatory')
wfBrSrBaseNbDatagramRifCacheDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbDatagramRifCacheDisable.setStatus('mandatory')
wfBrSrBaseNb15CharacterDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNb15CharacterDisable.setStatus('mandatory')
wfBrSrBaseNbRifMibDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbRifMibDisable.setStatus('mandatory')
wfBrSrBaseNbMaximumRifEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 17), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbMaximumRifEntries.setStatus('mandatory')
wfBrSrBaseNbCurrentRifEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseNbCurrentRifEntries.setStatus('mandatory')
wfBrSrBaseNbRifAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 19), Integer32().clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbRifAgeTime.setStatus('mandatory')
wfBrSrBaseNbRifHashEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(253, 2147483647)).clone(253)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbRifHashEntries.setStatus('mandatory')
wfBrSrBaseNbRifCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseNbRifCacheHits.setStatus('mandatory')
wfBrSrBaseNbRifCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseNbRifCacheMisses.setStatus('mandatory')
wfBrSrBaseNbRifDroppedFrames = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseNbRifDroppedFrames.setStatus('mandatory')
wfBrSrBaseNbQueryCacheDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbQueryCacheDisable.setStatus('mandatory')
wfBrSrBaseNbQueryMibDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbQueryMibDisable.setStatus('mandatory')
wfBrSrBaseNbMaximumQueryEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 26), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbMaximumQueryEntries.setStatus('mandatory')
wfBrSrBaseNbCurrentQueryEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseNbCurrentQueryEntries.setStatus('mandatory')
wfBrSrBaseNbQueryAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 28), Integer32().clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbQueryAgeTime.setStatus('mandatory')
wfBrSrBaseNbQueryFilteredFrames = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseNbQueryFilteredFrames.setStatus('mandatory')
wfBrSrBaseStpEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseStpEnable.setStatus('mandatory')
wfBrSrBaseStpState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpState.setStatus('mandatory')
wfBrSrBaseStpProtocolSpecification = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("declb100", 2), ("ieee8021d", 3))).clone('ieee8021d')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseStpProtocolSpecification.setStatus('mandatory')
wfBrSrBaseStpBridgeID = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 33), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseStpBridgeID.setStatus('mandatory')
wfBrSrBaseStpTimeSinceTopologyChange = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpTimeSinceTopologyChange.setStatus('mandatory')
wfBrSrBaseStpTopChanges = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpTopChanges.setStatus('mandatory')
wfBrSrBaseStpDesignatedRoot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 36), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpDesignatedRoot.setStatus('mandatory')
wfBrSrBaseStpRootCost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpRootCost.setStatus('mandatory')
wfBrSrBaseStpRootPort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpRootPort.setStatus('mandatory')
wfBrSrBaseStpMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpMaxAge.setStatus('mandatory')
wfBrSrBaseStpHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpHelloTime.setStatus('mandatory')
wfBrSrBaseStpHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100))).clone(namedValues=NamedValues(("time", 100))).clone('time')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpHoldTime.setStatus('mandatory')
wfBrSrBaseStpForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseStpForwardDelay.setStatus('mandatory')
wfBrSrBaseStpBridgeMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseStpBridgeMaxAge.setStatus('mandatory')
wfBrSrBaseStpBridgeHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseStpBridgeHelloTime.setStatus('mandatory')
wfBrSrBaseStpBridgeForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseStpBridgeForwardDelay.setStatus('mandatory')
wfBrSrBaseNbNameQueryCacheDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseNbNameQueryCacheDisable.setStatus('mandatory')
wfBrSrBaseAreHopCntLimit = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("areonly", 1), ("areste", 2))).clone('areonly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseAreHopCntLimit.setStatus('mandatory')
wfBrSrInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2), )
if mibBuilder.loadTexts: wfBrSrInterfaceTable.setStatus('mandatory')
wfBrSrInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrInterfaceCircuit"))
if mibBuilder.loadTexts: wfBrSrInterfaceEntry.setStatus('mandatory')
wfBrSrInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceDelete.setStatus('mandatory')
wfBrSrInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceDisable.setStatus('mandatory')
wfBrSrInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceState.setStatus('mandatory')
wfBrSrInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceCircuit.setStatus('mandatory')
wfBrSrInterfaceMaxRds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceMaxRds.setStatus('mandatory')
wfBrSrInterfaceRing = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceRing.setStatus('mandatory')
wfBrSrInterfaceBlockOutSte = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("accept", 2))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceBlockOutSte.setStatus('mandatory')
wfBrSrInterfaceBlockInSte = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("accept", 2))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceBlockInSte.setStatus('mandatory')
wfBrSrInterfaceBlockIp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("accept", 2))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceBlockIp.setStatus('mandatory')
wfBrSrInterfaceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceIpAddress.setStatus('mandatory')
wfBrSrInterfaceInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceInFrames.setStatus('mandatory')
wfBrSrInterfaceOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceOutFrames.setStatus('mandatory')
wfBrSrInterfaceOutIpFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceOutIpFrames.setStatus('mandatory')
wfBrSrInterfaceDropInvalidRcs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceDropInvalidRcs.setStatus('mandatory')
wfBrSrInterfaceDropInvalidRings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceDropInvalidRings.setStatus('mandatory')
wfBrSrInterfaceDropSrfs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceDropSrfs.setStatus('mandatory')
wfBrSrInterfaceNbServerRifCacheDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceNbServerRifCacheDisable.setStatus('mandatory')
wfBrSrInterfaceNbClientRifCacheDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceNbClientRifCacheDisable.setStatus('mandatory')
wfBrSrInterfaceNbDatagramRifCacheDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceNbDatagramRifCacheDisable.setStatus('mandatory')
wfBrSrInterfaceNbQueryCacheDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceNbQueryCacheDisable.setStatus('mandatory')
wfBrSrInterfaceXbInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceXbInFrames.setStatus('mandatory')
wfBrSrInterfaceXbDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceXbDropFrames.setStatus('mandatory')
wfBrSrInterfaceFrBcastDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 23), Integer32().clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceFrBcastDlci.setStatus('mandatory')
wfBrSrInterfaceEncapsFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("proprietary", 1), ("standard", 2))).clone('proprietary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceEncapsFormat.setStatus('mandatory')
wfBrSrInterfaceStpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceStpEnable.setStatus('mandatory')
wfBrSrInterfaceStpState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceStpState.setStatus('mandatory')
wfBrSrInterfaceStpMultiCastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceStpMultiCastAddr.setStatus('mandatory')
wfBrSrInterfaceStpPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceStpPathCost.setStatus('mandatory')
wfBrSrInterfaceStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceStpDesignatedRoot.setStatus('mandatory')
wfBrSrInterfaceStpDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceStpDesignatedCost.setStatus('mandatory')
wfBrSrInterfaceStpDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 31), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceStpDesignatedBridge.setStatus('mandatory')
wfBrSrInterfaceStpDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceStpDesignatedPort.setStatus('mandatory')
wfBrSrInterfaceStpForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceStpForwardTransitions.setStatus('mandatory')
wfBrSrInterfaceStpPktsXmitd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceStpPktsXmitd.setStatus('mandatory')
wfBrSrInterfaceStpPktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceStpPktsRcvd.setStatus('mandatory')
wfBrSrInterfaceStpTranslationDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceStpTranslationDisable.setStatus('mandatory')
wfBrSrInterfaceMaxLfField = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sr1500", 1), ("sr2052", 2), ("sr4472", 3))).clone('sr4472')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceMaxLfField.setStatus('mandatory')
wfBrSrInterfaceFilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("groupaddress", 1), ("destinationaddress", 2))).clone('groupaddress')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceFilterAddress.setStatus('mandatory')
wfBrSrBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 3), )
if mibBuilder.loadTexts: wfBrSrBridgeTable.setStatus('mandatory')
wfBrSrBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 3, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrBridgeId"))
if mibBuilder.loadTexts: wfBrSrBridgeEntry.setStatus('mandatory')
wfBrSrBridgeDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBridgeDelete.setStatus('mandatory')
wfBrSrBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBridgeId.setStatus('mandatory')
wfBrSrIpExplorerTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 4), )
if mibBuilder.loadTexts: wfBrSrIpExplorerTable.setStatus('mandatory')
wfBrSrIpExplorerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 4, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrIpExplorerAddr"))
if mibBuilder.loadTexts: wfBrSrIpExplorerEntry.setStatus('mandatory')
wfBrSrIpExplorerDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrIpExplorerDelete.setStatus('mandatory')
wfBrSrIpExplorerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpExplorerAddr.setStatus('mandatory')
wfBrSrIpExplorerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrIpExplorerProtocol.setStatus('obsolete')
wfBrSrIpEncapsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5), )
if mibBuilder.loadTexts: wfBrSrIpEncapsTable.setStatus('obsolete')
wfBrSrIpEncapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrIpEncapsRing"))
if mibBuilder.loadTexts: wfBrSrIpEncapsEntry.setStatus('obsolete')
wfBrSrIpEncapsRing = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsRing.setStatus('obsolete')
wfBrSrIpEncapsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsIpAddress.setStatus('obsolete')
wfBrSrIpEncapsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("learned", 3))).clone('learned')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsStatus.setStatus('obsolete')
wfBrSrTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6), )
if mibBuilder.loadTexts: wfBrSrTrafficFilterTable.setStatus('mandatory')
wfBrSrTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrTrafficFilterCircuit"), (0, "Wellfleet-SR-MIB", "wfBrSrTrafficFilterRuleNumber"), (0, "Wellfleet-SR-MIB", "wfBrSrTrafficFilterFragment"))
if mibBuilder.loadTexts: wfBrSrTrafficFilterEntry.setStatus('mandatory')
wfBrSrTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrTrafficFilterCreate.setStatus('mandatory')
wfBrSrTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrTrafficFilterEnable.setStatus('mandatory')
wfBrSrTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterStatus.setStatus('mandatory')
wfBrSrTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterCounter.setStatus('mandatory')
wfBrSrTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrTrafficFilterDefinition.setStatus('mandatory')
wfBrSrTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterReserved.setStatus('mandatory')
wfBrSrTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterCircuit.setStatus('mandatory')
wfBrSrTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterRuleNumber.setStatus('mandatory')
wfBrSrTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterFragment.setStatus('mandatory')
wfBrSrTrafficFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrTrafficFilterName.setStatus('mandatory')
wfBrSrEsRifTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7), )
if mibBuilder.loadTexts: wfBrSrEsRifTable.setStatus('mandatory')
wfBrSrEsRifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrEsRifCircuit"), (0, "Wellfleet-SR-MIB", "wfBrSrEsRifProtocol"), (0, "Wellfleet-SR-MIB", "wfBrSrEsRifMacAddr"))
if mibBuilder.loadTexts: wfBrSrEsRifEntry.setStatus('mandatory')
wfBrSrEsRifCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrEsRifCircuit.setStatus('mandatory')
wfBrSrEsRifProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrEsRifProtocol.setStatus('mandatory')
wfBrSrEsRifMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrEsRifMacAddr.setStatus('mandatory')
wfBrSrEsRifRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrEsRifRoute.setStatus('mandatory')
wfBrSrNbRifTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 8), )
if mibBuilder.loadTexts: wfBrSrNbRifTable.setStatus('mandatory')
wfBrSrNbRifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 8, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrNbName"))
if mibBuilder.loadTexts: wfBrSrNbRifEntry.setStatus('mandatory')
wfBrSrNbName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbName.setStatus('mandatory')
wfBrSrNbMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 8, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbMacAddress.setStatus('mandatory')
wfBrSrNbStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("learned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbStatic.setStatus('mandatory')
wfBrSrNbRif = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 8, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbRif.setStatus('mandatory')
wfBrSrNbRifCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbRifCacheHits.setStatus('mandatory')
wfBrSrNbQueryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 9), )
if mibBuilder.loadTexts: wfBrSrNbQueryTable.setStatus('mandatory')
wfBrSrNbQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 9, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrNbQueryMacAddress"), (0, "Wellfleet-SR-MIB", "wfBrSrNbRspCorrelator"))
if mibBuilder.loadTexts: wfBrSrNbQueryEntry.setStatus('mandatory')
wfBrSrNbQueryMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 9, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbQueryMacAddress.setStatus('mandatory')
wfBrSrNbRspCorrelator = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbRspCorrelator.setStatus('mandatory')
wfBrSrNbQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 9, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbQuery.setStatus('mandatory')
wfBrSrNbQueryFilteredFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbQueryFilteredFrames.setStatus('mandatory')
wfBrSrNbStaticTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 10), )
if mibBuilder.loadTexts: wfBrSrNbStaticTable.setStatus('mandatory')
wfBrSrNbStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 10, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrNbStaticName"))
if mibBuilder.loadTexts: wfBrSrNbStaticEntry.setStatus('mandatory')
wfBrSrNbStaticDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrNbStaticDelete.setStatus('mandatory')
wfBrSrNbStaticDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrNbStaticDisable.setStatus('mandatory')
wfBrSrNbStaticState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('invalid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbStaticState.setStatus('mandatory')
wfBrSrNbStaticName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrNbStaticName.setStatus('mandatory')
wfBrSrNbStaticMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 10, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrNbStaticMacAddress.setStatus('mandatory')
wfBrSrNbStaticRif = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 10, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrNbStaticRif.setStatus('mandatory')
wfBrXb = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11))
wfBrXbBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbBaseDelete.setStatus('mandatory')
wfBrXbBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbBaseDisable.setStatus('mandatory')
wfBrXbBaseEthernetLanId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbBaseEthernetLanId.setStatus('mandatory')
wfBrXbBaseMaxRifEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 4), Integer32().clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbBaseMaxRifEntries.setStatus('mandatory')
wfBrXbBaseCurrentRifEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrXbBaseCurrentRifEntries.setStatus('mandatory')
wfBrXbBaseAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 6), Integer32().clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbBaseAgeTime.setStatus('mandatory')
wfBrXbBaseBcastAddressConversionDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbBaseBcastAddressConversionDisable.setStatus('mandatory')
wfBrXbBaseDefaultMode = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("ieee8023", 2))).clone('ethernet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbBaseDefaultMode.setStatus('mandatory')
wfBrXbBaseBcastMode = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("are", 1), ("ste", 2))).clone('ste')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbBaseBcastMode.setStatus('mandatory')
wfBrXbBaseSaps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbBaseSaps.setStatus('mandatory')
wfBrXbFddiBridge = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 11, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbFddiBridge.setStatus('mandatory')
wfBrXbAddressMapTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 12), )
if mibBuilder.loadTexts: wfBrXbAddressMapTable.setStatus('mandatory')
wfBrXbAddressMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 12, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrXbAddressMapEthernetAddress"))
if mibBuilder.loadTexts: wfBrXbAddressMapEntry.setStatus('mandatory')
wfBrXbAddressMapDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbAddressMapDelete.setStatus('mandatory')
wfBrXbAddressMapEthernetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 12, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrXbAddressMapEthernetAddress.setStatus('mandatory')
wfBrXbAddressMapTokenRingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 12, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbAddressMapTokenRingAddress.setStatus('mandatory')
wfBrXbRifTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 13), )
if mibBuilder.loadTexts: wfBrXbRifTable.setStatus('mandatory')
wfBrXbRifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 13, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrXbRifMacAddress"))
if mibBuilder.loadTexts: wfBrXbRifEntry.setStatus('mandatory')
wfBrXbRifMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 13, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrXbRifMacAddress.setStatus('mandatory')
wfBrXbRifField = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 13, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrXbRifField.setStatus('mandatory')
wfBrXbStationTypeTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 14), )
if mibBuilder.loadTexts: wfBrXbStationTypeTable.setStatus('mandatory')
wfBrXbStationTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 14, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrXbStationTypeEthernetAddress"))
if mibBuilder.loadTexts: wfBrXbStationTypeEntry.setStatus('mandatory')
wfBrXbStationTypeDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbStationTypeDelete.setStatus('mandatory')
wfBrXbStationTypeEthernetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 14, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrXbStationTypeEthernetAddress.setStatus('mandatory')
wfBrXbStationTypeIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("ieee8023", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrXbStationTypeIndicator.setStatus('mandatory')
wfBrSrIpEncapsRBTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 15), )
if mibBuilder.loadTexts: wfBrSrIpEncapsRBTable.setStatus('mandatory')
wfBrSrIpEncapsRBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 15, 1), ).setIndexNames((0, "Wellfleet-SR-MIB", "wfBrSrIpEncapsRBRing"), (0, "Wellfleet-SR-MIB", "wfBrSrIpEncapsRBBridge"))
if mibBuilder.loadTexts: wfBrSrIpEncapsRBEntry.setStatus('mandatory')
wfBrSrIpEncapsRBRing = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsRBRing.setStatus('mandatory')
wfBrSrIpEncapsRBBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsRBBridge.setStatus('mandatory')
wfBrSrIpEncapsRBIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 15, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsRBIpAddress.setStatus('mandatory')
wfBrSrIpEncapsRBStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("learned", 3))).clone('learned')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsRBStatus.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-SR-MIB", wfBrSrTrafficFilterFragment=wfBrSrTrafficFilterFragment, wfBrSrBaseNbRifCacheMisses=wfBrSrBaseNbRifCacheMisses, wfBrSrBaseStpEnable=wfBrSrBaseStpEnable, wfBrSrInterfaceStpTranslationDisable=wfBrSrInterfaceStpTranslationDisable, wfBrSrInterfaceStpDesignatedBridge=wfBrSrInterfaceStpDesignatedBridge, wfBrSrIpEncapsRBIpAddress=wfBrSrIpEncapsRBIpAddress, wfBrSrInterfaceDropInvalidRings=wfBrSrInterfaceDropInvalidRings, wfBrSrInterfaceStpDesignatedRoot=wfBrSrInterfaceStpDesignatedRoot, wfBrSrInterfaceTable=wfBrSrInterfaceTable, wfBrSrBridgeTable=wfBrSrBridgeTable, wfBrXbBaseDisable=wfBrXbBaseDisable, wfBrSrBaseNbMaximumRifEntries=wfBrSrBaseNbMaximumRifEntries, wfBrSrBaseIpMtuSize=wfBrSrBaseIpMtuSize, wfBrSrBaseStpHoldTime=wfBrSrBaseStpHoldTime, wfBrSrNbRifCacheHits=wfBrSrNbRifCacheHits, wfBrSrIpExplorerTable=wfBrSrIpExplorerTable, wfBrSrNbStaticRif=wfBrSrNbStaticRif, wfBrSrBridgeDelete=wfBrSrBridgeDelete, wfBrSrInterfaceMaxRds=wfBrSrInterfaceMaxRds, wfBrSrBaseIpInReceives=wfBrSrBaseIpInReceives, wfBrSrEsRifRoute=wfBrSrEsRifRoute, wfBrSrTrafficFilterTable=wfBrSrTrafficFilterTable, wfBrSrBaseIpNetworkRingId=wfBrSrBaseIpNetworkRingId, wfBrXbStationTypeEthernetAddress=wfBrXbStationTypeEthernetAddress, wfBrSrBaseStpMaxAge=wfBrSrBaseStpMaxAge, wfBrSrInterfaceNbDatagramRifCacheDisable=wfBrSrInterfaceNbDatagramRifCacheDisable, wfBrXbBaseBcastAddressConversionDisable=wfBrXbBaseBcastAddressConversionDisable, wfBrSr=wfBrSr, wfBrSrInterfaceStpState=wfBrSrInterfaceStpState, wfBrSrIpEncapsRBEntry=wfBrSrIpEncapsRBEntry, wfBrSrInterfaceBlockOutSte=wfBrSrInterfaceBlockOutSte, wfBrSrBaseNbMaximumQueryEntries=wfBrSrBaseNbMaximumQueryEntries, wfBrXbStationTypeEntry=wfBrXbStationTypeEntry, wfBrSrBaseNbClientRifCacheDisable=wfBrSrBaseNbClientRifCacheDisable, wfBrSrBaseStpBridgeHelloTime=wfBrSrBaseStpBridgeHelloTime, wfBrSrNbStatic=wfBrSrNbStatic, wfBrSrBaseNbQueryCacheDisable=wfBrSrBaseNbQueryCacheDisable, wfBrSrNbRifEntry=wfBrSrNbRifEntry, wfBrSrBaseStpDesignatedRoot=wfBrSrBaseStpDesignatedRoot, wfBrSrBaseStpBridgeMaxAge=wfBrSrBaseStpBridgeMaxAge, wfBrXbAddressMapTokenRingAddress=wfBrXbAddressMapTokenRingAddress, wfBrSrInterfaceRing=wfBrSrInterfaceRing, wfBrSrBaseInternalLanId=wfBrSrBaseInternalLanId, wfBrXbAddressMapTable=wfBrXbAddressMapTable, wfBrSrBaseStpBridgeID=wfBrSrBaseStpBridgeID, wfBrSrBaseStpRootCost=wfBrSrBaseStpRootCost, wfBrSrNbQueryEntry=wfBrSrNbQueryEntry, wfBrSrInterfaceEntry=wfBrSrInterfaceEntry, wfBrSrNbStaticMacAddress=wfBrSrNbStaticMacAddress, wfBrSrEsRifMacAddr=wfBrSrEsRifMacAddr, wfBrSrBaseDelete=wfBrSrBaseDelete, wfBrSrInterfaceBlockInSte=wfBrSrInterfaceBlockInSte, wfBrSrNbMacAddress=wfBrSrNbMacAddress, wfBrSrBaseStpForwardDelay=wfBrSrBaseStpForwardDelay, wfBrSrNbRspCorrelator=wfBrSrNbRspCorrelator, wfBrXbBaseMaxRifEntries=wfBrXbBaseMaxRifEntries, wfBrSrBaseNbNameQueryCacheDisable=wfBrSrBaseNbNameQueryCacheDisable, wfBrSrBaseNbRifCacheHits=wfBrSrBaseNbRifCacheHits, wfBrSrTrafficFilterStatus=wfBrSrTrafficFilterStatus, wfBrSrBaseNbRifMibDisable=wfBrSrBaseNbRifMibDisable, wfBrSrBaseNbQueryMibDisable=wfBrSrBaseNbQueryMibDisable, wfBrSrEsRifEntry=wfBrSrEsRifEntry, wfBrXbStationTypeDelete=wfBrXbStationTypeDelete, wfBrSrTrafficFilterName=wfBrSrTrafficFilterName, wfBrSrInterfaceStpDesignatedCost=wfBrSrInterfaceStpDesignatedCost, wfBrSrNbQueryMacAddress=wfBrSrNbQueryMacAddress, wfBrSrTrafficFilterDefinition=wfBrSrTrafficFilterDefinition, wfBrSrBridgeId=wfBrSrBridgeId, wfBrSrBaseStpRootPort=wfBrSrBaseStpRootPort, wfBrSrBaseNb15CharacterDisable=wfBrSrBaseNb15CharacterDisable, wfBrSrInterfaceOutIpFrames=wfBrSrInterfaceOutIpFrames, wfBrSrNbStaticTable=wfBrSrNbStaticTable, wfBrSrBaseAreHopCntLimit=wfBrSrBaseAreHopCntLimit, wfBrSrTrafficFilterCreate=wfBrSrTrafficFilterCreate, wfBrSrNbStaticName=wfBrSrNbStaticName, wfBrXbBaseEthernetLanId=wfBrXbBaseEthernetLanId, wfBrSrInterfaceMaxLfField=wfBrSrInterfaceMaxLfField, wfBrSrNbQueryFilteredFrames=wfBrSrNbQueryFilteredFrames, wfBrXbBaseDefaultMode=wfBrXbBaseDefaultMode, wfBrSrBaseNbQueryAgeTime=wfBrSrBaseNbQueryAgeTime, wfBrSrInterfaceDelete=wfBrSrInterfaceDelete, wfBrXbStationTypeTable=wfBrXbStationTypeTable, wfBrXbBaseBcastMode=wfBrXbBaseBcastMode, wfBrSrBaseStpProtocolSpecification=wfBrSrBaseStpProtocolSpecification, wfBrSrInterfaceDropInvalidRcs=wfBrSrInterfaceDropInvalidRcs, wfBrXbRifTable=wfBrXbRifTable, wfBrSrBaseStpTopChanges=wfBrSrBaseStpTopChanges, wfBrSrIpEncapsRBTable=wfBrSrIpEncapsRBTable, wfBrSrBaseIpEncapsDisable=wfBrSrBaseIpEncapsDisable, wfBrSrTrafficFilterReserved=wfBrSrTrafficFilterReserved, wfBrXbBaseCurrentRifEntries=wfBrXbBaseCurrentRifEntries, wfBrSrNbStaticDisable=wfBrSrNbStaticDisable, wfBrSrTrafficFilterEntry=wfBrSrTrafficFilterEntry, wfBrXbBaseSaps=wfBrXbBaseSaps, wfBrSrInterfaceXbDropFrames=wfBrSrInterfaceXbDropFrames, wfBrSrTrafficFilterEnable=wfBrSrTrafficFilterEnable, wfBrXbFddiBridge=wfBrXbFddiBridge, wfBrSrIpEncapsIpAddress=wfBrSrIpEncapsIpAddress, wfBrSrInterfaceNbServerRifCacheDisable=wfBrSrInterfaceNbServerRifCacheDisable, wfBrSrBaseBridgeId=wfBrSrBaseBridgeId, wfBrSrInterfaceCircuit=wfBrSrInterfaceCircuit, wfBrSrInterfaceStpPktsXmitd=wfBrSrInterfaceStpPktsXmitd, wfBrSrTrafficFilterRuleNumber=wfBrSrTrafficFilterRuleNumber, wfBrSrNbStaticState=wfBrSrNbStaticState, wfBrXbRifField=wfBrXbRifField, wfBrSrEsRifProtocol=wfBrSrEsRifProtocol, wfBrSrInterfaceStpDesignatedPort=wfBrSrInterfaceStpDesignatedPort, wfBrSrBaseStpTimeSinceTopologyChange=wfBrSrBaseStpTimeSinceTopologyChange, wfBrXbRifEntry=wfBrXbRifEntry, wfBrSourceRouting=wfBrSourceRouting, wfBrSrIpEncapsEntry=wfBrSrIpEncapsEntry, wfBrSrBaseNbServerRifCacheDisable=wfBrSrBaseNbServerRifCacheDisable, wfBrSrInterfaceDisable=wfBrSrInterfaceDisable, wfBrSrBaseGroupLanId=wfBrSrBaseGroupLanId, wfBrSrBaseNbRifDroppedFrames=wfBrSrBaseNbRifDroppedFrames, wfBrSrBaseNbCurrentQueryEntries=wfBrSrBaseNbCurrentQueryEntries, wfBrSrBaseStpHelloTime=wfBrSrBaseStpHelloTime, wfBrSrInterfaceIpAddress=wfBrSrInterfaceIpAddress, wfBrSrBridgeEntry=wfBrSrBridgeEntry, wfBrSrBaseStpState=wfBrSrBaseStpState, wfBrSrInterfaceFrBcastDlci=wfBrSrInterfaceFrBcastDlci, wfBrSrIpExplorerEntry=wfBrSrIpExplorerEntry, wfBrSrEsRifCircuit=wfBrSrEsRifCircuit, wfBrSrNbStaticDelete=wfBrSrNbStaticDelete, wfBrSrIpEncapsTable=wfBrSrIpEncapsTable, wfBrXbRifMacAddress=wfBrXbRifMacAddress, wfBrSrInterfaceStpForwardTransitions=wfBrSrInterfaceStpForwardTransitions, wfBrSrNbQueryTable=wfBrSrNbQueryTable, wfBrXbBaseAgeTime=wfBrXbBaseAgeTime, wfBrSrNbRifTable=wfBrSrNbRifTable, wfBrXbBaseDelete=wfBrXbBaseDelete, wfBrSrNbStaticEntry=wfBrSrNbStaticEntry, wfBrSrBaseNbRifAgeTime=wfBrSrBaseNbRifAgeTime, wfBrSrInterfaceNbClientRifCacheDisable=wfBrSrInterfaceNbClientRifCacheDisable, wfBrSrInterfaceNbQueryCacheDisable=wfBrSrInterfaceNbQueryCacheDisable, wfBrXb=wfBrXb, wfBrSrInterfaceDropSrfs=wfBrSrInterfaceDropSrfs, wfBrSrBaseNbQueryFilteredFrames=wfBrSrBaseNbQueryFilteredFrames, wfBrSrBaseState=wfBrSrBaseState, wfBrSrIpEncapsRBBridge=wfBrSrIpEncapsRBBridge, wfBrSrInterfaceOutFrames=wfBrSrInterfaceOutFrames, wfBrSrEsRifTable=wfBrSrEsRifTable, wfBrSrInterfaceStpPktsRcvd=wfBrSrInterfaceStpPktsRcvd, wfBrXbStationTypeIndicator=wfBrXbStationTypeIndicator, wfBrSrInterfaceBlockIp=wfBrSrInterfaceBlockIp, wfBrSrInterfaceFilterAddress=wfBrSrInterfaceFilterAddress, wfBrSrBaseStpBridgeForwardDelay=wfBrSrBaseStpBridgeForwardDelay, wfBrSrInterfaceInFrames=wfBrSrInterfaceInFrames, wfBrSrBaseNbCurrentRifEntries=wfBrSrBaseNbCurrentRifEntries, wfBrSrInterfaceStpPathCost=wfBrSrInterfaceStpPathCost, wfBrSrInterfaceState=wfBrSrInterfaceState, wfBrSrInterfaceStpMultiCastAddr=wfBrSrInterfaceStpMultiCastAddr, wfBrSrIpEncapsStatus=wfBrSrIpEncapsStatus, wfBrSrNbName=wfBrSrNbName, wfBrSrIpExplorerDelete=wfBrSrIpExplorerDelete, wfBrSrIpExplorerAddr=wfBrSrIpExplorerAddr, wfBrSrNbQuery=wfBrSrNbQuery, wfBrSrIpEncapsRBStatus=wfBrSrIpEncapsRBStatus, wfBrXbAddressMapDelete=wfBrXbAddressMapDelete, wfBrSrBaseIpSeqErrors=wfBrSrBaseIpSeqErrors, wfBrSrBaseNbDatagramRifCacheDisable=wfBrSrBaseNbDatagramRifCacheDisable, wfBrSrIpEncapsRing=wfBrSrIpEncapsRing, wfBrXbAddressMapEthernetAddress=wfBrXbAddressMapEthernetAddress, wfBrSrBaseNbRifHashEntries=wfBrSrBaseNbRifHashEntries, wfBrSrIpEncapsRBRing=wfBrSrIpEncapsRBRing, wfBrSrInterfaceXbInFrames=wfBrSrInterfaceXbInFrames, wfBrSrInterfaceEncapsFormat=wfBrSrInterfaceEncapsFormat, wfBrSrNbRif=wfBrSrNbRif, wfBrSrIpExplorerProtocol=wfBrSrIpExplorerProtocol, wfBrSrBaseDisable=wfBrSrBaseDisable, wfBrSrTrafficFilterCounter=wfBrSrTrafficFilterCounter, wfBrXbAddressMapEntry=wfBrXbAddressMapEntry, wfBrSrTrafficFilterCircuit=wfBrSrTrafficFilterCircuit, wfBrSrInterfaceStpEnable=wfBrSrInterfaceStpEnable)
