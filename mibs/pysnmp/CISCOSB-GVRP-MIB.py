#
# PySNMP MIB module CISCOSB-GVRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-GVRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:06:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, NotificationType, Unsigned32, Counter32, ModuleIdentity, iso, ObjectIdentity, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "NotificationType", "Unsigned32", "Counter32", "ModuleIdentity", "iso", "ObjectIdentity", "IpAddress", "Counter64")
TruthValue, TextualConvention, TimeInterval, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "TimeInterval", "DisplayString")
rlGvrp = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64))
rlGvrp.setRevisions(('2007-01-02 00:00',))
if mibBuilder.loadTexts: rlGvrp.setLastUpdated('200701020000Z')
if mibBuilder.loadTexts: rlGvrp.setOrganization('Cisco Small Business')
rlPortGvrpTimersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 1), )
if mibBuilder.loadTexts: rlPortGvrpTimersTable.setStatus('current')
rlPortGvrpTimersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 1, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: rlPortGvrpTimersEntry.setStatus('current')
rlPortGvrpJoinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 1, 1, 1), TimeInterval().clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortGvrpJoinTime.setStatus('current')
rlPortGvrpLeaveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 1, 1, 2), TimeInterval().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortGvrpLeaveTime.setStatus('current')
rlPortGvrpLeaveAllTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 1, 1, 3), TimeInterval().clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortGvrpLeaveAllTime.setStatus('current')
rlPortGvrpOverrideGarp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 1, 1, 4), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortGvrpOverrideGarp.setStatus('current')
rlGvrpSupported = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlGvrpSupported.setStatus('current')
rlGvrpMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlGvrpMibVersion.setStatus('current')
rlPortGvrpStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4), )
if mibBuilder.loadTexts: rlPortGvrpStatisticsTable.setStatus('current')
rlPortGvrpStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: rlPortGvrpStatisticsEntry.setStatus('current')
rlPortGvrpStatisticsRJE = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsRJE.setStatus('current')
rlPortGvrpStatisticsRJIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsRJIn.setStatus('current')
rlPortGvrpStatisticsREmp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsREmp.setStatus('current')
rlPortGvrpStatisticsRLIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsRLIn.setStatus('current')
rlPortGvrpStatisticsRLE = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsRLE.setStatus('current')
rlPortGvrpStatisticsRLA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsRLA.setStatus('current')
rlPortGvrpStatisticsSJE = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsSJE.setStatus('current')
rlPortGvrpStatisticsSJIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsSJIn.setStatus('current')
rlPortGvrpStatisticsSEmp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsSEmp.setStatus('current')
rlPortGvrpStatisticsSLIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsSLIn.setStatus('current')
rlPortGvrpStatisticsSLE = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsSLE.setStatus('current')
rlPortGvrpStatisticsSLA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpStatisticsSLA.setStatus('current')
rlPortGvrpStatisticsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("passive", 2))).clone('passive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortGvrpStatisticsClear.setStatus('current')
rlPortGvrpErrorStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 5), )
if mibBuilder.loadTexts: rlPortGvrpErrorStatisticsTable.setStatus('current')
rlPortGvrpErrorStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 5, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: rlPortGvrpErrorStatisticsEntry.setStatus('current')
rlPortGvrpErrorStatisticsInvProt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpErrorStatisticsInvProt.setStatus('current')
rlPortGvrpErrorStatisticsInvAtyp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpErrorStatisticsInvAtyp.setStatus('current')
rlPortGvrpErrorStatisticsInvAval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpErrorStatisticsInvAval.setStatus('current')
rlPortGvrpErrorStatisticsInvPlen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpErrorStatisticsInvPlen.setStatus('current')
rlPortGvrpErrorStatisticsInvAlen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpErrorStatisticsInvAlen.setStatus('current')
rlPortGvrpErrorStatisticsInvEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortGvrpErrorStatisticsInvEvent.setStatus('current')
rlPortGvrpErrorStatisticsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("passive", 2))).clone('passive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortGvrpErrorStatisticsClear.setStatus('current')
rlPortGvrpApplicantStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 6), )
if mibBuilder.loadTexts: rlPortGvrpApplicantStatusTable.setStatus('current')
rlPortGvrpApplicantStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 6, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: rlPortGvrpApplicantStatusEntry.setStatus('current')
rlPortGvrpApplicantStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("participant", 1), ("nonParticipant", 2))).clone('participant')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortGvrpApplicantStatusValue.setStatus('current')
rlPortGvrpRegistrationModeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 8), )
if mibBuilder.loadTexts: rlPortGvrpRegistrationModeTable.setStatus('current')
rlPortGvrpRegistrationModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 8, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: rlPortGvrpRegistrationModeEntry.setStatus('current')
rlPortGvrpRegistrationModeForbidden = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 64, 8, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortGvrpRegistrationModeForbidden.setStatus('current')
mibBuilder.exportSymbols("CISCOSB-GVRP-MIB", rlPortGvrpErrorStatisticsTable=rlPortGvrpErrorStatisticsTable, rlPortGvrpStatisticsSLE=rlPortGvrpStatisticsSLE, rlPortGvrpApplicantStatusValue=rlPortGvrpApplicantStatusValue, rlPortGvrpErrorStatisticsInvAval=rlPortGvrpErrorStatisticsInvAval, rlPortGvrpLeaveTime=rlPortGvrpLeaveTime, rlPortGvrpStatisticsEntry=rlPortGvrpStatisticsEntry, rlPortGvrpJoinTime=rlPortGvrpJoinTime, rlPortGvrpLeaveAllTime=rlPortGvrpLeaveAllTime, rlPortGvrpStatisticsSJIn=rlPortGvrpStatisticsSJIn, rlPortGvrpTimersTable=rlPortGvrpTimersTable, rlPortGvrpErrorStatisticsClear=rlPortGvrpErrorStatisticsClear, rlPortGvrpApplicantStatusEntry=rlPortGvrpApplicantStatusEntry, rlPortGvrpRegistrationModeEntry=rlPortGvrpRegistrationModeEntry, rlPortGvrpErrorStatisticsInvEvent=rlPortGvrpErrorStatisticsInvEvent, rlPortGvrpApplicantStatusTable=rlPortGvrpApplicantStatusTable, rlPortGvrpErrorStatisticsInvAlen=rlPortGvrpErrorStatisticsInvAlen, rlPortGvrpStatisticsRLE=rlPortGvrpStatisticsRLE, rlPortGvrpStatisticsRLA=rlPortGvrpStatisticsRLA, rlPortGvrpStatisticsRJE=rlPortGvrpStatisticsRJE, rlPortGvrpErrorStatisticsInvProt=rlPortGvrpErrorStatisticsInvProt, rlPortGvrpRegistrationModeForbidden=rlPortGvrpRegistrationModeForbidden, rlPortGvrpStatisticsSJE=rlPortGvrpStatisticsSJE, rlGvrpSupported=rlGvrpSupported, rlPortGvrpRegistrationModeTable=rlPortGvrpRegistrationModeTable, rlPortGvrpErrorStatisticsEntry=rlPortGvrpErrorStatisticsEntry, rlPortGvrpStatisticsClear=rlPortGvrpStatisticsClear, rlPortGvrpStatisticsSEmp=rlPortGvrpStatisticsSEmp, rlPortGvrpErrorStatisticsInvAtyp=rlPortGvrpErrorStatisticsInvAtyp, rlGvrp=rlGvrp, rlGvrpMibVersion=rlGvrpMibVersion, rlPortGvrpOverrideGarp=rlPortGvrpOverrideGarp, rlPortGvrpStatisticsTable=rlPortGvrpStatisticsTable, rlPortGvrpStatisticsRLIn=rlPortGvrpStatisticsRLIn, rlPortGvrpStatisticsSLA=rlPortGvrpStatisticsSLA, rlPortGvrpStatisticsRJIn=rlPortGvrpStatisticsRJIn, rlPortGvrpStatisticsSLIn=rlPortGvrpStatisticsSLIn, rlPortGvrpTimersEntry=rlPortGvrpTimersEntry, rlPortGvrpStatisticsREmp=rlPortGvrpStatisticsREmp, rlPortGvrpErrorStatisticsInvPlen=rlPortGvrpErrorStatisticsInvPlen, PYSNMP_MODULE_ID=rlGvrp)
