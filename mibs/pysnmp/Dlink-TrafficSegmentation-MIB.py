#
# PySNMP MIB module Dlink-TrafficSegmentation-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Dlink-TrafficSegmentation-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:43:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
rnd, = mibBuilder.importSymbols("DLINK-3100-MIB", "rnd")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, Counter64, ModuleIdentity, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, Gauge32, MibIdentifier, TimeTicks, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Counter64", "ModuleIdentity", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "Gauge32", "MibIdentifier", "TimeTicks", "IpAddress", "Bits")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
rlTrafficSeg = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138))
rlTrafficSeg.setRevisions(('2008-05-03 12:34',))
if mibBuilder.loadTexts: rlTrafficSeg.setLastUpdated('200805031234Z')
if mibBuilder.loadTexts: rlTrafficSeg.setOrganization('Dlink, Inc.')
rlTrafficSegConfigTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 1), )
if mibBuilder.loadTexts: rlTrafficSegConfigTable.setStatus('current')
rlTrafficSegConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 1, 1), ).setIndexNames((0, "Dlink-TrafficSegmentation-MIB", "rlTrafficSegConfigIndex"))
if mibBuilder.loadTexts: rlTrafficSegConfigEntry.setStatus('current')
rlTrafficSegConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: rlTrafficSegConfigIndex.setStatus('current')
rlTrafficSegConfigIngressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 1, 1, 2), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTrafficSegConfigIngressPorts.setStatus('current')
rlTrafficSegConfigEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 1, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTrafficSegConfigEgressPorts.setStatus('current')
rlTrafficSegConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlTrafficSegConfigRowStatus.setStatus('current')
rlTrafficSegTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 2), )
if mibBuilder.loadTexts: rlTrafficSegTable.setStatus('current')
rlTrafficSegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 2, 1), ).setIndexNames((0, "Dlink-TrafficSegmentation-MIB", "rlTrafficSegIndex"))
if mibBuilder.loadTexts: rlTrafficSegEntry.setStatus('current')
rlTrafficSegIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: rlTrafficSegIndex.setStatus('current')
rlTrafficSegIngressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 2, 1, 2), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTrafficSegIngressPorts.setStatus('current')
rlTrafficSegEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 2, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTrafficSegEgressPorts.setStatus('current')
rlTrafficSegRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 138, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlTrafficSegRowStatus.setStatus('current')
mibBuilder.exportSymbols("Dlink-TrafficSegmentation-MIB", rlTrafficSegTable=rlTrafficSegTable, rlTrafficSegIngressPorts=rlTrafficSegIngressPorts, rlTrafficSegRowStatus=rlTrafficSegRowStatus, rlTrafficSegConfigEgressPorts=rlTrafficSegConfigEgressPorts, rlTrafficSegConfigIndex=rlTrafficSegConfigIndex, rlTrafficSegEgressPorts=rlTrafficSegEgressPorts, rlTrafficSegConfigTable=rlTrafficSegConfigTable, rlTrafficSeg=rlTrafficSeg, rlTrafficSegConfigRowStatus=rlTrafficSegConfigRowStatus, PYSNMP_MODULE_ID=rlTrafficSeg, rlTrafficSegConfigEntry=rlTrafficSegConfigEntry, rlTrafficSegEntry=rlTrafficSegEntry, rlTrafficSegConfigIngressPorts=rlTrafficSegConfigIngressPorts, rlTrafficSegIndex=rlTrafficSegIndex)
