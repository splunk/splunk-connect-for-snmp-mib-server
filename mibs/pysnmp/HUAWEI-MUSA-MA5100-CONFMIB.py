#
# PySNMP MIB module HUAWEI-MUSA-MA5100-CONFMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MUSA-MA5100-CONFMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:35:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
musa, = mibBuilder.importSymbols("HUAWEI-MIB", "musa")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, iso, MibIdentifier, Integer32, Gauge32, NotificationType, ModuleIdentity, ObjectIdentity, Counter64, Unsigned32, Bits, Counter32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "MibIdentifier", "Integer32", "Gauge32", "NotificationType", "ModuleIdentity", "ObjectIdentity", "Counter64", "Unsigned32", "Bits", "Counter32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

hwMa5100Mib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5))
hwMusaSysMib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1))
hwMusaEndOfMib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 100))
hwMusaSlotGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6))
hwMusaFrame = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2))
hwMusaSlot = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3))
hwMusaFrameNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrameNumber.setStatus('mandatory')
hwMusaFrameConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2), )
if mibBuilder.loadTexts: hwMusaFrameConfTable.setStatus('mandatory')
hwMusaFrameConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaShelfIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"))
if mibBuilder.loadTexts: hwMusaFrameConfEntry.setStatus('mandatory')
hwMusaFrameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMusaFrameIndex.setStatus('mandatory')
hwMusaSlotConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2), )
if mibBuilder.loadTexts: hwMusaSlotConfTable.setStatus('mandatory')
hwMusaSlotConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"))
if mibBuilder.loadTexts: hwMusaSlotConfEntry.setStatus('mandatory')
hwMusaSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: hwMusaSlotIndex.setStatus('mandatory')
hwMusaRegionPvcConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15), )
if mibBuilder.loadTexts: hwMusaRegionPvcConfTable.setStatus('mandatory')
hwMusaRegionPvcConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaVlanId"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaVlanIciIndex"))
if mibBuilder.loadTexts: hwMusaRegionPvcConfEntry.setStatus('mandatory')
hwMusaVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaVlanId.setStatus('mandatory')
hwMusaVlanIciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaVlanIciIndex.setStatus('mandatory')
hwMusaAdlFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAdlFrameId.setStatus('mandatory')
hwMusaAdlSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAdlSlotId.setStatus('mandatory')
hwMusaAdlPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAdlPortId.setStatus('mandatory')
hwMusaAdlVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaAdlVpi.setStatus('mandatory')
hwMusaAdlVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaAdlVci.setStatus('mandatory')
hwMusaToLanTrafficId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaToLanTrafficId.setStatus('mandatory')
hwMusaFromLanTrafficId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFromLanTrafficId.setStatus('mandatory')
hwMusaAdlPortOperat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAdlPortOperat.setStatus('mandatory')
hwMusaAllPvcConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22), )
if mibBuilder.loadTexts: hwMusaAllPvcConfTable.setStatus('mandatory')
hwMusaAllPvcConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaTypeOfPvcPvpindex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaCidIndex"))
if mibBuilder.loadTexts: hwMusaAllPvcConfEntry.setStatus('mandatory')
hwMusaCidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaCidIndex.setStatus('mandatory')
hwMusaSrcFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcFrameId.setStatus('mandatory')
hwMuasSrcSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMuasSrcSlotId.setStatus('mandatory')
hwMusaSrcPortVlanVccId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcPortVlanVccId.setStatus('mandatory')
hwMusaSrcBoardVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcBoardVpi.setStatus('mandatory')
hwMusaSrcBoardVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcBoardVci.setStatus('mandatory')
hwMusaSrcUpcEpdPpd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcUpcEpdPpd.setStatus('mandatory')
hwMusaDestFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestFrameId.setStatus('mandatory')
hwMusaDestSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestSlotId.setStatus('mandatory')
hwMusaDestPortVlanVccId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestPortVlanVccId.setStatus('mandatory')
hwMusaDestBoardVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestBoardVpi.setStatus('mandatory')
hwMusaDestBoardVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestBoardVci.setStatus('mandatory')
hwMusaDestUpcEpdPpd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestUpcEpdPpd.setStatus('mandatory')
hwMusaSrcToDestTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcToDestTraffic.setStatus('mandatory')
hwMusaDestToSrcTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestToSrcTraffic.setStatus('mandatory')
hwMusaAllPvcOperater = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAllPvcOperater.setStatus('mandatory')
hwMusaTypeOfPvcPvpindex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("pvc", 0), ("pvp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaTypeOfPvcPvpindex.setStatus('mandatory')
hwMusaPvcPvpState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("invalid", 2), ("delete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPvcPvpState.setStatus('mandatory')
hwMusaAdlb = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6))
hwMusaAdlbBoard = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1))
hwMusaAdlbChipset = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 2))
hwMusaAdlbConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3))
hwMusaAdlbPfm = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4))
hwMusaAdlbTest = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 5))
hwMusaAdlbBoardInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1), )
if mibBuilder.loadTexts: hwMusaAdlbBoardInfoTable.setStatus('mandatory')
hwMusaAdlbBoardInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"))
if mibBuilder.loadTexts: hwMusaAdlbBoardInfoEntry.setStatus('mandatory')
adlbProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbProductId.setStatus('mandatory')
adlbCustomId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("isdn", 1), ("pots", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbCustomId.setStatus('mandatory')
adlbAtucRomSwVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucRomSwVer.setStatus('mandatory')
adlbAtucRomSwBuildDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucRomSwBuildDate.setStatus('mandatory')
adlbAtucOamSwVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucOamSwVer.setStatus('mandatory')
adlbAtucOamSwBuildDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucOamSwBuildDate.setStatus('mandatory')
adlbByDiagCodeVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbByDiagCodeVer.setStatus('mandatory')
adlbByModemCodeVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbByModemCodeVer.setStatus('mandatory')
adlbAtucVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucVendorId.setStatus('mandatory')
adlbAtucVersionNo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucVersionNo.setStatus('mandatory')
adlbItuCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbItuCountryCode.setStatus('mandatory')
adlbItuProviderCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbItuProviderCode.setStatus('mandatory')
hwMusaAdlbChipsetMtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 2, 1), )
if mibBuilder.loadTexts: hwMusaAdlbChipsetMtTable.setStatus('mandatory')
hwMusaAdlbChipsetMtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 2, 1, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbChipsetIndex"))
if mibBuilder.loadTexts: hwMusaAdlbChipsetMtEntry.setStatus('mandatory')
adlbChipsetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: adlbChipsetIndex.setStatus('mandatory')
adlbChipsetOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 2, 1, 1, 2), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: adlbChipsetOper.setStatus('mandatory')
hwMusaAdlbPortDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 1), )
if mibBuilder.loadTexts: hwMusaAdlbPortDeviceTable.setStatus('mandatory')
hwMusaAdlbPortDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 1, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbPortDeviceEntry.setStatus('mandatory')
adlbPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: adlbPortIndex.setStatus('mandatory')
adlbAturVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturVendorId.setStatus('mandatory')
adlbAturVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturVersion.setStatus('mandatory')
adlbAturCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCountryCode.setStatus('mandatory')
adlbAturProviderCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturProviderCode.setStatus('mandatory')
adlbAturAdslCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturAdslCapability.setStatus('mandatory')
hwMusaAdlbPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 2), )
if mibBuilder.loadTexts: hwMusaAdlbPortTable.setStatus('mandatory')
hwMusaAdlbPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbPortEntry.setStatus('mandatory')
adlbPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("active", 0), ("deactive", 1), ("bad", 2), ("activating", 3), ("deactivating", 4), ("block", 5), ("unblock", 6), ("other", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbPortState.setStatus('mandatory')
adlbPortTrainStandard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("dmt", 1), ("glite", 2), ("t1413", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbPortTrainStandard.setStatus('mandatory')
adlbPortOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("deact", 0), ("block", 1), ("unblock", 2), ("clearCellStat", 3)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: adlbPortOper.setStatus('mandatory')
adlbPortTemplateId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortTemplateId.setStatus('mandatory')
adlbPortTxCell = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbPortTxCell.setStatus('mandatory')
adlbPortRxCell = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbPortRxCell.setStatus('mandatory')
hwMusaAdlbPortActTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3), )
if mibBuilder.loadTexts: hwMusaAdlbPortActTable.setStatus('mandatory')
hwMusaAdlbPortActEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortTemplateId"))
if mibBuilder.loadTexts: hwMusaAdlbPortActEntry.setStatus('mandatory')
adlbIfConfigSetToDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("manual", 0), ("default", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbIfConfigSetToDefault.setStatus('mandatory')
adlbServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("all", 0), ("fullrate", 1), ("glite", 2), ("t1413", 3), ("g9922", 4), ("ghs", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbServiceType.setStatus('mandatory')
adlbConfigOrAutoDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("manual", 0), ("auto", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbConfigOrAutoDelay.setStatus('mandatory')
adlbDelayOrDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("depth", 0), ("ms", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbDelayOrDepth.setStatus('mandatory')
adlbFrameMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("mode0", 0), ("mode1", 1), ("mode2", 2), ("mode3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbFrameMode.setStatus('mandatory')
adlbNTROptionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbNTROptionEnable.setStatus('mandatory')
adlbTrellisModeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbTrellisModeEnable.setStatus('mandatory')
adlbEocClearChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transparent", 0), ("hdlcframing", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbEocClearChannelMode.setStatus('mandatory')
adlbDsSingleOrDual = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("single", 1), ("dual", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbDsSingleOrDual.setStatus('mandatory')
adlbUsSingleOrDual = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("single", 1), ("dual", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbUsSingleOrDual.setStatus('mandatory')
adlbFastOrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("interleaved", 2), ("fast", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbFastOrInterleave.setStatus('mandatory')
adlbDsTargetMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbDsTargetMargin.setStatus('mandatory')
adlbDsMinMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbDsMinMargin.setStatus('mandatory')
adlbUsTargetMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbUsTargetMargin.setStatus('mandatory')
adlbUsMinMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbUsMinMargin.setStatus('mandatory')
adlbMaxDsRateC0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbMaxDsRateC0.setStatus('mandatory')
adlbMinDsRateC0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbMinDsRateC0.setStatus('mandatory')
adlbMaxUsRateC0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbMaxUsRateC0.setStatus('mandatory')
adlbMinUsRateC0 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbMinUsRateC0.setStatus('mandatory')
adlbUsMsOrDmtNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbUsMsOrDmtNumber.setStatus('mandatory')
adlbDsMsOrDmtNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbDsMsOrDmtNumber.setStatus('mandatory')
adlbUsExcessRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbUsExcessRatio.setStatus('mandatory')
adlbDsExcessRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbDsExcessRatio.setStatus('mandatory')
adlbMaxDsRateC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbMaxDsRateC1.setStatus('mandatory')
adlbMinDsRateC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbMinDsRateC1.setStatus('mandatory')
adlbMaxUsRateC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbMaxUsRateC1.setStatus('mandatory')
adlbMinUsRateC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbMinUsRateC1.setStatus('mandatory')
adlbTemplateOperate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 3, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbTemplateOperate.setStatus('mandatory')
hwMusaAdlbPortPfmThresTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4), )
if mibBuilder.loadTexts: hwMusaAdlbPortPfmThresTable.setStatus('mandatory')
hwMusaAdlbPortPfmThresEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbPortPfmThresEntry.setStatus('mandatory')
adlbPortPfmThresId1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresId1.setStatus('mandatory')
adlbPortPfmThresValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresValue1.setStatus('mandatory')
adlbPortPfmThresId2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresId2.setStatus('mandatory')
adlbPortPfmThresValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresValue2.setStatus('mandatory')
adlbPortPfmThresId3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresId3.setStatus('mandatory')
adlbPortPfmThresValue3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresValue3.setStatus('mandatory')
adlbPortPfmThresId4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresId4.setStatus('mandatory')
adlbPortPfmThresValue4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresValue4.setStatus('mandatory')
adlbPortPfmThresId5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresId5.setStatus('mandatory')
adlbPortPfmThresValue5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresValue5.setStatus('mandatory')
adlbPortPfmThresId6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresId6.setStatus('mandatory')
adlbPortPfmThresValue6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresValue6.setStatus('mandatory')
adlbPortPfmThresId7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresId7.setStatus('mandatory')
adlbPortPfmThresValue7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresValue7.setStatus('mandatory')
adlbPortPfmThresId8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresId8.setStatus('mandatory')
adlbPortPfmThresValue8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 3, 4, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adlbPortPfmThresValue8.setStatus('mandatory')
hwMusaAdlbPortLineDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1), )
if mibBuilder.loadTexts: hwMusaAdlbPortLineDataTable.setStatus('mandatory')
hwMusaAdlbPortLineDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbPortLineDataEntry.setStatus('mandatory')
adlbAs0DnRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAs0DnRate.setStatus('mandatory')
adlbLs0DnRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbLs0DnRate.setStatus('mandatory')
adlbAs1DnRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAs1DnRate.setStatus('mandatory')
adlbLs0UpRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbLs0UpRate.setStatus('mandatory')
adlbLs1UpRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbLs1UpRate.setStatus('mandatory')
adlbUpInterleaveDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpInterleaveDelay.setStatus('mandatory')
adlbDnInterleaveDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnInterleaveDelay.setStatus('mandatory')
adlbDnNoiseMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnNoiseMargin.setStatus('mandatory')
adlbUpNoiseMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpNoiseMargin.setStatus('mandatory')
adlbDnAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnAttenuation.setStatus('mandatory')
adlbUpAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpAttenuation.setStatus('mandatory')
adlbDnParityInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnParityInterleave.setStatus('mandatory')
adlbDnParityFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnParityFast.setStatus('mandatory')
adlbUpParityInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpParityInterleave.setStatus('mandatory')
adlbUpParityFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpParityFast.setStatus('mandatory')
adlbDnSymbolPerCodeInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnSymbolPerCodeInterleave.setStatus('mandatory')
adlbDnSymbolPerCodeFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnSymbolPerCodeFast.setStatus('mandatory')
adlbUpSymbolPerCodeInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpSymbolPerCodeInterleave.setStatus('mandatory')
adlbUpSymbolPerCodeFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpSymbolPerCodeFast.setStatus('mandatory')
adlbDnInterleaveDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnInterleaveDepth.setStatus('mandatory')
adlbUpInterleaveDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpInterleaveDepth.setStatus('mandatory')
adlbMaxDnAttainableRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbMaxDnAttainableRate.setStatus('mandatory')
adlbMaxUpAttainableRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbMaxUpAttainableRate.setStatus('mandatory')
adlbTotalOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbTotalOutputPower.setStatus('mandatory')
hwMusaAdlbAtucAlarmDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2), )
if mibBuilder.loadTexts: hwMusaAdlbAtucAlarmDataTable.setStatus('mandatory')
hwMusaAdlbAtucAlarmDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAtucAlarmDataEntry.setStatus('mandatory')
adlbAtucLos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucLos.setStatus('mandatory')
adlbAtucHighBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucHighBitErr.setStatus('mandatory')
adlbAtucRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucRetrain.setStatus('mandatory')
adlbAtucLof = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucLof.setStatus('mandatory')
adlbAtucAlarmValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucAlarmValidIntervals.setStatus('mandatory')
adlbAtucPrev15MinLos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinLos.setStatus('mandatory')
adlbAtucPrev15MinHighBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinHighBitErr.setStatus('mandatory')
adlbAtucPrev15MinRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinRetrain.setStatus('mandatory')
adlbAtucPrev15MinLof = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinLof.setStatus('mandatory')
adlbAtucCurr1DayLos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayLos.setStatus('mandatory')
adlbAtucCurr1DayHighBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayHighBitErr.setStatus('mandatory')
adlbAtucCurr1DayRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayRetrain.setStatus('mandatory')
adlbAtucCurr1DayLof = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayLof.setStatus('mandatory')
adlbAtucPrev1DayLos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayLos.setStatus('mandatory')
adlbAtucPrev1DayHighBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayHighBitErr.setStatus('mandatory')
adlbAtucPrev1DayRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayRetrain.setStatus('mandatory')
adlbAtucPrev1DayLof = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayLof.setStatus('mandatory')
adlbClearAlarmstatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 2, 1, 18), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: adlbClearAlarmstatistics.setStatus('mandatory')
hwMusaAdlbAturAlarmDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3), )
if mibBuilder.loadTexts: hwMusaAdlbAturAlarmDataTable.setStatus('mandatory')
hwMusaAdlbAturAlarmDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAturAlarmDataEntry.setStatus('mandatory')
adlbAturLos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturLos.setStatus('mandatory')
adlbAturHighBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturHighBitErr.setStatus('mandatory')
adlbAturRfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturRfi.setStatus('mandatory')
adlbAturLpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturLpr.setStatus('mandatory')
adlbAturAlarmValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturAlarmValidIntervals.setStatus('mandatory')
adlbAturPrev15MinLos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinLos.setStatus('mandatory')
adlbAturPrev15MinHighBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinHighBitErr.setStatus('mandatory')
adlbAturPrev15MinRfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinRfi.setStatus('mandatory')
adlbAturPrev15MinLpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinLpr.setStatus('mandatory')
adlbAturCurr1DayLos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayLos.setStatus('mandatory')
adlbAturCurr1DayHighBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayHighBitErr.setStatus('mandatory')
adlbAturCurr1DayRfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayRfi.setStatus('mandatory')
adlbAturCurr1DayLpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayLpr.setStatus('mandatory')
adlbAturPrev1DayLos = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayLos.setStatus('mandatory')
adlbAturPrev1DayHighBitErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayHighBitErr.setStatus('mandatory')
adlbAturPrev1DayRfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayRfi.setStatus('mandatory')
adlbAturPrev1DayLpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayLpr.setStatus('mandatory')
hwMusaAdlbAtucPerfDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4), )
if mibBuilder.loadTexts: hwMusaAdlbAtucPerfDataTable.setStatus('mandatory')
hwMusaAdlbAtucPerfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAtucPerfDataEntry.setStatus('mandatory')
adlbAtucCrcErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCrcErrInterleave.setStatus('mandatory')
adlbAtucCrcErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCrcErrFast.setStatus('mandatory')
adlbAtucFecErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucFecErrInterleave.setStatus('mandatory')
adlbAtucFecErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucFecErrFast.setStatus('mandatory')
adlbAtucSuperFrameSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucSuperFrameSent.setStatus('mandatory')
adlbAtucSuperFrameReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucSuperFrameReceived.setStatus('mandatory')
adlbAtucTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucTimeCount.setStatus('mandatory')
adlbAtucErrFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucErrFrames.setStatus('mandatory')
adlbAtucBgBENotSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucBgBENotSES.setStatus('mandatory')
adlbAtucErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucErrSecond.setStatus('mandatory')
adlbAtucSevereErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucSevereErrSecond.setStatus('mandatory')
adlbAtucNonSESFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucNonSESFrames.setStatus('mandatory')
adlbAtucUnavailableSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucUnavailableSecond.setStatus('mandatory')
adlbAtucBitswaps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucBitswaps.setStatus('mandatory')
adlbAtucLossSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucLossSecond.setStatus('mandatory')
adlbAtucFecSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucFecSecond.setStatus('mandatory')
adlbAtucFastRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucFastRetrain.setStatus('mandatory')
adlbAtucFastRetrainFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucFastRetrainFail.setStatus('mandatory')
adlbAtucPerfValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPerfValidIntervals.setStatus('mandatory')
adlbClearPerfstatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 4, 1, 20), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: adlbClearPerfstatistics.setStatus('mandatory')
hwMusaAdlbAtucPerfPrev15mDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5), )
if mibBuilder.loadTexts: hwMusaAdlbAtucPerfPrev15mDataTable.setStatus('mandatory')
hwMusaAdlbAtucPerfPrev15mDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAtucPerfPrev15mDataEntry.setStatus('mandatory')
adlbAtucPrev15MinCrcErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinCrcErrInterleave.setStatus('mandatory')
adlbAtucPrev15MinCrcErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinCrcErrFast.setStatus('mandatory')
adlbAtucPrev15MinFecErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinFecErrInterleave.setStatus('mandatory')
adlbAtucPrev15MinFecErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinFecErrFast.setStatus('mandatory')
adlbAtucPrev15MinSuperFrameSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinSuperFrameSent.setStatus('mandatory')
adlbAtucPrev15MinSuperFrameReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinSuperFrameReceived.setStatus('mandatory')
adlbAtucPrev15MinTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinTimeCount.setStatus('mandatory')
adlbAtucPrev15MinErrFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinErrFrames.setStatus('mandatory')
adlbAtucPrev15MinBgBENotSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinBgBENotSES.setStatus('mandatory')
adlbAtucPrev15MinErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinErrSecond.setStatus('mandatory')
adlbAtucPrev15MinSevereErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinSevereErrSecond.setStatus('mandatory')
adlbAtucPrev15MinNonSESFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinNonSESFrames.setStatus('mandatory')
adlbAtucPrev15MinUnavailableSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinUnavailableSecond.setStatus('mandatory')
adlbAtucPrev15MinBitswaps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinBitswaps.setStatus('mandatory')
adlbAtucPrev15MinLossSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinLossSecond.setStatus('mandatory')
adlbAtucPrev15MinFecSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinFecSecond.setStatus('mandatory')
adlbAtucPrev15MinFastRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinFastRetrain.setStatus('mandatory')
adlbAtucPrev15MinFastRetrainFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 5, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev15MinFastRetrainFail.setStatus('mandatory')
hwMusaAdlbAtucPerfCurr24hDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6), )
if mibBuilder.loadTexts: hwMusaAdlbAtucPerfCurr24hDataTable.setStatus('mandatory')
hwMusaAdlbAtucPerfCurr24hDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAtucPerfCurr24hDataEntry.setStatus('mandatory')
adlbAtucCurr1DayCrcErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayCrcErrInterleave.setStatus('mandatory')
adlbAtucCurr1DayCrcErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayCrcErrFast.setStatus('mandatory')
adlbAtucCurr1DayFecErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayFecErrInterleave.setStatus('mandatory')
adlbAtucCurr1DayFecErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayFecErrFast.setStatus('mandatory')
adlbAtucCurr1DaySuperFrameSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DaySuperFrameSent.setStatus('mandatory')
adlbAtucCurr1DaySuperFrameReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DaySuperFrameReceived.setStatus('mandatory')
adlbAtucCurr1DayTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayTimeCount.setStatus('mandatory')
adlbAtucCurr1DayErrFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayErrFrames.setStatus('mandatory')
adlbAtucCurr1DayBgBENotSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayBgBENotSES.setStatus('mandatory')
adlbAtucCurr1DayErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayErrSecond.setStatus('mandatory')
adlbAtucCurr1DaySevereErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DaySevereErrSecond.setStatus('mandatory')
adlbAtucCurr1DayNonSESFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayNonSESFrames.setStatus('mandatory')
adlbAtucCurr1DayUnavailableSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayUnavailableSecond.setStatus('mandatory')
adlbAtucCurr1DayBitswaps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayBitswaps.setStatus('mandatory')
adlbAtucCurr1DayLossSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayLossSecond.setStatus('mandatory')
adlbAtucCurr1DayFecSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayFecSecond.setStatus('mandatory')
adlbAtucCurr1DayFastRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayFastRetrain.setStatus('mandatory')
adlbAtucCurr1DayFastRetrainFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucCurr1DayFastRetrainFail.setStatus('mandatory')
hwMusaAdlbAtucPerfPrev24hDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7), )
if mibBuilder.loadTexts: hwMusaAdlbAtucPerfPrev24hDataTable.setStatus('mandatory')
hwMusaAdlbAtucPerfPrev24hDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAtucPerfPrev24hDataEntry.setStatus('mandatory')
adlbAtucPrev1DayCrcErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayCrcErrInterleave.setStatus('mandatory')
adlbAtucPrev1DayCrcErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayCrcErrFast.setStatus('mandatory')
adlbAtucPrev1DayFecErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayFecErrInterleave.setStatus('mandatory')
adlbAtucPrev1DayFecErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayFecErrFast.setStatus('mandatory')
adlbAtucPrev1DaySuperFrameSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DaySuperFrameSent.setStatus('mandatory')
adlbAtucPrev1DaySuperFrameReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DaySuperFrameReceived.setStatus('mandatory')
adlbAtucPrev1DayTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayTimeCount.setStatus('mandatory')
adlbAtucPrev1DayErrFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayErrFrames.setStatus('mandatory')
adlbAtucPrev1DayBgBENotSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayBgBENotSES.setStatus('mandatory')
adlbAtucPrev1DayErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayErrSecond.setStatus('mandatory')
adlbAtucPrev1DaySevereErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DaySevereErrSecond.setStatus('mandatory')
adlbAtucPrev1DayNonSESFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayNonSESFrames.setStatus('mandatory')
adlbAtucPrev1DayUnavailableSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayUnavailableSecond.setStatus('mandatory')
adlbAtucPrev1DayBitswaps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayBitswaps.setStatus('mandatory')
adlbAtucPrev1DayLossSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayLossSecond.setStatus('mandatory')
adlbAtucPrev1DayFecSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayFecSecond.setStatus('mandatory')
adlbAtucPrev1DayFastRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayFastRetrain.setStatus('mandatory')
adlbAtucPrev1DayFastRetrainFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 7, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucPrev1DayFastRetrainFail.setStatus('mandatory')
hwMusaAdlbAturPerfDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8), )
if mibBuilder.loadTexts: hwMusaAdlbAturPerfDataTable.setStatus('mandatory')
hwMusaAdlbAturPerfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAturPerfDataEntry.setStatus('mandatory')
adlbAturCrcErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCrcErrInterleave.setStatus('mandatory')
adlbAturCrcErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCrcErrFast.setStatus('mandatory')
adlbAturFecErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturFecErrInterleave.setStatus('mandatory')
adlbAturFecErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturFecErrFast.setStatus('mandatory')
adlbAturTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturTimeCount.setStatus('mandatory')
adlbAturErrFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturErrFrames.setStatus('mandatory')
adlbAturBgBENotSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturBgBENotSES.setStatus('mandatory')
adlbAturErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturErrSecond.setStatus('mandatory')
adlbAturSevereErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturSevereErrSecond.setStatus('mandatory')
adlbAturNonSESFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturNonSESFrames.setStatus('mandatory')
adlbAturUnavailableSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturUnavailableSecond.setStatus('mandatory')
adlbAturLossSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturLossSecond.setStatus('mandatory')
adlbAturFecSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturFecSecond.setStatus('mandatory')
adlbAturPerfValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 8, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPerfValidIntervals.setStatus('mandatory')
hwMusaAdlbAturPerfPrev15mDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9), )
if mibBuilder.loadTexts: hwMusaAdlbAturPerfPrev15mDataTable.setStatus('mandatory')
hwMusaAdlbAturPerfPrev15mDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAturPerfPrev15mDataEntry.setStatus('mandatory')
adlbAturPrev15MinCrcErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinCrcErrInterleave.setStatus('mandatory')
adlbAturPrev15MinCrcErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinCrcErrFast.setStatus('mandatory')
adlbAturPrev15MinFecErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinFecErrInterleave.setStatus('mandatory')
adlbAturPrev15MinFecErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinFecErrFast.setStatus('mandatory')
adlbAturPrev15MinTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinTimeCount.setStatus('mandatory')
adlbAturPrev15MinErrFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinErrFrames.setStatus('mandatory')
adlbAturPrev15MinBgBENotSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinBgBENotSES.setStatus('mandatory')
adlbAturPrev15MinErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinErrSecond.setStatus('mandatory')
adlbAturPrev15MinSevereErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinSevereErrSecond.setStatus('mandatory')
adlbAturPrev15MinNonSESFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinNonSESFrames.setStatus('mandatory')
adlbAturPrev15MinUnavailableSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinUnavailableSecond.setStatus('mandatory')
adlbAturPrev15MinLossSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinLossSecond.setStatus('mandatory')
adlbAturPrev15MinFecSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 9, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev15MinFecSecond.setStatus('mandatory')
hwMusaAdlbAturPerfCurr24hDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10), )
if mibBuilder.loadTexts: hwMusaAdlbAturPerfCurr24hDataTable.setStatus('mandatory')
hwMusaAdlbAturPerfCurr24hDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAturPerfCurr24hDataEntry.setStatus('mandatory')
adlbAturCurr1DayCrcErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayCrcErrInterleave.setStatus('mandatory')
adlbAturCurr1DayCrcErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayCrcErrFast.setStatus('mandatory')
adlbAturCurr1DayFecErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayFecErrInterleave.setStatus('mandatory')
adlbAturCurr1DayFecErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayFecErrFast.setStatus('mandatory')
adlbAturCurr1DayTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayTimeCount.setStatus('mandatory')
adlbAturCurr1DayErrFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayErrFrames.setStatus('mandatory')
adlbAturCurr1DayBgBENotSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayBgBENotSES.setStatus('mandatory')
adlbAturCurr1DayErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayErrSecond.setStatus('mandatory')
adlbAturCurr1DaySevereErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DaySevereErrSecond.setStatus('mandatory')
adlbAturCurr1DayNonSESFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayNonSESFrames.setStatus('mandatory')
adlbAturCurr1DayUnavailableSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayUnavailableSecond.setStatus('mandatory')
adlbAturCurr1DayLossSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayLossSecond.setStatus('mandatory')
adlbAturCurr1DayFecSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 10, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturCurr1DayFecSecond.setStatus('mandatory')
hwMusaAdlbAturPerfPrev24hDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11), )
if mibBuilder.loadTexts: hwMusaAdlbAturPerfPrev24hDataTable.setStatus('mandatory')
hwMusaAdlbAturPerfPrev24hDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAturPerfPrev24hDataEntry.setStatus('mandatory')
adlbAturPrev1DayCrcErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayCrcErrInterleave.setStatus('mandatory')
adlbAturPrev1DayCrcErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayCrcErrFast.setStatus('mandatory')
adlbAturPrev1DayFecErrInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayFecErrInterleave.setStatus('mandatory')
adlbAturPrev1DayFecErrFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayFecErrFast.setStatus('mandatory')
adlbAturPrev1DayTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayTimeCount.setStatus('mandatory')
adlbAturPrev1DayErrFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayErrFrames.setStatus('mandatory')
adlbAturPrev1DayBgBENotSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayBgBENotSES.setStatus('mandatory')
adlbAturPrev1DayErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayErrSecond.setStatus('mandatory')
adlbAturPrev1DaySevereErrSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DaySevereErrSecond.setStatus('mandatory')
adlbAturPrev1DayNonSESFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayNonSESFrames.setStatus('mandatory')
adlbAturPrev1DayUnavailableSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayUnavailableSecond.setStatus('mandatory')
adlbAturPrev1DayLossSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayLossSecond.setStatus('mandatory')
adlbAturPrev1DayFecSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 11, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturPrev1DayFecSecond.setStatus('mandatory')
hwMusaAdlbAtucLineDefectTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12), )
if mibBuilder.loadTexts: hwMusaAdlbAtucLineDefectTable.setStatus('mandatory')
hwMusaAdlbAtucLineDefectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAtucLineDefectEntry.setStatus('mandatory')
adlbAtucLpsState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucLpsState.setStatus('mandatory')
adlbAtucSefState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucSefState.setStatus('mandatory')
adlbAtucLosState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucLosState.setStatus('mandatory')
adlbAtucLofState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucLofState.setStatus('mandatory')
adlbAtucFebeInterleaveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucFebeInterleaveState.setStatus('mandatory')
adlbAtucFebeFastState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucFebeFastState.setStatus('mandatory')
adlbAtucFecInterleaveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucFecInterleaveState.setStatus('mandatory')
adlbAtucFecFastState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucFecFastState.setStatus('mandatory')
hwMusaAdlbAturLineDefectTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13), )
if mibBuilder.loadTexts: hwMusaAdlbAturLineDefectTable.setStatus('mandatory')
hwMusaAdlbAturLineDefectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAturLineDefectEntry.setStatus('mandatory')
adlbAturLpsState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturLpsState.setStatus('mandatory')
adlbAturRdiState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturRdiState.setStatus('mandatory')
adlbAturLosState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturLosState.setStatus('mandatory')
adlbAturFriState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturFriState.setStatus('mandatory')
adlbAturFebeInterleaveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturFebeInterleaveState.setStatus('mandatory')
adlbAturFebeFastState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturFebeFastState.setStatus('mandatory')
adlbAturFecInterleaveState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturFecInterleaveState.setStatus('mandatory')
adlbAturFecFastState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 13, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturFecFastState.setStatus('mandatory')
hwMusaAdlbAtucAtmDefectTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14), )
if mibBuilder.loadTexts: hwMusaAdlbAtucAtmDefectTable.setStatus('mandatory')
hwMusaAdlbAtucAtmDefectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAtucAtmDefectEntry.setStatus('mandatory')
adlbAtucHecInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucHecInterleave.setStatus('mandatory')
adlbAtucHecFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucHecFast.setStatus('mandatory')
adlbAtucNcdInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucNcdInterleave.setStatus('mandatory')
adlbAtucNcdFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucNcdFast.setStatus('mandatory')
adlbAtucOcdInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucOcdInterleave.setStatus('mandatory')
adlbAtucOcdFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucOcdFast.setStatus('mandatory')
adlbAtucLcdInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucLcdInterleave.setStatus('mandatory')
adlbAtucLcdFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 14, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAtucLcdFast.setStatus('mandatory')
hwMusaAdlbAturAtmDefectTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15), )
if mibBuilder.loadTexts: hwMusaAdlbAturAtmDefectTable.setStatus('mandatory')
hwMusaAdlbAturAtmDefectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbAturAtmDefectEntry.setStatus('mandatory')
adlbAturHecInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturHecInterleave.setStatus('mandatory')
adlbAturHecFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturHecFast.setStatus('mandatory')
adlbAturNcdInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturNcdInterleave.setStatus('mandatory')
adlbAturNcdFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturNcdFast.setStatus('mandatory')
adlbAturOcdInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturOcdInterleave.setStatus('mandatory')
adlbAturOcdFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturOcdFast.setStatus('mandatory')
adlbAturLcdInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturLcdInterleave.setStatus('mandatory')
adlbAturLcdFast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 15, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbAturLcdFast.setStatus('mandatory')
hwMusaAdlbPortBitsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 16), )
if mibBuilder.loadTexts: hwMusaAdlbPortBitsTable.setStatus('mandatory')
hwMusaAdlbPortBitsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 16, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbPortBitsEntry.setStatus('mandatory')
adlbDnBitsPerFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnBitsPerFrame.setStatus('mandatory')
adlbUpBitsPerFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpBitsPerFrame.setStatus('mandatory')
adlbDnBitAllocate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 16, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnBitAllocate.setStatus('mandatory')
adlbUpBitAllocate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 16, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpBitAllocate.setStatus('mandatory')
hwMusaAdlbCarrierSnrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 17), )
if mibBuilder.loadTexts: hwMusaAdlbCarrierSnrTable.setStatus('mandatory')
hwMusaAdlbCarrierSnrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 17, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbCarrierSnrEntry.setStatus('mandatory')
adlbDnSnrAllocate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 17, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbDnSnrAllocate.setStatus('mandatory')
adlbUpSnrAllocate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 4, 17, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adlbUpSnrAllocate.setStatus('mandatory')
hwMusaAdlbPortTestTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 5, 1), )
if mibBuilder.loadTexts: hwMusaAdlbPortTestTable.setStatus('mandatory')
hwMusaAdlbPortTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 5, 1, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-CONFMIB", "adlbPortIndex"))
if mibBuilder.loadTexts: hwMusaAdlbPortTestEntry.setStatus('mandatory')
adlbPortTestOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 6, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("atmLoop", 1), ("aturErrCrc", 2), ("stopAturErrCrc", 3), ("sendErrCrc", 4), ("stopSendErrCrc", 5), ("aturAutoLoop", 6), ("aturChgLoopParam", 7)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: adlbPortTestOper.setStatus('mandatory')
mibBuilder.exportSymbols("HUAWEI-MUSA-MA5100-CONFMIB", adlbAturPerfValidIntervals=adlbAturPerfValidIntervals, adlbAturPrev15MinFecErrFast=adlbAturPrev15MinFecErrFast, adlbAturLpr=adlbAturLpr, adlbAturNonSESFrames=adlbAturNonSESFrames, adlbAturFecInterleaveState=adlbAturFecInterleaveState, adlbAturCurr1DayHighBitErr=adlbAturCurr1DayHighBitErr, hwMusaDestBoardVpi=hwMusaDestBoardVpi, adlbAtucPrev1DayFecErrInterleave=adlbAtucPrev1DayFecErrInterleave, hwMusaAdlb=hwMusaAdlb, adlbMinDsRateC0=adlbMinDsRateC0, adlbAtucPrev15MinLossSecond=adlbAtucPrev15MinLossSecond, adlbAtucFastRetrainFail=adlbAtucFastRetrainFail, adlbAtucPrev1DaySuperFrameSent=adlbAtucPrev1DaySuperFrameSent, adlbAtucPrev1DayLof=adlbAtucPrev1DayLof, adlbAtucCurr1DayFastRetrain=adlbAtucCurr1DayFastRetrain, adlbLs0UpRate=adlbLs0UpRate, hwMusaAdlbAturAtmDefectTable=hwMusaAdlbAturAtmDefectTable, adlbAturTimeCount=adlbAturTimeCount, adlbDsTargetMargin=adlbDsTargetMargin, adlbAturCurr1DayFecErrInterleave=adlbAturCurr1DayFecErrInterleave, adlbPortTestOper=adlbPortTestOper, adlbAtucPrev1DayBitswaps=adlbAtucPrev1DayBitswaps, hwMusaDestSlotId=hwMusaDestSlotId, hwMusaAdlbAturAtmDefectEntry=hwMusaAdlbAturAtmDefectEntry, adlbAtucNcdFast=adlbAtucNcdFast, adlbAtucPrev1DayHighBitErr=adlbAtucPrev1DayHighBitErr, adlbAtucPrev15MinFastRetrain=adlbAtucPrev15MinFastRetrain, adlbAturPrev1DayNonSESFrames=adlbAturPrev1DayNonSESFrames, adlbAtucPrev15MinCrcErrInterleave=adlbAtucPrev15MinCrcErrInterleave, adlbAtucFecInterleaveState=adlbAtucFecInterleaveState, adlbAturRfi=adlbAturRfi, adlbAtucCurr1DayBitswaps=adlbAtucCurr1DayBitswaps, hwMusaAdlbChipsetMtTable=hwMusaAdlbChipsetMtTable, adlbAtucCurr1DayCrcErrFast=adlbAtucCurr1DayCrcErrFast, hwMusaAdlbAturPerfCurr24hDataEntry=hwMusaAdlbAturPerfCurr24hDataEntry, hwMusaSlotConfEntry=hwMusaSlotConfEntry, adlbAtucCurr1DayTimeCount=adlbAtucCurr1DayTimeCount, hwMusaAdlbAtucAtmDefectTable=hwMusaAdlbAtucAtmDefectTable, adlbAturPrev15MinLos=adlbAturPrev15MinLos, adlbAtucNcdInterleave=adlbAtucNcdInterleave, hwMusaSrcBoardVci=hwMusaSrcBoardVci, adlbAtucPrev1DayRetrain=adlbAtucPrev1DayRetrain, adlbAturHighBitErr=adlbAturHighBitErr, adlbDnAttenuation=adlbDnAttenuation, adlbAturPrev1DayCrcErrInterleave=adlbAturPrev1DayCrcErrInterleave, adlbAtucPrev15MinTimeCount=adlbAtucPrev15MinTimeCount, adlbAtucPrev15MinBitswaps=adlbAtucPrev15MinBitswaps, adlbAturLpsState=adlbAturLpsState, adlbChipsetIndex=adlbChipsetIndex, adlbPortOper=adlbPortOper, adlbDelayOrDepth=adlbDelayOrDepth, adlbAtucErrSecond=adlbAtucErrSecond, adlbAturPrev1DayCrcErrFast=adlbAturPrev1DayCrcErrFast, adlbAturPrev15MinErrSecond=adlbAturPrev15MinErrSecond, adlbAtucPrev15MinFastRetrainFail=adlbAtucPrev15MinFastRetrainFail, adlbAtucCurr1DayErrFrames=adlbAtucCurr1DayErrFrames, adlbDnNoiseMargin=adlbDnNoiseMargin, adlbEocClearChannelMode=adlbEocClearChannelMode, adlbAturCurr1DayFecSecond=adlbAturCurr1DayFecSecond, adlbAturPrev1DayLossSecond=adlbAturPrev1DayLossSecond, adlbAtucErrFrames=adlbAtucErrFrames, adlbAturPrev15MinNonSESFrames=adlbAturPrev15MinNonSESFrames, adlbUpBitsPerFrame=adlbUpBitsPerFrame, adlbAtucPrev1DayErrFrames=adlbAtucPrev1DayErrFrames, adlbDsExcessRatio=adlbDsExcessRatio, adlbAturPrev1DayFecErrFast=adlbAturPrev1DayFecErrFast, adlbAturFebeInterleaveState=adlbAturFebeInterleaveState, adlbPortPfmThresValue4=adlbPortPfmThresValue4, adlbMinDsRateC1=adlbMinDsRateC1, hwMusaAdlbAturAlarmDataEntry=hwMusaAdlbAturAlarmDataEntry, adlbAtucFebeFastState=adlbAtucFebeFastState, adlbTotalOutputPower=adlbTotalOutputPower, adlbAtucPrev1DaySuperFrameReceived=adlbAtucPrev1DaySuperFrameReceived, hwMusaAdlbChipsetMtEntry=hwMusaAdlbChipsetMtEntry, adlbAturSevereErrSecond=adlbAturSevereErrSecond, adlbLs0DnRate=adlbLs0DnRate, adlbDnParityInterleave=adlbDnParityInterleave, hwMusaAdlbAturAlarmDataTable=hwMusaAdlbAturAlarmDataTable, adlbPortPfmThresId2=adlbPortPfmThresId2, adlbPortTxCell=adlbPortTxCell, hwMusaSlotGroup=hwMusaSlotGroup, adlbPortPfmThresId7=adlbPortPfmThresId7, hwMa5100Mib=hwMa5100Mib, adlbPortPfmThresValue3=adlbPortPfmThresValue3, adlbDnSymbolPerCodeInterleave=adlbDnSymbolPerCodeInterleave, adlbAtucCurr1DayLossSecond=adlbAtucCurr1DayLossSecond, adlbUpSnrAllocate=adlbUpSnrAllocate, adlbAturFebeFastState=adlbAturFebeFastState, adlbChipsetOper=adlbChipsetOper, hwMusaAdlbPfm=hwMusaAdlbPfm, adlbAturPrev1DayTimeCount=adlbAturPrev1DayTimeCount, hwMusaAdlSlotId=hwMusaAdlSlotId, adlbAtucCurr1DaySevereErrSecond=adlbAtucCurr1DaySevereErrSecond, adlbAturCurr1DayErrSecond=adlbAturCurr1DayErrSecond, adlbMinUsRateC0=adlbMinUsRateC0, adlbAturPrev1DayErrSecond=adlbAturPrev1DayErrSecond, adlbAturFriState=adlbAturFriState, hwMusaAdlbAtucPerfPrev24hDataTable=hwMusaAdlbAtucPerfPrev24hDataTable, adlbAturLos=adlbAturLos, adlbAtucBitswaps=adlbAtucBitswaps, adlbAtucLof=adlbAtucLof, adlbDnInterleaveDepth=adlbDnInterleaveDepth, adlbUsMinMargin=adlbUsMinMargin, adlbMaxDsRateC1=adlbMaxDsRateC1, adlbAtucNonSESFrames=adlbAtucNonSESFrames, adlbDnBitsPerFrame=adlbDnBitsPerFrame, hwMusaRegionPvcConfEntry=hwMusaRegionPvcConfEntry, adlbAtucVersionNo=adlbAtucVersionNo, adlbAtucFecSecond=adlbAtucFecSecond, hwMusaAdlbAtucLineDefectTable=hwMusaAdlbAtucLineDefectTable, adlbAtucHighBitErr=adlbAtucHighBitErr, hwMusaAdlbCarrierSnrTable=hwMusaAdlbCarrierSnrTable, hwMusaAdlbAtucPerfCurr24hDataEntry=hwMusaAdlbAtucPerfCurr24hDataEntry, hwMusaSrcFrameId=hwMusaSrcFrameId, adlbAtucPrev15MinSuperFrameSent=adlbAtucPrev15MinSuperFrameSent, hwMusaDestPortVlanVccId=hwMusaDestPortVlanVccId, adlbAturFecFastState=adlbAturFecFastState, hwMusaAdlbPortTable=hwMusaAdlbPortTable, adlbAturPrev1DaySevereErrSecond=adlbAturPrev1DaySevereErrSecond, adlbAturPrev1DayErrFrames=adlbAturPrev1DayErrFrames, adlbDnSnrAllocate=adlbDnSnrAllocate, hwMusaDestToSrcTraffic=hwMusaDestToSrcTraffic, adlbItuProviderCode=adlbItuProviderCode, adlbAturPrev15MinHighBitErr=adlbAturPrev15MinHighBitErr, adlbAturCurr1DayLossSecond=adlbAturCurr1DayLossSecond, adlbAtucPrev1DayErrSecond=adlbAtucPrev1DayErrSecond, hwMusaAdlVpi=hwMusaAdlVpi, adlbAtucPrev1DayLossSecond=adlbAtucPrev1DayLossSecond, adlbPortPfmThresId8=adlbPortPfmThresId8, adlbAtucCurr1DayUnavailableSecond=adlbAtucCurr1DayUnavailableSecond, adlbAturErrFrames=adlbAturErrFrames, hwMusaAdlbAturPerfCurr24hDataTable=hwMusaAdlbAturPerfCurr24hDataTable, adlbAturPrev1DayUnavailableSecond=adlbAturPrev1DayUnavailableSecond, adlbAtucTimeCount=adlbAtucTimeCount, adlbAtucCurr1DayLos=adlbAtucCurr1DayLos, adlbAtucCurr1DayFecErrInterleave=adlbAtucCurr1DayFecErrInterleave, adlbAtucCurr1DayFastRetrainFail=adlbAtucCurr1DayFastRetrainFail, adlbAtucCrcErrFast=adlbAtucCrcErrFast, hwMusaAdlbAturPerfPrev24hDataTable=hwMusaAdlbAturPerfPrev24hDataTable, adlbUpInterleaveDepth=adlbUpInterleaveDepth, adlbAturPrev15MinErrFrames=adlbAturPrev15MinErrFrames, adlbAtucSevereErrSecond=adlbAtucSevereErrSecond, hwMusaDestUpcEpdPpd=hwMusaDestUpcEpdPpd, hwMusaAdlbBoardInfoTable=hwMusaAdlbBoardInfoTable, adlbAturAdslCapability=adlbAturAdslCapability, hwMusaAdlbPortLineDataTable=hwMusaAdlbPortLineDataTable, adlbAtucCurr1DayFecSecond=adlbAtucCurr1DayFecSecond, adlbPortPfmThresId5=adlbPortPfmThresId5, adlbPortPfmThresId6=adlbPortPfmThresId6, hwMusaFrameNumber=hwMusaFrameNumber, adlbAtucPrev15MinLos=adlbAtucPrev15MinLos, adlbAturPrev1DayRfi=adlbAturPrev1DayRfi, adlbAturHecFast=adlbAturHecFast, adlbAs0DnRate=adlbAs0DnRate, adlbAtucPrev15MinLof=adlbAtucPrev15MinLof, adlbAturFecErrFast=adlbAturFecErrFast, adlbAturNcdInterleave=adlbAturNcdInterleave, adlbAtucLos=adlbAtucLos, adlbPortPfmThresId3=adlbPortPfmThresId3, adlbCustomId=adlbCustomId, hwMusaAdlbPortActTable=hwMusaAdlbPortActTable, adlbAtucCurr1DayLof=adlbAtucCurr1DayLof, adlbAturLosState=adlbAturLosState, adlbAtucCurr1DayFecErrFast=adlbAtucCurr1DayFecErrFast, hwMusaToLanTrafficId=hwMusaToLanTrafficId, adlbAtucCurr1DayBgBENotSES=adlbAtucCurr1DayBgBENotSES, adlbDsMinMargin=adlbDsMinMargin, adlbAturOcdFast=adlbAturOcdFast, adlbClearAlarmstatistics=adlbClearAlarmstatistics, adlbUpParityInterleave=adlbUpParityInterleave, adlbAtucFebeInterleaveState=adlbAtucFebeInterleaveState, adlbAtucCrcErrInterleave=adlbAtucCrcErrInterleave, adlbDnInterleaveDelay=adlbDnInterleaveDelay, adlbAtucHecInterleave=adlbAtucHecInterleave, adlbAturAlarmValidIntervals=adlbAturAlarmValidIntervals, adlbAtucPrev1DayCrcErrInterleave=adlbAtucPrev1DayCrcErrInterleave, adlbAtucFecErrInterleave=adlbAtucFecErrInterleave, adlbIfConfigSetToDefault=adlbIfConfigSetToDefault, adlbAtucPerfValidIntervals=adlbAtucPerfValidIntervals, adlbPortPfmThresValue2=adlbPortPfmThresValue2, hwMusaAdlbAtucPerfPrev24hDataEntry=hwMusaAdlbAtucPerfPrev24hDataEntry, adlbAturPrev1DayHighBitErr=adlbAturPrev1DayHighBitErr, hwMusaVlanId=hwMusaVlanId, adlbAtucPrev15MinNonSESFrames=adlbAtucPrev15MinNonSESFrames, adlbItuCountryCode=adlbItuCountryCode, adlbAturCurr1DaySevereErrSecond=adlbAturCurr1DaySevereErrSecond, hwMusaSysMib=hwMusaSysMib, adlbAtucPrev1DayBgBENotSES=adlbAtucPrev1DayBgBENotSES, adlbAtucLcdFast=adlbAtucLcdFast, adlbAturPrev1DayLos=adlbAturPrev1DayLos, adlbUpParityFast=adlbUpParityFast, adlbAturPrev15MinLpr=adlbAturPrev15MinLpr, hwMusaAdlbAtucPerfDataEntry=hwMusaAdlbAtucPerfDataEntry, adlbAtucPrev1DayCrcErrFast=adlbAtucPrev1DayCrcErrFast, adlbDsSingleOrDual=adlbDsSingleOrDual, adlbConfigOrAutoDelay=adlbConfigOrAutoDelay, adlbAturCurr1DayCrcErrFast=adlbAturCurr1DayCrcErrFast, hwMusaSrcPortVlanVccId=hwMusaSrcPortVlanVccId, adlbDsMsOrDmtNumber=adlbDsMsOrDmtNumber, hwMusaDestBoardVci=hwMusaDestBoardVci, adlbAturHecInterleave=adlbAturHecInterleave, adlbAtucPrev1DayFastRetrain=adlbAtucPrev1DayFastRetrain, hwMusaAdlbBoardInfoEntry=hwMusaAdlbBoardInfoEntry, hwMusaAdlbConf=hwMusaAdlbConf, adlbByModemCodeVer=adlbByModemCodeVer, hwMusaAdlbAturPerfDataEntry=hwMusaAdlbAturPerfDataEntry, adlbAturPrev15MinLossSecond=adlbAturPrev15MinLossSecond, adlbMaxDsRateC0=adlbMaxDsRateC0, adlbAturLossSecond=adlbAturLossSecond, hwMusaAdlbAturPerfPrev15mDataTable=hwMusaAdlbAturPerfPrev15mDataTable, adlbAturPrev1DayFecSecond=adlbAturPrev1DayFecSecond, adlbAturRdiState=adlbAturRdiState, adlbAtucFastRetrain=adlbAtucFastRetrain, adlbFastOrInterleave=adlbFastOrInterleave, adlbDnBitAllocate=adlbDnBitAllocate, hwMusaSrcUpcEpdPpd=hwMusaSrcUpcEpdPpd, adlbAtucPrev15MinHighBitErr=adlbAtucPrev15MinHighBitErr, hwMusaPvcPvpState=hwMusaPvcPvpState, adlbAturCurr1DayErrFrames=adlbAturCurr1DayErrFrames, adlbAtucPrev15MinSevereErrSecond=adlbAtucPrev15MinSevereErrSecond, adlbUsTargetMargin=adlbUsTargetMargin, adlbAturPrev15MinBgBENotSES=adlbAturPrev15MinBgBENotSES, hwMusaAdlbPortTestEntry=hwMusaAdlbPortTestEntry, adlbAtucFecFastState=adlbAtucFecFastState, adlbLs1UpRate=adlbLs1UpRate, adlbAtucPrev1DayTimeCount=adlbAtucPrev1DayTimeCount, adlbAturPrev15MinUnavailableSecond=adlbAturPrev15MinUnavailableSecond, hwMusaAdlbPortActEntry=hwMusaAdlbPortActEntry, adlbByDiagCodeVer=adlbByDiagCodeVer, hwMusaAdlbPortTestTable=hwMusaAdlbPortTestTable, adlbAturPrev15MinSevereErrSecond=adlbAturPrev15MinSevereErrSecond, adlbAs1DnRate=adlbAs1DnRate, adlbAtucOcdFast=adlbAtucOcdFast, adlbAtucPrev15MinCrcErrFast=adlbAtucPrev15MinCrcErrFast, adlbAtucPrev15MinSuperFrameReceived=adlbAtucPrev15MinSuperFrameReceived, adlbAtucRetrain=adlbAtucRetrain, adlbAtucRomSwBuildDate=adlbAtucRomSwBuildDate, hwMusaAdlbAtucPerfPrev15mDataTable=hwMusaAdlbAtucPerfPrev15mDataTable, adlbMaxDnAttainableRate=adlbMaxDnAttainableRate, hwMusaAdlbAturPerfPrev15mDataEntry=hwMusaAdlbAturPerfPrev15mDataEntry, hwMusaSrcToDestTraffic=hwMusaSrcToDestTraffic, adlbAtucOamSwVer=adlbAtucOamSwVer, adlbAturCrcErrInterleave=adlbAturCrcErrInterleave, adlbAtucLofState=adlbAtucLofState, adlbMaxUsRateC0=adlbMaxUsRateC0, adlbFrameMode=adlbFrameMode, adlbAtucSefState=adlbAtucSefState, hwMusaAdlbCarrierSnrEntry=hwMusaAdlbCarrierSnrEntry, adlbAturVersion=adlbAturVersion, hwMusaAdlbAtucPerfCurr24hDataTable=hwMusaAdlbAtucPerfCurr24hDataTable, hwMusaEndOfMib=hwMusaEndOfMib, adlbPortState=adlbPortState, hwMusaAdlbAtucPerfDataTable=hwMusaAdlbAtucPerfDataTable, adlbDnParityFast=adlbDnParityFast)
mibBuilder.exportSymbols("HUAWEI-MUSA-MA5100-CONFMIB", hwMusaAdlbPortBitsTable=hwMusaAdlbPortBitsTable, adlbAtucSuperFrameReceived=adlbAtucSuperFrameReceived, adlbUpInterleaveDelay=adlbUpInterleaveDelay, DisplayString=DisplayString, adlbAturCurr1DayCrcErrInterleave=adlbAturCurr1DayCrcErrInterleave, adlbAtucLcdInterleave=adlbAtucLcdInterleave, hwMusaAdlPortId=hwMusaAdlPortId, hwMuasSrcSlotId=hwMuasSrcSlotId, adlbAturLcdFast=adlbAturLcdFast, adlbPortRxCell=adlbPortRxCell, adlbUsExcessRatio=adlbUsExcessRatio, adlbAtucPrev15MinBgBENotSES=adlbAtucPrev15MinBgBENotSES, adlbAturCrcErrFast=adlbAturCrcErrFast, adlbAtucPrev1DayLos=adlbAtucPrev1DayLos, adlbPortIndex=adlbPortIndex, hwMusaAdlbAturPerfPrev24hDataEntry=hwMusaAdlbAturPerfPrev24hDataEntry, adlbPortPfmThresValue7=adlbPortPfmThresValue7, adlbAturCurr1DayUnavailableSecond=adlbAturCurr1DayUnavailableSecond, adlbProductId=adlbProductId, hwMusaAdlbAtucAlarmDataEntry=hwMusaAdlbAtucAlarmDataEntry, adlbAturCurr1DayFecErrFast=adlbAturCurr1DayFecErrFast, adlbPortPfmThresValue5=adlbPortPfmThresValue5, hwMusaAdlVci=hwMusaAdlVci, adlbAturFecErrInterleave=adlbAturFecErrInterleave, adlbAtucPrev1DayFecErrFast=adlbAtucPrev1DayFecErrFast, adlbAtucLosState=adlbAtucLosState, adlbAtucBgBENotSES=adlbAtucBgBENotSES, adlbAtucPrev15MinErrSecond=adlbAtucPrev15MinErrSecond, adlbAtucOamSwBuildDate=adlbAtucOamSwBuildDate, adlbAturCurr1DayRfi=adlbAturCurr1DayRfi, hwMusaAdlbPortDeviceTable=hwMusaAdlbPortDeviceTable, adlbAtucPrev15MinErrFrames=adlbAtucPrev15MinErrFrames, hwMusaSlot=hwMusaSlot, adlbPortPfmThresValue8=adlbPortPfmThresValue8, adlbAtucRomSwVer=adlbAtucRomSwVer, adlbAtucPrev1DayFastRetrainFail=adlbAtucPrev1DayFastRetrainFail, adlbAturVendorId=adlbAturVendorId, adlbUpBitAllocate=adlbUpBitAllocate, adlbAtucPrev1DaySevereErrSecond=adlbAtucPrev1DaySevereErrSecond, adlbUpNoiseMargin=adlbUpNoiseMargin, hwMusaAdlbAturLineDefectEntry=hwMusaAdlbAturLineDefectEntry, adlbAtucOcdInterleave=adlbAtucOcdInterleave, hwMusaAdlPortOperat=hwMusaAdlPortOperat, adlbAtucAlarmValidIntervals=adlbAtucAlarmValidIntervals, adlbTrellisModeEnable=adlbTrellisModeEnable, hwMusaAdlFrameId=hwMusaAdlFrameId, adlbAturCurr1DayNonSESFrames=adlbAturCurr1DayNonSESFrames, adlbAtucCurr1DaySuperFrameSent=adlbAtucCurr1DaySuperFrameSent, hwMusaSlotIndex=hwMusaSlotIndex, adlbAtucLossSecond=adlbAtucLossSecond, adlbMaxUpAttainableRate=adlbMaxUpAttainableRate, adlbAtucPrev15MinFecErrFast=adlbAtucPrev15MinFecErrFast, adlbUpAttenuation=adlbUpAttenuation, adlbAturCurr1DayTimeCount=adlbAturCurr1DayTimeCount, hwMusaAllPvcConfTable=hwMusaAllPvcConfTable, adlbMinUsRateC1=adlbMinUsRateC1, adlbAturPrev1DayLpr=adlbAturPrev1DayLpr, adlbAtucCurr1DayErrSecond=adlbAtucCurr1DayErrSecond, hwMusaAdlbPortPfmThresTable=hwMusaAdlbPortPfmThresTable, adlbAtucPrev15MinFecSecond=adlbAtucPrev15MinFecSecond, hwMusaAdlbAturLineDefectTable=hwMusaAdlbAturLineDefectTable, adlbAturErrSecond=adlbAturErrSecond, adlbAtucCurr1DayNonSESFrames=adlbAtucCurr1DayNonSESFrames, adlbAtucPrev1DayFecSecond=adlbAtucPrev1DayFecSecond, adlbAturPrev1DayFecErrInterleave=adlbAturPrev1DayFecErrInterleave, adlbAturPrev1DayBgBENotSES=adlbAturPrev1DayBgBENotSES, adlbAtucCurr1DayCrcErrInterleave=adlbAtucCurr1DayCrcErrInterleave, hwMusaTypeOfPvcPvpindex=hwMusaTypeOfPvcPvpindex, hwMusaSlotConfTable=hwMusaSlotConfTable, adlbDnSymbolPerCodeFast=adlbDnSymbolPerCodeFast, hwMusaDestFrameId=hwMusaDestFrameId, adlbAturPrev15MinFecSecond=adlbAturPrev15MinFecSecond, adlbAturUnavailableSecond=adlbAturUnavailableSecond, adlbPortPfmThresId4=adlbPortPfmThresId4, hwMusaAdlbAturPerfDataTable=hwMusaAdlbAturPerfDataTable, hwMusaCidIndex=hwMusaCidIndex, adlbAturPrev15MinTimeCount=adlbAturPrev15MinTimeCount, adlbAturCurr1DayBgBENotSES=adlbAturCurr1DayBgBENotSES, adlbAtucUnavailableSecond=adlbAtucUnavailableSecond, adlbAturCurr1DayLos=adlbAturCurr1DayLos, adlbTemplateOperate=adlbTemplateOperate, hwMusaAllPvcConfEntry=hwMusaAllPvcConfEntry, adlbPortTemplateId=adlbPortTemplateId, hwMusaAdlbPortDeviceEntry=hwMusaAdlbPortDeviceEntry, adlbAtucCurr1DayHighBitErr=adlbAtucCurr1DayHighBitErr, hwMusaFromLanTrafficId=hwMusaFromLanTrafficId, adlbAtucPrev15MinUnavailableSecond=adlbAtucPrev15MinUnavailableSecond, adlbPortTrainStandard=adlbPortTrainStandard, adlbAtucPrev1DayUnavailableSecond=adlbAtucPrev1DayUnavailableSecond, adlbAturFecSecond=adlbAturFecSecond, adlbAturOcdInterleave=adlbAturOcdInterleave, hwMusaAllPvcOperater=hwMusaAllPvcOperater, adlbAtucLpsState=adlbAtucLpsState, hwMusaAdlbAtucAtmDefectEntry=hwMusaAdlbAtucAtmDefectEntry, hwMusaAdlbPortPfmThresEntry=hwMusaAdlbPortPfmThresEntry, adlbAturPrev15MinCrcErrFast=adlbAturPrev15MinCrcErrFast, adlbAturBgBENotSES=adlbAturBgBENotSES, adlbAturPrev15MinRfi=adlbAturPrev15MinRfi, adlbAturNcdFast=adlbAturNcdFast, hwMusaAdlbPortLineDataEntry=hwMusaAdlbPortLineDataEntry, adlbMaxUsRateC1=adlbMaxUsRateC1, adlbAtucSuperFrameSent=adlbAtucSuperFrameSent, adlbAtucPrev15MinFecErrInterleave=adlbAtucPrev15MinFecErrInterleave, adlbAturPrev15MinFecErrInterleave=adlbAturPrev15MinFecErrInterleave, hwMusaAdlbAtucAlarmDataTable=hwMusaAdlbAtucAlarmDataTable, adlbAtucVendorId=adlbAtucVendorId, adlbUpSymbolPerCodeInterleave=adlbUpSymbolPerCodeInterleave, adlbAturProviderCode=adlbAturProviderCode, hwMusaAdlbAtucPerfPrev15mDataEntry=hwMusaAdlbAtucPerfPrev15mDataEntry, adlbAtucPrev1DayNonSESFrames=adlbAtucPrev1DayNonSESFrames, hwMusaRegionPvcConfTable=hwMusaRegionPvcConfTable, hwMusaSrcBoardVpi=hwMusaSrcBoardVpi, adlbUsSingleOrDual=adlbUsSingleOrDual, adlbAtucPrev15MinRetrain=adlbAtucPrev15MinRetrain, adlbAtucFecErrFast=adlbAtucFecErrFast, adlbAturLcdInterleave=adlbAturLcdInterleave, hwMusaAdlbBoard=hwMusaAdlbBoard, hwMusaAdlbChipset=hwMusaAdlbChipset, adlbAtucCurr1DaySuperFrameReceived=adlbAtucCurr1DaySuperFrameReceived, hwMusaAdlbPortEntry=hwMusaAdlbPortEntry, adlbPortPfmThresId1=adlbPortPfmThresId1, adlbAtucHecFast=adlbAtucHecFast, adlbUpSymbolPerCodeFast=adlbUpSymbolPerCodeFast, adlbAturPrev15MinCrcErrInterleave=adlbAturPrev15MinCrcErrInterleave, hwMusaFrame=hwMusaFrame, adlbAturCurr1DayLpr=adlbAturCurr1DayLpr, adlbUsMsOrDmtNumber=adlbUsMsOrDmtNumber, hwMusaAdlbAtucLineDefectEntry=hwMusaAdlbAtucLineDefectEntry, adlbNTROptionEnable=adlbNTROptionEnable, hwMusaFrameIndex=hwMusaFrameIndex, adlbPortPfmThresValue6=adlbPortPfmThresValue6, adlbAtucCurr1DayRetrain=adlbAtucCurr1DayRetrain, hwMusaVlanIciIndex=hwMusaVlanIciIndex, hwMusaAdlbTest=hwMusaAdlbTest, hwMusaAdlbPortBitsEntry=hwMusaAdlbPortBitsEntry, adlbPortPfmThresValue1=adlbPortPfmThresValue1, hwMusaFrameConfTable=hwMusaFrameConfTable, hwMusaFrameConfEntry=hwMusaFrameConfEntry, adlbClearPerfstatistics=adlbClearPerfstatistics, adlbAturCountryCode=adlbAturCountryCode, adlbServiceType=adlbServiceType)
