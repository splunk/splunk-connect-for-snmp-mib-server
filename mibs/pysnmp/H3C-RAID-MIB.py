#
# PySNMP MIB module H3C-RAID-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-RAID-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:10:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
h3cStorageRef, H3cStorageOwnerType, H3cStorageActionType, H3cStorageEnableState, H3cRaidIDType = mibBuilder.importSymbols("H3C-STORAGE-REF-MIB", "h3cStorageRef", "H3cStorageOwnerType", "H3cStorageActionType", "H3cStorageEnableState", "H3cRaidIDType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Unsigned32, Counter32, ObjectIdentity, MibIdentifier, Integer32, iso, Counter64, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Unsigned32", "Counter32", "ObjectIdentity", "MibIdentifier", "Integer32", "iso", "Counter64", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "NotificationType")
RowStatus, DisplayString, TruthValue, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TruthValue", "TextualConvention", "DateAndTime")
h3cRaid = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4))
if mibBuilder.loadTexts: h3cRaid.setLastUpdated('200709041452Z')
if mibBuilder.loadTexts: h3cRaid.setOrganization('H3C Technologies Co., Ltd.')
h3cRaidMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1))
h3cRaidCapacityTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 1))
h3cPrimaryRaidCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPrimaryRaidCount.setStatus('current')
h3cRaidTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2), )
if mibBuilder.loadTexts: h3cRaidTable.setStatus('current')
h3cRaidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1), ).setIndexNames((0, "H3C-RAID-MIB", "h3cRaidName"))
if mibBuilder.loadTexts: h3cRaidEntry.setStatus('current')
h3cRaidName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cRaidName.setStatus('current')
h3cRaidId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidId.setStatus('current')
h3cRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 3), H3cRaidIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidUuid.setStatus('current')
h3cRaidLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("jbod", 1), ("raid0", 2), ("raid1", 3), ("raid2", 4), ("raid3", 5), ("raid4", 6), ("raid5", 7), ("raid6", 8), ("raid10", 9), ("raid50", 10)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRaidLevel.setStatus('current')
h3cRaidTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidTimestamp.setStatus('current')
h3cRaidDiskList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRaidDiskList.setStatus('current')
h3cRaidOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 7), H3cStorageOwnerType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRaidOwner.setStatus('current')
h3cRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidSize.setStatus('current')
h3cRaidFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 9), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidFreeSize.setStatus('current')
h3cRaidAutoSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRaidAutoSync.setStatus('current')
h3cRaidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 2, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRaidRowStatus.setStatus('current')
h3cRaidManageTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3), )
if mibBuilder.loadTexts: h3cRaidManageTable.setStatus('current')
h3cRaidManageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3, 1), ).setIndexNames((0, "H3C-RAID-MIB", "h3cRaidUuid"))
if mibBuilder.loadTexts: h3cRaidManageEntry.setStatus('current')
h3cRaidLocationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3, 1, 1), H3cStorageEnableState().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidLocationState.setStatus('current')
h3cRaidAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("run", 1), ("pause", 2), ("rebuild", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidAction.setStatus('current')
h3cRaidRunState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("degraded", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidRunState.setStatus('current')
h3cRaidAutoRebuild = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3, 1, 4), H3cStorageEnableState().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidAutoRebuild.setStatus('current')
h3cRaidSyncPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidSyncPercentage.setStatus('current')
h3cRaidHideState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3, 1, 6), H3cStorageEnableState().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidHideState.setStatus('current')
h3cRaidLvRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3, 1, 7), H3cStorageActionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidLvRestore.setStatus('current')
h3cRaidType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("virtualDevice", 1), ("directDevice", 2), ("serviceEnabledDevice", 3), ("unassigned", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidType.setStatus('current')
h3cRaidCacheTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4), )
if mibBuilder.loadTexts: h3cRaidCacheTable.setStatus('current')
h3cRaidCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1), ).setIndexNames((0, "H3C-RAID-MIB", "h3cRaidUuid"))
if mibBuilder.loadTexts: h3cRaidCacheEntry.setStatus('current')
h3cRaidReadCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1, 1), H3cStorageEnableState().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidReadCache.setStatus('current')
h3cRaidReadCacheHitPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidReadCacheHitPeriod.setStatus('current')
h3cRaidReadCacheAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidReadCacheAverageRate.setStatus('current')
h3cRaidReadCachePhaseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidReadCachePhaseRate.setStatus('current')
h3cRaidWriteCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1, 5), H3cStorageEnableState().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidWriteCache.setStatus('current')
h3cRaidWriteCacheHitPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidWriteCacheHitPeriod.setStatus('current')
h3cRaidWriteCacheAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidWriteCacheAverageRate.setStatus('current')
h3cRaidWriteCachePhaseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRaidWriteCachePhaseRate.setStatus('current')
h3cRaidWriteCacheFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 4, 1, 9), H3cStorageActionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRaidWriteCacheFlush.setStatus('current')
h3cRaidSpareDiskTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 5), )
if mibBuilder.loadTexts: h3cRaidSpareDiskTable.setStatus('current')
h3cRaidSpareDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 5, 1), ).setIndexNames((0, "H3C-RAID-MIB", "h3cRaidUuid"), (0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: h3cRaidSpareDiskEntry.setStatus('current')
h3cRaidSpareDiskRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 5, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRaidSpareDiskRowStatus.setStatus('current')
h3cFreezeRaidTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 6), )
if mibBuilder.loadTexts: h3cFreezeRaidTable.setStatus('current')
h3cFreezeRaidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 6, 1), ).setIndexNames((0, "H3C-RAID-MIB", "h3cFreezeRaidUuid"))
if mibBuilder.loadTexts: h3cFreezeRaidEntry.setStatus('current')
h3cFreezeRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 6, 1, 1), H3cRaidIDType())
if mibBuilder.loadTexts: h3cFreezeRaidUuid.setStatus('current')
h3cFreezeRaidName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFreezeRaidName.setStatus('current')
h3cFreezeRaidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFreezeRaidRowStatus.setStatus('current')
h3c3rdRaidTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 7), )
if mibBuilder.loadTexts: h3c3rdRaidTable.setStatus('current')
h3c3rdRaidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 7, 1), ).setIndexNames((0, "H3C-RAID-MIB", "h3c3rdRaidUuid"))
if mibBuilder.loadTexts: h3c3rdRaidEntry.setStatus('current')
h3c3rdRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 7, 1, 1), H3cRaidIDType())
if mibBuilder.loadTexts: h3c3rdRaidUuid.setStatus('current')
h3c3rdRaidName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3c3rdRaidName.setStatus('current')
h3c3rdRaidOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 7, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3c3rdRaidOwner.setStatus('current')
h3c3rdRaidImport = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 7, 1, 4), H3cStorageOwnerType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3c3rdRaidImport.setStatus('current')
h3c3rdRaidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 4, 1, 7, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3c3rdRaidRowStatus.setStatus('current')
mibBuilder.exportSymbols("H3C-RAID-MIB", h3cPrimaryRaidCount=h3cPrimaryRaidCount, h3cRaidReadCacheHitPeriod=h3cRaidReadCacheHitPeriod, h3cRaidWriteCacheFlush=h3cRaidWriteCacheFlush, h3c3rdRaidEntry=h3c3rdRaidEntry, h3cRaidTable=h3cRaidTable, h3cRaidLocationState=h3cRaidLocationState, h3cRaidWriteCachePhaseRate=h3cRaidWriteCachePhaseRate, h3cRaidSpareDiskTable=h3cRaidSpareDiskTable, h3cFreezeRaidTable=h3cFreezeRaidTable, h3cRaidDiskList=h3cRaidDiskList, h3cRaidOwner=h3cRaidOwner, h3cRaidManageEntry=h3cRaidManageEntry, h3cRaidSyncPercentage=h3cRaidSyncPercentage, h3cRaidRowStatus=h3cRaidRowStatus, h3cFreezeRaidUuid=h3cFreezeRaidUuid, h3cRaidId=h3cRaidId, h3cRaidEntry=h3cRaidEntry, h3cRaidName=h3cRaidName, h3cRaidAutoSync=h3cRaidAutoSync, h3cFreezeRaidRowStatus=h3cFreezeRaidRowStatus, h3cRaidReadCachePhaseRate=h3cRaidReadCachePhaseRate, h3cRaidFreeSize=h3cRaidFreeSize, h3cRaidType=h3cRaidType, h3c3rdRaidImport=h3c3rdRaidImport, h3cRaidCacheTable=h3cRaidCacheTable, h3cRaidSpareDiskRowStatus=h3cRaidSpareDiskRowStatus, h3cRaidWriteCacheHitPeriod=h3cRaidWriteCacheHitPeriod, h3cRaid=h3cRaid, h3cRaidReadCache=h3cRaidReadCache, h3cRaidMibObjects=h3cRaidMibObjects, h3cRaidManageTable=h3cRaidManageTable, h3cRaidHideState=h3cRaidHideState, h3c3rdRaidUuid=h3c3rdRaidUuid, h3cRaidCacheEntry=h3cRaidCacheEntry, h3cFreezeRaidEntry=h3cFreezeRaidEntry, h3c3rdRaidRowStatus=h3c3rdRaidRowStatus, h3cRaidCapacityTable=h3cRaidCapacityTable, h3cFreezeRaidName=h3cFreezeRaidName, h3cRaidAutoRebuild=h3cRaidAutoRebuild, h3cRaidSpareDiskEntry=h3cRaidSpareDiskEntry, h3c3rdRaidName=h3c3rdRaidName, h3c3rdRaidOwner=h3c3rdRaidOwner, h3cRaidWriteCache=h3cRaidWriteCache, h3cRaidLvRestore=h3cRaidLvRestore, h3cRaidLevel=h3cRaidLevel, h3c3rdRaidTable=h3c3rdRaidTable, h3cRaidTimestamp=h3cRaidTimestamp, h3cRaidWriteCacheAverageRate=h3cRaidWriteCacheAverageRate, h3cRaidAction=h3cRaidAction, h3cRaidUuid=h3cRaidUuid, PYSNMP_MODULE_ID=h3cRaid, h3cRaidReadCacheAverageRate=h3cRaidReadCacheAverageRate, h3cRaidRunState=h3cRaidRunState, h3cRaidSize=h3cRaidSize)
