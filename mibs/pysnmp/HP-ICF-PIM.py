#
# PySNMP MIB module HP-ICF-PIM (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-PIM
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
ipMRouteGroup, ipMRouteSource, ipMRouteEntry = mibBuilder.importSymbols("IPMROUTE-STD-MIB", "ipMRouteGroup", "ipMRouteSource", "ipMRouteEntry")
pimComponentEntry, pimRPSetEntry, pimInterfaceIfIndex, pimRPSetComponent, pimInterfaceEntry, pimNeighborEntry = mibBuilder.importSymbols("PIM-MIB", "pimComponentEntry", "pimRPSetEntry", "pimInterfaceIfIndex", "pimRPSetComponent", "pimInterfaceEntry", "pimNeighborEntry")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, ModuleIdentity, IpAddress, Unsigned32, Bits, ObjectIdentity, Integer32, iso, Counter32, TimeTicks, NotificationType, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "IpAddress", "Unsigned32", "Bits", "ObjectIdentity", "Integer32", "iso", "Counter32", "TimeTicks", "NotificationType", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
hpicfPimMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20))
hpicfPimMIB.setRevisions(('2012-04-12 00:00', '2010-10-04 00:00', '2010-09-01 00:00', '2005-08-04 16:19', '2004-06-30 00:00',))
if mibBuilder.loadTexts: hpicfPimMIB.setLastUpdated('201204120000Z')
if mibBuilder.loadTexts: hpicfPimMIB.setOrganization('HP Networking')
hpicfPimObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1))
hpicfPimTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 0))
hpicfPim = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1))
hpicfPimScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 2))
hpicfPimConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2))
hpicfPimGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1))
hpicfPimCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2))
hpicfPimAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPimAdminStatus.setStatus('current')
hpicfPimStateRefreshInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 300)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPimStateRefreshInterval.setStatus('current')
hpicfPimSPTThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 3), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPimSPTThreshold.setStatus('current')
hpicfPimTrapControl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 4), Bits().clone(namedValues=NamedValues(("neighborLoss", 0), ("hardMrtFull", 1), ("softMrtFull", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPimTrapControl.setStatus('current')
hpicfPimStaticRPSetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 5), )
if mibBuilder.loadTexts: hpicfPimStaticRPSetTable.setStatus('current')
hpicfPimStaticRPSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 5, 1), ).setIndexNames((0, "PIM-MIB", "pimRPSetComponent"), (0, "HP-ICF-PIM", "hpicfPimStaticRPSetGroupAddress"), (0, "HP-ICF-PIM", "hpicfPimStaticRPSetGroupMask"), (0, "HP-ICF-PIM", "hpicfPimStaticRPSetAddress"))
if mibBuilder.loadTexts: hpicfPimStaticRPSetEntry.setStatus('current')
hpicfPimStaticRPSetGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpicfPimStaticRPSetGroupAddress.setStatus('current')
hpicfPimStaticRPSetGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 5, 1, 2), IpAddress())
if mibBuilder.loadTexts: hpicfPimStaticRPSetGroupMask.setStatus('current')
hpicfPimStaticRPSetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 5, 1, 3), IpAddress())
if mibBuilder.loadTexts: hpicfPimStaticRPSetAddress.setStatus('current')
hpicfPimStaticRPSetOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 5, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimStaticRPSetOverride.setStatus('current')
hpicfPimStaticRPSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimStaticRPSetRowStatus.setStatus('current')
hpicfPimIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6), )
if mibBuilder.loadTexts: hpicfPimIfTable.setStatus('current')
hpicfPimIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1), )
pimInterfaceEntry.registerAugmentions(("HP-ICF-PIM", "hpicfPimIfEntry"))
hpicfPimIfEntry.setIndexNames(*pimInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPimIfEntry.setStatus('current')
hpicfPimIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfAddress.setStatus('current')
hpicfPimIfTrigHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfTrigHelloInterval.setStatus('current')
hpicfPimIfHelloHoldtime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(17, 1050)).clone(105)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfHelloHoldtime.setStatus('current')
hpicfPimIfLanPruneDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 4), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfLanPruneDelay.setStatus('current')
hpicfPimIfPropagationDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(250, 2000)).clone(500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfPropagationDelay.setStatus('current')
hpicfPimIfOverrideInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(500, 6000)).clone(2500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfOverrideInterval.setStatus('current')
hpicfPimIfGenerationID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfGenerationID.setStatus('current')
hpicfPimIfJoinPruneHoldtime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 8), Unsigned32().clone(210)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfJoinPruneHoldtime.setStatus('current')
hpicfPimIfGraftRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfGraftRetryInterval.setStatus('current')
hpicfPimIfMaxGraftRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfMaxGraftRetries.setStatus('current')
hpicfPimIfSRTTLThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfSRTTLThreshold.setStatus('current')
hpicfPimIfLanDelayEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfLanDelayEnabled.setStatus('current')
hpicfPimIfSRCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfSRCapable.setStatus('current')
hpicfPimIfDRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 14), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfDRPriority.setStatus('current')
hpicfPimIfNBRTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 8000)).clone(180)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimIfNBRTimeout.setStatus('current')
hpicfPimIfNBRCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfNBRCount.setStatus('current')
hpicfPimIfNegotiatedPropagationDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfNegotiatedPropagationDelay.setStatus('current')
hpicfPimIfNegotiatedOverrideInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfNegotiatedOverrideInterval.setStatus('current')
hpicfPimIfAssertHoldInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfAssertHoldInterval.setStatus('current')
hpicfPimIfNumRoutersNotUsingDRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfNumRoutersNotUsingDRPriority.setStatus('current')
hpicfPimIfNumRoutersNotUsingLanDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfNumRoutersNotUsingLanDelay.setStatus('current')
hpicfPimComponentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7), )
if mibBuilder.loadTexts: hpicfPimComponentTable.setStatus('current')
hpicfPimComponentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1), )
pimComponentEntry.registerAugmentions(("HP-ICF-PIM", "hpicfPimComponentEntry"))
hpicfPimComponentEntry.setIndexNames(*pimComponentEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPimComponentEntry.setStatus('current')
hpicfPimComponentCBSRAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimComponentCBSRAdminStatus.setStatus('current')
hpicfPimComponentCBSRAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimComponentCBSRAddress.setStatus('current')
hpicfPimComponentCBSRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimComponentCBSRPriority.setStatus('current')
hpicfPimComponentCBSRHashMaskLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimComponentCBSRHashMaskLength.setStatus('current')
hpicfPimComponentCBSRMessageInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimComponentCBSRMessageInterval.setStatus('current')
hpicfPimComponentCRPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(192)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimComponentCRPPriority.setStatus('current')
hpicfPimComponentCRPAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimComponentCRPAdvInterval.setStatus('current')
hpicfPimComponentBSRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimComponentBSRPriority.setStatus('current')
hpicfPimComponentBSRHashMaskLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimComponentBSRHashMaskLength.setStatus('current')
hpicfPimComponentBSRUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimComponentBSRUpTime.setStatus('current')
hpicfPimComponentBSRNextMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimComponentBSRNextMessage.setStatus('current')
hpicfPimComponentCRPAdvTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 7, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimComponentCRPAdvTimer.setStatus('current')
hpicfPimRemoveConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPimRemoveConfig.setStatus('current')
hpicfPimStaticRpfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9), )
if mibBuilder.loadTexts: hpicfPimStaticRpfTable.setStatus('current')
hpicfPimStaticRpfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1), ).setIndexNames((0, "HP-ICF-PIM", "hpicfPimStaticRpfSourceAddressType"), (0, "HP-ICF-PIM", "hpicfPimStaticRpfSourceAddress"), (0, "HP-ICF-PIM", "hpicfPimStaticRpfSourcePrefixLength"), (0, "HP-ICF-PIM", "hpicfPimStaticRpfAddressType"), (0, "HP-ICF-PIM", "hpicfPimStaticRpfAddress"))
if mibBuilder.loadTexts: hpicfPimStaticRpfEntry.setStatus('current')
hpicfPimStaticRpfSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfPimStaticRpfSourceAddressType.setStatus('current')
hpicfPimStaticRpfSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 2), InetAddress())
if mibBuilder.loadTexts: hpicfPimStaticRpfSourceAddress.setStatus('current')
hpicfPimStaticRpfSourcePrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: hpicfPimStaticRpfSourcePrefixLength.setStatus('current')
hpicfPimStaticRpfAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 4), InetAddressType())
if mibBuilder.loadTexts: hpicfPimStaticRpfAddressType.setStatus('current')
hpicfPimStaticRpfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 5), InetAddress())
if mibBuilder.loadTexts: hpicfPimStaticRpfAddress.setStatus('current')
hpicfPimStaticRpfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPimStaticRpfRowStatus.setStatus('current')
hpicfPimStaticRpfOverrideState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inActive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimStaticRpfOverrideState.setStatus('current')
hpicfPimStaticRpfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 8), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimStaticRpfIfIndex.setStatus('current')
hpicfPimStaticRpfNeighborAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimStaticRpfNeighborAddressType.setStatus('current')
hpicfPimStaticRpfNeighborAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 9, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimStaticRpfNeighborAddress.setStatus('current')
hpicfPimNumStaticRpfEntries = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNumStaticRpfEntries.setStatus('current')
hpicfPimVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimVersion.setStatus('current')
hpicfPimStarGEntries = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimStarGEntries.setStatus('current')
hpicfPimSGEntries = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimSGEntries.setStatus('current')
hpicfPimMRouteTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14), )
if mibBuilder.loadTexts: hpicfPimMRouteTable.setStatus('current')
hpicfPimMRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1), )
ipMRouteEntry.registerAugmentions(("HP-ICF-PIM", "hpicfPimMRouteEntry"))
hpicfPimMRouteEntry.setIndexNames(*ipMRouteEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPimMRouteEntry.setStatus('current')
hpicfPimSendRegStop = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimSendRegStop.setStatus('current')
hpicfPimSGSourceIsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimSGSourceIsActive.setStatus('current')
hpicfPimOutgoingRegisterIfAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimOutgoingRegisterIfAvailable.setStatus('current')
hpicfPimEntryAddSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimEntryAddSuccess.setStatus('current')
hpicfPimNumOutgoingInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNumOutgoingInterfaces.setStatus('current')
hpicfPimDirectlyConnectedSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimDirectlyConnectedSource.setStatus('current')
hpicfPimNeighborSearchFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNeighborSearchFailure.setStatus('current')
hpicfPimRPTreePruneSent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimRPTreePruneSent.setStatus('current')
hpicfPimOnSPTree = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimOnSPTree.setStatus('current')
hpicfPimRPToSPTreeSwitching = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimRPToSPTreeSwitching.setStatus('current')
hpicfPimWildcardEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimWildcardEntry.setStatus('current')
hpicfPimRPFPrimeNeighborAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimRPFPrimeNeighborAddressType.setStatus('current')
hpicfPimRPFPrimeNeighborAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimRPFPrimeNeighborAddress.setStatus('current')
hpicfPimNumDownstreams = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 14, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNumDownstreams.setStatus('current')
hpicfPimTotalNeighborCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimTotalNeighborCount.setStatus('current')
hpicfPimNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 16), )
if mibBuilder.loadTexts: hpicfPimNeighborTable.setStatus('current')
hpicfPimNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 16, 1), )
pimNeighborEntry.registerAugmentions(("HP-ICF-PIM", "hpicfPimNeighborEntry"))
hpicfPimNeighborEntry.setIndexNames(*pimNeighborEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPimNeighborEntry.setStatus('current')
hpicfPimNeighborDRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 16, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNeighborDRPriority.setStatus('current')
hpicfPimNeighborGenerationIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNeighborGenerationIDValue.setStatus('current')
hpicfPimNeighborHoldtime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNeighborHoldtime.setStatus('current')
hpicfPimNeighborPropagationDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 16, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNeighborPropagationDelay.setStatus('current')
hpicfPimNeighborOverrideInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 16, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNeighborOverrideInterval.setStatus('current')
hpicfPimNeighborStateRefreshInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 16, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimNeighborStateRefreshInterval.setStatus('current')
hpicfPimUcastRouteTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 17), )
if mibBuilder.loadTexts: hpicfPimUcastRouteTable.setStatus('current')
hpicfPimUcastRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 17, 1), ).setIndexNames((0, "HP-ICF-PIM", "hpicfPimUcastRouteAddressType"), (0, "HP-ICF-PIM", "hpicfPimUcastRouteAddress"), (0, "HP-ICF-PIM", "hpicfPimUcastRoutePrefix"))
if mibBuilder.loadTexts: hpicfPimUcastRouteEntry.setStatus('current')
hpicfPimUcastRouteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 17, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfPimUcastRouteAddressType.setStatus('current')
hpicfPimUcastRouteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 17, 1, 2), InetAddress())
if mibBuilder.loadTexts: hpicfPimUcastRouteAddress.setStatus('current')
hpicfPimUcastRoutePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 17, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hpicfPimUcastRoutePrefix.setStatus('current')
hpicfPimUcastRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 17, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimUcastRouteIfIndex.setStatus('current')
hpicfPimUcastRouteUpstreamNbrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 17, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimUcastRouteUpstreamNbrType.setStatus('current')
hpicfPimUcastRouteUpstreamNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 17, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimUcastRouteUpstreamNbr.setStatus('current')
hpicfPimUcastRouteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 17, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimUcastRouteProtocol.setStatus('current')
hpicfPimJoinPruneTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18), )
if mibBuilder.loadTexts: hpicfPimJoinPruneTable.setStatus('current')
hpicfPimJoinPruneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1), ).setIndexNames((0, "HP-ICF-PIM", "hpicfPimJoinPruneInterface"), (0, "HP-ICF-PIM", "hpicfPimJoinPruneInterfaceState"), (0, "HP-ICF-PIM", "hpicfPimJoinPruneSourceType"), (0, "HP-ICF-PIM", "hpicfPimJoinPruneSourceAddress"), (0, "HP-ICF-PIM", "hpicfPimJoinPruneGroupType"), (0, "HP-ICF-PIM", "hpicfPimJoinPruneGroupAddress"))
if mibBuilder.loadTexts: hpicfPimJoinPruneEntry.setStatus('current')
hpicfPimJoinPruneInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpicfPimJoinPruneInterface.setStatus('current')
hpicfPimJoinPruneInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("join", 1), ("prune", 2))))
if mibBuilder.loadTexts: hpicfPimJoinPruneInterfaceState.setStatus('current')
hpicfPimJoinPruneSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1, 3), InetAddressType())
if mibBuilder.loadTexts: hpicfPimJoinPruneSourceType.setStatus('current')
hpicfPimJoinPruneSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1, 4), InetAddress())
if mibBuilder.loadTexts: hpicfPimJoinPruneSourceAddress.setStatus('current')
hpicfPimJoinPruneGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1, 5), InetAddressType())
if mibBuilder.loadTexts: hpicfPimJoinPruneGroupType.setStatus('current')
hpicfPimJoinPruneGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1, 6), InetAddress())
if mibBuilder.loadTexts: hpicfPimJoinPruneGroupAddress.setStatus('current')
hpicfPimJoinPruneNeighborAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimJoinPruneNeighborAddressType.setStatus('current')
hpicfPimJoinPruneNeighborAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimJoinPruneNeighborAddress.setStatus('current')
hpicfPimJoinPruneExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 18, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimJoinPruneExpiryTime.setStatus('current')
hpicfPimRPSetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 19), )
if mibBuilder.loadTexts: hpicfPimRPSetTable.setStatus('current')
hpicfPimRPSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 19, 1), )
pimRPSetEntry.registerAugmentions(("HP-ICF-PIM", "hpicfPimRPSetEntry"))
hpicfPimRPSetEntry.setIndexNames(*pimRPSetEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPimRPSetEntry.setStatus('current')
hpicfPimRPSetPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimRPSetPriority.setStatus('current')
hpicfPimRPSetUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 19, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimRPSetUptime.setStatus('current')
hpicfPimIfMessageCounterTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20), )
if mibBuilder.loadTexts: hpicfPimIfMessageCounterTable.setStatus('current')
hpicfPimIfMessageCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1), ).setIndexNames((0, "PIM-MIB", "pimInterfaceIfIndex"))
if mibBuilder.loadTexts: hpicfPimIfMessageCounterEntry.setStatus('current')
hpicfPimIfMsgCountAssertReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountAssertReceive.setStatus('current')
hpicfPimIfMsgCountAssertTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountAssertTransmit.setStatus('current')
hpicfPimIfMsgCountAssertInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountAssertInvalid.setStatus('current')
hpicfPimIfMsgCountGraftReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountGraftReceive.setStatus('current')
hpicfPimIfMsgCountGraftTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountGraftTransmit.setStatus('current')
hpicfPimIfMsgCountGraftInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountGraftInvalid.setStatus('current')
hpicfPimIfMsgCountGraftAckReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountGraftAckReceive.setStatus('current')
hpicfPimIfMsgCountGraftAckTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountGraftAckTransmit.setStatus('current')
hpicfPimIfMsgCountGraftAckInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountGraftAckInvalid.setStatus('current')
hpicfPimIfMsgCountHelloReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountHelloReceive.setStatus('current')
hpicfPimIfMsgCountHelloTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountHelloTransmit.setStatus('current')
hpicfPimIfMsgCountHelloInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountHelloInvalid.setStatus('current')
hpicfPimIfMsgCountJPReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountJPReceive.setStatus('current')
hpicfPimIfMsgCountJPTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountJPTransmit.setStatus('current')
hpicfPimIfMsgCountJPInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountJPInvalid.setStatus('current')
hpicfPimIfMsgCountSRReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountSRReceive.setStatus('current')
hpicfPimIfMsgCountSRTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountSRTransmit.setStatus('current')
hpicfPimIfMsgCountSRInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountSRInvalid.setStatus('current')
hpicfPimIfMsgCountBSRReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountBSRReceive.setStatus('current')
hpicfPimIfMsgCountBSRTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountBSRTransmit.setStatus('current')
hpicfPimIfMsgCountBSRInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountBSRInvalid.setStatus('current')
hpicfPimIfMsgCountCRPReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountCRPReceive.setStatus('current')
hpicfPimIfMsgCountCRPTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountCRPTransmit.setStatus('current')
hpicfPimIfMsgCountCRPInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 20, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimIfMsgCountCRPInvalid.setStatus('current')
hpicfPimUnackGraftsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 21), )
if mibBuilder.loadTexts: hpicfPimUnackGraftsTable.setStatus('current')
hpicfPimUnackGraftsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 21, 1), ).setIndexNames((0, "HP-ICF-PIM", "hpicfPimUnackGraftSourceType"), (0, "HP-ICF-PIM", "hpicfPimUnackGraftSource"), (0, "HP-ICF-PIM", "hpicfPimUnackGraftGroupType"), (0, "HP-ICF-PIM", "hpicfPimUnackGraftGroup"))
if mibBuilder.loadTexts: hpicfPimUnackGraftsEntry.setStatus('current')
hpicfPimUnackGraftSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 21, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfPimUnackGraftSourceType.setStatus('current')
hpicfPimUnackGraftSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 21, 1, 2), InetAddress())
if mibBuilder.loadTexts: hpicfPimUnackGraftSource.setStatus('current')
hpicfPimUnackGraftGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 21, 1, 3), InetAddressType())
if mibBuilder.loadTexts: hpicfPimUnackGraftGroupType.setStatus('current')
hpicfPimUnackGraftGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 21, 1, 4), InetAddress())
if mibBuilder.loadTexts: hpicfPimUnackGraftGroup.setStatus('current')
hpicfPimUnackGraftAge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimUnackGraftAge.setStatus('current')
hpicfPimUnackGraftRetransIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 1, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimUnackGraftRetransIn.setStatus('current')
hpicfPimMsgCountRegisterReceive = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimMsgCountRegisterReceive.setStatus('current')
hpicfPimMsgCountRegisterTransmit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimMsgCountRegisterTransmit.setStatus('current')
hpicfPimMsgCountRegisterInvalid = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimMsgCountRegisterInvalid.setStatus('current')
hpicfPimMsgCountRegStopReceive = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimMsgCountRegStopReceive.setStatus('current')
hpicfPimMsgCountRegStopTransmit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimMsgCountRegStopTransmit.setStatus('current')
hpicfPimMsgCountRegStopInvalid = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPimMsgCountRegStopInvalid.setStatus('current')
hpicfPimHardMRTFull = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 0, 1))
if mibBuilder.loadTexts: hpicfPimHardMRTFull.setStatus('current')
hpicfPimSoftMRTFull = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 1, 0, 2))
if mibBuilder.loadTexts: hpicfPimSoftMRTFull.setStatus('current')
hpicfPimNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 1)).setObjects(("HP-ICF-PIM", "hpicfPimHardMRTFull"), ("HP-ICF-PIM", "hpicfPimSoftMRTFull"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimNotificationGroup = hpicfPimNotificationGroup.setStatus('current')
hpicfPimBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 2)).setObjects(("HP-ICF-PIM", "hpicfPimAdminStatus"), ("HP-ICF-PIM", "hpicfPimStateRefreshInterval"), ("HP-ICF-PIM", "hpicfPimSPTThreshold"), ("HP-ICF-PIM", "hpicfPimTrapControl"), ("HP-ICF-PIM", "hpicfPimRemoveConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimBaseGroup = hpicfPimBaseGroup.setStatus('current')
hpicfPimStaticRPSetMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 3)).setObjects(("HP-ICF-PIM", "hpicfPimStaticRPSetOverride"), ("HP-ICF-PIM", "hpicfPimStaticRPSetRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimStaticRPSetMappingGroup = hpicfPimStaticRPSetMappingGroup.setStatus('current')
hpicfPimSparseIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 4)).setObjects(("HP-ICF-PIM", "hpicfPimIfAddress"), ("HP-ICF-PIM", "hpicfPimIfTrigHelloInterval"), ("HP-ICF-PIM", "hpicfPimIfHelloHoldtime"), ("HP-ICF-PIM", "hpicfPimIfLanPruneDelay"), ("HP-ICF-PIM", "hpicfPimIfPropagationDelay"), ("HP-ICF-PIM", "hpicfPimIfOverrideInterval"), ("HP-ICF-PIM", "hpicfPimIfGenerationID"), ("HP-ICF-PIM", "hpicfPimIfJoinPruneHoldtime"), ("HP-ICF-PIM", "hpicfPimIfLanDelayEnabled"), ("HP-ICF-PIM", "hpicfPimIfDRPriority"), ("HP-ICF-PIM", "hpicfPimIfNBRTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimSparseIfGroup = hpicfPimSparseIfGroup.setStatus('current')
hpicfPimDenseIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 5)).setObjects(("HP-ICF-PIM", "hpicfPimIfAddress"), ("HP-ICF-PIM", "hpicfPimIfTrigHelloInterval"), ("HP-ICF-PIM", "hpicfPimIfHelloHoldtime"), ("HP-ICF-PIM", "hpicfPimIfLanPruneDelay"), ("HP-ICF-PIM", "hpicfPimIfPropagationDelay"), ("HP-ICF-PIM", "hpicfPimIfOverrideInterval"), ("HP-ICF-PIM", "hpicfPimIfGenerationID"), ("HP-ICF-PIM", "hpicfPimIfJoinPruneHoldtime"), ("HP-ICF-PIM", "hpicfPimIfGraftRetryInterval"), ("HP-ICF-PIM", "hpicfPimIfMaxGraftRetries"), ("HP-ICF-PIM", "hpicfPimIfSRTTLThreshold"), ("HP-ICF-PIM", "hpicfPimIfLanDelayEnabled"), ("HP-ICF-PIM", "hpicfPimIfSRCapable"), ("HP-ICF-PIM", "hpicfPimIfDRPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimDenseIfGroup = hpicfPimDenseIfGroup.setStatus('current')
hpicfPimComponentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 6)).setObjects(("HP-ICF-PIM", "hpicfPimComponentCBSRAdminStatus"), ("HP-ICF-PIM", "hpicfPimComponentCBSRAddress"), ("HP-ICF-PIM", "hpicfPimComponentCBSRPriority"), ("HP-ICF-PIM", "hpicfPimComponentCBSRHashMaskLength"), ("HP-ICF-PIM", "hpicfPimComponentCBSRMessageInterval"), ("HP-ICF-PIM", "hpicfPimComponentCRPPriority"), ("HP-ICF-PIM", "hpicfPimComponentCRPAdvInterval"), ("HP-ICF-PIM", "hpicfPimComponentBSRPriority"), ("HP-ICF-PIM", "hpicfPimComponentBSRHashMaskLength"), ("HP-ICF-PIM", "hpicfPimComponentBSRUpTime"), ("HP-ICF-PIM", "hpicfPimComponentBSRNextMessage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimComponentGroup = hpicfPimComponentGroup.setStatus('current')
hpicfPimStaticRpfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 7)).setObjects(("HP-ICF-PIM", "hpicfPimStaticRpfOverrideState"), ("HP-ICF-PIM", "hpicfPimStaticRpfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimStaticRpfGroup = hpicfPimStaticRpfGroup.setStatus('current')
hpicfPimInterfaceExtensionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 8)).setObjects(("HP-ICF-PIM", "hpicfPimVersion"), ("HP-ICF-PIM", "hpicfPimIfNBRCount"), ("HP-ICF-PIM", "hpicfPimIfNegotiatedPropagationDelay"), ("HP-ICF-PIM", "hpicfPimIfNegotiatedOverrideInterval"), ("HP-ICF-PIM", "hpicfPimIfAssertHoldInterval"), ("HP-ICF-PIM", "hpicfPimIfNumRoutersNotUsingDRPriority"), ("HP-ICF-PIM", "hpicfPimIfNumRoutersNotUsingLanDelay"), ("HP-ICF-PIM", "hpicfPimIfMsgCountGraftReceive"), ("HP-ICF-PIM", "hpicfPimIfMsgCountGraftTransmit"), ("HP-ICF-PIM", "hpicfPimIfMsgCountGraftInvalid"), ("HP-ICF-PIM", "hpicfPimIfMsgCountGraftAckReceive"), ("HP-ICF-PIM", "hpicfPimIfMsgCountGraftAckTransmit"), ("HP-ICF-PIM", "hpicfPimIfMsgCountGraftAckInvalid"), ("HP-ICF-PIM", "hpicfPimIfMsgCountSRReceive"), ("HP-ICF-PIM", "hpicfPimIfMsgCountSRTransmit"), ("HP-ICF-PIM", "hpicfPimIfMsgCountSRInvalid"), ("HP-ICF-PIM", "hpicfPimIfMsgCountBSRReceive"), ("HP-ICF-PIM", "hpicfPimIfMsgCountBSRTransmit"), ("HP-ICF-PIM", "hpicfPimIfMsgCountBSRInvalid"), ("HP-ICF-PIM", "hpicfPimIfMsgCountCRPReceive"), ("HP-ICF-PIM", "hpicfPimIfMsgCountCRPTransmit"), ("HP-ICF-PIM", "hpicfPimIfMsgCountCRPInvalid"), ("HP-ICF-PIM", "hpicfPimIfMsgCountJPReceive"), ("HP-ICF-PIM", "hpicfPimIfMsgCountJPTransmit"), ("HP-ICF-PIM", "hpicfPimIfMsgCountJPInvalid"), ("HP-ICF-PIM", "hpicfPimIfMsgCountAssertReceive"), ("HP-ICF-PIM", "hpicfPimIfMsgCountAssertTransmit"), ("HP-ICF-PIM", "hpicfPimIfMsgCountAssertInvalid"), ("HP-ICF-PIM", "hpicfPimIfMsgCountHelloReceive"), ("HP-ICF-PIM", "hpicfPimIfMsgCountHelloTransmit"), ("HP-ICF-PIM", "hpicfPimIfMsgCountHelloInvalid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimInterfaceExtensionsGroup = hpicfPimInterfaceExtensionsGroup.setStatus('current')
hpicfPimStaticRpfExtensionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 9)).setObjects(("HP-ICF-PIM", "hpicfPimStaticRpfIfIndex"), ("HP-ICF-PIM", "hpicfPimStaticRpfNeighborAddressType"), ("HP-ICF-PIM", "hpicfPimStaticRpfNeighborAddress"), ("HP-ICF-PIM", "hpicfPimNumStaticRpfEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimStaticRpfExtensionsGroup = hpicfPimStaticRpfExtensionsGroup.setStatus('current')
hpicfPimNeighborGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 10)).setObjects(("HP-ICF-PIM", "hpicfPimNeighborDRPriority"), ("HP-ICF-PIM", "hpicfPimNeighborGenerationIDValue"), ("HP-ICF-PIM", "hpicfPimNeighborHoldtime"), ("HP-ICF-PIM", "hpicfPimNeighborPropagationDelay"), ("HP-ICF-PIM", "hpicfPimNeighborOverrideInterval"), ("HP-ICF-PIM", "hpicfPimNeighborStateRefreshInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimNeighborGroup = hpicfPimNeighborGroup.setStatus('current')
hpicfPimMRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 11)).setObjects(("HP-ICF-PIM", "hpicfPimSendRegStop"), ("HP-ICF-PIM", "hpicfPimSGSourceIsActive"), ("HP-ICF-PIM", "hpicfPimOutgoingRegisterIfAvailable"), ("HP-ICF-PIM", "hpicfPimEntryAddSuccess"), ("HP-ICF-PIM", "hpicfPimNumOutgoingInterfaces"), ("HP-ICF-PIM", "hpicfPimDirectlyConnectedSource"), ("HP-ICF-PIM", "hpicfPimNeighborSearchFailure"), ("HP-ICF-PIM", "hpicfPimRPTreePruneSent"), ("HP-ICF-PIM", "hpicfPimOnSPTree"), ("HP-ICF-PIM", "hpicfPimRPToSPTreeSwitching"), ("HP-ICF-PIM", "hpicfPimWildcardEntry"), ("HP-ICF-PIM", "hpicfPimRPFPrimeNeighborAddressType"), ("HP-ICF-PIM", "hpicfPimRPFPrimeNeighborAddress"), ("HP-ICF-PIM", "hpicfPimNumDownstreams"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimMRouteGroup = hpicfPimMRouteGroup.setStatus('current')
hpicfPimUcastRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 12)).setObjects(("HP-ICF-PIM", "hpicfPimUcastRouteIfIndex"), ("HP-ICF-PIM", "hpicfPimUcastRouteUpstreamNbrType"), ("HP-ICF-PIM", "hpicfPimUcastRouteUpstreamNbr"), ("HP-ICF-PIM", "hpicfPimUcastRouteProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimUcastRouteGroup = hpicfPimUcastRouteGroup.setStatus('current')
hpicfPimUnackGraftsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 13)).setObjects(("HP-ICF-PIM", "hpicfPimUnackGraftAge"), ("HP-ICF-PIM", "hpicfPimUnackGraftRetransIn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimUnackGraftsGroup = hpicfPimUnackGraftsGroup.setStatus('current')
hpicfPimGlobalCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 14)).setObjects(("HP-ICF-PIM", "hpicfPimMsgCountRegisterReceive"), ("HP-ICF-PIM", "hpicfPimMsgCountRegisterTransmit"), ("HP-ICF-PIM", "hpicfPimMsgCountRegisterInvalid"), ("HP-ICF-PIM", "hpicfPimMsgCountRegStopReceive"), ("HP-ICF-PIM", "hpicfPimMsgCountRegStopTransmit"), ("HP-ICF-PIM", "hpicfPimMsgCountRegStopInvalid"), ("HP-ICF-PIM", "hpicfPimStarGEntries"), ("HP-ICF-PIM", "hpicfPimSGEntries"), ("HP-ICF-PIM", "hpicfPimTotalNeighborCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimGlobalCounterGroup = hpicfPimGlobalCounterGroup.setStatus('current')
hpicfPimRPSetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 15)).setObjects(("HP-ICF-PIM", "hpicfPimRPSetPriority"), ("HP-ICF-PIM", "hpicfPimRPSetUptime"), ("HP-ICF-PIM", "hpicfPimComponentCRPAdvTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimRPSetGroup = hpicfPimRPSetGroup.setStatus('current')
hpicfPimJoinPruneGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 1, 17)).setObjects(("HP-ICF-PIM", "hpicfPimJoinPruneNeighborAddressType"), ("HP-ICF-PIM", "hpicfPimJoinPruneNeighborAddress"), ("HP-ICF-PIM", "hpicfPimJoinPruneExpiryTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimJoinPruneGroup = hpicfPimJoinPruneGroup.setStatus('current')
hpicfPimSparseMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2, 1)).setObjects(("HP-ICF-PIM", "hpicfPimBaseGroup"), ("HP-ICF-PIM", "hpicfPimStaticRPSetMappingGroup"), ("HP-ICF-PIM", "hpicfPimSparseIfGroup"), ("HP-ICF-PIM", "hpicfPimComponentGroup"), ("HP-ICF-PIM", "hpicfPimStaticRpfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimSparseMIBCompliance = hpicfPimSparseMIBCompliance.setStatus('current')
hpicfPimDenseMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2, 2)).setObjects(("HP-ICF-PIM", "hpicfPimBaseGroup"), ("HP-ICF-PIM", "hpicfPimDenseIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimDenseMIBCompliance = hpicfPimDenseMIBCompliance.setStatus('current')
hpicfPimNotificationCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2, 3)).setObjects(("HP-ICF-PIM", "hpicfPimNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimNotificationCompliance = hpicfPimNotificationCompliance.setStatus('current')
hpicfPimUcastRoutingCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2, 4)).setObjects(("HP-ICF-PIM", "hpicfPimStaticRpfExtensionsGroup"), ("HP-ICF-PIM", "hpicfPimUcastRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimUcastRoutingCompliance = hpicfPimUcastRoutingCompliance.setStatus('current')
hpicfPimMcastRoutingCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2, 5)).setObjects(("HP-ICF-PIM", "hpicfPimMRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimMcastRoutingCompliance = hpicfPimMcastRoutingCompliance.setStatus('current')
hpicfPimInterfaceInfoCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2, 6)).setObjects(("HP-ICF-PIM", "hpicfPimNeighborGroup"), ("HP-ICF-PIM", "hpicfPimInterfaceExtensionsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimInterfaceInfoCompliance = hpicfPimInterfaceInfoCompliance.setStatus('current')
hpicfPimProtoMessageCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2, 7)).setObjects(("HP-ICF-PIM", "hpicfPimUnackGraftsGroup"), ("HP-ICF-PIM", "hpicfPimJoinPruneGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimProtoMessageCompliance = hpicfPimProtoMessageCompliance.setStatus('current')
hpicfPimGlobalCountersCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2, 8)).setObjects(("HP-ICF-PIM", "hpicfPimGlobalCounterGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimGlobalCountersCompliance = hpicfPimGlobalCountersCompliance.setStatus('current')
hpicfPimRPSetExtensionsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20, 2, 2, 9)).setObjects(("HP-ICF-PIM", "hpicfPimRPSetGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPimRPSetExtensionsCompliance = hpicfPimRPSetExtensionsCompliance.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-PIM", hpicfPimUnackGraftGroupType=hpicfPimUnackGraftGroupType, hpicfPimStaticRpfSourceAddress=hpicfPimStaticRpfSourceAddress, hpicfPimSGSourceIsActive=hpicfPimSGSourceIsActive, hpicfPimJoinPruneInterfaceState=hpicfPimJoinPruneInterfaceState, hpicfPimNumDownstreams=hpicfPimNumDownstreams, hpicfPimIfMsgCountGraftTransmit=hpicfPimIfMsgCountGraftTransmit, hpicfPimGlobalCounterGroup=hpicfPimGlobalCounterGroup, hpicfPimRPFPrimeNeighborAddress=hpicfPimRPFPrimeNeighborAddress, hpicfPimHardMRTFull=hpicfPimHardMRTFull, hpicfPimObjects=hpicfPimObjects, hpicfPimRPToSPTreeSwitching=hpicfPimRPToSPTreeSwitching, hpicfPimStaticRPSetMappingGroup=hpicfPimStaticRPSetMappingGroup, hpicfPimIfJoinPruneHoldtime=hpicfPimIfJoinPruneHoldtime, hpicfPimNeighborOverrideInterval=hpicfPimNeighborOverrideInterval, hpicfPimIfTrigHelloInterval=hpicfPimIfTrigHelloInterval, hpicfPimMsgCountRegStopInvalid=hpicfPimMsgCountRegStopInvalid, hpicfPimIfMsgCountGraftInvalid=hpicfPimIfMsgCountGraftInvalid, hpicfPimIfMsgCountHelloReceive=hpicfPimIfMsgCountHelloReceive, hpicfPimRPSetUptime=hpicfPimRPSetUptime, hpicfPimOutgoingRegisterIfAvailable=hpicfPimOutgoingRegisterIfAvailable, hpicfPimMsgCountRegisterReceive=hpicfPimMsgCountRegisterReceive, hpicfPimRPTreePruneSent=hpicfPimRPTreePruneSent, hpicfPimIfPropagationDelay=hpicfPimIfPropagationDelay, hpicfPimRPSetPriority=hpicfPimRPSetPriority, hpicfPimUcastRoutingCompliance=hpicfPimUcastRoutingCompliance, hpicfPimIfHelloHoldtime=hpicfPimIfHelloHoldtime, hpicfPimStaticRPSetOverride=hpicfPimStaticRPSetOverride, hpicfPimUnackGraftGroup=hpicfPimUnackGraftGroup, hpicfPimIfMsgCountJPInvalid=hpicfPimIfMsgCountJPInvalid, hpicfPimMcastRoutingCompliance=hpicfPimMcastRoutingCompliance, hpicfPimComponentCRPPriority=hpicfPimComponentCRPPriority, hpicfPimNotificationCompliance=hpicfPimNotificationCompliance, hpicfPimStaticRPSetGroupAddress=hpicfPimStaticRPSetGroupAddress, hpicfPimIfMsgCountSRInvalid=hpicfPimIfMsgCountSRInvalid, hpicfPimComponentCRPAdvInterval=hpicfPimComponentCRPAdvInterval, hpicfPimIfNBRTimeout=hpicfPimIfNBRTimeout, hpicfPimNeighborEntry=hpicfPimNeighborEntry, hpicfPimStaticRpfAddressType=hpicfPimStaticRpfAddressType, hpicfPimStaticRpfNeighborAddressType=hpicfPimStaticRpfNeighborAddressType, hpicfPimOnSPTree=hpicfPimOnSPTree, hpicfPimMsgCountRegisterTransmit=hpicfPimMsgCountRegisterTransmit, hpicfPimMsgCountRegStopTransmit=hpicfPimMsgCountRegStopTransmit, hpicfPimSPTThreshold=hpicfPimSPTThreshold, hpicfPimComponentBSRHashMaskLength=hpicfPimComponentBSRHashMaskLength, hpicfPimStaticRPSetEntry=hpicfPimStaticRPSetEntry, hpicfPimRPSetTable=hpicfPimRPSetTable, hpicfPimMRouteGroup=hpicfPimMRouteGroup, hpicfPimSparseMIBCompliance=hpicfPimSparseMIBCompliance, hpicfPimDenseIfGroup=hpicfPimDenseIfGroup, hpicfPimIfSRTTLThreshold=hpicfPimIfSRTTLThreshold, hpicfPimJoinPruneSourceAddress=hpicfPimJoinPruneSourceAddress, hpicfPimMsgCountRegisterInvalid=hpicfPimMsgCountRegisterInvalid, hpicfPimUcastRouteUpstreamNbrType=hpicfPimUcastRouteUpstreamNbrType, hpicfPimIfOverrideInterval=hpicfPimIfOverrideInterval, hpicfPimUcastRouteEntry=hpicfPimUcastRouteEntry, hpicfPimIfGenerationID=hpicfPimIfGenerationID, hpicfPimIfMsgCountJPTransmit=hpicfPimIfMsgCountJPTransmit, hpicfPimIfSRCapable=hpicfPimIfSRCapable, hpicfPimNumStaticRpfEntries=hpicfPimNumStaticRpfEntries, hpicfPimJoinPruneNeighborAddress=hpicfPimJoinPruneNeighborAddress, hpicfPimDirectlyConnectedSource=hpicfPimDirectlyConnectedSource, hpicfPimIfAssertHoldInterval=hpicfPimIfAssertHoldInterval, hpicfPimRPSetEntry=hpicfPimRPSetEntry, hpicfPimIfMsgCountBSRTransmit=hpicfPimIfMsgCountBSRTransmit, hpicfPimIfMsgCountBSRInvalid=hpicfPimIfMsgCountBSRInvalid, hpicfPimUnackGraftAge=hpicfPimUnackGraftAge, hpicfPimIfMsgCountGraftAckInvalid=hpicfPimIfMsgCountGraftAckInvalid, hpicfPimNeighborGroup=hpicfPimNeighborGroup, hpicfPimUcastRouteProtocol=hpicfPimUcastRouteProtocol, hpicfPimUcastRouteAddress=hpicfPimUcastRouteAddress, hpicfPimIfEntry=hpicfPimIfEntry, hpicfPimStaticRpfIfIndex=hpicfPimStaticRpfIfIndex, hpicfPimJoinPruneTable=hpicfPimJoinPruneTable, hpicfPimNotificationGroup=hpicfPimNotificationGroup, hpicfPimStateRefreshInterval=hpicfPimStateRefreshInterval, hpicfPimIfMsgCountCRPInvalid=hpicfPimIfMsgCountCRPInvalid, hpicfPimDenseMIBCompliance=hpicfPimDenseMIBCompliance, hpicfPimConformance=hpicfPimConformance, hpicfPimIfMsgCountHelloInvalid=hpicfPimIfMsgCountHelloInvalid, hpicfPimUnackGraftsTable=hpicfPimUnackGraftsTable, hpicfPimIfMaxGraftRetries=hpicfPimIfMaxGraftRetries, hpicfPimUcastRouteTable=hpicfPimUcastRouteTable, hpicfPimStaticRPSetGroupMask=hpicfPimStaticRPSetGroupMask, hpicfPimIfMsgCountHelloTransmit=hpicfPimIfMsgCountHelloTransmit, hpicfPimIfLanDelayEnabled=hpicfPimIfLanDelayEnabled, hpicfPimNumOutgoingInterfaces=hpicfPimNumOutgoingInterfaces, hpicfPimIfMsgCountGraftAckReceive=hpicfPimIfMsgCountGraftAckReceive, hpicfPimUcastRouteAddressType=hpicfPimUcastRouteAddressType, hpicfPimCompliances=hpicfPimCompliances, hpicfPimStaticRpfGroup=hpicfPimStaticRpfGroup, hpicfPimRemoveConfig=hpicfPimRemoveConfig, hpicfPimIfMsgCountCRPTransmit=hpicfPimIfMsgCountCRPTransmit, hpicfPimComponentGroup=hpicfPimComponentGroup, hpicfPimIfMsgCountAssertTransmit=hpicfPimIfMsgCountAssertTransmit, hpicfPimStaticRpfSourcePrefixLength=hpicfPimStaticRpfSourcePrefixLength, hpicfPimIfNegotiatedOverrideInterval=hpicfPimIfNegotiatedOverrideInterval, hpicfPimComponentBSRUpTime=hpicfPimComponentBSRUpTime, hpicfPimIfNumRoutersNotUsingLanDelay=hpicfPimIfNumRoutersNotUsingLanDelay, hpicfPimNeighborHoldtime=hpicfPimNeighborHoldtime, hpicfPimUnackGraftSource=hpicfPimUnackGraftSource, hpicfPimNeighborDRPriority=hpicfPimNeighborDRPriority, hpicfPimStaticRpfNeighborAddress=hpicfPimStaticRpfNeighborAddress, hpicfPimNeighborSearchFailure=hpicfPimNeighborSearchFailure, hpicfPimIfMsgCountCRPReceive=hpicfPimIfMsgCountCRPReceive, hpicfPimIfMessageCounterTable=hpicfPimIfMessageCounterTable, hpicfPimIfDRPriority=hpicfPimIfDRPriority, hpicfPimUnackGraftsGroup=hpicfPimUnackGraftsGroup, hpicfPimIfMsgCountJPReceive=hpicfPimIfMsgCountJPReceive, hpicfPimBaseGroup=hpicfPimBaseGroup, hpicfPimComponentBSRNextMessage=hpicfPimComponentBSRNextMessage, hpicfPimIfNumRoutersNotUsingDRPriority=hpicfPimIfNumRoutersNotUsingDRPriority, hpicfPimComponentCRPAdvTimer=hpicfPimComponentCRPAdvTimer, hpicfPimStaticRpfSourceAddressType=hpicfPimStaticRpfSourceAddressType, hpicfPimComponentCBSRMessageInterval=hpicfPimComponentCBSRMessageInterval, hpicfPimIfNegotiatedPropagationDelay=hpicfPimIfNegotiatedPropagationDelay, hpicfPimIfMsgCountAssertReceive=hpicfPimIfMsgCountAssertReceive, hpicfPimInterfaceExtensionsGroup=hpicfPimInterfaceExtensionsGroup, hpicfPimVersion=hpicfPimVersion, hpicfPimStaticRPSetAddress=hpicfPimStaticRPSetAddress, hpicfPimStarGEntries=hpicfPimStarGEntries, hpicfPimComponentCBSRPriority=hpicfPimComponentCBSRPriority, hpicfPimNeighborGenerationIDValue=hpicfPimNeighborGenerationIDValue, hpicfPimEntryAddSuccess=hpicfPimEntryAddSuccess, hpicfPimRPSetExtensionsCompliance=hpicfPimRPSetExtensionsCompliance, hpicfPimIfMsgCountSRReceive=hpicfPimIfMsgCountSRReceive, hpicfPimIfMsgCountGraftReceive=hpicfPimIfMsgCountGraftReceive, hpicfPimScalars=hpicfPimScalars, hpicfPimMsgCountRegStopReceive=hpicfPimMsgCountRegStopReceive, hpicfPimStaticRpfRowStatus=hpicfPimStaticRpfRowStatus, hpicfPimComponentCBSRAdminStatus=hpicfPimComponentCBSRAdminStatus, hpicfPimNeighborStateRefreshInterval=hpicfPimNeighborStateRefreshInterval, hpicfPimRPFPrimeNeighborAddressType=hpicfPimRPFPrimeNeighborAddressType, hpicfPimStaticRpfAddress=hpicfPimStaticRpfAddress, hpicfPimIfGraftRetryInterval=hpicfPimIfGraftRetryInterval, hpicfPimRPSetGroup=hpicfPimRPSetGroup, hpicfPimComponentTable=hpicfPimComponentTable, hpicfPimTrapControl=hpicfPimTrapControl, hpicfPimUcastRoutePrefix=hpicfPimUcastRoutePrefix, hpicfPimGroups=hpicfPimGroups, hpicfPimGlobalCountersCompliance=hpicfPimGlobalCountersCompliance, hpicfPimIfMsgCountAssertInvalid=hpicfPimIfMsgCountAssertInvalid, hpicfPimIfMsgCountSRTransmit=hpicfPimIfMsgCountSRTransmit, hpicfPimTraps=hpicfPimTraps, hpicfPimInterfaceInfoCompliance=hpicfPimInterfaceInfoCompliance, hpicfPimWildcardEntry=hpicfPimWildcardEntry, PYSNMP_MODULE_ID=hpicfPimMIB, hpicfPimUnackGraftRetransIn=hpicfPimUnackGraftRetransIn, hpicfPimSoftMRTFull=hpicfPimSoftMRTFull, hpicfPimJoinPruneExpiryTime=hpicfPimJoinPruneExpiryTime, hpicfPimMIB=hpicfPimMIB, hpicfPimComponentEntry=hpicfPimComponentEntry, hpicfPimUnackGraftSourceType=hpicfPimUnackGraftSourceType, hpicfPim=hpicfPim, hpicfPimJoinPruneGroupType=hpicfPimJoinPruneGroupType, hpicfPimSparseIfGroup=hpicfPimSparseIfGroup, hpicfPimComponentCBSRHashMaskLength=hpicfPimComponentCBSRHashMaskLength, hpicfPimStaticRpfEntry=hpicfPimStaticRpfEntry, hpicfPimStaticRPSetTable=hpicfPimStaticRPSetTable, hpicfPimMRouteTable=hpicfPimMRouteTable, hpicfPimJoinPruneGroup=hpicfPimJoinPruneGroup, hpicfPimStaticRPSetRowStatus=hpicfPimStaticRPSetRowStatus, hpicfPimMRouteEntry=hpicfPimMRouteEntry, hpicfPimIfMsgCountGraftAckTransmit=hpicfPimIfMsgCountGraftAckTransmit, hpicfPimUcastRouteGroup=hpicfPimUcastRouteGroup, hpicfPimIfLanPruneDelay=hpicfPimIfLanPruneDelay, hpicfPimJoinPruneGroupAddress=hpicfPimJoinPruneGroupAddress, hpicfPimUcastRouteIfIndex=hpicfPimUcastRouteIfIndex, hpicfPimUnackGraftsEntry=hpicfPimUnackGraftsEntry, hpicfPimSendRegStop=hpicfPimSendRegStop, hpicfPimNeighborTable=hpicfPimNeighborTable, hpicfPimSGEntries=hpicfPimSGEntries, hpicfPimIfAddress=hpicfPimIfAddress, hpicfPimUcastRouteUpstreamNbr=hpicfPimUcastRouteUpstreamNbr, hpicfPimJoinPruneNeighborAddressType=hpicfPimJoinPruneNeighborAddressType, hpicfPimStaticRpfOverrideState=hpicfPimStaticRpfOverrideState, hpicfPimComponentCBSRAddress=hpicfPimComponentCBSRAddress, hpicfPimAdminStatus=hpicfPimAdminStatus, hpicfPimNeighborPropagationDelay=hpicfPimNeighborPropagationDelay, hpicfPimJoinPruneSourceType=hpicfPimJoinPruneSourceType, hpicfPimComponentBSRPriority=hpicfPimComponentBSRPriority, hpicfPimStaticRpfTable=hpicfPimStaticRpfTable, hpicfPimIfMessageCounterEntry=hpicfPimIfMessageCounterEntry, hpicfPimProtoMessageCompliance=hpicfPimProtoMessageCompliance, hpicfPimIfTable=hpicfPimIfTable, hpicfPimJoinPruneEntry=hpicfPimJoinPruneEntry, hpicfPimTotalNeighborCount=hpicfPimTotalNeighborCount, hpicfPimStaticRpfExtensionsGroup=hpicfPimStaticRpfExtensionsGroup, hpicfPimIfMsgCountBSRReceive=hpicfPimIfMsgCountBSRReceive, hpicfPimIfNBRCount=hpicfPimIfNBRCount, hpicfPimJoinPruneInterface=hpicfPimJoinPruneInterface)
