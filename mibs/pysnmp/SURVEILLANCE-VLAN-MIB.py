#
# PySNMP MIB module SURVEILLANCE-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SURVEILLANCE-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:04:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
PortList, VlanIdOrNone = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "VlanIdOrNone")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, TimeTicks, Bits, NotificationType, Gauge32, MibIdentifier, iso, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "Bits", "NotificationType", "Gauge32", "MibIdentifier", "iso", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "Counter64", "IpAddress")
MacAddress, DateAndTime, RowStatus, TruthValue, TimeInterval, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DateAndTime", "RowStatus", "TruthValue", "TimeInterval", "TextualConvention", "DisplayString")
swSurveillanceVLANMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 102))
if mibBuilder.loadTexts: swSurveillanceVLANMIB.setLastUpdated('201109190000Z')
if mibBuilder.loadTexts: swSurveillanceVLANMIB.setOrganization('D-Link Corp.')
swSurveillanceVLANNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 102, 0))
swSurveillanceVLANMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 102, 1))
swSurveillanceVlanCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 1))
swSurveillanceVlanInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 2))
swSurveillanceVlanMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3))
swSurveillanceVlanId = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 1, 1), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSurveillanceVlanId.setStatus('current')
swSurveillanceVlanGlobalState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSurveillanceVlanGlobalState.setStatus('current')
swSurveillanceVlanPriority = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSurveillanceVlanPriority.setStatus('current')
swSurveillanceVlanAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSurveillanceVlanAgingTime.setStatus('current')
swSurveillanceVlanLogState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSurveillanceVlanLogState.setStatus('current')
swSurveillanceVlanMemberPortlist = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 2, 1), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSurveillanceVlanMemberPortlist.setStatus('current')
swSurveillanceVlanDynamicPortlist = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 2, 2), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSurveillanceVlanDynamicPortlist.setStatus('current')
swSurveillanceVlanDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 2, 3), )
if mibBuilder.loadTexts: swSurveillanceVlanDeviceTable.setStatus('current')
swSurveillanceVlanDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 2, 3, 1), ).setIndexNames((0, "SURVEILLANCE-VLAN-MIB", "swSurveillanceVlanDevPort"), (0, "SURVEILLANCE-VLAN-MIB", "swSurveillanceVlanDevAddr"))
if mibBuilder.loadTexts: swSurveillanceVlanDeviceEntry.setStatus('current')
swSurveillanceVlanDevPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSurveillanceVlanDevPort.setStatus('current')
swSurveillanceVlanDevAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 2, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSurveillanceVlanDevAddr.setStatus('current')
swSurveillanceVlanDevComponentType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vms", 1), ("vms-client", 2), ("video-encoder", 3), ("network-storage", 4), ("other", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSurveillanceVlanDevComponentType.setStatus('current')
swSurveillanceVlanDevStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 2, 3, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSurveillanceVlanDevStartTime.setStatus('current')
swSurveillanceVlanOuiTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 1), )
if mibBuilder.loadTexts: swSurveillanceVlanOuiTable.setStatus('current')
swSurveillanceVlanOuiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 1, 1), ).setIndexNames((0, "SURVEILLANCE-VLAN-MIB", "swSurveillanceVlanOuiAddr"))
if mibBuilder.loadTexts: swSurveillanceVlanOuiEntry.setStatus('current')
swSurveillanceVlanOuiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSurveillanceVlanOuiAddr.setStatus('current')
swSurveillanceVlanOuiMask = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 1, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSurveillanceVlanOuiMask.setStatus('current')
swSurveillanceVlanOuiComponentType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vms", 1), ("vms-client", 2), ("video-encoder", 3), ("network-storage", 4), ("other", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSurveillanceVlanOuiComponentType.setStatus('current')
swSurveillanceVlanOuiDes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 1, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSurveillanceVlanOuiDes.setStatus('current')
swSurveillanceVlanOuiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSurveillanceVlanOuiRowStatus.setStatus('current')
swSurveillanceVlanPortTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 2), )
if mibBuilder.loadTexts: swSurveillanceVlanPortTable.setStatus('current')
swSurveillanceVlanPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 2, 1), ).setIndexNames((0, "SURVEILLANCE-VLAN-MIB", "swSurveillanceVlanPortNumber"))
if mibBuilder.loadTexts: swSurveillanceVlanPortEntry.setStatus('current')
swSurveillanceVlanPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSurveillanceVlanPortNumber.setStatus('current')
swSurveillanceVlanPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 102, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSurveillanceVlanPortState.setStatus('current')
mibBuilder.exportSymbols("SURVEILLANCE-VLAN-MIB", swSurveillanceVlanOuiComponentType=swSurveillanceVlanOuiComponentType, swSurveillanceVlanPortTable=swSurveillanceVlanPortTable, swSurveillanceVLANMIB=swSurveillanceVLANMIB, swSurveillanceVlanOuiDes=swSurveillanceVlanOuiDes, swSurveillanceVlanDeviceEntry=swSurveillanceVlanDeviceEntry, swSurveillanceVlanPortEntry=swSurveillanceVlanPortEntry, swSurveillanceVlanDynamicPortlist=swSurveillanceVlanDynamicPortlist, swSurveillanceVlanDevPort=swSurveillanceVlanDevPort, swSurveillanceVlanDevComponentType=swSurveillanceVlanDevComponentType, swSurveillanceVlanDevStartTime=swSurveillanceVlanDevStartTime, swSurveillanceVlanOuiTable=swSurveillanceVlanOuiTable, swSurveillanceVlanDeviceTable=swSurveillanceVlanDeviceTable, swSurveillanceVlanOuiAddr=swSurveillanceVlanOuiAddr, PYSNMP_MODULE_ID=swSurveillanceVLANMIB, swSurveillanceVlanPriority=swSurveillanceVlanPriority, swSurveillanceVlanPortNumber=swSurveillanceVlanPortNumber, swSurveillanceVlanId=swSurveillanceVlanId, swSurveillanceVlanDevAddr=swSurveillanceVlanDevAddr, swSurveillanceVlanMemberPortlist=swSurveillanceVlanMemberPortlist, swSurveillanceVlanAgingTime=swSurveillanceVlanAgingTime, swSurveillanceVlanOuiRowStatus=swSurveillanceVlanOuiRowStatus, swSurveillanceVlanPortState=swSurveillanceVlanPortState, swSurveillanceVlanLogState=swSurveillanceVlanLogState, swSurveillanceVLANMIBObjects=swSurveillanceVLANMIBObjects, swSurveillanceVlanMgmt=swSurveillanceVlanMgmt, swSurveillanceVlanOuiEntry=swSurveillanceVlanOuiEntry, swSurveillanceVlanInfo=swSurveillanceVlanInfo, swSurveillanceVlanGlobalState=swSurveillanceVlanGlobalState, swSurveillanceVlanCtrl=swSurveillanceVlanCtrl, swSurveillanceVlanOuiMask=swSurveillanceVlanOuiMask, swSurveillanceVLANNotifications=swSurveillanceVLANNotifications)
