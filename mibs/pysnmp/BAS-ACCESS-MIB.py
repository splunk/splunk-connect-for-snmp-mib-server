#
# PySNMP MIB module BAS-ACCESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAS-ACCESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:17:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
BasInterfaceId, BasSlotId, basAccessControl, BasChassisId, BasLogicalPortId = mibBuilder.importSymbols("BAS-MIB", "BasInterfaceId", "BasSlotId", "basAccessControl", "BasChassisId", "BasLogicalPortId")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Unsigned32, Bits, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, Counter32, Gauge32, iso, IpAddress, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "Bits", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "Counter32", "Gauge32", "iso", "IpAddress", "TimeTicks", "Counter64")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
basAccessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1))
if mibBuilder.loadTexts: basAccessMIB.setLastUpdated('9812080000Z')
if mibBuilder.loadTexts: basAccessMIB.setOrganization('Broadband Access Systems, Inc.')
basAccessTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1), )
if mibBuilder.loadTexts: basAccessTable.setStatus('current')
basAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1), ).setIndexNames((0, "BAS-ACCESS-MIB", "basAccessChassis"), (0, "BAS-ACCESS-MIB", "basAccessSlot"), (0, "BAS-ACCESS-MIB", "basAccessInterface"), (0, "BAS-ACCESS-MIB", "basAccessLPort"), (0, "BAS-ACCESS-MIB", "basAccessIndex"))
if mibBuilder.loadTexts: basAccessEntry.setStatus('current')
basAccessChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1, 1), BasChassisId())
if mibBuilder.loadTexts: basAccessChassis.setStatus('current')
basAccessSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1, 2), BasSlotId())
if mibBuilder.loadTexts: basAccessSlot.setStatus('current')
basAccessInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1, 3), BasInterfaceId())
if mibBuilder.loadTexts: basAccessInterface.setStatus('current')
basAccessLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1, 4), BasLogicalPortId())
if mibBuilder.loadTexts: basAccessLPort.setStatus('current')
basAccessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1, 5), Integer32())
if mibBuilder.loadTexts: basAccessIndex.setStatus('current')
basAccessCommName = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basAccessCommName.setStatus('current')
basAccessIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basAccessIpAddress.setStatus('current')
basAccessProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basAccessProfile.setStatus('current')
basAccessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 10, 1, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basAccessStatus.setStatus('current')
mibBuilder.exportSymbols("BAS-ACCESS-MIB", basAccessProfile=basAccessProfile, basAccessTable=basAccessTable, basAccessInterface=basAccessInterface, basAccessStatus=basAccessStatus, basAccessEntry=basAccessEntry, PYSNMP_MODULE_ID=basAccessMIB, basAccessChassis=basAccessChassis, basAccessCommName=basAccessCommName, basAccessMIB=basAccessMIB, basAccessSlot=basAccessSlot, basAccessIndex=basAccessIndex, basAccessLPort=basAccessLPort, basAccessIpAddress=basAccessIpAddress)
