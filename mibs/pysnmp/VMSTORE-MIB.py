#
# PySNMP MIB module VMSTORE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://./TintriMIB.txt
# Produced by pysmi-0.3.4 at Wed Jul 14 14:11:35 2021
# On host C02DL3AAMD6R platform Darwin version 19.6.0 by user lstoppa
# Using Python version 3.9.2 (default, Mar 26 2021, 23:27:12) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, Bits, ObjectIdentity, enterprises, Counter32, Unsigned32, Gauge32, MibIdentifier, Counter64, ModuleIdentity, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "ObjectIdentity", "enterprises", "Counter32", "Unsigned32", "Gauge32", "MibIdentifier", "Counter64", "ModuleIdentity", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso")
DisplayString, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TextualConvention")
tintri = ModuleIdentity((1, 3, 6, 1, 4, 1, 41456))
tintri.setRevisions(('2014-05-21 00:00', '2014-07-28 00:00', '2014-11-14 00:00', '2015-01-15 00:00', '2015-04-29 00:00', '2015-12-08 00:00', '2015-12-09 00:00', '2016-07-18 00:00', '2016-07-26 00:00', '2016-08-10 00:00', '2016-08-22 00:00', '2016-08-29 00:00', '2016-08-30 00:00', '2016-09-14 00:00', '2016-11-15 00:00', '2016-12-01 00:00', '2017-03-29 00:00', '2017-05-03 00:00', '2017-06-02 00:00', '2017-06-16 00:00', '2017-06-23 00:00', '2017-07-14 00:00', '2017-08-18 00:00', '2017-09-22 00:00', '2017-10-06 00:00', '2017-11-08 00:00', '2018-01-08 00:00', '2018-02-01 00:00', '2018-01-25 00:00', '2018-02-01 00:00', '2018-02-07 00:00', '2018-03-20 00:00', '2020-02-28 00:00', '2020-03-02 00:00', '2020-03-03 00:00', '2020-07-14 00:00', '2020-12-04 00:00',))
if mibBuilder.loadTexts: tintri.setLastUpdated('202003030000Z')
if mibBuilder.loadTexts: tintri.setOrganization('Tintri by DDN')
vmStore = ObjectIdentity((1, 3, 6, 1, 4, 1, 41456, 1))
if mibBuilder.loadTexts: vmStore.setStatus('current')
vmStoreTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 41456, 1, 1))
if mibBuilder.loadTexts: vmStoreTraps.setStatus('current')
vmStorePerfStats = ObjectIdentity((1, 3, 6, 1, 4, 1, 41456, 1, 2))
if mibBuilder.loadTexts: vmStorePerfStats.setStatus('current')
vmStoreMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 41456, 1, 100))
vmstoreHostname = MibScalar((1, 3, 6, 1, 4, 1, 41456, 1, 1, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vmstoreHostname.setStatus('current')
trapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 41456, 1, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trapSeverity.setStatus('current')
trapMessageId = MibScalar((1, 3, 6, 1, 4, 1, 41456, 1, 1, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trapMessageId.setStatus('current')
trapMessage = MibScalar((1, 3, 6, 1, 4, 1, 41456, 1, 1, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trapMessage.setStatus('current')
diskRAIDFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 101)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskRAIDFailed.setStatus('current')
outOfSpace = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 102)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: outOfSpace.setStatus('current')
systemFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 103)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: systemFailure.setStatus('current')
maxFileLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 104)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: maxFileLimitReached.setStatus('current')
maxSnapshotFileLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 105)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: maxSnapshotFileLimitReached.setStatus('current')
nearMaxSnapshotFileLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 106)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: nearMaxSnapshotFileLimitReached.setStatus('current')
nvramFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 107)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: nvramFailure.setStatus('current')
upgradeFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 108)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: upgradeFailure.setStatus('current')
controllerFailover = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 109)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: controllerFailover.setStatus('current')
networkLinkLost = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 110)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: networkLinkLost.setStatus('current')
systemNotRedundant = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 111)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: systemNotRedundant.setStatus('current')
networkPortFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 112)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: networkPortFailed.setStatus('current')
networkErrorRateLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 113)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: networkErrorRateLimitReached.setStatus('current')
networkFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 114)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: networkFailure.setStatus('current')
controllerPoweroff = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 115)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: controllerPoweroff.setStatus('current')
controllerPoweron = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 116)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: controllerPoweron.setStatus('current')
controllerRemoved = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 117)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: controllerRemoved.setStatus('current')
controllerInserted = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 118)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: controllerInserted.setStatus('current')
fanFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 119)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: fanFailed.setStatus('current')
controllerError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 120)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: controllerError.setStatus('current')
peerCommunicationFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 121)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: peerCommunicationFailed.setStatus('current')
powerSupplyInput = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 122)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: powerSupplyInput.setStatus('current')
powerSupplyFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 123)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: powerSupplyFailed.setStatus('current')
powerSupplyRemoved = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 124)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: powerSupplyRemoved.setStatus('current')
powerSupplyTurnedOff = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 125)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: powerSupplyTurnedOff.setStatus('current')
powerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 126)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: powerSupplyFailure.setStatus('current')
tempThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 127)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: tempThresholdExceeded.setStatus('current')
tempBelowNormal = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 128)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: tempBelowNormal.setStatus('current')
chassisError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 129)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: chassisError.setStatus('current')
diskRebuildFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 130)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskRebuildFailed.setStatus('current')
hardwareComponentFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 131)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: hardwareComponentFailed.setStatus('current')
hardwareComponentMissing = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 132)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: hardwareComponentMissing.setStatus('current')
raidRebuildPending = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 133)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: raidRebuildPending.setStatus('current')
raidRebuildStarted = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 134)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: raidRebuildStarted.setStatus('current')
raidRebuildDone = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 135)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: raidRebuildDone.setStatus('current')
diskFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 136)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskFailed.setStatus('current')
diskMisplaced = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 137)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskMisplaced.setStatus('current')
diskRebuilding = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 138)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskRebuilding.setStatus('current')
diskRemoved = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 139)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskRemoved.setStatus('current')
diskInaccessible = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 140)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskInaccessible.setStatus('current')
diskRebuildDone = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 141)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskRebuildDone.setStatus('current')
diskWearOut = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 142)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskWearOut.setStatus('current')
maxESXConnectionReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 143)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: maxESXConnectionReached.setStatus('current')
errorAcceptingConnection = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 144)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: errorAcceptingConnection.setStatus('current')
maxVirtualDiskPinnedLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 145)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: maxVirtualDiskPinnedLimitReached.setStatus('current')
diskFirmwareUpgradeFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 146)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskFirmwareUpgradeFailed.setStatus('current')
duplicatedIPaddressDetected = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 147)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: duplicatedIPaddressDetected.setStatus('current')
replNetworkRemoved = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 148)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: replNetworkRemoved.setStatus('current')
dataNetworkRemoved = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 149)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: dataNetworkRemoved.setStatus('current')
deviceNotSupported = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 150)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: deviceNotSupported.setStatus('current')
replicationFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 151)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: replicationFailure.setStatus('current')
lowOnSpace = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 152)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: lowOnSpace.setStatus('current')
generateReportFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 153)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: generateReportFailed.setStatus('current')
unsupportedDiskFormat = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 154)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: unsupportedDiskFormat.setStatus('current')
vCenterAccessError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 155)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: vCenterAccessError.setStatus('current')
cloneOperationFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 156)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: cloneOperationFailed.setStatus('current')
snapshotOperationFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 157)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: snapshotOperationFailed.setStatus('current')
maxConcurrentOperationsAllowedReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 158)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: maxConcurrentOperationsAllowedReached.setStatus('current')
vCenterDuplicateUuid = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 159)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: vCenterDuplicateUuid.setStatus('current')
systemError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 160)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: systemError.setStatus('current')
testTrap = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 161)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: testTrap.setStatus('current')
nfsAccessControlDbUpgradeFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 162)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: nfsAccessControlDbUpgradeFailed.setStatus('current')
evalLicenseExpired = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 163)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: evalLicenseExpired.setStatus('current')
maintenanceModeEnabled = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 164)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: maintenanceModeEnabled.setStatus('current')
maintenanceModeDisabled = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 165)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: maintenanceModeDisabled.setStatus('current')
maintenanceModeAutoDisabled = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 166)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: maintenanceModeAutoDisabled.setStatus('current')
hasSpace = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 167)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: hasSpace.setStatus('current')
replHasSpace = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 168)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: replHasSpace.setStatus('current')
replOutOfSpace = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 169)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: replOutOfSpace.setStatus('current')
snapshotHasSpace = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 170)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: snapshotHasSpace.setStatus('current')
snapshotOutOfSpace = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 171)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: snapshotOutOfSpace.setStatus('current')
permissionDenied = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 172)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: permissionDenied.setStatus('current')
overPinned = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 173)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: overPinned.setStatus('current')
preserveTintriUuidFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 174)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: preserveTintriUuidFailed.setStatus('current')
performanceDatabaseDown = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 175)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: performanceDatabaseDown.setStatus('current')
setServicePrincipalFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 176)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: setServicePrincipalFailed.setStatus('current')
snapshotInventorySyncFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 177)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: snapshotInventorySyncFailed.setStatus('current')
syncVmOperationFailedAndVmUnstable = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 178)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: syncVmOperationFailedAndVmUnstable.setStatus('current')
domInaccessible = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 179)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: domInaccessible.setStatus('current')
domWearOut = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 180)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: domWearOut.setStatus('current')
domFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 181)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: domFailed.setStatus('current')
domRebuilding = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 182)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: domRebuilding.setStatus('current')
domRemoved = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 183)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: domRemoved.setStatus('current')
domRebuildDone = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 184)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: domRebuildDone.setStatus('current')
ioPortEnableFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 185)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: ioPortEnableFailed.setStatus('current')
ioPortEnableSucceed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 186)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: ioPortEnableSucceed.setStatus('current')
invalidInitialKeyGen = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 187)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: invalidInitialKeyGen.setStatus('current')
certificateError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 188)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: certificateError.setStatus('current')
ovfOperationFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 189)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: ovfOperationFailed.setStatus('current')
grantAccessFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 190)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: grantAccessFailed.setStatus('current')
systemFirmwareUpgradeFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 191)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: systemFirmwareUpgradeFailed.setStatus('current')
changeWinbindPasswordFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 192)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: changeWinbindPasswordFailed.setStatus('current')
addShelfFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 193)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: addShelfFailed.setStatus('current')
internalNetworkFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 194)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: internalNetworkFailure.setStatus('current')
syncReplFailoverFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 195)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: syncReplFailoverFailed.setStatus('current')
syncReplErrorState = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 196)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: syncReplErrorState.setStatus('current')
syncReplOutOfSyncForTooLong = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 197)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: syncReplOutOfSyncForTooLong.setStatus('current')
replLagThresholdBreach = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 198)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: replLagThresholdBreach.setStatus('current')
vmExceedReplConfigMaxLimit = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 199)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: vmExceedReplConfigMaxLimit.setStatus('current')
controllerRestarted = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 200)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: controllerRestarted.setStatus('current')
resourceBelowCriticalLevel = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 201)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: resourceBelowCriticalLevel.setStatus('current')
diskPoweredOff = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 202)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: diskPoweredOff.setStatus('current')
smbUnencryptedRequestWithGlobalEncryption = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 203)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: smbUnencryptedRequestWithGlobalEncryption.setStatus('current')
smbUnencryptedRequestWithShareEncryption = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 204)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: smbUnencryptedRequestWithShareEncryption.setStatus('current')
smbNtlmNoActiveDirectoryError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 205)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: smbNtlmNoActiveDirectoryError.setStatus('current')
smbNtlmNoSmbHostNameError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 206)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: smbNtlmNoSmbHostNameError.setStatus('deprecated')
smbNtlmAuthenticationError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 207)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: smbNtlmAuthenticationError.setStatus('deprecated')
smbKerberosNoActiveDirectoryError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 208)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: smbKerberosNoActiveDirectoryError.setStatus('current')
smbKerberosNoSmbHostNameError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 209)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: smbKerberosNoSmbHostNameError.setStatus('deprecated')
smbKerberosTimeDifferenceError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 210)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: smbKerberosTimeDifferenceError.setStatus('current')
smbKerberosAuthenticationError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 211)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: smbKerberosAuthenticationError.setStatus('current')
powerSupplyAcFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 212)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: powerSupplyAcFailure.setStatus('current')
powerSupplyDcFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 213)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: powerSupplyDcFailure.setStatus('current')
powerSupplyFailedRemoved = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 214)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: powerSupplyFailedRemoved.setStatus('current')
externalKeyManagerCommunicationError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 215)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: externalKeyManagerCommunicationError.setStatus('current')
externalKeyManagerCertificateError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 216)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: externalKeyManagerCertificateError.setStatus('current')
syncReplDataIntegrityProblem = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 217)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: syncReplDataIntegrityProblem.setStatus('current')
highLatencyDriveProblem = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 218)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: highLatencyDriveProblem.setStatus('current')
vCenterAccessErrorCleared = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 219)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: vCenterAccessErrorCleared.setStatus('current')
quotaThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 220)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: quotaThresholdExceeded.setStatus('current')
quotaOutOfSpace = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 221)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: quotaOutOfSpace.setStatus('current')
quotaSnapshotCreationDisabled = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 222)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: quotaSnapshotCreationDisabled.setStatus('current')
cloudSnapshotSyncFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 223)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: cloudSnapshotSyncFailed.setStatus('current')
cloudSnapshotSyncFailedFsError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 224)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: cloudSnapshotSyncFailedFsError.setStatus('current')
cloudSnapshotSyncFailedPerfDbError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 225)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: cloudSnapshotSyncFailedPerfDbError.setStatus('current')
snapshotWithSameGlobalIdExists = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 226)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: snapshotWithSameGlobalIdExists.setStatus('current')
replicateCloudSnapshotFailedLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 227)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: replicateCloudSnapshotFailedLimitReached.setStatus('current')
cloudSnapshotSyncFailedLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 228)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: cloudSnapshotSyncFailedLimitReached.setStatus('current')
evaluationLicenseActivated = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 229)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: evaluationLicenseActivated.setStatus('current')
evaluationLicenseExpiring = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 230)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: evaluationLicenseExpiring.setStatus('current')
evaluationLicenseExpired = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 231)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: evaluationLicenseExpired.setStatus('current')
remoteMgmtAdminPasswordResetRequired = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 232)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: remoteMgmtAdminPasswordResetRequired.setStatus('current')
hyperVHighFreqSnapshotNotAllowed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 233)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: hyperVHighFreqSnapshotNotAllowed.setStatus('current')
filesystemEncounteredAnError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 234)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: filesystemEncounteredAnError.setStatus('current')
spaceLowThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 235)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: spaceLowThresholdReached.setStatus('current')
spaceHighThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 236)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: spaceHighThresholdReached.setStatus('current')
syncReplFailoverPartialError = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 237)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: syncReplFailoverPartialError.setStatus('current')
licenseSyncReplPauseFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 238)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: licenseSyncReplPauseFailure.setStatus('current')
licenseSyncReplPaused = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 239)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: licenseSyncReplPaused.setStatus('current')
ipmbInterfaceFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 240)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: ipmbInterfaceFailure.setStatus('current')
syncReplClusterFailover = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 241)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: syncReplClusterFailover.setStatus('current')
hwUpgradeFailedControllerTooOld = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 242)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: hwUpgradeFailedControllerTooOld.setStatus('current')
hwUpgradeIncomplete = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 243)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: hwUpgradeIncomplete.setStatus('current')
ntpNotSyncExternalServer = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 244)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: ntpNotSyncExternalServer.setStatus('current')
unsupportedPort = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 245)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: unsupportedPort.setStatus('current')
unsupportedNic = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 246)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: unsupportedNic.setStatus('current')
memoryVoltageSettingIncorrect = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 247)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: memoryVoltageSettingIncorrect.setStatus('current')
controllerHasFailure = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 248)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: controllerHasFailure.setStatus('current')
platformIOPortDisableFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 249)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: platformIOPortDisableFailed.setStatus('current')
platformIOPortDisabled = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 250)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: platformIOPortDisabled.setStatus('current')
fsBackgroundFileReclaimStopped = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 251)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: fsBackgroundFileReclaimStopped.setStatus('current')
fsBackgroundSnapshotReclaimStopped1 = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 252)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: fsBackgroundSnapshotReclaimStopped1.setStatus('current')
fsBackgroundSnapshotReclaimStopped2 = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 253)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: fsBackgroundSnapshotReclaimStopped2.setStatus('current')
rbacAdsAccountChangeKeyFailed = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 254)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: rbacAdsAccountChangeKeyFailed.setStatus('current')
remoteMgmtAdminPasswordResetRequired2 = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 255)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: remoteMgmtAdminPasswordResetRequired2.setStatus('current')
clocksourceSlow = NotificationType((1, 3, 6, 1, 4, 1, 41456, 1, 1, 256)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if mibBuilder.loadTexts: clocksourceSlow.setStatus('current')
vmStorePerfStatsSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1), )
if mibBuilder.loadTexts: vmStorePerfStatsSummaryTable.setStatus('current')
vmStorePerfStatsSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1), ).setIndexNames((0, "VMSTORE-MIB", "vmStorePerfStatsSummaryIndex"))
if mibBuilder.loadTexts: vmStorePerfStatsSummaryEntry.setStatus('current')
vmStorePerfStatsSummaryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: vmStorePerfStatsSummaryIndex.setStatus('current')
perfStatsCollectionDate = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: perfStatsCollectionDate.setStatus('current')
uptime = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uptime.setStatus('current')
model = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: model.setStatus('current')
swVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVersion.setStatus('current')
serialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialNumber.setStatus('current')
vmStoreStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmStoreStatus.setStatus('current')
numUnreadAlerts = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numUnreadAlerts.setStatus('current')
manualAssignedPerfResource = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: manualAssignedPerfResource.setStatus('current')
autoAssignedPerfResource = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: autoAssignedPerfResource.setStatus('current')
orphanedSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 11), Unsigned32()).setUnits('GB').setMaxAccess("readonly")
if mibBuilder.loadTexts: orphanedSpace.setStatus('current')
tintriSnapshotSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 12), Unsigned32()).setUnits('GB').setMaxAccess("readonly")
if mibBuilder.loadTexts: tintriSnapshotSpace.setStatus('current')
vmwSnapshotSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 13), Unsigned32()).setUnits('GB').setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwSnapshotSpace.setStatus('current')
liveDataSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 14), Unsigned32()).setUnits('GB').setMaxAccess("readonly")
if mibBuilder.loadTexts: liveDataSpace.setStatus('current')
remainingSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 15), Unsigned32()).setUnits('GB').setMaxAccess("readonly")
if mibBuilder.loadTexts: remainingSpace.setStatus('current')
provisionedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: provisionedPercent.setStatus('current')
daysTillFull = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: daysTillFull.setStatus('current')
throughput = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 18), Unsigned32()).setUnits('MB/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: throughput.setStatus('current')
lowThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 19), Unsigned32()).setUnits('MB/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: lowThroughput.setStatus('current')
highThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 20), Unsigned32()).setUnits('MB/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: highThroughput.setStatus('current')
iops = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iops.setStatus('current')
lowIops = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowIops.setStatus('current')
highIops = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: highIops.setStatus('current')
latency = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 24), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: latency.setStatus('current')
hostLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 25), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostLatency.setStatus('current')
networkLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 26), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: networkLatency.setStatus('current')
fsLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 27), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: fsLatency.setStatus('current')
diskLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 28), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: diskLatency.setStatus('current')
cacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRatio.setStatus('current')
replLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: replLinkCount.setStatus('current')
replOutgoingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: replOutgoingCount.setStatus('current')
replIncomingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: replIncomingCount.setStatus('current')
replBytesRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 33), Unsigned32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: replBytesRemaining.setStatus('current')
replSrcLogicalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 34), Unsigned32()).setUnits('MB/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: replSrcLogicalThroughput.setStatus('current')
replSrcPhysicalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 35), Unsigned32()).setUnits('MB/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: replSrcPhysicalThroughput.setStatus('current')
replDstLogicalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 36), Unsigned32()).setUnits('MB/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: replDstLogicalThroughput.setStatus('current')
replDstPhysicalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 37), Unsigned32()).setUnits('MB/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: replDstPhysicalThroughput.setStatus('current')
replSrcLogicalReplicatedPerDay = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 38), Unsigned32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: replSrcLogicalReplicatedPerDay.setStatus('current')
replDstLogicalReplicatedPerDay = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 39), Unsigned32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: replDstLogicalReplicatedPerDay.setStatus('current')
replSrcPhysicalReplicatedPerDay = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 40), Unsigned32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: replSrcPhysicalReplicatedPerDay.setStatus('current')
replDstPhysicalReplicatedPerDay = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 41), Unsigned32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: replDstPhysicalReplicatedPerDay.setStatus('current')
mirrorLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 42), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mirrorLatency.setStatus('current')
mirrorReadLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 43), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mirrorReadLatency.setStatus('current')
mirrorWriteLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 44), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mirrorWriteLatency.setStatus('current')
mirrorWriteNetworkLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 41456, 1, 2, 1, 1, 45), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mirrorWriteNetworkLatency.setStatus('current')
vmStoreMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 41456, 1, 100, 1))
vmStoreCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 41456, 1, 100, 1, 1)).setObjects(("VMSTORE-MIB", "vmStoreMIBPerfStatsGroup"), ("VMSTORE-MIB", "vmStoreMIBNotificationGroup"), ("VMSTORE-MIB", "vmStoreNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmStoreCompliance = vmStoreCompliance.setStatus('current')
vmStoreMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 41456, 1, 100, 2))
vmStoreNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 41456, 1, 100, 2, 1)).setObjects(("VMSTORE-MIB", "diskRAIDFailed"), ("VMSTORE-MIB", "outOfSpace"), ("VMSTORE-MIB", "systemFailure"), ("VMSTORE-MIB", "maxFileLimitReached"), ("VMSTORE-MIB", "maxSnapshotFileLimitReached"), ("VMSTORE-MIB", "nearMaxSnapshotFileLimitReached"), ("VMSTORE-MIB", "nvramFailure"), ("VMSTORE-MIB", "controllerFailover"), ("VMSTORE-MIB", "networkLinkLost"), ("VMSTORE-MIB", "systemNotRedundant"), ("VMSTORE-MIB", "networkPortFailed"), ("VMSTORE-MIB", "networkErrorRateLimitReached"), ("VMSTORE-MIB", "networkFailure"), ("VMSTORE-MIB", "controllerPoweroff"), ("VMSTORE-MIB", "controllerPoweron"), ("VMSTORE-MIB", "controllerRemoved"), ("VMSTORE-MIB", "controllerInserted"), ("VMSTORE-MIB", "fanFailed"), ("VMSTORE-MIB", "controllerError"), ("VMSTORE-MIB", "peerCommunicationFailed"), ("VMSTORE-MIB", "powerSupplyInput"), ("VMSTORE-MIB", "powerSupplyFailed"), ("VMSTORE-MIB", "powerSupplyRemoved"), ("VMSTORE-MIB", "powerSupplyFailedRemoved"), ("VMSTORE-MIB", "powerSupplyTurnedOff"), ("VMSTORE-MIB", "powerSupplyFailure"), ("VMSTORE-MIB", "powerSupplyAcFailure"), ("VMSTORE-MIB", "powerSupplyDcFailure"), ("VMSTORE-MIB", "tempThresholdExceeded"), ("VMSTORE-MIB", "tempBelowNormal"), ("VMSTORE-MIB", "chassisError"), ("VMSTORE-MIB", "diskRebuildFailed"), ("VMSTORE-MIB", "hardwareComponentFailed"), ("VMSTORE-MIB", "hardwareComponentMissing"), ("VMSTORE-MIB", "raidRebuildPending"), ("VMSTORE-MIB", "raidRebuildStarted"), ("VMSTORE-MIB", "raidRebuildDone"), ("VMSTORE-MIB", "diskFailed"), ("VMSTORE-MIB", "diskMisplaced"), ("VMSTORE-MIB", "diskRebuilding"), ("VMSTORE-MIB", "diskRemoved"), ("VMSTORE-MIB", "diskInaccessible"), ("VMSTORE-MIB", "diskRebuildDone"), ("VMSTORE-MIB", "diskWearOut"), ("VMSTORE-MIB", "maxESXConnectionReached"), ("VMSTORE-MIB", "errorAcceptingConnection"), ("VMSTORE-MIB", "maxVirtualDiskPinnedLimitReached"), ("VMSTORE-MIB", "diskFirmwareUpgradeFailed"), ("VMSTORE-MIB", "duplicatedIPaddressDetected"), ("VMSTORE-MIB", "upgradeFailure"), ("VMSTORE-MIB", "replNetworkRemoved"), ("VMSTORE-MIB", "dataNetworkRemoved"), ("VMSTORE-MIB", "deviceNotSupported"), ("VMSTORE-MIB", "replicationFailure"), ("VMSTORE-MIB", "lowOnSpace"), ("VMSTORE-MIB", "generateReportFailed"), ("VMSTORE-MIB", "unsupportedDiskFormat"), ("VMSTORE-MIB", "vCenterAccessError"), ("VMSTORE-MIB", "cloneOperationFailed"), ("VMSTORE-MIB", "snapshotOperationFailed"), ("VMSTORE-MIB", "maxConcurrentOperationsAllowedReached"), ("VMSTORE-MIB", "vCenterDuplicateUuid"), ("VMSTORE-MIB", "systemError"), ("VMSTORE-MIB", "testTrap"), ("VMSTORE-MIB", "nfsAccessControlDbUpgradeFailed"), ("VMSTORE-MIB", "evalLicenseExpired"), ("VMSTORE-MIB", "maintenanceModeEnabled"), ("VMSTORE-MIB", "maintenanceModeDisabled"), ("VMSTORE-MIB", "maintenanceModeAutoDisabled"), ("VMSTORE-MIB", "hasSpace"), ("VMSTORE-MIB", "replHasSpace"), ("VMSTORE-MIB", "replOutOfSpace"), ("VMSTORE-MIB", "snapshotHasSpace"), ("VMSTORE-MIB", "snapshotOutOfSpace"), ("VMSTORE-MIB", "permissionDenied"), ("VMSTORE-MIB", "overPinned"), ("VMSTORE-MIB", "preserveTintriUuidFailed"), ("VMSTORE-MIB", "performanceDatabaseDown"), ("VMSTORE-MIB", "setServicePrincipalFailed"), ("VMSTORE-MIB", "snapshotInventorySyncFailed"), ("VMSTORE-MIB", "syncVmOperationFailedAndVmUnstable"), ("VMSTORE-MIB", "domInaccessible"), ("VMSTORE-MIB", "domWearOut"), ("VMSTORE-MIB", "domFailed"), ("VMSTORE-MIB", "domRebuilding"), ("VMSTORE-MIB", "domRemoved"), ("VMSTORE-MIB", "domRebuildDone"), ("VMSTORE-MIB", "ioPortEnableFailed"), ("VMSTORE-MIB", "ioPortEnableSucceed"), ("VMSTORE-MIB", "invalidInitialKeyGen"), ("VMSTORE-MIB", "certificateError"), ("VMSTORE-MIB", "ovfOperationFailed"), ("VMSTORE-MIB", "grantAccessFailed"), ("VMSTORE-MIB", "systemFirmwareUpgradeFailed"), ("VMSTORE-MIB", "changeWinbindPasswordFailed"), ("VMSTORE-MIB", "addShelfFailed"), ("VMSTORE-MIB", "internalNetworkFailure"), ("VMSTORE-MIB", "syncReplFailoverFailed"), ("VMSTORE-MIB", "syncReplErrorState"), ("VMSTORE-MIB", "syncReplOutOfSyncForTooLong"), ("VMSTORE-MIB", "resourceBelowCriticalLevel"), ("VMSTORE-MIB", "diskPoweredOff"), ("VMSTORE-MIB", "controllerRestarted"), ("VMSTORE-MIB", "replLagThresholdBreach"), ("VMSTORE-MIB", "vmExceedReplConfigMaxLimit"), ("VMSTORE-MIB", "smbUnencryptedRequestWithGlobalEncryption"), ("VMSTORE-MIB", "smbUnencryptedRequestWithShareEncryption"), ("VMSTORE-MIB", "smbNtlmNoActiveDirectoryError"), ("VMSTORE-MIB", "smbNtlmNoSmbHostNameError"), ("VMSTORE-MIB", "smbNtlmAuthenticationError"), ("VMSTORE-MIB", "smbKerberosNoActiveDirectoryError"), ("VMSTORE-MIB", "smbKerberosNoSmbHostNameError"), ("VMSTORE-MIB", "smbKerberosTimeDifferenceError"), ("VMSTORE-MIB", "smbKerberosAuthenticationError"), ("VMSTORE-MIB", "externalKeyManagerCommunicationError"), ("VMSTORE-MIB", "externalKeyManagerCertificateError"), ("VMSTORE-MIB", "syncReplDataIntegrityProblem"), ("VMSTORE-MIB", "highLatencyDriveProblem"), ("VMSTORE-MIB", "vCenterAccessErrorCleared"), ("VMSTORE-MIB", "quotaThresholdExceeded"), ("VMSTORE-MIB", "quotaOutOfSpace"), ("VMSTORE-MIB", "quotaSnapshotCreationDisabled"), ("VMSTORE-MIB", "cloudSnapshotSyncFailed"), ("VMSTORE-MIB", "cloudSnapshotSyncFailedFsError"), ("VMSTORE-MIB", "cloudSnapshotSyncFailedPerfDbError"), ("VMSTORE-MIB", "snapshotWithSameGlobalIdExists"), ("VMSTORE-MIB", "replicateCloudSnapshotFailedLimitReached"), ("VMSTORE-MIB", "cloudSnapshotSyncFailedLimitReached"), ("VMSTORE-MIB", "evaluationLicenseActivated"), ("VMSTORE-MIB", "evaluationLicenseExpiring"), ("VMSTORE-MIB", "evaluationLicenseExpired"), ("VMSTORE-MIB", "remoteMgmtAdminPasswordResetRequired"), ("VMSTORE-MIB", "hyperVHighFreqSnapshotNotAllowed"), ("VMSTORE-MIB", "filesystemEncounteredAnError"), ("VMSTORE-MIB", "spaceLowThresholdReached"), ("VMSTORE-MIB", "spaceHighThresholdReached"), ("VMSTORE-MIB", "syncReplFailoverPartialError"), ("VMSTORE-MIB", "licenseSyncReplPauseFailure"), ("VMSTORE-MIB", "licenseSyncReplPaused"), ("VMSTORE-MIB", "ipmbInterfaceFailure"), ("VMSTORE-MIB", "syncReplClusterFailover"), ("VMSTORE-MIB", "hwUpgradeFailedControllerTooOld"), ("VMSTORE-MIB", "hwUpgradeIncomplete"), ("VMSTORE-MIB", "ntpNotSyncExternalServer"), ("VMSTORE-MIB", "unsupportedPort"), ("VMSTORE-MIB", "unsupportedNic"), ("VMSTORE-MIB", "memoryVoltageSettingIncorrect"), ("VMSTORE-MIB", "controllerHasFailure"), ("VMSTORE-MIB", "platformIOPortDisableFailed"), ("VMSTORE-MIB", "platformIOPortDisabled"), ("VMSTORE-MIB", "fsBackgroundFileReclaimStopped"), ("VMSTORE-MIB", "fsBackgroundSnapshotReclaimStopped1"), ("VMSTORE-MIB", "fsBackgroundSnapshotReclaimStopped2"), ("VMSTORE-MIB", "rbacAdsAccountChangeKeyFailed"), ("VMSTORE-MIB", "remoteMgmtAdminPasswordResetRequired2"), ("VMSTORE-MIB", "clocksourceSlow"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmStoreNotificationsGroup = vmStoreNotificationsGroup.setStatus('current')
vmStoreMIBNotificationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 41456, 1, 100, 2, 2)).setObjects(("VMSTORE-MIB", "vmstoreHostname"), ("VMSTORE-MIB", "trapSeverity"), ("VMSTORE-MIB", "trapMessageId"), ("VMSTORE-MIB", "trapMessage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmStoreMIBNotificationGroup = vmStoreMIBNotificationGroup.setStatus('current')
vmStoreMIBPerfStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 41456, 1, 100, 2, 3)).setObjects(("VMSTORE-MIB", "perfStatsCollectionDate"), ("VMSTORE-MIB", "uptime"), ("VMSTORE-MIB", "model"), ("VMSTORE-MIB", "swVersion"), ("VMSTORE-MIB", "serialNumber"), ("VMSTORE-MIB", "numUnreadAlerts"), ("VMSTORE-MIB", "vmStoreStatus"), ("VMSTORE-MIB", "manualAssignedPerfResource"), ("VMSTORE-MIB", "autoAssignedPerfResource"), ("VMSTORE-MIB", "orphanedSpace"), ("VMSTORE-MIB", "tintriSnapshotSpace"), ("VMSTORE-MIB", "vmwSnapshotSpace"), ("VMSTORE-MIB", "liveDataSpace"), ("VMSTORE-MIB", "remainingSpace"), ("VMSTORE-MIB", "provisionedPercent"), ("VMSTORE-MIB", "daysTillFull"), ("VMSTORE-MIB", "throughput"), ("VMSTORE-MIB", "lowThroughput"), ("VMSTORE-MIB", "highThroughput"), ("VMSTORE-MIB", "iops"), ("VMSTORE-MIB", "lowIops"), ("VMSTORE-MIB", "highIops"), ("VMSTORE-MIB", "latency"), ("VMSTORE-MIB", "hostLatency"), ("VMSTORE-MIB", "networkLatency"), ("VMSTORE-MIB", "fsLatency"), ("VMSTORE-MIB", "diskLatency"), ("VMSTORE-MIB", "cacheHitRatio"), ("VMSTORE-MIB", "replLinkCount"), ("VMSTORE-MIB", "replOutgoingCount"), ("VMSTORE-MIB", "replIncomingCount"), ("VMSTORE-MIB", "replBytesRemaining"), ("VMSTORE-MIB", "replSrcLogicalThroughput"), ("VMSTORE-MIB", "replSrcPhysicalThroughput"), ("VMSTORE-MIB", "replDstLogicalThroughput"), ("VMSTORE-MIB", "replDstPhysicalThroughput"), ("VMSTORE-MIB", "replSrcLogicalReplicatedPerDay"), ("VMSTORE-MIB", "replDstLogicalReplicatedPerDay"), ("VMSTORE-MIB", "replSrcPhysicalReplicatedPerDay"), ("VMSTORE-MIB", "replDstPhysicalReplicatedPerDay"), ("VMSTORE-MIB", "mirrorLatency"), ("VMSTORE-MIB", "mirrorReadLatency"), ("VMSTORE-MIB", "mirrorWriteLatency"), ("VMSTORE-MIB", "mirrorWriteNetworkLatency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmStoreMIBPerfStatsGroup = vmStoreMIBPerfStatsGroup.setStatus('current')
mibBuilder.exportSymbols("VMSTORE-MIB", syncReplFailoverPartialError=syncReplFailoverPartialError, mirrorWriteLatency=mirrorWriteLatency, domFailed=domFailed, systemFirmwareUpgradeFailed=systemFirmwareUpgradeFailed, powerSupplyFailedRemoved=powerSupplyFailedRemoved, nvramFailure=nvramFailure, diskFirmwareUpgradeFailed=diskFirmwareUpgradeFailed, externalKeyManagerCommunicationError=externalKeyManagerCommunicationError, vmStoreMIBGroups=vmStoreMIBGroups, domRebuilding=domRebuilding, ovfOperationFailed=ovfOperationFailed, replNetworkRemoved=replNetworkRemoved, replLinkCount=replLinkCount, vmStoreStatus=vmStoreStatus, hostLatency=hostLatency, replicateCloudSnapshotFailedLimitReached=replicateCloudSnapshotFailedLimitReached, quotaThresholdExceeded=quotaThresholdExceeded, maxVirtualDiskPinnedLimitReached=maxVirtualDiskPinnedLimitReached, smbNtlmNoActiveDirectoryError=smbNtlmNoActiveDirectoryError, cloudSnapshotSyncFailedLimitReached=cloudSnapshotSyncFailedLimitReached, diskRebuildFailed=diskRebuildFailed, maxConcurrentOperationsAllowedReached=maxConcurrentOperationsAllowedReached, domRemoved=domRemoved, grantAccessFailed=grantAccessFailed, diskFailed=diskFailed, deviceNotSupported=deviceNotSupported, setServicePrincipalFailed=setServicePrincipalFailed, tempBelowNormal=tempBelowNormal, vmStoreMIBPerfStatsGroup=vmStoreMIBPerfStatsGroup, addShelfFailed=addShelfFailed, licenseSyncReplPauseFailure=licenseSyncReplPauseFailure, vCenterAccessErrorCleared=vCenterAccessErrorCleared, vmwSnapshotSpace=vmwSnapshotSpace, systemError=systemError, vmStorePerfStatsSummaryTable=vmStorePerfStatsSummaryTable, vmStoreMIBConformance=vmStoreMIBConformance, maintenanceModeDisabled=maintenanceModeDisabled, syncReplOutOfSyncForTooLong=syncReplOutOfSyncForTooLong, diskRebuilding=diskRebuilding, autoAssignedPerfResource=autoAssignedPerfResource, networkLinkLost=networkLinkLost, licenseSyncReplPaused=licenseSyncReplPaused, replDstPhysicalThroughput=replDstPhysicalThroughput, vmStoreMIBCompliances=vmStoreMIBCompliances, serialNumber=serialNumber, highThroughput=highThroughput, vCenterDuplicateUuid=vCenterDuplicateUuid, certificateError=certificateError, hardwareComponentMissing=hardwareComponentMissing, hwUpgradeIncomplete=hwUpgradeIncomplete, domRebuildDone=domRebuildDone, replDstLogicalReplicatedPerDay=replDstLogicalReplicatedPerDay, preserveTintriUuidFailed=preserveTintriUuidFailed, unsupportedDiskFormat=unsupportedDiskFormat, replDstPhysicalReplicatedPerDay=replDstPhysicalReplicatedPerDay, mirrorReadLatency=mirrorReadLatency, vmStoreMIBNotificationGroup=vmStoreMIBNotificationGroup, fsBackgroundFileReclaimStopped=fsBackgroundFileReclaimStopped, powerSupplyDcFailure=powerSupplyDcFailure, vmStoreTraps=vmStoreTraps, clocksourceSlow=clocksourceSlow, upgradeFailure=upgradeFailure, nfsAccessControlDbUpgradeFailed=nfsAccessControlDbUpgradeFailed, ioPortEnableSucceed=ioPortEnableSucceed, vmExceedReplConfigMaxLimit=vmExceedReplConfigMaxLimit, filesystemEncounteredAnError=filesystemEncounteredAnError, vmStoreNotificationsGroup=vmStoreNotificationsGroup, mirrorWriteNetworkLatency=mirrorWriteNetworkLatency, diskLatency=diskLatency, syncReplFailoverFailed=syncReplFailoverFailed, evaluationLicenseExpiring=evaluationLicenseExpiring, controllerInserted=controllerInserted, quotaSnapshotCreationDisabled=quotaSnapshotCreationDisabled, iops=iops, cloudSnapshotSyncFailedPerfDbError=cloudSnapshotSyncFailedPerfDbError, snapshotOutOfSpace=snapshotOutOfSpace, controllerRemoved=controllerRemoved, maintenanceModeAutoDisabled=maintenanceModeAutoDisabled, powerSupplyRemoved=powerSupplyRemoved, quotaOutOfSpace=quotaOutOfSpace, orphanedSpace=orphanedSpace, raidRebuildPending=raidRebuildPending, highLatencyDriveProblem=highLatencyDriveProblem, powerSupplyFailed=powerSupplyFailed, tintri=tintri, swVersion=swVersion, controllerPoweron=controllerPoweron, vmStore=vmStore, changeWinbindPasswordFailed=changeWinbindPasswordFailed, unsupportedNic=unsupportedNic, perfStatsCollectionDate=perfStatsCollectionDate, syncReplErrorState=syncReplErrorState, systemFailure=systemFailure, diskRAIDFailed=diskRAIDFailed, dataNetworkRemoved=dataNetworkRemoved, maintenanceModeEnabled=maintenanceModeEnabled, maxFileLimitReached=maxFileLimitReached, controllerPoweroff=controllerPoweroff, replOutgoingCount=replOutgoingCount, networkLatency=networkLatency, lowThroughput=lowThroughput, cloudSnapshotSyncFailed=cloudSnapshotSyncFailed, replLagThresholdBreach=replLagThresholdBreach, lowOnSpace=lowOnSpace, lowIops=lowIops, raidRebuildDone=raidRebuildDone, smbUnencryptedRequestWithGlobalEncryption=smbUnencryptedRequestWithGlobalEncryption, externalKeyManagerCertificateError=externalKeyManagerCertificateError, maxSnapshotFileLimitReached=maxSnapshotFileLimitReached, ioPortEnableFailed=ioPortEnableFailed, vmStoreCompliance=vmStoreCompliance, outOfSpace=outOfSpace, fanFailed=fanFailed, powerSupplyInput=powerSupplyInput, hyperVHighFreqSnapshotNotAllowed=hyperVHighFreqSnapshotNotAllowed, smbKerberosTimeDifferenceError=smbKerberosTimeDifferenceError, controllerError=controllerError, snapshotWithSameGlobalIdExists=snapshotWithSameGlobalIdExists, smbNtlmAuthenticationError=smbNtlmAuthenticationError, replDstLogicalThroughput=replDstLogicalThroughput, networkFailure=networkFailure, powerSupplyTurnedOff=powerSupplyTurnedOff, smbNtlmNoSmbHostNameError=smbNtlmNoSmbHostNameError, fsBackgroundSnapshotReclaimStopped2=fsBackgroundSnapshotReclaimStopped2, latency=latency, replBytesRemaining=replBytesRemaining, diskMisplaced=diskMisplaced, trapMessageId=trapMessageId, memoryVoltageSettingIncorrect=memoryVoltageSettingIncorrect, daysTillFull=daysTillFull, controllerHasFailure=controllerHasFailure, replSrcPhysicalThroughput=replSrcPhysicalThroughput, systemNotRedundant=systemNotRedundant, mirrorLatency=mirrorLatency, replHasSpace=replHasSpace, fsBackgroundSnapshotReclaimStopped1=fsBackgroundSnapshotReclaimStopped1, evalLicenseExpired=evalLicenseExpired, vmStorePerfStats=vmStorePerfStats, permissionDenied=permissionDenied, remoteMgmtAdminPasswordResetRequired=remoteMgmtAdminPasswordResetRequired, duplicatedIPaddressDetected=duplicatedIPaddressDetected, evaluationLicenseActivated=evaluationLicenseActivated, diskRemoved=diskRemoved, snapshotHasSpace=snapshotHasSpace, smbKerberosAuthenticationError=smbKerberosAuthenticationError, vmStorePerfStatsSummaryEntry=vmStorePerfStatsSummaryEntry, tempThresholdExceeded=tempThresholdExceeded, peerCommunicationFailed=peerCommunicationFailed, snapshotInventorySyncFailed=snapshotInventorySyncFailed, cloneOperationFailed=cloneOperationFailed, rbacAdsAccountChangeKeyFailed=rbacAdsAccountChangeKeyFailed, smbUnencryptedRequestWithShareEncryption=smbUnencryptedRequestWithShareEncryption, nearMaxSnapshotFileLimitReached=nearMaxSnapshotFileLimitReached, controllerRestarted=controllerRestarted, cacheHitRatio=cacheHitRatio, syncReplClusterFailover=syncReplClusterFailover, domWearOut=domWearOut, diskRebuildDone=diskRebuildDone, diskWearOut=diskWearOut, invalidInitialKeyGen=invalidInitialKeyGen, PYSNMP_MODULE_ID=tintri, highIops=highIops, hasSpace=hasSpace, smbKerberosNoSmbHostNameError=smbKerberosNoSmbHostNameError, uptime=uptime, chassisError=chassisError, powerSupplyAcFailure=powerSupplyAcFailure, networkErrorRateLimitReached=networkErrorRateLimitReached, raidRebuildStarted=raidRebuildStarted, model=model, liveDataSpace=liveDataSpace, platformIOPortDisableFailed=platformIOPortDisableFailed, vmstoreHostname=vmstoreHostname, syncReplDataIntegrityProblem=syncReplDataIntegrityProblem, throughput=throughput, internalNetworkFailure=internalNetworkFailure, performanceDatabaseDown=performanceDatabaseDown, resourceBelowCriticalLevel=resourceBelowCriticalLevel, spaceHighThresholdReached=spaceHighThresholdReached, manualAssignedPerfResource=manualAssignedPerfResource, provisionedPercent=provisionedPercent, fsLatency=fsLatency, generateReportFailed=generateReportFailed, testTrap=testTrap, remainingSpace=remainingSpace, vCenterAccessError=vCenterAccessError, domInaccessible=domInaccessible, evaluationLicenseExpired=evaluationLicenseExpired, hardwareComponentFailed=hardwareComponentFailed, ntpNotSyncExternalServer=ntpNotSyncExternalServer, hwUpgradeFailedControllerTooOld=hwUpgradeFailedControllerTooOld, replicationFailure=replicationFailure, trapMessage=trapMessage, errorAcceptingConnection=errorAcceptingConnection, replIncomingCount=replIncomingCount, spaceLowThresholdReached=spaceLowThresholdReached, cloudSnapshotSyncFailedFsError=cloudSnapshotSyncFailedFsError, overPinned=overPinned, numUnreadAlerts=numUnreadAlerts, ipmbInterfaceFailure=ipmbInterfaceFailure, replSrcPhysicalReplicatedPerDay=replSrcPhysicalReplicatedPerDay, replSrcLogicalReplicatedPerDay=replSrcLogicalReplicatedPerDay, diskPoweredOff=diskPoweredOff, networkPortFailed=networkPortFailed, replOutOfSpace=replOutOfSpace, unsupportedPort=unsupportedPort, remoteMgmtAdminPasswordResetRequired2=remoteMgmtAdminPasswordResetRequired2, replSrcLogicalThroughput=replSrcLogicalThroughput, tintriSnapshotSpace=tintriSnapshotSpace, smbKerberosNoActiveDirectoryError=smbKerberosNoActiveDirectoryError, vmStorePerfStatsSummaryIndex=vmStorePerfStatsSummaryIndex, platformIOPortDisabled=platformIOPortDisabled, trapSeverity=trapSeverity, controllerFailover=controllerFailover, snapshotOperationFailed=snapshotOperationFailed, powerSupplyFailure=powerSupplyFailure, maxESXConnectionReached=maxESXConnectionReached, diskInaccessible=diskInaccessible, syncVmOperationFailedAndVmUnstable=syncVmOperationFailedAndVmUnstable)
