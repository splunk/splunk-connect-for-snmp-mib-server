#
# PySNMP MIB module LEFTHAND-NETWORKS-GLOBAL-REG (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LEFTHAND-NETWORKS-GLOBAL-REG
# Produced by pysmi-0.3.4 at Mon Apr 29 19:55:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ModuleIdentity, Bits, ObjectIdentity, enterprises, Integer32, Gauge32, NotificationType, IpAddress, Counter32, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "Bits", "ObjectIdentity", "enterprises", "Integer32", "Gauge32", "NotificationType", "IpAddress", "Counter32", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
leftHandNetworksGlobalRegistrationModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9804, 1, 1, 1))
if mibBuilder.loadTexts: leftHandNetworksGlobalRegistrationModule.setLastUpdated('200106010000Z')
if mibBuilder.loadTexts: leftHandNetworksGlobalRegistrationModule.setOrganization('LeftHand Networks, Inc.')
leftHandNetworks = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804))
if mibBuilder.loadTexts: leftHandNetworks.setStatus('current')
lhnRegistrations = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 1))
if mibBuilder.loadTexts: lhnRegistrations.setStatus('current')
lhnGeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 2))
if mibBuilder.loadTexts: lhnGeneric.setStatus('current')
lhnProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 3))
if mibBuilder.loadTexts: lhnProducts.setStatus('current')
lhnCapabilities = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 4))
if mibBuilder.loadTexts: lhnCapabilities.setStatus('current')
lhnRequirements = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 5))
if mibBuilder.loadTexts: lhnRequirements.setStatus('current')
lhnExperimental = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 6))
if mibBuilder.loadTexts: lhnExperimental.setStatus('current')
lhnModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 1, 1))
if mibBuilder.loadTexts: lhnModules.setStatus('current')
lhnNusDevices = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 1, 2))
if mibBuilder.loadTexts: lhnNusDevices.setStatus('current')
lhnNusCommon = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 1, 2, 1))
if mibBuilder.loadTexts: lhnNusCommon.setStatus('current')
lhnNusDevicesMIBs = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 3, 1))
if mibBuilder.loadTexts: lhnNusDevicesMIBs.setStatus('current')
lhnNusCommonMIB = ObjectIdentity((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1))
if mibBuilder.loadTexts: lhnNusCommonMIB.setStatus('current')
mibBuilder.exportSymbols("LEFTHAND-NETWORKS-GLOBAL-REG", lhnModules=lhnModules, lhnNusCommonMIB=lhnNusCommonMIB, lhnGeneric=lhnGeneric, lhnNusCommon=lhnNusCommon, lhnRegistrations=lhnRegistrations, PYSNMP_MODULE_ID=leftHandNetworksGlobalRegistrationModule, lhnCapabilities=lhnCapabilities, lhnRequirements=lhnRequirements, lhnNusDevicesMIBs=lhnNusDevicesMIBs, lhnExperimental=lhnExperimental, lhnNusDevices=lhnNusDevices, leftHandNetworksGlobalRegistrationModule=leftHandNetworksGlobalRegistrationModule, leftHandNetworks=leftHandNetworks, lhnProducts=lhnProducts)
