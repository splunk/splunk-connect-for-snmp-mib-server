#
# PySNMP MIB module STN-L2TP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-L2TP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
l2tp, = mibBuilder.importSymbols("L2TP-MIB", "l2tp")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, Counter64, IpAddress, Unsigned32, iso, Gauge32, ModuleIdentity, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "Counter64", "IpAddress", "Unsigned32", "iso", "Gauge32", "ModuleIdentity", "Bits", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
StnDomainMapType, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-TC", "StnDomainMapType")
stnL2tp = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 95, 10))
if mibBuilder.loadTexts: stnL2tp.setLastUpdated('0002160000Z')
if mibBuilder.loadTexts: stnL2tp.setOrganization('Spring Tide Networks, Inc.')
stnL2tpObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 10, 1))
stnL2tpMibConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 10, 2))
stnL2tpTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 95, 10, 3))
stnL2tpDomainMapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10), )
if mibBuilder.loadTexts: stnL2tpDomainMapTable.setStatus('current')
stnL2tpDomainMapTableEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1), ).setIndexNames((0, "STN-L2TP-MIB", "stnL2tpDomainMapIdentifier"))
if mibBuilder.loadTexts: stnL2tpDomainMapTableEntry.setStatus('current')
stnL2tpDomainMapIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1, 1), DisplayString())
if mibBuilder.loadTexts: stnL2tpDomainMapIdentifier.setStatus('current')
stnL2tpDomainMapHostName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnL2tpDomainMapHostName.setStatus('current')
stnL2tpDomainMapType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1, 3), StnDomainMapType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnL2tpDomainMapType.setStatus('current')
stnL2tpDomainMapTypeInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 95, 10, 1, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnL2tpDomainMapTypeInfo.setStatus('current')
mibBuilder.exportSymbols("STN-L2TP-MIB", stnL2tpObjects=stnL2tpObjects, stnL2tpDomainMapIdentifier=stnL2tpDomainMapIdentifier, stnL2tpDomainMapTableEntry=stnL2tpDomainMapTableEntry, stnL2tp=stnL2tp, stnL2tpDomainMapTypeInfo=stnL2tpDomainMapTypeInfo, stnL2tpDomainMapHostName=stnL2tpDomainMapHostName, stnL2tpTraps=stnL2tpTraps, stnL2tpDomainMapType=stnL2tpDomainMapType, stnL2tpDomainMapTable=stnL2tpDomainMapTable, stnL2tpMibConformance=stnL2tpMibConformance, PYSNMP_MODULE_ID=stnL2tp)
