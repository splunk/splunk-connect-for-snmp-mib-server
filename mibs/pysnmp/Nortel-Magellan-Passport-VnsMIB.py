#
# PySNMP MIB module Nortel-Magellan-Passport-VnsMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-VnsMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
rtgIndex, rtg = mibBuilder.importSymbols("Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex", "rtg")
RowStatus, Integer32, InterfaceIndex, StorageType, Unsigned32, DisplayString, RowPointer, PassportCounter64 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "RowStatus", "Integer32", "InterfaceIndex", "StorageType", "Unsigned32", "DisplayString", "RowPointer", "PassportCounter64")
AsciiStringIndex, Link = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "AsciiStringIndex", "Link")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Integer32, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Counter64, ModuleIdentity, TimeTicks, Counter32, Unsigned32, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Counter64", "ModuleIdentity", "TimeTicks", "Counter32", "Unsigned32", "NotificationType", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vnsMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 20))
rtgVns = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3))
rtgVnsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 1), )
if mibBuilder.loadTexts: rtgVnsRowStatusTable.setStatus('mandatory')
rtgVnsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"))
if mibBuilder.loadTexts: rtgVnsRowStatusEntry.setStatus('mandatory')
rtgVnsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgVnsRowStatus.setStatus('mandatory')
rtgVnsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsComponentName.setStatus('mandatory')
rtgVnsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsStorageType.setStatus('mandatory')
rtgVnsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 12)))
if mibBuilder.loadTexts: rtgVnsIndex.setStatus('mandatory')
rtgVnsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 10), )
if mibBuilder.loadTexts: rtgVnsProvTable.setStatus('mandatory')
rtgVnsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"))
if mibBuilder.loadTexts: rtgVnsProvEntry.setStatus('mandatory')
rtgVnsLogicalNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 2047))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgVnsLogicalNetworkNumber.setStatus('mandatory')
rtgVnsLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 10, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgVnsLinkToProtocolPort.setStatus('mandatory')
rtgVnsMaximumTransmissionUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2048, 65535)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgVnsMaximumTransmissionUnit.setStatus('mandatory')
rtgVnsLoadSharing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgVnsLoadSharing.setStatus('mandatory')
rtgVnsDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgVnsDiscardPriority.setStatus('obsolete')
rtgVnsIlsForwarder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 10, 1, 6), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgVnsIlsForwarder.setStatus('mandatory')
rtgVnsIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 11), )
if mibBuilder.loadTexts: rtgVnsIfEntryTable.setStatus('mandatory')
rtgVnsIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"))
if mibBuilder.loadTexts: rtgVnsIfEntryEntry.setStatus('mandatory')
rtgVnsIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgVnsIfAdminStatus.setStatus('mandatory')
rtgVnsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsIfIndex.setStatus('mandatory')
rtgVnsCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 12), )
if mibBuilder.loadTexts: rtgVnsCidDataTable.setStatus('mandatory')
rtgVnsCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"))
if mibBuilder.loadTexts: rtgVnsCidDataEntry.setStatus('mandatory')
rtgVnsCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgVnsCustomerIdentifier.setStatus('mandatory')
rtgVnsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 14), )
if mibBuilder.loadTexts: rtgVnsStateTable.setStatus('mandatory')
rtgVnsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"))
if mibBuilder.loadTexts: rtgVnsStateEntry.setStatus('mandatory')
rtgVnsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsAdminState.setStatus('mandatory')
rtgVnsOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsOperationalState.setStatus('mandatory')
rtgVnsUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsUsageState.setStatus('mandatory')
rtgVnsOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 15), )
if mibBuilder.loadTexts: rtgVnsOperTable.setStatus('mandatory')
rtgVnsOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"))
if mibBuilder.loadTexts: rtgVnsOperEntry.setStatus('mandatory')
rtgVnsReportedThroughputMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsReportedThroughputMetric.setStatus('mandatory')
rtgVnsFwdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16), )
if mibBuilder.loadTexts: rtgVnsFwdStatsTable.setStatus('mandatory')
rtgVnsFwdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"))
if mibBuilder.loadTexts: rtgVnsFwdStatsEntry.setStatus('mandatory')
rtgVnsUniRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsUniRxPkts.setStatus('mandatory')
rtgVnsUniRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsUniRxBytes.setStatus('mandatory')
rtgVnsUniRxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsUniRxDiscPkts.setStatus('mandatory')
rtgVnsUniTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsUniTxPkts.setStatus('mandatory')
rtgVnsUniTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsUniTxBytes.setStatus('mandatory')
rtgVnsUniTxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 6), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsUniTxDiscPkts.setStatus('mandatory')
rtgVnsMultiRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsMultiRxPkts.setStatus('mandatory')
rtgVnsMultiRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsMultiRxBytes.setStatus('mandatory')
rtgVnsMultiRxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsMultiRxDiscPkts.setStatus('mandatory')
rtgVnsMultiTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsMultiTxPkts.setStatus('mandatory')
rtgVnsMultiTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsMultiTxBytes.setStatus('mandatory')
rtgVnsMultiTxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 12), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsMultiTxDiscPkts.setStatus('mandatory')
rtgVnsTotalRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 13), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsTotalRxPkts.setStatus('mandatory')
rtgVnsTotalRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 14), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsTotalRxBytes.setStatus('mandatory')
rtgVnsTotalRxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 15), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsTotalRxDiscPkts.setStatus('mandatory')
rtgVnsTotalTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 16), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsTotalTxPkts.setStatus('mandatory')
rtgVnsTotalTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 17), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsTotalTxBytes.setStatus('mandatory')
rtgVnsTotalTxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 16, 1, 18), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsTotalTxDiscPkts.setStatus('mandatory')
rtgVnsNode = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2))
rtgVnsNodeRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 1), )
if mibBuilder.loadTexts: rtgVnsNodeRowStatusTable.setStatus('mandatory')
rtgVnsNodeRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsNodeIndex"))
if mibBuilder.loadTexts: rtgVnsNodeRowStatusEntry.setStatus('mandatory')
rtgVnsNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsNodeRowStatus.setStatus('mandatory')
rtgVnsNodeComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsNodeComponentName.setStatus('mandatory')
rtgVnsNodeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsNodeStorageType.setStatus('mandatory')
rtgVnsNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: rtgVnsNodeIndex.setStatus('mandatory')
rtgVnsNodeOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 10), )
if mibBuilder.loadTexts: rtgVnsNodeOperTable.setStatus('mandatory')
rtgVnsNodeOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsNodeIndex"))
if mibBuilder.loadTexts: rtgVnsNodeOperEntry.setStatus('mandatory')
rtgVnsNodeMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsNodeMetric.setStatus('mandatory')
rtgVnsNodeNextHopLinkGroup1 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 10, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsNodeNextHopLinkGroup1.setStatus('mandatory')
rtgVnsNodeNextHopLinkGroup2 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 2, 10, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsNodeNextHopLinkGroup2.setStatus('mandatory')
rtgVnsLpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3))
rtgVnsLpStatsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 1), )
if mibBuilder.loadTexts: rtgVnsLpStatsRowStatusTable.setStatus('mandatory')
rtgVnsLpStatsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsLpStatsIndex"))
if mibBuilder.loadTexts: rtgVnsLpStatsRowStatusEntry.setStatus('mandatory')
rtgVnsLpStatsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsRowStatus.setStatus('mandatory')
rtgVnsLpStatsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsComponentName.setStatus('mandatory')
rtgVnsLpStatsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsStorageType.setStatus('mandatory')
rtgVnsLpStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: rtgVnsLpStatsIndex.setStatus('mandatory')
rtgVnsLpStatsFwdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2), )
if mibBuilder.loadTexts: rtgVnsLpStatsFwdStatsTable.setStatus('mandatory')
rtgVnsLpStatsFwdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsIndex"), (0, "Nortel-Magellan-Passport-VnsMIB", "rtgVnsLpStatsIndex"))
if mibBuilder.loadTexts: rtgVnsLpStatsFwdStatsEntry.setStatus('mandatory')
rtgVnsLpStatsUniRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsUniRxPkts.setStatus('mandatory')
rtgVnsLpStatsUniRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsUniRxBytes.setStatus('mandatory')
rtgVnsLpStatsUniRxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsUniRxDiscPkts.setStatus('mandatory')
rtgVnsLpStatsUniTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsUniTxPkts.setStatus('mandatory')
rtgVnsLpStatsUniTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsUniTxBytes.setStatus('mandatory')
rtgVnsLpStatsUniTxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 6), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsUniTxDiscPkts.setStatus('mandatory')
rtgVnsLpStatsMultiRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsMultiRxPkts.setStatus('mandatory')
rtgVnsLpStatsMultiRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsMultiRxBytes.setStatus('mandatory')
rtgVnsLpStatsMultiRxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsMultiRxDiscPkts.setStatus('mandatory')
rtgVnsLpStatsMultiTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsMultiTxPkts.setStatus('mandatory')
rtgVnsLpStatsMultiTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsMultiTxBytes.setStatus('mandatory')
rtgVnsLpStatsMultiTxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 12), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsMultiTxDiscPkts.setStatus('mandatory')
rtgVnsLpStatsTotalRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 13), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsTotalRxPkts.setStatus('mandatory')
rtgVnsLpStatsTotalRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 14), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsTotalRxBytes.setStatus('mandatory')
rtgVnsLpStatsTotalRxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 15), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsTotalRxDiscPkts.setStatus('mandatory')
rtgVnsLpStatsTotalTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 16), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsTotalTxPkts.setStatus('mandatory')
rtgVnsLpStatsTotalTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 17), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsTotalTxBytes.setStatus('mandatory')
rtgVnsLpStatsTotalTxDiscPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 3, 3, 2, 1, 18), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgVnsLpStatsTotalTxDiscPkts.setStatus('mandatory')
vnsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 20, 1))
vnsGroupBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 20, 1, 4))
vnsGroupBD00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 20, 1, 4, 1))
vnsGroupBD00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 20, 1, 4, 1, 2))
vnsCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 20, 3))
vnsCapabilitiesBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 20, 3, 4))
vnsCapabilitiesBD00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 20, 3, 4, 1))
vnsCapabilitiesBD00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 20, 3, 4, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-VnsMIB", rtgVnsMultiRxBytes=rtgVnsMultiRxBytes, vnsCapabilities=vnsCapabilities, rtgVnsLpStatsUniRxDiscPkts=rtgVnsLpStatsUniRxDiscPkts, rtgVnsFwdStatsTable=rtgVnsFwdStatsTable, rtgVnsComponentName=rtgVnsComponentName, rtgVnsIfEntryTable=rtgVnsIfEntryTable, rtgVnsProvEntry=rtgVnsProvEntry, rtgVnsIfIndex=rtgVnsIfIndex, rtgVnsNodeRowStatusTable=rtgVnsNodeRowStatusTable, rtgVnsLpStatsMultiRxPkts=rtgVnsLpStatsMultiRxPkts, rtgVnsStateEntry=rtgVnsStateEntry, rtgVnsRowStatusEntry=rtgVnsRowStatusEntry, rtgVns=rtgVns, rtgVnsTotalRxPkts=rtgVnsTotalRxPkts, rtgVnsFwdStatsEntry=rtgVnsFwdStatsEntry, rtgVnsLpStatsTotalTxDiscPkts=rtgVnsLpStatsTotalTxDiscPkts, rtgVnsNodeMetric=rtgVnsNodeMetric, rtgVnsMultiTxDiscPkts=rtgVnsMultiTxDiscPkts, rtgVnsLpStatsTotalRxPkts=rtgVnsLpStatsTotalRxPkts, rtgVnsIfAdminStatus=rtgVnsIfAdminStatus, rtgVnsLpStats=rtgVnsLpStats, vnsGroupBD=vnsGroupBD, rtgVnsLpStatsTotalTxBytes=rtgVnsLpStatsTotalTxBytes, rtgVnsIfEntryEntry=rtgVnsIfEntryEntry, rtgVnsMaximumTransmissionUnit=rtgVnsMaximumTransmissionUnit, vnsCapabilitiesBD00=vnsCapabilitiesBD00, rtgVnsDiscardPriority=rtgVnsDiscardPriority, rtgVnsProvTable=rtgVnsProvTable, rtgVnsLpStatsUniTxBytes=rtgVnsLpStatsUniTxBytes, vnsCapabilitiesBD00A=vnsCapabilitiesBD00A, rtgVnsLogicalNetworkNumber=rtgVnsLogicalNetworkNumber, rtgVnsLpStatsMultiTxDiscPkts=rtgVnsLpStatsMultiTxDiscPkts, rtgVnsMultiTxBytes=rtgVnsMultiTxBytes, vnsGroupBD00A=vnsGroupBD00A, rtgVnsRowStatus=rtgVnsRowStatus, rtgVnsLinkToProtocolPort=rtgVnsLinkToProtocolPort, rtgVnsStorageType=rtgVnsStorageType, rtgVnsNodeRowStatusEntry=rtgVnsNodeRowStatusEntry, rtgVnsTotalRxBytes=rtgVnsTotalRxBytes, rtgVnsLpStatsFwdStatsTable=rtgVnsLpStatsFwdStatsTable, rtgVnsRowStatusTable=rtgVnsRowStatusTable, rtgVnsNodeIndex=rtgVnsNodeIndex, rtgVnsCustomerIdentifier=rtgVnsCustomerIdentifier, rtgVnsIndex=rtgVnsIndex, rtgVnsUniRxDiscPkts=rtgVnsUniRxDiscPkts, rtgVnsUniTxDiscPkts=rtgVnsUniTxDiscPkts, vnsGroupBD00=vnsGroupBD00, vnsCapabilitiesBD=vnsCapabilitiesBD, rtgVnsReportedThroughputMetric=rtgVnsReportedThroughputMetric, rtgVnsLpStatsUniTxPkts=rtgVnsLpStatsUniTxPkts, rtgVnsLpStatsComponentName=rtgVnsLpStatsComponentName, rtgVnsNodeOperEntry=rtgVnsNodeOperEntry, rtgVnsLpStatsRowStatusEntry=rtgVnsLpStatsRowStatusEntry, rtgVnsLpStatsRowStatus=rtgVnsLpStatsRowStatus, vnsGroup=vnsGroup, rtgVnsOperationalState=rtgVnsOperationalState, rtgVnsUsageState=rtgVnsUsageState, rtgVnsTotalTxDiscPkts=rtgVnsTotalTxDiscPkts, rtgVnsLpStatsMultiTxBytes=rtgVnsLpStatsMultiTxBytes, rtgVnsMultiRxDiscPkts=rtgVnsMultiRxDiscPkts, rtgVnsLpStatsRowStatusTable=rtgVnsLpStatsRowStatusTable, rtgVnsNodeNextHopLinkGroup2=rtgVnsNodeNextHopLinkGroup2, rtgVnsUniTxBytes=rtgVnsUniTxBytes, rtgVnsUniTxPkts=rtgVnsUniTxPkts, rtgVnsTotalTxPkts=rtgVnsTotalTxPkts, rtgVnsLpStatsIndex=rtgVnsLpStatsIndex, rtgVnsNodeComponentName=rtgVnsNodeComponentName, rtgVnsNodeRowStatus=rtgVnsNodeRowStatus, rtgVnsStateTable=rtgVnsStateTable, rtgVnsAdminState=rtgVnsAdminState, rtgVnsLpStatsTotalTxPkts=rtgVnsLpStatsTotalTxPkts, rtgVnsTotalTxBytes=rtgVnsTotalTxBytes, rtgVnsCidDataTable=rtgVnsCidDataTable, rtgVnsLoadSharing=rtgVnsLoadSharing, rtgVnsNodeStorageType=rtgVnsNodeStorageType, rtgVnsLpStatsMultiRxBytes=rtgVnsLpStatsMultiRxBytes, rtgVnsTotalRxDiscPkts=rtgVnsTotalRxDiscPkts, rtgVnsLpStatsFwdStatsEntry=rtgVnsLpStatsFwdStatsEntry, vnsMIB=vnsMIB, rtgVnsCidDataEntry=rtgVnsCidDataEntry, rtgVnsLpStatsMultiRxDiscPkts=rtgVnsLpStatsMultiRxDiscPkts, rtgVnsNodeNextHopLinkGroup1=rtgVnsNodeNextHopLinkGroup1, rtgVnsOperTable=rtgVnsOperTable, rtgVnsLpStatsStorageType=rtgVnsLpStatsStorageType, rtgVnsUniRxPkts=rtgVnsUniRxPkts, rtgVnsOperEntry=rtgVnsOperEntry, rtgVnsMultiTxPkts=rtgVnsMultiTxPkts, rtgVnsLpStatsTotalRxDiscPkts=rtgVnsLpStatsTotalRxDiscPkts, rtgVnsNodeOperTable=rtgVnsNodeOperTable, rtgVnsLpStatsUniRxBytes=rtgVnsLpStatsUniRxBytes, rtgVnsIlsForwarder=rtgVnsIlsForwarder, rtgVnsLpStatsUniTxDiscPkts=rtgVnsLpStatsUniTxDiscPkts, rtgVnsNode=rtgVnsNode, rtgVnsLpStatsTotalRxBytes=rtgVnsLpStatsTotalRxBytes, rtgVnsLpStatsMultiTxPkts=rtgVnsLpStatsMultiTxPkts, rtgVnsMultiRxPkts=rtgVnsMultiRxPkts, rtgVnsUniRxBytes=rtgVnsUniRxBytes, rtgVnsLpStatsUniRxPkts=rtgVnsLpStatsUniRxPkts)
