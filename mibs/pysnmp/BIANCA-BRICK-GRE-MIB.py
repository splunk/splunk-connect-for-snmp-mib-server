#
# PySNMP MIB module BIANCA-BRICK-GRE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-GRE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
DisplayString, = mibBuilder.importSymbols("RFC1158-MIB", "DisplayString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Integer32, Gauge32, ModuleIdentity, TimeTicks, enterprises, Bits, NotificationType, ObjectIdentity, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Gauge32", "ModuleIdentity", "TimeTicks", "enterprises", "Bits", "NotificationType", "ObjectIdentity", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
vpn = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 23))
greIfTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 23, 5), )
if mibBuilder.loadTexts: greIfTable.setStatus('mandatory')
greIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 23, 5, 1), ).setIndexNames((0, "BIANCA-BRICK-GRE-MIB", "greDstIpAddr"))
if mibBuilder.loadTexts: greIfEntry.setStatus('mandatory')
greIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greIfIndex.setStatus('mandatory')
greIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greIfDescr.setStatus('mandatory')
greIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greIfMtu.setStatus('mandatory')
greDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greDstIpAddr.setStatus('mandatory')
greKey = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greKey.setStatus('mandatory')
greUseKey = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("delete", 1), ("yes", 2), ("no", 3))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greUseKey.setStatus('mandatory')
greSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 23, 5, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greSrcIpAddr.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-GRE-MIB", bintec=bintec, greIfTable=greIfTable, greIfDescr=greIfDescr, vpn=vpn, greIfMtu=greIfMtu, bibo=bibo, greIfEntry=greIfEntry, greDstIpAddr=greDstIpAddr, greSrcIpAddr=greSrcIpAddr, greUseKey=greUseKey, greKey=greKey, greIfIndex=greIfIndex)
