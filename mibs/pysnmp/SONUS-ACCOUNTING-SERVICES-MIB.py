#
# PySNMP MIB module SONUS-ACCOUNTING-SERVICES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-ACCOUNTING-SERVICES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, Counter64, Gauge32, MibIdentifier, Bits, TimeTicks, IpAddress, ObjectIdentity, ModuleIdentity, Integer32, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "Counter64", "Gauge32", "MibIdentifier", "Bits", "TimeTicks", "IpAddress", "ObjectIdentity", "ModuleIdentity", "Integer32", "iso", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sonusEventDescription, sonusEventLevel, sonusEventClass = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventDescription", "sonusEventLevel", "sonusEventClass")
sonusServicesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusServicesMIBs")
SonusAdminState, = mibBuilder.importSymbols("SONUS-TC", "SonusAdminState")
sonusAccountingServicesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5))
if mibBuilder.loadTexts: sonusAccountingServicesMIB.setLastUpdated('200102030000Z')
if mibBuilder.loadTexts: sonusAccountingServicesMIB.setOrganization('Sonus Networks, Inc.')
sonusAccountingServicesMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1))
sonusCallAccountingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1))
sonusCallAccountingConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1))
sonusAcctGenerationMode = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("origination", 1), ("destination", 2), ("allcalls", 3), ("none", 4))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAcctGenerationMode.setStatus('current')
sonusAcctLogDestination = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("eventlog", 1))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAcctLogDestination.setStatus('current')
sonusAcctIntAcctState = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1, 3), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAcctIntAcctState.setStatus('current')
sonusAcctIntAcctInterval = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 86400)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAcctIntAcctInterval.setStatus('current')
sonusCallAccountingStatusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2))
sonusAcctNumCallAttempts = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctNumCallAttempts.setStatus('current')
sonusAcctNumCallCompletions = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctNumCallCompletions.setStatus('current')
sonusAcctNumCallAttemptFailures = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctNumCallAttemptFailures.setStatus('current')
sonusAcctBusyHourAttempts = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctBusyHourAttempts.setStatus('current')
sonusAcctCallAttemptRate = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctCallAttemptRate.setStatus('current')
sonusAcctAvgCallDuration = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctAvgCallDuration.setStatus('current')
sonusAcctNumCallAttemptBlocked = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctNumCallAttemptBlocked.setStatus('current')
sonusAccountingMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2))
sonusAccountingMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 0))
sonusAccountingMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 1))
sonusAcctOutOfServiceReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("configChange", 1), ("eventLoggingError", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctOutOfServiceReason.setStatus('current')
sonusCallAccountingInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 0, 1)).setObjects(("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctGenerationMode"), ("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctLogDestination"), ("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctIntAcctState"), ("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctIntAcctInterval"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusCallAccountingInServiceNotification.setStatus('current')
sonusCallAccountingOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 0, 2)).setObjects(("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctOutOfServiceReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusCallAccountingOutOfServiceNotification.setStatus('current')
mibBuilder.exportSymbols("SONUS-ACCOUNTING-SERVICES-MIB", sonusCallAccountingInServiceNotification=sonusCallAccountingInServiceNotification, sonusAcctNumCallAttemptBlocked=sonusAcctNumCallAttemptBlocked, sonusAcctIntAcctInterval=sonusAcctIntAcctInterval, PYSNMP_MODULE_ID=sonusAccountingServicesMIB, sonusCallAccountingStatusObjects=sonusCallAccountingStatusObjects, sonusAcctNumCallAttempts=sonusAcctNumCallAttempts, sonusAcctLogDestination=sonusAcctLogDestination, sonusAcctBusyHourAttempts=sonusAcctBusyHourAttempts, sonusAccountingMIBNotificationsPrefix=sonusAccountingMIBNotificationsPrefix, sonusAcctNumCallCompletions=sonusAcctNumCallCompletions, sonusAcctOutOfServiceReason=sonusAcctOutOfServiceReason, sonusCallAccountingConfigObjects=sonusCallAccountingConfigObjects, sonusAcctCallAttemptRate=sonusAcctCallAttemptRate, sonusAcctNumCallAttemptFailures=sonusAcctNumCallAttemptFailures, sonusAccountingServicesMIBObjects=sonusAccountingServicesMIBObjects, sonusAccountingServicesMIB=sonusAccountingServicesMIB, sonusAcctIntAcctState=sonusAcctIntAcctState, sonusAcctAvgCallDuration=sonusAcctAvgCallDuration, sonusAcctGenerationMode=sonusAcctGenerationMode, sonusAccountingMIBNotifications=sonusAccountingMIBNotifications, sonusCallAccountingOutOfServiceNotification=sonusCallAccountingOutOfServiceNotification, sonusAccountingMIBNotificationsObjects=sonusAccountingMIBNotificationsObjects, sonusCallAccountingObjects=sonusCallAccountingObjects)
