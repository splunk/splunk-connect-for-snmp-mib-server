#
# PySNMP MIB module ALCATEL-IND1-ISIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-ISIS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
routingIND1ISIS, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1ISIS")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
isisSysL2State, SystemID, isisManAreaAddrExistState, SNPAAddress, isisISAdjState, isisSysL1State, isisSysInstance, isisISAdjEntry = mibBuilder.importSymbols("ISIS-MIB", "isisSysL2State", "SystemID", "isisManAreaAddrExistState", "SNPAAddress", "isisISAdjState", "isisSysL1State", "isisSysInstance", "isisISAdjEntry")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, NotificationType, iso, IpAddress, TimeTicks, Unsigned32, Counter64, Gauge32, Counter32, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "NotificationType", "iso", "IpAddress", "TimeTicks", "Unsigned32", "Counter64", "Gauge32", "Counter32", "ObjectIdentity", "MibIdentifier")
TextualConvention, DisplayString, RowStatus, TimeInterval, TimeStamp, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TimeInterval", "TimeStamp", "TruthValue")
timetraIsisMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1))
timetraIsisMIBModule.setRevisions(('2007-07-02 00:00', '1906-03-16 00:00', '1905-08-31 00:00', '1905-01-24 00:00', '1904-06-02 00:00', '1904-01-15 00:00', '1903-08-15 00:00', '1903-01-20 00:00', '1901-09-21 00:00',))
if mibBuilder.loadTexts: timetraIsisMIBModule.setLastUpdated('201205040000Z')
if mibBuilder.loadTexts: timetraIsisMIBModule.setOrganization('Alcatel - Architects Of An Internet World')
class TmnxAdminState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noop", 1), ("inService", 2), ("outOfService", 3))

class TmnxOperState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 1), ("inService", 2), ("outOfService", 3), ("transition", 4))

vRtrIsisObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10))
vRtrIsisScalarObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 1))
vRtrIsisSystemObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2))
vRtrIsisIfObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3))
vRtrIsisAdjObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4))
vRtrIsisNotificationObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5))
vRtrIsisDatabaseClearObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 6))
vRtrIsisNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11))
vRtrIsisMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12))
vRtrIsisStatisticsClear = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisStatisticsClear.setStatus('current')
vRtrIsisLSPClear = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLSPClear.setStatus('current')
vRtrIsisISAdjClear = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisISAdjClear.setStatus('current')
vRtrIsisSpfClear = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisSpfClear.setStatus('current')
vRtrIsisTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1), )
if mibBuilder.loadTexts: vRtrIsisTable.setStatus('current')
vRtrIsisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"))
if mibBuilder.loadTexts: vRtrIsisEntry.setStatus('current')
vRtrIsisLastEnabledTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLastEnabledTime.setStatus('current')
vRtrIsisAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 118)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisAuthKey.setStatus('current')
vRtrIsisAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("password", 2), ("md5", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisAuthType.setStatus('current')
vRtrIsisAuthCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisAuthCheck.setStatus('current')
vRtrIsisLspLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(350, 65535)).clone(1200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLspLifetime.setStatus('current')
vRtrIsisOverloadTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 1800), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisOverloadTimeout.setStatus('current')
vRtrIsisOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 12), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisOperState.setStatus('current')
vRtrIsisShortCuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisShortCuts.setStatus('current')
vRtrIsisSpfHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisSpfHoldTime.setStatus('current')
vRtrIsisLastSpfRun = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLastSpfRun.setStatus('current')
vRtrIsisGracefulRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisGracefulRestart.setStatus('current')
vRtrIsisOverloadOnBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("enabledWaitForBgp", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisOverloadOnBoot.setStatus('current')
vRtrIsisOverloadOnBootTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 1800), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisOverloadOnBootTimeout.setStatus('current')
vRtrIsisSpfWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisSpfWait.setStatus('deprecated')
vRtrIsisSpfInitialWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisSpfInitialWait.setStatus('current')
vRtrIsisSpfSecondWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisSpfSecondWait.setStatus('current')
vRtrIsisLspMaxWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLspMaxWait.setStatus('current')
vRtrIsisLspInitialWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLspInitialWait.setStatus('current')
vRtrIsisLspSecondWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLspSecondWait.setStatus('current')
vRtrIsisCsnpAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 25), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisCsnpAuthentication.setStatus('current')
vRtrIsisHelloAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 26), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisHelloAuthentication.setStatus('current')
vRtrIsisPsnpAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 27), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisPsnpAuthentication.setStatus('current')
vRtrIsisGRRestartDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(180)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisGRRestartDuration.setStatus('current')
vRtrIsisGRHelperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 29), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisGRHelperMode.setStatus('current')
vRtrIsisStrictAdjacencyCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 30), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisStrictAdjacencyCheck.setStatus('current')
vRtrIsisSpfMaxWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 120000)).clone(10000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisSpfMaxWait.setStatus('current')
vRtrIsisActivateIPv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 32), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisActivateIPv4.setStatus('current')
vRtrIsisActivateIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 33), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisActivateIPv6.setStatus('current')
vRtrIsisMTEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 1, 1, 34), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisMTEnabled.setStatus('current')
vRtrIsisLevelTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2), )
if mibBuilder.loadTexts: vRtrIsisLevelTable.setStatus('current')
vRtrIsisLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevel"))
if mibBuilder.loadTexts: vRtrIsisLevelEntry.setStatus('current')
vRtrIsisLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2))))
if mibBuilder.loadTexts: vRtrIsisLevel.setStatus('current')
vRtrIsisLevelAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 118)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLevelAuthKey.setStatus('current')
vRtrIsisLevelAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("useGlobal", 0), ("none", 1), ("password", 2), ("md5", 3))).clone('useGlobal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLevelAuthType.setStatus('current')
vRtrIsisLevelWideMetricsOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLevelWideMetricsOnly.setStatus('current')
vRtrIsisLevelOverloadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notInOverload", 1), ("dynamic", 2), ("manual", 3), ("manualOnBoot", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLevelOverloadStatus.setStatus('current')
vRtrIsisLevelOverloadTimeLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLevelOverloadTimeLeft.setStatus('current')
vRtrIsisLevelNumLSPs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLevelNumLSPs.setStatus('current')
vRtrIsisLevelCsnpAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLevelCsnpAuthentication.setStatus('current')
vRtrIsisLevelHelloAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLevelHelloAuthentication.setStatus('current')
vRtrIsisLevelPsnpAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 2, 1, 10), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLevelPsnpAuthentication.setStatus('current')
vRtrIsisStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3), )
if mibBuilder.loadTexts: vRtrIsisStatsTable.setStatus('current')
vRtrIsisStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"))
if mibBuilder.loadTexts: vRtrIsisStatsEntry.setStatus('current')
vRtrIsisSpfRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisSpfRuns.setStatus('current')
vRtrIsisLSPRegenerations = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPRegenerations.setStatus('current')
vRtrIsisInitiatedPurges = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisInitiatedPurges.setStatus('current')
vRtrIsisLSPRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPRecd.setStatus('current')
vRtrIsisLSPDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPDrop.setStatus('current')
vRtrIsisLSPSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPSent.setStatus('current')
vRtrIsisLSPRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPRetrans.setStatus('current')
vRtrIsisIIHRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIIHRecd.setStatus('current')
vRtrIsisIIHDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIIHDrop.setStatus('current')
vRtrIsisIIHSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIIHSent.setStatus('current')
vRtrIsisIIHRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIIHRetrans.setStatus('current')
vRtrIsisCSNPRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisCSNPRecd.setStatus('current')
vRtrIsisCSNPDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisCSNPDrop.setStatus('current')
vRtrIsisCSNPSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisCSNPSent.setStatus('current')
vRtrIsisCSNPRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisCSNPRetrans.setStatus('current')
vRtrIsisPSNPRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisPSNPRecd.setStatus('current')
vRtrIsisPSNPDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisPSNPDrop.setStatus('current')
vRtrIsisPSNPSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisPSNPSent.setStatus('current')
vRtrIsisPSNPRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisPSNPRetrans.setStatus('current')
vRtrIsisUnknownRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisUnknownRecd.setStatus('current')
vRtrIsisUnknownDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisUnknownDrop.setStatus('current')
vRtrIsisUnknownSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisUnknownSent.setStatus('current')
vRtrIsisUnknownRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisUnknownRetrans.setStatus('current')
vRtrIsisCSPFRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisCSPFRequests.setStatus('current')
vRtrIsisCSPFDroppedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisCSPFDroppedRequests.setStatus('current')
vRtrIsisCSPFPathsFound = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisCSPFPathsFound.setStatus('current')
vRtrIsisCSPFPathsNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisCSPFPathsNotFound.setStatus('current')
vRtrIsisHostnameTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 4), )
if mibBuilder.loadTexts: vRtrIsisHostnameTable.setStatus('current')
vRtrIsisHostnameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 4, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisSysID"))
if mibBuilder.loadTexts: vRtrIsisHostnameEntry.setStatus('current')
vRtrIsisSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 4, 1, 1), SystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisSysID.setStatus('current')
vRtrIsisHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisHostname.setStatus('current')
vRtrIsisRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5), )
if mibBuilder.loadTexts: vRtrIsisRouteTable.setStatus('current')
vRtrIsisRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteDest"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteMask"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteNexthopIP"))
if mibBuilder.loadTexts: vRtrIsisRouteEntry.setStatus('current')
vRtrIsisRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisRouteDest.setStatus('current')
vRtrIsisRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisRouteMask.setStatus('current')
vRtrIsisRouteNexthopIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisRouteNexthopIP.setStatus('current')
vRtrIsisRouteLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisRouteLevel.setStatus('current')
vRtrIsisRouteSpfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisRouteSpfVersion.setStatus('current')
vRtrIsisRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisRouteMetric.setStatus('current')
vRtrIsisRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisRouteType.setStatus('current')
vRtrIsisRouteNHopSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 5, 1, 8), SystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisRouteNHopSysID.setStatus('current')
vRtrIsisPathTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 6), )
if mibBuilder.loadTexts: vRtrIsisPathTable.setStatus('current')
vRtrIsisPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 6, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevel"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisPathID"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisPathIfIndex"))
if mibBuilder.loadTexts: vRtrIsisPathEntry.setStatus('current')
vRtrIsisPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisPathID.setStatus('current')
vRtrIsisPathIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 6, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisPathIfIndex.setStatus('current')
vRtrIsisPathNHopSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 6, 1, 3), SystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisPathNHopSysID.setStatus('current')
vRtrIsisPathMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisPathMetric.setStatus('current')
vRtrIsisPathSNPA = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 6, 1, 5), SNPAAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisPathSNPA.setStatus('current')
vRtrIsisLSPTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7), )
if mibBuilder.loadTexts: vRtrIsisLSPTable.setStatus('current')
vRtrIsisLSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevel"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPId"))
if mibBuilder.loadTexts: vRtrIsisLSPEntry.setStatus('current')
vRtrIsisLSPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPId.setStatus('current')
vRtrIsisLSPSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPSeq.setStatus('current')
vRtrIsisLSPChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPChecksum.setStatus('current')
vRtrIsisLSPLifetimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPLifetimeRemain.setStatus('current')
vRtrIsisLSPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPVersion.setStatus('current')
vRtrIsisLSPPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPPktType.setStatus('current')
vRtrIsisLSPPktVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPPktVersion.setStatus('current')
vRtrIsisLSPMaxArea = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPMaxArea.setStatus('current')
vRtrIsisLSPSysIdLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPSysIdLen.setStatus('current')
vRtrIsisLSPAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPAttributes.setStatus('current')
vRtrIsisLSPUsedLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPUsedLen.setStatus('current')
vRtrIsisLSPAllocLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPAllocLen.setStatus('current')
vRtrIsisLSPBuff = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(27, 1492))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPBuff.setStatus('current')
vRtrIsisLSPZeroRLT = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 7, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisLSPZeroRLT.setStatus('current')
vRtrIsisIfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1), )
if mibBuilder.loadTexts: vRtrIsisIfTable.setStatus('current')
vRtrIsisIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"))
if mibBuilder.loadTexts: vRtrIsisIfEntry.setStatus('current')
vRtrIsisIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 1), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisIfIndex.setStatus('current')
vRtrIsisIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfRowStatus.setStatus('current')
vRtrIsisIfLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIfLastChangeTime.setStatus('current')
vRtrIsisIfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfAdminState.setStatus('current')
vRtrIsisIfOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 5), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIfOperState.setStatus('current')
vRtrIsisIfCsnpInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfCsnpInterval.setStatus('current')
vRtrIsisIfHelloAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 118)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfHelloAuthKey.setStatus('current')
vRtrIsisIfHelloAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("password", 2), ("md5", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfHelloAuthType.setStatus('current')
vRtrIsisIfLspPacingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfLspPacingInterval.setStatus('current')
vRtrIsisIfCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIfCircIndex.setStatus('current')
vRtrIsisIfRetransmitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfRetransmitInterval.setStatus('current')
vRtrIsisIfTypeDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 12), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfTypeDefault.setStatus('current')
vRtrIsisIfAddressFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7))).clone(namedValues=NamedValues(("v4", 1), ("v6", 2), ("v4v6", 3), ("nov4", 5), ("nov6", 6), ("nov4v6", 7))).clone('nov4v6')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfAddressFamily.setStatus('current')
vRtrIsisIfLevelTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2), )
if mibBuilder.loadTexts: vRtrIsisIfLevelTable.setStatus('current')
vRtrIsisIfLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevel"))
if mibBuilder.loadTexts: vRtrIsisIfLevelEntry.setStatus('current')
vRtrIsisIfLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2))))
if mibBuilder.loadTexts: vRtrIsisIfLevel.setStatus('current')
vRtrIsisIfLevelLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIfLevelLastChangeTime.setStatus('current')
vRtrIsisIfLevelHelloAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 118)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfLevelHelloAuthKey.setStatus('current')
vRtrIsisIfLevelHelloAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("useGlobal", 0), ("none", 1), ("password", 2), ("md5", 3))).clone('useGlobal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfLevelHelloAuthType.setStatus('current')
vRtrIsisIfLevelPassive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfLevelPassive.setStatus('current')
vRtrIsisIfLevelTeMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4261412864))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfLevelTeMetric.setStatus('current')
vRtrIsisIfLevelNumAdjacencies = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIfLevelNumAdjacencies.setStatus('current')
vRtrIsisIfLevelISPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfLevelISPriority.setStatus('current')
vRtrIsisIfLevelHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfLevelHelloTimer.setStatus('current')
vRtrIsisIfLevelAdminMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisIfLevelAdminMetric.setStatus('current')
vRtrIsisIfLevelOperMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 3, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisIfLevelOperMetric.setStatus('current')
vRtrIsisISAdjTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1), )
if mibBuilder.loadTexts: vRtrIsisISAdjTable.setStatus('current')
vRtrIsisISAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1), )
isisISAdjEntry.registerAugmentions(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjEntry"))
vRtrIsisISAdjEntry.setIndexNames(*isisISAdjEntry.getIndexNames())
if mibBuilder.loadTexts: vRtrIsisISAdjEntry.setStatus('current')
vRtrIsisISAdjExpiresIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjExpiresIn.setStatus('current')
vRtrIsisISAdjCircLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level1L2", 3), ("unknown", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjCircLevel.setStatus('current')
vRtrIsisISAdjNeighborIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjNeighborIP.setStatus('current')
vRtrIsisISAdjRestartSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjRestartSupport.setStatus('current')
vRtrIsisISAdjRestartStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notHelping", 1), ("restarting", 2), ("restart-complete", 3), ("helping", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjRestartStatus.setStatus('current')
vRtrIsisISAdjRestartSupressed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjRestartSupressed.setStatus('current')
vRtrIsisISAdjNumRestarts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjNumRestarts.setStatus('current')
vRtrIsisISAdjLastRestartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjLastRestartTime.setStatus('current')
vRtrIsisISAdjNeighborIPv6Type = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjNeighborIPv6Type.setStatus('current')
vRtrIsisISAdjNeighborIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjNeighborIpv6.setStatus('current')
vRtrIsisISAdjMTIdMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 4, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisISAdjMTIdMask.setStatus('current')
vRtrIsisSpfLogTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 8), )
if mibBuilder.loadTexts: vRtrIsisSpfLogTable.setStatus('current')
vRtrIsisSpfLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 8, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfTimeStamp"))
if mibBuilder.loadTexts: vRtrIsisSpfLogEntry.setStatus('current')
vRtrIsisSpfTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 8, 1, 1), TimeStamp())
if mibBuilder.loadTexts: vRtrIsisSpfTimeStamp.setStatus('current')
vRtrIsisSpfRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 8, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisSpfRunTime.setStatus('current')
vRtrIsisSpfL1Nodes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 8, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisSpfL1Nodes.setStatus('current')
vRtrIsisSpfL2Nodes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 8, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisSpfL2Nodes.setStatus('current')
vRtrIsisSpfEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 8, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisSpfEventCount.setStatus('current')
vRtrIsisSpfLastTriggerLSPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 8, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisSpfLastTriggerLSPId.setStatus('current')
vRtrIsisSpfTriggerReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 8, 1, 7), Bits().clone(namedValues=NamedValues(("newAdjacency", 0), ("newLSP", 1), ("newArea", 2), ("reach", 3), ("ecmpChanged", 4), ("newMetric", 5), ("teChanged", 6), ("restart", 7), ("lspExpired", 8), ("lspDbChanged", 9), ("lspChanged", 10), ("newPreference", 11), ("newNLPID", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisSpfTriggerReason.setStatus('current')
vRtrIsisSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 9), )
if mibBuilder.loadTexts: vRtrIsisSummaryTable.setStatus('current')
vRtrIsisSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 9, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisSummPrefix"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisSummMask"))
if mibBuilder.loadTexts: vRtrIsisSummaryEntry.setStatus('current')
vRtrIsisSummPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 9, 1, 1), IpAddress())
if mibBuilder.loadTexts: vRtrIsisSummPrefix.setStatus('current')
vRtrIsisSummMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 9, 1, 2), IpAddress())
if mibBuilder.loadTexts: vRtrIsisSummMask.setStatus('current')
vRtrIsisSummRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisSummRowStatus.setStatus('current')
vRtrIsisSummLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level1L2", 3))).clone('level1L2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisSummLevel.setStatus('current')
vRtrIsisInetRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10), )
if mibBuilder.loadTexts: vRtrIsisInetRouteTable.setStatus('current')
vRtrIsisInetRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRouteDestType"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRouteDest"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRoutePrefixLength"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRouteNexthopIPType"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRouteNexthopIP"))
if mibBuilder.loadTexts: vRtrIsisInetRouteEntry.setStatus('current')
vRtrIsisInetRouteDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 1), InetAddressType())
if mibBuilder.loadTexts: vRtrIsisInetRouteDestType.setStatus('current')
vRtrIsisInetRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 2), InetAddress())
if mibBuilder.loadTexts: vRtrIsisInetRouteDest.setStatus('current')
vRtrIsisInetRoutePrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: vRtrIsisInetRoutePrefixLength.setStatus('current')
vRtrIsisInetRouteNexthopIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 4), InetAddressType())
if mibBuilder.loadTexts: vRtrIsisInetRouteNexthopIPType.setStatus('current')
vRtrIsisInetRouteNexthopIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 5), InetAddress())
if mibBuilder.loadTexts: vRtrIsisInetRouteNexthopIP.setStatus('current')
vRtrIsisInetRouteLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisInetRouteLevel.setStatus('current')
vRtrIsisInetRouteSpfRunNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisInetRouteSpfRunNumber.setStatus('current')
vRtrIsisInetRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisInetRouteMetric.setStatus('current')
vRtrIsisInetRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisInetRouteType.setStatus('current')
vRtrIsisInetRouteNHopSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 10, 1, 10), SystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRtrIsisInetRouteNHopSysID.setStatus('current')
vRtrIsisInetSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 11), )
if mibBuilder.loadTexts: vRtrIsisInetSummaryTable.setStatus('current')
vRtrIsisInetSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 11, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetSummPrefixType"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetSummPrefix"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetSummPrefixLength"))
if mibBuilder.loadTexts: vRtrIsisInetSummaryEntry.setStatus('current')
vRtrIsisInetSummPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 11, 1, 1), InetAddressType())
if mibBuilder.loadTexts: vRtrIsisInetSummPrefixType.setStatus('current')
vRtrIsisInetSummPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 11, 1, 2), InetAddress())
if mibBuilder.loadTexts: vRtrIsisInetSummPrefix.setStatus('current')
vRtrIsisInetSummPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 11, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: vRtrIsisInetSummPrefixLength.setStatus('current')
vRtrIsisInetSummRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisInetSummRowStatus.setStatus('current')
vRtrIsisInetSummLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level1L2", 3))).clone('level1L2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vRtrIsisInetSummLevel.setStatus('current')
vRtrIsisNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1), )
if mibBuilder.loadTexts: vRtrIsisNotificationTable.setStatus('current')
vRtrIsisNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"))
if mibBuilder.loadTexts: vRtrIsisNotificationEntry.setStatus('current')
vRtrIsisTrapLSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1, 1), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisTrapLSPID.setStatus('current')
vRtrIsisSystemLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("l1", 1), ("l2", 2), ("l1l2", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisSystemLevel.setStatus('current')
vRtrIsisPDUFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisPDUFragment.setStatus('current')
vRtrIsisFieldLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisFieldLen.setStatus('current')
vRtrIsisMaxAreaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisMaxAreaAddress.setStatus('current')
vRtrIsisProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisProtocolVersion.setStatus('current')
vRtrIsisLSPSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisLSPSize.setStatus('current')
vRtrIsisOriginatingBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisOriginatingBufferSize.setStatus('current')
vRtrIsisProtocolsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 5, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vRtrIsisProtocolsSupported.setStatus('current')
vRtrIsisDatabaseClearTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 6, 1), )
if mibBuilder.loadTexts: vRtrIsisDatabaseClearTable.setStatus('current')
vRtrIsisDatabaseClearEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 6, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ALCATEL-IND1-ISIS-MIB", "vRtrIsisSysID"))
if mibBuilder.loadTexts: vRtrIsisDatabaseClearEntry.setStatus('current')
vRtrIsisAdjDatabaseClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisAdjDatabaseClear.setStatus('current')
vRtrIsisLSPDatabaseClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 10, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRtrIsisLSPDatabaseClear.setStatus('current')
vRtrIsisDatabaseOverload = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 1)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ISIS-MIB", "isisSysL1State"), ("ISIS-MIB", "isisSysL2State"))
if mibBuilder.loadTexts: vRtrIsisDatabaseOverload.setStatus('current')
vRtrIsisManualAddressDrops = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 2)).setObjects(("ISIS-MIB", "isisManAreaAddrExistState"))
if mibBuilder.loadTexts: vRtrIsisManualAddressDrops.setStatus('current')
vRtrIsisCorruptedLSPDetected = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 3)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisTrapLSPID"))
if mibBuilder.loadTexts: vRtrIsisCorruptedLSPDetected.setStatus('current')
vRtrIsisMaxSeqExceedAttempt = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 4)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisTrapLSPID"))
if mibBuilder.loadTexts: vRtrIsisMaxSeqExceedAttempt.setStatus('current')
vRtrIsisIDLenMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 5)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisFieldLen"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPDUFragment"))
if mibBuilder.loadTexts: vRtrIsisIDLenMismatch.setStatus('current')
vRtrIsisMaxAreaAddrsMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 6)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisMaxAreaAddress"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPDUFragment"))
if mibBuilder.loadTexts: vRtrIsisMaxAreaAddrsMismatch.setStatus('current')
vRtrIsisOwnLSPPurge = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 7)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisTrapLSPID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"))
if mibBuilder.loadTexts: vRtrIsisOwnLSPPurge.setStatus('current')
vRtrIsisSequenceNumberSkip = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 8)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisTrapLSPID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"))
if mibBuilder.loadTexts: vRtrIsisSequenceNumberSkip.setStatus('current')
vRtrIsisAutTypeFail = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 9)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPDUFragment"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"))
if mibBuilder.loadTexts: vRtrIsisAutTypeFail.setStatus('current')
vRtrIsisAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 10)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPDUFragment"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"))
if mibBuilder.loadTexts: vRtrIsisAuthFail.setStatus('current')
vRtrIsisVersionSkew = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 11)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisProtocolVersion"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPDUFragment"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"))
if mibBuilder.loadTexts: vRtrIsisVersionSkew.setStatus('current')
vRtrIsisAreaMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 12)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPSize"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPDUFragment"))
if mibBuilder.loadTexts: vRtrIsisAreaMismatch.setStatus('current')
vRtrIsisRejectedAdjacency = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 13)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"))
if mibBuilder.loadTexts: vRtrIsisRejectedAdjacency.setStatus('current')
vRtrIsisLSPTooLargeToPropagate = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 14)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPSize"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisTrapLSPID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"))
if mibBuilder.loadTexts: vRtrIsisLSPTooLargeToPropagate.setStatus('current')
vRtrIsisOrigLSPBufSizeMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 15)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOriginatingBufferSize"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisTrapLSPID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"))
if mibBuilder.loadTexts: vRtrIsisOrigLSPBufSizeMismatch.setStatus('current')
vRtrIsisProtoSuppMismatch = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 16)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisProtocolsSupported"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisTrapLSPID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"))
if mibBuilder.loadTexts: vRtrIsisProtoSuppMismatch.setStatus('current')
vRtrIsisAdjacencyChange = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 17)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisTrapLSPID"), ("ISIS-MIB", "isisISAdjState"))
if mibBuilder.loadTexts: vRtrIsisAdjacencyChange.setStatus('current')
vRtrIsisCircIdExhausted = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 18)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"))
if mibBuilder.loadTexts: vRtrIsisCircIdExhausted.setStatus('current')
vRtrIsisAdjRestartStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 11, 0, 19)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjRestartStatus"))
if mibBuilder.loadTexts: vRtrIsisAdjRestartStatusChange.setStatus('current')
vRtrIsisMIBConformances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 1))
vRtrIsisMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2))
vRtrIsisMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 1, 1)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisHostGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAdjGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisNotificationObjGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisMIBCompliance = vRtrIsisMIBCompliance.setStatus('obsolete')
vRtrIsisMIBR2r1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 1, 2)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisR2r1Group"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisHostGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAdjGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisNotificationObjGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisNotificationsGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSummaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisMIBR2r1Compliance = vRtrIsisMIBR2r1Compliance.setStatus('obsolete')
vRtrIsisMIBV3v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 1, 3)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisV3v0Group"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisHostGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAdjV3v0Group"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisNotificationObjGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisNotificationV3v0Group"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSummaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisMIBV3v0Compliance = vRtrIsisMIBV3v0Compliance.setStatus('obsolete')
vRtrIsisMIBV4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 1, 4)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisV4v0Group"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisHostGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteV4v0Group"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAdjV3v0Group"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisNotificationObjGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisNotificationV3v0Group"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSummaryV4v0Group"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisScalarObjsGroup"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisDBClearObjsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisMIBV4v0Compliance = vRtrIsisMIBV4v0Compliance.setStatus('current')
vRtrIsisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 1)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLastEnabledTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthCheck"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspLifetime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadTimeout"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOperState"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisShortCuts"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfHoldTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLastSpfRun"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisGracefulRestart"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadOnBoot"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadOnBootTimeout"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfInitialWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfSecondWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspMaxWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspInitialWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspSecondWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelWideMetricsOnly"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelOverloadStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelOverloadTimeLeft"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelNumLSPs"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfRuns"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRegenerations"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInitiatedPurges"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFRequests"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFDroppedRequests"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFPathsFound"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFPathsNotFound"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisMTEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisGroup = vRtrIsisGroup.setStatus('obsolete')
vRtrIsisHostGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 2)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSysID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisHostname"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisHostGroup = vRtrIsisHostGroup.setStatus('current')
vRtrIsisRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 3)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteDest"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteMask"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteNexthopIP"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteSpfVersion"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteMetric"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteNHopSysID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisRouteGroup = vRtrIsisRouteGroup.setStatus('obsolete')
vRtrIsisPathGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 4)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPathID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPathIfIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPathNHopSysID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPathMetric"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPathSNPA"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisPathGroup = vRtrIsisPathGroup.setStatus('current')
vRtrIsisLSPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 5)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPId"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPSeq"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPChecksum"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPLifetimeRemain"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPVersion"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPPktType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPPktVersion"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPMaxArea"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPSysIdLen"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPAttributes"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPUsedLen"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPAllocLen"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPBuff"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPZeroRLT"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisLSPGroup = vRtrIsisLSPGroup.setStatus('current')
vRtrIsisIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 6)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfRowStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLastChangeTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfAdminState"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfOperState"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfCsnpInterval"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfHelloAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfHelloAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLspPacingInterval"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfCircIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfRetransmitInterval"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfTypeDefault"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelLastChangeTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelHelloAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelHelloAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelPassive"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelTeMetric"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelNumAdjacencies"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelISPriority"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelHelloTimer"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelAdminMetric"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelOperMetric"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisIfGroup = vRtrIsisIfGroup.setStatus('obsolete')
vRtrIsisAdjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 7)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjExpiresIn"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjCircLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjNeighborIP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisAdjGroup = vRtrIsisAdjGroup.setStatus('obsolete')
vRtrIsisNotificationObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 8)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisTrapLSPID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSystemLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPDUFragment"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisFieldLen"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisMaxAreaAddress"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisProtocolVersion"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPSize"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOriginatingBufferSize"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisProtocolsSupported"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisNotificationObjGroup = vRtrIsisNotificationObjGroup.setStatus('current')
vRtrIsisNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 9)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisDatabaseOverload"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisManualAddressDrops"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCorruptedLSPDetected"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisMaxSeqExceedAttempt"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIDLenMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisMaxAreaAddrsMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOwnLSPPurge"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSequenceNumberSkip"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAutTypeFail"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthFail"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisVersionSkew"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAreaMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRejectedAdjacency"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPTooLargeToPropagate"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOrigLSPBufSizeMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisProtoSuppMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAdjacencyChange"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCircIdExhausted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisNotificationsGroup = vRtrIsisNotificationsGroup.setStatus('obsolete')
vRtrIsisSpfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 10)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfRunTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfL1Nodes"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfL2Nodes"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfEventCount"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfLastTriggerLSPId"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfTriggerReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisSpfGroup = vRtrIsisSpfGroup.setStatus('current')
vRtrIsisSummaryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 11)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSummRowStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSummLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisSummaryGroup = vRtrIsisSummaryGroup.setStatus('obsolete')
vRtrIsisR2r1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 12)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLastEnabledTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthCheck"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspLifetime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadTimeout"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOperState"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisShortCuts"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfHoldTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLastSpfRun"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisGracefulRestart"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadOnBoot"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadOnBootTimeout"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfInitialWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfSecondWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspMaxWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspInitialWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspSecondWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisHelloAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelWideMetricsOnly"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelOverloadStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelOverloadTimeLeft"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelNumLSPs"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelCsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelHelloAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelPsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfRuns"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRegenerations"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInitiatedPurges"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFRequests"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFDroppedRequests"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFPathsFound"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFPathsNotFound"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisR2r1Group = vRtrIsisR2r1Group.setStatus('obsolete')
vRtrIsisV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 13)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLastEnabledTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthCheck"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspLifetime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadTimeout"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOperState"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisShortCuts"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfHoldTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLastSpfRun"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisGracefulRestart"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadOnBoot"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadOnBootTimeout"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfInitialWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfSecondWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspMaxWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspInitialWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspSecondWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisHelloAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisGRRestartDuration"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisGRHelperMode"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelWideMetricsOnly"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelOverloadStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelOverloadTimeLeft"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelNumLSPs"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelCsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelHelloAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelPsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfRuns"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRegenerations"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInitiatedPurges"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFRequests"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFDroppedRequests"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFPathsFound"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFPathsNotFound"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisV3v0Group = vRtrIsisV3v0Group.setStatus('obsolete')
vRtrIsisAdjV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 14)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjExpiresIn"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjCircLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjNeighborIP"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjRestartSupport"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjRestartStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjRestartSupressed"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjNumRestarts"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjLastRestartTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisAdjV3v0Group = vRtrIsisAdjV3v0Group.setStatus('obsolete')
vRtrIsisNotificationV3v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 15)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisDatabaseOverload"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisManualAddressDrops"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCorruptedLSPDetected"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisMaxSeqExceedAttempt"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIDLenMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisMaxAreaAddrsMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOwnLSPPurge"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSequenceNumberSkip"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAutTypeFail"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthFail"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisVersionSkew"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAreaMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRejectedAdjacency"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPTooLargeToPropagate"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOrigLSPBufSizeMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisProtoSuppMismatch"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAdjacencyChange"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCircIdExhausted"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAdjRestartStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisNotificationV3v0Group = vRtrIsisNotificationV3v0Group.setStatus('current')
vRtrIsisV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 16)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLastEnabledTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAuthCheck"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspLifetime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadTimeout"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOperState"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisShortCuts"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfHoldTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLastSpfRun"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisGracefulRestart"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadOnBoot"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisOverloadOnBootTimeout"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfInitialWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfSecondWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspMaxWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspInitialWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLspSecondWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisHelloAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisGRRestartDuration"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisGRHelperMode"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisStrictAdjacencyCheck"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfMaxWait"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelWideMetricsOnly"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelOverloadStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelOverloadTimeLeft"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelNumLSPs"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelCsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelHelloAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLevelPsnpAuthentication"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfRuns"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRegenerations"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInitiatedPurges"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIIHRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSNPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisPSNPRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownRecd"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownDrop"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownSent"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisUnknownRetrans"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFRequests"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFDroppedRequests"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFPathsFound"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisCSPFPathsNotFound"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisActivateIPv4"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisActivateIPv6"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisV4v0Group = vRtrIsisV4v0Group.setStatus('current')
vRtrIsisRouteV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 17)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteDest"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteMask"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteNexthopIP"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteSpfVersion"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteMetric"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisRouteNHopSysID"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRouteLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRouteSpfRunNumber"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRouteMetric"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRouteType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetRouteNHopSysID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisRouteV4v0Group = vRtrIsisRouteV4v0Group.setStatus('current')
vRtrIsisSummaryV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 18)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSummRowStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSummLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetSummRowStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisInetSummLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisSummaryV4v0Group = vRtrIsisSummaryV4v0Group.setStatus('current')
vRtrIsisAdjV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 19)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjExpiresIn"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjCircLevel"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjNeighborIP"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjRestartSupport"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjRestartStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjRestartSupressed"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjNumRestarts"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjLastRestartTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjNeighborIPv6Type"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjNeighborIpv6"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjMTIdMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisAdjV4v0Group = vRtrIsisAdjV4v0Group.setStatus('current')
vRtrIsisIfV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 20)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfRowStatus"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLastChangeTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfAdminState"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfOperState"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfCsnpInterval"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfHelloAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfHelloAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLspPacingInterval"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfCircIndex"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfRetransmitInterval"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfTypeDefault"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelLastChangeTime"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelHelloAuthKey"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelHelloAuthType"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelPassive"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelTeMetric"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelNumAdjacencies"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelISPriority"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelHelloTimer"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelAdminMetric"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfLevelOperMetric"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisIfAddressFamily"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisIfV4v0Group = vRtrIsisIfV4v0Group.setStatus('current')
vRtrIsisScalarObjsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 21)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisStatisticsClear"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPClear"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisISAdjClear"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisSpfClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisScalarObjsGroup = vRtrIsisScalarObjsGroup.setStatus('current')
vRtrIsisDBClearObjsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 14, 1, 12, 2, 22)).setObjects(("ALCATEL-IND1-ISIS-MIB", "vRtrIsisAdjDatabaseClear"), ("ALCATEL-IND1-ISIS-MIB", "vRtrIsisLSPDatabaseClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vRtrIsisDBClearObjsGroup = vRtrIsisDBClearObjsGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-ISIS-MIB", vRtrIsisIfAddressFamily=vRtrIsisIfAddressFamily, vRtrIsisNotificationsGroup=vRtrIsisNotificationsGroup, vRtrIsisLSPPktType=vRtrIsisLSPPktType, vRtrIsisSpfWait=vRtrIsisSpfWait, vRtrIsisLSPSeq=vRtrIsisLSPSeq, vRtrIsisAutTypeFail=vRtrIsisAutTypeFail, vRtrIsisLevelTable=vRtrIsisLevelTable, vRtrIsisTable=vRtrIsisTable, vRtrIsisStatsTable=vRtrIsisStatsTable, vRtrIsisRouteSpfVersion=vRtrIsisRouteSpfVersion, vRtrIsisIfLastChangeTime=vRtrIsisIfLastChangeTime, vRtrIsisIfLevelHelloAuthType=vRtrIsisIfLevelHelloAuthType, vRtrIsisR2r1Group=vRtrIsisR2r1Group, vRtrIsisSpfLogEntry=vRtrIsisSpfLogEntry, vRtrIsisSystemObjs=vRtrIsisSystemObjs, vRtrIsisSpfMaxWait=vRtrIsisSpfMaxWait, vRtrIsisInitiatedPurges=vRtrIsisInitiatedPurges, vRtrIsisISAdjEntry=vRtrIsisISAdjEntry, vRtrIsisSpfRunTime=vRtrIsisSpfRunTime, vRtrIsisPathIfIndex=vRtrIsisPathIfIndex, vRtrIsisLSPEntry=vRtrIsisLSPEntry, vRtrIsisLSPVersion=vRtrIsisLSPVersion, vRtrIsisIfLspPacingInterval=vRtrIsisIfLspPacingInterval, vRtrIsisObjs=vRtrIsisObjs, vRtrIsisOperState=vRtrIsisOperState, vRtrIsisSummPrefix=vRtrIsisSummPrefix, vRtrIsisSpfSecondWait=vRtrIsisSpfSecondWait, vRtrIsisGRRestartDuration=vRtrIsisGRRestartDuration, vRtrIsisLSPAttributes=vRtrIsisLSPAttributes, vRtrIsisSpfRuns=vRtrIsisSpfRuns, vRtrIsisInetRouteNHopSysID=vRtrIsisInetRouteNHopSysID, vRtrIsisNotificationObjGroup=vRtrIsisNotificationObjGroup, vRtrIsisLSPDrop=vRtrIsisLSPDrop, vRtrIsisLSPSysIdLen=vRtrIsisLSPSysIdLen, vRtrIsisManualAddressDrops=vRtrIsisManualAddressDrops, vRtrIsisLSPRetrans=vRtrIsisLSPRetrans, vRtrIsisCSNPRecd=vRtrIsisCSNPRecd, vRtrIsisPathSNPA=vRtrIsisPathSNPA, vRtrIsisISAdjRestartSupport=vRtrIsisISAdjRestartSupport, vRtrIsisISAdjTable=vRtrIsisISAdjTable, vRtrIsisSpfTriggerReason=vRtrIsisSpfTriggerReason, vRtrIsisSpfInitialWait=vRtrIsisSpfInitialWait, vRtrIsisLevelCsnpAuthentication=vRtrIsisLevelCsnpAuthentication, vRtrIsisIfLevelAdminMetric=vRtrIsisIfLevelAdminMetric, vRtrIsisInetSummaryTable=vRtrIsisInetSummaryTable, vRtrIsisProtocolsSupported=vRtrIsisProtocolsSupported, vRtrIsisCSNPDrop=vRtrIsisCSNPDrop, vRtrIsisMIBConformances=vRtrIsisMIBConformances, vRtrIsisLSPChecksum=vRtrIsisLSPChecksum, vRtrIsisIfTable=vRtrIsisIfTable, vRtrIsisIIHDrop=vRtrIsisIIHDrop, vRtrIsisSpfEventCount=vRtrIsisSpfEventCount, vRtrIsisAuthFail=vRtrIsisAuthFail, vRtrIsisLevelAuthType=vRtrIsisLevelAuthType, vRtrIsisEntry=vRtrIsisEntry, vRtrIsisDatabaseClearObjs=vRtrIsisDatabaseClearObjs, vRtrIsisIfCsnpInterval=vRtrIsisIfCsnpInterval, vRtrIsisAdjGroup=vRtrIsisAdjGroup, vRtrIsisCSPFPathsFound=vRtrIsisCSPFPathsFound, vRtrIsisCSPFDroppedRequests=vRtrIsisCSPFDroppedRequests, vRtrIsisShortCuts=vRtrIsisShortCuts, vRtrIsisLSPDatabaseClear=vRtrIsisLSPDatabaseClear, vRtrIsisIIHRecd=vRtrIsisIIHRecd, vRtrIsisIfLevelHelloTimer=vRtrIsisIfLevelHelloTimer, vRtrIsisIfLevelPassive=vRtrIsisIfLevelPassive, vRtrIsisRouteMetric=vRtrIsisRouteMetric, vRtrIsisIfRetransmitInterval=vRtrIsisIfRetransmitInterval, vRtrIsisPathTable=vRtrIsisPathTable, vRtrIsisMIBCompliance=vRtrIsisMIBCompliance, vRtrIsisV4v0Group=vRtrIsisV4v0Group, vRtrIsisISAdjExpiresIn=vRtrIsisISAdjExpiresIn, vRtrIsisVersionSkew=vRtrIsisVersionSkew, vRtrIsisAdjV4v0Group=vRtrIsisAdjV4v0Group, vRtrIsisRouteNexthopIP=vRtrIsisRouteNexthopIP, vRtrIsisAdjV3v0Group=vRtrIsisAdjV3v0Group, vRtrIsisAreaMismatch=vRtrIsisAreaMismatch, vRtrIsisInetSummaryEntry=vRtrIsisInetSummaryEntry, vRtrIsisUnknownSent=vRtrIsisUnknownSent, vRtrIsisUnknownDrop=vRtrIsisUnknownDrop, vRtrIsisLSPUsedLen=vRtrIsisLSPUsedLen, vRtrIsisInetRouteEntry=vRtrIsisInetRouteEntry, vRtrIsisProtoSuppMismatch=vRtrIsisProtoSuppMismatch, vRtrIsisAdjDatabaseClear=vRtrIsisAdjDatabaseClear, vRtrIsisRouteTable=vRtrIsisRouteTable, vRtrIsisPathMetric=vRtrIsisPathMetric, vRtrIsisSpfClear=vRtrIsisSpfClear, vRtrIsisLspSecondWait=vRtrIsisLspSecondWait, vRtrIsisLSPZeroRLT=vRtrIsisLSPZeroRLT, vRtrIsisLspMaxWait=vRtrIsisLspMaxWait, vRtrIsisNotificationObjs=vRtrIsisNotificationObjs, vRtrIsisPSNPDrop=vRtrIsisPSNPDrop, PYSNMP_MODULE_ID=timetraIsisMIBModule, vRtrIsisCSPFRequests=vRtrIsisCSPFRequests, vRtrIsisRouteDest=vRtrIsisRouteDest, vRtrIsisInetRouteNexthopIP=vRtrIsisInetRouteNexthopIP, vRtrIsisOrigLSPBufSizeMismatch=vRtrIsisOrigLSPBufSizeMismatch, vRtrIsisMIBGroups=vRtrIsisMIBGroups, vRtrIsisLevelAuthKey=vRtrIsisLevelAuthKey, vRtrIsisMIBV3v0Compliance=vRtrIsisMIBV3v0Compliance, vRtrIsisMaxAreaAddrsMismatch=vRtrIsisMaxAreaAddrsMismatch, vRtrIsisLSPTable=vRtrIsisLSPTable, vRtrIsisPSNPRetrans=vRtrIsisPSNPRetrans, vRtrIsisLevelEntry=vRtrIsisLevelEntry, vRtrIsisIfHelloAuthType=vRtrIsisIfHelloAuthType, vRtrIsisIfLevelHelloAuthKey=vRtrIsisIfLevelHelloAuthKey, vRtrIsisISAdjNumRestarts=vRtrIsisISAdjNumRestarts, vRtrIsisNotificationV3v0Group=vRtrIsisNotificationV3v0Group, vRtrIsisHostname=vRtrIsisHostname, vRtrIsisRouteNHopSysID=vRtrIsisRouteNHopSysID, TmnxOperState=TmnxOperState, vRtrIsisSpfLogTable=vRtrIsisSpfLogTable, vRtrIsisISAdjRestartSupressed=vRtrIsisISAdjRestartSupressed, vRtrIsisLSPGroup=vRtrIsisLSPGroup, vRtrIsisMIBConformance=vRtrIsisMIBConformance, vRtrIsisRouteType=vRtrIsisRouteType, vRtrIsisIfRowStatus=vRtrIsisIfRowStatus, vRtrIsisMaxAreaAddress=vRtrIsisMaxAreaAddress, vRtrIsisHelloAuthentication=vRtrIsisHelloAuthentication, vRtrIsisNotifications=vRtrIsisNotifications, vRtrIsisPathID=vRtrIsisPathID, vRtrIsisAdjacencyChange=vRtrIsisAdjacencyChange, vRtrIsisLSPRegenerations=vRtrIsisLSPRegenerations, vRtrIsisLspInitialWait=vRtrIsisLspInitialWait, vRtrIsisRouteV4v0Group=vRtrIsisRouteV4v0Group, vRtrIsisHostnameEntry=vRtrIsisHostnameEntry, vRtrIsisSequenceNumberSkip=vRtrIsisSequenceNumberSkip, vRtrIsisActivateIPv6=vRtrIsisActivateIPv6, vRtrIsisIfLevel=vRtrIsisIfLevel, vRtrIsisScalarObjs=vRtrIsisScalarObjs, vRtrIsisInetRouteDestType=vRtrIsisInetRouteDestType, vRtrIsisCSNPRetrans=vRtrIsisCSNPRetrans, vRtrIsisOwnLSPPurge=vRtrIsisOwnLSPPurge, vRtrIsisMIBR2r1Compliance=vRtrIsisMIBR2r1Compliance, vRtrIsisSummaryEntry=vRtrIsisSummaryEntry, vRtrIsisV3v0Group=vRtrIsisV3v0Group, vRtrIsisRouteMask=vRtrIsisRouteMask, vRtrIsisLastSpfRun=vRtrIsisLastSpfRun, vRtrIsisGracefulRestart=vRtrIsisGracefulRestart, vRtrIsisIIHRetrans=vRtrIsisIIHRetrans, vRtrIsisIfLevelNumAdjacencies=vRtrIsisIfLevelNumAdjacencies, vRtrIsisISAdjNeighborIpv6=vRtrIsisISAdjNeighborIpv6, vRtrIsisInetSummPrefixType=vRtrIsisInetSummPrefixType, vRtrIsisIfIndex=vRtrIsisIfIndex, vRtrIsisIfLevelEntry=vRtrIsisIfLevelEntry, vRtrIsisSummLevel=vRtrIsisSummLevel, vRtrIsisLSPClear=vRtrIsisLSPClear, vRtrIsisInetRouteDest=vRtrIsisInetRouteDest, vRtrIsisOverloadOnBootTimeout=vRtrIsisOverloadOnBootTimeout, vRtrIsisLevelNumLSPs=vRtrIsisLevelNumLSPs, vRtrIsisAuthKey=vRtrIsisAuthKey, vRtrIsisPSNPRecd=vRtrIsisPSNPRecd, vRtrIsisHostnameTable=vRtrIsisHostnameTable, vRtrIsisInetRouteTable=vRtrIsisInetRouteTable, vRtrIsisIfLevelOperMetric=vRtrIsisIfLevelOperMetric, vRtrIsisInetSummPrefixLength=vRtrIsisInetSummPrefixLength, vRtrIsisPDUFragment=vRtrIsisPDUFragment, vRtrIsisLSPSize=vRtrIsisLSPSize, vRtrIsisIfLevelTable=vRtrIsisIfLevelTable, vRtrIsisOriginatingBufferSize=vRtrIsisOriginatingBufferSize, vRtrIsisMIBV4v0Compliance=vRtrIsisMIBV4v0Compliance, vRtrIsisDatabaseOverload=vRtrIsisDatabaseOverload, vRtrIsisISAdjMTIdMask=vRtrIsisISAdjMTIdMask, vRtrIsisRouteEntry=vRtrIsisRouteEntry, vRtrIsisMTEnabled=vRtrIsisMTEnabled, vRtrIsisIfLevelTeMetric=vRtrIsisIfLevelTeMetric, vRtrIsisLSPRecd=vRtrIsisLSPRecd, vRtrIsisStrictAdjacencyCheck=vRtrIsisStrictAdjacencyCheck, vRtrIsisLSPLifetimeRemain=vRtrIsisLSPLifetimeRemain, vRtrIsisIIHSent=vRtrIsisIIHSent, vRtrIsisInetRoutePrefixLength=vRtrIsisInetRoutePrefixLength, vRtrIsisLSPId=vRtrIsisLSPId, vRtrIsisCorruptedLSPDetected=vRtrIsisCorruptedLSPDetected, vRtrIsisAdjRestartStatusChange=vRtrIsisAdjRestartStatusChange, vRtrIsisIfV4v0Group=vRtrIsisIfV4v0Group, vRtrIsisPathNHopSysID=vRtrIsisPathNHopSysID, vRtrIsisOverloadTimeout=vRtrIsisOverloadTimeout, vRtrIsisMaxSeqExceedAttempt=vRtrIsisMaxSeqExceedAttempt, vRtrIsisRouteGroup=vRtrIsisRouteGroup, vRtrIsisStatsEntry=vRtrIsisStatsEntry, vRtrIsisPathGroup=vRtrIsisPathGroup, vRtrIsisPsnpAuthentication=vRtrIsisPsnpAuthentication, vRtrIsisLevelHelloAuthentication=vRtrIsisLevelHelloAuthentication, vRtrIsisInetRouteNexthopIPType=vRtrIsisInetRouteNexthopIPType, vRtrIsisGroup=vRtrIsisGroup, vRtrIsisAuthType=vRtrIsisAuthType, vRtrIsisISAdjNeighborIPv6Type=vRtrIsisISAdjNeighborIPv6Type, vRtrIsisIfOperState=vRtrIsisIfOperState, vRtrIsisIfHelloAuthKey=vRtrIsisIfHelloAuthKey, vRtrIsisCSPFPathsNotFound=vRtrIsisCSPFPathsNotFound, vRtrIsisIfTypeDefault=vRtrIsisIfTypeDefault, vRtrIsisInetSummRowStatus=vRtrIsisInetSummRowStatus, vRtrIsisISAdjCircLevel=vRtrIsisISAdjCircLevel, vRtrIsisNotificationEntry=vRtrIsisNotificationEntry, vRtrIsisLspLifetime=vRtrIsisLspLifetime, vRtrIsisSummaryV4v0Group=vRtrIsisSummaryV4v0Group, vRtrIsisDatabaseClearEntry=vRtrIsisDatabaseClearEntry, vRtrIsisCircIdExhausted=vRtrIsisCircIdExhausted, vRtrIsisInetRouteSpfRunNumber=vRtrIsisInetRouteSpfRunNumber, vRtrIsisHostGroup=vRtrIsisHostGroup, vRtrIsisLSPSent=vRtrIsisLSPSent, vRtrIsisLSPMaxArea=vRtrIsisLSPMaxArea, vRtrIsisCSNPSent=vRtrIsisCSNPSent, vRtrIsisDatabaseClearTable=vRtrIsisDatabaseClearTable, vRtrIsisAdjObjs=vRtrIsisAdjObjs, vRtrIsisISAdjClear=vRtrIsisISAdjClear, vRtrIsisGRHelperMode=vRtrIsisGRHelperMode, vRtrIsisSpfTimeStamp=vRtrIsisSpfTimeStamp, vRtrIsisFieldLen=vRtrIsisFieldLen, vRtrIsisActivateIPv4=vRtrIsisActivateIPv4, vRtrIsisInetRouteLevel=vRtrIsisInetRouteLevel, vRtrIsisUnknownRecd=vRtrIsisUnknownRecd, vRtrIsisIfLevelLastChangeTime=vRtrIsisIfLevelLastChangeTime, vRtrIsisSpfLastTriggerLSPId=vRtrIsisSpfLastTriggerLSPId, vRtrIsisRouteLevel=vRtrIsisRouteLevel, vRtrIsisIfAdminState=vRtrIsisIfAdminState, vRtrIsisLSPAllocLen=vRtrIsisLSPAllocLen, vRtrIsisIfGroup=vRtrIsisIfGroup, timetraIsisMIBModule=timetraIsisMIBModule, vRtrIsisNotificationTable=vRtrIsisNotificationTable, TmnxAdminState=TmnxAdminState, vRtrIsisLastEnabledTime=vRtrIsisLastEnabledTime, vRtrIsisSummRowStatus=vRtrIsisSummRowStatus, vRtrIsisSysID=vRtrIsisSysID, vRtrIsisISAdjLastRestartTime=vRtrIsisISAdjLastRestartTime, vRtrIsisSummaryGroup=vRtrIsisSummaryGroup, vRtrIsisIDLenMismatch=vRtrIsisIDLenMismatch, vRtrIsisTrapLSPID=vRtrIsisTrapLSPID, vRtrIsisDBClearObjsGroup=vRtrIsisDBClearObjsGroup, vRtrIsisInetSummLevel=vRtrIsisInetSummLevel, vRtrIsisInetRouteMetric=vRtrIsisInetRouteMetric, vRtrIsisUnknownRetrans=vRtrIsisUnknownRetrans, vRtrIsisLevelOverloadStatus=vRtrIsisLevelOverloadStatus, vRtrIsisSpfGroup=vRtrIsisSpfGroup, vRtrIsisLSPBuff=vRtrIsisLSPBuff, vRtrIsisLevel=vRtrIsisLevel, vRtrIsisSpfL1Nodes=vRtrIsisSpfL1Nodes, vRtrIsisLSPTooLargeToPropagate=vRtrIsisLSPTooLargeToPropagate, vRtrIsisPSNPSent=vRtrIsisPSNPSent, vRtrIsisISAdjRestartStatus=vRtrIsisISAdjRestartStatus, vRtrIsisSystemLevel=vRtrIsisSystemLevel, vRtrIsisIfCircIndex=vRtrIsisIfCircIndex, vRtrIsisStatisticsClear=vRtrIsisStatisticsClear, vRtrIsisOverloadOnBoot=vRtrIsisOverloadOnBoot, vRtrIsisCsnpAuthentication=vRtrIsisCsnpAuthentication, vRtrIsisPathEntry=vRtrIsisPathEntry, vRtrIsisIfLevelISPriority=vRtrIsisIfLevelISPriority, vRtrIsisSummaryTable=vRtrIsisSummaryTable, vRtrIsisInetRouteType=vRtrIsisInetRouteType, vRtrIsisSpfHoldTime=vRtrIsisSpfHoldTime, vRtrIsisSpfL2Nodes=vRtrIsisSpfL2Nodes, vRtrIsisScalarObjsGroup=vRtrIsisScalarObjsGroup, vRtrIsisIfObjs=vRtrIsisIfObjs, vRtrIsisLevelOverloadTimeLeft=vRtrIsisLevelOverloadTimeLeft, vRtrIsisIfEntry=vRtrIsisIfEntry)
mibBuilder.exportSymbols("ALCATEL-IND1-ISIS-MIB", vRtrIsisLSPPktVersion=vRtrIsisLSPPktVersion, vRtrIsisRejectedAdjacency=vRtrIsisRejectedAdjacency, vRtrIsisAuthCheck=vRtrIsisAuthCheck, vRtrIsisInetSummPrefix=vRtrIsisInetSummPrefix, vRtrIsisSummMask=vRtrIsisSummMask, vRtrIsisProtocolVersion=vRtrIsisProtocolVersion, vRtrIsisLevelWideMetricsOnly=vRtrIsisLevelWideMetricsOnly, vRtrIsisISAdjNeighborIP=vRtrIsisISAdjNeighborIP, vRtrIsisLevelPsnpAuthentication=vRtrIsisLevelPsnpAuthentication)
