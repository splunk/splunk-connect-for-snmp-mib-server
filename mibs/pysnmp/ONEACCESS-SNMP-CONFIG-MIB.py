#
# PySNMP MIB module ONEACCESS-SNMP-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ONEACCESS-SNMP-CONFIG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:25:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
oacExpIMIpAcl, oacMIBModules, oacExpIMManagement = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacExpIMIpAcl", "oacMIBModules", "oacExpIMManagement")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, iso, TimeTicks, Unsigned32, Counter32, Integer32, Counter64, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "iso", "TimeTicks", "Unsigned32", "Counter32", "Integer32", "Counter64", "ObjectIdentity", "IpAddress")
PhysAddress, TruthValue, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "TruthValue", "TextualConvention", "DisplayString", "RowStatus")
oacSnmpConfigMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 1, 100, 2002))
oacSnmpConfigMIB.setRevisions(('2011-07-29 00:00', '2011-07-26 00:00', '2011-06-15 00:00', '2010-07-08 00:01',))
if mibBuilder.loadTexts: oacSnmpConfigMIB.setLastUpdated('201107290000Z')
if mibBuilder.loadTexts: oacSnmpConfigMIB.setOrganization(' OneAccess ')
oacSnmpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20))
oacSnmpConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1))
oacSnmpConfigConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 2))
oacSnmpSource = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSnmpSource.setStatus('current')
oacSnmpTrapSource = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSnmpTrapSource.setStatus('current')
oacSnmpMibIfDescrShort = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSnmpMibIfDescrShort.setStatus('current')
oacSnmpChassisId = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSnmpChassisId.setStatus('current')
oacSnmpMaxMsgSize = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 5), Integer32().clone(8192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSnmpMaxMsgSize.setStatus('current')
oacSnmpCommunityConfigTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 6), )
if mibBuilder.loadTexts: oacSnmpCommunityConfigTable.setStatus('current')
oacSnmpCommunityConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 6, 1), ).setIndexNames((0, "ONEACCESS-SNMP-CONFIG-MIB", "oacSnmpCommunityString"), (0, "ONEACCESS-SNMP-CONFIG-MIB", "oacSnmpCommunityAccessType"))
if mibBuilder.loadTexts: oacSnmpCommunityConfigEntry.setStatus('current')
oacSnmpCommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: oacSnmpCommunityString.setStatus('current')
oacSnmpCommunityAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set-read-community", 1), ("set-write-community", 2))))
if mibBuilder.loadTexts: oacSnmpCommunityAccessType.setStatus('current')
oacSnmpCommunityAclType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpCommunityAclType.setStatus('current')
oacSnmpCommunityAclName = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpCommunityAclName.setStatus('current')
oacSnmpCommunityV2GroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpCommunityV2GroupName.setStatus('current')
oacSnmpCommunityisEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 6, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpCommunityisEncrypted.setStatus('current')
oacSnmpCommunityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpCommunityRowStatus.setStatus('current')
oacSnmpEngineId = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSnmpEngineId.setStatus('current')
oacSnmpRemoteAgentIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 8), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSnmpRemoteAgentIpAddr.setStatus('current')
oacSnmpRemoteEngineIdConfigTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 9), )
if mibBuilder.loadTexts: oacSnmpRemoteEngineIdConfigTable.setStatus('current')
oacSnmpRemoteEngineIdConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 9, 1), ).setIndexNames((0, "ONEACCESS-SNMP-CONFIG-MIB", "oacSnmpRemoteEngineId"))
if mibBuilder.loadTexts: oacSnmpRemoteEngineIdConfigEntry.setStatus('current')
oacSnmpRemoteEngineId = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 9, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: oacSnmpRemoteEngineId.setStatus('current')
oacSnmpRemoteEngineIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 9, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpRemoteEngineIpAddr.setStatus('current')
oacSnmpRemoteEngineMaxMsgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(484, 8192)).clone(8192)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpRemoteEngineMaxMsgSize.setStatus('current')
oacSnmpRemoteEngineRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpRemoteEngineRowstatus.setStatus('current')
oacSnmpTrapConfigTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 10), )
if mibBuilder.loadTexts: oacSnmpTrapConfigTable.setStatus('current')
oacSnmpTrapConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 10, 1), ).setIndexNames((0, "ONEACCESS-SNMP-CONFIG-MIB", "oacSnmpTrapConfigType"))
if mibBuilder.loadTexts: oacSnmpTrapConfigEntry.setStatus('current')
oacSnmpTrapConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("standard", 1), ("acl", 2), ("bgp", 3), ("ipsec", 4), ("isakmp", 5), ("isdn", 6), ("nat", 7), ("pstn", 8), ("vrrp", 9))))
if mibBuilder.loadTexts: oacSnmpTrapConfigType.setStatus('current')
oacSnmpTrapConfigisEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 10, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpTrapConfigisEnabled.setStatus('current')
oacSnmpTrapConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 1, 10, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacSnmpTrapConfigRowStatus.setStatus('current')
oacSnmpConfigGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 2, 1))
oacSnmpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 2, 1, 1)).setObjects(("ONEACCESS-SNMP-CONFIG-MIB", "oacSnmpTrapConfigisEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacSnmpConfigGroup = oacSnmpConfigGroup.setStatus('current')
oacSnmpCompls = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 20, 2, 2))
mibBuilder.exportSymbols("ONEACCESS-SNMP-CONFIG-MIB", oacSnmpTrapConfigEntry=oacSnmpTrapConfigEntry, oacSnmpCommunityConfigTable=oacSnmpCommunityConfigTable, oacSnmpRemoteEngineIpAddr=oacSnmpRemoteEngineIpAddr, oacSnmpTrapConfigRowStatus=oacSnmpTrapConfigRowStatus, oacSnmpMaxMsgSize=oacSnmpMaxMsgSize, oacSnmpConfigConformance=oacSnmpConfigConformance, oacSnmpCommunityAccessType=oacSnmpCommunityAccessType, oacSnmpTrapConfigType=oacSnmpTrapConfigType, oacSnmpRemoteEngineId=oacSnmpRemoteEngineId, oacSnmpConfigGroup=oacSnmpConfigGroup, oacSnmpConfigObjects=oacSnmpConfigObjects, oacSnmpRemoteEngineRowstatus=oacSnmpRemoteEngineRowstatus, oacSnmpCommunityConfigEntry=oacSnmpCommunityConfigEntry, oacSnmpTrapConfigisEnabled=oacSnmpTrapConfigisEnabled, oacSnmpSource=oacSnmpSource, oacSnmpConfigMIB=oacSnmpConfigMIB, oacSnmpRemoteEngineMaxMsgSize=oacSnmpRemoteEngineMaxMsgSize, oacSnmpCommunityisEncrypted=oacSnmpCommunityisEncrypted, oacSnmpCommunityAclName=oacSnmpCommunityAclName, oacSnmpChassisId=oacSnmpChassisId, oacSnmpCommunityRowStatus=oacSnmpCommunityRowStatus, oacSnmpRemoteEngineIdConfigTable=oacSnmpRemoteEngineIdConfigTable, oacSnmpTrapSource=oacSnmpTrapSource, oacSnmpRemoteEngineIdConfigEntry=oacSnmpRemoteEngineIdConfigEntry, oacSnmpTrapConfigTable=oacSnmpTrapConfigTable, oacSnmpCommunityV2GroupName=oacSnmpCommunityV2GroupName, oacSnmpCommunityAclType=oacSnmpCommunityAclType, oacSnmpCommunityString=oacSnmpCommunityString, oacSnmpConfigGroups=oacSnmpConfigGroups, oacSnmpConfig=oacSnmpConfig, oacSnmpMibIfDescrShort=oacSnmpMibIfDescrShort, oacSnmpRemoteAgentIpAddr=oacSnmpRemoteAgentIpAddr, PYSNMP_MODULE_ID=oacSnmpConfigMIB, oacSnmpCompls=oacSnmpCompls, oacSnmpEngineId=oacSnmpEngineId)
