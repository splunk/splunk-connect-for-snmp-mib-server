#
# PySNMP MIB module Wellfleet-L2TP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-L2TP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, IpAddress, Counter32, ModuleIdentity, Counter64, NotificationType, MibIdentifier, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "IpAddress", "Counter32", "ModuleIdentity", "Counter64", "NotificationType", "MibIdentifier", "Gauge32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfL2TPGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfL2TPGroup")
wfTunnelAuthTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 1), )
if mibBuilder.loadTexts: wfTunnelAuthTable.setStatus('mandatory')
wfTunnelAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 1, 1), ).setIndexNames((0, "Wellfleet-L2TP-MIB", "wfTunnelAuthSlot"), (0, "Wellfleet-L2TP-MIB", "wfTunnelAuthInstance"))
if mibBuilder.loadTexts: wfTunnelAuthEntry.setStatus('mandatory')
wfTunnelAuthDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTunnelAuthDelete.setStatus('mandatory')
wfTunnelAuthDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTunnelAuthDisable.setStatus('mandatory')
wfTunnelAuthSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTunnelAuthSlot.setStatus('mandatory')
wfTunnelAuthInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTunnelAuthInstance.setStatus('mandatory')
wfTunnelAuthSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTunnelAuthSecret.setStatus('mandatory')
wfL2TPTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2), )
if mibBuilder.loadTexts: wfL2TPTable.setStatus('mandatory')
wfL2TPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1), ).setIndexNames((0, "Wellfleet-L2TP-MIB", "wfL2TPSlot"))
if mibBuilder.loadTexts: wfL2TPEntry.setStatus('mandatory')
wfL2TPDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPDelete.setStatus('mandatory')
wfL2TPDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPDisable.setStatus('mandatory')
wfL2TPLnsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPLnsAddr.setStatus('mandatory')
wfL2TPIPstate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPIPstate.setStatus('mandatory')
wfL2TPSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSlot.setStatus('mandatory')
wfL2TPReceiveWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 6), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPReceiveWindowSize.setStatus('mandatory')
wfL2TPRetransmitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 7), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPRetransmitTimer.setStatus('mandatory')
wfL2TPMaxRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 8), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPMaxRetransmit.setStatus('mandatory')
wfL2TPHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 9), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPHelloTimer.setStatus('mandatory')
wfL2TPAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 10), Integer32().clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPAckTimer.setStatus('mandatory')
wfL2TPAckLastNPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 11), Integer32().clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPAckLastNPkts.setStatus('mandatory')
wfL2TPLnsHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPLnsHostName.setStatus('mandatory')
wfL2TPTunnelInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPTunnelInfo.setStatus('mandatory')
wfL2TPSessionInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPSessionInfo.setStatus('mandatory')
wfL2TPDebugFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPDebugFlag.setStatus('mandatory')
wfL2TPMaxSession = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 16), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPMaxSession.setStatus('mandatory')
wfL2TPPortCfgMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPPortCfgMask.setStatus('mandatory')
wfL2TPIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPIpAddr.setStatus('mandatory')
wfL2TPIpCctNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPIpCctNum.setStatus('mandatory')
wfL2TPTunnelDataFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPTunnelDataFlowControl.setStatus('mandatory')
wfL2TPRemoveDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPRemoveDomainName.setStatus('mandatory')
wfL2TPDomainNameDelimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 22), DisplayString().clone('@')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPDomainNameDelimiter.setStatus('mandatory')
wfL2TPNsaOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("local", 2), ("radius", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPNsaOrigin.setStatus('mandatory')
wfL2TPNsaPrimaryDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 24), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPNsaPrimaryDNS.setStatus('mandatory')
wfL2TPNsaSecondaryDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 25), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPNsaSecondaryDNS.setStatus('mandatory')
wfL2TPNsaPrimaryNBNS = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 26), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPNsaPrimaryNBNS.setStatus('mandatory')
wfL2TPNsaSecondaryNBNS = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 2, 1, 27), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPNsaSecondaryNBNS.setStatus('mandatory')
wfTunnelCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 3), )
if mibBuilder.loadTexts: wfTunnelCircuitTable.setStatus('mandatory')
wfTunnelCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 3, 1), ).setIndexNames((0, "Wellfleet-L2TP-MIB", "wfTunnelCircuitNum"))
if mibBuilder.loadTexts: wfTunnelCircuitEntry.setStatus('mandatory')
wfTunnelCircuitDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTunnelCircuitDelete.setStatus('mandatory')
wfTunnelCircuitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTunnelCircuitNum.setStatus('mandatory')
wfTunnelCircuitSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTunnelCircuitSlot.setStatus('mandatory')
wfL2TPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4), )
if mibBuilder.loadTexts: wfL2TPStatsTable.setStatus('mandatory')
wfL2TPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1), ).setIndexNames((0, "Wellfleet-L2TP-MIB", "wfL2TPStatsSlot"))
if mibBuilder.loadTexts: wfL2TPStatsEntry.setStatus('mandatory')
wfL2TPStatsCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfL2TPStatsCreate.setStatus('mandatory')
wfL2TPStatsSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsSlot.setStatus('mandatory')
wfL2TPStatsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsIpAddress.setStatus('mandatory')
wfL2TPStatsValidSccrq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsValidSccrq.setStatus('mandatory')
wfL2TPStatsValidScccn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsValidScccn.setStatus('mandatory')
wfL2TPStatsValidIcrq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsValidIcrq.setStatus('mandatory')
wfL2TPStatsValidIccn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsValidIccn.setStatus('mandatory')
wfL2TPStatsInvalidSccrq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsInvalidSccrq.setStatus('mandatory')
wfL2TPStatsInvalidScccn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsInvalidScccn.setStatus('mandatory')
wfL2TPStatsInvalidIcrq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsInvalidIcrq.setStatus('mandatory')
wfL2TPStatsInvalidIccn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsInvalidIccn.setStatus('mandatory')
wfL2TPStatsSuccessTunnelAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsSuccessTunnelAuth.setStatus('mandatory')
wfL2TPStatsSuccessSessionAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsSuccessSessionAuth.setStatus('mandatory')
wfL2TPStatsFailTunnelAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsFailTunnelAuth.setStatus('mandatory')
wfL2TPStatsFailSessionAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsFailSessionAuth.setStatus('mandatory')
wfL2TPStatsActiveTunnelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsActiveTunnelCount.setStatus('mandatory')
wfL2TPStatsActiveSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsActiveSessionCount.setStatus('mandatory')
wfL2TPStatsDropInCtrlPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsDropInCtrlPktCount.setStatus('mandatory')
wfL2TPStatsDropInPayloadPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsDropInPayloadPktCount.setStatus('mandatory')
wfL2TPStatsHelloPktTxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsHelloPktTxCount.setStatus('mandatory')
wfL2TPStatsHelloPktRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsHelloPktRxCount.setStatus('mandatory')
wfL2TPStatsCdnPktTxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsCdnPktTxCount.setStatus('mandatory')
wfL2TPStatsCdnPktRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsCdnPktRxCount.setStatus('mandatory')
wfL2TPStatsStopCCNPktTxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsStopCCNPktTxCount.setStatus('mandatory')
wfL2TPStatsStopCCNPktRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 4, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPStatsStopCCNPktRxCount.setStatus('mandatory')
wfL2TPTunnelInfoTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5), )
if mibBuilder.loadTexts: wfL2TPTunnelInfoTable.setStatus('mandatory')
wfL2TPTunnelInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1), ).setIndexNames((0, "Wellfleet-L2TP-MIB", "wfL2TPTunnelInfoSlot"), (0, "Wellfleet-L2TP-MIB", "wfL2TPTunnelInfoLnsTunnelId"))
if mibBuilder.loadTexts: wfL2TPTunnelInfoEntry.setStatus('mandatory')
wfL2TPTunnelInfoSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoSlot.setStatus('mandatory')
wfL2TPTunnelInfoLnsTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoLnsTunnelId.setStatus('mandatory')
wfL2TPTunnelInfoLacTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoLacTunnelId.setStatus('mandatory')
wfL2TPTunnelInfoLnsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoLnsAddress.setStatus('mandatory')
wfL2TPTunnelInfoLacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoLacAddress.setStatus('mandatory')
wfL2TPTunnelInfoFramingCap = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoFramingCap.setStatus('mandatory')
wfL2TPTunnelInfoBearerCap = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoBearerCap.setStatus('mandatory')
wfL2TPTunnelInfoLacVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoLacVendorName.setStatus('mandatory')
wfL2TPTunnelInfoLacHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoLacHostName.setStatus('mandatory')
wfL2TPTunnelInfoRecvWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoRecvWindowSize.setStatus('mandatory')
wfL2TPTunnelInfoActiveSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoActiveSessionCount.setStatus('mandatory')
wfL2TPTunnelInfoFirmwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPTunnelInfoFirmwareRevision.setStatus('mandatory')
wfL2TPSessionInfoTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6), )
if mibBuilder.loadTexts: wfL2TPSessionInfoTable.setStatus('mandatory')
wfL2TPSessionInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1), ).setIndexNames((0, "Wellfleet-L2TP-MIB", "wfL2TPSessionInfoSlot"), (0, "Wellfleet-L2TP-MIB", "wfL2TPSessionInfoLnsTunnelId"), (0, "Wellfleet-L2TP-MIB", "wfL2TPSessionInfoLnsCallId"))
if mibBuilder.loadTexts: wfL2TPSessionInfoEntry.setStatus('mandatory')
wfL2TPSessionInfoSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoSlot.setStatus('mandatory')
wfL2TPSessionInfoLnsTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoLnsTunnelId.setStatus('mandatory')
wfL2TPSessionInfoLacTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoLacTunnelId.setStatus('mandatory')
wfL2TPSessionInfoLnsCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoLnsCallId.setStatus('mandatory')
wfL2TPSessionInfoLacCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoLacCallId.setStatus('mandatory')
wfL2TPSessionInfoCallSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoCallSerialNum.setStatus('mandatory')
wfL2TPSessionInfoCallBearerType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoCallBearerType.setStatus('mandatory')
wfL2TPSessionInfoDialingNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoDialingNum.setStatus('mandatory')
wfL2TPSessionInfoDialedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoDialedNum.setStatus('mandatory')
wfL2TPSessionInfoSubAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoSubAddress.setStatus('mandatory')
wfL2TPSessionInfoConnectSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoConnectSpeed.setStatus('mandatory')
wfL2TPSessionInfoFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoFramingType.setStatus('mandatory')
wfL2TPSessionInfoLocalRecvPktWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoLocalRecvPktWindow.setStatus('mandatory')
wfL2TPSessionInfoRemoteRecvPktWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoRemoteRecvPktWindow.setStatus('mandatory')
wfL2TPSessionInfoPhysicalChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoPhysicalChannelId.setStatus('mandatory')
wfL2TPSessionInfoNextSendSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoNextSendSeq.setStatus('mandatory')
wfL2TPSessionInfoNextSendSeqAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoNextSendSeqAck.setStatus('mandatory')
wfL2TPSessionInfoNextRecvSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoNextRecvSeq.setStatus('mandatory')
wfL2TPSessionInfoNextRecvSeqAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoNextRecvSeqAck.setStatus('mandatory')
wfL2TPSessionInfoAssignedIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 20), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoAssignedIpAddress.setStatus('mandatory')
wfL2TPSessionInfoUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoUsername.setStatus('mandatory')
wfL2TPSessionInfoTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoTxPackets.setStatus('mandatory')
wfL2TPSessionInfoRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoRxPackets.setStatus('mandatory')
wfL2TPSessionInfoConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfL2TPSessionInfoConnectTime.setStatus('mandatory')
wfTunnelLineTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 7), )
if mibBuilder.loadTexts: wfTunnelLineTable.setStatus('mandatory')
wfTunnelLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 7, 1), ).setIndexNames((0, "Wellfleet-L2TP-MIB", "wfTunnelLineNum"))
if mibBuilder.loadTexts: wfTunnelLineEntry.setStatus('mandatory')
wfTunnelLineDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTunnelLineDelete.setStatus('mandatory')
wfTunnelLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTunnelLineNum.setStatus('mandatory')
wfTunnelLineSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 23, 7, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTunnelLineSlot.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-L2TP-MIB", wfL2TPSessionInfoEntry=wfL2TPSessionInfoEntry, wfL2TPStatsDropInPayloadPktCount=wfL2TPStatsDropInPayloadPktCount, wfL2TPStatsStopCCNPktTxCount=wfL2TPStatsStopCCNPktTxCount, wfL2TPSessionInfoRemoteRecvPktWindow=wfL2TPSessionInfoRemoteRecvPktWindow, wfL2TPSessionInfoNextRecvSeqAck=wfL2TPSessionInfoNextRecvSeqAck, wfL2TPSessionInfo=wfL2TPSessionInfo, wfL2TPSessionInfoTable=wfL2TPSessionInfoTable, wfL2TPTunnelInfo=wfL2TPTunnelInfo, wfL2TPStatsValidIcrq=wfL2TPStatsValidIcrq, wfL2TPTunnelDataFlowControl=wfL2TPTunnelDataFlowControl, wfTunnelCircuitDelete=wfTunnelCircuitDelete, wfL2TPStatsCdnPktTxCount=wfL2TPStatsCdnPktTxCount, wfTunnelLineTable=wfTunnelLineTable, wfL2TPTunnelInfoRecvWindowSize=wfL2TPTunnelInfoRecvWindowSize, wfL2TPSessionInfoDialedNum=wfL2TPSessionInfoDialedNum, wfL2TPTunnelInfoLnsAddress=wfL2TPTunnelInfoLnsAddress, wfL2TPStatsStopCCNPktRxCount=wfL2TPStatsStopCCNPktRxCount, wfTunnelLineNum=wfTunnelLineNum, wfL2TPTunnelInfoLacHostName=wfL2TPTunnelInfoLacHostName, wfL2TPTunnelInfoBearerCap=wfL2TPTunnelInfoBearerCap, wfL2TPTunnelInfoEntry=wfL2TPTunnelInfoEntry, wfL2TPStatsInvalidIccn=wfL2TPStatsInvalidIccn, wfTunnelAuthInstance=wfTunnelAuthInstance, wfL2TPStatsValidScccn=wfL2TPStatsValidScccn, wfL2TPSessionInfoConnectSpeed=wfL2TPSessionInfoConnectSpeed, wfL2TPStatsActiveTunnelCount=wfL2TPStatsActiveTunnelCount, wfL2TPPortCfgMask=wfL2TPPortCfgMask, wfL2TPStatsCreate=wfL2TPStatsCreate, wfL2TPMaxSession=wfL2TPMaxSession, wfL2TPStatsTable=wfL2TPStatsTable, wfTunnelLineEntry=wfTunnelLineEntry, wfL2TPSessionInfoTxPackets=wfL2TPSessionInfoTxPackets, wfL2TPRetransmitTimer=wfL2TPRetransmitTimer, wfL2TPSessionInfoLnsTunnelId=wfL2TPSessionInfoLnsTunnelId, wfL2TPStatsActiveSessionCount=wfL2TPStatsActiveSessionCount, wfL2TPSessionInfoSlot=wfL2TPSessionInfoSlot, wfTunnelLineSlot=wfTunnelLineSlot, wfL2TPDomainNameDelimiter=wfL2TPDomainNameDelimiter, wfL2TPStatsHelloPktTxCount=wfL2TPStatsHelloPktTxCount, wfL2TPMaxRetransmit=wfL2TPMaxRetransmit, wfTunnelCircuitEntry=wfTunnelCircuitEntry, wfTunnelAuthEntry=wfTunnelAuthEntry, wfTunnelAuthSlot=wfTunnelAuthSlot, wfL2TPSessionInfoCallSerialNum=wfL2TPSessionInfoCallSerialNum, wfL2TPDelete=wfL2TPDelete, wfL2TPSlot=wfL2TPSlot, wfTunnelAuthTable=wfTunnelAuthTable, wfTunnelCircuitSlot=wfTunnelCircuitSlot, wfL2TPSessionInfoLocalRecvPktWindow=wfL2TPSessionInfoLocalRecvPktWindow, wfL2TPTunnelInfoTable=wfL2TPTunnelInfoTable, wfL2TPSessionInfoAssignedIpAddress=wfL2TPSessionInfoAssignedIpAddress, wfL2TPSessionInfoRxPackets=wfL2TPSessionInfoRxPackets, wfL2TPDebugFlag=wfL2TPDebugFlag, wfL2TPIpAddr=wfL2TPIpAddr, wfL2TPSessionInfoLacTunnelId=wfL2TPSessionInfoLacTunnelId, wfL2TPTunnelInfoLacVendorName=wfL2TPTunnelInfoLacVendorName, wfL2TPRemoveDomainName=wfL2TPRemoveDomainName, wfL2TPNsaPrimaryNBNS=wfL2TPNsaPrimaryNBNS, wfTunnelLineDelete=wfTunnelLineDelete, wfL2TPTunnelInfoFramingCap=wfL2TPTunnelInfoFramingCap, wfL2TPTunnelInfoActiveSessionCount=wfL2TPTunnelInfoActiveSessionCount, wfL2TPNsaPrimaryDNS=wfL2TPNsaPrimaryDNS, wfL2TPNsaSecondaryNBNS=wfL2TPNsaSecondaryNBNS, wfL2TPSessionInfoNextSendSeq=wfL2TPSessionInfoNextSendSeq, wfL2TPSessionInfoSubAddress=wfL2TPSessionInfoSubAddress, wfL2TPStatsValidIccn=wfL2TPStatsValidIccn, wfTunnelAuthDisable=wfTunnelAuthDisable, wfL2TPStatsFailTunnelAuth=wfL2TPStatsFailTunnelAuth, wfL2TPTunnelInfoLnsTunnelId=wfL2TPTunnelInfoLnsTunnelId, wfL2TPNsaSecondaryDNS=wfL2TPNsaSecondaryDNS, wfL2TPNsaOrigin=wfL2TPNsaOrigin, wfL2TPDisable=wfL2TPDisable, wfL2TPStatsEntry=wfL2TPStatsEntry, wfL2TPLnsHostName=wfL2TPLnsHostName, wfL2TPLnsAddr=wfL2TPLnsAddr, wfTunnelCircuitTable=wfTunnelCircuitTable, wfL2TPStatsSuccessSessionAuth=wfL2TPStatsSuccessSessionAuth, wfL2TPStatsSlot=wfL2TPStatsSlot, wfTunnelCircuitNum=wfTunnelCircuitNum, wfL2TPSessionInfoLnsCallId=wfL2TPSessionInfoLnsCallId, wfL2TPSessionInfoPhysicalChannelId=wfL2TPSessionInfoPhysicalChannelId, wfL2TPTunnelInfoLacTunnelId=wfL2TPTunnelInfoLacTunnelId, wfL2TPSessionInfoFramingType=wfL2TPSessionInfoFramingType, wfL2TPStatsSuccessTunnelAuth=wfL2TPStatsSuccessTunnelAuth, wfL2TPAckTimer=wfL2TPAckTimer, wfL2TPTunnelInfoSlot=wfL2TPTunnelInfoSlot, wfL2TPEntry=wfL2TPEntry, wfL2TPTunnelInfoLacAddress=wfL2TPTunnelInfoLacAddress, wfL2TPStatsInvalidIcrq=wfL2TPStatsInvalidIcrq, wfL2TPAckLastNPkts=wfL2TPAckLastNPkts, wfL2TPStatsFailSessionAuth=wfL2TPStatsFailSessionAuth, wfL2TPSessionInfoUsername=wfL2TPSessionInfoUsername, wfL2TPIpCctNum=wfL2TPIpCctNum, wfL2TPHelloTimer=wfL2TPHelloTimer, wfL2TPSessionInfoLacCallId=wfL2TPSessionInfoLacCallId, wfL2TPSessionInfoNextSendSeqAck=wfL2TPSessionInfoNextSendSeqAck, wfL2TPIPstate=wfL2TPIPstate, wfL2TPSessionInfoDialingNum=wfL2TPSessionInfoDialingNum, wfL2TPSessionInfoConnectTime=wfL2TPSessionInfoConnectTime, wfL2TPTunnelInfoFirmwareRevision=wfL2TPTunnelInfoFirmwareRevision, wfL2TPTable=wfL2TPTable, wfL2TPStatsInvalidSccrq=wfL2TPStatsInvalidSccrq, wfL2TPStatsInvalidScccn=wfL2TPStatsInvalidScccn, wfL2TPStatsValidSccrq=wfL2TPStatsValidSccrq, wfTunnelAuthSecret=wfTunnelAuthSecret, wfL2TPStatsCdnPktRxCount=wfL2TPStatsCdnPktRxCount, wfL2TPStatsDropInCtrlPktCount=wfL2TPStatsDropInCtrlPktCount, wfL2TPSessionInfoNextRecvSeq=wfL2TPSessionInfoNextRecvSeq, wfL2TPStatsIpAddress=wfL2TPStatsIpAddress, wfL2TPSessionInfoCallBearerType=wfL2TPSessionInfoCallBearerType, wfTunnelAuthDelete=wfTunnelAuthDelete, wfL2TPReceiveWindowSize=wfL2TPReceiveWindowSize, wfL2TPStatsHelloPktRxCount=wfL2TPStatsHelloPktRxCount)
