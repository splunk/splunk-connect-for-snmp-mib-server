#
# PySNMP MIB module MRV-IR-HDAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MRV-IR-HDAM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:05:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
TrapSeverity, = mibBuilder.importSymbols("MRV-IR-SYSTEM-MIB", "TrapSeverity")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Integer32, IpAddress, Bits, Gauge32, ObjectIdentity, Counter32, TimeTicks, Unsigned32, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "IpAddress", "Bits", "Gauge32", "ObjectIdentity", "Counter32", "TimeTicks", "Unsigned32", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "ModuleIdentity", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
mrvBpd = MibIdentifier((1, 3, 6, 1, 4, 1, 33))
mrvLx = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100))
irHdamMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 33, 100, 4))
if mibBuilder.loadTexts: irHdamMib.setLastUpdated('200703220000Z')
if mibBuilder.loadTexts: irHdamMib.setOrganization('MRV Communications - BPD Division')
irHdam = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 4, 1))
irHdamAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 4, 2))
irHdamControl = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 4, 3))
irHdamAnalog = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 4, 4))
class IrHdamModuleType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("empty", 1), ("alarmModule", 2), ("controlModule", 3), ("analoglModule", 4))

class IrContactState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("open", 1), ("closed", 2))

class IrAnalogStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("disabled", 1), ("enabled", 2))

irHdamUnitTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 1), )
if mibBuilder.loadTexts: irHdamUnitTable.setStatus('current')
irHdamUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 1, 1), ).setIndexNames((0, "MRV-IR-HDAM-MIB", "irHdamUnitPortIndex"))
if mibBuilder.loadTexts: irHdamUnitEntry.setStatus('current')
irHdamUnitPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamUnitPortIndex.setStatus('current')
irHdamFwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamFwVersion.setStatus('current')
irHdamConnectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("disconnected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamConnectStatus.setStatus('current')
irHdamPowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("powerAC", 1), ("powerDC", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamPowerType.setStatus('current')
irHdamAction = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irHdamAction.setStatus('current')
irHdamModuleTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 2), )
if mibBuilder.loadTexts: irHdamModuleTable.setStatus('current')
irHdamModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 2, 1), ).setIndexNames((0, "MRV-IR-HDAM-MIB", "irHdamPortIndex"), (0, "MRV-IR-HDAM-MIB", "irHdamSlotIndex"))
if mibBuilder.loadTexts: irHdamModuleEntry.setStatus('current')
irHdamPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamPortIndex.setStatus('current')
irHdamSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamSlotIndex.setStatus('current')
irHdamModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 2, 1, 3), IrHdamModuleType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamModuleType.setStatus('current')
irHdamPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 3), )
if mibBuilder.loadTexts: irHdamPowerSupplyTable.setStatus('current')
irHdamPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 3, 1), ).setIndexNames((0, "MRV-IR-HDAM-MIB", "irHdamPortIndex"), (0, "MRV-IR-HDAM-MIB", "irHdamPowerIndex"))
if mibBuilder.loadTexts: irHdamPowerSupplyEntry.setStatus('current')
irHdamPowerPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamPowerPortIndex.setStatus('current')
irHdamPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamPowerIndex.setStatus('current')
irHdamPowerUnitPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamPowerUnitPresent.setStatus('current')
irHdamPowerInputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamPowerInputStatus.setStatus('current')
irHdamPowerOutputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamPowerOutputStatus.setStatus('current')
irHdamPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHdamPowerStatus.setStatus('current')
irAlarmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1), )
if mibBuilder.loadTexts: irAlarmConfigTable.setStatus('current')
irAlarmConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1), ).setIndexNames((0, "MRV-IR-HDAM-MIB", "irAlarmPortIndex"), (0, "MRV-IR-HDAM-MIB", "irAlarmSlotIndex"), (0, "MRV-IR-HDAM-MIB", "irAlarmPointIndex"))
if mibBuilder.loadTexts: irAlarmConfigEntry.setStatus('current')
irAlarmPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAlarmPortIndex.setStatus('current')
irAlarmSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAlarmSlotIndex.setStatus('current')
irAlarmPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAlarmPointIndex.setStatus('current')
irAlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAlarmName.setStatus('current')
irAlarmContactState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 5), IrContactState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAlarmContactState.setStatus('current')
irAlarmContactFaultState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 6), IrContactState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAlarmContactFaultState.setStatus('current')
irAlarmDebounceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAlarmDebounceInterval.setStatus('current')
irAlarmAudibleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAlarmAudibleStatus.setStatus('current')
irAlarmTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAlarmTrapStatus.setStatus('current')
irAlarmTrapSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 10), TrapSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAlarmTrapSeverity.setStatus('current')
irAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAlarmCount.setStatus('current')
irAlarmTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAlarmTimestamp.setStatus('current')
irAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 2, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAlarmDescription.setStatus('current')
irControlConfigTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 4, 3, 1), )
if mibBuilder.loadTexts: irControlConfigTable.setStatus('current')
irControlConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 4, 3, 1, 1), ).setIndexNames((0, "MRV-IR-HDAM-MIB", "irControlPortIndex"), (0, "MRV-IR-HDAM-MIB", "irControlSlotIndex"), (0, "MRV-IR-HDAM-MIB", "irControlPointIndex"))
if mibBuilder.loadTexts: irControlConfigEntry.setStatus('current')
irControlPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irControlPortIndex.setStatus('current')
irControlSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irControlSlotIndex.setStatus('current')
irControlPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irControlPointIndex.setStatus('current')
irControlName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irControlName.setStatus('current')
irControlState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 3, 1, 1, 5), IrContactState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irControlState.setStatus('current')
irControlActiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 3, 1, 1, 6), IrContactState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irControlActiveState.setStatus('current')
irControlDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irControlDescription.setStatus('current')
irAnalogConfigTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1), )
if mibBuilder.loadTexts: irAnalogConfigTable.setStatus('current')
irAnalogConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1), ).setIndexNames((0, "MRV-IR-HDAM-MIB", "irAnalogPortIndex"), (0, "MRV-IR-HDAM-MIB", "irAnalogSlotIndex"), (0, "MRV-IR-HDAM-MIB", "irAnalogPointIndex"))
if mibBuilder.loadTexts: irAnalogConfigEntry.setStatus('current')
irAnalogPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAnalogPortIndex.setStatus('current')
irAnalogSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAnalogSlotIndex.setStatus('current')
irAnalogPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAnalogPointIndex.setStatus('current')
irAnalogName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogName.setStatus('current')
irAnalogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogDescription.setStatus('current')
irAnalogStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 6), IrAnalogStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogStatus.setStatus('current')
irAnalogValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAnalogValue.setStatus('current')
irAnalogCalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAnalogCalValue.setStatus('current')
irAnalogCalMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogCalMinValue.setStatus('current')
irAnalogCalMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogCalMaxValue.setStatus('current')
irAnalogCalMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogCalMargin.setStatus('current')
irAnalogCalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogCalUnits.setStatus('current')
irAnalogThresholdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogThresholdHigh.setStatus('current')
irAnalogThresholdLow = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogThresholdLow.setStatus('current')
irAnalogThresholdSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 15), TrapSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogThresholdSeverity.setStatus('current')
irAnalogThresholdHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irAnalogThresholdHysteresis.setStatus('current')
irAnalogThresholdHighAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAnalogThresholdHighAlarmCount.setStatus('current')
irAnalogThresholdLowAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAnalogThresholdLowAlarmCount.setStatus('current')
irAnalogThresholdHighTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAnalogThresholdHighTimestamp.setStatus('current')
irAnalogThresholdLowTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 4, 4, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irAnalogThresholdLowTimestamp.setStatus('current')
mibBuilder.exportSymbols("MRV-IR-HDAM-MIB", irAnalogCalUnits=irAnalogCalUnits, irAlarmCount=irAlarmCount, IrContactState=IrContactState, irHdamPowerStatus=irHdamPowerStatus, irAnalogConfigEntry=irAnalogConfigEntry, irHdamPortIndex=irHdamPortIndex, irHdamPowerPortIndex=irHdamPowerPortIndex, irAnalogValue=irAnalogValue, irAlarmConfigEntry=irAlarmConfigEntry, irAlarmName=irAlarmName, irHdamModuleType=irHdamModuleType, irHdamPowerUnitPresent=irHdamPowerUnitPresent, irControlPortIndex=irControlPortIndex, irHdamPowerSupplyEntry=irHdamPowerSupplyEntry, irAlarmAudibleStatus=irAlarmAudibleStatus, irAnalogPointIndex=irAnalogPointIndex, irHdamAlarm=irHdamAlarm, irHdamUnitPortIndex=irHdamUnitPortIndex, irHdamSlotIndex=irHdamSlotIndex, irAnalogThresholdHighAlarmCount=irAnalogThresholdHighAlarmCount, irAnalogStatus=irAnalogStatus, irAnalogCalMaxValue=irAnalogCalMaxValue, irHdamMib=irHdamMib, irHdamPowerIndex=irHdamPowerIndex, irControlActiveState=irControlActiveState, irAnalogThresholdHighTimestamp=irAnalogThresholdHighTimestamp, irAlarmTimestamp=irAlarmTimestamp, irHdamUnitTable=irHdamUnitTable, irAlarmTrapStatus=irAlarmTrapStatus, irHdamAnalog=irHdamAnalog, irAlarmDescription=irAlarmDescription, irAlarmSlotIndex=irAlarmSlotIndex, mrvBpd=mrvBpd, irAlarmTrapSeverity=irAlarmTrapSeverity, irControlName=irControlName, irAlarmConfigTable=irAlarmConfigTable, irControlConfigTable=irControlConfigTable, IrAnalogStatus=IrAnalogStatus, irControlSlotIndex=irControlSlotIndex, irAnalogThresholdSeverity=irAnalogThresholdSeverity, irHdamModuleEntry=irHdamModuleEntry, irHdamFwVersion=irHdamFwVersion, irHdamControl=irHdamControl, irAnalogCalMinValue=irAnalogCalMinValue, irHdamPowerSupplyTable=irHdamPowerSupplyTable, irHdamConnectStatus=irHdamConnectStatus, irAnalogCalValue=irAnalogCalValue, IrHdamModuleType=IrHdamModuleType, irHdamPowerOutputStatus=irHdamPowerOutputStatus, irHdamModuleTable=irHdamModuleTable, irAnalogThresholdLowAlarmCount=irAnalogThresholdLowAlarmCount, irAlarmContactFaultState=irAlarmContactFaultState, mrvLx=mrvLx, irAnalogThresholdHigh=irAnalogThresholdHigh, irControlPointIndex=irControlPointIndex, irAnalogCalMargin=irAnalogCalMargin, irAnalogPortIndex=irAnalogPortIndex, irAnalogThresholdLow=irAnalogThresholdLow, irAnalogThresholdLowTimestamp=irAnalogThresholdLowTimestamp, irHdamAction=irHdamAction, irAnalogSlotIndex=irAnalogSlotIndex, irHdamUnitEntry=irHdamUnitEntry, irAlarmContactState=irAlarmContactState, irControlState=irControlState, irAlarmPointIndex=irAlarmPointIndex, irHdamPowerType=irHdamPowerType, irAnalogDescription=irAnalogDescription, irHdamPowerInputStatus=irHdamPowerInputStatus, irAnalogName=irAnalogName, irAlarmDebounceInterval=irAlarmDebounceInterval, irControlDescription=irControlDescription, PYSNMP_MODULE_ID=irHdamMib, irAnalogConfigTable=irAnalogConfigTable, irHdam=irHdam, irAnalogThresholdHysteresis=irAnalogThresholdHysteresis, irControlConfigEntry=irControlConfigEntry, irAlarmPortIndex=irAlarmPortIndex)
