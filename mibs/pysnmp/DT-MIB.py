#
# PySNMP MIB module DT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:39:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, Counter64, Integer32, TimeTicks, Counter32, IpAddress, MibIdentifier, iso, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "Integer32", "TimeTicks", "Counter32", "IpAddress", "MibIdentifier", "iso", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "ModuleIdentity")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
hpSwitchDt = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27))
hpSwitchDt.setRevisions(('2012-05-22 18:00', '2011-08-09 00:00', '2011-03-22 18:00', '2007-10-27 18:00',))
if mibBuilder.loadTexts: hpSwitchDt.setLastUpdated('201205221800Z')
if mibBuilder.loadTexts: hpSwitchDt.setOrganization('HP Networking')
hpSwitchISCPortIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchISCPortIndex.setStatus('current')
hpSwitchRemoteISCPortIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRemoteISCPortIndex.setStatus('current')
hpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7))
hpSwitchConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1))
hpSwitchDtLacpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3))
hpSwitchDtLacpStatusLocalTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1), )
if mibBuilder.loadTexts: hpSwitchDtLacpStatusLocalTable.setStatus('current')
hpSwitchDtLacpStatusLocalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1), ).setIndexNames((0, "DT-MIB", "hpSwitchDtLacpLocalIfIndex"))
if mibBuilder.loadTexts: hpSwitchDtLacpStatusLocalEntry.setStatus('current')
hpSwitchDtLacpLocalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpLocalIfIndex.setStatus('current')
hpSwitchDtLacpLocalIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpLocalIfName.setStatus('current')
hpSwitchDtLacpLocalIfLacpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpLocalIfLacpEnable.setStatus('current')
hpSwitchDtLacpLocalIfTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpLocalIfTrunkGroup.setStatus('current')
hpSwitchDtLacpLocalIfLacpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpLocalIfLacpPortStatus.setStatus('current')
hpSwitchDtLacpLocalIfLacpPartner = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpLocalIfLacpPartner.setStatus('current')
hpSwitchDtLacpLocalIfLacpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpLocalIfLacpStatus.setStatus('current')
hpSwitchDtLacpLocalIfLacpAdminKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpLocalIfLacpAdminKey.setStatus('current')
hpSwitchDtLacpLocalIfLacpOperKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpLocalIfLacpOperKey.setStatus('current')
hpSwitchDtLacpStatusPeerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 2), )
if mibBuilder.loadTexts: hpSwitchDtLacpStatusPeerTable.setStatus('current')
hpSwitchDtLacpStatusPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 2, 1), ).setIndexNames((0, "DT-MIB", "hpSwitchDtLacpPeerIfIndex"))
if mibBuilder.loadTexts: hpSwitchDtLacpStatusPeerEntry.setStatus('current')
hpSwitchDtLacpPeerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpPeerIfIndex.setStatus('current')
hpSwitchDtLacpPeerIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpPeerIfName.setStatus('current')
hpSwitchDtLacpPeerIfLacpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpPeerIfLacpEnable.setStatus('current')
hpSwitchDtLacpPeerIfTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpPeerIfTrunkGroup.setStatus('current')
hpSwitchDtLacpPeerIfLacpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpPeerIfLacpPortStatus.setStatus('current')
hpSwitchDtLacpPeerIfLacpPartner = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpPeerIfLacpPartner.setStatus('current')
hpSwitchDtLacpPeerIfLacpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtLacpPeerIfLacpStatus.setStatus('current')
hpSwitchDtConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 4))
hpSwitchDtPeerKeepAliveConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 4, 1))
hpSwitchDtPeerKeepAliveDestAddressType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 4, 1, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDtPeerKeepAliveDestAddressType.setStatus('current')
hpSwitchDtPeerKeepAliveDestAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 4, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDtPeerKeepAliveDestAddress.setStatus('current')
hpSwitchDtPeerKeepAliveVlanId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDtPeerKeepAliveVlanId.setStatus('current')
hpSwitchDtPeerKeepAliveDestUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 4, 1, 4), InetPortNumber().clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDtPeerKeepAliveDestUdpPort.setStatus('current')
hpSwitchDtPeerKeepAliveInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 4, 1, 5), Integer32().clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDtPeerKeepAliveInterval.setStatus('current')
hpSwitchDtPeerKeepAliveTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 4, 1, 6), Integer32().clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDtPeerKeepAliveTimeout.setStatus('current')
hpSwitchDtPeerKeepAliveHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 4, 1, 7), Integer32().clone(3)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDtPeerKeepAliveHoldTime.setStatus('current')
hpSwitchDtStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5))
hpSwitchDtIscProtocolStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 1))
hpSwitchDtPeerKeepAliveStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 2))
hpSwitchDtIscHelloPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtIscHelloPktsSent.setStatus('current')
hpSwitchDtIscHelloPktsRecv = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtIscHelloPktsRecv.setStatus('current')
hpSwitchDtIscMACLearnPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 1, 3), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtIscMACLearnPktsSent.setStatus('current')
hpSwitchDtIscMACLearnPktsRecv = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 1, 4), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtIscMACLearnPktsRecv.setStatus('current')
hpSwitchDtIscMACAgedPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 1, 5), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtIscMACAgedPktsSent.setStatus('current')
hpSwitchDtIscMACAgedPktsRecv = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 1, 6), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtIscMACAgedPktsRecv.setStatus('current')
hpSwitchDtPeerKeepAlivePktsSent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 2, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtPeerKeepAlivePktsSent.setStatus('current')
hpSwitchDtPeerKeepAlivePktsRecv = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 5, 2, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtPeerKeepAlivePktsRecv.setStatus('current')
hpSwitchDtSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 6))
hpSwitchDtSystemISCProtocolState = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inSync", 2), ("outOfSync", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtSystemISCProtocolState.setStatus('current')
hpSwitchDtSystemDtLacpSystemID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 6, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtSystemDtLacpSystemID.setStatus('current')
hpSwitchDtSystemAdminRolePriority = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDtSystemAdminRolePriority.setStatus('current')
hpSwitchDtSystemOperRolePriority = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtSystemOperRolePriority.setStatus('current')
hpSwitchDtSystemPeerOperRolePriority = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtSystemPeerOperRolePriority.setStatus('current')
hpSwitchDtSystemRole = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("primary", 2), ("secondary", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDtSystemRole.setStatus('current')
hpSwitchDtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256))
hpSwitchDtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 1))
hpSwitchDtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 2))
hpSwitchDtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 1, 1)).setObjects(("DT-MIB", "hpSwitchDtIscGroup"), ("DT-MIB", "hpSwitchDtLocalLacpGroup"), ("DT-MIB", "hpSwitchDtRemoteLacpGroup"), ("DT-MIB", "hpSwitchDtPeerKeepAliveGroup"), ("DT-MIB", "hpSwitchDtIscStatsGroup"), ("DT-MIB", "hpSwitchDtPeerKeepAliveStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDtCompliance = hpSwitchDtCompliance.setStatus('deprecated')
hpSwitchDtCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 1, 2)).setObjects(("DT-MIB", "hpSwitchDtIscGroup"), ("DT-MIB", "hpSwitchDtLocalLacpGroup"), ("DT-MIB", "hpSwitchDtRemoteLacpGroup"), ("DT-MIB", "hpSwitchDtPeerKeepAliveGroup"), ("DT-MIB", "hpSwitchDtSystemInfoGroup"), ("DT-MIB", "hpSwitchDtIscStatsGroup"), ("DT-MIB", "hpSwitchDtPeerKeepAliveStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDtCompliance1 = hpSwitchDtCompliance1.setStatus('current')
hpSwitchDtIscGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 2, 1)).setObjects(("DT-MIB", "hpSwitchISCPortIndex"), ("DT-MIB", "hpSwitchRemoteISCPortIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDtIscGroup = hpSwitchDtIscGroup.setStatus('current')
hpSwitchDtLocalLacpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 2, 2)).setObjects(("DT-MIB", "hpSwitchDtLacpLocalIfIndex"), ("DT-MIB", "hpSwitchDtLacpLocalIfName"), ("DT-MIB", "hpSwitchDtLacpLocalIfLacpEnable"), ("DT-MIB", "hpSwitchDtLacpLocalIfTrunkGroup"), ("DT-MIB", "hpSwitchDtLacpLocalIfLacpPortStatus"), ("DT-MIB", "hpSwitchDtLacpLocalIfLacpPartner"), ("DT-MIB", "hpSwitchDtLacpLocalIfLacpStatus"), ("DT-MIB", "hpSwitchDtLacpLocalIfLacpAdminKey"), ("DT-MIB", "hpSwitchDtLacpLocalIfLacpOperKey"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDtLocalLacpGroup = hpSwitchDtLocalLacpGroup.setStatus('current')
hpSwitchDtRemoteLacpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 2, 3)).setObjects(("DT-MIB", "hpSwitchDtLacpPeerIfIndex"), ("DT-MIB", "hpSwitchDtLacpPeerIfName"), ("DT-MIB", "hpSwitchDtLacpPeerIfLacpEnable"), ("DT-MIB", "hpSwitchDtLacpPeerIfTrunkGroup"), ("DT-MIB", "hpSwitchDtLacpPeerIfLacpPortStatus"), ("DT-MIB", "hpSwitchDtLacpPeerIfLacpPartner"), ("DT-MIB", "hpSwitchDtLacpPeerIfLacpStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDtRemoteLacpGroup = hpSwitchDtRemoteLacpGroup.setStatus('current')
hpSwitchDtPeerKeepAliveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 2, 4)).setObjects(("DT-MIB", "hpSwitchDtPeerKeepAliveDestAddressType"), ("DT-MIB", "hpSwitchDtPeerKeepAliveDestAddress"), ("DT-MIB", "hpSwitchDtPeerKeepAliveVlanId"), ("DT-MIB", "hpSwitchDtPeerKeepAliveDestUdpPort"), ("DT-MIB", "hpSwitchDtPeerKeepAliveInterval"), ("DT-MIB", "hpSwitchDtPeerKeepAliveTimeout"), ("DT-MIB", "hpSwitchDtPeerKeepAliveHoldTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDtPeerKeepAliveGroup = hpSwitchDtPeerKeepAliveGroup.setStatus('current')
hpSwitchDtIscStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 2, 5)).setObjects(("DT-MIB", "hpSwitchDtIscHelloPktsSent"), ("DT-MIB", "hpSwitchDtIscHelloPktsRecv"), ("DT-MIB", "hpSwitchDtIscMACLearnPktsSent"), ("DT-MIB", "hpSwitchDtIscMACLearnPktsRecv"), ("DT-MIB", "hpSwitchDtIscMACAgedPktsSent"), ("DT-MIB", "hpSwitchDtIscMACAgedPktsRecv"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDtIscStatsGroup = hpSwitchDtIscStatsGroup.setStatus('current')
hpSwitchDtPeerKeepAliveStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 2, 6)).setObjects(("DT-MIB", "hpSwitchDtPeerKeepAlivePktsSent"), ("DT-MIB", "hpSwitchDtPeerKeepAlivePktsRecv"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDtPeerKeepAliveStatsGroup = hpSwitchDtPeerKeepAliveStatsGroup.setStatus('current')
hpSwitchDtSystemInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 27, 256, 2, 7)).setObjects(("DT-MIB", "hpSwitchDtSystemISCProtocolState"), ("DT-MIB", "hpSwitchDtSystemDtLacpSystemID"), ("DT-MIB", "hpSwitchDtSystemAdminRolePriority"), ("DT-MIB", "hpSwitchDtSystemOperRolePriority"), ("DT-MIB", "hpSwitchDtSystemPeerOperRolePriority"), ("DT-MIB", "hpSwitchDtSystemRole"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDtSystemInfoGroup = hpSwitchDtSystemInfoGroup.setStatus('current')
mibBuilder.exportSymbols("DT-MIB", hpSwitchDtIscMACLearnPktsRecv=hpSwitchDtIscMACLearnPktsRecv, hpSwitchDtLacpStatusPeerTable=hpSwitchDtLacpStatusPeerTable, hpSwitchDtIscProtocolStats=hpSwitchDtIscProtocolStats, hpConfig=hpConfig, hpSwitchDtLacpLocalIfLacpEnable=hpSwitchDtLacpLocalIfLacpEnable, hpSwitchDtSystemPeerOperRolePriority=hpSwitchDtSystemPeerOperRolePriority, hpSwitchDtPeerKeepAliveVlanId=hpSwitchDtPeerKeepAliveVlanId, hpSwitchDtRemoteLacpGroup=hpSwitchDtRemoteLacpGroup, hpSwitchDtPeerKeepAliveConfig=hpSwitchDtPeerKeepAliveConfig, hpSwitchDtLacpStatusLocalTable=hpSwitchDtLacpStatusLocalTable, hpSwitchDtSystemISCProtocolState=hpSwitchDtSystemISCProtocolState, hpSwitchDtPeerKeepAliveInterval=hpSwitchDtPeerKeepAliveInterval, hpSwitchDtConfig=hpSwitchDtConfig, hpSwitchDtSystemRole=hpSwitchDtSystemRole, hpSwitchDtStats=hpSwitchDtStats, hpSwitchDtIscMACAgedPktsSent=hpSwitchDtIscMACAgedPktsSent, hpSwitchDtLacpLocalIfLacpPartner=hpSwitchDtLacpLocalIfLacpPartner, hpSwitchDtCompliances=hpSwitchDtCompliances, hpSwitchDtLacpPeerIfLacpEnable=hpSwitchDtLacpPeerIfLacpEnable, hpSwitchConfig=hpSwitchConfig, hpSwitchDtLacpStatusLocalEntry=hpSwitchDtLacpStatusLocalEntry, hpSwitchDtSystemInfo=hpSwitchDtSystemInfo, hpSwitchDtPeerKeepAliveStatsGroup=hpSwitchDtPeerKeepAliveStatsGroup, hpSwitchDtSystemOperRolePriority=hpSwitchDtSystemOperRolePriority, hpSwitchDtLacpPeerIfLacpPortStatus=hpSwitchDtLacpPeerIfLacpPortStatus, hpSwitchDtLacpPeerIfLacpStatus=hpSwitchDtLacpPeerIfLacpStatus, hpSwitchDtLacpPeerIfName=hpSwitchDtLacpPeerIfName, hpSwitchDtCompliance1=hpSwitchDtCompliance1, hpSwitchDtPeerKeepAlivePktsRecv=hpSwitchDtPeerKeepAlivePktsRecv, hpSwitchDtPeerKeepAliveDestAddressType=hpSwitchDtPeerKeepAliveDestAddressType, hpSwitchDtPeerKeepAliveTimeout=hpSwitchDtPeerKeepAliveTimeout, hpSwitchDtLacpPeerIfTrunkGroup=hpSwitchDtLacpPeerIfTrunkGroup, hpSwitchDtIscStatsGroup=hpSwitchDtIscStatsGroup, PYSNMP_MODULE_ID=hpSwitchDt, hpSwitchDtLacpLocalIfLacpStatus=hpSwitchDtLacpLocalIfLacpStatus, hpSwitchDtSystemInfoGroup=hpSwitchDtSystemInfoGroup, hpSwitchDtSystemDtLacpSystemID=hpSwitchDtSystemDtLacpSystemID, hpSwitchDtLacpLocalIfTrunkGroup=hpSwitchDtLacpLocalIfTrunkGroup, hpSwitchDtLocalLacpGroup=hpSwitchDtLocalLacpGroup, hpSwitchDtPeerKeepAliveDestUdpPort=hpSwitchDtPeerKeepAliveDestUdpPort, hpSwitchDtGroups=hpSwitchDtGroups, hpSwitchDtConformance=hpSwitchDtConformance, hpSwitchDtLacpLocalIfLacpPortStatus=hpSwitchDtLacpLocalIfLacpPortStatus, hpSwitchDtPeerKeepAliveHoldTime=hpSwitchDtPeerKeepAliveHoldTime, hpSwitchDtLacpLocalIfLacpAdminKey=hpSwitchDtLacpLocalIfLacpAdminKey, hpSwitchDtIscHelloPktsSent=hpSwitchDtIscHelloPktsSent, hpSwitchDtPeerKeepAliveStats=hpSwitchDtPeerKeepAliveStats, hpSwitchDtSystemAdminRolePriority=hpSwitchDtSystemAdminRolePriority, hpSwitchDtIscGroup=hpSwitchDtIscGroup, hpSwitchDtPeerKeepAliveDestAddress=hpSwitchDtPeerKeepAliveDestAddress, hpSwitchDtPeerKeepAliveGroup=hpSwitchDtPeerKeepAliveGroup, hpSwitchDtLacpStatusPeerEntry=hpSwitchDtLacpStatusPeerEntry, hpSwitchDtLacpPeerIfLacpPartner=hpSwitchDtLacpPeerIfLacpPartner, hpSwitchDtIscHelloPktsRecv=hpSwitchDtIscHelloPktsRecv, hpSwitchDtLacpLocalIfIndex=hpSwitchDtLacpLocalIfIndex, hpSwitchRemoteISCPortIndex=hpSwitchRemoteISCPortIndex, hpSwitchISCPortIndex=hpSwitchISCPortIndex, hpSwitchDtLacpLocalIfLacpOperKey=hpSwitchDtLacpLocalIfLacpOperKey, hpSwitchDtLacpPeerIfIndex=hpSwitchDtLacpPeerIfIndex, hpSwitchDtLacpStatus=hpSwitchDtLacpStatus, hpSwitchDtLacpLocalIfName=hpSwitchDtLacpLocalIfName, hpSwitchDtIscMACLearnPktsSent=hpSwitchDtIscMACLearnPktsSent, hpSwitchDtIscMACAgedPktsRecv=hpSwitchDtIscMACAgedPktsRecv, hpSwitchDtCompliance=hpSwitchDtCompliance, hpSwitchDtPeerKeepAlivePktsSent=hpSwitchDtPeerKeepAlivePktsSent, hpSwitchDt=hpSwitchDt)
