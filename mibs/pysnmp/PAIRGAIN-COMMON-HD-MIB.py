#
# PySNMP MIB module PAIRGAIN-COMMON-HD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PAIRGAIN-COMMON-HD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:16:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Bits, ModuleIdentity, IpAddress, ObjectIdentity, TimeTicks, MibIdentifier, Integer32, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Counter32, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "ModuleIdentity", "IpAddress", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Integer32", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Counter32", "Counter64", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pairgain = MibIdentifier((1, 3, 6, 1, 4, 1, 927))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1))
temporary = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 2))
registration = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3))
pgainOHdsl = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 1))
pgainAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 2))
pgainCampus = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 3))
pgainHigain = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 4))
pgainREX = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 5))
pgainETSI = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 6))
pgainHDSL = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 7))
pgainEPhone = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 8))
pgainDSLAM = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9))
pgainSysLog = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 10))
pgainTiger = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 11))
pgainADSL = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 12))
pgainSDSL = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 13))
pgainSDSLCell = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 14))
pgCampusChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 3, 1))
pgCampusCmu = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 3, 2))
pgCampusLocLu = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 3, 3))
pgCampusRemUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 3, 4))
pgCampusDoubler1 = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 3, 5))
pgCampusDoubler2 = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 3, 6))
pgHigainChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 4, 1))
pgETSIChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 6, 1))
pgEPhoneChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 8, 1))
pgEPhoneLocUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 8, 2))
pgEPhoneRemUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 8, 3))
pgDSLAMChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 1))
pgLantMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 2))
pgDSLAMAlarmSeverity = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 3))
pgDSLAMAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 4))
pgDSLAMFlashMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 5))
pgService = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 6))
pgIpoaRouteMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 7))
pgsessionMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 8))
pgATMTestMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 9))
pgIpAccessMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 10))
pgUpcMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 11))
pgApsMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 12))
pgIISPMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 13))
avSubtendMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 14))
pgAtmTcMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 16))
pgds1Mib = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 17))
pgBackupMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 19))
pgTigerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 11, 1))
pgreg_other = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 1)).setLabel("pgreg-other")
pgreg_campus = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 2)).setLabel("pgreg-campus")
pgreg_Cmu = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 2, 1)).setLabel("pgreg-Cmu")
pgreg_higain = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 3)).setLabel("pgreg-higain")
pgreg_Hmu = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 3, 1)).setLabel("pgreg-Hmu")
pgreg_ebridge = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 4)).setLabel("pgreg-ebridge")
pgreg_EBM = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 4, 1)).setLabel("pgreg-EBM")
pgreg_ETSI = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 5)).setLabel("pgreg-ETSI")
pgreg_Emu = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 5, 1)).setLabel("pgreg-Emu")
pgreg_EPhone = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 6)).setLabel("pgreg-EPhone")
pgreg_EPmu = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 6, 1)).setLabel("pgreg-EPmu")
pgreg_DSLAM = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 7)).setLabel("pgreg-DSLAM")
pgreg_Tiger = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 8)).setLabel("pgreg-Tiger")
pgAvidia8000 = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 7, 1))
pgAvidia3000 = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 7, 2))
pgAvidia2200 = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 3, 7, 3))
mibBuilder.exportSymbols("PAIRGAIN-COMMON-HD-MIB", pgreg_higain=pgreg_higain, pgLantMIB=pgLantMIB, pgreg_DSLAM=pgreg_DSLAM, pgAvidia2200=pgAvidia2200, pgCampusRemUnit=pgCampusRemUnit, pgDSLAMChassis=pgDSLAMChassis, pgainREX=pgainREX, pgEPhoneLocUnit=pgEPhoneLocUnit, pgAvidia8000=pgAvidia8000, pgAvidia3000=pgAvidia3000, pgainDSLAM=pgainDSLAM, pgainEPhone=pgainEPhone, pgTigerMIB=pgTigerMIB, pgreg_Tiger=pgreg_Tiger, pgainCampus=pgainCampus, pgEPhoneChassis=pgEPhoneChassis, pgIpoaRouteMIB=pgIpoaRouteMIB, pgreg_other=pgreg_other, pgCampusDoubler1=pgCampusDoubler1, pgService=pgService, registration=registration, pgATMTestMIB=pgATMTestMIB, pgAtmTcMIB=pgAtmTcMIB, pairgain=pairgain, pgUpcMIB=pgUpcMIB, pgDSLAMAlarmSeverity=pgDSLAMAlarmSeverity, pgainOHdsl=pgainOHdsl, pgainSysLog=pgainSysLog, products=products, pgainETSI=pgainETSI, avSubtendMIB=avSubtendMIB, pgBackupMIB=pgBackupMIB, pgApsMIB=pgApsMIB, pgCampusCmu=pgCampusCmu, pgCampusChassis=pgCampusChassis, pgCampusLocLu=pgCampusLocLu, pgainHDSL=pgainHDSL, pgreg_EBM=pgreg_EBM, pgainTiger=pgainTiger, temporary=temporary, pgCampusDoubler2=pgCampusDoubler2, pgEPhoneRemUnit=pgEPhoneRemUnit, pgsessionMIB=pgsessionMIB, pgIpAccessMIB=pgIpAccessMIB, pgreg_Hmu=pgreg_Hmu, pgainHigain=pgainHigain, pgainAgent=pgainAgent, pgDSLAMAlarm=pgDSLAMAlarm, pgainSDSLCell=pgainSDSLCell, pgds1Mib=pgds1Mib, pgainSDSL=pgainSDSL, pgreg_EPhone=pgreg_EPhone, pgETSIChassis=pgETSIChassis, pgIISPMIB=pgIISPMIB, pgreg_Cmu=pgreg_Cmu, pgreg_Emu=pgreg_Emu, pgreg_EPmu=pgreg_EPmu, pgainADSL=pgainADSL, pgreg_campus=pgreg_campus, pgHigainChassis=pgHigainChassis, pgDSLAMFlashMIB=pgDSLAMFlashMIB, pgreg_ETSI=pgreg_ETSI, pgreg_ebridge=pgreg_ebridge)
