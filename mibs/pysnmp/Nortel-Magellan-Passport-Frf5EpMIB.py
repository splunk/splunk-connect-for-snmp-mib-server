#
# PySNMP MIB module Nortel-Magellan-Passport-Frf5EpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-Frf5EpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
mcsMgr, mcsMgrIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-McsMgrMIB", "mcsMgr", "mcsMgrIndex")
StorageType, Integer32, Unsigned32, DisplayString, Counter32, RowStatus, RowPointer = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "StorageType", "Integer32", "Unsigned32", "DisplayString", "Counter32", "RowStatus", "RowPointer")
AsciiString, IntegerSequence, HexString, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "AsciiString", "IntegerSequence", "HexString", "NonReplicated")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, MibIdentifier, Integer32, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, Counter32, iso, Gauge32, Counter64, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibIdentifier", "Integer32", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "Counter32", "iso", "Gauge32", "Counter64", "ModuleIdentity", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frf5EpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 121))
mcsMgrFrf5EpG = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14))
mcsMgrFrf5EpGRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 1), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGRowStatusTable.setStatus('mandatory')
mcsMgrFrf5EpGRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGRowStatusEntry.setStatus('mandatory')
mcsMgrFrf5EpGRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGRowStatus.setStatus('mandatory')
mcsMgrFrf5EpGComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGComponentName.setStatus('mandatory')
mcsMgrFrf5EpGStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGStorageType.setStatus('mandatory')
mcsMgrFrf5EpGIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: mcsMgrFrf5EpGIndex.setStatus('mandatory')
mcsMgrFrf5EpGAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2))
mcsMgrFrf5EpGAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 1), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrRowStatusTable.setStatus('mandatory')
mcsMgrFrf5EpGAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGAddrIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrRowStatusEntry.setStatus('mandatory')
mcsMgrFrf5EpGAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrRowStatus.setStatus('mandatory')
mcsMgrFrf5EpGAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrComponentName.setStatus('mandatory')
mcsMgrFrf5EpGAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrStorageType.setStatus('mandatory')
mcsMgrFrf5EpGAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrIndex.setStatus('mandatory')
mcsMgrFrf5EpGAddrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 10), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrProvTable.setStatus('mandatory')
mcsMgrFrf5EpGAddrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGAddrIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrProvEntry.setStatus('mandatory')
mcsMgrFrf5EpGAddrRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 44))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrRemoteAddress.setStatus('mandatory')
mcsMgrFrf5EpGAddrCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 750)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrCommentText.setStatus('mandatory')
mcsMgrFrf5EpGAddrAddrPreTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 362), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrAddrPreTable.setStatus('mandatory')
mcsMgrFrf5EpGAddrAddrPreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 362, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGAddrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGAddrAddrPreValue"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrAddrPreEntry.setStatus('mandatory')
mcsMgrFrf5EpGAddrAddrPreValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 362, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrAddrPreValue.setStatus('mandatory')
mcsMgrFrf5EpGAddrAddrPreRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 2, 362, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGAddrAddrPreRowStatus.setStatus('mandatory')
mcsMgrFrf5EpGEp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3))
mcsMgrFrf5EpGEpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 1), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpRowStatusTable.setStatus('mandatory')
mcsMgrFrf5EpGEpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpRowStatusEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpRowStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpComponentName.setStatus('mandatory')
mcsMgrFrf5EpGEpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpStorageType.setStatus('mandatory')
mcsMgrFrf5EpGEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpIndex.setStatus('mandatory')
mcsMgrFrf5EpGEpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpStateTable.setStatus('mandatory')
mcsMgrFrf5EpGEpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpStateEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAdminState.setStatus('mandatory')
mcsMgrFrf5EpGEpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpOperationalState.setStatus('mandatory')
mcsMgrFrf5EpGEpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpUsageState.setStatus('mandatory')
mcsMgrFrf5EpGEpAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAvailabilityStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpProceduralStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpControlStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAlarmStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpStandbyStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpUnknownStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpOperTable.setStatus('mandatory')
mcsMgrFrf5EpGEpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpOperEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpLastVccClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLastVccClearCause.setStatus('mandatory')
mcsMgrFrf5EpGEpConnectionTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpConnectionTransferPriority.setStatus('mandatory')
mcsMgrFrf5EpGEpServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ubr", 0), ("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpServiceCategory.setStatus('mandatory')
mcsMgrFrf5EpGEpPeakCellRate01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpPeakCellRate01.setStatus('mandatory')
mcsMgrFrf5EpGEpSustainedCellRate0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpSustainedCellRate0.setStatus('mandatory')
mcsMgrFrf5EpGEpSustainedCellRate01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpSustainedCellRate01.setStatus('mandatory')
mcsMgrFrf5EpGEpMaximumBurstSize0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpMaximumBurstSize0.setStatus('mandatory')
mcsMgrFrf5EpGEpMaximumBurstSize01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpMaximumBurstSize01.setStatus('mandatory')
mcsMgrFrf5EpGEpAvgFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAvgFrameSize.setStatus('mandatory')
mcsMgrFrf5EpGEpTrafficParmConversionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6))).clone(namedValues=NamedValues(("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpTrafficParmConversionPolicy.setStatus('mandatory')
mcsMgrFrf5EpGEpType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("master", 0), ("slave", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpType.setStatus('mandatory')
mcsMgrFrf5EpGEpLastVccCauseDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 11, 1, 20), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLastVccCauseDiag.setStatus('mandatory')
mcsMgrFrf5EpGEpLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2))
mcsMgrFrf5EpGEpLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 1), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiRowStatusTable.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiRowStatusEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiRowStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiComponentName.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiStorageType.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiIndex.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 10), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiParmsTable.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiParmsEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("ansi", 2), ("ccitt", 3))).clone('ccitt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiProcedures.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiAsyncStatusReport = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiAsyncStatusReport.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiErrorEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiErrorEventThreshold.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiEventCount.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiCheckPointTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 255)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiCheckPointTimer.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("network", 0), ("user", 1), ("both", 2))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiSide.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiNniParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 11), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiNniParmsTable.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiNniParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiNniParmsEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiFullStatusPollingCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiFullStatusPollingCycles.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiLinkVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 255)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiLinkVerificationTimer.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 12), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiStateTable.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiStateEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiAdminState.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiOperationalState.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiUsageState.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiPsiTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 13), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiPsiTable.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiPsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiPsiEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("errorCondition", 0), ("normalCondition", 1))).clone('normalCondition')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiProtocolStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiStatsTable.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpLmiIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiStatsEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiKeepAliveStatusToInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiKeepAliveStatusToInterface.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiFullStatusToInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiFullStatusToInterface.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiKeepAliveStatusEnqFromInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiKeepAliveStatusEnqFromInterface.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiFullStatusEnqFromInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiFullStatusEnqFromInterface.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiNetworkSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiNetworkSideEventHistory.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiUserSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 6), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiUserSideEventHistory.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiProtocolErrors.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiUnexpectedIes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiUnexpectedIes.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiSequenceErrors.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiStatusSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiStatusSequenceErrors.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiUnexpectedReports = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiUnexpectedReports.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiPollingVerifTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiPollingVerifTimeouts.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiNoStatusReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiNoStatusReportCount.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiKeepAliveEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiKeepAliveEnqToIf.setStatus('mandatory')
mcsMgrFrf5EpGEpLmiFullStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 2, 14, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpLmiFullStatusEnqToIf.setStatus('mandatory')
mcsMgrFrf5EpGEpEpd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3))
mcsMgrFrf5EpGEpEpdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 1), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdRowStatusTable.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpEpdIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdRowStatusEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdRowStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdComponentName.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdStorageType.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdIndex.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdProvTable.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpEpdIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdProvEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdRemoteConnectionIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10, 1, 3), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdRemoteConnectionIdentifier.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdConnectionTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdConnectionTransferPriority.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdCommittedInformationRate.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdExcessInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdExcessInformationRate.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(16000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdCommittedBurstSize.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("master", 0), ("slave", 1))).clone('master')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdType.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdAccessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(1536000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdAccessRate.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdExcessBurstSize.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 11), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdCidDataTable.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpEpdIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdCidDataEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpEpdCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpEpdCustomerIdentifier.setStatus('mandatory')
mcsMgrFrf5EpGEpDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4))
mcsMgrFrf5EpGEpDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 1), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciRowStatusTable.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpDlciIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciRowStatusEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciRowStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciComponentName.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciStorageType.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(16, 1007), ValueRangeConstraint(1022, 1022), )))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciIndex.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 10), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciOperTable.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpDlciIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciOperEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciABitStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciABitStatusToIf.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciABitReasonToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("remoteLmiError", 3), ("localLinkDown", 4), ("remoteLinkDown", 5), ("pvcDown", 6))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciABitReasonToIf.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciABitStatusFromIf.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciABitReasonFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignalled", 1), ("localLmiError", 2), ("localLinkDown", 4), ("missingFromLmiReport", 7))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciABitReasonFromIf.setStatus('mandatory')
mcsMgrFrf5EpGEpDlciAccessConnectionComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 4, 10, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpDlciAccessConnectionComponent.setStatus('mandatory')
mcsMgrFrf5EpGEpAtmCon = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5))
mcsMgrFrf5EpGEpAtmConRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5, 1), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAtmConRowStatusTable.setStatus('mandatory')
mcsMgrFrf5EpGEpAtmConRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpAtmConIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAtmConRowStatusEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpAtmConRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAtmConRowStatus.setStatus('mandatory')
mcsMgrFrf5EpGEpAtmConComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAtmConComponentName.setStatus('mandatory')
mcsMgrFrf5EpGEpAtmConStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAtmConStorageType.setStatus('mandatory')
mcsMgrFrf5EpGEpAtmConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAtmConIndex.setStatus('mandatory')
mcsMgrFrf5EpGEpAtmConOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5, 10), )
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAtmConOperTable.setStatus('mandatory')
mcsMgrFrf5EpGEpAtmConOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpIndex"), (0, "Nortel-Magellan-Passport-Frf5EpMIB", "mcsMgrFrf5EpGEpAtmConIndex"))
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAtmConOperEntry.setStatus('mandatory')
mcsMgrFrf5EpGEpAtmConNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 14, 3, 5, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrFrf5EpGEpAtmConNextHop.setStatus('mandatory')
frf5EpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 121, 1))
frf5EpGroupBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 121, 1, 4))
frf5EpGroupBD02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 121, 1, 4, 3))
frf5EpGroupBD02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 121, 1, 4, 3, 2))
frf5EpCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 121, 3))
frf5EpCapabilitiesBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 121, 3, 4))
frf5EpCapabilitiesBD02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 121, 3, 4, 3))
frf5EpCapabilitiesBD02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 121, 3, 4, 3, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-Frf5EpMIB", mcsMgrFrf5EpGEpLmiKeepAliveStatusEnqFromInterface=mcsMgrFrf5EpGEpLmiKeepAliveStatusEnqFromInterface, mcsMgrFrf5EpGEpAtmConNextHop=mcsMgrFrf5EpGEpAtmConNextHop, mcsMgrFrf5EpGEpLmiLinkVerificationTimer=mcsMgrFrf5EpGEpLmiLinkVerificationTimer, mcsMgrFrf5EpGEpLmiSide=mcsMgrFrf5EpGEpLmiSide, mcsMgrFrf5EpGAddrAddrPreValue=mcsMgrFrf5EpGAddrAddrPreValue, mcsMgrFrf5EpGEpEpdExcessInformationRate=mcsMgrFrf5EpGEpEpdExcessInformationRate, mcsMgrFrf5EpGIndex=mcsMgrFrf5EpGIndex, mcsMgrFrf5EpGRowStatusEntry=mcsMgrFrf5EpGRowStatusEntry, mcsMgrFrf5EpGEpLmiProcedures=mcsMgrFrf5EpGEpLmiProcedures, mcsMgrFrf5EpGEpLmiKeepAliveEnqToIf=mcsMgrFrf5EpGEpLmiKeepAliveEnqToIf, mcsMgrFrf5EpGEpLmiStatsEntry=mcsMgrFrf5EpGEpLmiStatsEntry, mcsMgrFrf5EpGEpEpdAccessRate=mcsMgrFrf5EpGEpEpdAccessRate, mcsMgrFrf5EpGEpEpdProvTable=mcsMgrFrf5EpGEpEpdProvTable, mcsMgrFrf5EpGEpLmiIndex=mcsMgrFrf5EpGEpLmiIndex, mcsMgrFrf5EpGEpLmi=mcsMgrFrf5EpGEpLmi, mcsMgrFrf5EpGEpUsageState=mcsMgrFrf5EpGEpUsageState, mcsMgrFrf5EpGEpAtmConRowStatus=mcsMgrFrf5EpGEpAtmConRowStatus, mcsMgrFrf5EpGRowStatusTable=mcsMgrFrf5EpGRowStatusTable, mcsMgrFrf5EpGEpAlarmStatus=mcsMgrFrf5EpGEpAlarmStatus, mcsMgrFrf5EpGEpLmiComponentName=mcsMgrFrf5EpGEpLmiComponentName, mcsMgrFrf5EpGEpLastVccCauseDiag=mcsMgrFrf5EpGEpLastVccCauseDiag, mcsMgrFrf5EpGEpDlci=mcsMgrFrf5EpGEpDlci, mcsMgrFrf5EpGEpOperEntry=mcsMgrFrf5EpGEpOperEntry, mcsMgrFrf5EpGEpLmiUnexpectedIes=mcsMgrFrf5EpGEpLmiUnexpectedIes, mcsMgrFrf5EpGEpRowStatus=mcsMgrFrf5EpGEpRowStatus, mcsMgrFrf5EpGEpAtmConRowStatusTable=mcsMgrFrf5EpGEpAtmConRowStatusTable, mcsMgrFrf5EpGEpRowStatusEntry=mcsMgrFrf5EpGEpRowStatusEntry, mcsMgrFrf5EpGEpLmiAsyncStatusReport=mcsMgrFrf5EpGEpLmiAsyncStatusReport, mcsMgrFrf5EpGAddrComponentName=mcsMgrFrf5EpGAddrComponentName, mcsMgrFrf5EpGEpEpdRemoteConnectionIdentifier=mcsMgrFrf5EpGEpEpdRemoteConnectionIdentifier, mcsMgrFrf5EpGEpDlciABitReasonFromIf=mcsMgrFrf5EpGEpDlciABitReasonFromIf, mcsMgrFrf5EpGEpConnectionTransferPriority=mcsMgrFrf5EpGEpConnectionTransferPriority, frf5EpGroup=frf5EpGroup, mcsMgrFrf5EpGAddrCommentText=mcsMgrFrf5EpGAddrCommentText, mcsMgrFrf5EpGComponentName=mcsMgrFrf5EpGComponentName, mcsMgrFrf5EpGEpLmiRowStatus=mcsMgrFrf5EpGEpLmiRowStatus, mcsMgrFrf5EpGEpEpdCommittedBurstSize=mcsMgrFrf5EpGEpEpdCommittedBurstSize, mcsMgrFrf5EpGEpLmiProtocolStatus=mcsMgrFrf5EpGEpLmiProtocolStatus, mcsMgrFrf5EpGEpDlciRowStatusTable=mcsMgrFrf5EpGEpDlciRowStatusTable, mcsMgrFrf5EpGEpLmiUserSideEventHistory=mcsMgrFrf5EpGEpLmiUserSideEventHistory, mcsMgrFrf5EpGEpDlciComponentName=mcsMgrFrf5EpGEpDlciComponentName, mcsMgrFrf5EpGEpLmiStateTable=mcsMgrFrf5EpGEpLmiStateTable, mcsMgrFrf5EpGEpPeakCellRate01=mcsMgrFrf5EpGEpPeakCellRate01, mcsMgrFrf5EpGEpLmiRowStatusEntry=mcsMgrFrf5EpGEpLmiRowStatusEntry, mcsMgrFrf5EpGEpServiceCategory=mcsMgrFrf5EpGEpServiceCategory, mcsMgrFrf5EpGEpIndex=mcsMgrFrf5EpGEpIndex, mcsMgrFrf5EpGEpDlciOperTable=mcsMgrFrf5EpGEpDlciOperTable, mcsMgrFrf5EpGEpAtmConOperTable=mcsMgrFrf5EpGEpAtmConOperTable, mcsMgrFrf5EpGEpComponentName=mcsMgrFrf5EpGEpComponentName, mcsMgrFrf5EpGEpDlciABitReasonToIf=mcsMgrFrf5EpGEpDlciABitReasonToIf, mcsMgrFrf5EpGEpSustainedCellRate0=mcsMgrFrf5EpGEpSustainedCellRate0, mcsMgrFrf5EpGEpEpdConnectionTransferPriority=mcsMgrFrf5EpGEpEpdConnectionTransferPriority, mcsMgrFrf5EpGEpLmiNetworkSideEventHistory=mcsMgrFrf5EpGEpLmiNetworkSideEventHistory, mcsMgrFrf5EpGEpLmiEventCount=mcsMgrFrf5EpGEpLmiEventCount, mcsMgrFrf5EpGEpDlciAccessConnectionComponent=mcsMgrFrf5EpGEpDlciAccessConnectionComponent, mcsMgrFrf5EpGEpLmiNoStatusReportCount=mcsMgrFrf5EpGEpLmiNoStatusReportCount, mcsMgrFrf5EpGEpAvgFrameSize=mcsMgrFrf5EpGEpAvgFrameSize, frf5EpGroupBD02=frf5EpGroupBD02, mcsMgrFrf5EpGEpAtmConIndex=mcsMgrFrf5EpGEpAtmConIndex, mcsMgrFrf5EpGEpLmiOperationalState=mcsMgrFrf5EpGEpLmiOperationalState, mcsMgrFrf5EpGEpLmiParmsTable=mcsMgrFrf5EpGEpLmiParmsTable, mcsMgrFrf5EpG=mcsMgrFrf5EpG, mcsMgrFrf5EpGEpLmiFullStatusEnqFromInterface=mcsMgrFrf5EpGEpLmiFullStatusEnqFromInterface, mcsMgrFrf5EpGEpDlciOperEntry=mcsMgrFrf5EpGEpDlciOperEntry, mcsMgrFrf5EpGEpEpdCommittedInformationRate=mcsMgrFrf5EpGEpEpdCommittedInformationRate, mcsMgrFrf5EpGEpLmiPollingVerifTimeouts=mcsMgrFrf5EpGEpLmiPollingVerifTimeouts, mcsMgrFrf5EpGEpEpdComponentName=mcsMgrFrf5EpGEpEpdComponentName, frf5EpMIB=frf5EpMIB, mcsMgrFrf5EpGAddrIndex=mcsMgrFrf5EpGAddrIndex, mcsMgrFrf5EpGEpDlciABitStatusToIf=mcsMgrFrf5EpGEpDlciABitStatusToIf, mcsMgrFrf5EpGEpAtmConComponentName=mcsMgrFrf5EpGEpAtmConComponentName, frf5EpGroupBD02A=frf5EpGroupBD02A, mcsMgrFrf5EpGEpLmiKeepAliveStatusToInterface=mcsMgrFrf5EpGEpLmiKeepAliveStatusToInterface, mcsMgrFrf5EpGEpDlciIndex=mcsMgrFrf5EpGEpDlciIndex, mcsMgrFrf5EpGEpLmiAdminState=mcsMgrFrf5EpGEpLmiAdminState, frf5EpCapabilities=frf5EpCapabilities, mcsMgrFrf5EpGEpEpd=mcsMgrFrf5EpGEpEpd, mcsMgrFrf5EpGEpDlciStorageType=mcsMgrFrf5EpGEpDlciStorageType, mcsMgrFrf5EpGEpStateTable=mcsMgrFrf5EpGEpStateTable, frf5EpCapabilitiesBD02=frf5EpCapabilitiesBD02, mcsMgrFrf5EpGEpMaximumBurstSize01=mcsMgrFrf5EpGEpMaximumBurstSize01, mcsMgrFrf5EpGEpEpdRowStatusTable=mcsMgrFrf5EpGEpEpdRowStatusTable, mcsMgrFrf5EpGEpMaximumBurstSize0=mcsMgrFrf5EpGEpMaximumBurstSize0, mcsMgrFrf5EpGEp=mcsMgrFrf5EpGEp, mcsMgrFrf5EpGEpStateEntry=mcsMgrFrf5EpGEpStateEntry, mcsMgrFrf5EpGEpSustainedCellRate01=mcsMgrFrf5EpGEpSustainedCellRate01, mcsMgrFrf5EpGAddrStorageType=mcsMgrFrf5EpGAddrStorageType, frf5EpCapabilitiesBD=frf5EpCapabilitiesBD, mcsMgrFrf5EpGEpLmiErrorEventThreshold=mcsMgrFrf5EpGEpLmiErrorEventThreshold, mcsMgrFrf5EpGAddrRowStatus=mcsMgrFrf5EpGAddrRowStatus, mcsMgrFrf5EpGEpLmiRowStatusTable=mcsMgrFrf5EpGEpLmiRowStatusTable, mcsMgrFrf5EpGEpLmiNniParmsTable=mcsMgrFrf5EpGEpLmiNniParmsTable, mcsMgrFrf5EpGEpLastVccClearCause=mcsMgrFrf5EpGEpLastVccClearCause, mcsMgrFrf5EpGEpLmiPsiTable=mcsMgrFrf5EpGEpLmiPsiTable, mcsMgrFrf5EpGEpAtmConStorageType=mcsMgrFrf5EpGEpAtmConStorageType, mcsMgrFrf5EpGAddrRowStatusEntry=mcsMgrFrf5EpGAddrRowStatusEntry, mcsMgrFrf5EpGEpLmiStatsTable=mcsMgrFrf5EpGEpLmiStatsTable, mcsMgrFrf5EpGEpEpdIndex=mcsMgrFrf5EpGEpEpdIndex, mcsMgrFrf5EpGEpLmiNniParmsEntry=mcsMgrFrf5EpGEpLmiNniParmsEntry, mcsMgrFrf5EpGEpLmiSequenceErrors=mcsMgrFrf5EpGEpLmiSequenceErrors, mcsMgrFrf5EpGEpLmiFullStatusPollingCycles=mcsMgrFrf5EpGEpLmiFullStatusPollingCycles, mcsMgrFrf5EpGEpDlciABitStatusFromIf=mcsMgrFrf5EpGEpDlciABitStatusFromIf, frf5EpCapabilitiesBD02A=frf5EpCapabilitiesBD02A, mcsMgrFrf5EpGEpLmiPsiEntry=mcsMgrFrf5EpGEpLmiPsiEntry, mcsMgrFrf5EpGEpAtmConOperEntry=mcsMgrFrf5EpGEpAtmConOperEntry, mcsMgrFrf5EpGEpOperationalState=mcsMgrFrf5EpGEpOperationalState, mcsMgrFrf5EpGAddrRowStatusTable=mcsMgrFrf5EpGAddrRowStatusTable, mcsMgrFrf5EpGEpLmiFullStatusEnqToIf=mcsMgrFrf5EpGEpLmiFullStatusEnqToIf, mcsMgrFrf5EpGEpLmiFullStatusToInterface=mcsMgrFrf5EpGEpLmiFullStatusToInterface, mcsMgrFrf5EpGEpLmiUnexpectedReports=mcsMgrFrf5EpGEpLmiUnexpectedReports, mcsMgrFrf5EpGEpAtmConRowStatusEntry=mcsMgrFrf5EpGEpAtmConRowStatusEntry, mcsMgrFrf5EpGEpAvailabilityStatus=mcsMgrFrf5EpGEpAvailabilityStatus, mcsMgrFrf5EpGEpType=mcsMgrFrf5EpGEpType, mcsMgrFrf5EpGEpLmiProtocolErrors=mcsMgrFrf5EpGEpLmiProtocolErrors, mcsMgrFrf5EpGEpEpdCustomerIdentifier=mcsMgrFrf5EpGEpEpdCustomerIdentifier, mcsMgrFrf5EpGEpControlStatus=mcsMgrFrf5EpGEpControlStatus, mcsMgrFrf5EpGAddrAddrPreEntry=mcsMgrFrf5EpGAddrAddrPreEntry, mcsMgrFrf5EpGEpEpdCidDataTable=mcsMgrFrf5EpGEpEpdCidDataTable, mcsMgrFrf5EpGEpRowStatusTable=mcsMgrFrf5EpGEpRowStatusTable, mcsMgrFrf5EpGEpLmiUsageState=mcsMgrFrf5EpGEpLmiUsageState, mcsMgrFrf5EpGAddrAddrPreRowStatus=mcsMgrFrf5EpGAddrAddrPreRowStatus, mcsMgrFrf5EpGEpDlciRowStatusEntry=mcsMgrFrf5EpGEpDlciRowStatusEntry, mcsMgrFrf5EpGEpLmiCheckPointTimer=mcsMgrFrf5EpGEpLmiCheckPointTimer, mcsMgrFrf5EpGEpEpdRowStatus=mcsMgrFrf5EpGEpEpdRowStatus, frf5EpGroupBD=frf5EpGroupBD, mcsMgrFrf5EpGEpEpdRowStatusEntry=mcsMgrFrf5EpGEpEpdRowStatusEntry, mcsMgrFrf5EpGEpOperTable=mcsMgrFrf5EpGEpOperTable, mcsMgrFrf5EpGAddrProvTable=mcsMgrFrf5EpGAddrProvTable, mcsMgrFrf5EpGEpStandbyStatus=mcsMgrFrf5EpGEpStandbyStatus, mcsMgrFrf5EpGRowStatus=mcsMgrFrf5EpGRowStatus, mcsMgrFrf5EpGEpEpdProvEntry=mcsMgrFrf5EpGEpEpdProvEntry, mcsMgrFrf5EpGAddrRemoteAddress=mcsMgrFrf5EpGAddrRemoteAddress, mcsMgrFrf5EpGEpEpdCidDataEntry=mcsMgrFrf5EpGEpEpdCidDataEntry, mcsMgrFrf5EpGEpProceduralStatus=mcsMgrFrf5EpGEpProceduralStatus, mcsMgrFrf5EpGAddrAddrPreTable=mcsMgrFrf5EpGAddrAddrPreTable, mcsMgrFrf5EpGEpEpdStorageType=mcsMgrFrf5EpGEpEpdStorageType, mcsMgrFrf5EpGEpAtmCon=mcsMgrFrf5EpGEpAtmCon, mcsMgrFrf5EpGAddrProvEntry=mcsMgrFrf5EpGAddrProvEntry, mcsMgrFrf5EpGEpAdminState=mcsMgrFrf5EpGEpAdminState, mcsMgrFrf5EpGStorageType=mcsMgrFrf5EpGStorageType, mcsMgrFrf5EpGEpLmiParmsEntry=mcsMgrFrf5EpGEpLmiParmsEntry, mcsMgrFrf5EpGEpDlciRowStatus=mcsMgrFrf5EpGEpDlciRowStatus, mcsMgrFrf5EpGEpTrafficParmConversionPolicy=mcsMgrFrf5EpGEpTrafficParmConversionPolicy, mcsMgrFrf5EpGEpUnknownStatus=mcsMgrFrf5EpGEpUnknownStatus, mcsMgrFrf5EpGAddr=mcsMgrFrf5EpGAddr, mcsMgrFrf5EpGEpStorageType=mcsMgrFrf5EpGEpStorageType, mcsMgrFrf5EpGEpLmiStatusSequenceErrors=mcsMgrFrf5EpGEpLmiStatusSequenceErrors, mcsMgrFrf5EpGEpEpdType=mcsMgrFrf5EpGEpEpdType, mcsMgrFrf5EpGEpLmiStateEntry=mcsMgrFrf5EpGEpLmiStateEntry, mcsMgrFrf5EpGEpLmiStorageType=mcsMgrFrf5EpGEpLmiStorageType, mcsMgrFrf5EpGEpEpdExcessBurstSize=mcsMgrFrf5EpGEpEpdExcessBurstSize)
