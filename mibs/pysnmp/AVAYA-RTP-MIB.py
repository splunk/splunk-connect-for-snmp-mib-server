#
# PySNMP MIB module AVAYA-RTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVAYA-RTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:16:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
InetAddress, InetAddressType, InetAddressIPv6, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetAddressIPv6", "InetPortNumber")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, IpAddress, iso, ObjectIdentity, MibIdentifier, Counter32, Bits, NotificationType, Counter64, Integer32, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "iso", "ObjectIdentity", "MibIdentifier", "Counter32", "Bits", "NotificationType", "Counter64", "Integer32", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "TimeTicks")
TruthValue, TextualConvention, DisplayString, TimeInterval, RowStatus, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "TimeInterval", "RowStatus", "DateAndTime")
avRtpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 7))
if mibBuilder.loadTexts: avRtpMib.setLastUpdated('201006081712Z')
if mibBuilder.loadTexts: avRtpMib.setOrganization('Avaya')
class AvRtpItuPerceivedSeverity(TextualConvention, Integer32):
    reference = "ITU Recommendation M.3100, 'Generic Network Information Model', 1995 ITU Recommendation X.733, 'Information Technology - Open Systems Interconnection - System Management: Alarm Reporting Function', 1992"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("cleared", 1), ("indeterminate", 2), ("critical", 3), ("major", 4), ("minor", 5), ("warning", 6))

class AvRtpLoss(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-1%'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-1, 1000)

class AvRtpSilenceSupp(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("notSupported", 0), ("disabled", 1), ("noRtp", 2), ("silenceFrames", 3), ("complex", 4))

avaya = MibIdentifier((1, 3, 6, 1, 4, 1, 6889))
mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2))
avRtpNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 7, 0))
avRtpQoSTrap = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 7, 0, 1)).setObjects(("AVAYA-RTP-MIB", "avRtpSessionLocAddrV4"), ("AVAYA-RTP-MIB", "avRtpSessionRemAddrV4"), ("AVAYA-RTP-MIB", "avRtpSessionDuration"), ("AVAYA-RTP-MIB", "avRtpSessionCname"), ("AVAYA-RTP-MIB", "avRtpSessionPhone"), ("AVAYA-RTP-MIB", "avRtpSessionSeverity"), ("AVAYA-RTP-MIB", "avRtpSessionDebugStr"))
if mibBuilder.loadTexts: avRtpQoSTrap.setStatus('current')
avRtpQoSFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 7, 0, 2)).setObjects(("AVAYA-RTP-MIB", "avRtpQoSFaultTh"), ("AVAYA-RTP-MIB", "avRtpQoSClearTh"), ("AVAYA-RTP-MIB", "avRtpSessionSeverity"))
if mibBuilder.loadTexts: avRtpQoSFault.setStatus('current')
avRtpQoSClear = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 7, 0, 3)).setObjects(("AVAYA-RTP-MIB", "avRtpQoSFaultTh"), ("AVAYA-RTP-MIB", "avRtpQoSClearTh"), ("AVAYA-RTP-MIB", "avRtpSessionSeverity"))
if mibBuilder.loadTexts: avRtpQoSClear.setStatus('current')
avRtpQoSInetTrap = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 7, 0, 4)).setObjects(("AVAYA-RTP-MIB", "avRtpSessionLocInetAddrType"), ("AVAYA-RTP-MIB", "avRtpSessionLocInetAddr"), ("AVAYA-RTP-MIB", "avRtpSessionRemInetAddrType"), ("AVAYA-RTP-MIB", "avRtpSessionRemInetAddr"), ("AVAYA-RTP-MIB", "avRtpSessionDuration"), ("AVAYA-RTP-MIB", "avRtpSessionCname"), ("AVAYA-RTP-MIB", "avRtpSessionPhone"), ("AVAYA-RTP-MIB", "avRtpSessionSeverity"), ("AVAYA-RTP-MIB", "avRtpSessionDebugStr"))
if mibBuilder.loadTexts: avRtpQoSInetTrap.setStatus('current')
avRtpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1))
avRtpThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1), )
if mibBuilder.loadTexts: avRtpThresholdTable.setStatus('current')
avRtpThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1), ).setIndexNames((0, "AVAYA-RTP-MIB", "avRtpThresholdSet"))
if mibBuilder.loadTexts: avRtpThresholdEntry.setStatus('current')
avRtpThresholdSet = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpThresholdSet.setStatus('current')
avRtpThresholdMinStatWin = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdMinStatWin.setStatus('current')
avRtpThresholdRxCodecLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 3), AvRtpLoss()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRxCodecLoss.setStatus('current')
avRtpThresholdRxAvgCodecLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 4), AvRtpLoss()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRxAvgCodecLoss.setStatus('current')
avRtpThresholdRxCodecLossEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRxCodecLossEv.setStatus('current')
avRtpThresholdCodecRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdCodecRtt.setStatus('current')
avRtpThresholdCodecRttEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdCodecRttEv.setStatus('current')
avRtpThresholdEcReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdEcReturnLoss.setStatus('current')
avRtpThresholdEcReturnLossEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdEcReturnLossEv.setStatus('current')
avRtpThresholdRxLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 10), AvRtpLoss()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRxLoss.setStatus('current')
avRtpThresholdRxLossEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRxLossEv.setStatus('current')
avRtpThresholdRemLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 12), AvRtpLoss()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRemLoss.setStatus('current')
avRtpThresholdRemLossEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRemLossEv.setStatus('current')
avRtpThresholdAvgRxLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 14), AvRtpLoss()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdAvgRxLoss.setStatus('current')
avRtpThresholdAvgRemLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 15), AvRtpLoss()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdAvgRemLoss.setStatus('current')
avRtpThresholdRxJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRxJitter.setStatus('current')
avRtpThresholdRxJitterEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRxJitterEv.setStatus('current')
avRtpThresholdRemJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRemJitter.setStatus('current')
avRtpThresholdRemJitterEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRemJitterEv.setStatus('current')
avRtpThresholdRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRtt.setStatus('current')
avRtpThresholdRttEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRttEv.setStatus('current')
avRtpThresholdRxSsrcChangeEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpThresholdRxSsrcChangeEv.setStatus('current')
avRtpEnable = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpEnable.setStatus('current')
avRtpQoSTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpQoSTrapEnable.setStatus('current')
avRtpQoSFaultTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpQoSFaultTrapEnable.setStatus('current')
avRtpQoSFaultTh = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpQoSFaultTh.setStatus('current')
avRtpQoSClearTh = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpQoSClearTh.setStatus('current')
avRtpTxQoSTraps = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpTxQoSTraps.setStatus('current')
avRtpQoSTrapsDrop = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpQoSTrapsDrop.setStatus('current')
avRtpQoSTrapTokenInterval = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 9), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpQoSTrapTokenInterval.setStatus('current')
avRtpQoSTrapBucketSize = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpQoSTrapBucketSize.setStatus('current')
avRtpDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpDateAndTime.setStatus('current')
avRtpMaxSessionTableSize = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpMaxSessionTableSize.setStatus('current')
avRtpReservedSessionTableRows = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpReservedSessionTableRows.setStatus('current')
avRtpClear = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpClear.setStatus('current')
avRtpFaultMask = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpFaultMask.setStatus('current')
avRtpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2), )
if mibBuilder.loadTexts: avRtpSessionTable.setStatus('current')
avRtpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1), ).setIndexNames((0, "AVAYA-RTP-MIB", "avRtpSessionState"), (0, "AVAYA-RTP-MIB", "avRtpSessionID"))
if mibBuilder.loadTexts: avRtpSessionEntry.setStatus('current')
avRtpSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("activeWithEvent", 2), ("terminated", 3), ("terminatedWithEvent", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionState.setStatus('current')
avRtpSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionID.setStatus('current')
avRtpSessionEngineID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionEngineID.setStatus('current')
avRtpSessionLocAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionLocAddrType.setStatus('current')
avRtpSessionLocAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionLocAddr.setStatus('current')
avRtpSessionLocAddrV4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionLocAddrV4.setStatus('current')
avRtpSessionLocAddrV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 7), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionLocAddrV6.setStatus('current')
avRtpSessionRemAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemAddrType.setStatus('current')
avRtpSessionRemAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemAddr.setStatus('current')
avRtpSessionRemAddrV4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemAddrV4.setStatus('current')
avRtpSessionRemAddrV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 11), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemAddrV6.setStatus('current')
avRtpSessionLocPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 12), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionLocPort.setStatus('current')
avRtpSessionRemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 13), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemPort.setStatus('current')
avRtpSessionStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionStartTime.setStatus('current')
avRtpSessionEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionEndTime.setStatus('current')
avRtpSessionDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 16), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionDuration.setStatus('current')
avRtpSessionCname = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionCname.setStatus('current')
avRtpSessionPhone = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionPhone.setStatus('current')
avRtpSessionSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("cleared", 1), ("indeterminate", 2), ("critical", 3), ("major", 4), ("minor", 5), ("warning", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionSeverity.setStatus('current')
avRtpSessionTxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxLen.setStatus('current')
avRtpSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 8, 9, 15, 18, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 255))).clone(namedValues=NamedValues(("g711u", 0), ("g723", 4), ("g711a", 8), ("g722", 9), ("g728", 15), ("g729", 18), ("avayaFaxRelay", 128), ("t38fax", 129), ("faxPassThru", 130), ("ttyRelay", 131), ("ttyPassThru", 132), ("modemRelay", 133), ("modemPassThru", 134), ("clearChannel", 135), ("g729a", 136), ("g729ab", 137), ("g729b", 138), ("g726a32", 139), ("unspecified", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionType.setStatus('current')
avRtpSessionTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxInterval.setStatus('current')
avRtpSessionTxEncryp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unknown", -1), ("encryptionOff", 0), ("encryptionAEAv2", 1), ("encryptionAES", 2), ("srtpAesCm128", 4), ("srtpAesCm128HmacSha180", 5), ("srtpAesCm128HmacSha132", 6), ("srtpF8128HmacSha180", 7), ("srtpHmacSha180", 8), ("srtpHmacSha132", 9), ("srtp", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxEncryp.setStatus('current')
avRtpSessionTxDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxDscp.setStatus('current')
avRtpSessionTxVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxVlan.setStatus('current')
avRtpSessionTxL2Pri = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxL2Pri.setStatus('current')
avRtpSessionTxSilenceSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 27), AvRtpSilenceSupp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxSilenceSupp.setStatus('current')
avRtpSessionTxSsrc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxSsrc.setStatus('current')
avRtpSessionTxRsvp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unused", 0), ("disabled", 1), ("pending", 2), ("failed", 3), ("reserved", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxRsvp.setStatus('current')
avRtpSessionTxResvFail = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxResvFail.setStatus('current')
avRtpSessionStatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 31), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionStatInterval.setStatus('current')
avRtpSessionRxCodecPlayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxCodecPlayTime.setStatus('current')
avRtpSessionRxCodecLossCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxCodecLossCount.setStatus('current')
avRtpSessionRxCodecLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 34), AvRtpLoss()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxCodecLoss.setStatus('current')
avRtpSessionRxAvgCodecLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 35), AvRtpLoss()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxAvgCodecLoss.setStatus('current')
avRtpSessionRxCodecLossEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxCodecLossEv.setStatus('current')
avRtpSessionRxLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 37), AvRtpLoss()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxLoss.setStatus('current')
avRtpSessionRxAvgLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 38), AvRtpLoss()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxAvgLoss.setStatus('current')
avRtpSessionRxLossEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxLossEv.setStatus('current')
avRtpSessionRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRx.setStatus('current')
avRtpSessionRxLossCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxLossCount.setStatus('current')
avRtpSessionRxSeqFall = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxSeqFall.setStatus('current')
avRtpSessionRxDup = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxDup.setStatus('current')
avRtpSessionRxJBufUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxJBufUnderruns.setStatus('current')
avRtpSessionRxJBufOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxJBufOverruns.setStatus('current')
avRtpSessionRxJBufDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxJBufDelay.setStatus('current')
avRtpSessionRxMaxJBufDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxMaxJBufDelay.setStatus('current')
avRtpSessionRxJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxJitter.setStatus('current')
avRtpSessionRxAvgJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxAvgJitter.setStatus('current')
avRtpSessionRxJitterEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxJitterEv.setStatus('current')
avRtpSessionRxTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxTtl.setStatus('current')
avRtpSessionRxMinTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxMinTtl.setStatus('current')
avRtpSessionRxMaxTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxMaxTtl.setStatus('current')
avRtpSessionRxDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxDscp.setStatus('current')
avRtpSessionRxL2Pri = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxL2Pri.setStatus('current')
avRtpSessionRxSilenceSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 56), AvRtpSilenceSupp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxSilenceSupp.setStatus('current')
avRtpSessionRxSsrc = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 57), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxSsrc.setStatus('current')
avRtpSessionRxSsrcChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxSsrcChange.setStatus('current')
avRtpSessionTxRtcp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxRtcp.setStatus('current')
avRtpSessionRxRtcp = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxRtcp.setStatus('current')
avRtpSessionCodecRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionCodecRtt.setStatus('current')
avRtpSessionAvgCodecRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionAvgCodecRtt.setStatus('current')
avRtpSessionCodecRttEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionCodecRttEv.setStatus('current')
avRtpSessionRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRtt.setStatus('current')
avRtpSessionAvgRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionAvgRtt.setStatus('current')
avRtpSessionRttEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRttEv.setStatus('current')
avRtpSessionRemLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 67), AvRtpLoss()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemLoss.setStatus('current')
avRtpSessionRemAvgLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 68), AvRtpLoss()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemAvgLoss.setStatus('current')
avRtpSessionRemLossEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemLossEv.setStatus('current')
avRtpSessionRemJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemJitter.setStatus('current')
avRtpSessionRemAvgJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemAvgJitter.setStatus('current')
avRtpSessionRemJitterEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRemJitterEv.setStatus('current')
avRtpSessionEcTailLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionEcTailLen.setStatus('current')
avRtpSessionEcReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionEcReturnLoss.setStatus('current')
avRtpSessionEcReturnLossEv = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionEcReturnLossEv.setStatus('current')
avRtpSessionAEC = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 0), ("none", 1), ("halfDuplex", 2), ("fullDuplex", 3), ("aec", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionAEC.setStatus('current')
avRtpSessionDebugStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 77), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionDebugStr.setStatus('current')
avRtpSessionTxFlowLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionTxFlowLabel.setStatus('current')
avRtpSessionRxFlowLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 2, 1, 79), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSessionRxFlowLabel.setStatus('current')
avRtpSumTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3), )
if mibBuilder.loadTexts: avRtpSumTable.setStatus('current')
avRtpSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1), ).setIndexNames((0, "AVAYA-RTP-MIB", "avRtpSumEngineID"))
if mibBuilder.loadTexts: avRtpSumEntry.setStatus('current')
avRtpSumEngineID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSumEngineID.setStatus('current')
avRtpSumEngineDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSumEngineDescr.setStatus('current')
avRtpSumPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 3), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSumPeriod.setStatus('current')
avRtpSumActiveFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSumActiveFlows.setStatus('current')
avRtpSumActiveQosEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSumActiveQosEvents.setStatus('current')
avRtpSumTotalFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSumTotalFlows.setStatus('current')
avRtpSumTotalFlowsQoSEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSumTotalFlowsQoSEvents.setStatus('current')
avRtpSumTxTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSumTxTTL.setStatus('current')
avRtpSumSessionDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpSumSessionDuration.setStatus('current')
avRtpSumClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 3, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avRtpSumClear.setStatus('current')
avRtpLookupTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 7, 4), )
if mibBuilder.loadTexts: avRtpLookupTable.setStatus('current')
avRtpLookupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 7, 4, 1), ).setIndexNames((0, "AVAYA-RTP-MIB", "avRtpSessionRemAddrType"), (0, "AVAYA-RTP-MIB", "avRtpSessionRemAddr"), (0, "AVAYA-RTP-MIB", "avRtpSessionState"), (0, "AVAYA-RTP-MIB", "avRtpSessionID"))
if mibBuilder.loadTexts: avRtpLookupEntry.setStatus('current')
avRtpLookupStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 7, 4, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avRtpLookupStartTime.setStatus('current')
avRtpNotificationVarbinds = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 7, 5))
if mibBuilder.loadTexts: avRtpNotificationVarbinds.setStatus('current')
avRtpSessionLocInetAddrType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 5, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avRtpSessionLocInetAddrType.setStatus('current')
avRtpSessionLocInetAddr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 5, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avRtpSessionLocInetAddr.setStatus('current')
avRtpSessionRemInetAddrType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 5, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avRtpSessionRemInetAddrType.setStatus('current')
avRtpSessionRemInetAddr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 7, 5, 4), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avRtpSessionRemInetAddr.setStatus('current')
mibBuilder.exportSymbols("AVAYA-RTP-MIB", avRtpThresholdTable=avRtpThresholdTable, avRtpSessionRxTtl=avRtpSessionRxTtl, avRtpThresholdEntry=avRtpThresholdEntry, avRtpSessionRxAvgJitter=avRtpSessionRxAvgJitter, avRtpSessionLocInetAddrType=avRtpSessionLocInetAddrType, PYSNMP_MODULE_ID=avRtpMib, avRtpSessionLocAddrV6=avRtpSessionLocAddrV6, avRtpSessionCname=avRtpSessionCname, avRtpSessionTxEncryp=avRtpSessionTxEncryp, avRtpQoSTrapTokenInterval=avRtpQoSTrapTokenInterval, avRtpQoSTrapBucketSize=avRtpQoSTrapBucketSize, avRtpThresholdCodecRtt=avRtpThresholdCodecRtt, avRtpSessionRxLoss=avRtpSessionRxLoss, avRtpThresholdRxSsrcChangeEv=avRtpThresholdRxSsrcChangeEv, avRtpQoSFaultTrapEnable=avRtpQoSFaultTrapEnable, avRtpSessionStartTime=avRtpSessionStartTime, avRtpThresholdRxCodecLossEv=avRtpThresholdRxCodecLossEv, avRtpSessionEndTime=avRtpSessionEndTime, avRtpSessionRttEv=avRtpSessionRttEv, avRtpSessionRemAddrV4=avRtpSessionRemAddrV4, avRtpSessionRemAvgJitter=avRtpSessionRemAvgJitter, avRtpQoSTrapEnable=avRtpQoSTrapEnable, avRtpSessionRxRtcp=avRtpSessionRxRtcp, avRtpSumTable=avRtpSumTable, avRtpSessionRxMaxTtl=avRtpSessionRxMaxTtl, avRtpThresholdSet=avRtpThresholdSet, avRtpSessionRxCodecLoss=avRtpSessionRxCodecLoss, avRtpSessionCodecRtt=avRtpSessionCodecRtt, avRtpSessionRtt=avRtpSessionRtt, avRtpSessionRemJitterEv=avRtpSessionRemJitterEv, avRtpSessionState=avRtpSessionState, avRtpQoSClear=avRtpQoSClear, avRtpSessionLocAddr=avRtpSessionLocAddr, avRtpThresholdRxAvgCodecLoss=avRtpThresholdRxAvgCodecLoss, avRtpSessionEcReturnLossEv=avRtpSessionEcReturnLossEv, avRtpSessionTxSilenceSupp=avRtpSessionTxSilenceSupp, avRtpThresholdRemJitter=avRtpThresholdRemJitter, avRtpSessionRemInetAddr=avRtpSessionRemInetAddr, avRtpSessionRxDscp=avRtpSessionRxDscp, avRtpLookupStartTime=avRtpLookupStartTime, avRtpNotificationVarbinds=avRtpNotificationVarbinds, avRtpClear=avRtpClear, AvRtpItuPerceivedSeverity=AvRtpItuPerceivedSeverity, avRtpSessionRxMaxJBufDelay=avRtpSessionRxMaxJBufDelay, avRtpSessionTxResvFail=avRtpSessionTxResvFail, avRtpSumActiveFlows=avRtpSumActiveFlows, avRtpDateAndTime=avRtpDateAndTime, avRtpThresholdRemLoss=avRtpThresholdRemLoss, avRtpFaultMask=avRtpFaultMask, avRtpQoSFault=avRtpQoSFault, avRtpThresholdEcReturnLoss=avRtpThresholdEcReturnLoss, avRtpTxQoSTraps=avRtpTxQoSTraps, avRtpSessionEcReturnLoss=avRtpSessionEcReturnLoss, avRtpSessionRemLossEv=avRtpSessionRemLossEv, avRtpSessionRemAddr=avRtpSessionRemAddr, avRtpSessionRxJitterEv=avRtpSessionRxJitterEv, avRtpNotification=avRtpNotification, avRtpThresholdRemJitterEv=avRtpThresholdRemJitterEv, avRtpSessionLocPort=avRtpSessionLocPort, avRtpSessionDebugStr=avRtpSessionDebugStr, avRtpSessionTxDscp=avRtpSessionTxDscp, avRtpThresholdRttEv=avRtpThresholdRttEv, avRtpSessionRxCodecLossCount=avRtpSessionRxCodecLossCount, avRtpThresholdRxCodecLoss=avRtpThresholdRxCodecLoss, avRtpThresholdAvgRxLoss=avRtpThresholdAvgRxLoss, avRtpThresholdRxJitter=avRtpThresholdRxJitter, avRtpThresholdAvgRemLoss=avRtpThresholdAvgRemLoss, avRtpSumEngineDescr=avRtpSumEngineDescr, avRtpLookupTable=avRtpLookupTable, avRtpThresholdEcReturnLossEv=avRtpThresholdEcReturnLossEv, avRtpSessionRxAvgCodecLoss=avRtpSessionRxAvgCodecLoss, avRtpSessionRxSsrc=avRtpSessionRxSsrc, avRtpConfig=avRtpConfig, mibs=mibs, avRtpSessionAvgCodecRtt=avRtpSessionAvgCodecRtt, avRtpSessionTxL2Pri=avRtpSessionTxL2Pri, avRtpSessionTxInterval=avRtpSessionTxInterval, avRtpSessionTable=avRtpSessionTable, avRtpSessionRxJBufUnderruns=avRtpSessionRxJBufUnderruns, avRtpSessionRx=avRtpSessionRx, avRtpSumClear=avRtpSumClear, avRtpSumSessionDuration=avRtpSumSessionDuration, avRtpQoSTrap=avRtpQoSTrap, avRtpSessionRemPort=avRtpSessionRemPort, avRtpSessionRxLossEv=avRtpSessionRxLossEv, avRtpThresholdRemLossEv=avRtpThresholdRemLossEv, avRtpSessionAEC=avRtpSessionAEC, avRtpSessionLocAddrV4=avRtpSessionLocAddrV4, avRtpSessionRemAvgLoss=avRtpSessionRemAvgLoss, avRtpSessionRemJitter=avRtpSessionRemJitter, avRtpSessionRemInetAddrType=avRtpSessionRemInetAddrType, avRtpSessionDuration=avRtpSessionDuration, avRtpSessionTxSsrc=avRtpSessionTxSsrc, AvRtpSilenceSupp=AvRtpSilenceSupp, avRtpSessionRxDup=avRtpSessionRxDup, avRtpMaxSessionTableSize=avRtpMaxSessionTableSize, avRtpSessionRxMinTtl=avRtpSessionRxMinTtl, avRtpQoSClearTh=avRtpQoSClearTh, avRtpSumActiveQosEvents=avRtpSumActiveQosEvents, avRtpSessionTxVlan=avRtpSessionTxVlan, avRtpSessionLocAddrType=avRtpSessionLocAddrType, AvRtpLoss=AvRtpLoss, avRtpSessionStatInterval=avRtpSessionStatInterval, avRtpSumTotalFlows=avRtpSumTotalFlows, avRtpSumPeriod=avRtpSumPeriod, avRtpThresholdRxLossEv=avRtpThresholdRxLossEv, avRtpQoSInetTrap=avRtpQoSInetTrap, avRtpSessionRxJitter=avRtpSessionRxJitter, avRtpSessionRxJBufOverruns=avRtpSessionRxJBufOverruns, avRtpThresholdMinStatWin=avRtpThresholdMinStatWin, avRtpSessionCodecRttEv=avRtpSessionCodecRttEv, avRtpSessionTxRsvp=avRtpSessionTxRsvp, avRtpSessionRxLossCount=avRtpSessionRxLossCount, avRtpSessionRxJBufDelay=avRtpSessionRxJBufDelay, avRtpThresholdRxLoss=avRtpThresholdRxLoss, avRtpSessionEngineID=avRtpSessionEngineID, avRtpSessionRemAddrType=avRtpSessionRemAddrType, avRtpSessionRxCodecLossEv=avRtpSessionRxCodecLossEv, avRtpSessionType=avRtpSessionType, avRtpSumEntry=avRtpSumEntry, avRtpSessionSeverity=avRtpSessionSeverity, avRtpLookupEntry=avRtpLookupEntry, avRtpSessionRxCodecPlayTime=avRtpSessionRxCodecPlayTime, avRtpSessionPhone=avRtpSessionPhone, avRtpSessionRxAvgLoss=avRtpSessionRxAvgLoss, avRtpSessionRemLoss=avRtpSessionRemLoss, avRtpSessionEntry=avRtpSessionEntry, avRtpSessionID=avRtpSessionID, avRtpSessionTxRtcp=avRtpSessionTxRtcp, avRtpSessionRxSilenceSupp=avRtpSessionRxSilenceSupp, avRtpSessionRemAddrV6=avRtpSessionRemAddrV6, avRtpSumTotalFlowsQoSEvents=avRtpSumTotalFlowsQoSEvents, avRtpQoSFaultTh=avRtpQoSFaultTh, avRtpEnable=avRtpEnable, avRtpQoSTrapsDrop=avRtpQoSTrapsDrop, avRtpSessionRxL2Pri=avRtpSessionRxL2Pri, avRtpSessionTxFlowLabel=avRtpSessionTxFlowLabel, avRtpThresholdRxJitterEv=avRtpThresholdRxJitterEv, avRtpSessionAvgRtt=avRtpSessionAvgRtt, avRtpSumTxTTL=avRtpSumTxTTL, avRtpSessionRxSsrcChange=avRtpSessionRxSsrcChange, avRtpSessionRxSeqFall=avRtpSessionRxSeqFall, avRtpMib=avRtpMib, avRtpSessionLocInetAddr=avRtpSessionLocInetAddr, avRtpThresholdRtt=avRtpThresholdRtt, avRtpSumEngineID=avRtpSumEngineID, avRtpSessionRxFlowLabel=avRtpSessionRxFlowLabel, avRtpSessionTxLen=avRtpSessionTxLen, avRtpReservedSessionTableRows=avRtpReservedSessionTableRows, avaya=avaya, avRtpSessionEcTailLen=avRtpSessionEcTailLen, avRtpThresholdCodecRttEv=avRtpThresholdCodecRttEv)
