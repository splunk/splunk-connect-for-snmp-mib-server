#
# PySNMP MIB module CISCO-RTTMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-RTTMON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:45:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
CfmMepid, = mibBuilder.importSymbols("CISCO-ETHER-CFM-MIB", "CfmMepid")
QosLayer2Cos, = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "QosLayer2Cos")
RttMonProtocol, RttResponseSense, RttMonRttType, RttMonCodecType, RttMonTargetAddress, RttMplsVpnMonLpdGrpStatus, RttReset, RttMplsVpnMonRttType, RttMonReactVar, RttMonOperation, RttMonLSPPingReplyMode, RttMonScheduleStartType, RttMplsVpnMonLpdFailureSense = mibBuilder.importSymbols("CISCO-RTTMON-TC-MIB", "RttMonProtocol", "RttResponseSense", "RttMonRttType", "RttMonCodecType", "RttMonTargetAddress", "RttMplsVpnMonLpdGrpStatus", "RttReset", "RttMplsVpnMonRttType", "RttMonReactVar", "RttMonOperation", "RttMonLSPPingReplyMode", "RttMonScheduleStartType", "RttMplsVpnMonLpdFailureSense")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
Dscp, = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "Dscp")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Gauge32, TimeTicks, Unsigned32, IpAddress, ModuleIdentity, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, NotificationType, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Gauge32", "TimeTicks", "Unsigned32", "IpAddress", "ModuleIdentity", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "NotificationType", "Counter64", "iso")
TimeStamp, TimeInterval, RowStatus, DisplayString, TruthValue, MacAddress, TextualConvention, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TimeInterval", "RowStatus", "DisplayString", "TruthValue", "MacAddress", "TextualConvention", "StorageType")
ciscoRttMonMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 42))
ciscoRttMonMIB.setRevisions(('2016-04-14 00:00', '2014-04-10 00:00', '2012-08-16 00:00', '2011-09-15 00:00', '2011-02-21 00:00', '2010-10-18 00:00', '2010-06-04 00:00', '2009-04-07 00:00', '2008-03-24 00:00', '2008-01-06 00:00', '2006-12-08 00:00', '2006-06-08 00:00', '2006-03-02 00:00', '2005-08-11 00:00', '2005-04-21 00:00', '2005-01-04 00:00', '2004-08-26 00:00', '2004-05-18 00:00', '2004-01-20 00:00', '2003-08-11 00:00', '2003-05-21 00:00', '2003-04-15 00:00', '2003-03-12 00:00', '2000-11-03 00:00', '1999-06-15 00:00',))
if mibBuilder.loadTexts: ciscoRttMonMIB.setLastUpdated('201604140000Z')
if mibBuilder.loadTexts: ciscoRttMonMIB.setOrganization('Cisco IOS')
ciscoRttMonObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 1))
rttMonAppl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1))
rttMonCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2))
rttMonStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3))
rttMonHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4))
rttMonLatestOper = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5))
rttMonApplVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonApplVersion.setStatus('current')
rttMonApplMaxPacketDataSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonApplMaxPacketDataSize.setStatus('current')
rttMonApplTimeOfLastSet = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonApplTimeOfLastSet.setStatus('current')
rttMonApplNumCtrlAdminEntry = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonApplNumCtrlAdminEntry.setStatus('current')
rttMonApplReset = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 5), RttReset()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rttMonApplReset.setStatus('current')
rttMonApplPreConfigedReset = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 6), RttReset()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rttMonApplPreConfigedReset.setStatus('obsolete')
rttMonApplSupportedRttTypesTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 7), )
if mibBuilder.loadTexts: rttMonApplSupportedRttTypesTable.setStatus('current')
rttMonApplSupportedRttTypesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonApplSupportedRttTypes"))
if mibBuilder.loadTexts: rttMonApplSupportedRttTypesEntry.setStatus('current')
rttMonApplSupportedRttTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 7, 1, 1), RttMonRttType())
if mibBuilder.loadTexts: rttMonApplSupportedRttTypes.setStatus('current')
rttMonApplSupportedRttTypesValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 7, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonApplSupportedRttTypesValid.setStatus('current')
rttMonApplSupportedProtocolsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 8), )
if mibBuilder.loadTexts: rttMonApplSupportedProtocolsTable.setStatus('current')
rttMonApplSupportedProtocolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 8, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonApplSupportedProtocols"))
if mibBuilder.loadTexts: rttMonApplSupportedProtocolsEntry.setStatus('current')
rttMonApplSupportedProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 8, 1, 1), RttMonProtocol())
if mibBuilder.loadTexts: rttMonApplSupportedProtocols.setStatus('current')
rttMonApplSupportedProtocolsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 8, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonApplSupportedProtocolsValid.setStatus('current')
rttMonApplPreConfigedTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 9), )
if mibBuilder.loadTexts: rttMonApplPreConfigedTable.setStatus('obsolete')
rttMonApplPreConfigedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 9, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonApplPreConfigedType"), (0, "CISCO-RTTMON-MIB", "rttMonApplPreConfigedName"))
if mibBuilder.loadTexts: rttMonApplPreConfigedEntry.setStatus('obsolete')
rttMonApplPreConfigedType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("filePath", 1), ("scriptName", 2))))
if mibBuilder.loadTexts: rttMonApplPreConfigedType.setStatus('obsolete')
rttMonApplPreConfigedName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 9, 1, 3), DisplayString())
if mibBuilder.loadTexts: rttMonApplPreConfigedName.setStatus('obsolete')
rttMonApplPreConfigedValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 9, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonApplPreConfigedValid.setStatus('obsolete')
rttMonApplProbeCapacity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonApplProbeCapacity.setStatus('current')
rttMonApplFreeMemLowWaterMark = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rttMonApplFreeMemLowWaterMark.setStatus('current')
rttMonApplLatestSetError = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonApplLatestSetError.setStatus('current')
rttMonApplResponder = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rttMonApplResponder.setStatus('current')
rttMonApplAuthTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14), )
if mibBuilder.loadTexts: rttMonApplAuthTable.setStatus('current')
rttMonApplAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonApplAuthIndex"))
if mibBuilder.loadTexts: rttMonApplAuthEntry.setStatus('current')
rttMonApplAuthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: rttMonApplAuthIndex.setStatus('current')
rttMonApplAuthKeyChain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonApplAuthKeyChain.setStatus('current')
rttMonApplAuthKeyString1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonApplAuthKeyString1.setStatus('current')
rttMonApplAuthKeyString2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonApplAuthKeyString2.setStatus('current')
rttMonApplAuthKeyString3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonApplAuthKeyString3.setStatus('current')
rttMonApplAuthKeyString4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonApplAuthKeyString4.setStatus('current')
rttMonApplAuthKeyString5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonApplAuthKeyString5.setStatus('current')
rttMonApplAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 14, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonApplAuthStatus.setStatus('current')
rttMonApplLpdGrpStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rttMonApplLpdGrpStatsReset.setStatus('current')
rttMonCtrlAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1), )
if mibBuilder.loadTexts: rttMonCtrlAdminTable.setStatus('current')
rttMonCtrlAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"))
if mibBuilder.loadTexts: rttMonCtrlAdminEntry.setStatus('current')
rttMonCtrlAdminIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rttMonCtrlAdminIndex.setStatus('current')
rttMonCtrlAdminOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminOwner.setStatus('current')
rttMonCtrlAdminTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminTag.setStatus('deprecated')
rttMonCtrlAdminRttType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 4), RttMonRttType().clone('echo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminRttType.setStatus('current')
rttMonCtrlAdminThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminThreshold.setStatus('current')
rttMonCtrlAdminFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminFrequency.setStatus('current')
rttMonCtrlAdminTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminTimeout.setStatus('current')
rttMonCtrlAdminVerifyData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminVerifyData.setStatus('current')
rttMonCtrlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminStatus.setStatus('current')
rttMonCtrlAdminNvgen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminNvgen.setStatus('current')
rttMonCtrlAdminGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlAdminGroupName.setStatus('current')
rttMonCtrlAdminLongTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 1, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonCtrlAdminLongTag.setStatus('current')
rttMonEchoAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2), )
if mibBuilder.loadTexts: rttMonEchoAdminTable.setStatus('current')
rttMonEchoAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"))
if mibBuilder.loadTexts: rttMonEchoAdminEntry.setStatus('current')
rttMonEchoAdminProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 1), RttMonProtocol().clone('notApplicable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminProtocol.setStatus('current')
rttMonEchoAdminTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 2), RttMonTargetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTargetAddress.setStatus('current')
rttMonEchoAdminPktDataRequestSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384)).clone(1)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminPktDataRequestSize.setStatus('current')
rttMonEchoAdminPktDataResponseSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminPktDataResponseSize.setStatus('current')
rttMonEchoAdminTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTargetPort.setStatus('current')
rttMonEchoAdminSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 6), RttMonTargetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminSourceAddress.setStatus('current')
rttMonEchoAdminSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminSourcePort.setStatus('current')
rttMonEchoAdminControlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 8), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminControlEnable.setStatus('current')
rttMonEchoAdminTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTOS.setStatus('current')
rttMonEchoAdminLSREnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonEchoAdminLSREnable.setStatus('current')
rttMonEchoAdminTargetAddressString = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTargetAddressString.setStatus('current')
rttMonEchoAdminNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 12), RttMonTargetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminNameServer.setStatus('current')
rttMonEchoAdminOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 13), RttMonOperation()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminOperation.setStatus('current')
rttMonEchoAdminHTTPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 10)).clone('1.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminHTTPVersion.setStatus('current')
rttMonEchoAdminURL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 15), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminURL.setStatus('current')
rttMonEchoAdminCache = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 16), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminCache.setStatus('current')
rttMonEchoAdminInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminInterval.setStatus('current')
rttMonEchoAdminNumPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 18), Integer32().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminNumPackets.setStatus('current')
rttMonEchoAdminProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 19), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminProxy.setStatus('current')
rttMonEchoAdminString1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 20), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminString1.setStatus('current')
rttMonEchoAdminString2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 21), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminString2.setStatus('current')
rttMonEchoAdminString3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 22), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminString3.setStatus('current')
rttMonEchoAdminString4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 23), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminString4.setStatus('current')
rttMonEchoAdminString5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 24), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminString5.setStatus('current')
rttMonEchoAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 25), RttMonOperation().clone('ftpPassive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminMode.setStatus('current')
rttMonEchoAdminVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminVrfName.setStatus('current')
rttMonEchoAdminCodecType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 27), RttMonCodecType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminCodecType.setStatus('current')
rttMonEchoAdminCodecInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminCodecInterval.setStatus('current')
rttMonEchoAdminCodecPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminCodecPayload.setStatus('current')
rttMonEchoAdminCodecNumPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminCodecNumPackets.setStatus('current')
rttMonEchoAdminICPIFAdvFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminICPIFAdvFactor.setStatus('current')
rttMonEchoAdminLSPFECType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ldpIpv4Prefix", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminLSPFECType.setStatus('current')
rttMonEchoAdminLSPSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 33), RttMonTargetAddress().clone('7F 00 00 01')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminLSPSelector.setStatus('current')
rttMonEchoAdminLSPReplyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 34), RttMonLSPPingReplyMode().clone('replyIpv4Udp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminLSPReplyMode.setStatus('current')
rttMonEchoAdminLSPTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminLSPTTL.setStatus('current')
rttMonEchoAdminLSPExp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminLSPExp.setStatus('current')
rttMonEchoAdminPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("milliseconds", 1), ("microseconds", 2))).clone('milliseconds')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminPrecision.setStatus('current')
rttMonEchoAdminProbePakPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("high", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminProbePakPriority.setStatus('current')
rttMonEchoAdminOWNTPSyncTolAbs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 39), Integer32()).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminOWNTPSyncTolAbs.setStatus('current')
rttMonEchoAdminOWNTPSyncTolPct = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminOWNTPSyncTolPct.setStatus('current')
rttMonEchoAdminOWNTPSyncTolType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("absolute", 2))).clone('percent')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminOWNTPSyncTolType.setStatus('current')
rttMonEchoAdminCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 42), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminCalledNumber.setStatus('current')
rttMonEchoAdminDetectPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 43), RttMonOperation().clone('voipDTAlertRinging')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminDetectPoint.setStatus('current')
rttMonEchoAdminGKRegistration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 44), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminGKRegistration.setStatus('current')
rttMonEchoAdminSourceVoicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 45), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminSourceVoicePort.setStatus('current')
rttMonEchoAdminCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminCallDuration.setStatus('current')
rttMonEchoAdminLSPReplyDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminLSPReplyDscp.setStatus('current')
rttMonEchoAdminLSPNullShim = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 48), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminLSPNullShim.setStatus('current')
rttMonEchoAdminTargetMPID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 49), CfmMepid()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTargetMPID.setStatus('current')
rttMonEchoAdminTargetDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 50), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTargetDomainName.setStatus('current')
rttMonEchoAdminTargetVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 51), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTargetVLAN.setStatus('current')
rttMonEchoAdminEthernetCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 52), QosLayer2Cos().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminEthernetCOS.setStatus('current')
rttMonEchoAdminLSPVccvID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminLSPVccvID.setStatus('current')
rttMonEchoAdminTargetEVC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 54), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTargetEVC.setStatus('current')
rttMonEchoAdminTargetMEPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 55), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTargetMEPPort.setStatus('current')
rttMonEchoAdminVideoTrafficProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 56), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminVideoTrafficProfile.setStatus('current')
rttMonEchoAdminDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 57), Dscp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminDscp.setStatus('current')
rttMonEchoAdminReserveDsp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("be", 1), ("gs", 2), ("na", 3))).clone('na')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminReserveDsp.setStatus('current')
rttMonEchoAdminInputInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 59), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminInputInterface.setStatus('current')
rttMonEchoAdminEmulateSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 60), RttMonTargetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminEmulateSourceAddress.setStatus('current')
rttMonEchoAdminEmulateSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminEmulateSourcePort.setStatus('current')
rttMonEchoAdminEmulateTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 62), RttMonTargetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminEmulateTargetAddress.setStatus('current')
rttMonEchoAdminEmulateTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminEmulateTargetPort.setStatus('current')
rttMonEchoAdminTargetMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 64), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonEchoAdminTargetMacAddress.setStatus('current')
rttMonEchoAdminSourceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 65), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonEchoAdminSourceMacAddress.setStatus('current')
rttMonEchoAdminSourceMPID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 66), CfmMepid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonEchoAdminSourceMPID.setStatus('current')
rttMonEchoAdminEndPointListName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 67), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminEndPointListName.setStatus('current')
rttMonEchoAdminSSM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 68), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminSSM.setStatus('current')
rttMonEchoAdminControlRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 69), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminControlRetry.setStatus('current')
rttMonEchoAdminControlTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 70), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminControlTimeout.setStatus('current')
rttMonEchoAdminIgmpTreeInit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 71), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminIgmpTreeInit.setStatus('current')
rttMonEchoAdminEnableBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 72), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonEchoAdminEnableBurst.setStatus('current')
rttMonEchoAdminAggBurstCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonEchoAdminAggBurstCycles.setStatus('current')
rttMonEchoAdminLossRatioNumFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 74), Integer32().clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonEchoAdminLossRatioNumFrames.setStatus('current')
rttMonEchoAdminAvailNumFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 75), Integer32().clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonEchoAdminAvailNumFrames.setStatus('current')
rttMonEchoAdminTstampOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 76), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTstampOptimization.setStatus('current')
rttMonEchoAdminTargetSwitchId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 77), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminTargetSwitchId.setStatus('current')
rttMonEchoAdminProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 78), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1023), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminProfileId.setStatus('current')
rttMonEchoAdminOutputInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 2, 1, 79), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoAdminOutputInterface.setStatus('current')
rttMonFileIOAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 3), )
if mibBuilder.loadTexts: rttMonFileIOAdminTable.setStatus('obsolete')
rttMonFileIOAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"))
if mibBuilder.loadTexts: rttMonFileIOAdminEntry.setStatus('obsolete')
rttMonFileIOAdminFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 3, 1, 1), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonFileIOAdminFilePath.setStatus('obsolete')
rttMonFileIOAdminSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("n256", 1), ("n1k", 2), ("n64k", 3), ("n128k", 4), ("n256k", 5))).clone('n256')).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonFileIOAdminSize.setStatus('obsolete')
rttMonFileIOAdminAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("write", 1), ("read", 2), ("writeRead", 3))).clone('read')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonFileIOAdminAction.setStatus('obsolete')
rttMonScriptAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 4), )
if mibBuilder.loadTexts: rttMonScriptAdminTable.setStatus('obsolete')
rttMonScriptAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"))
if mibBuilder.loadTexts: rttMonScriptAdminEntry.setStatus('obsolete')
rttMonScriptAdminName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 4, 1, 1), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonScriptAdminName.setStatus('obsolete')
rttMonScriptAdminCmdLineParams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 4, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonScriptAdminCmdLineParams.setStatus('obsolete')
rttMonScheduleAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 5), )
if mibBuilder.loadTexts: rttMonScheduleAdminTable.setStatus('current')
rttMonScheduleAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 5, 1), )
rttMonCtrlAdminEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMonScheduleAdminEntry"))
rttMonScheduleAdminEntry.setIndexNames(*rttMonCtrlAdminEntry.getIndexNames())
if mibBuilder.loadTexts: rttMonScheduleAdminEntry.setStatus('current')
rttMonScheduleAdminRttLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonScheduleAdminRttLife.setStatus('current')
rttMonScheduleAdminRttStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 5, 1, 2), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonScheduleAdminRttStartTime.setStatus('current')
rttMonScheduleAdminConceptRowAgeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2073600)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonScheduleAdminConceptRowAgeout.setStatus('deprecated')
rttMonScheduleAdminRttRecurring = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 5, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonScheduleAdminRttRecurring.setStatus('current')
rttMonScheduleAdminConceptRowAgeoutV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2073600))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonScheduleAdminConceptRowAgeoutV2.setStatus('current')
rttMonScheduleAdminStartType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 5, 1, 6), RttMonScheduleStartType().clone('pending')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonScheduleAdminStartType.setStatus('current')
rttMonScheduleAdminStartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(500, 10000)).clone(500)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonScheduleAdminStartDelay.setStatus('current')
rttMonReactAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6), )
if mibBuilder.loadTexts: rttMonReactAdminTable.setStatus('deprecated')
rttMonReactAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6, 1), )
rttMonCtrlAdminEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMonReactAdminEntry"))
rttMonReactAdminEntry.setIndexNames(*rttMonCtrlAdminEntry.getIndexNames())
if mibBuilder.loadTexts: rttMonReactAdminEntry.setStatus('deprecated')
rttMonReactAdminConnectionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactAdminConnectionEnable.setStatus('deprecated')
rttMonReactAdminTimeoutEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactAdminTimeoutEnable.setStatus('deprecated')
rttMonReactAdminThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("never", 1), ("immediate", 2), ("consecutive", 3), ("xOfy", 4), ("average", 5))).clone('never')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactAdminThresholdType.setStatus('deprecated')
rttMonReactAdminThresholdFalling = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactAdminThresholdFalling.setStatus('deprecated')
rttMonReactAdminThresholdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactAdminThresholdCount.setStatus('deprecated')
rttMonReactAdminThresholdCount2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactAdminThresholdCount2.setStatus('deprecated')
rttMonReactAdminActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("trapOnly", 2), ("nmvtOnly", 3), ("triggerOnly", 4), ("trapAndNmvt", 5), ("trapAndTrigger", 6), ("nmvtAndTrigger", 7), ("trapNmvtAndTrigger", 8))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactAdminActionType.setStatus('deprecated')
rttMonReactAdminVerifyErrorEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 6, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactAdminVerifyErrorEnable.setStatus('deprecated')
rttMonStatisticsAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 7), )
if mibBuilder.loadTexts: rttMonStatisticsAdminTable.setStatus('current')
rttMonStatisticsAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 7, 1), )
rttMonCtrlAdminEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMonStatisticsAdminEntry"))
rttMonStatisticsAdminEntry.setIndexNames(*rttMonCtrlAdminEntry.getIndexNames())
if mibBuilder.loadTexts: rttMonStatisticsAdminEntry.setStatus('current')
rttMonStatisticsAdminNumHourGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 25)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonStatisticsAdminNumHourGroups.setStatus('current')
rttMonStatisticsAdminNumPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonStatisticsAdminNumPaths.setStatus('current')
rttMonStatisticsAdminNumHops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonStatisticsAdminNumHops.setStatus('current')
rttMonStatisticsAdminNumDistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonStatisticsAdminNumDistBuckets.setStatus('current')
rttMonStatisticsAdminDistInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonStatisticsAdminDistInterval.setStatus('current')
rttMonHistoryAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 8), )
if mibBuilder.loadTexts: rttMonHistoryAdminTable.setStatus('current')
rttMonHistoryAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 8, 1), )
rttMonCtrlAdminEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMonHistoryAdminEntry"))
rttMonHistoryAdminEntry.setIndexNames(*rttMonCtrlAdminEntry.getIndexNames())
if mibBuilder.loadTexts: rttMonHistoryAdminEntry.setStatus('current')
rttMonHistoryAdminNumLives = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonHistoryAdminNumLives.setStatus('current')
rttMonHistoryAdminNumBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonHistoryAdminNumBuckets.setStatus('current')
rttMonHistoryAdminNumSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonHistoryAdminNumSamples.setStatus('current')
rttMonHistoryAdminFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("overThreshold", 3), ("failures", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonHistoryAdminFilter.setStatus('current')
rttMonCtrlOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9), )
if mibBuilder.loadTexts: rttMonCtrlOperTable.setStatus('current')
rttMonCtrlOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1), )
rttMonCtrlAdminEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMonCtrlOperEntry"))
rttMonCtrlOperEntry.setIndexNames(*rttMonCtrlAdminEntry.getIndexNames())
if mibBuilder.loadTexts: rttMonCtrlOperEntry.setStatus('current')
rttMonCtrlOperModificationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperModificationTime.setStatus('current')
rttMonCtrlOperDiagText = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 51))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperDiagText.setStatus('current')
rttMonCtrlOperResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperResetTime.setStatus('current')
rttMonCtrlOperOctetsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperOctetsInUse.setStatus('current')
rttMonCtrlOperConnectionLostOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperConnectionLostOccurred.setStatus('current')
rttMonCtrlOperTimeoutOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperTimeoutOccurred.setStatus('current')
rttMonCtrlOperOverThresholdOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 7), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperOverThresholdOccurred.setStatus('current')
rttMonCtrlOperNumRtts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperNumRtts.setStatus('current')
rttMonCtrlOperRttLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperRttLife.setStatus('current')
rttMonCtrlOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("reset", 1), ("orderlyStop", 2), ("immediateStop", 3), ("pending", 4), ("inactive", 5), ("active", 6), ("restart", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rttMonCtrlOperState.setStatus('current')
rttMonCtrlOperVerifyErrorOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 9, 1, 11), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonCtrlOperVerifyErrorOccurred.setStatus('current')
rttMonLatestRttOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 10), )
if mibBuilder.loadTexts: rttMonLatestRttOperTable.setStatus('current')
rttMonLatestRttOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 10, 1), )
rttMonCtrlAdminEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMonLatestRttOperEntry"))
rttMonLatestRttOperEntry.setIndexNames(*rttMonCtrlAdminEntry.getIndexNames())
if mibBuilder.loadTexts: rttMonLatestRttOperEntry.setStatus('current')
rttMonLatestRttOperCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 10, 1, 1), Gauge32()).setUnits('milliseconds/microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRttOperCompletionTime.setStatus('current')
rttMonLatestRttOperSense = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 10, 1, 2), RttResponseSense()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRttOperSense.setStatus('current')
rttMonLatestRttOperApplSpecificSense = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRttOperApplSpecificSense.setStatus('current')
rttMonLatestRttOperSenseDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRttOperSenseDescription.setStatus('current')
rttMonLatestRttOperTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 10, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRttOperTime.setStatus('current')
rttMonLatestRttOperAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 10, 1, 6), RttMonTargetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestRttOperAddress.setStatus('current')
rttMonLatestHTTPOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 1), )
if mibBuilder.loadTexts: rttMonLatestHTTPOperTable.setStatus('current')
rttMonLatestHTTPOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"))
if mibBuilder.loadTexts: rttMonLatestHTTPOperEntry.setStatus('current')
rttMonLatestHTTPOperRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestHTTPOperRTT.setStatus('current')
rttMonLatestHTTPOperDNSRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestHTTPOperDNSRTT.setStatus('current')
rttMonLatestHTTPOperTCPConnectRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestHTTPOperTCPConnectRTT.setStatus('current')
rttMonLatestHTTPOperTransactionRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestHTTPOperTransactionRTT.setStatus('current')
rttMonLatestHTTPOperMessageBodyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestHTTPOperMessageBodyOctets.setStatus('current')
rttMonLatestHTTPOperSense = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 1, 1, 6), RttResponseSense()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestHTTPOperSense.setStatus('current')
rttMonLatestHTTPErrorSenseDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestHTTPErrorSenseDescription.setStatus('current')
rttMonLatestJitterOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2), )
if mibBuilder.loadTexts: rttMonLatestJitterOperTable.setStatus('current')
rttMonLatestJitterOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"))
if mibBuilder.loadTexts: rttMonLatestJitterOperEntry.setStatus('current')
rttMonLatestJitterOperNumOfRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperNumOfRTT.setStatus('current')
rttMonLatestJitterOperRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperRTTSum.setStatus('current')
rttMonLatestJitterOperRTTSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperRTTSum2.setStatus('current')
rttMonLatestJitterOperRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperRTTMin.setStatus('current')
rttMonLatestJitterOperRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperRTTMax.setStatus('current')
rttMonLatestJitterOperMinOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperMinOfPositivesSD.setStatus('current')
rttMonLatestJitterOperMaxOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperMaxOfPositivesSD.setStatus('current')
rttMonLatestJitterOperNumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperNumOfPositivesSD.setStatus('current')
rttMonLatestJitterOperSumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperSumOfPositivesSD.setStatus('current')
rttMonLatestJitterOperSum2PositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperSum2PositivesSD.setStatus('current')
rttMonLatestJitterOperMinOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperMinOfNegativesSD.setStatus('current')
rttMonLatestJitterOperMaxOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperMaxOfNegativesSD.setStatus('current')
rttMonLatestJitterOperNumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperNumOfNegativesSD.setStatus('current')
rttMonLatestJitterOperSumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperSumOfNegativesSD.setStatus('current')
rttMonLatestJitterOperSum2NegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperSum2NegativesSD.setStatus('current')
rttMonLatestJitterOperMinOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperMinOfPositivesDS.setStatus('current')
rttMonLatestJitterOperMaxOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperMaxOfPositivesDS.setStatus('current')
rttMonLatestJitterOperNumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperNumOfPositivesDS.setStatus('current')
rttMonLatestJitterOperSumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperSumOfPositivesDS.setStatus('current')
rttMonLatestJitterOperSum2PositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperSum2PositivesDS.setStatus('current')
rttMonLatestJitterOperMinOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperMinOfNegativesDS.setStatus('current')
rttMonLatestJitterOperMaxOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperMaxOfNegativesDS.setStatus('current')
rttMonLatestJitterOperNumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperNumOfNegativesDS.setStatus('current')
rttMonLatestJitterOperSumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperSumOfNegativesDS.setStatus('current')
rttMonLatestJitterOperSum2NegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperSum2NegativesDS.setStatus('current')
rttMonLatestJitterOperPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperPacketLossSD.setStatus('current')
rttMonLatestJitterOperPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperPacketLossDS.setStatus('current')
rttMonLatestJitterOperPacketOutOfSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperPacketOutOfSequence.setStatus('current')
rttMonLatestJitterOperPacketMIA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperPacketMIA.setStatus('current')
rttMonLatestJitterOperPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperPacketLateArrival.setStatus('current')
rttMonLatestJitterOperSense = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 31), RttResponseSense()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperSense.setStatus('current')
rttMonLatestJitterErrorSenseDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterErrorSenseDescription.setStatus('current')
rttMonLatestJitterOperOWSumSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWSumSD.setStatus('current')
rttMonLatestJitterOperOWSum2SD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWSum2SD.setStatus('current')
rttMonLatestJitterOperOWMinSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWMinSD.setStatus('current')
rttMonLatestJitterOperOWMaxSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWMaxSD.setStatus('current')
rttMonLatestJitterOperOWSumDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWSumDS.setStatus('current')
rttMonLatestJitterOperOWSum2DS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWSum2DS.setStatus('current')
rttMonLatestJitterOperOWMinDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWMinDS.setStatus('current')
rttMonLatestJitterOperOWMaxDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWMaxDS.setStatus('current')
rttMonLatestJitterOperNumOfOW = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperNumOfOW.setStatus('current')
rttMonLatestJitterOperMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 42), Gauge32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(100, 500), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperMOS.setStatus('current')
rttMonLatestJitterOperICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 43), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperICPIF.setStatus('current')
rttMonLatestJitterOperIAJOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 44), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperIAJOut.setStatus('current')
rttMonLatestJitterOperIAJIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 45), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperIAJIn.setStatus('current')
rttMonLatestJitterOperAvgJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 46), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperAvgJitter.setStatus('current')
rttMonLatestJitterOperAvgSDJ = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 47), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperAvgSDJ.setStatus('current')
rttMonLatestJitterOperAvgDSJ = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 48), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperAvgDSJ.setStatus('current')
rttMonLatestJitterOperOWAvgSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 49), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWAvgSD.setStatus('current')
rttMonLatestJitterOperOWAvgDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 50), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWAvgDS.setStatus('current')
rttMonLatestJitterOperNTPState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sync", 1), ("outOfSync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperNTPState.setStatus('current')
rttMonLatestJitterOperUnSyncRTs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperUnSyncRTs.setStatus('current')
rttMonLatestJitterOperRTTSumHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperRTTSumHigh.setStatus('current')
rttMonLatestJitterOperRTTSum2High = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperRTTSum2High.setStatus('current')
rttMonLatestJitterOperOWSumSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWSumSDHigh.setStatus('current')
rttMonLatestJitterOperOWSum2SDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWSum2SDHigh.setStatus('current')
rttMonLatestJitterOperOWSumDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWSumDSHigh.setStatus('current')
rttMonLatestJitterOperOWSum2DSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperOWSum2DSHigh.setStatus('current')
rttMonLatestJitterOperNumOverThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 5, 2, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLatestJitterOperNumOverThresh.setStatus('current')
rttMonReactTriggerAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 11), )
if mibBuilder.loadTexts: rttMonReactTriggerAdminTable.setStatus('current')
rttMonReactTriggerAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 11, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonReactTriggerAdminRttMonCtrlAdminIndex"))
if mibBuilder.loadTexts: rttMonReactTriggerAdminEntry.setStatus('current')
rttMonReactTriggerAdminRttMonCtrlAdminIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rttMonReactTriggerAdminRttMonCtrlAdminIndex.setStatus('current')
rttMonReactTriggerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactTriggerAdminStatus.setStatus('current')
rttMonReactTriggerOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 12), )
if mibBuilder.loadTexts: rttMonReactTriggerOperTable.setStatus('current')
rttMonReactTriggerOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 12, 1), )
rttMonReactTriggerAdminEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMonReactTriggerOperEntry"))
rttMonReactTriggerOperEntry.setIndexNames(*rttMonReactTriggerAdminEntry.getIndexNames())
if mibBuilder.loadTexts: rttMonReactTriggerOperEntry.setStatus('current')
rttMonReactTriggerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("pending", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonReactTriggerOperState.setStatus('current')
rttMonEchoPathAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 13), )
if mibBuilder.loadTexts: rttMonEchoPathAdminTable.setStatus('current')
rttMonEchoPathAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 13, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonEchoPathAdminHopIndex"))
if mibBuilder.loadTexts: rttMonEchoPathAdminEntry.setStatus('current')
rttMonEchoPathAdminHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: rttMonEchoPathAdminHopIndex.setStatus('current')
rttMonEchoPathAdminHopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 13, 1, 2), RttMonTargetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonEchoPathAdminHopAddress.setStatus('current')
rttMonGrpScheduleAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14), )
if mibBuilder.loadTexts: rttMonGrpScheduleAdminTable.setStatus('current')
rttMonGrpScheduleAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminIndex"))
if mibBuilder.loadTexts: rttMonGrpScheduleAdminEntry.setStatus('current')
rttMonGrpScheduleAdminIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rttMonGrpScheduleAdminIndex.setStatus('current')
rttMonGrpScheduleAdminProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminProbes.setStatus('current')
rttMonGrpScheduleAdminPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminPeriod.setStatus('current')
rttMonGrpScheduleAdminFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminFrequency.setStatus('current')
rttMonGrpScheduleAdminLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminLife.setStatus('current')
rttMonGrpScheduleAdminAgeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2073600)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminAgeout.setStatus('current')
rttMonGrpScheduleAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminStatus.setStatus('current')
rttMonGrpScheduleAdminFreqMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminFreqMax.setStatus('current')
rttMonGrpScheduleAdminFreqMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminFreqMin.setStatus('current')
rttMonGrpScheduleAdminStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminStartTime.setStatus('current')
rttMonGrpScheduleAdminAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminAdd.setStatus('current')
rttMonGrpScheduleAdminDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminDelete.setStatus('current')
rttMonGrpScheduleAdminReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminReset.setStatus('current')
rttMonGrpScheduleAdminStartType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 14), RttMonScheduleStartType().clone('pending')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminStartType.setStatus('current')
rttMonGrpScheduleAdminStartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 14, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonGrpScheduleAdminStartDelay.setStatus('current')
rttMplsVpnMonCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15), )
if mibBuilder.loadTexts: rttMplsVpnMonCtrlTable.setStatus('current')
rttMplsVpnMonCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlIndex"))
if mibBuilder.loadTexts: rttMplsVpnMonCtrlEntry.setStatus('current')
rttMplsVpnMonCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rttMplsVpnMonCtrlIndex.setStatus('current')
rttMplsVpnMonCtrlRttType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 2), RttMplsVpnMonRttType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlRttType.setStatus('current')
rttMplsVpnMonCtrlVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlVrfName.setStatus('current')
rttMplsVpnMonCtrlTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlTag.setStatus('current')
rttMplsVpnMonCtrlThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlThreshold.setStatus('current')
rttMplsVpnMonCtrlTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlTimeout.setStatus('current')
rttMplsVpnMonCtrlScanInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 70560)).clone(240)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlScanInterval.setStatus('current')
rttMplsVpnMonCtrlDelScanFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlDelScanFactor.setStatus('current')
rttMplsVpnMonCtrlEXP = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlEXP.setStatus('current')
rttMplsVpnMonCtrlRequestSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384)).clone(1)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlRequestSize.setStatus('current')
rttMplsVpnMonCtrlVerifyData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlVerifyData.setStatus('current')
rttMplsVpnMonCtrlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 12), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlStorageType.setStatus('current')
rttMplsVpnMonCtrlProbeList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlProbeList.setStatus('current')
rttMplsVpnMonCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlStatus.setStatus('current')
rttMplsVpnMonCtrlLpd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 15), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlLpd.setStatus('current')
rttMplsVpnMonCtrlLpdGrpList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlLpdGrpList.setStatus('current')
rttMplsVpnMonCtrlLpdCompTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 15, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMplsVpnMonCtrlLpdCompTime.setStatus('current')
rttMplsVpnMonTypeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16), )
if mibBuilder.loadTexts: rttMplsVpnMonTypeTable.setStatus('current')
rttMplsVpnMonTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1), )
rttMplsVpnMonCtrlEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeEntry"))
rttMplsVpnMonTypeEntry.setIndexNames(*rttMplsVpnMonCtrlEntry.getIndexNames())
if mibBuilder.loadTexts: rttMplsVpnMonTypeEntry.setStatus('current')
rttMplsVpnMonTypeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeInterval.setStatus('current')
rttMplsVpnMonTypeNumPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeNumPackets.setStatus('current')
rttMplsVpnMonTypeDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeDestPort.setStatus('current')
rttMplsVpnMonTypeSecFreqType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("timeout", 2), ("connectionLoss", 3), ("both", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeSecFreqType.setStatus('current')
rttMplsVpnMonTypeSecFreqValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeSecFreqValue.setStatus('current')
rttMplsVpnMonTypeLspSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 6), OctetString().clone('7F 00 00 01')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLspSelector.setStatus('current')
rttMplsVpnMonTypeLSPReplyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 7), RttMonLSPPingReplyMode().clone('replyIpv4Udp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLSPReplyMode.setStatus('current')
rttMplsVpnMonTypeLSPTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLSPTTL.setStatus('current')
rttMplsVpnMonTypeLSPReplyDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLSPReplyDscp.setStatus('current')
rttMplsVpnMonTypeLpdMaxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLpdMaxSessions.setStatus('current')
rttMplsVpnMonTypeLpdSessTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLpdSessTimeout.setStatus('current')
rttMplsVpnMonTypeLpdEchoTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLpdEchoTimeout.setStatus('current')
rttMplsVpnMonTypeLpdEchoInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLpdEchoInterval.setStatus('current')
rttMplsVpnMonTypeLpdEchoNullShim = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLpdEchoNullShim.setStatus('current')
rttMplsVpnMonTypeLpdScanPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7200)).clone(240)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLpdScanPeriod.setStatus('current')
rttMplsVpnMonTypeLpdStatHours = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 16, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonTypeLpdStatHours.setStatus('current')
rttMplsVpnMonScheduleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 17), )
if mibBuilder.loadTexts: rttMplsVpnMonScheduleTable.setStatus('current')
rttMplsVpnMonScheduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 17, 1), )
rttMplsVpnMonCtrlEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMplsVpnMonScheduleEntry"))
rttMplsVpnMonScheduleEntry.setIndexNames(*rttMplsVpnMonCtrlEntry.getIndexNames())
if mibBuilder.loadTexts: rttMplsVpnMonScheduleEntry.setStatus('current')
rttMplsVpnMonScheduleRttStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 17, 1, 1), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonScheduleRttStartTime.setStatus('current')
rttMplsVpnMonSchedulePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonSchedulePeriod.setStatus('current')
rttMplsVpnMonScheduleFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonScheduleFrequency.setStatus('current')
rttMplsVpnMonReactTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 18), )
if mibBuilder.loadTexts: rttMplsVpnMonReactTable.setStatus('current')
rttMplsVpnMonReactEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 18, 1), )
rttMplsVpnMonCtrlEntry.registerAugmentions(("CISCO-RTTMON-MIB", "rttMplsVpnMonReactEntry"))
rttMplsVpnMonReactEntry.setIndexNames(*rttMplsVpnMonCtrlEntry.getIndexNames())
if mibBuilder.loadTexts: rttMplsVpnMonReactEntry.setStatus('current')
rttMplsVpnMonReactConnectionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 18, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonReactConnectionEnable.setStatus('current')
rttMplsVpnMonReactTimeoutEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 18, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonReactTimeoutEnable.setStatus('current')
rttMplsVpnMonReactThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("never", 1), ("immediate", 2), ("consecutive", 3))).clone('never')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonReactThresholdType.setStatus('current')
rttMplsVpnMonReactThresholdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 18, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonReactThresholdCount.setStatus('current')
rttMplsVpnMonReactActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("trapOnly", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonReactActionType.setStatus('current')
rttMplsVpnMonReactLpdNotifyType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 18, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("lpdPathDiscovery", 2), ("lpdGroupStatus", 3), ("lpdAll", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonReactLpdNotifyType.setStatus('current')
rttMplsVpnMonReactLpdRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 18, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setUnits('attempts').setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMplsVpnMonReactLpdRetryCount.setStatus('current')
rttMonReactTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19), )
if mibBuilder.loadTexts: rttMonReactTable.setStatus('current')
rttMonReactEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonReactConfigIndex"))
if mibBuilder.loadTexts: rttMonReactEntry.setStatus('current')
rttMonReactConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rttMonReactConfigIndex.setStatus('current')
rttMonReactVar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 2), RttMonReactVar()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactVar.setStatus('current')
rttMonReactThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("never", 1), ("immediate", 2), ("consecutive", 3), ("xOfy", 4), ("average", 5))).clone('never')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactThresholdType.setStatus('current')
rttMonReactActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("trapOnly", 2), ("triggerOnly", 3), ("trapAndTrigger", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactActionType.setStatus('current')
rttMonReactThresholdRising = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactThresholdRising.setStatus('current')
rttMonReactThresholdFalling = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactThresholdFalling.setStatus('current')
rttMonReactThresholdCountX = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactThresholdCountX.setStatus('current')
rttMonReactThresholdCountY = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactThresholdCountY.setStatus('current')
rttMonReactValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonReactValue.setStatus('current')
rttMonReactOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 10), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonReactOccurred.setStatus('current')
rttMonReactStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 19, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rttMonReactStatus.setStatus('current')
rttMonGeneratedOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 20), )
if mibBuilder.loadTexts: rttMonGeneratedOperTable.setStatus('current')
rttMonGeneratedOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 20, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonGeneratedOperRespIpAddrType"), (0, "CISCO-RTTMON-MIB", "rttMonGeneratedOperRespIpAddr"))
if mibBuilder.loadTexts: rttMonGeneratedOperEntry.setStatus('current')
rttMonGeneratedOperRespIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 20, 1, 1), InetAddressType())
if mibBuilder.loadTexts: rttMonGeneratedOperRespIpAddrType.setStatus('current')
rttMonGeneratedOperRespIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 20, 1, 2), InetAddress())
if mibBuilder.loadTexts: rttMonGeneratedOperRespIpAddr.setStatus('current')
rttMonGeneratedOperCtrlAdminIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 2, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonGeneratedOperCtrlAdminIndex.setStatus('current')
rttMonStatsCaptureTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1), )
if mibBuilder.loadTexts: rttMonStatsCaptureTable.setStatus('current')
rttMonStatsCaptureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonStatsCaptureStartTimeIndex"), (0, "CISCO-RTTMON-MIB", "rttMonStatsCapturePathIndex"), (0, "CISCO-RTTMON-MIB", "rttMonStatsCaptureHopIndex"), (0, "CISCO-RTTMON-MIB", "rttMonStatsCaptureDistIndex"))
if mibBuilder.loadTexts: rttMonStatsCaptureEntry.setStatus('current')
rttMonStatsCaptureStartTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 1), TimeStamp())
if mibBuilder.loadTexts: rttMonStatsCaptureStartTimeIndex.setStatus('current')
rttMonStatsCapturePathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: rttMonStatsCapturePathIndex.setStatus('current')
rttMonStatsCaptureHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: rttMonStatsCaptureHopIndex.setStatus('current')
rttMonStatsCaptureDistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: rttMonStatsCaptureDistIndex.setStatus('current')
rttMonStatsCaptureCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCaptureCompletions.setStatus('current')
rttMonStatsCaptureOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCaptureOverThresholds.setStatus('current')
rttMonStatsCaptureSumCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 7), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCaptureSumCompletionTime.setStatus('current')
rttMonStatsCaptureSumCompletionTime2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCaptureSumCompletionTime2Low.setStatus('current')
rttMonStatsCaptureSumCompletionTime2High = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCaptureSumCompletionTime2High.setStatus('current')
rttMonStatsCaptureCompletionTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 10), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCaptureCompletionTimeMax.setStatus('current')
rttMonStatsCaptureCompletionTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 1, 1, 11), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCaptureCompletionTimeMin.setStatus('current')
rttMonStatsCollectTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2), )
if mibBuilder.loadTexts: rttMonStatsCollectTable.setStatus('current')
rttMonStatsCollectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonStatsCaptureStartTimeIndex"), (0, "CISCO-RTTMON-MIB", "rttMonStatsCapturePathIndex"), (0, "CISCO-RTTMON-MIB", "rttMonStatsCaptureHopIndex"))
if mibBuilder.loadTexts: rttMonStatsCollectEntry.setStatus('current')
rttMonStatsCollectNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectNumDisconnects.setStatus('current')
rttMonStatsCollectTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectTimeouts.setStatus('current')
rttMonStatsCollectBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectBusies.setStatus('current')
rttMonStatsCollectNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectNoConnections.setStatus('current')
rttMonStatsCollectDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectDrops.setStatus('current')
rttMonStatsCollectSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectSequenceErrors.setStatus('current')
rttMonStatsCollectVerifyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectVerifyErrors.setStatus('current')
rttMonStatsCollectAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 8), RttMonTargetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectAddress.setStatus('current')
rttMonControlEnableErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonControlEnableErrors.setStatus('deprecated')
rttMonStatsRetrieveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsRetrieveErrors.setStatus('deprecated')
rttMonStatsCollectCtrlEnErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectCtrlEnErrors.setStatus('current')
rttMonStatsCollectRetrieveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsCollectRetrieveErrors.setStatus('current')
rttMonStatsTotalsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 3), )
if mibBuilder.loadTexts: rttMonStatsTotalsTable.setStatus('current')
rttMonStatsTotalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonStatsCaptureStartTimeIndex"))
if mibBuilder.loadTexts: rttMonStatsTotalsEntry.setStatus('current')
rttMonStatsTotalsElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 3, 1, 1), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsTotalsElapsedTime.setStatus('current')
rttMonStatsTotalsInitiations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonStatsTotalsInitiations.setStatus('current')
rttMonHTTPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4), )
if mibBuilder.loadTexts: rttMonHTTPStatsTable.setStatus('current')
rttMonHTTPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonHTTPStatsStartTimeIndex"))
if mibBuilder.loadTexts: rttMonHTTPStatsEntry.setStatus('current')
rttMonHTTPStatsStartTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 1), TimeStamp())
if mibBuilder.loadTexts: rttMonHTTPStatsStartTimeIndex.setStatus('current')
rttMonHTTPStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsCompletions.setStatus('current')
rttMonHTTPStatsOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsOverThresholds.setStatus('current')
rttMonHTTPStatsRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsRTTSum.setStatus('current')
rttMonHTTPStatsRTTSum2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsRTTSum2Low.setStatus('current')
rttMonHTTPStatsRTTSum2High = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsRTTSum2High.setStatus('current')
rttMonHTTPStatsRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsRTTMin.setStatus('current')
rttMonHTTPStatsRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 8), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsRTTMax.setStatus('current')
rttMonHTTPStatsDNSRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsDNSRTTSum.setStatus('current')
rttMonHTTPStatsTCPConnectRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsTCPConnectRTTSum.setStatus('current')
rttMonHTTPStatsTransactionRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsTransactionRTTSum.setStatus('current')
rttMonHTTPStatsMessageBodyOctetsSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsMessageBodyOctetsSum.setStatus('current')
rttMonHTTPStatsDNSServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsDNSServerTimeout.setStatus('current')
rttMonHTTPStatsTCPConnectTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsTCPConnectTimeout.setStatus('current')
rttMonHTTPStatsTransactionTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsTransactionTimeout.setStatus('current')
rttMonHTTPStatsDNSQueryError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsDNSQueryError.setStatus('current')
rttMonHTTPStatsHTTPError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsHTTPError.setStatus('current')
rttMonHTTPStatsError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsError.setStatus('current')
rttMonHTTPStatsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHTTPStatsBusies.setStatus('current')
rttMonJitterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5), )
if mibBuilder.loadTexts: rttMonJitterStatsTable.setStatus('current')
rttMonJitterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonJitterStatsStartTimeIndex"))
if mibBuilder.loadTexts: rttMonJitterStatsEntry.setStatus('current')
rttMonJitterStatsStartTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 1), TimeStamp())
if mibBuilder.loadTexts: rttMonJitterStatsStartTimeIndex.setStatus('current')
rttMonJitterStatsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsCompletions.setStatus('current')
rttMonJitterStatsOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOverThresholds.setStatus('current')
rttMonJitterStatsNumOfRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsNumOfRTT.setStatus('current')
rttMonJitterStatsRTTSum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsRTTSum.setStatus('current')
rttMonJitterStatsRTTSum2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsRTTSum2Low.setStatus('current')
rttMonJitterStatsRTTSum2High = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsRTTSum2High.setStatus('current')
rttMonJitterStatsRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsRTTMin.setStatus('current')
rttMonJitterStatsRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsRTTMax.setStatus('current')
rttMonJitterStatsMinOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMinOfPositivesSD.setStatus('current')
rttMonJitterStatsMaxOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMaxOfPositivesSD.setStatus('current')
rttMonJitterStatsNumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsNumOfPositivesSD.setStatus('current')
rttMonJitterStatsSumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSumOfPositivesSD.setStatus('current')
rttMonJitterStatsSum2PositivesSDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSum2PositivesSDLow.setStatus('current')
rttMonJitterStatsSum2PositivesSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSum2PositivesSDHigh.setStatus('current')
rttMonJitterStatsMinOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMinOfNegativesSD.setStatus('current')
rttMonJitterStatsMaxOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMaxOfNegativesSD.setStatus('current')
rttMonJitterStatsNumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsNumOfNegativesSD.setStatus('current')
rttMonJitterStatsSumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSumOfNegativesSD.setStatus('current')
rttMonJitterStatsSum2NegativesSDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSum2NegativesSDLow.setStatus('current')
rttMonJitterStatsSum2NegativesSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSum2NegativesSDHigh.setStatus('current')
rttMonJitterStatsMinOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMinOfPositivesDS.setStatus('current')
rttMonJitterStatsMaxOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMaxOfPositivesDS.setStatus('current')
rttMonJitterStatsNumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsNumOfPositivesDS.setStatus('current')
rttMonJitterStatsSumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSumOfPositivesDS.setStatus('current')
rttMonJitterStatsSum2PositivesDSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSum2PositivesDSLow.setStatus('current')
rttMonJitterStatsSum2PositivesDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSum2PositivesDSHigh.setStatus('current')
rttMonJitterStatsMinOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMinOfNegativesDS.setStatus('current')
rttMonJitterStatsMaxOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMaxOfNegativesDS.setStatus('current')
rttMonJitterStatsNumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsNumOfNegativesDS.setStatus('current')
rttMonJitterStatsSumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSumOfNegativesDS.setStatus('current')
rttMonJitterStatsSum2NegativesDSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSum2NegativesDSLow.setStatus('current')
rttMonJitterStatsSum2NegativesDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsSum2NegativesDSHigh.setStatus('current')
rttMonJitterStatsPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsPacketLossSD.setStatus('current')
rttMonJitterStatsPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsPacketLossDS.setStatus('current')
rttMonJitterStatsPacketOutOfSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsPacketOutOfSequence.setStatus('current')
rttMonJitterStatsPacketMIA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsPacketMIA.setStatus('current')
rttMonJitterStatsPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsPacketLateArrival.setStatus('current')
rttMonJitterStatsError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsError.setStatus('current')
rttMonJitterStatsBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsBusies.setStatus('current')
rttMonJitterStatsOWSumSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWSumSD.setStatus('current')
rttMonJitterStatsOWSum2SDLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWSum2SDLow.setStatus('current')
rttMonJitterStatsOWSum2SDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWSum2SDHigh.setStatus('current')
rttMonJitterStatsOWMinSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWMinSD.setStatus('deprecated')
rttMonJitterStatsOWMaxSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWMaxSD.setStatus('deprecated')
rttMonJitterStatsOWSumDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWSumDS.setStatus('current')
rttMonJitterStatsOWSum2DSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWSum2DSLow.setStatus('current')
rttMonJitterStatsOWSum2DSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWSum2DSHigh.setStatus('current')
rttMonJitterStatsOWMinDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWMinDS.setStatus('deprecated')
rttMonJitterStatsOWMaxDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWMaxDS.setStatus('deprecated')
rttMonJitterStatsNumOfOW = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsNumOfOW.setStatus('current')
rttMonJitterStatsOWMinSDNew = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWMinSDNew.setStatus('current')
rttMonJitterStatsOWMaxSDNew = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWMaxSDNew.setStatus('current')
rttMonJitterStatsOWMinDSNew = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWMinDSNew.setStatus('current')
rttMonJitterStatsOWMaxDSNew = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWMaxDSNew.setStatus('current')
rttMonJitterStatsMinOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 56), Gauge32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(100, 500), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMinOfMOS.setStatus('current')
rttMonJitterStatsMaxOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 57), Gauge32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(100, 500), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMaxOfMOS.setStatus('current')
rttMonJitterStatsMinOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMinOfICPIF.setStatus('current')
rttMonJitterStatsMaxOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsMaxOfICPIF.setStatus('current')
rttMonJitterStatsIAJOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsIAJOut.setStatus('current')
rttMonJitterStatsIAJIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsIAJIn.setStatus('current')
rttMonJitterStatsAvgJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsAvgJitter.setStatus('current')
rttMonJitterStatsAvgJitterSD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsAvgJitterSD.setStatus('current')
rttMonJitterStatsAvgJitterDS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsAvgJitterDS.setStatus('current')
rttMonJitterStatsUnSyncRTs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsUnSyncRTs.setStatus('current')
rttMonJitterStatsRTTSumHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsRTTSumHigh.setStatus('current')
rttMonJitterStatsOWSumSDHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWSumSDHigh.setStatus('current')
rttMonJitterStatsOWSumDSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsOWSumDSHigh.setStatus('current')
rttMonJitterStatsNumOverThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 5, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonJitterStatsNumOverThresh.setStatus('current')
rttMonLpdGrpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7), )
if mibBuilder.loadTexts: rttMonLpdGrpStatsTable.setStatus('current')
rttMonLpdGrpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonLpdGrpStatsGroupIndex"), (0, "CISCO-RTTMON-MIB", "rttMonLpdGrpStatsStartTimeIndex"))
if mibBuilder.loadTexts: rttMonLpdGrpStatsEntry.setStatus('current')
rttMonLpdGrpStatsGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rttMonLpdGrpStatsGroupIndex.setStatus('current')
rttMonLpdGrpStatsStartTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 2), TimeStamp())
if mibBuilder.loadTexts: rttMonLpdGrpStatsStartTimeIndex.setStatus('current')
rttMonLpdGrpStatsTargetPE = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 3), RttMonTargetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsTargetPE.setStatus('current')
rttMonLpdGrpStatsNumOfPass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('passes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsNumOfPass.setStatus('current')
rttMonLpdGrpStatsNumOfFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsNumOfFail.setStatus('current')
rttMonLpdGrpStatsNumOfTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsNumOfTimeout.setStatus('current')
rttMonLpdGrpStatsAvgRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsAvgRTT.setStatus('current')
rttMonLpdGrpStatsMinRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsMinRTT.setStatus('current')
rttMonLpdGrpStatsMaxRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsMaxRTT.setStatus('current')
rttMonLpdGrpStatsMinNumPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('paths').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsMinNumPaths.setStatus('current')
rttMonLpdGrpStatsMaxNumPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('paths').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsMaxNumPaths.setStatus('current')
rttMonLpdGrpStatsLPDStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 12), TimeStamp()).setUnits('tenths of milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsLPDStartTime.setStatus('current')
rttMonLpdGrpStatsLPDFailOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsLPDFailOccurred.setStatus('current')
rttMonLpdGrpStatsLPDFailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 14), RttMplsVpnMonLpdFailureSense()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsLPDFailCause.setStatus('current')
rttMonLpdGrpStatsLPDCompTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsLPDCompTime.setStatus('current')
rttMonLpdGrpStatsGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 16), RttMplsVpnMonLpdGrpStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsGroupStatus.setStatus('current')
rttMonLpdGrpStatsGroupProbeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('identifier').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsGroupProbeIndex.setStatus('current')
rttMonLpdGrpStatsPathIds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsPathIds.setStatus('current')
rttMonLpdGrpStatsProbeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsProbeStatus.setStatus('current')
rttMonLpdGrpStatsResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 3, 7, 1, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonLpdGrpStatsResetTime.setStatus('current')
rttMonHistoryCollectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1), )
if mibBuilder.loadTexts: rttMonHistoryCollectionTable.setStatus('current')
rttMonHistoryCollectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-RTTMON-MIB", "rttMonCtrlAdminIndex"), (0, "CISCO-RTTMON-MIB", "rttMonHistoryCollectionLifeIndex"), (0, "CISCO-RTTMON-MIB", "rttMonHistoryCollectionBucketIndex"), (0, "CISCO-RTTMON-MIB", "rttMonHistoryCollectionSampleIndex"))
if mibBuilder.loadTexts: rttMonHistoryCollectionEntry.setStatus('current')
rttMonHistoryCollectionLifeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rttMonHistoryCollectionLifeIndex.setStatus('current')
rttMonHistoryCollectionBucketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rttMonHistoryCollectionBucketIndex.setStatus('current')
rttMonHistoryCollectionSampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: rttMonHistoryCollectionSampleIndex.setStatus('current')
rttMonHistoryCollectionSampleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHistoryCollectionSampleTime.setStatus('current')
rttMonHistoryCollectionAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1, 5), RttMonTargetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHistoryCollectionAddress.setStatus('current')
rttMonHistoryCollectionCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1, 6), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHistoryCollectionCompletionTime.setStatus('current')
rttMonHistoryCollectionSense = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1, 7), RttResponseSense()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHistoryCollectionSense.setStatus('current')
rttMonHistoryCollectionApplSpecificSense = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHistoryCollectionApplSpecificSense.setStatus('current')
rttMonHistoryCollectionSenseDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 42, 1, 4, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rttMonHistoryCollectionSenseDescription.setStatus('current')
rttMonNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 2))
rttMonNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 2, 0))
rttMonConnectionChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 42, 2, 0, 1)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminTag"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionAddress"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperConnectionLostOccurred"))
if mibBuilder.loadTexts: rttMonConnectionChangeNotification.setStatus('deprecated')
rttMonTimeoutNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 42, 2, 0, 2)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminTag"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionAddress"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperTimeoutOccurred"))
if mibBuilder.loadTexts: rttMonTimeoutNotification.setStatus('deprecated')
rttMonThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 42, 2, 0, 3)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminTag"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionAddress"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperOverThresholdOccurred"))
if mibBuilder.loadTexts: rttMonThresholdNotification.setStatus('deprecated')
rttMonVerifyErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 42, 2, 0, 4)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminTag"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionAddress"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperVerifyErrorOccurred"))
if mibBuilder.loadTexts: rttMonVerifyErrorNotification.setStatus('deprecated')
rttMonNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 42, 2, 0, 5)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminTag"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionAddress"), ("CISCO-RTTMON-MIB", "rttMonReactVar"), ("CISCO-RTTMON-MIB", "rttMonReactOccurred"), ("CISCO-RTTMON-MIB", "rttMonReactValue"), ("CISCO-RTTMON-MIB", "rttMonReactThresholdRising"), ("CISCO-RTTMON-MIB", "rttMonReactThresholdFalling"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPSelector"))
if mibBuilder.loadTexts: rttMonNotification.setStatus('deprecated')
rttMonLpdDiscoveryNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 42, 2, 0, 6)).setObjects(("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlTag"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsTargetPE"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsLPDFailCause"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsLPDFailOccurred"))
if mibBuilder.loadTexts: rttMonLpdDiscoveryNotification.setStatus('current')
rttMonLpdGrpStatusNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 42, 2, 0, 7)).setObjects(("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlTag"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsTargetPE"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsGroupStatus"))
if mibBuilder.loadTexts: rttMonLpdGrpStatusNotification.setStatus('current')
rttMonNotificationV2 = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 42, 2, 0, 8)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminLongTag"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionAddress"), ("CISCO-RTTMON-MIB", "rttMonReactVar"), ("CISCO-RTTMON-MIB", "rttMonReactOccurred"), ("CISCO-RTTMON-MIB", "rttMonReactValue"), ("CISCO-RTTMON-MIB", "rttMonReactThresholdRising"), ("CISCO-RTTMON-MIB", "rttMonReactThresholdFalling"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPSelector"))
if mibBuilder.loadTexts: rttMonNotificationV2.setStatus('current')
ciscoRttMonMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 3))
ciscoRttMonMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1))
ciscoRttMonMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2))
ciscoRttMonMibComplianceRev12 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 12)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev12 = ciscoRttMonMibComplianceRev12.setStatus('deprecated')
ciscoRttMonMibComplianceRev13 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 13)).setObjects(("CISCO-RTTMON-MIB", "ciscoRttMonDeprecatedGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev13 = ciscoRttMonMibComplianceRev13.setStatus('deprecated')
ciscoRttMonMibComplianceRev14 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 14)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev14 = ciscoRttMonMibComplianceRev14.setStatus('deprecated')
ciscoRttMonMibComplianceRev15 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 15)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev18"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev15 = ciscoRttMonMibComplianceRev15.setStatus('deprecated')
ciscoRttMonMibComplianceRev16 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 16)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev18"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev16 = ciscoRttMonMibComplianceRev16.setStatus('deprecated')
ciscoRttMonMibComplianceRev17 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 17)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev19"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev18"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev17 = ciscoRttMonMibComplianceRev17.setStatus('deprecated')
ciscoRttMonMibComplianceRev18 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 18)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev19"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev18"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev20"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev18 = ciscoRttMonMibComplianceRev18.setStatus('deprecated')
ciscoRttMonMibComplianceRev19 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 19)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev19"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev18"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev20"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev21"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev22"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev19 = ciscoRttMonMibComplianceRev19.setStatus('deprecated')
ciscoRttMonMibComplianceRev20 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 20)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev24"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev25"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev19"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev18"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev20"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev21"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev22"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev23"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev20 = ciscoRttMonMibComplianceRev20.setStatus('deprecated')
ciscoRttMonMibComplianceRev21 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 21)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev24"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev25"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev28"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev19"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev18"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev20"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev21"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev22"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev23"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev26"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev27"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev21 = ciscoRttMonMibComplianceRev21.setStatus('deprecated')
ciscoRttMonMibComplianceRev22 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 22)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev24"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev25"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev28"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev19"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev18"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev20"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev21"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev22"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev23"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev26"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev27"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev29"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev22 = ciscoRttMonMibComplianceRev22.setStatus('deprecated')
ciscoRttMonMibComplianceRev23 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 1, 23)).setObjects(("CISCO-RTTMON-MIB", "ciscoStatsGroup"), ("CISCO-RTTMON-MIB", "ciscoHistoryGroup"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoLatestOperGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev5"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev3"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev6"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev11"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev14"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev1"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev24"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev25"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev28"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev9"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev10"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev19"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev18"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev17"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev16"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev15"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev8"), ("CISCO-RTTMON-MIB", "ciscoStatsGroupRev7"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev13"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev2"), ("CISCO-RTTMON-MIB", "ciscoApplGroupRev4"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev12"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev20"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev21"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev22"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev23"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev26"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev27"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev29"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev30"), ("CISCO-RTTMON-MIB", "ciscoCtrlGroupRev31"), ("CISCO-RTTMON-MIB", "ciscoNotificationGroupRev3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonMibComplianceRev23 = ciscoRttMonMibComplianceRev23.setStatus('current')
ciscoStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 3)).setObjects(("CISCO-RTTMON-MIB", "rttMonStatsCaptureCompletions"), ("CISCO-RTTMON-MIB", "rttMonStatsCaptureOverThresholds"), ("CISCO-RTTMON-MIB", "rttMonStatsCaptureSumCompletionTime"), ("CISCO-RTTMON-MIB", "rttMonStatsCaptureSumCompletionTime2Low"), ("CISCO-RTTMON-MIB", "rttMonStatsCaptureSumCompletionTime2High"), ("CISCO-RTTMON-MIB", "rttMonStatsCaptureCompletionTimeMax"), ("CISCO-RTTMON-MIB", "rttMonStatsCaptureCompletionTimeMin"), ("CISCO-RTTMON-MIB", "rttMonStatsCollectNumDisconnects"), ("CISCO-RTTMON-MIB", "rttMonStatsCollectTimeouts"), ("CISCO-RTTMON-MIB", "rttMonStatsCollectBusies"), ("CISCO-RTTMON-MIB", "rttMonStatsCollectNoConnections"), ("CISCO-RTTMON-MIB", "rttMonStatsCollectDrops"), ("CISCO-RTTMON-MIB", "rttMonStatsCollectSequenceErrors"), ("CISCO-RTTMON-MIB", "rttMonStatsCollectVerifyErrors"), ("CISCO-RTTMON-MIB", "rttMonStatsCollectAddress"), ("CISCO-RTTMON-MIB", "rttMonStatsTotalsElapsedTime"), ("CISCO-RTTMON-MIB", "rttMonStatsTotalsInitiations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroup = ciscoStatsGroup.setStatus('current')
ciscoHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 4)).setObjects(("CISCO-RTTMON-MIB", "rttMonHistoryCollectionSampleTime"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionAddress"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionCompletionTime"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionSense"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionApplSpecificSense"), ("CISCO-RTTMON-MIB", "rttMonHistoryCollectionSenseDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoHistoryGroup = ciscoHistoryGroup.setStatus('current')
ciscoCtrlGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 5)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetPort"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminSourceAddress"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminSourcePort"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminControlEnable"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminTOS"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminLSREnable"), ("CISCO-RTTMON-MIB", "rttMonEchoPathAdminHopAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev1 = ciscoCtrlGroupRev1.setStatus('current')
ciscoCtrlGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 6)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetAddressString"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminNameServer"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminOperation"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminHTTPVersion"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminURL"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminCache"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminInterval"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminNumPackets"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminProxy"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminString1"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminString2"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminString3"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminString4"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminString5"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev2 = ciscoCtrlGroupRev2.setStatus('current')
ciscoLatestOperGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 7)).setObjects(("CISCO-RTTMON-MIB", "rttMonLatestHTTPOperRTT"), ("CISCO-RTTMON-MIB", "rttMonLatestHTTPOperDNSRTT"), ("CISCO-RTTMON-MIB", "rttMonLatestHTTPOperTCPConnectRTT"), ("CISCO-RTTMON-MIB", "rttMonLatestHTTPOperTransactionRTT"), ("CISCO-RTTMON-MIB", "rttMonLatestHTTPOperMessageBodyOctets"), ("CISCO-RTTMON-MIB", "rttMonLatestHTTPOperSense"), ("CISCO-RTTMON-MIB", "rttMonLatestHTTPErrorSenseDescription"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperNumOfRTT"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperRTTSum"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperRTTSum2"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperRTTMin"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperRTTMax"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperMinOfPositivesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperMaxOfPositivesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperNumOfPositivesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperSumOfPositivesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperSum2PositivesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperMinOfNegativesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperMaxOfNegativesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperNumOfNegativesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperSumOfNegativesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperSum2NegativesSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperMinOfPositivesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperMaxOfPositivesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperNumOfPositivesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperSumOfPositivesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperSum2PositivesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperMinOfNegativesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperMaxOfNegativesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperNumOfNegativesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperSumOfNegativesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperSum2NegativesDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperPacketLossSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperPacketLossDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperPacketOutOfSequence"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperPacketMIA"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperPacketLateArrival"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperSense"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterErrorSenseDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLatestOperGroupRev1 = ciscoLatestOperGroupRev1.setStatus('current')
ciscoStatsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 8)).setObjects(("CISCO-RTTMON-MIB", "rttMonHTTPStatsCompletions"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsOverThresholds"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsRTTSum"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsRTTSum2Low"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsRTTSum2High"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsRTTMin"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsRTTMax"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsDNSRTTSum"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsTCPConnectRTTSum"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsTransactionRTTSum"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsMessageBodyOctetsSum"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsDNSServerTimeout"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsTCPConnectTimeout"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsTransactionTimeout"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsDNSQueryError"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsHTTPError"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsError"), ("CISCO-RTTMON-MIB", "rttMonHTTPStatsBusies"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsCompletions"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOverThresholds"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsNumOfRTT"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsRTTSum"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsRTTSum2Low"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsRTTSum2High"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsRTTMin"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsRTTMax"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMinOfPositivesSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMaxOfPositivesSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsNumOfPositivesSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSumOfPositivesSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSum2PositivesSDLow"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSum2PositivesSDHigh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMinOfNegativesSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMaxOfNegativesSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsNumOfNegativesSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSumOfNegativesSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSum2NegativesSDLow"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSum2NegativesSDHigh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMinOfPositivesDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMaxOfPositivesDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsNumOfPositivesDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSumOfPositivesDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSum2PositivesDSLow"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSum2PositivesDSHigh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMinOfNegativesDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMaxOfNegativesDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsNumOfNegativesDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSumOfNegativesDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSum2NegativesDSLow"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsSum2NegativesDSHigh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsPacketLossSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsPacketLossDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsPacketOutOfSequence"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsPacketMIA"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsPacketLateArrival"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsError"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsBusies"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroupRev1 = ciscoStatsGroupRev1.setStatus('current')
ciscoApplGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 11)).setObjects(("CISCO-RTTMON-MIB", "rttMonApplResponder"), ("CISCO-RTTMON-MIB", "rttMonApplAuthKeyChain"), ("CISCO-RTTMON-MIB", "rttMonApplAuthKeyString1"), ("CISCO-RTTMON-MIB", "rttMonApplAuthKeyString2"), ("CISCO-RTTMON-MIB", "rttMonApplAuthKeyString3"), ("CISCO-RTTMON-MIB", "rttMonApplAuthKeyString4"), ("CISCO-RTTMON-MIB", "rttMonApplAuthKeyString5"), ("CISCO-RTTMON-MIB", "rttMonApplAuthStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoApplGroupRev2 = ciscoApplGroupRev2.setStatus('current')
ciscoCtrlGroupRev4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 12)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminVrfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev4 = ciscoCtrlGroupRev4.setStatus('current')
ciscoStatsGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 14)).setObjects(("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWSumSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWSum2SD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWMinSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWMaxSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWSumDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWSum2DS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWMinDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWMaxDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperNumOfOW"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWSumSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWSum2SDLow"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWSum2SDHigh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWSumDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWSum2DSLow"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWSum2DSHigh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsNumOfOW"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWMinSDNew"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWMaxSDNew"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWMinDSNew"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWMaxDSNew"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroupRev3 = ciscoStatsGroupRev3.setStatus('current')
ciscoCtrlGroupRev6 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 16)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminCodecType"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminCodecInterval"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminCodecPayload"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminCodecNumPackets"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminICPIFAdvFactor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev6 = ciscoCtrlGroupRev6.setStatus('current')
ciscoStatsGroupRev4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 17)).setObjects(("CISCO-RTTMON-MIB", "rttMonLatestJitterOperMOS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperICPIF"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMinOfMOS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMaxOfMOS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMinOfICPIF"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsMaxOfICPIF"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroupRev4 = ciscoStatsGroupRev4.setStatus('current')
ciscoNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 18)).setObjects(("CISCO-RTTMON-MIB", "rttMonConnectionChangeNotification"), ("CISCO-RTTMON-MIB", "rttMonTimeoutNotification"), ("CISCO-RTTMON-MIB", "rttMonThresholdNotification"), ("CISCO-RTTMON-MIB", "rttMonVerifyErrorNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNotificationGroup = ciscoNotificationGroup.setStatus('deprecated')
ciscoApplGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 19)).setObjects(("CISCO-RTTMON-MIB", "rttMonApplVersion"), ("CISCO-RTTMON-MIB", "rttMonApplMaxPacketDataSize"), ("CISCO-RTTMON-MIB", "rttMonApplTimeOfLastSet"), ("CISCO-RTTMON-MIB", "rttMonApplSupportedRttTypesValid"), ("CISCO-RTTMON-MIB", "rttMonApplSupportedProtocolsValid"), ("CISCO-RTTMON-MIB", "rttMonApplNumCtrlAdminEntry"), ("CISCO-RTTMON-MIB", "rttMonApplReset"), ("CISCO-RTTMON-MIB", "rttMonApplProbeCapacity"), ("CISCO-RTTMON-MIB", "rttMonApplFreeMemLowWaterMark"), ("CISCO-RTTMON-MIB", "rttMonApplLatestSetError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoApplGroupRev3 = ciscoApplGroupRev3.setStatus('current')
ciscoCtrlGroupRev7 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 20)).setObjects(("CISCO-RTTMON-MIB", "rttMonScheduleAdminRttRecurring"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminProbes"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminPeriod"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminFrequency"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminLife"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminAgeout"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev7 = ciscoCtrlGroupRev7.setStatus('current')
ciscoCtrlGroupRev8 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 21)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPFECType"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPSelector"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPReplyMode"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPTTL"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPExp"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlRttType"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlVrfName"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlTag"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlThreshold"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlTimeout"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlScanInterval"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlDelScanFactor"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlEXP"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlRequestSize"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlVerifyData"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlStorageType"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlProbeList"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlStatus"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeInterval"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeNumPackets"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeDestPort"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeSecFreqType"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeSecFreqValue"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLspSelector"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLSPReplyMode"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLSPTTL"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonScheduleRttStartTime"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonSchedulePeriod"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonScheduleFrequency"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonReactConnectionEnable"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonReactTimeoutEnable"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonReactThresholdType"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonReactThresholdCount"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonReactActionType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev8 = ciscoCtrlGroupRev8.setStatus('current')
ciscoStatsGroupRev5 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 22)).setObjects(("CISCO-RTTMON-MIB", "rttMonJitterStatsIAJOut"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsIAJIn"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsAvgJitter"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsAvgJitterSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsAvgJitterDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsUnSyncRTs"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperIAJIn"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperIAJOut"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperAvgJitter"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperAvgSDJ"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperAvgDSJ"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWAvgSD"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWAvgDS"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperNTPState"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperUnSyncRTs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroupRev5 = ciscoStatsGroupRev5.setStatus('current')
ciscoCtrlGroupRev9 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 23)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminPrecision"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminProbePakPriority"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminOWNTPSyncTolAbs"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminOWNTPSyncTolPct"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminOWNTPSyncTolType"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminCalledNumber"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminDetectPoint"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminGKRegistration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev9 = ciscoCtrlGroupRev9.setStatus('current')
ciscoCtrlGroupRev10 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 24)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminOwner"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminTag"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminRttType"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminThreshold"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminFrequency"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminTimeout"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminVerifyData"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminStatus"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminNvgen"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminProtocol"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetAddress"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminPktDataRequestSize"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminPktDataResponseSize"), ("CISCO-RTTMON-MIB", "rttMonScheduleAdminRttLife"), ("CISCO-RTTMON-MIB", "rttMonScheduleAdminRttStartTime"), ("CISCO-RTTMON-MIB", "rttMonScheduleAdminConceptRowAgeout"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminNumHourGroups"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminNumPaths"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminNumHops"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminNumDistBuckets"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminDistInterval"), ("CISCO-RTTMON-MIB", "rttMonHistoryAdminNumLives"), ("CISCO-RTTMON-MIB", "rttMonHistoryAdminNumBuckets"), ("CISCO-RTTMON-MIB", "rttMonHistoryAdminNumSamples"), ("CISCO-RTTMON-MIB", "rttMonHistoryAdminFilter"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperModificationTime"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperDiagText"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperResetTime"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperOctetsInUse"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperConnectionLostOccurred"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperTimeoutOccurred"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperVerifyErrorOccurred"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperOverThresholdOccurred"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperNumRtts"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperRttLife"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperState"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperCompletionTime"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperSense"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperApplSpecificSense"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperSenseDescription"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperTime"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperAddress"), ("CISCO-RTTMON-MIB", "rttMonReactTriggerAdminStatus"), ("CISCO-RTTMON-MIB", "rttMonReactTriggerOperState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev10 = ciscoCtrlGroupRev10.setStatus('deprecated')
ciscoCtrlGroupRev11 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 25)).setObjects(("CISCO-RTTMON-MIB", "rttMonReactVar"), ("CISCO-RTTMON-MIB", "rttMonReactThresholdType"), ("CISCO-RTTMON-MIB", "rttMonReactActionType"), ("CISCO-RTTMON-MIB", "rttMonReactThresholdRising"), ("CISCO-RTTMON-MIB", "rttMonReactThresholdFalling"), ("CISCO-RTTMON-MIB", "rttMonReactThresholdCountX"), ("CISCO-RTTMON-MIB", "rttMonReactThresholdCountY"), ("CISCO-RTTMON-MIB", "rttMonReactValue"), ("CISCO-RTTMON-MIB", "rttMonReactOccurred"), ("CISCO-RTTMON-MIB", "rttMonReactStatus"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminFreqMax"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminFreqMin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev11 = ciscoCtrlGroupRev11.setStatus('current')
ciscoNotificationGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 26)).setObjects(("CISCO-RTTMON-MIB", "rttMonNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNotificationGroupRev1 = ciscoNotificationGroupRev1.setStatus('current')
ciscoCtrlGroupRev12 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 27)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminSourceVoicePort"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminCallDuration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev12 = ciscoCtrlGroupRev12.setStatus('current')
ciscoCtrlGroupRev13 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 29)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPReplyDscp"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPNullShim"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlLpd"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlLpdGrpList"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonCtrlLpdCompTime"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLSPReplyDscp"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLpdMaxSessions"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLpdSessTimeout"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLpdEchoTimeout"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLpdEchoInterval"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLpdEchoNullShim"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLpdScanPeriod"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonTypeLpdStatHours"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonReactLpdNotifyType"), ("CISCO-RTTMON-MIB", "rttMplsVpnMonReactLpdRetryCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev13 = ciscoCtrlGroupRev13.setStatus('current')
ciscoStatsGroupRev7 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 30)).setObjects(("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsTargetPE"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsNumOfPass"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsNumOfFail"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsNumOfTimeout"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsAvgRTT"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsMinRTT"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsMaxRTT"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsMinNumPaths"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsMaxNumPaths"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsLPDStartTime"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsLPDFailOccurred"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsLPDFailCause"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsLPDCompTime"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsGroupStatus"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsGroupProbeIndex"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsProbeStatus"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsPathIds"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatsResetTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroupRev7 = ciscoStatsGroupRev7.setStatus('current')
ciscoNotificationGroupRev2 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 31)).setObjects(("CISCO-RTTMON-MIB", "rttMonLpdDiscoveryNotification"), ("CISCO-RTTMON-MIB", "rttMonLpdGrpStatusNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNotificationGroupRev2 = ciscoNotificationGroupRev2.setStatus('current')
ciscoApplGroupRev4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 32)).setObjects(("CISCO-RTTMON-MIB", "rttMonApplLpdGrpStatsReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoApplGroupRev4 = ciscoApplGroupRev4.setStatus('current')
ciscoCtrlGroupRev14 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 33)).setObjects(("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminStartTime"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminAdd"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminDelete"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev14 = ciscoCtrlGroupRev14.setStatus('current')
ciscoCtrlGroupRev15 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 34)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetMPID"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetDomainName"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetVLAN"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminEthernetCOS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev15 = ciscoCtrlGroupRev15.setStatus('current')
ciscoRttMonObsoleteGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 35)).setObjects(("CISCO-RTTMON-MIB", "rttMonApplPreConfigedReset"), ("CISCO-RTTMON-MIB", "rttMonApplPreConfigedValid"), ("CISCO-RTTMON-MIB", "rttMonFileIOAdminFilePath"), ("CISCO-RTTMON-MIB", "rttMonFileIOAdminSize"), ("CISCO-RTTMON-MIB", "rttMonFileIOAdminAction"), ("CISCO-RTTMON-MIB", "rttMonScriptAdminName"), ("CISCO-RTTMON-MIB", "rttMonScriptAdminCmdLineParams"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonObsoleteGroupRev1 = ciscoRttMonObsoleteGroupRev1.setStatus('obsolete')
ciscoRttMonDeprecatedGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 36)).setObjects(("CISCO-RTTMON-MIB", "rttMonJitterStatsOWMinSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWMaxSD"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWMinDS"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWMaxDS"), ("CISCO-RTTMON-MIB", "rttMonReactAdminConnectionEnable"), ("CISCO-RTTMON-MIB", "rttMonReactAdminTimeoutEnable"), ("CISCO-RTTMON-MIB", "rttMonReactAdminThresholdType"), ("CISCO-RTTMON-MIB", "rttMonReactAdminThresholdFalling"), ("CISCO-RTTMON-MIB", "rttMonReactAdminThresholdCount"), ("CISCO-RTTMON-MIB", "rttMonReactAdminThresholdCount2"), ("CISCO-RTTMON-MIB", "rttMonReactAdminActionType"), ("CISCO-RTTMON-MIB", "rttMonReactAdminVerifyErrorEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRttMonDeprecatedGroupRev1 = ciscoRttMonDeprecatedGroupRev1.setStatus('deprecated')
ciscoCtrlGroupRev16 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 37)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminLSPVccvID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev16 = ciscoCtrlGroupRev16.setStatus('current')
ciscoCtrlGroupRev17 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 38)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminGroupName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev17 = ciscoCtrlGroupRev17.setStatus('current')
ciscoCtrlGroupRev18 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 39)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetEVC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev18 = ciscoCtrlGroupRev18.setStatus('current')
ciscoCtrlGroupRev19 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 41)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetMEPPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev19 = ciscoCtrlGroupRev19.setStatus('current')
ciscoStatsGroupRev8 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 40)).setObjects(("CISCO-RTTMON-MIB", "rttMonLatestJitterOperRTTSumHigh"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperRTTSum2High"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWSumSDHigh"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWSum2SDHigh"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWSumDSHigh"), ("CISCO-RTTMON-MIB", "rttMonLatestJitterOperOWSum2DSHigh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsRTTSumHigh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWSumSDHigh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsOWSumDSHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroupRev8 = ciscoStatsGroupRev8.setStatus('current')
ciscoCtrlGroupRev20 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 43)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminVideoTrafficProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev20 = ciscoCtrlGroupRev20.setStatus('current')
ciscoCtrlGroupRev21 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 44)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminDscp"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminReserveDsp"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminInputInterface"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev21 = ciscoCtrlGroupRev21.setStatus('current')
ciscoCtrlGroupRev22 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 45)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminEmulateSourceAddress"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminEmulateSourcePort"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminEmulateTargetAddress"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminEmulateTargetPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev22 = ciscoCtrlGroupRev22.setStatus('current')
ciscoCtrlGroupRev23 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 46)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetMacAddress"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminSourceMacAddress"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminSourceMPID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev23 = ciscoCtrlGroupRev23.setStatus('current')
ciscoCtrlGroupRev24 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 47)).setObjects(("CISCO-RTTMON-MIB", "rttMonGeneratedOperCtrlAdminIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev24 = ciscoCtrlGroupRev24.setStatus('current')
ciscoCtrlGroupRev25 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 48)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminEndPointListName"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminSSM"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminControlRetry"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminControlTimeout"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminIgmpTreeInit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev25 = ciscoCtrlGroupRev25.setStatus('current')
ciscoStatsGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 49)).setObjects(("CISCO-RTTMON-MIB", "rttMonControlEnableErrors"), ("CISCO-RTTMON-MIB", "rttMonStatsRetrieveErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroupRev2 = ciscoStatsGroupRev2.setStatus('deprecated')
ciscoCtrlGroupRev26 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 50)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminEnableBurst"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminAggBurstCycles"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminLossRatioNumFrames"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminAvailNumFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev26 = ciscoCtrlGroupRev26.setStatus('current')
ciscoCtrlGroupRev27 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 51)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminTstampOptimization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev27 = ciscoCtrlGroupRev27.setStatus('current')
ciscoCtrlGroupRev28 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 52)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminOwner"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminTag"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminRttType"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminThreshold"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminFrequency"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminTimeout"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminVerifyData"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminStatus"), ("CISCO-RTTMON-MIB", "rttMonCtrlAdminNvgen"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminProtocol"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetAddress"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminPktDataRequestSize"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminPktDataResponseSize"), ("CISCO-RTTMON-MIB", "rttMonScheduleAdminRttLife"), ("CISCO-RTTMON-MIB", "rttMonScheduleAdminRttStartTime"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminNumHourGroups"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminNumPaths"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminNumHops"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminNumDistBuckets"), ("CISCO-RTTMON-MIB", "rttMonStatisticsAdminDistInterval"), ("CISCO-RTTMON-MIB", "rttMonHistoryAdminNumLives"), ("CISCO-RTTMON-MIB", "rttMonHistoryAdminNumBuckets"), ("CISCO-RTTMON-MIB", "rttMonHistoryAdminNumSamples"), ("CISCO-RTTMON-MIB", "rttMonHistoryAdminFilter"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperModificationTime"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperDiagText"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperResetTime"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperOctetsInUse"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperConnectionLostOccurred"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperTimeoutOccurred"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperVerifyErrorOccurred"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperOverThresholdOccurred"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperNumRtts"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperRttLife"), ("CISCO-RTTMON-MIB", "rttMonCtrlOperState"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperCompletionTime"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperSense"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperApplSpecificSense"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperSenseDescription"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperTime"), ("CISCO-RTTMON-MIB", "rttMonLatestRttOperAddress"), ("CISCO-RTTMON-MIB", "rttMonReactTriggerAdminStatus"), ("CISCO-RTTMON-MIB", "rttMonReactTriggerOperState"), ("CISCO-RTTMON-MIB", "rttMonScheduleAdminConceptRowAgeoutV2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev28 = ciscoCtrlGroupRev28.setStatus('current')
ciscoStatsGroupRev9 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 53)).setObjects(("CISCO-RTTMON-MIB", "rttMonStatsCollectCtrlEnErrors"), ("CISCO-RTTMON-MIB", "rttMonStatsCollectRetrieveErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroupRev9 = ciscoStatsGroupRev9.setStatus('current')
ciscoCtrlGroupRev29 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 54)).setObjects(("CISCO-RTTMON-MIB", "rttMonEchoAdminTargetSwitchId"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminProfileId"), ("CISCO-RTTMON-MIB", "rttMonEchoAdminOutputInterface"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev29 = ciscoCtrlGroupRev29.setStatus('current')
ciscoNotificationGroupRev3 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 55)).setObjects(("CISCO-RTTMON-MIB", "rttMonNotificationV2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNotificationGroupRev3 = ciscoNotificationGroupRev3.setStatus('current')
ciscoCtrlGroupRev30 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 56)).setObjects(("CISCO-RTTMON-MIB", "rttMonScheduleAdminStartType"), ("CISCO-RTTMON-MIB", "rttMonScheduleAdminStartDelay"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminStartType"), ("CISCO-RTTMON-MIB", "rttMonGrpScheduleAdminStartDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev30 = ciscoCtrlGroupRev30.setStatus('current')
ciscoCtrlGroupRev31 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 57)).setObjects(("CISCO-RTTMON-MIB", "rttMonCtrlAdminLongTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCtrlGroupRev31 = ciscoCtrlGroupRev31.setStatus('current')
ciscoStatsGroupRev10 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 42, 3, 2, 58)).setObjects(("CISCO-RTTMON-MIB", "rttMonLatestJitterOperNumOverThresh"), ("CISCO-RTTMON-MIB", "rttMonJitterStatsNumOverThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoStatsGroupRev10 = ciscoStatsGroupRev10.setStatus('current')
mibBuilder.exportSymbols("CISCO-RTTMON-MIB", rttMonEchoAdminOWNTPSyncTolAbs=rttMonEchoAdminOWNTPSyncTolAbs, rttMonLatestHTTPErrorSenseDescription=rttMonLatestHTTPErrorSenseDescription, rttMonEchoAdminNameServer=rttMonEchoAdminNameServer, rttMplsVpnMonTypeInterval=rttMplsVpnMonTypeInterval, rttMonLatestJitterOperICPIF=rttMonLatestJitterOperICPIF, rttMonLatestJitterOperTable=rttMonLatestJitterOperTable, rttMonJitterStatsError=rttMonJitterStatsError, rttMonApplSupportedRttTypes=rttMonApplSupportedRttTypes, ciscoNotificationGroupRev3=ciscoNotificationGroupRev3, rttMonLatestJitterOperSumOfPositivesDS=rttMonLatestJitterOperSumOfPositivesDS, rttMonLatestJitterOperRTTSum2=rttMonLatestJitterOperRTTSum2, rttMonLatestJitterOperMaxOfNegativesSD=rttMonLatestJitterOperMaxOfNegativesSD, rttMplsVpnMonTypeNumPackets=rttMplsVpnMonTypeNumPackets, rttMplsVpnMonCtrlRequestSize=rttMplsVpnMonCtrlRequestSize, rttMonEchoAdminPktDataRequestSize=rttMonEchoAdminPktDataRequestSize, rttMonHTTPStatsMessageBodyOctetsSum=rttMonHTTPStatsMessageBodyOctetsSum, ciscoNotificationGroupRev2=ciscoNotificationGroupRev2, rttMonJitterStatsRTTSum=rttMonJitterStatsRTTSum, rttMonJitterStatsOWSumSD=rttMonJitterStatsOWSumSD, rttMonJitterStatsTable=rttMonJitterStatsTable, rttMonStatsCaptureSumCompletionTime=rttMonStatsCaptureSumCompletionTime, rttMonReactAdminEntry=rttMonReactAdminEntry, rttMonEchoAdminEmulateSourceAddress=rttMonEchoAdminEmulateSourceAddress, rttMonHistoryAdminTable=rttMonHistoryAdminTable, ciscoStatsGroupRev10=ciscoStatsGroupRev10, rttMonEchoAdminTargetPort=rttMonEchoAdminTargetPort, ciscoStatsGroupRev7=ciscoStatsGroupRev7, ciscoCtrlGroupRev19=ciscoCtrlGroupRev19, rttMonJitterStatsStartTimeIndex=rttMonJitterStatsStartTimeIndex, rttMonHTTPStatsRTTMin=rttMonHTTPStatsRTTMin, rttMplsVpnMonScheduleEntry=rttMplsVpnMonScheduleEntry, rttMplsVpnMonTypeEntry=rttMplsVpnMonTypeEntry, rttMonLatestJitterOperSumOfNegativesSD=rttMonLatestJitterOperSumOfNegativesSD, rttMonScriptAdminName=rttMonScriptAdminName, ciscoRttMonMibComplianceRev21=ciscoRttMonMibComplianceRev21, rttMonEchoAdminPktDataResponseSize=rttMonEchoAdminPktDataResponseSize, rttMonStatsTotalsElapsedTime=rttMonStatsTotalsElapsedTime, rttMonJitterStatsOWSumSDHigh=rttMonJitterStatsOWSumSDHigh, rttMonApplAuthKeyString4=rttMonApplAuthKeyString4, rttMonEchoAdminLossRatioNumFrames=rttMonEchoAdminLossRatioNumFrames, rttMonLatestJitterOperOWAvgSD=rttMonLatestJitterOperOWAvgSD, rttMonLatestJitterOperMinOfPositivesSD=rttMonLatestJitterOperMinOfPositivesSD, rttMonFileIOAdminFilePath=rttMonFileIOAdminFilePath, rttMonCtrlAdminTag=rttMonCtrlAdminTag, rttMonLpdGrpStatsLPDFailCause=rttMonLpdGrpStatsLPDFailCause, rttMonEchoAdminTargetAddressString=rttMonEchoAdminTargetAddressString, rttMonGrpScheduleAdminReset=rttMonGrpScheduleAdminReset, rttMonJitterStatsSumOfNegativesSD=rttMonJitterStatsSumOfNegativesSD, rttMonStatsCollectBusies=rttMonStatsCollectBusies, rttMonFileIOAdminSize=rttMonFileIOAdminSize, rttMonStatsCollectTable=rttMonStatsCollectTable, rttMonEchoAdminEmulateTargetAddress=rttMonEchoAdminEmulateTargetAddress, rttMonThresholdNotification=rttMonThresholdNotification, rttMonEchoAdminProfileId=rttMonEchoAdminProfileId, rttMplsVpnMonCtrlEXP=rttMplsVpnMonCtrlEXP, rttMonHistoryCollectionLifeIndex=rttMonHistoryCollectionLifeIndex, rttMonLatestJitterOperSum2PositivesDS=rttMonLatestJitterOperSum2PositivesDS, rttMonHTTPStatsDNSQueryError=rttMonHTTPStatsDNSQueryError, rttMonEchoAdminSourceVoicePort=rttMonEchoAdminSourceVoicePort, rttMonLatestJitterOperUnSyncRTs=rttMonLatestJitterOperUnSyncRTs, rttMonLatestJitterOperAvgSDJ=rttMonLatestJitterOperAvgSDJ, rttMonLatestJitterOperRTTSum2High=rttMonLatestJitterOperRTTSum2High, rttMonReactAdminTable=rttMonReactAdminTable, ciscoStatsGroupRev3=ciscoStatsGroupRev3, rttMonApplSupportedProtocols=rttMonApplSupportedProtocols, rttMonLatestJitterOperRTTSumHigh=rttMonLatestJitterOperRTTSumHigh, rttMonJitterStatsUnSyncRTs=rttMonJitterStatsUnSyncRTs, rttMonCtrlAdminLongTag=rttMonCtrlAdminLongTag, rttMonReactTriggerAdminRttMonCtrlAdminIndex=rttMonReactTriggerAdminRttMonCtrlAdminIndex, rttMonJitterStatsBusies=rttMonJitterStatsBusies, ciscoCtrlGroupRev31=ciscoCtrlGroupRev31, rttMplsVpnMonReactThresholdCount=rttMplsVpnMonReactThresholdCount, rttMonApplPreConfigedName=rttMonApplPreConfigedName, rttMonHTTPStatsTCPConnectRTTSum=rttMonHTTPStatsTCPConnectRTTSum, rttMplsVpnMonCtrlTimeout=rttMplsVpnMonCtrlTimeout, rttMonEchoAdminEmulateSourcePort=rttMonEchoAdminEmulateSourcePort, rttMonLatestJitterOperPacketLateArrival=rttMonLatestJitterOperPacketLateArrival, rttMonGrpScheduleAdminFreqMax=rttMonGrpScheduleAdminFreqMax, rttMonEchoAdminSSM=rttMonEchoAdminSSM, rttMonJitterStatsSum2PositivesSDHigh=rttMonJitterStatsSum2PositivesSDHigh, rttMonEchoAdminTargetMEPPort=rttMonEchoAdminTargetMEPPort, rttMonEchoAdminURL=rttMonEchoAdminURL, rttMonHTTPStatsBusies=rttMonHTTPStatsBusies, rttMonLatestRttOperCompletionTime=rttMonLatestRttOperCompletionTime, rttMonLatestJitterOperAvgJitter=rttMonLatestJitterOperAvgJitter, rttMonStatsCaptureSumCompletionTime2Low=rttMonStatsCaptureSumCompletionTime2Low, rttMonEchoAdminSourceAddress=rttMonEchoAdminSourceAddress, rttMonJitterStatsSum2NegativesSDHigh=rttMonJitterStatsSum2NegativesSDHigh, rttMonCtrlAdminTable=rttMonCtrlAdminTable, rttMonEchoAdminSourcePort=rttMonEchoAdminSourcePort, rttMonReactValue=rttMonReactValue, rttMonLpdGrpStatusNotification=rttMonLpdGrpStatusNotification, rttMplsVpnMonTypeLSPTTL=rttMplsVpnMonTypeLSPTTL, rttMonJitterStatsMinOfMOS=rttMonJitterStatsMinOfMOS, rttMonStatsTotalsInitiations=rttMonStatsTotalsInitiations, rttMonLpdGrpStatsMaxRTT=rttMonLpdGrpStatsMaxRTT, rttMonEchoAdminLSPVccvID=rttMonEchoAdminLSPVccvID, rttMonLpdGrpStatsMinRTT=rttMonLpdGrpStatsMinRTT, rttMonLatestJitterOperOWSumSD=rttMonLatestJitterOperOWSumSD, rttMonLpdGrpStatsLPDStartTime=rttMonLpdGrpStatsLPDStartTime, rttMplsVpnMonReactTable=rttMplsVpnMonReactTable, rttMplsVpnMonCtrlIndex=rttMplsVpnMonCtrlIndex, rttMonLatestRttOperSense=rttMonLatestRttOperSense, rttMonNotification=rttMonNotification, rttMonJitterStatsNumOfNegativesSD=rttMonJitterStatsNumOfNegativesSD, ciscoRttMonMibComplianceRev19=ciscoRttMonMibComplianceRev19, ciscoStatsGroupRev1=ciscoStatsGroupRev1, rttMonScheduleAdminConceptRowAgeout=rttMonScheduleAdminConceptRowAgeout, rttMonEchoAdminEmulateTargetPort=rttMonEchoAdminEmulateTargetPort, rttMonEchoPathAdminEntry=rttMonEchoPathAdminEntry, rttMonJitterStatsMinOfPositivesDS=rttMonJitterStatsMinOfPositivesDS, rttMonGeneratedOperTable=rttMonGeneratedOperTable, rttMplsVpnMonTypeDestPort=rttMplsVpnMonTypeDestPort, ciscoRttMonMibGroups=ciscoRttMonMibGroups, rttMonScheduleAdminRttStartTime=rttMonScheduleAdminRttStartTime, rttMonReactTriggerAdminEntry=rttMonReactTriggerAdminEntry, rttMonGrpScheduleAdminDelete=rttMonGrpScheduleAdminDelete, rttMonEchoAdminString2=rttMonEchoAdminString2, rttMonHTTPStatsTCPConnectTimeout=rttMonHTTPStatsTCPConnectTimeout, rttMonEchoAdminTargetVLAN=rttMonEchoAdminTargetVLAN, ciscoCtrlGroupRev14=ciscoCtrlGroupRev14, ciscoCtrlGroupRev4=ciscoCtrlGroupRev4, rttMonLatestJitterOperNumOfOW=rttMonLatestJitterOperNumOfOW, rttMonEchoAdminTargetMPID=rttMonEchoAdminTargetMPID, rttMonCtrlAdminEntry=rttMonCtrlAdminEntry, rttMplsVpnMonCtrlProbeList=rttMplsVpnMonCtrlProbeList, rttMonCtrlAdminGroupName=rttMonCtrlAdminGroupName, rttMonJitterStatsSumOfNegativesDS=rttMonJitterStatsSumOfNegativesDS, rttMonGrpScheduleAdminAdd=rttMonGrpScheduleAdminAdd, rttMonJitterStatsAvgJitterDS=rttMonJitterStatsAvgJitterDS, ciscoCtrlGroupRev20=ciscoCtrlGroupRev20, rttMonLatestJitterOperEntry=rttMonLatestJitterOperEntry, rttMonLpdGrpStatsGroupStatus=rttMonLpdGrpStatsGroupStatus, ciscoRttMonDeprecatedGroupRev1=ciscoRttMonDeprecatedGroupRev1, rttMonScheduleAdminTable=rttMonScheduleAdminTable, ciscoCtrlGroupRev29=ciscoCtrlGroupRev29, rttMonCtrlAdminIndex=rttMonCtrlAdminIndex, rttMonLpdGrpStatsGroupIndex=rttMonLpdGrpStatsGroupIndex, rttMonEchoAdminTOS=rttMonEchoAdminTOS, rttMonLatestJitterOperSum2PositivesSD=rttMonLatestJitterOperSum2PositivesSD, rttMonGrpScheduleAdminAgeout=rttMonGrpScheduleAdminAgeout, rttMonReactAdminThresholdFalling=rttMonReactAdminThresholdFalling, rttMonHistoryCollectionSampleTime=rttMonHistoryCollectionSampleTime, rttMonJitterStatsSum2NegativesDSHigh=rttMonJitterStatsSum2NegativesDSHigh, rttMplsVpnMonTypeLpdStatHours=rttMplsVpnMonTypeLpdStatHours, rttMonJitterStatsMaxOfNegativesSD=rttMonJitterStatsMaxOfNegativesSD, rttMonControlEnableErrors=rttMonControlEnableErrors, ciscoStatsGroupRev8=ciscoStatsGroupRev8, rttMonApplLatestSetError=rttMonApplLatestSetError, rttMonLpdGrpStatsMaxNumPaths=rttMonLpdGrpStatsMaxNumPaths, rttMplsVpnMonReactEntry=rttMplsVpnMonReactEntry, rttMonLatestHTTPOperDNSRTT=rttMonLatestHTTPOperDNSRTT, rttMonApplVersion=rttMonApplVersion, rttMonLatestJitterOperIAJIn=rttMonLatestJitterOperIAJIn, rttMonHistoryCollectionAddress=rttMonHistoryCollectionAddress, ciscoRttMonMibComplianceRev12=ciscoRttMonMibComplianceRev12, rttMplsVpnMonCtrlEntry=rttMplsVpnMonCtrlEntry, rttMonLatestJitterOperRTTMax=rttMonLatestJitterOperRTTMax, rttMonEchoAdminTstampOptimization=rttMonEchoAdminTstampOptimization, rttMonEchoAdminEnableBurst=rttMonEchoAdminEnableBurst, rttMonHistoryCollectionCompletionTime=rttMonHistoryCollectionCompletionTime, rttMonCtrlOperResetTime=rttMonCtrlOperResetTime, rttMonJitterStatsIAJIn=rttMonJitterStatsIAJIn, rttMonEchoAdminTable=rttMonEchoAdminTable, rttMonEchoAdminDetectPoint=rttMonEchoAdminDetectPoint, rttMonJitterStatsSum2PositivesSDLow=rttMonJitterStatsSum2PositivesSDLow, rttMonHTTPStatsCompletions=rttMonHTTPStatsCompletions, rttMonJitterStatsMaxOfICPIF=rttMonJitterStatsMaxOfICPIF, rttMonLatestJitterOperNumOfRTT=rttMonLatestJitterOperNumOfRTT, rttMonApplTimeOfLastSet=rttMonApplTimeOfLastSet, rttMplsVpnMonReactTimeoutEnable=rttMplsVpnMonReactTimeoutEnable, rttMonCtrlAdminFrequency=rttMonCtrlAdminFrequency, rttMonEchoAdminPrecision=rttMonEchoAdminPrecision, ciscoCtrlGroupRev1=ciscoCtrlGroupRev1, rttMonHTTPStatsTransactionRTTSum=rttMonHTTPStatsTransactionRTTSum, rttMonApplSupportedRttTypesValid=rttMonApplSupportedRttTypesValid, rttMonHTTPStatsTable=rttMonHTTPStatsTable, rttMonLatestJitterOperNumOfNegativesDS=rttMonLatestJitterOperNumOfNegativesDS, rttMonApplSupportedRttTypesTable=rttMonApplSupportedRttTypesTable, rttMplsVpnMonTypeLpdEchoTimeout=rttMplsVpnMonTypeLpdEchoTimeout, rttMonStatsCaptureDistIndex=rttMonStatsCaptureDistIndex, rttMonLatestJitterOperNumOverThresh=rttMonLatestJitterOperNumOverThresh, rttMplsVpnMonCtrlLpdCompTime=rttMplsVpnMonCtrlLpdCompTime, rttMonLatestJitterOperOWMinDS=rttMonLatestJitterOperOWMinDS, rttMonLatestJitterOperPacketOutOfSequence=rttMonLatestJitterOperPacketOutOfSequence, rttMonApplAuthKeyString3=rttMonApplAuthKeyString3, ciscoStatsGroup=ciscoStatsGroup, rttMonLatestJitterOperSum2NegativesSD=rttMonLatestJitterOperSum2NegativesSD, rttMonEchoAdminNumPackets=rttMonEchoAdminNumPackets, rttMonStatsCollectSequenceErrors=rttMonStatsCollectSequenceErrors, ciscoCtrlGroupRev26=ciscoCtrlGroupRev26, ciscoRttMonObjects=ciscoRttMonObjects, rttMonEchoAdminTargetMacAddress=rttMonEchoAdminTargetMacAddress, rttMplsVpnMonTypeLpdScanPeriod=rttMplsVpnMonTypeLpdScanPeriod, rttMonLatestJitterOperOWSumDSHigh=rttMonLatestJitterOperOWSumDSHigh, rttMonApplLpdGrpStatsReset=rttMonApplLpdGrpStatsReset, rttMonScriptAdminEntry=rttMonScriptAdminEntry, rttMonReactAdminActionType=rttMonReactAdminActionType, rttMonReactTriggerOperTable=rttMonReactTriggerOperTable, rttMonReactOccurred=rttMonReactOccurred, rttMonStatsRetrieveErrors=rttMonStatsRetrieveErrors, ciscoNotificationGroupRev1=ciscoNotificationGroupRev1, rttMonEchoAdminOperation=rttMonEchoAdminOperation, rttMonCtrlOperDiagText=rttMonCtrlOperDiagText, rttMonHTTPStatsRTTMax=rttMonHTTPStatsRTTMax, rttMonHTTPStatsHTTPError=rttMonHTTPStatsHTTPError, rttMplsVpnMonTypeTable=rttMplsVpnMonTypeTable, rttMonJitterStatsMaxOfMOS=rttMonJitterStatsMaxOfMOS, ciscoRttMonMibConformance=ciscoRttMonMibConformance, rttMonJitterStatsAvgJitter=rttMonJitterStatsAvgJitter, rttMonEchoAdminOWNTPSyncTolPct=rttMonEchoAdminOWNTPSyncTolPct, rttMonApplNumCtrlAdminEntry=rttMonApplNumCtrlAdminEntry, rttMonLatestJitterOperOWSumDS=rttMonLatestJitterOperOWSumDS, rttMonCtrlAdminTimeout=rttMonCtrlAdminTimeout, rttMonJitterStatsOWMinDS=rttMonJitterStatsOWMinDS, rttMonLatestOper=rttMonLatestOper, rttMonConnectionChangeNotification=rttMonConnectionChangeNotification, rttMplsVpnMonReactThresholdType=rttMplsVpnMonReactThresholdType, rttMonReactThresholdFalling=rttMonReactThresholdFalling, rttMonCtrlOperEntry=rttMonCtrlOperEntry, rttMonEchoAdminString5=rttMonEchoAdminString5, rttMonEchoAdminControlTimeout=rttMonEchoAdminControlTimeout, rttMplsVpnMonCtrlDelScanFactor=rttMplsVpnMonCtrlDelScanFactor, rttMonJitterStatsOWMinSD=rttMonJitterStatsOWMinSD, rttMonScheduleAdminRttRecurring=rttMonScheduleAdminRttRecurring, ciscoHistoryGroup=ciscoHistoryGroup, rttMonHTTPStatsRTTSum2High=rttMonHTTPStatsRTTSum2High, rttMonEchoAdminCalledNumber=rttMonEchoAdminCalledNumber, rttMonApplAuthStatus=rttMonApplAuthStatus, rttMonScheduleAdminStartType=rttMonScheduleAdminStartType, rttMonJitterStatsOWMaxSD=rttMonJitterStatsOWMaxSD, rttMonEchoAdminControlEnable=rttMonEchoAdminControlEnable, rttMonHistoryCollectionBucketIndex=rttMonHistoryCollectionBucketIndex, rttMonHistoryCollectionSense=rttMonHistoryCollectionSense, rttMplsVpnMonCtrlTag=rttMplsVpnMonCtrlTag, rttMonJitterStatsNumOverThresh=rttMonJitterStatsNumOverThresh, rttMplsVpnMonTypeSecFreqType=rttMplsVpnMonTypeSecFreqType, rttMonLpdGrpStatsLPDFailOccurred=rttMonLpdGrpStatsLPDFailOccurred, ciscoCtrlGroupRev7=ciscoCtrlGroupRev7, ciscoCtrlGroupRev23=ciscoCtrlGroupRev23, ciscoCtrlGroupRev8=ciscoCtrlGroupRev8, rttMonLatestJitterOperNTPState=rttMonLatestJitterOperNTPState, rttMonStatsCapturePathIndex=rttMonStatsCapturePathIndex, ciscoStatsGroupRev2=ciscoStatsGroupRev2, rttMonGrpScheduleAdminStartType=rttMonGrpScheduleAdminStartType, ciscoRttMonMibComplianceRev17=ciscoRttMonMibComplianceRev17, rttMonJitterStatsCompletions=rttMonJitterStatsCompletions, rttMonLatestHTTPOperTCPConnectRTT=rttMonLatestHTTPOperTCPConnectRTT, rttMonJitterStatsNumOfOW=rttMonJitterStatsNumOfOW, rttMonJitterStatsSum2PositivesDSLow=rttMonJitterStatsSum2PositivesDSLow, rttMonJitterStatsMinOfICPIF=rttMonJitterStatsMinOfICPIF, rttMonEchoAdminLSREnable=rttMonEchoAdminLSREnable, rttMonReactThresholdType=rttMonReactThresholdType, rttMonApplFreeMemLowWaterMark=rttMonApplFreeMemLowWaterMark)
mibBuilder.exportSymbols("CISCO-RTTMON-MIB", rttMonEchoAdminLSPExp=rttMonEchoAdminLSPExp, rttMonJitterStatsMinOfPositivesSD=rttMonJitterStatsMinOfPositivesSD, rttMonApplPreConfigedTable=rttMonApplPreConfigedTable, rttMonEchoAdminTargetDomainName=rttMonEchoAdminTargetDomainName, rttMplsVpnMonCtrlScanInterval=rttMplsVpnMonCtrlScanInterval, rttMonJitterStatsNumOfPositivesSD=rttMonJitterStatsNumOfPositivesSD, rttMonLatestRttOperApplSpecificSense=rttMonLatestRttOperApplSpecificSense, rttMonStatsCollectDrops=rttMonStatsCollectDrops, rttMonEchoAdminTargetAddress=rttMonEchoAdminTargetAddress, rttMonJitterStatsPacketLossSD=rttMonJitterStatsPacketLossSD, rttMonEchoAdminVrfName=rttMonEchoAdminVrfName, rttMonEchoAdminTargetSwitchId=rttMonEchoAdminTargetSwitchId, rttMonReactTriggerOperEntry=rttMonReactTriggerOperEntry, rttMonLatestJitterOperNumOfPositivesSD=rttMonLatestJitterOperNumOfPositivesSD, rttMonEchoAdminOutputInterface=rttMonEchoAdminOutputInterface, rttMonEchoPathAdminTable=rttMonEchoPathAdminTable, rttMonGrpScheduleAdminStatus=rttMonGrpScheduleAdminStatus, ciscoCtrlGroupRev25=ciscoCtrlGroupRev25, rttMonStatsCollectVerifyErrors=rttMonStatsCollectVerifyErrors, rttMonEchoAdminIgmpTreeInit=rttMonEchoAdminIgmpTreeInit, rttMonLatestJitterOperMinOfPositivesDS=rttMonLatestJitterOperMinOfPositivesDS, rttMonReactAdminTimeoutEnable=rttMonReactAdminTimeoutEnable, rttMonJitterStatsSum2PositivesDSHigh=rttMonJitterStatsSum2PositivesDSHigh, rttMonLatestJitterOperSumOfPositivesSD=rttMonLatestJitterOperSumOfPositivesSD, rttMonApplAuthKeyString5=rttMonApplAuthKeyString5, rttMonHistoryCollectionApplSpecificSense=rttMonHistoryCollectionApplSpecificSense, rttMonLatestJitterOperOWSum2DSHigh=rttMonLatestJitterOperOWSum2DSHigh, rttMonLatestJitterOperMOS=rttMonLatestJitterOperMOS, ciscoNotificationGroup=ciscoNotificationGroup, rttMonJitterStatsRTTSum2High=rttMonJitterStatsRTTSum2High, rttMonLatestRttOperAddress=rttMonLatestRttOperAddress, rttMonJitterStatsRTTMin=rttMonJitterStatsRTTMin, rttMonApplSupportedRttTypesEntry=rttMonApplSupportedRttTypesEntry, rttMonLpdGrpStatsTargetPE=rttMonLpdGrpStatsTargetPE, rttMonEchoAdminSourceMPID=rttMonEchoAdminSourceMPID, rttMplsVpnMonSchedulePeriod=rttMplsVpnMonSchedulePeriod, rttMplsVpnMonScheduleRttStartTime=rttMplsVpnMonScheduleRttStartTime, rttMonEchoPathAdminHopAddress=rttMonEchoPathAdminHopAddress, rttMonJitterStatsMaxOfPositivesSD=rttMonJitterStatsMaxOfPositivesSD, rttMonReactTriggerAdminTable=rttMonReactTriggerAdminTable, ciscoCtrlGroupRev28=ciscoCtrlGroupRev28, ciscoCtrlGroupRev17=ciscoCtrlGroupRev17, ciscoStatsGroupRev4=ciscoStatsGroupRev4, rttMplsVpnMonCtrlVerifyData=rttMplsVpnMonCtrlVerifyData, rttMonLatestJitterOperOWSum2SDHigh=rttMonLatestJitterOperOWSum2SDHigh, ciscoRttMonMibComplianceRev23=ciscoRttMonMibComplianceRev23, rttMonLatestJitterOperSumOfNegativesDS=rttMonLatestJitterOperSumOfNegativesDS, rttMonLatestJitterOperOWMaxSD=rttMonLatestJitterOperOWMaxSD, rttMonFileIOAdminTable=rttMonFileIOAdminTable, rttMonLatestJitterOperOWAvgDS=rttMonLatestJitterOperOWAvgDS, rttMonLpdGrpStatsPathIds=rttMonLpdGrpStatsPathIds, rttMonJitterStatsNumOfRTT=rttMonJitterStatsNumOfRTT, ciscoRttMonMibComplianceRev16=ciscoRttMonMibComplianceRev16, rttMplsVpnMonCtrlVrfName=rttMplsVpnMonCtrlVrfName, rttMonGeneratedOperEntry=rttMonGeneratedOperEntry, rttMonReactTriggerAdminStatus=rttMonReactTriggerAdminStatus, rttMonFileIOAdminEntry=rttMonFileIOAdminEntry, rttMonStatisticsAdminEntry=rttMonStatisticsAdminEntry, rttMonLatestRttOperTable=rttMonLatestRttOperTable, rttMonReactThresholdRising=rttMonReactThresholdRising, rttMonStatsCaptureCompletionTimeMin=rttMonStatsCaptureCompletionTimeMin, rttMonGrpScheduleAdminIndex=rttMonGrpScheduleAdminIndex, rttMplsVpnMonTypeLpdSessTimeout=rttMplsVpnMonTypeLpdSessTimeout, ciscoCtrlGroupRev12=ciscoCtrlGroupRev12, rttMplsVpnMonCtrlStatus=rttMplsVpnMonCtrlStatus, rttMonApplReset=rttMonApplReset, ciscoRttMonMibComplianceRev14=ciscoRttMonMibComplianceRev14, rttMonCtrlOperConnectionLostOccurred=rttMonCtrlOperConnectionLostOccurred, rttMonLatestJitterErrorSenseDescription=rttMonLatestJitterErrorSenseDescription, ciscoApplGroupRev4=ciscoApplGroupRev4, rttMonLatestJitterOperAvgDSJ=rttMonLatestJitterOperAvgDSJ, rttMonEchoAdminVideoTrafficProfile=rttMonEchoAdminVideoTrafficProfile, rttMonGrpScheduleAdminStartDelay=rttMonGrpScheduleAdminStartDelay, rttMplsVpnMonTypeLSPReplyMode=rttMplsVpnMonTypeLSPReplyMode, rttMonCtrlOperNumRtts=rttMonCtrlOperNumRtts, rttMonFileIOAdminAction=rttMonFileIOAdminAction, rttMonJitterStatsOWSum2DSHigh=rttMonJitterStatsOWSum2DSHigh, rttMonCtrlOperTable=rttMonCtrlOperTable, ciscoStatsGroupRev9=ciscoStatsGroupRev9, rttMonReactAdminThresholdCount2=rttMonReactAdminThresholdCount2, rttMonHistoryCollectionEntry=rttMonHistoryCollectionEntry, rttMonHTTPStatsRTTSum2Low=rttMonHTTPStatsRTTSum2Low, rttMonEchoAdminCodecType=rttMonEchoAdminCodecType, rttMonLatestJitterOperSum2NegativesDS=rttMonLatestJitterOperSum2NegativesDS, rttMonReactTable=rttMonReactTable, rttMonNotificationV2=rttMonNotificationV2, rttMonLatestHTTPOperSense=rttMonLatestHTTPOperSense, rttMonHTTPStatsDNSRTTSum=rttMonHTTPStatsDNSRTTSum, ciscoCtrlGroupRev16=ciscoCtrlGroupRev16, rttMonAppl=rttMonAppl, rttMonLatestJitterOperOWSum2DS=rttMonLatestJitterOperOWSum2DS, rttMonLpdGrpStatsTable=rttMonLpdGrpStatsTable, rttMonNotifications=rttMonNotifications, rttMonStatisticsAdminNumPaths=rttMonStatisticsAdminNumPaths, rttMonJitterStatsOWMaxSDNew=rttMonJitterStatsOWMaxSDNew, rttMonCtrlAdminStatus=rttMonCtrlAdminStatus, rttMonEchoAdminLSPNullShim=rttMonEchoAdminLSPNullShim, rttMonReactStatus=rttMonReactStatus, ciscoCtrlGroupRev24=ciscoCtrlGroupRev24, rttMonTimeoutNotification=rttMonTimeoutNotification, ciscoRttMonMibComplianceRev22=ciscoRttMonMibComplianceRev22, rttMonCtrlAdminNvgen=rttMonCtrlAdminNvgen, rttMonLatestHTTPOperRTT=rttMonLatestHTTPOperRTT, rttMonHTTPStatsStartTimeIndex=rttMonHTTPStatsStartTimeIndex, rttMplsVpnMonCtrlRttType=rttMplsVpnMonCtrlRttType, rttMonJitterStatsRTTMax=rttMonJitterStatsRTTMax, rttMonLpdGrpStatsStartTimeIndex=rttMonLpdGrpStatsStartTimeIndex, rttMonHistoryAdminFilter=rttMonHistoryAdminFilter, rttMonJitterStatsSum2NegativesSDLow=rttMonJitterStatsSum2NegativesSDLow, rttMonGrpScheduleAdminLife=rttMonGrpScheduleAdminLife, rttMonLatestJitterOperMaxOfPositivesDS=rttMonLatestJitterOperMaxOfPositivesDS, rttMplsVpnMonCtrlLpd=rttMplsVpnMonCtrlLpd, rttMonJitterStatsOWMaxDSNew=rttMonJitterStatsOWMaxDSNew, rttMonJitterStatsSum2NegativesDSLow=rttMonJitterStatsSum2NegativesDSLow, rttMonCtrlOperOverThresholdOccurred=rttMonCtrlOperOverThresholdOccurred, rttMonEchoAdminControlRetry=rttMonEchoAdminControlRetry, rttMonStatisticsAdminDistInterval=rttMonStatisticsAdminDistInterval, rttMonLatestHTTPOperTable=rttMonLatestHTTPOperTable, rttMonGeneratedOperCtrlAdminIndex=rttMonGeneratedOperCtrlAdminIndex, rttMonScheduleAdminEntry=rttMonScheduleAdminEntry, ciscoCtrlGroupRev30=ciscoCtrlGroupRev30, ciscoLatestOperGroupRev1=ciscoLatestOperGroupRev1, rttMonLatestJitterOperOWSum2SD=rttMonLatestJitterOperOWSum2SD, rttMonEchoAdminEntry=rttMonEchoAdminEntry, rttMonGrpScheduleAdminTable=rttMonGrpScheduleAdminTable, rttMonJitterStatsPacketMIA=rttMonJitterStatsPacketMIA, rttMonStatisticsAdminNumDistBuckets=rttMonStatisticsAdminNumDistBuckets, rttMonEchoAdminAggBurstCycles=rttMonEchoAdminAggBurstCycles, rttMonJitterStatsMinOfNegativesDS=rttMonJitterStatsMinOfNegativesDS, ciscoApplGroupRev2=ciscoApplGroupRev2, rttMonGrpScheduleAdminEntry=rttMonGrpScheduleAdminEntry, rttMonCtrl=rttMonCtrl, rttMonGeneratedOperRespIpAddrType=rttMonGeneratedOperRespIpAddrType, rttMonHistoryCollectionSampleIndex=rttMonHistoryCollectionSampleIndex, rttMonStatsCaptureSumCompletionTime2High=rttMonStatsCaptureSumCompletionTime2High, rttMonLatestJitterOperOWMinSD=rttMonLatestJitterOperOWMinSD, rttMonReactEntry=rttMonReactEntry, rttMonLatestJitterOperRTTSum=rttMonLatestJitterOperRTTSum, rttMonLatestJitterOperMaxOfPositivesSD=rttMonLatestJitterOperMaxOfPositivesSD, rttMonCtrlOperModificationTime=rttMonCtrlOperModificationTime, rttMonReactActionType=rttMonReactActionType, rttMonJitterStatsNumOfNegativesDS=rttMonJitterStatsNumOfNegativesDS, rttMonStatsCollectAddress=rttMonStatsCollectAddress, rttMonReactAdminConnectionEnable=rttMonReactAdminConnectionEnable, rttMonEchoAdminICPIFAdvFactor=rttMonEchoAdminICPIFAdvFactor, rttMonLatestJitterOperOWSumSDHigh=rttMonLatestJitterOperOWSumSDHigh, rttMonApplProbeCapacity=rttMonApplProbeCapacity, rttMplsVpnMonReactConnectionEnable=rttMplsVpnMonReactConnectionEnable, rttMonVerifyErrorNotification=rttMonVerifyErrorNotification, ciscoCtrlGroupRev13=ciscoCtrlGroupRev13, rttMonJitterStatsNumOfPositivesDS=rttMonJitterStatsNumOfPositivesDS, rttMonEchoAdminGKRegistration=rttMonEchoAdminGKRegistration, rttMonStatsTotalsTable=rttMonStatsTotalsTable, rttMonApplSupportedProtocolsEntry=rttMonApplSupportedProtocolsEntry, rttMonApplAuthEntry=rttMonApplAuthEntry, rttMonReactAdminThresholdType=rttMonReactAdminThresholdType, rttMonEchoAdminLSPSelector=rttMonEchoAdminLSPSelector, rttMonJitterStatsOWSum2SDLow=rttMonJitterStatsOWSum2SDLow, rttMonJitterStatsPacketOutOfSequence=rttMonJitterStatsPacketOutOfSequence, rttMplsVpnMonTypeLpdEchoNullShim=rttMplsVpnMonTypeLpdEchoNullShim, rttMonStatisticsAdminNumHops=rttMonStatisticsAdminNumHops, rttMonLatestRttOperEntry=rttMonLatestRttOperEntry, ciscoCtrlGroupRev11=ciscoCtrlGroupRev11, rttMonStatsCollectEntry=rttMonStatsCollectEntry, rttMonJitterStatsSumOfPositivesSD=rttMonJitterStatsSumOfPositivesSD, rttMonEchoAdminString4=rttMonEchoAdminString4, rttMonHTTPStatsOverThresholds=rttMonHTTPStatsOverThresholds, rttMplsVpnMonScheduleFrequency=rttMplsVpnMonScheduleFrequency, rttMonHistoryCollectionSenseDescription=rttMonHistoryCollectionSenseDescription, rttMonEchoAdminSourceMacAddress=rttMonEchoAdminSourceMacAddress, rttMonScheduleAdminStartDelay=rttMonScheduleAdminStartDelay, rttMonLatestJitterOperSense=rttMonLatestJitterOperSense, rttMplsVpnMonCtrlThreshold=rttMplsVpnMonCtrlThreshold, ciscoRttMonMibComplianceRev20=ciscoRttMonMibComplianceRev20, rttMonReactAdminVerifyErrorEnable=rttMonReactAdminVerifyErrorEnable, rttMonJitterStatsRTTSum2Low=rttMonJitterStatsRTTSum2Low, rttMplsVpnMonTypeLspSelector=rttMplsVpnMonTypeLspSelector, rttMonReactThresholdCountY=rttMonReactThresholdCountY, rttMonStatsCollectTimeouts=rttMonStatsCollectTimeouts, rttMonCtrlAdminRttType=rttMonCtrlAdminRttType, rttMonApplSupportedProtocolsTable=rttMonApplSupportedProtocolsTable, rttMonEchoAdminCodecPayload=rttMonEchoAdminCodecPayload, rttMonApplAuthTable=rttMonApplAuthTable, rttMonEchoAdminLSPReplyDscp=rttMonEchoAdminLSPReplyDscp, rttMonLatestRttOperSenseDescription=rttMonLatestRttOperSenseDescription, rttMonStatsCaptureTable=rttMonStatsCaptureTable, rttMonLpdGrpStatsAvgRTT=rttMonLpdGrpStatsAvgRTT, rttMonEchoPathAdminHopIndex=rttMonEchoPathAdminHopIndex, rttMonReactConfigIndex=rttMonReactConfigIndex, rttMonHistoryCollectionTable=rttMonHistoryCollectionTable, ciscoRttMonMibComplianceRev18=ciscoRttMonMibComplianceRev18, rttMonStatsCollectNoConnections=rttMonStatsCollectNoConnections, rttMonEchoAdminOWNTPSyncTolType=rttMonEchoAdminOWNTPSyncTolType, rttMonJitterStatsRTTSumHigh=rttMonJitterStatsRTTSumHigh, rttMonJitterStatsMaxOfPositivesDS=rttMonJitterStatsMaxOfPositivesDS, rttMonScriptAdminCmdLineParams=rttMonScriptAdminCmdLineParams, rttMonApplSupportedProtocolsValid=rttMonApplSupportedProtocolsValid, rttMonLatestRttOperTime=rttMonLatestRttOperTime, rttMonGrpScheduleAdminStartTime=rttMonGrpScheduleAdminStartTime, rttMonCtrlOperOctetsInUse=rttMonCtrlOperOctetsInUse, rttMonEchoAdminEndPointListName=rttMonEchoAdminEndPointListName, rttMonEchoAdminDscp=rttMonEchoAdminDscp, rttMonLatestHTTPOperTransactionRTT=rttMonLatestHTTPOperTransactionRTT, rttMonEchoAdminTargetEVC=rttMonEchoAdminTargetEVC, rttMplsVpnMonTypeLpdMaxSessions=rttMplsVpnMonTypeLpdMaxSessions, rttMonStatsCaptureCompletions=rttMonStatsCaptureCompletions, rttMonEchoAdminReserveDsp=rttMonEchoAdminReserveDsp, rttMonCtrlOperRttLife=rttMonCtrlOperRttLife, rttMonLatestJitterOperMinOfNegativesSD=rttMonLatestJitterOperMinOfNegativesSD, rttMonStatsTotalsEntry=rttMonStatsTotalsEntry, rttMplsVpnMonReactLpdRetryCount=rttMplsVpnMonReactLpdRetryCount, rttMonEchoAdminEthernetCOS=rttMonEchoAdminEthernetCOS, rttMonReactAdminThresholdCount=rttMonReactAdminThresholdCount, rttMonReactThresholdCountX=rttMonReactThresholdCountX, rttMonJitterStatsAvgJitterSD=rttMonJitterStatsAvgJitterSD, rttMonLatestJitterOperOWMaxDS=rttMonLatestJitterOperOWMaxDS, rttMplsVpnMonReactActionType=rttMplsVpnMonReactActionType, rttMonApplPreConfigedReset=rttMonApplPreConfigedReset, rttMonLatestJitterOperNumOfPositivesDS=rttMonLatestJitterOperNumOfPositivesDS, rttMonLatestJitterOperPacketMIA=rttMonLatestJitterOperPacketMIA, rttMonLpdGrpStatsGroupProbeIndex=rttMonLpdGrpStatsGroupProbeIndex, rttMonReactVar=rttMonReactVar, ciscoRttMonMibCompliances=ciscoRttMonMibCompliances, ciscoCtrlGroupRev21=ciscoCtrlGroupRev21, rttMonStats=rttMonStats, rttMonEchoAdminLSPReplyMode=rttMonEchoAdminLSPReplyMode, rttMonGrpScheduleAdminFreqMin=rttMonGrpScheduleAdminFreqMin, rttMonApplResponder=rttMonApplResponder, ciscoCtrlGroupRev10=ciscoCtrlGroupRev10, rttMonApplAuthKeyString2=rttMonApplAuthKeyString2, rttMonLatestHTTPOperMessageBodyOctets=rttMonLatestHTTPOperMessageBodyOctets, rttMonLpdGrpStatsLPDCompTime=rttMonLpdGrpStatsLPDCompTime, rttMonApplPreConfigedValid=rttMonApplPreConfigedValid, rttMonApplMaxPacketDataSize=rttMonApplMaxPacketDataSize, rttMonLpdGrpStatsResetTime=rttMonLpdGrpStatsResetTime, rttMonStatsCaptureCompletionTimeMax=rttMonStatsCaptureCompletionTimeMax, rttMonEchoAdminString3=rttMonEchoAdminString3, rttMonHTTPStatsTransactionTimeout=rttMonHTTPStatsTransactionTimeout, rttMonApplAuthKeyString1=rttMonApplAuthKeyString1, rttMonCtrlOperTimeoutOccurred=rttMonCtrlOperTimeoutOccurred, rttMonJitterStatsPacketLossDS=rttMonJitterStatsPacketLossDS, rttMonEchoAdminCallDuration=rttMonEchoAdminCallDuration, rttMonGrpScheduleAdminPeriod=rttMonGrpScheduleAdminPeriod, rttMonGrpScheduleAdminFrequency=rttMonGrpScheduleAdminFrequency, rttMonJitterStatsOWMinSDNew=rttMonJitterStatsOWMinSDNew, rttMonJitterStatsOWSumDS=rttMonJitterStatsOWSumDS, rttMonLpdGrpStatsEntry=rttMonLpdGrpStatsEntry, rttMonCtrlAdminOwner=rttMonCtrlAdminOwner, rttMonStatisticsAdminNumHourGroups=rttMonStatisticsAdminNumHourGroups, ciscoRttMonObsoleteGroupRev1=ciscoRttMonObsoleteGroupRev1, rttMonGeneratedOperRespIpAddr=rttMonGeneratedOperRespIpAddr, rttMonEchoAdminInputInterface=rttMonEchoAdminInputInterface, rttMonLatestJitterOperPacketLossSD=rttMonLatestJitterOperPacketLossSD, rttMonStatsCaptureStartTimeIndex=rttMonStatsCaptureStartTimeIndex)
mibBuilder.exportSymbols("CISCO-RTTMON-MIB", ciscoCtrlGroupRev2=ciscoCtrlGroupRev2, rttMonJitterStatsIAJOut=rttMonJitterStatsIAJOut, rttMplsVpnMonScheduleTable=rttMplsVpnMonScheduleTable, rttMonHistoryAdminNumSamples=rttMonHistoryAdminNumSamples, rttMplsVpnMonCtrlLpdGrpList=rttMplsVpnMonCtrlLpdGrpList, rttMonStatisticsAdminTable=rttMonStatisticsAdminTable, rttMonCtrlOperVerifyErrorOccurred=rttMonCtrlOperVerifyErrorOccurred, rttMonEchoAdminString1=rttMonEchoAdminString1, rttMonStatsCaptureEntry=rttMonStatsCaptureEntry, rttMonLpdGrpStatsNumOfFail=rttMonLpdGrpStatsNumOfFail, rttMonJitterStatsSumOfPositivesDS=rttMonJitterStatsSumOfPositivesDS, rttMonJitterStatsMaxOfNegativesDS=rttMonJitterStatsMaxOfNegativesDS, ciscoCtrlGroupRev9=ciscoCtrlGroupRev9, ciscoRttMonMibComplianceRev13=ciscoRttMonMibComplianceRev13, rttMonStatsCollectRetrieveErrors=rttMonStatsCollectRetrieveErrors, ciscoCtrlGroupRev15=ciscoCtrlGroupRev15, rttMonEchoAdminInterval=rttMonEchoAdminInterval, rttMonEchoAdminCodecNumPackets=rttMonEchoAdminCodecNumPackets, rttMonGrpScheduleAdminProbes=rttMonGrpScheduleAdminProbes, rttMonStatsCaptureOverThresholds=rttMonStatsCaptureOverThresholds, rttMonApplAuthIndex=rttMonApplAuthIndex, rttMonJitterStatsEntry=rttMonJitterStatsEntry, rttMonEchoAdminProxy=rttMonEchoAdminProxy, rttMonEchoAdminLSPFECType=rttMonEchoAdminLSPFECType, rttMonHTTPStatsDNSServerTimeout=rttMonHTTPStatsDNSServerTimeout, rttMonLatestJitterOperMaxOfNegativesDS=rttMonLatestJitterOperMaxOfNegativesDS, rttMplsVpnMonTypeSecFreqValue=rttMplsVpnMonTypeSecFreqValue, rttMonLatestJitterOperNumOfNegativesSD=rttMonLatestJitterOperNumOfNegativesSD, rttMonLatestJitterOperIAJOut=rttMonLatestJitterOperIAJOut, rttMonReactTriggerOperState=rttMonReactTriggerOperState, rttMonEchoAdminProbePakPriority=rttMonEchoAdminProbePakPriority, rttMonLpdGrpStatsNumOfTimeout=rttMonLpdGrpStatsNumOfTimeout, ciscoCtrlGroupRev22=ciscoCtrlGroupRev22, rttMonHTTPStatsError=rttMonHTTPStatsError, rttMonEchoAdminHTTPVersion=rttMonEchoAdminHTTPVersion, rttMonEchoAdminCache=rttMonEchoAdminCache, rttMonStatsCollectNumDisconnects=rttMonStatsCollectNumDisconnects, rttMonEchoAdminProtocol=rttMonEchoAdminProtocol, rttMonLatestJitterOperPacketLossDS=rttMonLatestJitterOperPacketLossDS, rttMonStatsCollectCtrlEnErrors=rttMonStatsCollectCtrlEnErrors, rttMonJitterStatsMinOfNegativesSD=rttMonJitterStatsMinOfNegativesSD, rttMonLpdGrpStatsNumOfPass=rttMonLpdGrpStatsNumOfPass, ciscoCtrlGroupRev18=ciscoCtrlGroupRev18, rttMonStatsCaptureHopIndex=rttMonStatsCaptureHopIndex, rttMplsVpnMonTypeLpdEchoInterval=rttMplsVpnMonTypeLpdEchoInterval, rttMonLpdDiscoveryNotification=rttMonLpdDiscoveryNotification, rttMonLpdGrpStatsProbeStatus=rttMonLpdGrpStatsProbeStatus, rttMonScheduleAdminRttLife=rttMonScheduleAdminRttLife, ciscoStatsGroupRev5=ciscoStatsGroupRev5, rttMonJitterStatsOWMaxDS=rttMonJitterStatsOWMaxDS, rttMonNotificationsPrefix=rttMonNotificationsPrefix, rttMonJitterStatsPacketLateArrival=rttMonJitterStatsPacketLateArrival, ciscoApplGroupRev3=ciscoApplGroupRev3, rttMonScheduleAdminConceptRowAgeoutV2=rttMonScheduleAdminConceptRowAgeoutV2, rttMonLatestJitterOperRTTMin=rttMonLatestJitterOperRTTMin, rttMonHistoryAdminNumBuckets=rttMonHistoryAdminNumBuckets, rttMplsVpnMonCtrlTable=rttMplsVpnMonCtrlTable, rttMonJitterStatsOverThresholds=rttMonJitterStatsOverThresholds, rttMonHistoryAdminNumLives=rttMonHistoryAdminNumLives, rttMonEchoAdminCodecInterval=rttMonEchoAdminCodecInterval, rttMonEchoAdminLSPTTL=rttMonEchoAdminLSPTTL, rttMonJitterStatsOWMinDSNew=rttMonJitterStatsOWMinDSNew, rttMonScriptAdminTable=rttMonScriptAdminTable, ciscoRttMonMibComplianceRev15=ciscoRttMonMibComplianceRev15, rttMonCtrlAdminVerifyData=rttMonCtrlAdminVerifyData, rttMonLatestJitterOperMinOfNegativesDS=rttMonLatestJitterOperMinOfNegativesDS, rttMplsVpnMonCtrlStorageType=rttMplsVpnMonCtrlStorageType, PYSNMP_MODULE_ID=ciscoRttMonMIB, ciscoCtrlGroupRev27=ciscoCtrlGroupRev27, rttMonEchoAdminMode=rttMonEchoAdminMode, rttMonApplPreConfigedEntry=rttMonApplPreConfigedEntry, rttMonJitterStatsOWSumDSHigh=rttMonJitterStatsOWSumDSHigh, rttMplsVpnMonTypeLSPReplyDscp=rttMplsVpnMonTypeLSPReplyDscp, rttMplsVpnMonReactLpdNotifyType=rttMplsVpnMonReactLpdNotifyType, rttMonHistory=rttMonHistory, rttMonHTTPStatsEntry=rttMonHTTPStatsEntry, rttMonHTTPStatsRTTSum=rttMonHTTPStatsRTTSum, ciscoRttMonMIB=ciscoRttMonMIB, rttMonEchoAdminAvailNumFrames=rttMonEchoAdminAvailNumFrames, rttMonApplPreConfigedType=rttMonApplPreConfigedType, rttMonLpdGrpStatsMinNumPaths=rttMonLpdGrpStatsMinNumPaths, rttMonCtrlOperState=rttMonCtrlOperState, rttMonHistoryAdminEntry=rttMonHistoryAdminEntry, rttMonCtrlAdminThreshold=rttMonCtrlAdminThreshold, rttMonApplAuthKeyChain=rttMonApplAuthKeyChain, ciscoCtrlGroupRev6=ciscoCtrlGroupRev6, rttMonLatestHTTPOperEntry=rttMonLatestHTTPOperEntry, rttMonJitterStatsOWSum2DSLow=rttMonJitterStatsOWSum2DSLow, rttMonJitterStatsOWSum2SDHigh=rttMonJitterStatsOWSum2SDHigh)
