#
# PySNMP MIB module HPN-ICF-PPP-OVER-SONET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-PPP-OVER-SONET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, Counter64, Integer32, ModuleIdentity, Bits, Unsigned32, NotificationType, Counter32, TimeTicks, iso, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "Counter64", "Integer32", "ModuleIdentity", "Bits", "Unsigned32", "NotificationType", "Counter32", "TimeTicks", "iso", "Gauge32", "IpAddress")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
hpnicfPos = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19))
hpnicfPos.setRevisions(('2013-10-10 17:00', '2010-05-19 17:00', '2007-07-19 17:00',))
if mibBuilder.loadTexts: hpnicfPos.setLastUpdated('201310101700Z')
if mibBuilder.loadTexts: hpnicfPos.setOrganization('')
hpnicfPosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1))
hpnicfPosParamTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1), )
if mibBuilder.loadTexts: hpnicfPosParamTable.setStatus('current')
hpnicfPosParamTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosParamTableEntry.setStatus('current')
hpnicfPosCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc32", 1), ("crc16", 2))).clone('crc32')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosCRC.setStatus('current')
hpnicfPosMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosMTU.setStatus('current')
hpnicfPosScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosScramble.setStatus('current')
hpnicfPosClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("system", 1), ("line", 2))).clone('line')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosClockSource.setStatus('current')
hpnicfPosSdhFlagJ0 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosSdhFlagJ0.setStatus('current')
hpnicfPosSdhFlagJ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosSdhFlagJ1.setStatus('current')
hpnicfPosSonetFlagJ0 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosSonetFlagJ0.setStatus('current')
hpnicfPosSonetFlagJ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 62))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosSonetFlagJ1.setStatus('current')
hpnicfPosFlagC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosFlagC2.setStatus('current')
hpnicfPosFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sdh", 1), ("sonet", 2))).clone('sdh')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosFrameType.setStatus('current')
hpnicfPosBindVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosBindVlanId.setStatus('current')
hpnicfPosEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ppp", 1), ("hdlc", 2), ("fr", 3))).clone('ppp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosEncapsulation.setStatus('current')
hpnicfPoskeepaliveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPoskeepaliveTimeout.setStatus('current')
hpnicfPosBERthresholdSF = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 9)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosBERthresholdSF.setStatus('current')
hpnicfPosBERthresholdSD = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 9)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosBERthresholdSD.setStatus('current')
hpnicfPosB1Error = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosB1Error.setStatus('current')
hpnicfPosB2Error = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosB2Error.setStatus('current')
hpnicfPosB3Error = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosB3Error.setStatus('current')
hpnicfPosM1Error = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosM1Error.setStatus('current')
hpnicfPosG1Error = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfPosG1Error.setStatus('current')
hpnicfPosFlagJ0Type = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sdh", 1), ("sonet", 2))).clone('sdh')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosFlagJ0Type.setStatus('current')
hpnicfPosFlagJ1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sdh", 1), ("sonet", 2))).clone('sdh')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosFlagJ1Type.setStatus('current')
hpnicfPosB1TCAThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 9)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosB1TCAThreshold.setStatus('current')
hpnicfPosB2TCAThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 9)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosB2TCAThreshold.setStatus('current')
hpnicfPosB3TCAThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 9)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosB3TCAThreshold.setStatus('current')
hpnicfPosB1TCAEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosB1TCAEnable.setStatus('current')
hpnicfPosB2TCAEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosB2TCAEnable.setStatus('current')
hpnicfPosB3TCAEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPosB3TCAEnable.setStatus('current')
hpnicfPosMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2))
hpnicfPosMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0))
hpnicfPosLOSAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 1)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosLOSAlarm.setStatus('current')
hpnicfPosLOFAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 2)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosLOFAlarm.setStatus('current')
hpnicfPosOOFAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 3)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosOOFAlarm.setStatus('current')
hpnicfPosLAISAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 4)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosLAISAlarm.setStatus('current')
hpnicfPosLRDIAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 5)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosLRDIAlarm.setStatus('current')
hpnicfPosPRDIAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 6)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosPRDIAlarm.setStatus('current')
hpnicfPosPAISAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 7)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosPAISAlarm.setStatus('current')
hpnicfPosLOPAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 8)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosLOPAlarm.setStatus('current')
hpnicfPosSTIMAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 9)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosSTIMAlarm.setStatus('current')
hpnicfPosPTIMAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 10)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosPTIMAlarm.setStatus('current')
hpnicfPosPSLMAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 11)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosPSLMAlarm.setStatus('current')
hpnicfPosLSDAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 12)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosLSDAlarm.setStatus('current')
hpnicfPosLSFAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 13)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosLSFAlarm.setStatus('current')
hpnicfPosNormalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 14)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPosNormalAlarm.setStatus('current')
hpnicfPosB1TCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 15)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfPosB1TCAlarm.setStatus('current')
hpnicfPosB2TCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 16)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfPosB2TCAlarm.setStatus('current')
hpnicfPosB3TCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 19, 2, 0, 17)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfPosB3TCAlarm.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-PPP-OVER-SONET-MIB", hpnicfPosB3TCAlarm=hpnicfPosB3TCAlarm, hpnicfPosFrameType=hpnicfPosFrameType, hpnicfPosSdhFlagJ1=hpnicfPosSdhFlagJ1, hpnicfPosB1Error=hpnicfPosB1Error, hpnicfPosFlagJ0Type=hpnicfPosFlagJ0Type, hpnicfPosOOFAlarm=hpnicfPosOOFAlarm, hpnicfPosB2Error=hpnicfPosB2Error, hpnicfPosB1TCAThreshold=hpnicfPosB1TCAThreshold, hpnicfPosScramble=hpnicfPosScramble, hpnicfPosSdhFlagJ0=hpnicfPosSdhFlagJ0, hpnicfPosLAISAlarm=hpnicfPosLAISAlarm, hpnicfPosLSDAlarm=hpnicfPosLSDAlarm, hpnicfPos=hpnicfPos, hpnicfPosParamTableEntry=hpnicfPosParamTableEntry, hpnicfPosSTIMAlarm=hpnicfPosSTIMAlarm, hpnicfPosPRDIAlarm=hpnicfPosPRDIAlarm, hpnicfPoskeepaliveTimeout=hpnicfPoskeepaliveTimeout, hpnicfPosLOSAlarm=hpnicfPosLOSAlarm, hpnicfPosB2TCAThreshold=hpnicfPosB2TCAThreshold, hpnicfPosEncapsulation=hpnicfPosEncapsulation, hpnicfPosM1Error=hpnicfPosM1Error, hpnicfPosB2TCAEnable=hpnicfPosB2TCAEnable, hpnicfPosB1TCAlarm=hpnicfPosB1TCAlarm, hpnicfPosB3TCAEnable=hpnicfPosB3TCAEnable, hpnicfPosFlagJ1Type=hpnicfPosFlagJ1Type, hpnicfPosFlagC2=hpnicfPosFlagC2, hpnicfPosBindVlanId=hpnicfPosBindVlanId, hpnicfPosLRDIAlarm=hpnicfPosLRDIAlarm, hpnicfPosClockSource=hpnicfPosClockSource, hpnicfPosLSFAlarm=hpnicfPosLSFAlarm, hpnicfPosMIBNotifications=hpnicfPosMIBNotifications, hpnicfPosNormalAlarm=hpnicfPosNormalAlarm, hpnicfPosBERthresholdSF=hpnicfPosBERthresholdSF, hpnicfPosB3TCAThreshold=hpnicfPosB3TCAThreshold, hpnicfPosG1Error=hpnicfPosG1Error, hpnicfPosB2TCAlarm=hpnicfPosB2TCAlarm, hpnicfPosBERthresholdSD=hpnicfPosBERthresholdSD, hpnicfPosMIBObjects=hpnicfPosMIBObjects, hpnicfPosLOPAlarm=hpnicfPosLOPAlarm, hpnicfPosMIBNotificationsPrefix=hpnicfPosMIBNotificationsPrefix, hpnicfPosParamTable=hpnicfPosParamTable, hpnicfPosSonetFlagJ1=hpnicfPosSonetFlagJ1, hpnicfPosSonetFlagJ0=hpnicfPosSonetFlagJ0, PYSNMP_MODULE_ID=hpnicfPos, hpnicfPosLOFAlarm=hpnicfPosLOFAlarm, hpnicfPosPAISAlarm=hpnicfPosPAISAlarm, hpnicfPosB1TCAEnable=hpnicfPosB1TCAEnable, hpnicfPosB3Error=hpnicfPosB3Error, hpnicfPosCRC=hpnicfPosCRC, hpnicfPosPSLMAlarm=hpnicfPosPSLMAlarm, hpnicfPosPTIMAlarm=hpnicfPosPTIMAlarm, hpnicfPosMTU=hpnicfPosMTU)
