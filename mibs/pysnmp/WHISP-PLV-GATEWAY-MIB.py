#
# PySNMP MIB module WHISP-PLV-GATEWAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WHISP-PLV-GATEWAY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, TimeTicks, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, Gauge32, ModuleIdentity, Unsigned32, Counter32, Counter64, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "Gauge32", "ModuleIdentity", "Unsigned32", "Counter32", "Counter64", "IpAddress", "Integer32")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
whispPlvGateway, = mibBuilder.importSymbols("WHISP-GLOBAL-REG-MIB", "whispPlvGateway")
WhispLUID, WhispMACAddress = mibBuilder.importSymbols("WHISP-TC-MIB", "WhispLUID", "WhispMACAddress")
whispPlvGatewayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1))
whispPlvGatewayMIB.setRevisions(('2006-07-28 10:30',))
if mibBuilder.loadTexts: whispPlvGatewayMIB.setLastUpdated('200607281030Z')
if mibBuilder.loadTexts: whispPlvGatewayMIB.setOrganization('Motorola')
whispPlvGatewayObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1))
whispPlvGwInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1))
gwInfoModel = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoModel.setStatus('current')
gwInfoSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoSerialNumber.setStatus('current')
gwInfoLanMac = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoLanMac.setStatus('current')
gwInfoWanMac = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoWanMac.setStatus('current')
gwInfoPlcMac = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoPlcMac.setStatus('current')
gwInfoHardwareVer = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoHardwareVer.setStatus('current')
gwInfoDevFirmwareVer = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoDevFirmwareVer.setStatus('current')
gwInfoLoaderVer = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoLoaderVer.setStatus('current')
gwInfoSimFirmwareVer = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoSimFirmwareVer.setStatus('current')
gwInfoModemCount = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoModemCount.setStatus('current')
gwInfoDeviceUpgradeStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notStarted", 1), ("inProgress", 2), ("failed", 3), ("successful", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoDeviceUpgradeStatus.setStatus('current')
gwInfoSimUpgradeStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notStarted", 1), ("inProgress", 2), ("failed", 3), ("successful", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoSimUpgradeStatus.setStatus('current')
gwInfoTemperature = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 1, 13), Integer32()).setUnits('Degrees Centigrade.').setMaxAccess("readonly")
if mibBuilder.loadTexts: gwInfoTemperature.setStatus('current')
whispPlvGwConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 2))
gwConfNtpConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfNtpConfig.setStatus('current')
gwConfNtpServer = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfNtpServer.setStatus('current')
gwConfTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTime.setStatus('current')
gwConfDate = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfDate.setStatus('current')
gwConfModemTableTimeout = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfModemTableTimeout.setStatus('current')
gwConfAutoLogoutTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3660))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfAutoLogoutTime.setStatus('current')
gwConfPSD = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 2, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(84, 84)).setFixedLength(84)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfPSD.setStatus('current')
whispPlvGwTrapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3))
gwConfTrapIp1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp1.setStatus('current')
gwConfTrapCommStr1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr1.setStatus('current')
gwConfTrapIp2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp2.setStatus('current')
gwConfTrapCommStr2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr2.setStatus('current')
gwConfTrapIp3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp3.setStatus('current')
gwConfTrapCommStr3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr3.setStatus('current')
gwConfTrapIp4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp4.setStatus('current')
gwConfTrapCommStr4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr4.setStatus('current')
gwConfTrapIp5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp5.setStatus('current')
gwConfTrapCommStr5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr5.setStatus('current')
gwConfTrapIp6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp6.setStatus('current')
gwConfTrapCommStr6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr6.setStatus('current')
gwConfTrapIp7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp7.setStatus('current')
gwConfTrapCommStr7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr7.setStatus('current')
gwConfTrapIp8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp8.setStatus('current')
gwConfTrapCommStr8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr8.setStatus('current')
gwConfTrapIp9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 17), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp9.setStatus('current')
gwConfTrapCommStr9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr9.setStatus('current')
gwConfTrapIp10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 19), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapIp10.setStatus('current')
gwConfTrapCommStr10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 3, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwConfTrapCommStr10.setStatus('current')
whispPlvGwPwrLnStats = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4))
gwPwrLnMaxDelay = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwPwrLnMaxDelay.setStatus('current')
gwPwrLnTxAck = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwPwrLnTxAck.setStatus('current')
gwPwrLnTxNak = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwPwrLnTxNak.setStatus('current')
gwPwrLnTxFail = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwPwrLnTxFail.setStatus('current')
gwPwrLnTxColl = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwPwrLnTxColl.setStatus('current')
gwPwrLnTxCarrLoss = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwPwrLnTxCarrLoss.setStatus('current')
gwPwrLnRoboByte40 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwPwrLnRoboByte40.setStatus('current')
gwPwrLnRoboFails = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwPwrLnRoboFails.setStatus('current')
gwPwrLnRoboDrops = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 4, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwPwrLnRoboDrops.setStatus('current')
whispPlvGwAdmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5))
gwAdmConfLoginUsername = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfLoginUsername.setStatus('current')
gwAdmConfLoginPassword = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfLoginPassword.setStatus('current')
gwAdmConfNEK = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfNEK.setStatus('current')
gwAdmConfAuthServIp1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfAuthServIp1.setStatus('current')
gwAdmConfAuthServIp2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfAuthServIp2.setStatus('current')
gwAdmConfAuthServIp3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfAuthServIp3.setStatus('current')
gwAdmConfAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfAuthMode.setStatus('current')
gwAdmConfAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfAuthKey.setStatus('current')
gwAdmConfAuthKeyOption = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("useDefaultKey", 1), ("useKeySet", 2))).clone('useDefaultKey')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfAuthKeyOption.setStatus('current')
gwAdmConfSnmpGetCommStr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfSnmpGetCommStr.setStatus('current')
gwAdmConfSnmpSetCommStr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfSnmpSetCommStr.setStatus('current')
gwAdmConfSnmpAdminCommStr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfSnmpAdminCommStr.setStatus('current')
gwAdmConfFtpServerIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfFtpServerIp.setStatus('current')
gwAdmConfFtpUsername = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfFtpUsername.setStatus('current')
gwAdmConfFtpPassword = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfFtpPassword.setStatus('current')
gwAdmConfFtpFile = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfFtpFile.setStatus('current')
gwAdmConfDeviceUpgradeStart = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upgrade", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfDeviceUpgradeStart.setStatus('current')
gwAdmConfSimUpgradeStart = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upgrade", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfSimUpgradeStart.setStatus('current')
gwAdmConfSystemReboot = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reboot", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfSystemReboot.setStatus('current')
gwAdmConfReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfReset.setStatus('current')
gwAdmConfDeviceMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switch", 1), ("nat", 2))).clone('switch')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfDeviceMode.setStatus('current')
gwAdmConfLUIDStart = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfLUIDStart.setStatus('current')
gwAdmConfLUIDEnd = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfLUIDEnd.setStatus('current')
gwAdmConfVLANPassthroughStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfVLANPassthroughStatus.setStatus('current')
gwAdmConfManagementVLANId = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 5, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfManagementVLANId.setStatus('current')
whispPlvGwAdmLanConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 6))
gwAdmConfLanConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfLanConfig.setStatus('current')
gwAdmConfLanIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfLanIp.setStatus('current')
gwAdmConfLanSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 6, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfLanSubnetMask.setStatus('current')
gwAdmConfLanGatewayIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 6, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmConfLanGatewayIp.setStatus('current')
whispPlvGwAdmSnmpAcessConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7))
gwAdmSnmpAccessIpNetwork1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork1.setStatus('current')
gwAdmSnmpAccessIpNetworkMask1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask1.setStatus('current')
gwAdmSnmpAccessIpNetwork2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork2.setStatus('current')
gwAdmSnmpAccessIpNetworkMask2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask2.setStatus('current')
gwAdmSnmpAccessIpNetwork3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork3.setStatus('current')
gwAdmSnmpAccessIpNetworkMask3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask3.setStatus('current')
gwAdmSnmpAccessIpNetwork4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork4.setStatus('current')
gwAdmSnmpAccessIpNetworkMask4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask4.setStatus('current')
gwAdmSnmpAccessIpNetwork5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork5.setStatus('current')
gwAdmSnmpAccessIpNetworkMask5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask5.setStatus('current')
gwAdmSnmpAccessIpNetwork6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork6.setStatus('current')
gwAdmSnmpAccessIpNetworkMask6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask6.setStatus('current')
gwAdmSnmpAccessIpNetwork7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork7.setStatus('current')
gwAdmSnmpAccessIpNetworkMask7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask7.setStatus('current')
gwAdmSnmpAccessIpNetwork8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork8.setStatus('current')
gwAdmSnmpAccessIpNetworkMask8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask8.setStatus('current')
gwAdmSnmpAccessIpNetwork9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 17), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork9.setStatus('current')
gwAdmSnmpAccessIpNetworkMask9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask9.setStatus('current')
gwAdmSnmpAccessIpNetwork10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 19), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetwork10.setStatus('current')
gwAdmSnmpAccessIpNetworkMask10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 7, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmSnmpAccessIpNetworkMask10.setStatus('current')
whispPlvGwAdmWanConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8))
gwAdmWConfWanConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dynamicIp", 1), ("staticIp", 2), ("pppoe", 3), ("pptp", 4))).clone('dynamicIp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfWanConfig.setStatus('current')
gwAdmWConfWanIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfWanIp.setStatus('current')
gwAdmWConfSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfSubnetMask.setStatus('current')
gwAdmWConfGateway = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfGateway.setStatus('current')
gwAdmWConfDNS1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfDNS1.setStatus('current')
gwAdmWConfDNS2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfDNS2.setStatus('current')
gwAdmWConfPppoeUsername = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfPppoeUsername.setStatus('current')
gwAdmWConfPppoePassword = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfPppoePassword.setStatus('current')
gwAdmWConfDhcpConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfDhcpConfig.setStatus('current')
gwAdmWConfDhcpStartIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfDhcpStartIp.setStatus('current')
gwAdmWConfDhcpEndIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfDhcpEndIp.setStatus('current')
gwAdmWConfDhcpLeaseTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("thirtyMins", 1), ("oneHour", 2), ("twoHours", 3), ("twelveHours", 4), ("oneDay", 5), ("twoDays", 6), ("oneWeek", 7), ("twoWeeks", 8))).clone('oneDay')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfDhcpLeaseTime.setStatus('current')
gwAdmWConfUpnpConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfUpnpConfig.setStatus('current')
gwAdmWConfFirewallConfig = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 8, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwAdmWConfFirewallConfig.setStatus('current')
whispPlvGwModemTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9), )
if mibBuilder.loadTexts: whispPlvGwModemTable.setStatus('current')
whispPlvGwModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1), ).setIndexNames((0, "WHISP-PLV-GATEWAY-MIB", "gwModemLUID"))
if mibBuilder.loadTexts: whispPlvGwModemEntry.setStatus('current')
gwModemLUID = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 1), WhispLUID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemLUID.setStatus('current')
gwModemDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemDescr.setStatus('current')
gwModemPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 3), WhispMACAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemPhysAddress.setStatus('current')
gwModemIP = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemIP.setStatus('current')
gwModemHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemHardwareVersion.setStatus('current')
gwModemSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemSoftwareVersion.setStatus('current')
gwModemSoftwareBootVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemSoftwareBootVersion.setStatus('current')
gwModemSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 0), ("inSession", 1), ("clearing", 2), ("reRegDnRst", 3), ("authChal", 4), ("registering", 5), ("notInUse", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemSessState.setStatus('current')
gwModemsessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemsessionCount.setStatus('current')
gwModemMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemMtu.setStatus('current')
gwModemSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemSpeed.setStatus('current')
gwModemInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemInOctets.setStatus('current')
gwModemInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemInUcastPkts.setStatus('current')
gwModemInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemInNUcastPkts.setStatus('current')
gwModemInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemInDiscards.setStatus('current')
gwModemInError = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemInError.setStatus('current')
gwModemInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemInUnknownProtos.setStatus('current')
gwModemOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemOutOctets.setStatus('current')
gwModemOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemOutUcastPkts.setStatus('current')
gwModemOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemOutNUcastPkts.setStatus('current')
gwModemOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemOutDiscards.setStatus('current')
gwModemOutError = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemOutError.setStatus('current')
gwModemOutQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemOutQLen.setStatus('current')
gwModemRoboByte40 = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemRoboByte40.setStatus('current')
gwModemRoboFails = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemRoboFails.setStatus('current')
gwModemRoboDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemRoboDrops.setStatus('current')
gwModemDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("modem", 0), ("repeater", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemDeviceType.setStatus('current')
gwModemPSD = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 1, 9, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(84, 84)).setFixedLength(84)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwModemPSD.setStatus('current')
whispPlvGatewayEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 2))
gwTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 2, 0))
gwTrapRegComplete = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 2, 0, 1)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwModemLUID"), ("WHISP-PLV-GATEWAY-MIB", "gwModemPhysAddress"))
if mibBuilder.loadTexts: gwTrapRegComplete.setStatus('current')
gwTrapRegLost = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 2, 0, 2)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwModemLUID"), ("WHISP-PLV-GATEWAY-MIB", "gwModemPhysAddress"))
if mibBuilder.loadTexts: gwTrapRegLost.setStatus('current')
gwTrapDeviceUpgradeStarted = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 2, 0, 3)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwInfoDeviceUpgradeStatus"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoDevFirmwareVer"))
if mibBuilder.loadTexts: gwTrapDeviceUpgradeStarted.setStatus('current')
gwTrapDeviceUpgradeCompleted = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 2, 0, 4)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwInfoDeviceUpgradeStatus"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoDevFirmwareVer"))
if mibBuilder.loadTexts: gwTrapDeviceUpgradeCompleted.setStatus('current')
gwTrapSimUpgradeStarted = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 2, 0, 5)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwInfoSimUpgradeStatus"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoSimFirmwareVer"))
if mibBuilder.loadTexts: gwTrapSimUpgradeStarted.setStatus('current')
gwTrapSimUpgradeCompleted = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 2, 0, 6)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwInfoSimUpgradeStatus"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoSimFirmwareVer"))
if mibBuilder.loadTexts: gwTrapSimUpgradeCompleted.setStatus('current')
whispPlvGatewayConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3))
whispPlvGatewayGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1))
whispPlvGatewayCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 2))
whispPlvGatewayInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 1)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwInfoModel"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoSerialNumber"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoLanMac"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoWanMac"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoPlcMac"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoHardwareVer"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoDevFirmwareVer"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoLoaderVer"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoSimFirmwareVer"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoModemCount"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoDeviceUpgradeStatus"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoSimUpgradeStatus"), ("WHISP-PLV-GATEWAY-MIB", "gwInfoTemperature"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayInfoGroup = whispPlvGatewayInfoGroup.setStatus('current')
whispPlvGatewayConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 2)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwConfNtpConfig"), ("WHISP-PLV-GATEWAY-MIB", "gwConfNtpServer"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTime"), ("WHISP-PLV-GATEWAY-MIB", "gwConfDate"), ("WHISP-PLV-GATEWAY-MIB", "gwConfModemTableTimeout"), ("WHISP-PLV-GATEWAY-MIB", "gwConfAutoLogoutTime"), ("WHISP-PLV-GATEWAY-MIB", "gwConfPSD"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayConfigGroup = whispPlvGatewayConfigGroup.setStatus('current')
whispPlvGatewayTrapConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 3)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp1"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr1"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp2"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr2"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp3"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr3"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp4"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr4"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp5"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr5"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp6"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr6"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp7"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr7"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp8"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr8"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp9"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr9"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapIp10"), ("WHISP-PLV-GATEWAY-MIB", "gwConfTrapCommStr10"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayTrapConfigGroup = whispPlvGatewayTrapConfigGroup.setStatus('current')
whispPlvGatewayPowerlineGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 4)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwPwrLnMaxDelay"), ("WHISP-PLV-GATEWAY-MIB", "gwPwrLnTxAck"), ("WHISP-PLV-GATEWAY-MIB", "gwPwrLnTxNak"), ("WHISP-PLV-GATEWAY-MIB", "gwPwrLnTxFail"), ("WHISP-PLV-GATEWAY-MIB", "gwPwrLnTxColl"), ("WHISP-PLV-GATEWAY-MIB", "gwPwrLnTxCarrLoss"), ("WHISP-PLV-GATEWAY-MIB", "gwPwrLnRoboByte40"), ("WHISP-PLV-GATEWAY-MIB", "gwPwrLnRoboFails"), ("WHISP-PLV-GATEWAY-MIB", "gwPwrLnRoboDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayPowerlineGroup = whispPlvGatewayPowerlineGroup.setStatus('current')
whispPlvGatewayAdmConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 5)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwAdmConfLoginUsername"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfLoginPassword"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfNEK"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfAuthServIp1"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfAuthServIp2"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfAuthServIp3"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfAuthMode"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfAuthKey"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfAuthKeyOption"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfSnmpGetCommStr"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfSnmpSetCommStr"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfSnmpAdminCommStr"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfFtpServerIp"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfFtpUsername"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfFtpPassword"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfFtpFile"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfDeviceUpgradeStart"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfSimUpgradeStart"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfSystemReboot"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfReset"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfDeviceMode"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfLUIDStart"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfLUIDEnd"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfVLANPassthroughStatus"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfManagementVLANId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayAdmConfigGroup = whispPlvGatewayAdmConfigGroup.setStatus('current')
whispPlvGatewayAdmLanConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 6)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwAdmConfLanConfig"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfLanIp"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfLanSubnetMask"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmConfLanGatewayIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayAdmLanConfigGroup = whispPlvGatewayAdmLanConfigGroup.setStatus('current')
whispPlvGatewayAdmSnmpAccessConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 7)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork1"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask1"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork2"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask2"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork3"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask3"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork4"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask4"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork5"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask5"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork6"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask6"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork7"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask7"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork8"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask8"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork9"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask9"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetwork10"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmSnmpAccessIpNetworkMask10"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayAdmSnmpAccessConfigGroup = whispPlvGatewayAdmSnmpAccessConfigGroup.setStatus('current')
whispPlvGatewayAdmWanConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 8)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfWanConfig"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfWanIp"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfSubnetMask"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfGateway"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfDNS1"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfDNS2"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfPppoeUsername"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfPppoePassword"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfDhcpConfig"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfDhcpStartIp"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfDhcpEndIp"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfDhcpLeaseTime"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfUpnpConfig"), ("WHISP-PLV-GATEWAY-MIB", "gwAdmWConfFirewallConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayAdmWanConfigGroup = whispPlvGatewayAdmWanConfigGroup.setStatus('current')
whispPlvGatewayAdmModemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 9)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwModemLUID"), ("WHISP-PLV-GATEWAY-MIB", "gwModemDescr"), ("WHISP-PLV-GATEWAY-MIB", "gwModemPhysAddress"), ("WHISP-PLV-GATEWAY-MIB", "gwModemIP"), ("WHISP-PLV-GATEWAY-MIB", "gwModemHardwareVersion"), ("WHISP-PLV-GATEWAY-MIB", "gwModemSoftwareVersion"), ("WHISP-PLV-GATEWAY-MIB", "gwModemSoftwareBootVersion"), ("WHISP-PLV-GATEWAY-MIB", "gwModemSessState"), ("WHISP-PLV-GATEWAY-MIB", "gwModemsessionCount"), ("WHISP-PLV-GATEWAY-MIB", "gwModemMtu"), ("WHISP-PLV-GATEWAY-MIB", "gwModemSpeed"), ("WHISP-PLV-GATEWAY-MIB", "gwModemInOctets"), ("WHISP-PLV-GATEWAY-MIB", "gwModemInUcastPkts"), ("WHISP-PLV-GATEWAY-MIB", "gwModemInNUcastPkts"), ("WHISP-PLV-GATEWAY-MIB", "gwModemInDiscards"), ("WHISP-PLV-GATEWAY-MIB", "gwModemInError"), ("WHISP-PLV-GATEWAY-MIB", "gwModemInUnknownProtos"), ("WHISP-PLV-GATEWAY-MIB", "gwModemOutOctets"), ("WHISP-PLV-GATEWAY-MIB", "gwModemOutUcastPkts"), ("WHISP-PLV-GATEWAY-MIB", "gwModemOutNUcastPkts"), ("WHISP-PLV-GATEWAY-MIB", "gwModemOutDiscards"), ("WHISP-PLV-GATEWAY-MIB", "gwModemOutError"), ("WHISP-PLV-GATEWAY-MIB", "gwModemOutQLen"), ("WHISP-PLV-GATEWAY-MIB", "gwModemRoboByte40"), ("WHISP-PLV-GATEWAY-MIB", "gwModemRoboFails"), ("WHISP-PLV-GATEWAY-MIB", "gwModemRoboDrops"), ("WHISP-PLV-GATEWAY-MIB", "gwModemDeviceType"), ("WHISP-PLV-GATEWAY-MIB", "gwModemPSD"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayAdmModemGroup = whispPlvGatewayAdmModemGroup.setStatus('current')
whispPlvGatewayNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 1, 10)).setObjects(("WHISP-PLV-GATEWAY-MIB", "gwTrapRegComplete"), ("WHISP-PLV-GATEWAY-MIB", "gwTrapRegLost"), ("WHISP-PLV-GATEWAY-MIB", "gwTrapDeviceUpgradeStarted"), ("WHISP-PLV-GATEWAY-MIB", "gwTrapDeviceUpgradeCompleted"), ("WHISP-PLV-GATEWAY-MIB", "gwTrapSimUpgradeStarted"), ("WHISP-PLV-GATEWAY-MIB", "gwTrapSimUpgradeCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayNotificationsGroup = whispPlvGatewayNotificationsGroup.setStatus('current')
whispPlvGatewayCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 161, 19, 3, 8, 1, 3, 2, 1)).setObjects(("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayInfoGroup"), ("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayConfigGroup"), ("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayTrapConfigGroup"), ("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayPowerlineGroup"), ("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayAdmConfigGroup"), ("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayAdmLanConfigGroup"), ("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayAdmSnmpAccessConfigGroup"), ("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayAdmWanConfigGroup"), ("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayAdmModemGroup"), ("WHISP-PLV-GATEWAY-MIB", "whispPlvGatewayNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    whispPlvGatewayCompliance = whispPlvGatewayCompliance.setStatus('current')
mibBuilder.exportSymbols("WHISP-PLV-GATEWAY-MIB", gwAdmConfFtpUsername=gwAdmConfFtpUsername, gwInfoDevFirmwareVer=gwInfoDevFirmwareVer, gwAdmConfAuthServIp2=gwAdmConfAuthServIp2, gwConfTrapCommStr5=gwConfTrapCommStr5, gwConfTrapIp5=gwConfTrapIp5, gwAdmConfLoginUsername=gwAdmConfLoginUsername, whispPlvGwAdmSnmpAcessConfig=whispPlvGwAdmSnmpAcessConfig, gwAdmSnmpAccessIpNetworkMask5=gwAdmSnmpAccessIpNetworkMask5, gwModemInError=gwModemInError, gwConfTrapCommStr9=gwConfTrapCommStr9, gwConfAutoLogoutTime=gwConfAutoLogoutTime, gwTrapSimUpgradeStarted=gwTrapSimUpgradeStarted, gwConfTrapIp6=gwConfTrapIp6, gwInfoLanMac=gwInfoLanMac, gwPwrLnTxFail=gwPwrLnTxFail, gwAdmConfAuthKeyOption=gwAdmConfAuthKeyOption, gwAdmConfLanGatewayIp=gwAdmConfLanGatewayIp, whispPlvGatewayGroups=whispPlvGatewayGroups, gwAdmConfSnmpGetCommStr=gwAdmConfSnmpGetCommStr, gwModemSessState=gwModemSessState, gwConfTrapCommStr7=gwConfTrapCommStr7, gwConfTrapCommStr10=gwConfTrapCommStr10, whispPlvGatewayNotificationsGroup=whispPlvGatewayNotificationsGroup, gwAdmSnmpAccessIpNetworkMask8=gwAdmSnmpAccessIpNetworkMask8, gwAdmConfAuthMode=gwAdmConfAuthMode, gwModemRoboFails=gwModemRoboFails, gwAdmConfFtpFile=gwAdmConfFtpFile, gwTrapRegComplete=gwTrapRegComplete, whispPlvGwModemTable=whispPlvGwModemTable, gwAdmSnmpAccessIpNetworkMask6=gwAdmSnmpAccessIpNetworkMask6, whispPlvGatewayMIB=whispPlvGatewayMIB, gwModemInUnknownProtos=gwModemInUnknownProtos, gwAdmWConfDNS1=gwAdmWConfDNS1, gwAdmConfNEK=gwAdmConfNEK, gwInfoModemCount=gwInfoModemCount, gwAdmWConfGateway=gwAdmWConfGateway, gwAdmSnmpAccessIpNetworkMask9=gwAdmSnmpAccessIpNetworkMask9, gwInfoModel=gwInfoModel, gwAdmSnmpAccessIpNetworkMask1=gwAdmSnmpAccessIpNetworkMask1, gwAdmConfSnmpSetCommStr=gwAdmConfSnmpSetCommStr, gwConfTrapCommStr8=gwConfTrapCommStr8, gwModemDescr=gwModemDescr, gwAdmConfDeviceUpgradeStart=gwAdmConfDeviceUpgradeStart, whispPlvGwTrapConfig=whispPlvGwTrapConfig, gwConfTime=gwConfTime, gwTrapPrefix=gwTrapPrefix, gwConfTrapIp9=gwConfTrapIp9, gwModemRoboDrops=gwModemRoboDrops, gwConfDate=gwConfDate, gwAdmConfFtpServerIp=gwAdmConfFtpServerIp, gwInfoSimUpgradeStatus=gwInfoSimUpgradeStatus, gwModemOutNUcastPkts=gwModemOutNUcastPkts, gwAdmSnmpAccessIpNetwork7=gwAdmSnmpAccessIpNetwork7, gwAdmSnmpAccessIpNetwork6=gwAdmSnmpAccessIpNetwork6, gwAdmSnmpAccessIpNetworkMask7=gwAdmSnmpAccessIpNetworkMask7, gwInfoTemperature=gwInfoTemperature, whispPlvGatewayConformance=whispPlvGatewayConformance, gwInfoSerialNumber=gwInfoSerialNumber, gwPwrLnRoboFails=gwPwrLnRoboFails, gwAdmConfLanSubnetMask=gwAdmConfLanSubnetMask, gwTrapDeviceUpgradeCompleted=gwTrapDeviceUpgradeCompleted, gwAdmConfDeviceMode=gwAdmConfDeviceMode, gwModemOutOctets=gwModemOutOctets, gwAdmWConfWanConfig=gwAdmWConfWanConfig, gwTrapSimUpgradeCompleted=gwTrapSimUpgradeCompleted, gwAdmWConfDhcpEndIp=gwAdmWConfDhcpEndIp, gwModemsessionCount=gwModemsessionCount, gwAdmWConfPppoePassword=gwAdmWConfPppoePassword, whispPlvGwAdmConfig=whispPlvGwAdmConfig, gwTrapDeviceUpgradeStarted=gwTrapDeviceUpgradeStarted, whispPlvGatewayAdmSnmpAccessConfigGroup=whispPlvGatewayAdmSnmpAccessConfigGroup, gwAdmWConfFirewallConfig=gwAdmWConfFirewallConfig, gwConfModemTableTimeout=gwConfModemTableTimeout, gwAdmSnmpAccessIpNetworkMask10=gwAdmSnmpAccessIpNetworkMask10, gwAdmWConfDhcpStartIp=gwAdmWConfDhcpStartIp, gwAdmConfLanIp=gwAdmConfLanIp, gwAdmSnmpAccessIpNetwork9=gwAdmSnmpAccessIpNetwork9, gwPwrLnMaxDelay=gwPwrLnMaxDelay, gwAdmConfLUIDEnd=gwAdmConfLUIDEnd, gwConfTrapIp4=gwConfTrapIp4, gwModemInDiscards=gwModemInDiscards, gwConfTrapIp2=gwConfTrapIp2, gwConfTrapIp3=gwConfTrapIp3, gwModemOutDiscards=gwModemOutDiscards, gwAdmConfLUIDStart=gwAdmConfLUIDStart, gwAdmWConfDhcpLeaseTime=gwAdmWConfDhcpLeaseTime, whispPlvGwAdmLanConfig=whispPlvGwAdmLanConfig, gwAdmSnmpAccessIpNetwork8=gwAdmSnmpAccessIpNetwork8, whispPlvGwAdmWanConfig=whispPlvGwAdmWanConfig, gwModemSpeed=gwModemSpeed, gwPwrLnTxCarrLoss=gwPwrLnTxCarrLoss, gwAdmConfSystemReboot=gwAdmConfSystemReboot, gwAdmSnmpAccessIpNetworkMask3=gwAdmSnmpAccessIpNetworkMask3, gwConfTrapCommStr2=gwConfTrapCommStr2, whispPlvGwModemEntry=whispPlvGwModemEntry, whispPlvGatewayAdmConfigGroup=whispPlvGatewayAdmConfigGroup, gwAdmWConfSubnetMask=gwAdmWConfSubnetMask, gwAdmSnmpAccessIpNetwork2=gwAdmSnmpAccessIpNetwork2, gwConfTrapIp7=gwConfTrapIp7, gwModemRoboByte40=gwModemRoboByte40, gwModemSoftwareVersion=gwModemSoftwareVersion, gwModemPhysAddress=gwModemPhysAddress, gwConfTrapCommStr1=gwConfTrapCommStr1, gwConfNtpServer=gwConfNtpServer, whispPlvGatewayEvents=whispPlvGatewayEvents, gwModemMtu=gwModemMtu, gwModemOutError=gwModemOutError, gwTrapRegLost=gwTrapRegLost, gwModemHardwareVersion=gwModemHardwareVersion, gwConfNtpConfig=gwConfNtpConfig, PYSNMP_MODULE_ID=whispPlvGatewayMIB, gwAdmConfAuthServIp1=gwAdmConfAuthServIp1, gwPwrLnRoboDrops=gwPwrLnRoboDrops, gwPwrLnTxColl=gwPwrLnTxColl, gwPwrLnTxNak=gwPwrLnTxNak, gwAdmSnmpAccessIpNetwork10=gwAdmSnmpAccessIpNetwork10, gwAdmSnmpAccessIpNetwork3=gwAdmSnmpAccessIpNetwork3, gwAdmConfVLANPassthroughStatus=gwAdmConfVLANPassthroughStatus, gwAdmConfAuthServIp3=gwAdmConfAuthServIp3, gwModemInNUcastPkts=gwModemInNUcastPkts, whispPlvGatewayConfigGroup=whispPlvGatewayConfigGroup, gwConfTrapCommStr6=gwConfTrapCommStr6, gwPwrLnRoboByte40=gwPwrLnRoboByte40, gwInfoSimFirmwareVer=gwInfoSimFirmwareVer, gwInfoWanMac=gwInfoWanMac, gwConfPSD=gwConfPSD, whispPlvGwInfo=whispPlvGwInfo, gwModemPSD=gwModemPSD, gwAdmConfSnmpAdminCommStr=gwAdmConfSnmpAdminCommStr, gwAdmWConfUpnpConfig=gwAdmWConfUpnpConfig, whispPlvGatewayCompliances=whispPlvGatewayCompliances, gwAdmWConfPppoeUsername=gwAdmWConfPppoeUsername, whispPlvGatewayCompliance=whispPlvGatewayCompliance, whispPlvGwConfig=whispPlvGwConfig, gwConfTrapCommStr4=gwConfTrapCommStr4, gwModemLUID=gwModemLUID, gwInfoLoaderVer=gwInfoLoaderVer, whispPlvGatewayAdmWanConfigGroup=whispPlvGatewayAdmWanConfigGroup, gwConfTrapIp8=gwConfTrapIp8, gwAdmConfLoginPassword=gwAdmConfLoginPassword, whispPlvGatewayInfoGroup=whispPlvGatewayInfoGroup, gwAdmConfSimUpgradeStart=gwAdmConfSimUpgradeStart, gwConfTrapIp10=gwConfTrapIp10, gwModemIP=gwModemIP, gwModemInUcastPkts=gwModemInUcastPkts, whispPlvGatewayPowerlineGroup=whispPlvGatewayPowerlineGroup, gwAdmConfFtpPassword=gwAdmConfFtpPassword, gwModemInOctets=gwModemInOctets, gwAdmWConfWanIp=gwAdmWConfWanIp, gwInfoPlcMac=gwInfoPlcMac, gwConfTrapIp1=gwConfTrapIp1, gwAdmSnmpAccessIpNetwork4=gwAdmSnmpAccessIpNetwork4, gwAdmConfReset=gwAdmConfReset, gwAdmWConfDNS2=gwAdmWConfDNS2, whispPlvGatewayAdmLanConfigGroup=whispPlvGatewayAdmLanConfigGroup, gwAdmSnmpAccessIpNetworkMask2=gwAdmSnmpAccessIpNetworkMask2, gwModemOutQLen=gwModemOutQLen, gwModemOutUcastPkts=gwModemOutUcastPkts, gwConfTrapCommStr3=gwConfTrapCommStr3, gwAdmSnmpAccessIpNetwork5=gwAdmSnmpAccessIpNetwork5, gwPwrLnTxAck=gwPwrLnTxAck, gwAdmConfAuthKey=gwAdmConfAuthKey, gwAdmSnmpAccessIpNetwork1=gwAdmSnmpAccessIpNetwork1, gwInfoHardwareVer=gwInfoHardwareVer, whispPlvGatewayAdmModemGroup=whispPlvGatewayAdmModemGroup, whispPlvGatewayObjects=whispPlvGatewayObjects, whispPlvGwPwrLnStats=whispPlvGwPwrLnStats, gwAdmConfLanConfig=gwAdmConfLanConfig, gwInfoDeviceUpgradeStatus=gwInfoDeviceUpgradeStatus, gwAdmConfManagementVLANId=gwAdmConfManagementVLANId, gwAdmWConfDhcpConfig=gwAdmWConfDhcpConfig, gwModemSoftwareBootVersion=gwModemSoftwareBootVersion, gwModemDeviceType=gwModemDeviceType, gwAdmSnmpAccessIpNetworkMask4=gwAdmSnmpAccessIpNetworkMask4, whispPlvGatewayTrapConfigGroup=whispPlvGatewayTrapConfigGroup)
