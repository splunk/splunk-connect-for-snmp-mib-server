#
# PySNMP MIB module Nortel-Magellan-Passport-PorsAtmTrunksMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-PorsAtmTrunksMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
trkPaIndex, trkPa = mibBuilder.importSymbols("Nortel-Magellan-Passport-PorsTrunksMIB", "trkPaIndex", "trkPa")
DisplayString, RowStatus, StorageType = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DisplayString", "RowStatus", "StorageType")
NonReplicated, Link = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "Link")
trkIndex, = mibBuilder.importSymbols("Nortel-Magellan-Passport-TrunksMIB", "trkIndex")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Bits, Gauge32, Unsigned32, Integer32, ObjectIdentity, Counter64, MibIdentifier, NotificationType, ModuleIdentity, TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "Gauge32", "Unsigned32", "Integer32", "ObjectIdentity", "Counter64", "MibIdentifier", "NotificationType", "ModuleIdentity", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
porsAtmTrunksMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 137))
trkPaAtm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3))
trkPaAtmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 1), )
if mibBuilder.loadTexts: trkPaAtmRowStatusTable.setStatus('mandatory')
trkPaAtmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-PorsTrunksMIB", "trkPaIndex"), (0, "Nortel-Magellan-Passport-PorsAtmTrunksMIB", "trkPaAtmIndex"))
if mibBuilder.loadTexts: trkPaAtmRowStatusEntry.setStatus('mandatory')
trkPaAtmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkPaAtmRowStatus.setStatus('mandatory')
trkPaAtmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPaAtmComponentName.setStatus('mandatory')
trkPaAtmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPaAtmStorageType.setStatus('mandatory')
trkPaAtmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: trkPaAtmIndex.setStatus('mandatory')
trkPaAtmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 10), )
if mibBuilder.loadTexts: trkPaAtmProvTable.setStatus('mandatory')
trkPaAtmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-PorsTrunksMIB", "trkPaIndex"), (0, "Nortel-Magellan-Passport-PorsAtmTrunksMIB", "trkPaAtmIndex"))
if mibBuilder.loadTexts: trkPaAtmProvEntry.setStatus('mandatory')
trkPaAtmAtmConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkPaAtmAtmConnection.setStatus('mandatory')
trkPaAtmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("multiplexing", 0), ("mapping", 1))).clone('multiplexing')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkPaAtmMode.setStatus('mandatory')
porsAtmTrunksGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 137, 1))
porsAtmTrunksGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 137, 1, 5))
porsAtmTrunksGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 137, 1, 5, 2))
porsAtmTrunksGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 137, 1, 5, 2, 2))
porsAtmTrunksCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 137, 3))
porsAtmTrunksCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 137, 3, 5))
porsAtmTrunksCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 137, 3, 5, 2))
porsAtmTrunksCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 137, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-PorsAtmTrunksMIB", porsAtmTrunksGroupBE01A=porsAtmTrunksGroupBE01A, porsAtmTrunksCapabilitiesBE01=porsAtmTrunksCapabilitiesBE01, trkPaAtmMode=trkPaAtmMode, porsAtmTrunksCapabilitiesBE01A=porsAtmTrunksCapabilitiesBE01A, porsAtmTrunksGroupBE=porsAtmTrunksGroupBE, porsAtmTrunksGroup=porsAtmTrunksGroup, trkPaAtmRowStatus=trkPaAtmRowStatus, trkPaAtm=trkPaAtm, trkPaAtmProvTable=trkPaAtmProvTable, porsAtmTrunksGroupBE01=porsAtmTrunksGroupBE01, porsAtmTrunksCapabilitiesBE=porsAtmTrunksCapabilitiesBE, trkPaAtmRowStatusTable=trkPaAtmRowStatusTable, trkPaAtmRowStatusEntry=trkPaAtmRowStatusEntry, trkPaAtmStorageType=trkPaAtmStorageType, porsAtmTrunksMIB=porsAtmTrunksMIB, porsAtmTrunksCapabilities=porsAtmTrunksCapabilities, trkPaAtmIndex=trkPaAtmIndex, trkPaAtmAtmConnection=trkPaAtmAtmConnection, trkPaAtmComponentName=trkPaAtmComponentName, trkPaAtmProvEntry=trkPaAtmProvEntry)
