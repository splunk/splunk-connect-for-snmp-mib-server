#
# PySNMP MIB module HPN-ICF-NAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-NAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Gauge32, Bits, Integer32, MibIdentifier, Counter32, ObjectIdentity, ModuleIdentity, iso, TimeTicks, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "Bits", "Integer32", "MibIdentifier", "Counter32", "ObjectIdentity", "ModuleIdentity", "iso", "TimeTicks", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hpnicfNat = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18))
hpnicfNat.setRevisions(('2005-01-20 15:18',))
if mibBuilder.loadTexts: hpnicfNat.setLastUpdated('200409170100Z')
if mibBuilder.loadTexts: hpnicfNat.setOrganization('')
hpnicfNATGlobalVars = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1))
hpnicfNATClearSession = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 1))
hpnicfNATClearSessionSlotNo = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 14), ValueRangeConstraint(255, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATClearSessionSlotNo.setStatus('current')
hpnicfNATBLConnectLimitPara = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 2))
hpnicfNATBLConnectHighValue = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 20000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATBLConnectHighValue.setStatus('current')
hpnicfNATBLConnectLowValue = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 20000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATBLConnectLowValue.setStatus('current')
hpnicfNATBLConnectHighRate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 21474836)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATBLConnectHighRate.setStatus('current')
hpnicfNATBLConnectLowRate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 21474836)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATBLConnectLowRate.setStatus('current')
hpnicfNATBLSpecialConnectHighRate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 21474836)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATBLSpecialConnectHighRate.setStatus('current')
hpnicfNATBLSpecialConnectLowRate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 21474836)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATBLSpecialConnectLowRate.setStatus('current')
hpnicfNATBLCtrlEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 3))
hpnicfNATBLConnectSumEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATBLConnectSumEnable.setStatus('current')
hpnicfNATBLConnectRateEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATBLConnectRateEnable.setStatus('current')
hpnicfNATNPTimer = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 4))
hpnicfNATNPAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fast", 1), ("slow", 2))).clone('fast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATNPAgingTime.setStatus('current')
hpnicfNATMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2))
hpnicfNATPoolInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 1), )
if mibBuilder.loadTexts: hpnicfNATPoolInfoTable.setStatus('current')
hpnicfNATPoolInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-NAT-MIB", "hpnicfNATPoolIdx"))
if mibBuilder.loadTexts: hpnicfNATPoolInfoEntry.setStatus('current')
hpnicfNATPoolIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 320)))
if mibBuilder.loadTexts: hpnicfNATPoolIdx.setStatus('current')
hpnicfNATPoolStartIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATPoolStartIpAddr.setStatus('current')
hpnicfNATPoolEndIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATPoolEndIpAddr.setStatus('current')
hpnicfNATPoolSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 14), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATPoolSlotNo.setStatus('current')
hpnicfNATPoolRefCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATPoolRefCounter.setStatus('current')
hpnicfNATPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATPoolRowStatus.setStatus('current')
hpnicfNATOutboundTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 2), )
if mibBuilder.loadTexts: hpnicfNATOutboundTable.setStatus('current')
hpnicfNATOutboundEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATOutboundAclNo"))
if mibBuilder.loadTexts: hpnicfNATOutboundEntry.setStatus('current')
hpnicfNATOutboundAclNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 3999)))
if mibBuilder.loadTexts: hpnicfNATOutboundAclNo.setStatus('current')
hpnicfNATOutboundPoolIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 320), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATOutboundPoolIdx.setStatus('current')
hpnicfNATOutboundIsNoPat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATOutboundIsNoPat.setStatus('current')
hpnicfNATOutboundSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 14), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATOutboundSlotNo.setStatus('current')
hpnicfNATOutboundRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATOutboundRowStatus.setStatus('current')
hpnicfNATServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3), )
if mibBuilder.loadTexts: hpnicfNATServerTable.setStatus('current')
hpnicfNATServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATServerProType"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATServerGlobalIP"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATServerStartGlobalPort"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATServerVpnIndex"))
if mibBuilder.loadTexts: hpnicfNATServerEntry.setStatus('current')
hpnicfNATServerProType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hpnicfNATServerProType.setStatus('current')
hpnicfNATServerGlobalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: hpnicfNATServerGlobalIP.setStatus('current')
hpnicfNATServerStartGlobalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hpnicfNATServerStartGlobalPort.setStatus('current')
hpnicfNATServerEndGlobalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATServerEndGlobalPort.setStatus('current')
hpnicfNATServerStartInsideIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATServerStartInsideIP.setStatus('current')
hpnicfNATServerEndInsideIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATServerEndInsideIP.setStatus('current')
hpnicfNATServerInsidePort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATServerInsidePort.setStatus('current')
hpnicfNATServerSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 14), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATServerSlotNo.setStatus('current')
hpnicfNATServerVpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hpnicfNATServerVpnIndex.setStatus('current')
hpnicfNATServerAclNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATServerAclNumber.setStatus('current')
hpnicfNATServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATServerRowStatus.setStatus('current')
hpnicfNATTimeOutTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 4), )
if mibBuilder.loadTexts: hpnicfNATTimeOutTable.setStatus('current')
hpnicfNATTimeOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-NAT-MIB", "hpnicfNATTimeOutProtocol"))
if mibBuilder.loadTexts: hpnicfNATTimeOutEntry.setStatus('current')
hpnicfNATTimeOutProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("icmp", 3), ("pptp", 4), ("dns", 5), ("tcpFin", 6), ("tcpSyn", 7), ("ftpCtrl", 8), ("ftpData", 9))))
if mibBuilder.loadTexts: hpnicfNATTimeOutProtocol.setStatus('current')
hpnicfNATTimeOutTimeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATTimeOutTimeValue.setStatus('current')
hpnicfNATBLEnableTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 5), )
if mibBuilder.loadTexts: hpnicfNATBLEnableTable.setStatus('current')
hpnicfNATBLEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 5, 1), ).setIndexNames((0, "HPN-ICF-NAT-MIB", "hpnicfNATBLEnableSlotNo"))
if mibBuilder.loadTexts: hpnicfNATBLEnableEntry.setStatus('current')
hpnicfNATBLEnableSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 14), ValueRangeConstraint(255, 255), )))
if mibBuilder.loadTexts: hpnicfNATBLEnableSlotNo.setStatus('current')
hpnicfNATBLEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATBLEnable.setStatus('current')
hpnicfNATBLIPConnectLimitParaTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 6), )
if mibBuilder.loadTexts: hpnicfNATBLIPConnectLimitParaTable.setStatus('current')
hpnicfNATBLIPConnectLimitParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 6, 1), ).setIndexNames((0, "HPN-ICF-NAT-MIB", "hpnicfNATBLIPConnectLimitParaIP"))
if mibBuilder.loadTexts: hpnicfNATBLIPConnectLimitParaEntry.setStatus('current')
hpnicfNATBLIPConnectLimitParaIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 6, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpnicfNATBLIPConnectLimitParaIP.setStatus('current')
hpnicfNATBLIPConnectHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 20000)).clone(500)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATBLIPConnectHighValue.setStatus('current')
hpnicfNATBLIPConnectLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 20000)).clone(200)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATBLIPConnectLowValue.setStatus('current')
hpnicfNATBLIPUseSpecialConnectRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATBLIPUseSpecialConnectRate.setStatus('current')
hpnicfNATBLIPConnectLimitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATBLIPConnectLimitRowStatus.setStatus('current')
hpnicfNATBLManagerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 7), )
if mibBuilder.loadTexts: hpnicfNATBLManagerTable.setStatus('current')
hpnicfNATBLManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 7, 1), ).setIndexNames((0, "HPN-ICF-NAT-MIB", "hpnicfNATBLIpAdress"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATBLSlotNo"))
if mibBuilder.loadTexts: hpnicfNATBLManagerEntry.setStatus('current')
hpnicfNATBLIpAdress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 7, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpnicfNATBLIpAdress.setStatus('current')
hpnicfNATBLSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14)))
if mibBuilder.loadTexts: hpnicfNATBLSlotNo.setStatus('current')
hpnicfNATBLConSum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATBLConSum.setStatus('current')
hpnicfNATBLConSpd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("red", 1), ("yellow", 2), ("green", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATBLConSpd.setStatus('current')
hpnicfNATStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8), )
if mibBuilder.loadTexts: hpnicfNATStatTable.setStatus('current')
hpnicfNATStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1), ).setIndexNames((0, "HPN-ICF-NAT-MIB", "hpnicfNATStatNATBoardNo"))
if mibBuilder.loadTexts: hpnicfNATStatEntry.setStatus('current')
hpnicfNATStatNATBoardNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 14), ValueRangeConstraint(255, 255), )))
if mibBuilder.loadTexts: hpnicfNATStatNATBoardNo.setStatus('current')
hpnicfNATStatActiveTblCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATStatActiveTblCount.setStatus('current')
hpnicfNATStatActiveTblCountInNP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATStatActiveTblCountInNP.setStatus('current')
hpnicfNATStatActiveNatTblCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATStatActiveNatTblCount.setStatus('current')
hpnicfNATStatActiveSvrTblCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATStatActiveSvrTblCount.setStatus('current')
hpnicfNATStatActivePoolTblCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATStatActivePoolTblCount.setStatus('current')
hpnicfNATStatNumOfUsedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATStatNumOfUsedPort.setStatus('current')
hpnicfNATStatNumOfGoodPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATStatNumOfGoodPkt.setStatus('current')
hpnicfNATStatNumOfBadPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATStatNumOfBadPkt.setStatus('current')
hpnicfNATStaticSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATStaticSessionCount.setStatus('current')
hpnicfNATFragmentSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATFragmentSessionCount.setStatus('current')
hpnicfNATSequenceSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATSequenceSessionCount.setStatus('current')
hpnicfNATLogCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 8, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATLogCount.setStatus('current')
hpnicfNATSessionTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9), )
if mibBuilder.loadTexts: hpnicfNATSessionTable.setStatus('current')
hpnicfNATSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1), ).setIndexNames((0, "HPN-ICF-NAT-MIB", "hpnicfNATSessionHashNumber"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATSessionProtocol"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATSessionInsideIP"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATSessionInsidePort"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATSessionPeerIP"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATSessionPeerPort"), (0, "HPN-ICF-NAT-MIB", "hpnicfNATSessionVpnIndex"))
if mibBuilder.loadTexts: hpnicfNATSessionEntry.setStatus('current')
hpnicfNATSessionHashNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300000)))
if mibBuilder.loadTexts: hpnicfNATSessionHashNumber.setStatus('current')
hpnicfNATSessionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hpnicfNATSessionProtocol.setStatus('current')
hpnicfNATSessionGlobalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATSessionGlobalIP.setStatus('current')
hpnicfNATSessionGlobalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATSessionGlobalPort.setStatus('current')
hpnicfNATSessionInsideIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 5), IpAddress())
if mibBuilder.loadTexts: hpnicfNATSessionInsideIP.setStatus('current')
hpnicfNATSessionInsidePort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hpnicfNATSessionInsidePort.setStatus('current')
hpnicfNATSessionPeerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 7), IpAddress())
if mibBuilder.loadTexts: hpnicfNATSessionPeerIP.setStatus('current')
hpnicfNATSessionPeerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hpnicfNATSessionPeerPort.setStatus('current')
hpnicfNATSessionVpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: hpnicfNATSessionVpnIndex.setStatus('current')
hpnicfNATSessionTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATSessionTTL.setStatus('current')
hpnicfNATSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATSessionStatus.setStatus('current')
hpnicfNATSessionLeftTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 9, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfNATSessionLeftTime.setStatus('current')
hpnicfNATStaticConfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 10), )
if mibBuilder.loadTexts: hpnicfNATStaticConfTable.setStatus('current')
hpnicfNATStaticConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 10, 1), ).setIndexNames((0, "HPN-ICF-NAT-MIB", "hpnicfNATStaticInsideIp"))
if mibBuilder.loadTexts: hpnicfNATStaticConfEntry.setStatus('current')
hpnicfNATStaticInsideIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 10, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpnicfNATStaticInsideIp.setStatus('current')
hpnicfNATStaticGlobalIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 10, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATStaticGlobalIp.setStatus('current')
hpnicfNATStaticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 10, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATStaticRowStatus.setStatus('current')
hpnicfNATStaticEnableTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 11), )
if mibBuilder.loadTexts: hpnicfNATStaticEnableTable.setStatus('current')
hpnicfNATStaticEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfNATStaticEnableEntry.setStatus('current')
hpnicfNATStaticEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfNATStaticEnable.setStatus('current')
hpnicfNATDnsMapTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 12), )
if mibBuilder.loadTexts: hpnicfNATDnsMapTable.setStatus('current')
hpnicfNATDnsMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 12, 1), ).setIndexNames((0, "HPN-ICF-NAT-MIB", "hpnicfNATDnsMapDomainName"))
if mibBuilder.loadTexts: hpnicfNATDnsMapEntry.setStatus('current')
hpnicfNATDnsMapDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 12, 1, 1), DisplayString())
if mibBuilder.loadTexts: hpnicfNATDnsMapDomainName.setStatus('current')
hpnicfNATDnsMapGlobalIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 12, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATDnsMapGlobalIp.setStatus('current')
hpnicfNATDnsMapGlobalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATDnsMapGlobalPort.setStatus('current')
hpnicfNATDnsMapProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("any", 0), ("typeTCP", 1), ("typeUDP", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATDnsMapProtocolType.setStatus('current')
hpnicfNATDnsMapLastUseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 12, 1, 5), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATDnsMapLastUseTime.setStatus('current')
hpnicfNATDnsMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 18, 2, 12, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfNATDnsMapRowStatus.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-NAT-MIB", hpnicfNATSessionHashNumber=hpnicfNATSessionHashNumber, hpnicfNATServerEndInsideIP=hpnicfNATServerEndInsideIP, hpnicfNATPoolEndIpAddr=hpnicfNATPoolEndIpAddr, hpnicfNATTimeOutEntry=hpnicfNATTimeOutEntry, hpnicfNATServerTable=hpnicfNATServerTable, hpnicfNATBLSpecialConnectHighRate=hpnicfNATBLSpecialConnectHighRate, hpnicfNATSessionVpnIndex=hpnicfNATSessionVpnIndex, hpnicfNATPoolRefCounter=hpnicfNATPoolRefCounter, hpnicfNATBLCtrlEnable=hpnicfNATBLCtrlEnable, hpnicfNATPoolInfoTable=hpnicfNATPoolInfoTable, hpnicfNATOutboundIsNoPat=hpnicfNATOutboundIsNoPat, hpnicfNATStatNumOfUsedPort=hpnicfNATStatNumOfUsedPort, hpnicfNATSessionGlobalIP=hpnicfNATSessionGlobalIP, hpnicfNATBLIPConnectHighValue=hpnicfNATBLIPConnectHighValue, hpnicfNATStatActiveSvrTblCount=hpnicfNATStatActiveSvrTblCount, hpnicfNATOutboundEntry=hpnicfNATOutboundEntry, hpnicfNATClearSessionSlotNo=hpnicfNATClearSessionSlotNo, hpnicfNATStatNumOfBadPkt=hpnicfNATStatNumOfBadPkt, hpnicfNATServerVpnIndex=hpnicfNATServerVpnIndex, hpnicfNATBLSlotNo=hpnicfNATBLSlotNo, hpnicfNATPoolRowStatus=hpnicfNATPoolRowStatus, hpnicfNATBLManagerTable=hpnicfNATBLManagerTable, hpnicfNATBLConSum=hpnicfNATBLConSum, hpnicfNat=hpnicfNat, hpnicfNATBLConnectHighValue=hpnicfNATBLConnectHighValue, hpnicfNATServerProType=hpnicfNATServerProType, hpnicfNATOutboundRowStatus=hpnicfNATOutboundRowStatus, hpnicfNATStatNumOfGoodPkt=hpnicfNATStatNumOfGoodPkt, hpnicfNATSessionEntry=hpnicfNATSessionEntry, hpnicfNATServerGlobalIP=hpnicfNATServerGlobalIP, hpnicfNATStaticConfEntry=hpnicfNATStaticConfEntry, hpnicfNATBLConnectLowValue=hpnicfNATBLConnectLowValue, hpnicfNATTimeOutProtocol=hpnicfNATTimeOutProtocol, hpnicfNATBLConSpd=hpnicfNATBLConSpd, hpnicfNATBLIpAdress=hpnicfNATBLIpAdress, hpnicfNATStatActiveTblCount=hpnicfNATStatActiveTblCount, hpnicfNATBLConnectSumEnable=hpnicfNATBLConnectSumEnable, hpnicfNATStaticConfTable=hpnicfNATStaticConfTable, hpnicfNATStaticInsideIp=hpnicfNATStaticInsideIp, hpnicfNATBLIPConnectLimitParaEntry=hpnicfNATBLIPConnectLimitParaEntry, hpnicfNATStaticEnableTable=hpnicfNATStaticEnableTable, hpnicfNATPoolIdx=hpnicfNATPoolIdx, hpnicfNATSessionTTL=hpnicfNATSessionTTL, hpnicfNATBLEnable=hpnicfNATBLEnable, hpnicfNATBLManagerEntry=hpnicfNATBLManagerEntry, hpnicfNATPoolSlotNo=hpnicfNATPoolSlotNo, hpnicfNATDnsMapLastUseTime=hpnicfNATDnsMapLastUseTime, hpnicfNATSessionPeerIP=hpnicfNATSessionPeerIP, hpnicfNATDnsMapTable=hpnicfNATDnsMapTable, hpnicfNATStaticSessionCount=hpnicfNATStaticSessionCount, hpnicfNATServerAclNumber=hpnicfNATServerAclNumber, hpnicfNATNPAgingTime=hpnicfNATNPAgingTime, hpnicfNATStaticEnableEntry=hpnicfNATStaticEnableEntry, hpnicfNATServerEndGlobalPort=hpnicfNATServerEndGlobalPort, hpnicfNATBLEnableSlotNo=hpnicfNATBLEnableSlotNo, hpnicfNATBLConnectLowRate=hpnicfNATBLConnectLowRate, hpnicfNATDnsMapGlobalIp=hpnicfNATDnsMapGlobalIp, hpnicfNATStatNATBoardNo=hpnicfNATStatNATBoardNo, hpnicfNATStaticRowStatus=hpnicfNATStaticRowStatus, hpnicfNATTimeOutTable=hpnicfNATTimeOutTable, hpnicfNATMibObjects=hpnicfNATMibObjects, hpnicfNATStatTable=hpnicfNATStatTable, hpnicfNATDnsMapRowStatus=hpnicfNATDnsMapRowStatus, hpnicfNATSessionInsidePort=hpnicfNATSessionInsidePort, hpnicfNATBLConnectRateEnable=hpnicfNATBLConnectRateEnable, hpnicfNATDnsMapEntry=hpnicfNATDnsMapEntry, hpnicfNATBLIPConnectLimitRowStatus=hpnicfNATBLIPConnectLimitRowStatus, hpnicfNATClearSession=hpnicfNATClearSession, hpnicfNATStatActivePoolTblCount=hpnicfNATStatActivePoolTblCount, hpnicfNATSessionGlobalPort=hpnicfNATSessionGlobalPort, hpnicfNATStaticEnable=hpnicfNATStaticEnable, hpnicfNATSessionLeftTime=hpnicfNATSessionLeftTime, hpnicfNATSessionStatus=hpnicfNATSessionStatus, hpnicfNATPoolInfoEntry=hpnicfNATPoolInfoEntry, hpnicfNATStatEntry=hpnicfNATStatEntry, hpnicfNATDnsMapDomainName=hpnicfNATDnsMapDomainName, hpnicfNATTimeOutTimeValue=hpnicfNATTimeOutTimeValue, hpnicfNATSessionProtocol=hpnicfNATSessionProtocol, hpnicfNATSessionPeerPort=hpnicfNATSessionPeerPort, hpnicfNATServerRowStatus=hpnicfNATServerRowStatus, hpnicfNATOutboundAclNo=hpnicfNATOutboundAclNo, hpnicfNATStaticGlobalIp=hpnicfNATStaticGlobalIp, hpnicfNATBLEnableEntry=hpnicfNATBLEnableEntry, hpnicfNATBLIPConnectLowValue=hpnicfNATBLIPConnectLowValue, hpnicfNATServerStartInsideIP=hpnicfNATServerStartInsideIP, hpnicfNATBLEnableTable=hpnicfNATBLEnableTable, hpnicfNATBLConnectHighRate=hpnicfNATBLConnectHighRate, hpnicfNATDnsMapProtocolType=hpnicfNATDnsMapProtocolType, hpnicfNATLogCount=hpnicfNATLogCount, hpnicfNATOutboundPoolIdx=hpnicfNATOutboundPoolIdx, hpnicfNATSessionTable=hpnicfNATSessionTable, PYSNMP_MODULE_ID=hpnicfNat, hpnicfNATServerEntry=hpnicfNATServerEntry, hpnicfNATDnsMapGlobalPort=hpnicfNATDnsMapGlobalPort, hpnicfNATNPTimer=hpnicfNATNPTimer, hpnicfNATServerSlotNo=hpnicfNATServerSlotNo, hpnicfNATBLIPUseSpecialConnectRate=hpnicfNATBLIPUseSpecialConnectRate, hpnicfNATPoolStartIpAddr=hpnicfNATPoolStartIpAddr, hpnicfNATBLIPConnectLimitParaTable=hpnicfNATBLIPConnectLimitParaTable, hpnicfNATOutboundSlotNo=hpnicfNATOutboundSlotNo, hpnicfNATStatActiveTblCountInNP=hpnicfNATStatActiveTblCountInNP, hpnicfNATStatActiveNatTblCount=hpnicfNATStatActiveNatTblCount, hpnicfNATSequenceSessionCount=hpnicfNATSequenceSessionCount, hpnicfNATServerInsidePort=hpnicfNATServerInsidePort, hpnicfNATBLIPConnectLimitParaIP=hpnicfNATBLIPConnectLimitParaIP, hpnicfNATServerStartGlobalPort=hpnicfNATServerStartGlobalPort, hpnicfNATGlobalVars=hpnicfNATGlobalVars, hpnicfNATOutboundTable=hpnicfNATOutboundTable, hpnicfNATFragmentSessionCount=hpnicfNATFragmentSessionCount, hpnicfNATBLConnectLimitPara=hpnicfNATBLConnectLimitPara, hpnicfNATSessionInsideIP=hpnicfNATSessionInsideIP, hpnicfNATBLSpecialConnectLowRate=hpnicfNATBLSpecialConnectLowRate)
