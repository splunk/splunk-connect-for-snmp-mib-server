#
# PySNMP MIB module HP-ICF-DHCP-SNOOP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-DHCP-SNOOP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:21:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
InterfaceIndex, InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, iso, ObjectIdentity, Counter32, MibIdentifier, Integer32, NotificationType, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "iso", "ObjectIdentity", "Counter32", "MibIdentifier", "Integer32", "NotificationType", "TimeTicks", "Gauge32")
MacAddress, DateAndTime, TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DateAndTime", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
hpicfIpDhcpSnoop = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34))
hpicfIpDhcpSnoop.setRevisions(('2016-06-01 00:00', '2016-01-29 00:00', '2015-06-12 00:00', '2013-06-12 00:00', '2013-05-02 00:00', '2013-02-10 00:00', '2007-08-24 00:00', '2006-07-06 00:38', '2006-03-18 00:38',))
if mibBuilder.loadTexts: hpicfIpDhcpSnoop.setLastUpdated('201606010000Z')
if mibBuilder.loadTexts: hpicfIpDhcpSnoop.setOrganization('HP Networking')
hpicfDhcpSnoopNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 0))
hpicfDhcpSnoopErrantReply = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 0, 1)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopNotifyCount"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopErrantSrcMAC"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopErrantSrcIPType"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopErrantSrcIP"))
if mibBuilder.loadTexts: hpicfDhcpSnoopErrantReply.setStatus('current')
hpicfIpDhcpSnoopObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1))
hpicfIpDhcpSnoopConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1))
hpicfDhcpSnoopGlobalCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1))
hpicfDhcpSnoopEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopEnable.setStatus('current')
hpicfDhcpSnoopVlanEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopVlanEnable.setStatus('current')
hpicfDhcpSnoopVerifyMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopVerifyMac.setStatus('current')
hpicfDhcpSnoopDatabaseFile = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopDatabaseFile.setStatus('current')
hpicfDhcpSnoopDatabaseWriteDelay = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopDatabaseWriteDelay.setStatus('current')
hpicfDhcpSnoopDatabaseWriteTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopDatabaseWriteTimeout.setStatus('current')
hpicfDhcpSnoopOpt82Insert = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopOpt82Insert.setStatus('current')
hpicfDhcpSnoopOpt82Policy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("keep", 1), ("replace", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopOpt82Policy.setStatus('current')
hpicfDhcpSnoopOpt82RemoteId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac", 1), ("subnetIP", 2), ("mgmtIP", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopOpt82RemoteId.setStatus('current')
hpicfDhcpSnoopErrantReplyEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopErrantReplyEnable.setStatus('current')
hpicfDhcpSnoopDatabaseFTPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopDatabaseFTPort.setStatus('current')
hpicfDhcpSnoopDatabaseSFTPUsername = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 12), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopDatabaseSFTPUsername.setStatus('current')
hpicfDhcpSnoopDatabaseSFTPPassword = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 13), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopDatabaseSFTPPassword.setStatus('current')
hpicfDhcpSnoopDatabaseValidateSFTPServer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopDatabaseValidateSFTPServer.setStatus('current')
hpicfDhcpSnoopAllowOverwriteBinding = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 1, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopAllowOverwriteBinding.setStatus('current')
hpicfDhcpSnoopPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 2), )
if mibBuilder.loadTexts: hpicfDhcpSnoopPortTable.setStatus('current')
hpicfDhcpSnoopPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfDhcpSnoopPortEntry.setStatus('current')
hpicfDhcpSnoopPortTrust = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopPortTrust.setStatus('current')
hpicfDhcpSnoopPortMaxbind = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopPortMaxbind.setStatus('current')
hpicfDhcpSnoopPortStaticBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopPortStaticBinding.setStatus('current')
hpicfDhcpSnoopPortDynamicBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopPortDynamicBinding.setStatus('current')
hpicfDhcpSnoopServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 3), )
if mibBuilder.loadTexts: hpicfDhcpSnoopServerTable.setStatus('current')
hpicfDhcpSnoopServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 3, 1), ).setIndexNames((0, "HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopServerAddrType"), (0, "HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopServerAddress"))
if mibBuilder.loadTexts: hpicfDhcpSnoopServerEntry.setStatus('current')
hpicfDhcpSnoopServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfDhcpSnoopServerAddrType.setStatus('current')
hpicfDhcpSnoopServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: hpicfDhcpSnoopServerAddress.setStatus('current')
hpicfDhcpSnoopServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDhcpSnoopServerStatus.setStatus('current')
hpicfIpStaticBindingsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 4), )
if mibBuilder.loadTexts: hpicfIpStaticBindingsTable.setStatus('current')
hpicfIpStaticBindingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 4, 1), ).setIndexNames((0, "HP-ICF-DHCP-SNOOP-MIB", "hpicfIpStaticBindingsVlan"), (0, "HP-ICF-DHCP-SNOOP-MIB", "hpicfIpStaticBindingsAddrType"), (0, "HP-ICF-DHCP-SNOOP-MIB", "hpicfIpStaticBindingsAddress"))
if mibBuilder.loadTexts: hpicfIpStaticBindingsEntry.setStatus('current')
hpicfIpStaticBindingsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 4, 1, 1), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hpicfIpStaticBindingsVlan.setStatus('current')
hpicfIpStaticBindingsAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 4, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hpicfIpStaticBindingsAddrType.setStatus('current')
hpicfIpStaticBindingsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 4, 1, 3), InetAddress())
if mibBuilder.loadTexts: hpicfIpStaticBindingsAddress.setStatus('current')
hpicfIpStaticBindingsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 4, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfIpStaticBindingsMacAddress.setStatus('current')
hpicfIpStaticBindingsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 4, 1, 5), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfIpStaticBindingsInterface.setStatus('current')
hpicfIpStaticBindingsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfIpStaticBindingsStatus.setStatus('current')
hpicfIpDhcpSnoopStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2))
hpicfDhcpSnoopGlobalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1))
hpicfDhcpSnoopCSForwards = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopCSForwards.setStatus('current')
hpicfDhcpSnoopCSMACMismatches = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopCSMACMismatches.setStatus('current')
hpicfDhcpSnoopCSUntrustedOpt82s = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopCSUntrustedOpt82s.setStatus('current')
hpicfDhcpSnoopCSBadReleases = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopCSBadReleases.setStatus('current')
hpicfDhcpSnoopCSUntrustedDestPorts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopCSUntrustedDestPorts.setStatus('current')
hpicfDhcpSnoopSCForwards = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopSCForwards.setStatus('current')
hpicfDhcpSnoopSCUntrustedPorts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopSCUntrustedPorts.setStatus('current')
hpicfDhcpSnoopSCUntrustedServers = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopSCUntrustedServers.setStatus('current')
hpicfDhcpSnoopSCOpt82Failures = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopSCOpt82Failures.setStatus('current')
hpicfDhcpSnoopDBFileWriteAttempts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopDBFileWriteAttempts.setStatus('current')
hpicfDhcpSnoopDBFileWriteFailures = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopDBFileWriteFailures.setStatus('current')
hpicfDhcpSnoopDBFileReadStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notConfigured", 1), ("inProgress", 2), ("succeeded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopDBFileReadStatus.setStatus('current')
hpicfDhcpSnoopDBFileWriteStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notConfigured", 1), ("delaying", 2), ("inProgress", 3), ("succeeded", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopDBFileWriteStatus.setStatus('current')
hpicfDhcpSnoopDBFileLastWriteTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopDBFileLastWriteTime.setStatus('current')
hpicfDhcpSnoopPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopPktsSent.setStatus('current')
hpicfDhcpSnoopPktsReceived = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopPktsReceived.setStatus('current')
hpicfDhcpSnoopPktsDropped = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopPktsDropped.setStatus('current')
hpicfDhcpSnoopMaxbindPktsDropped = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopMaxbindPktsDropped.setStatus('current')
hpicfDhcpSnoopBindingsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2), )
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsTable.setStatus('current')
hpicfDhcpSnoopBindingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2, 1), ).setIndexNames((0, "HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsVlan"), (0, "HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsMacAddress"), (0, "HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsAddrType"), (0, "HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsAddress"))
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsEntry.setStatus('current')
hpicfDhcpSnoopBindingsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2, 1, 1), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsVlan.setStatus('current')
hpicfDhcpSnoopBindingsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsMacAddress.setStatus('current')
hpicfDhcpSnoopBindingsAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2, 1, 3), InetAddressType())
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsAddrType.setStatus('current')
hpicfDhcpSnoopBindingsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2, 1, 4), InetAddress())
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsAddress.setStatus('current')
hpicfDhcpSnoopBindingsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2, 1, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsInterface.setStatus('current')
hpicfDhcpSnoopBindingsLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsLeaseTime.setStatus('current')
hpicfDhcpSnoopBindingsType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dhcp", 1), ("static", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsType.setStatus('current')
hpicfDhcpSnoopBindingsSecVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDhcpSnoopBindingsSecVlan.setStatus('current')
hpicfDhcpSnoopNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 3))
hpicfDhcpSnoopNotifyCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 3, 1), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDhcpSnoopNotifyCount.setStatus('current')
hpicfDhcpSnoopErrantSrcMAC = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 3, 2), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDhcpSnoopErrantSrcMAC.setStatus('current')
hpicfDhcpSnoopErrantSrcIPType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 3, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDhcpSnoopErrantSrcIPType.setStatus('current')
hpicfDhcpSnoopErrantSrcIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 3, 4), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDhcpSnoopErrantSrcIP.setStatus('current')
hpicfDhcpSnoopClearStatsOptions = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 4))
hpicfDhcpSnoopClearStats = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopClearStats.setStatus('current')
hpicfDhcpSnoopClearBindingsOptions = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 5))
hpicfDhcpSnoopClearBindings = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopClearBindings.setStatus('current')
hpicfDhcpSnoopClearBindingsIpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 5, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopClearBindingsIpType.setStatus('current')
hpicfDhcpSnoopClearBindingsIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 5, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopClearBindingsIpAddr.setStatus('current')
hpicfDhcpSnoopClearBindingsPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 5, 4), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopClearBindingsPort.setStatus('current')
hpicfDhcpSnoopClearBindingsVlan = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 1, 5, 5), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDhcpSnoopClearBindingsVlan.setStatus('current')
hpicfDhcpSnoopConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2))
hpicfIpDhcpSnoopGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1))
hpicfDhcpSnoopBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 1)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopEnable"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopVlanEnable"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopVerifyMac"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPortTrust"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopCSForwards"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopCSMACMismatches"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopCSBadReleases"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopCSUntrustedDestPorts"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopSCForwards"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopSCUntrustedPorts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopBaseGroup = hpicfDhcpSnoopBaseGroup.setStatus('current')
hpicfDhcpSnoopOpt82Group = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 2)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopOpt82Insert"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopOpt82Policy"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopOpt82RemoteId"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopCSUntrustedOpt82s"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopSCOpt82Failures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopOpt82Group = hpicfDhcpSnoopOpt82Group.setStatus('current')
hpicfDhcpSnoopServersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 3)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopServerStatus"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopSCUntrustedServers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopServersGroup = hpicfDhcpSnoopServersGroup.setStatus('current')
hpicfDhcpSnoopDbaseFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 4)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseFile"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseWriteDelay"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseWriteTimeout"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileWriteAttempts"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileWriteFailures"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileReadStatus"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileWriteStatus"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileLastWriteTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopDbaseFileGroup = hpicfDhcpSnoopDbaseFileGroup.setStatus('deprecated')
hpicfDhcpSnoopBindingsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 5)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsInterface"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsLeaseTime"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsType"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsSecVlan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopBindingsGroup = hpicfDhcpSnoopBindingsGroup.setStatus('current')
hpicfDhcpSnoopStaticBindingsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 6)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfIpStaticBindingsMacAddress"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfIpStaticBindingsInterface"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfIpStaticBindingsStatus"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopStaticBindingsGroup = hpicfDhcpSnoopStaticBindingsGroup.setStatus('current')
hpicfDhcpSnoopNotifyObjsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 7)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopNotifyCount"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopErrantSrcMAC"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopErrantSrcIPType"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopErrantSrcIP"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopErrantReplyEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopNotifyObjsGroup = hpicfDhcpSnoopNotifyObjsGroup.setStatus('current')
hpicfDhcpSnoopNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 8)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopErrantReply"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopNotificationGroup = hpicfDhcpSnoopNotificationGroup.setStatus('current')
hpicfDhcpSnoopPktsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 9)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPktsSent"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPktsReceived"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPktsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopPktsGroup = hpicfDhcpSnoopPktsGroup.setStatus('current')
hpicfDhcpSnoopClearStatsOptionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 10)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopClearStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopClearStatsOptionsGroup = hpicfDhcpSnoopClearStatsOptionsGroup.setStatus('current')
hpicfDhcpSnoopMaxbindingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 11)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPortMaxbind"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPortStaticBinding"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPortDynamicBinding"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopMaxbindingGroup = hpicfDhcpSnoopMaxbindingGroup.setStatus('current')
hpicfDhcpSnoopPktsGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 12)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPktsSent"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPktsReceived"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPktsDropped"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopMaxbindPktsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopPktsGroup1 = hpicfDhcpSnoopPktsGroup1.setStatus('current')
hpicfDhcpSnoopDbaseFileGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 13)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseFile"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseWriteDelay"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseWriteTimeout"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileWriteAttempts"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileWriteFailures"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileReadStatus"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileWriteStatus"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDBFileLastWriteTime"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseFTPort"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseSFTPUsername"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseSFTPPassword"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDatabaseValidateSFTPServer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopDbaseFileGroup1 = hpicfDhcpSnoopDbaseFileGroup1.setStatus('current')
hpicfDhcpSnoopAllowOverwriteBindingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 14)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopAllowOverwriteBinding"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopAllowOverwriteBindingGroup = hpicfDhcpSnoopAllowOverwriteBindingGroup.setStatus('current')
hpicfDhcpSnoopClearBindingsOptionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 1, 15)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopClearBindings"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopClearBindingsIpType"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopClearBindingsIpAddr"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopClearBindingsPort"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopClearBindingsVlan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopClearBindingsOptionsGroup = hpicfDhcpSnoopClearBindingsOptionsGroup.setStatus('current')
hpicfDhcpSnoopCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2))
hpicfDhcpSnoopCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 1)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBaseGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopOpt82Group"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopServersGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDbaseFileGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopCompliance = hpicfDhcpSnoopCompliance.setStatus('deprecated')
hpicfDhcpSnoopCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 2)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBaseGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopOpt82Group"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopServersGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDbaseFileGroup1"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopStaticBindingsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopCompliance2 = hpicfDhcpSnoopCompliance2.setStatus('current')
hpicfDhcpSnoopCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 3)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopNotifyObjsGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopCompliance3 = hpicfDhcpSnoopCompliance3.setStatus('current')
hpicfDhcpSnoopCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 4)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPktsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopCompliance4 = hpicfDhcpSnoopCompliance4.setStatus('current')
hpicfDhcpSnoopClearStatsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 5)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopClearStatsOptionsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopClearStatsCompliance = hpicfDhcpSnoopClearStatsCompliance.setStatus('current')
hpicfDhcpSnoopCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 6)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBaseGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopOpt82Group"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopServersGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDbaseFileGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopStaticBindingsGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopMaxbindingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopCompliance6 = hpicfDhcpSnoopCompliance6.setStatus('deprecated')
hpicfDhcpSnoopCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 7)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopPktsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopCompliance7 = hpicfDhcpSnoopCompliance7.setStatus('current')
hpicfDhcpSnoopCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 8)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBaseGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopOpt82Group"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopServersGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopDbaseFileGroup1"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopBindingsGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopStaticBindingsGroup"), ("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopMaxbindingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopCompliance8 = hpicfDhcpSnoopCompliance8.setStatus('current')
hpicfDhcpSnoopCompliance9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 9)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopAllowOverwriteBindingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopCompliance9 = hpicfDhcpSnoopCompliance9.setStatus('current')
hpicfDhcpSnoopCompliance10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34, 2, 2, 10)).setObjects(("HP-ICF-DHCP-SNOOP-MIB", "hpicfDhcpSnoopClearBindingsOptionsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDhcpSnoopCompliance10 = hpicfDhcpSnoopCompliance10.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-DHCP-SNOOP-MIB", hpicfDhcpSnoopDBFileLastWriteTime=hpicfDhcpSnoopDBFileLastWriteTime, hpicfDhcpSnoopCompliance10=hpicfDhcpSnoopCompliance10, hpicfDhcpSnoopPortTrust=hpicfDhcpSnoopPortTrust, hpicfDhcpSnoopDBFileWriteFailures=hpicfDhcpSnoopDBFileWriteFailures, hpicfDhcpSnoopVerifyMac=hpicfDhcpSnoopVerifyMac, hpicfIpStaticBindingsAddrType=hpicfIpStaticBindingsAddrType, hpicfDhcpSnoopCompliance9=hpicfDhcpSnoopCompliance9, hpicfDhcpSnoopNotifyObjects=hpicfDhcpSnoopNotifyObjects, hpicfIpStaticBindingsEntry=hpicfIpStaticBindingsEntry, hpicfDhcpSnoopCompliance=hpicfDhcpSnoopCompliance, hpicfIpDhcpSnoopGroups=hpicfIpDhcpSnoopGroups, hpicfDhcpSnoopBindingsVlan=hpicfDhcpSnoopBindingsVlan, hpicfDhcpSnoopServerAddress=hpicfDhcpSnoopServerAddress, hpicfDhcpSnoopSCUntrustedPorts=hpicfDhcpSnoopSCUntrustedPorts, hpicfDhcpSnoopPktsDropped=hpicfDhcpSnoopPktsDropped, hpicfDhcpSnoopOpt82RemoteId=hpicfDhcpSnoopOpt82RemoteId, hpicfDhcpSnoopDatabaseWriteTimeout=hpicfDhcpSnoopDatabaseWriteTimeout, hpicfDhcpSnoopClearBindingsVlan=hpicfDhcpSnoopClearBindingsVlan, hpicfDhcpSnoopStaticBindingsGroup=hpicfDhcpSnoopStaticBindingsGroup, hpicfDhcpSnoopBindingsLeaseTime=hpicfDhcpSnoopBindingsLeaseTime, hpicfDhcpSnoopDatabaseFile=hpicfDhcpSnoopDatabaseFile, hpicfDhcpSnoopPktsGroup=hpicfDhcpSnoopPktsGroup, hpicfIpStaticBindingsMacAddress=hpicfIpStaticBindingsMacAddress, hpicfDhcpSnoopPortTable=hpicfDhcpSnoopPortTable, hpicfDhcpSnoopAllowOverwriteBinding=hpicfDhcpSnoopAllowOverwriteBinding, hpicfDhcpSnoopCompliance4=hpicfDhcpSnoopCompliance4, hpicfDhcpSnoopErrantSrcIP=hpicfDhcpSnoopErrantSrcIP, hpicfDhcpSnoopSCUntrustedServers=hpicfDhcpSnoopSCUntrustedServers, hpicfDhcpSnoopDatabaseValidateSFTPServer=hpicfDhcpSnoopDatabaseValidateSFTPServer, hpicfDhcpSnoopClearBindingsIpAddr=hpicfDhcpSnoopClearBindingsIpAddr, hpicfDhcpSnoopClearBindingsOptionsGroup=hpicfDhcpSnoopClearBindingsOptionsGroup, hpicfDhcpSnoopBindingsAddress=hpicfDhcpSnoopBindingsAddress, hpicfDhcpSnoopDbaseFileGroup=hpicfDhcpSnoopDbaseFileGroup, hpicfDhcpSnoopCompliance6=hpicfDhcpSnoopCompliance6, hpicfDhcpSnoopCompliance7=hpicfDhcpSnoopCompliance7, hpicfDhcpSnoopErrantReplyEnable=hpicfDhcpSnoopErrantReplyEnable, hpicfDhcpSnoopClearBindingsIpType=hpicfDhcpSnoopClearBindingsIpType, hpicfDhcpSnoopClearBindings=hpicfDhcpSnoopClearBindings, hpicfDhcpSnoopBindingsInterface=hpicfDhcpSnoopBindingsInterface, hpicfDhcpSnoopBindingsSecVlan=hpicfDhcpSnoopBindingsSecVlan, hpicfIpDhcpSnoopObjects=hpicfIpDhcpSnoopObjects, hpicfDhcpSnoopOpt82Group=hpicfDhcpSnoopOpt82Group, hpicfDhcpSnoopErrantReply=hpicfDhcpSnoopErrantReply, hpicfDhcpSnoopClearStats=hpicfDhcpSnoopClearStats, hpicfDhcpSnoopDatabaseWriteDelay=hpicfDhcpSnoopDatabaseWriteDelay, hpicfDhcpSnoopCompliance3=hpicfDhcpSnoopCompliance3, hpicfDhcpSnoopServerStatus=hpicfDhcpSnoopServerStatus, hpicfDhcpSnoopGlobalCfg=hpicfDhcpSnoopGlobalCfg, hpicfDhcpSnoopBindingsTable=hpicfDhcpSnoopBindingsTable, hpicfDhcpSnoopPktsGroup1=hpicfDhcpSnoopPktsGroup1, hpicfDhcpSnoopOpt82Policy=hpicfDhcpSnoopOpt82Policy, hpicfIpDhcpSnoopConfig=hpicfIpDhcpSnoopConfig, hpicfDhcpSnoopDBFileReadStatus=hpicfDhcpSnoopDBFileReadStatus, hpicfDhcpSnoopOpt82Insert=hpicfDhcpSnoopOpt82Insert, hpicfDhcpSnoopMaxbindingGroup=hpicfDhcpSnoopMaxbindingGroup, hpicfDhcpSnoopCSBadReleases=hpicfDhcpSnoopCSBadReleases, hpicfDhcpSnoopSCForwards=hpicfDhcpSnoopSCForwards, hpicfDhcpSnoopCSUntrustedDestPorts=hpicfDhcpSnoopCSUntrustedDestPorts, hpicfDhcpSnoopNotifications=hpicfDhcpSnoopNotifications, hpicfDhcpSnoopCSUntrustedOpt82s=hpicfDhcpSnoopCSUntrustedOpt82s, hpicfDhcpSnoopBindingsAddrType=hpicfDhcpSnoopBindingsAddrType, hpicfDhcpSnoopCSForwards=hpicfDhcpSnoopCSForwards, hpicfIpStaticBindingsStatus=hpicfIpStaticBindingsStatus, hpicfDhcpSnoopBindingsEntry=hpicfDhcpSnoopBindingsEntry, hpicfDhcpSnoopDBFileWriteAttempts=hpicfDhcpSnoopDBFileWriteAttempts, hpicfDhcpSnoopCompliances=hpicfDhcpSnoopCompliances, hpicfDhcpSnoopBaseGroup=hpicfDhcpSnoopBaseGroup, hpicfDhcpSnoopErrantSrcIPType=hpicfDhcpSnoopErrantSrcIPType, hpicfDhcpSnoopPortStaticBinding=hpicfDhcpSnoopPortStaticBinding, hpicfDhcpSnoopBindingsType=hpicfDhcpSnoopBindingsType, hpicfDhcpSnoopClearStatsCompliance=hpicfDhcpSnoopClearStatsCompliance, hpicfDhcpSnoopServersGroup=hpicfDhcpSnoopServersGroup, hpicfDhcpSnoopClearStatsOptionsGroup=hpicfDhcpSnoopClearStatsOptionsGroup, hpicfDhcpSnoopCSMACMismatches=hpicfDhcpSnoopCSMACMismatches, PYSNMP_MODULE_ID=hpicfIpDhcpSnoop, hpicfDhcpSnoopDbaseFileGroup1=hpicfDhcpSnoopDbaseFileGroup1, hpicfDhcpSnoopDatabaseFTPort=hpicfDhcpSnoopDatabaseFTPort, hpicfDhcpSnoopEnable=hpicfDhcpSnoopEnable, hpicfDhcpSnoopClearBindingsPort=hpicfDhcpSnoopClearBindingsPort, hpicfDhcpSnoopServerTable=hpicfDhcpSnoopServerTable, hpicfDhcpSnoopNotifyObjsGroup=hpicfDhcpSnoopNotifyObjsGroup, hpicfIpStaticBindingsTable=hpicfIpStaticBindingsTable, hpicfIpDhcpSnoopStatus=hpicfIpDhcpSnoopStatus, hpicfDhcpSnoopCompliance2=hpicfDhcpSnoopCompliance2, hpicfDhcpSnoopPortEntry=hpicfDhcpSnoopPortEntry, hpicfDhcpSnoopNotificationGroup=hpicfDhcpSnoopNotificationGroup, hpicfDhcpSnoopAllowOverwriteBindingGroup=hpicfDhcpSnoopAllowOverwriteBindingGroup, hpicfDhcpSnoopMaxbindPktsDropped=hpicfDhcpSnoopMaxbindPktsDropped, hpicfDhcpSnoopSCOpt82Failures=hpicfDhcpSnoopSCOpt82Failures, hpicfDhcpSnoopClearStatsOptions=hpicfDhcpSnoopClearStatsOptions, hpicfDhcpSnoopBindingsMacAddress=hpicfDhcpSnoopBindingsMacAddress, hpicfIpStaticBindingsAddress=hpicfIpStaticBindingsAddress, hpicfDhcpSnoopClearBindingsOptions=hpicfDhcpSnoopClearBindingsOptions, hpicfDhcpSnoopPortMaxbind=hpicfDhcpSnoopPortMaxbind, hpicfDhcpSnoopDatabaseSFTPPassword=hpicfDhcpSnoopDatabaseSFTPPassword, hpicfDhcpSnoopNotifyCount=hpicfDhcpSnoopNotifyCount, hpicfDhcpSnoopDBFileWriteStatus=hpicfDhcpSnoopDBFileWriteStatus, hpicfDhcpSnoopConformance=hpicfDhcpSnoopConformance, hpicfDhcpSnoopVlanEnable=hpicfDhcpSnoopVlanEnable, hpicfDhcpSnoopPortDynamicBinding=hpicfDhcpSnoopPortDynamicBinding, hpicfDhcpSnoopBindingsGroup=hpicfDhcpSnoopBindingsGroup, hpicfDhcpSnoopCompliance8=hpicfDhcpSnoopCompliance8, hpicfDhcpSnoopDatabaseSFTPUsername=hpicfDhcpSnoopDatabaseSFTPUsername, hpicfIpDhcpSnoop=hpicfIpDhcpSnoop, hpicfDhcpSnoopServerEntry=hpicfDhcpSnoopServerEntry, hpicfIpStaticBindingsVlan=hpicfIpStaticBindingsVlan, hpicfDhcpSnoopGlobalStats=hpicfDhcpSnoopGlobalStats, hpicfIpStaticBindingsInterface=hpicfIpStaticBindingsInterface, hpicfDhcpSnoopPktsReceived=hpicfDhcpSnoopPktsReceived, hpicfDhcpSnoopErrantSrcMAC=hpicfDhcpSnoopErrantSrcMAC, hpicfDhcpSnoopPktsSent=hpicfDhcpSnoopPktsSent, hpicfDhcpSnoopServerAddrType=hpicfDhcpSnoopServerAddrType)
