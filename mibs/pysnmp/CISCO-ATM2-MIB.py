#
# PySNMP MIB module CISCO-ATM2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ATM2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:33:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
atmInterfaceConfEntry, = mibBuilder.importSymbols("ATM-MIB", "atmInterfaceConfEntry")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, Bits, Counter32, TimeTicks, Counter64, ModuleIdentity, IpAddress, MibIdentifier, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "Bits", "Counter32", "TimeTicks", "Counter64", "ModuleIdentity", "IpAddress", "MibIdentifier", "NotificationType", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoAtm2MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 23))
ciscoAtm2MIB.setRevisions(('1998-03-04 00:00',))
if mibBuilder.loadTexts: ciscoAtm2MIB.setLastUpdated('9803040000Z')
if mibBuilder.loadTexts: ciscoAtm2MIB.setOrganization('Cisco Systems, Inc.')
ciscoatm2MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 23, 1))
ciscoatmSigStatTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1), )
if mibBuilder.loadTexts: ciscoatmSigStatTable.setStatus('current')
ciscoatmSigStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ciscoatmSigStatEntry.setStatus('current')
ciscoatmSigSSCOPConEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigSSCOPConEvents.setStatus('current')
ciscoatmSigSSCOPErrdPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigSSCOPErrdPdus.setStatus('current')
ciscoatmSigDetectSetupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigDetectSetupAttempts.setStatus('current')
ciscoatmSigEmitSetupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigEmitSetupAttempts.setStatus('current')
ciscoatmSigDetectUnavailRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigDetectUnavailRoutes.setStatus('current')
ciscoatmSigEmitUnavailRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigEmitUnavailRoutes.setStatus('current')
ciscoatmSigDetectUnavailResrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigDetectUnavailResrcs.setStatus('current')
ciscoatmSigEmitUnavailResrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigEmitUnavailResrcs.setStatus('current')
ciscoatmSigDetectCldPtyEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigDetectCldPtyEvents.setStatus('current')
ciscoatmSigEmitCldPtyEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigEmitCldPtyEvents.setStatus('current')
ciscoatmSigDetectMsgErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigDetectMsgErrors.setStatus('current')
ciscoatmSigEmitMsgErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigEmitMsgErrors.setStatus('current')
ciscoatmSigDetectClgPtyEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigDetectClgPtyEvents.setStatus('current')
ciscoatmSigEmitClgPtyEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigEmitClgPtyEvents.setStatus('current')
ciscoatmSigDetectTimerExpireds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigDetectTimerExpireds.setStatus('current')
ciscoatmSigEmitTimerExpireds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigEmitTimerExpireds.setStatus('current')
ciscoatmSigDetectRestarts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigDetectRestarts.setStatus('current')
ciscoatmSigEmitRestarts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigEmitRestarts.setStatus('current')
ciscoatmSigInEstabls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigInEstabls.setStatus('current')
ciscoatmSigOutEstabls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmSigOutEstabls.setStatus('current')
ciscoatmSigSupportTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2), )
if mibBuilder.loadTexts: ciscoatmSigSupportTable.setStatus('current')
ciscoatmSigSupportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ciscoatmSigSupportEntry.setStatus('current')
ciscoatmSigSupportClgPtyNumDel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmSigSupportClgPtyNumDel.setStatus('current')
ciscoatmSigSupportClgPtySubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmSigSupportClgPtySubAddr.setStatus('current')
ciscoatmSigSupportCldPtySubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmSigSupportCldPtySubAddr.setStatus('current')
ciscoatmSigSupportHiLyrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmSigSupportHiLyrInfo.setStatus('current')
ciscoatmSigSupportLoLyrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmSigSupportLoLyrInfo.setStatus('current')
ciscoatmSigSupportBlliRepeatInd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmSigSupportBlliRepeatInd.setStatus('current')
ciscoatmSigSupportAALInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmSigSupportAALInfo.setStatus('current')
ciscoatmSigSupportUnknownIe = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmSigSupportUnknownIe.setStatus('current')
ciscoatmInterfaceExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 3), )
if mibBuilder.loadTexts: ciscoatmInterfaceExtTable.setStatus('current')
ciscoatmInterfaceExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 3, 1), )
atmInterfaceConfEntry.registerAugmentions(("CISCO-ATM2-MIB", "ciscoatmInterfaceExtEntry"))
ciscoatmInterfaceExtEntry.setIndexNames(*atmInterfaceConfEntry.getIndexNames())
if mibBuilder.loadTexts: ciscoatmInterfaceExtEntry.setStatus('current')
ciscoatmInterfaceConfMaxSvpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmInterfaceConfMaxSvpcVpi.setStatus('current')
ciscoatmInterfaceCurrentMaxSvpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmInterfaceCurrentMaxSvpcVpi.setStatus('current')
ciscoatmInterfaceConfMaxSvccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmInterfaceConfMaxSvccVpi.setStatus('current')
ciscoatmInterfaceCurrentMaxSvccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmInterfaceCurrentMaxSvccVpi.setStatus('current')
ciscoatmInterfaceConfMinSvccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoatmInterfaceConfMinSvccVci.setStatus('current')
ciscoatmInterfaceCurrentMinSvccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 23, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoatmInterfaceCurrentMinSvccVci.setStatus('current')
ciscoatm2MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 23, 3))
ciscoatm2MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 23, 3, 1))
ciscoatm2MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 23, 3, 2))
ciscoatm2MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 23, 3, 2, 1)).setObjects(("CISCO-ATM2-MIB", "ciscoAtmSwitchServcHostGroup"), ("CISCO-ATM2-MIB", "ciscoAtmSwitchServcGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoatm2MIBCompliance = ciscoatm2MIBCompliance.setStatus('obsolete')
ciscoatm2MIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 23, 3, 2, 2)).setObjects(("CISCO-ATM2-MIB", "ciscoAtmSwitchServcHostGroup"), ("CISCO-ATM2-MIB", "ciscoAtmSwitchServcHostGroup2"), ("CISCO-ATM2-MIB", "ciscoAtmSwitchServcGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoatm2MIBCompliance2 = ciscoatm2MIBCompliance2.setStatus('current')
ciscoAtmSwitchServcHostGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 23, 3, 1, 1)).setObjects(("CISCO-ATM2-MIB", "ciscoatmSigSSCOPConEvents"), ("CISCO-ATM2-MIB", "ciscoatmSigSSCOPErrdPdus"), ("CISCO-ATM2-MIB", "ciscoatmSigDetectSetupAttempts"), ("CISCO-ATM2-MIB", "ciscoatmSigEmitSetupAttempts"), ("CISCO-ATM2-MIB", "ciscoatmSigDetectUnavailRoutes"), ("CISCO-ATM2-MIB", "ciscoatmSigEmitUnavailRoutes"), ("CISCO-ATM2-MIB", "ciscoatmSigDetectUnavailResrcs"), ("CISCO-ATM2-MIB", "ciscoatmSigEmitUnavailResrcs"), ("CISCO-ATM2-MIB", "ciscoatmSigDetectCldPtyEvents"), ("CISCO-ATM2-MIB", "ciscoatmSigEmitCldPtyEvents"), ("CISCO-ATM2-MIB", "ciscoatmSigDetectMsgErrors"), ("CISCO-ATM2-MIB", "ciscoatmSigEmitMsgErrors"), ("CISCO-ATM2-MIB", "ciscoatmSigDetectClgPtyEvents"), ("CISCO-ATM2-MIB", "ciscoatmSigEmitClgPtyEvents"), ("CISCO-ATM2-MIB", "ciscoatmSigDetectTimerExpireds"), ("CISCO-ATM2-MIB", "ciscoatmSigEmitTimerExpireds"), ("CISCO-ATM2-MIB", "ciscoatmSigDetectRestarts"), ("CISCO-ATM2-MIB", "ciscoatmSigEmitRestarts"), ("CISCO-ATM2-MIB", "ciscoatmSigInEstabls"), ("CISCO-ATM2-MIB", "ciscoatmSigOutEstabls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAtmSwitchServcHostGroup = ciscoAtmSwitchServcHostGroup.setStatus('current')
ciscoAtmSwitchServcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 23, 3, 1, 3)).setObjects(("CISCO-ATM2-MIB", "ciscoatmSigSupportClgPtyNumDel"), ("CISCO-ATM2-MIB", "ciscoatmSigSupportClgPtySubAddr"), ("CISCO-ATM2-MIB", "ciscoatmSigSupportCldPtySubAddr"), ("CISCO-ATM2-MIB", "ciscoatmSigSupportHiLyrInfo"), ("CISCO-ATM2-MIB", "ciscoatmSigSupportLoLyrInfo"), ("CISCO-ATM2-MIB", "ciscoatmSigSupportBlliRepeatInd"), ("CISCO-ATM2-MIB", "ciscoatmSigSupportAALInfo"), ("CISCO-ATM2-MIB", "ciscoatmSigSupportUnknownIe"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAtmSwitchServcGroup = ciscoAtmSwitchServcGroup.setStatus('current')
ciscoAtmSwitchServcHostGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 23, 3, 1, 4)).setObjects(("CISCO-ATM2-MIB", "ciscoatmInterfaceConfMaxSvpcVpi"), ("CISCO-ATM2-MIB", "ciscoatmInterfaceCurrentMaxSvpcVpi"), ("CISCO-ATM2-MIB", "ciscoatmInterfaceConfMaxSvccVpi"), ("CISCO-ATM2-MIB", "ciscoatmInterfaceCurrentMaxSvccVpi"), ("CISCO-ATM2-MIB", "ciscoatmInterfaceConfMinSvccVci"), ("CISCO-ATM2-MIB", "ciscoatmInterfaceCurrentMinSvccVci"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAtmSwitchServcHostGroup2 = ciscoAtmSwitchServcHostGroup2.setStatus('current')
mibBuilder.exportSymbols("CISCO-ATM2-MIB", ciscoatmInterfaceCurrentMinSvccVci=ciscoatmInterfaceCurrentMinSvccVci, ciscoAtm2MIB=ciscoAtm2MIB, ciscoatmSigSSCOPErrdPdus=ciscoatmSigSSCOPErrdPdus, ciscoatmSigEmitRestarts=ciscoatmSigEmitRestarts, ciscoatmSigStatTable=ciscoatmSigStatTable, ciscoatmSigStatEntry=ciscoatmSigStatEntry, ciscoatmSigSupportBlliRepeatInd=ciscoatmSigSupportBlliRepeatInd, ciscoatmSigDetectUnavailRoutes=ciscoatmSigDetectUnavailRoutes, ciscoatm2MIBCompliance=ciscoatm2MIBCompliance, ciscoatm2MIBConformance=ciscoatm2MIBConformance, ciscoatmInterfaceCurrentMaxSvccVpi=ciscoatmInterfaceCurrentMaxSvccVpi, ciscoatmInterfaceConfMaxSvpcVpi=ciscoatmInterfaceConfMaxSvpcVpi, ciscoatmSigDetectCldPtyEvents=ciscoatmSigDetectCldPtyEvents, ciscoatmSigEmitUnavailResrcs=ciscoatmSigEmitUnavailResrcs, ciscoatmSigSupportLoLyrInfo=ciscoatmSigSupportLoLyrInfo, ciscoatm2MIBGroups=ciscoatm2MIBGroups, ciscoatmSigSupportCldPtySubAddr=ciscoatmSigSupportCldPtySubAddr, PYSNMP_MODULE_ID=ciscoAtm2MIB, ciscoatmSigDetectTimerExpireds=ciscoatmSigDetectTimerExpireds, ciscoAtmSwitchServcHostGroup=ciscoAtmSwitchServcHostGroup, ciscoAtmSwitchServcHostGroup2=ciscoAtmSwitchServcHostGroup2, ciscoatmSigSupportTable=ciscoatmSigSupportTable, ciscoatmSigEmitUnavailRoutes=ciscoatmSigEmitUnavailRoutes, ciscoatmSigInEstabls=ciscoatmSigInEstabls, ciscoatm2MIBCompliance2=ciscoatm2MIBCompliance2, ciscoatmInterfaceConfMinSvccVci=ciscoatmInterfaceConfMinSvccVci, ciscoatm2MIBObjects=ciscoatm2MIBObjects, ciscoatmInterfaceCurrentMaxSvpcVpi=ciscoatmInterfaceCurrentMaxSvpcVpi, ciscoatmSigOutEstabls=ciscoatmSigOutEstabls, ciscoatmSigEmitClgPtyEvents=ciscoatmSigEmitClgPtyEvents, ciscoatmInterfaceExtEntry=ciscoatmInterfaceExtEntry, ciscoatmSigDetectSetupAttempts=ciscoatmSigDetectSetupAttempts, ciscoatmSigDetectUnavailResrcs=ciscoatmSigDetectUnavailResrcs, ciscoatmSigEmitSetupAttempts=ciscoatmSigEmitSetupAttempts, ciscoatmSigEmitCldPtyEvents=ciscoatmSigEmitCldPtyEvents, ciscoatmSigDetectClgPtyEvents=ciscoatmSigDetectClgPtyEvents, ciscoatmSigDetectMsgErrors=ciscoatmSigDetectMsgErrors, ciscoatmSigSupportHiLyrInfo=ciscoatmSigSupportHiLyrInfo, ciscoatmSigSupportEntry=ciscoatmSigSupportEntry, ciscoatm2MIBCompliances=ciscoatm2MIBCompliances, ciscoAtmSwitchServcGroup=ciscoAtmSwitchServcGroup, ciscoatmSigEmitMsgErrors=ciscoatmSigEmitMsgErrors, ciscoatmSigSupportAALInfo=ciscoatmSigSupportAALInfo, ciscoatmSigSupportClgPtyNumDel=ciscoatmSigSupportClgPtyNumDel, ciscoatmSigSSCOPConEvents=ciscoatmSigSSCOPConEvents, ciscoatmSigEmitTimerExpireds=ciscoatmSigEmitTimerExpireds, ciscoatmSigSupportUnknownIe=ciscoatmSigSupportUnknownIe, ciscoatmInterfaceConfMaxSvccVpi=ciscoatmInterfaceConfMaxSvccVpi, ciscoatmInterfaceExtTable=ciscoatmInterfaceExtTable, ciscoatmSigSupportClgPtySubAddr=ciscoatmSigSupportClgPtySubAddr, ciscoatmSigDetectRestarts=ciscoatmSigDetectRestarts)
