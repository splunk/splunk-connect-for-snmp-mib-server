#
# PySNMP MIB module G9982-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/G9982-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:04:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
HCPerfValidIntervals, HCPerfTimeElapsed, HCPerfInvalidIntervals, HCPerfCurrentCount = mibBuilder.importSymbols("HC-PerfHist-TC-MIB", "HCPerfValidIntervals", "HCPerfTimeElapsed", "HCPerfInvalidIntervals", "HCPerfCurrentCount")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, ModuleIdentity, Bits, TimeTicks, Integer32, NotificationType, mib_2, Unsigned32, IpAddress, Counter32, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "ModuleIdentity", "Bits", "TimeTicks", "Integer32", "NotificationType", "mib-2", "Unsigned32", "IpAddress", "Counter32", "iso", "Gauge32")
DisplayString, PhysAddress, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TruthValue", "TextualConvention")
g9982MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 264))
g9982MIB.setRevisions(('2013-02-20 00:00',))
if mibBuilder.loadTexts: g9982MIB.setLastUpdated('201302200000Z')
if mibBuilder.loadTexts: g9982MIB.setOrganization('IETF ADSL MIB Working Group')
g9982Objects = MibIdentifier((1, 3, 6, 1, 2, 1, 264, 1))
g9982Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 264, 2))
g9982Port = MibIdentifier((1, 3, 6, 1, 2, 1, 264, 1, 1))
g9982Bce = MibIdentifier((1, 3, 6, 1, 2, 1, 264, 1, 2))
class G9982PtmTcType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("tc6465", 1), ("tcHDLC", 2))

class G9982CpType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("cpHS", 1), ("cpBACP", 2))

g9982PortConfTable = MibTable((1, 3, 6, 1, 2, 1, 264, 1, 1, 1), )
if mibBuilder.loadTexts: g9982PortConfTable.setStatus('current')
g9982PortConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 264, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9982PortConfEntry.setStatus('current')
g9982PortConfTcAdminType = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 1, 1, 1), G9982PtmTcType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9982PortConfTcAdminType.setStatus('current')
g9982PortConfAdminCp = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 1, 1, 2), G9982CpType().clone('cpHS')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9982PortConfAdminCp.setStatus('current')
g9982PortCapTable = MibTable((1, 3, 6, 1, 2, 1, 264, 1, 1, 2), )
if mibBuilder.loadTexts: g9982PortCapTable.setStatus('current')
g9982PortCapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 264, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9982PortCapEntry.setStatus('current')
g9982PortCapTcTypesSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 2, 1, 1), Bits().clone(namedValues=NamedValues(("tc6465", 0), ("tcHDLC", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortCapTcTypesSupported.setStatus('current')
g9982PortCapBacpSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortCapBacpSupported.setStatus('current')
g9982PortStatTable = MibTable((1, 3, 6, 1, 2, 1, 264, 1, 1, 3), )
if mibBuilder.loadTexts: g9982PortStatTable.setStatus('current')
g9982PortStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9982PortStatEntry.setStatus('current')
g9982PortStatTcOperType = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 1), G9982PtmTcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatTcOperType.setStatus('current')
g9982PortStatOperCp = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 2), G9982CpType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatOperCp.setStatus('current')
g9982PortStatRxErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 3), Counter32()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatRxErrors.setStatus('current')
g9982PortStatRxSmallFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 4), Counter32()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatRxSmallFragments.setStatus('current')
g9982PortStatRxLargeFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 5), Counter32()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatRxLargeFragments.setStatus('current')
g9982PortStatRxBadFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 6), Counter32()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatRxBadFragments.setStatus('current')
g9982PortStatRxLostFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 7), Counter32()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatRxLostFragments.setStatus('current')
g9982PortStatRxLostStarts = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatRxLostStarts.setStatus('current')
g9982PortStatRxLostEnds = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatRxLostEnds.setStatus('current')
g9982PortStatRxOverflows = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 3, 1, 10), Counter32()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortStatRxOverflows.setStatus('current')
g9982PM = MibIdentifier((1, 3, 6, 1, 2, 1, 264, 1, 1, 4))
g9982PortPmCurTable = MibTable((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1), )
if mibBuilder.loadTexts: g9982PortPmCurTable.setStatus('current')
g9982PortPmCurEntry = MibTableRow((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9982PortPmCurEntry.setStatus('current')
g9982PortPm15MinValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 1), HCPerfValidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinValidIntervals.setStatus('current')
g9982PortPm15MinInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 2), HCPerfInvalidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinInvalidIntervals.setStatus('current')
g9982PortPmCur15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 3), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur15MinTimeElapsed.setStatus('current')
g9982PortPmCur15MinRxErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 4), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur15MinRxErrors.setStatus('current')
g9982PortPmCur15MinRxSmallFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 5), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur15MinRxSmallFragments.setStatus('current')
g9982PortPmCur15MinRxLargeFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 6), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur15MinRxLargeFragments.setStatus('current')
g9982PortPmCur15MinRxBadFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 7), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur15MinRxBadFragments.setStatus('current')
g9982PortPmCur15MinRxLostFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 8), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur15MinRxLostFragments.setStatus('current')
g9982PortPmCur15MinRxLostStarts = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 9), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur15MinRxLostStarts.setStatus('current')
g9982PortPmCur15MinRxLostEnds = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 10), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur15MinRxLostEnds.setStatus('current')
g9982PortPmCur15MinRxOverflows = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 11), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur15MinRxOverflows.setStatus('current')
g9982PortPm1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayValidIntervals.setStatus('current')
g9982PortPm1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayInvalidIntervals.setStatus('current')
g9982PortPmCur1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 14), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur1DayTimeElapsed.setStatus('current')
g9982PortPmCur1DayRxErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 15), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur1DayRxErrors.setStatus('current')
g9982PortPmCur1DayRxSmallFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 16), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur1DayRxSmallFragments.setStatus('current')
g9982PortPmCur1DayRxLargeFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 17), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur1DayRxLargeFragments.setStatus('current')
g9982PortPmCur1DayRxBadFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 18), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur1DayRxBadFragments.setStatus('current')
g9982PortPmCur1DayRxLostFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 19), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur1DayRxLostFragments.setStatus('current')
g9982PortPmCur1DayRxLostStarts = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 20), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur1DayRxLostStarts.setStatus('current')
g9982PortPmCur1DayRxLostEnds = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 21), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur1DayRxLostEnds.setStatus('current')
g9982PortPmCur1DayRxOverflows = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 1, 1, 22), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPmCur1DayRxOverflows.setStatus('current')
g9982PortPm15MinTable = MibTable((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2), )
if mibBuilder.loadTexts: g9982PortPm15MinTable.setStatus('current')
g9982PortPm15MinEntry = MibTableRow((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9982-MIB", "g9982PortPm15MinIntervalIndex"))
if mibBuilder.loadTexts: g9982PortPm15MinEntry.setStatus('current')
g9982PortPm15MinIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: g9982PortPm15MinIntervalIndex.setStatus('current')
g9982PortPm15MinIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalMoniTime.setStatus('current')
g9982PortPm15MinIntervalRxErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 3), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalRxErrors.setStatus('current')
g9982PortPm15MinIntervalRxSmallFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 4), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalRxSmallFragments.setStatus('current')
g9982PortPm15MinIntervalRxLargeFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 5), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalRxLargeFragments.setStatus('current')
g9982PortPm15MinIntervalRxBadFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 6), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalRxBadFragments.setStatus('current')
g9982PortPm15MinIntervalRxLostFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 7), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalRxLostFragments.setStatus('current')
g9982PortPm15MinIntervalRxLostStarts = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 8), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalRxLostStarts.setStatus('current')
g9982PortPm15MinIntervalRxLostEnds = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 9), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalRxLostEnds.setStatus('current')
g9982PortPm15MinIntervalRxOverflows = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 10), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalRxOverflows.setStatus('current')
g9982PortPm15MinIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm15MinIntervalValid.setStatus('current')
g9982PortPm1DayTable = MibTable((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3), )
if mibBuilder.loadTexts: g9982PortPm1DayTable.setStatus('current')
g9982PortPm1DayEntry = MibTableRow((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9982-MIB", "g9982PortPm1DayIntervalIndex"))
if mibBuilder.loadTexts: g9982PortPm1DayEntry.setStatus('current')
g9982PortPm1DayIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: g9982PortPm1DayIntervalIndex.setStatus('current')
g9982PortPm1DayIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalMoniTime.setStatus('current')
g9982PortPm1DayIntervalRxErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 3), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalRxErrors.setStatus('current')
g9982PortPm1DayIntervalRxSmallFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 4), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalRxSmallFragments.setStatus('current')
g9982PortPm1DayIntervalRxLargeFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 5), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalRxLargeFragments.setStatus('current')
g9982PortPm1DayIntervalRxBadFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 6), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalRxBadFragments.setStatus('current')
g9982PortPm1DayIntervalRxLostFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 7), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalRxLostFragments.setStatus('current')
g9982PortPm1DayIntervalRxLostStarts = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 8), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalRxLostStarts.setStatus('current')
g9982PortPm1DayIntervalRxLostEnds = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 9), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalRxLostEnds.setStatus('current')
g9982PortPm1DayIntervalRxOverflows = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 10), HCPerfCurrentCount()).setUnits('fragments').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalRxOverflows.setStatus('current')
g9982PortPm1DayIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 1, 4, 3, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982PortPm1DayIntervalValid.setStatus('current')
g9982BceConfTable = MibTable((1, 3, 6, 1, 2, 1, 264, 1, 2, 1), )
if mibBuilder.loadTexts: g9982BceConfTable.setStatus('current')
g9982BceConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 264, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9982BceConfEntry.setStatus('current')
g9982BceConfEligibleGroupID = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 2, 1, 1, 1), PhysAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9982BceConfEligibleGroupID.setStatus('current')
g9982BceConfPeerEligibleGroupID = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 2, 1, 1, 2), PhysAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982BceConfPeerEligibleGroupID.setStatus('current')
g9982BceStatTable = MibTable((1, 3, 6, 1, 2, 1, 264, 1, 2, 2), )
if mibBuilder.loadTexts: g9982BceStatTable.setStatus('current')
g9982BceStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 264, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9982BceStatEntry.setStatus('current')
g9982BceStatTcInCodingErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982BceStatTcInCodingErrors.setStatus('current')
g9982BceStatTcInCrcErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 264, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9982BceStatTcInCrcErrors.setStatus('current')
g9982Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 264, 2, 1))
g9982Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 264, 2, 2))
g9982BasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 264, 2, 1, 1)).setObjects(("G9982-MIB", "g9982PortCapTcTypesSupported"), ("G9982-MIB", "g9982PortCapBacpSupported"), ("G9982-MIB", "g9982PortConfTcAdminType"), ("G9982-MIB", "g9982PortStatTcOperType"), ("G9982-MIB", "g9982PortStatRxErrors"), ("G9982-MIB", "g9982PortStatRxSmallFragments"), ("G9982-MIB", "g9982PortStatRxLargeFragments"), ("G9982-MIB", "g9982PortStatRxBadFragments"), ("G9982-MIB", "g9982PortStatRxLostFragments"), ("G9982-MIB", "g9982PortStatRxLostStarts"), ("G9982-MIB", "g9982PortStatRxLostEnds"), ("G9982-MIB", "g9982PortStatRxOverflows"), ("G9982-MIB", "g9982BceStatTcInCodingErrors"), ("G9982-MIB", "g9982BceStatTcInCrcErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9982BasicGroup = g9982BasicGroup.setStatus('current')
g9982BacpGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 264, 2, 1, 2)).setObjects(("G9982-MIB", "g9982PortConfAdminCp"), ("G9982-MIB", "g9982PortStatOperCp"), ("G9982-MIB", "g9982BceConfEligibleGroupID"), ("G9982-MIB", "g9982BceConfPeerEligibleGroupID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9982BacpGroup = g9982BacpGroup.setStatus('current')
g9982BceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 264, 2, 1, 3)).setObjects(("G9982-MIB", "g9982BceStatTcInCodingErrors"), ("G9982-MIB", "g9982BceStatTcInCrcErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9982BceGroup = g9982BceGroup.setStatus('current')
g9982PerfCurrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 264, 2, 1, 4)).setObjects(("G9982-MIB", "g9982PortPm15MinValidIntervals"), ("G9982-MIB", "g9982PortPm15MinInvalidIntervals"), ("G9982-MIB", "g9982PortPmCur15MinTimeElapsed"), ("G9982-MIB", "g9982PortPmCur15MinRxErrors"), ("G9982-MIB", "g9982PortPmCur15MinRxSmallFragments"), ("G9982-MIB", "g9982PortPmCur15MinRxLargeFragments"), ("G9982-MIB", "g9982PortPmCur15MinRxBadFragments"), ("G9982-MIB", "g9982PortPmCur15MinRxLostFragments"), ("G9982-MIB", "g9982PortPmCur15MinRxLostStarts"), ("G9982-MIB", "g9982PortPmCur15MinRxLostEnds"), ("G9982-MIB", "g9982PortPmCur15MinRxOverflows"), ("G9982-MIB", "g9982PortPm1DayValidIntervals"), ("G9982-MIB", "g9982PortPm1DayInvalidIntervals"), ("G9982-MIB", "g9982PortPmCur1DayTimeElapsed"), ("G9982-MIB", "g9982PortPmCur1DayRxErrors"), ("G9982-MIB", "g9982PortPmCur1DayRxSmallFragments"), ("G9982-MIB", "g9982PortPmCur1DayRxLargeFragments"), ("G9982-MIB", "g9982PortPmCur1DayRxBadFragments"), ("G9982-MIB", "g9982PortPmCur1DayRxLostFragments"), ("G9982-MIB", "g9982PortPmCur1DayRxLostStarts"), ("G9982-MIB", "g9982PortPmCur1DayRxLostEnds"), ("G9982-MIB", "g9982PortPmCur1DayRxOverflows"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9982PerfCurrGroup = g9982PerfCurrGroup.setStatus('current')
g9982Perf15MinGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 264, 2, 1, 5)).setObjects(("G9982-MIB", "g9982PortPm15MinIntervalMoniTime"), ("G9982-MIB", "g9982PortPm15MinIntervalRxErrors"), ("G9982-MIB", "g9982PortPm15MinIntervalRxSmallFragments"), ("G9982-MIB", "g9982PortPm15MinIntervalRxLargeFragments"), ("G9982-MIB", "g9982PortPm15MinIntervalRxBadFragments"), ("G9982-MIB", "g9982PortPm15MinIntervalRxLostFragments"), ("G9982-MIB", "g9982PortPm15MinIntervalRxLostStarts"), ("G9982-MIB", "g9982PortPm15MinIntervalRxLostEnds"), ("G9982-MIB", "g9982PortPm15MinIntervalRxOverflows"), ("G9982-MIB", "g9982PortPm15MinIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9982Perf15MinGroup = g9982Perf15MinGroup.setStatus('current')
g9982Perf1DayGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 264, 2, 1, 6)).setObjects(("G9982-MIB", "g9982PortPm1DayIntervalMoniTime"), ("G9982-MIB", "g9982PortPm1DayIntervalRxErrors"), ("G9982-MIB", "g9982PortPm1DayIntervalRxSmallFragments"), ("G9982-MIB", "g9982PortPm1DayIntervalRxLargeFragments"), ("G9982-MIB", "g9982PortPm1DayIntervalRxBadFragments"), ("G9982-MIB", "g9982PortPm1DayIntervalRxLostFragments"), ("G9982-MIB", "g9982PortPm1DayIntervalRxLostStarts"), ("G9982-MIB", "g9982PortPm1DayIntervalRxLostEnds"), ("G9982-MIB", "g9982PortPm1DayIntervalRxOverflows"), ("G9982-MIB", "g9982PortPm1DayIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9982Perf1DayGroup = g9982Perf1DayGroup.setStatus('current')
g9982Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 264, 2, 2, 1)).setObjects(("G9982-MIB", "g9982BasicGroup"), ("G9982-MIB", "g9982BceGroup"), ("G9982-MIB", "g9982BacpGroup"), ("G9982-MIB", "g9982PerfCurrGroup"), ("G9982-MIB", "g9982Perf15MinGroup"), ("G9982-MIB", "g9982Perf1DayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9982Compliance = g9982Compliance.setStatus('current')
mibBuilder.exportSymbols("G9982-MIB", g9982PortStatRxLostFragments=g9982PortStatRxLostFragments, g9982MIB=g9982MIB, g9982PortCapTcTypesSupported=g9982PortCapTcTypesSupported, g9982PortPm1DayIntervalRxSmallFragments=g9982PortPm1DayIntervalRxSmallFragments, g9982BceConfEligibleGroupID=g9982BceConfEligibleGroupID, g9982Perf1DayGroup=g9982Perf1DayGroup, g9982PortPm15MinIntervalRxLostEnds=g9982PortPm15MinIntervalRxLostEnds, g9982BacpGroup=g9982BacpGroup, g9982PortPmCur1DayRxLostFragments=g9982PortPmCur1DayRxLostFragments, g9982PortPmCur1DayRxBadFragments=g9982PortPmCur1DayRxBadFragments, g9982PortPm15MinIntervalRxSmallFragments=g9982PortPm15MinIntervalRxSmallFragments, g9982Bce=g9982Bce, g9982PortPm1DayIntervalRxLostEnds=g9982PortPm1DayIntervalRxLostEnds, g9982PortConfTcAdminType=g9982PortConfTcAdminType, g9982BceStatTable=g9982BceStatTable, g9982BceGroup=g9982BceGroup, G9982PtmTcType=G9982PtmTcType, g9982PortConfTable=g9982PortConfTable, g9982BceConfTable=g9982BceConfTable, g9982Perf15MinGroup=g9982Perf15MinGroup, g9982PortPm15MinValidIntervals=g9982PortPm15MinValidIntervals, g9982PortPmCur1DayRxErrors=g9982PortPmCur1DayRxErrors, g9982Conformance=g9982Conformance, g9982PortStatRxBadFragments=g9982PortStatRxBadFragments, g9982PortPm15MinIntervalRxOverflows=g9982PortPm15MinIntervalRxOverflows, g9982PortPm1DayIntervalIndex=g9982PortPm1DayIntervalIndex, g9982PortPm1DayIntervalValid=g9982PortPm1DayIntervalValid, g9982BceStatTcInCrcErrors=g9982BceStatTcInCrcErrors, g9982PortCapTable=g9982PortCapTable, g9982PortCapEntry=g9982PortCapEntry, g9982Groups=g9982Groups, g9982PortStatRxOverflows=g9982PortStatRxOverflows, g9982PortPmCur15MinRxOverflows=g9982PortPmCur15MinRxOverflows, g9982PortPm15MinIntervalRxBadFragments=g9982PortPm15MinIntervalRxBadFragments, G9982CpType=G9982CpType, g9982PortStatRxLargeFragments=g9982PortStatRxLargeFragments, g9982PortPmCur15MinRxBadFragments=g9982PortPmCur15MinRxBadFragments, g9982PortPmCur1DayRxLargeFragments=g9982PortPmCur1DayRxLargeFragments, g9982PortConfAdminCp=g9982PortConfAdminCp, g9982PortPmCur15MinTimeElapsed=g9982PortPmCur15MinTimeElapsed, g9982PortPm15MinTable=g9982PortPm15MinTable, g9982PortPmCur15MinRxLargeFragments=g9982PortPmCur15MinRxLargeFragments, g9982PortPm15MinIntervalIndex=g9982PortPm15MinIntervalIndex, g9982PortPm1DayIntervalRxLostFragments=g9982PortPm1DayIntervalRxLostFragments, g9982PortPm15MinIntervalRxErrors=g9982PortPm15MinIntervalRxErrors, g9982PortPmCur1DayRxLostEnds=g9982PortPmCur1DayRxLostEnds, g9982PortPm1DayIntervalMoniTime=g9982PortPm1DayIntervalMoniTime, g9982PortPmCur1DayRxOverflows=g9982PortPmCur1DayRxOverflows, g9982PortPmCur15MinRxLostFragments=g9982PortPmCur15MinRxLostFragments, g9982BceConfEntry=g9982BceConfEntry, g9982Objects=g9982Objects, g9982PortPm1DayTable=g9982PortPm1DayTable, g9982PortPm15MinIntervalMoniTime=g9982PortPm15MinIntervalMoniTime, g9982Port=g9982Port, g9982PortPmCur15MinRxLostEnds=g9982PortPmCur15MinRxLostEnds, g9982PortPm1DayInvalidIntervals=g9982PortPm1DayInvalidIntervals, g9982PortStatOperCp=g9982PortStatOperCp, g9982PortConfEntry=g9982PortConfEntry, PYSNMP_MODULE_ID=g9982MIB, g9982PortStatRxLostStarts=g9982PortStatRxLostStarts, g9982PortStatRxErrors=g9982PortStatRxErrors, g9982PortPm15MinIntervalValid=g9982PortPm15MinIntervalValid, g9982PortPm15MinEntry=g9982PortPm15MinEntry, g9982BceStatEntry=g9982BceStatEntry, g9982PortPm15MinIntervalRxLostStarts=g9982PortPm15MinIntervalRxLostStarts, g9982BasicGroup=g9982BasicGroup, g9982PortPm1DayValidIntervals=g9982PortPm1DayValidIntervals, g9982PortPmCur15MinRxSmallFragments=g9982PortPmCur15MinRxSmallFragments, g9982BceConfPeerEligibleGroupID=g9982BceConfPeerEligibleGroupID, g9982PM=g9982PM, g9982PortPmCur1DayTimeElapsed=g9982PortPmCur1DayTimeElapsed, g9982PortPm1DayIntervalRxBadFragments=g9982PortPm1DayIntervalRxBadFragments, g9982BceStatTcInCodingErrors=g9982BceStatTcInCodingErrors, g9982PortPm1DayIntervalRxOverflows=g9982PortPm1DayIntervalRxOverflows, g9982PortStatTable=g9982PortStatTable, g9982PortPmCurEntry=g9982PortPmCurEntry, g9982PerfCurrGroup=g9982PerfCurrGroup, g9982PortPmCur1DayRxLostStarts=g9982PortPmCur1DayRxLostStarts, g9982PortStatRxLostEnds=g9982PortStatRxLostEnds, g9982PortCapBacpSupported=g9982PortCapBacpSupported, g9982PortPmCur15MinRxErrors=g9982PortPmCur15MinRxErrors, g9982PortStatTcOperType=g9982PortStatTcOperType, g9982PortStatEntry=g9982PortStatEntry, g9982PortStatRxSmallFragments=g9982PortStatRxSmallFragments, g9982PortPm15MinInvalidIntervals=g9982PortPm15MinInvalidIntervals, g9982PortPm15MinIntervalRxLostFragments=g9982PortPm15MinIntervalRxLostFragments, g9982Compliance=g9982Compliance, g9982PortPm1DayEntry=g9982PortPm1DayEntry, g9982PortPmCur1DayRxSmallFragments=g9982PortPmCur1DayRxSmallFragments, g9982PortPm1DayIntervalRxLargeFragments=g9982PortPm1DayIntervalRxLargeFragments, g9982PortPm1DayIntervalRxErrors=g9982PortPm1DayIntervalRxErrors, g9982PortPm1DayIntervalRxLostStarts=g9982PortPm1DayIntervalRxLostStarts, g9982PortPm15MinIntervalRxLargeFragments=g9982PortPm15MinIntervalRxLargeFragments, g9982PortPmCur15MinRxLostStarts=g9982PortPmCur15MinRxLostStarts, g9982Compliances=g9982Compliances, g9982PortPmCurTable=g9982PortPmCurTable)
