#
# PySNMP MIB module DECHUB900-COMMON-MIB-V3-0 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DECHUB900-COMMON-MIB-V3-0
# Produced by pysmi-0.3.4 at Mon Apr 29 18:22:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, NotificationType, iso, Integer32, Gauge32, ModuleIdentity, Counter64, Unsigned32, ObjectIdentity, enterprises, IpAddress, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "NotificationType", "iso", "Integer32", "Gauge32", "ModuleIdentity", "Counter64", "Unsigned32", "ObjectIdentity", "enterprises", "IpAddress", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dec = MibIdentifier((1, 3, 6, 1, 4, 1, 36))
ema = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2))
decMIBextension = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18))
decHub900 = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11))
pubCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2))
pcomSlot = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 1))
pcomHub = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 2))
pcomLed = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 3))
pcomLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 4))
pcomSnmpAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5))
pcomErrLog = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 6))
pcomEsys = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 7))
pcomEif = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 8))
pcomLigo = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9))
pcomCon = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10))
pcom90mgt = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 11))
pcomOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("enabled", 1), ("initializing", 2), ("failure", 3), ("nonFatalFailure", 4), ("loading", 5), ("disabled", 6), ("needProgramLoad", 7), ("testing", 8), ("lowPowerMode", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomOperStatus.setStatus('mandatory')
pcomAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("reset", 3), ("restoreToDefaults", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomAdminStatus.setStatus('mandatory')
pcomDiagFailure = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomDiagFailure.setStatus('mandatory')
pcomSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSerialNumber.setStatus('mandatory')
pcomSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomSlotNumber.setStatus('mandatory')
pcomEsn = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEsn.setStatus('mandatory')
pcomHubId = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomHubId.setStatus('deprecated')
pcomHubIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 2, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomHubIpAddress.setStatus('mandatory')
pcomHubCommunity = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomHubCommunity.setStatus('mandatory')
pcomLedTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 3, 1), )
if mibBuilder.loadTexts: pcomLedTable.setStatus('mandatory')
pcomLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 3, 1, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomLedIndex"))
if mibBuilder.loadTexts: pcomLedEntry.setStatus('mandatory')
pcomLedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLedIndex.setStatus('mandatory')
pcomLedDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLedDescr.setStatus('mandatory')
pcomLedProgram = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLedProgram.setStatus('mandatory')
pcomLedInterestingChanges = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLedInterestingChanges.setStatus('mandatory')
pcomLoadAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("start-read", 2), ("start-write", 3), ("cancel", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomLoadAdminStatus.setStatus('mandatory')
pcomLoadOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLoadOperStatus.setStatus('mandatory')
pcomLoadFilename = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomLoadFilename.setStatus('mandatory')
pcomLoadIpHostAddr = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 4, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomLoadIpHostAddr.setStatus('mandatory')
pcomLoadDevSpecific = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLoadDevSpecific.setStatus('mandatory')
pcomLoadTftpDirection = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pcomLoadTftpDirectionAckWrite", 1), ("pcomLoadTftpDirectionStartRead", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLoadTftpDirection.setStatus('mandatory')
pcomSnmpAuthTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 1))
pcomSnmpAuthTrapCommunity = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthTrapCommunity.setStatus('mandatory')
pcomSnmpAuthTrapUserTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 1, 2), )
if mibBuilder.loadTexts: pcomSnmpAuthTrapUserTable.setStatus('mandatory')
pcomSnmpAuthTrapUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 1, 2, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomSnmpAuthTrapUserAddr"))
if mibBuilder.loadTexts: pcomSnmpAuthTrapUserEntry.setStatus('mandatory')
pcomSnmpAuthTrapUserAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 1, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthTrapUserAddr.setStatus('mandatory')
pcomSnmpAuthTrapUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthTrapUserStatus.setStatus('mandatory')
pcomSnmpAuthReadOnly = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 2))
pcomSnmpAuthReadOnlyCommunity = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthReadOnlyCommunity.setStatus('mandatory')
pcomSnmpAuthReadOnlyUserTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 2, 2), )
if mibBuilder.loadTexts: pcomSnmpAuthReadOnlyUserTable.setStatus('mandatory')
pcomSnmpAuthReadOnlyUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 2, 2, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomSnmpAuthReadOnlyUserAddr"))
if mibBuilder.loadTexts: pcomSnmpAuthReadOnlyUserEntry.setStatus('mandatory')
pcomSnmpAuthReadOnlyUserAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 2, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthReadOnlyUserAddr.setStatus('mandatory')
pcomSnmpAuthReadOnlyUserMask = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthReadOnlyUserMask.setStatus('mandatory')
pcomSnmpAuthReadOnlyUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthReadOnlyUserStatus.setStatus('mandatory')
pcomSnmpAuthReadWrite = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 3))
pcomSnmpAuthReadWriteCommunity = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthReadWriteCommunity.setStatus('mandatory')
pcomSnmpAuthReadWriteUserTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 3, 2), )
if mibBuilder.loadTexts: pcomSnmpAuthReadWriteUserTable.setStatus('mandatory')
pcomSnmpAuthReadWriteUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 3, 2, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomSnmpAuthReadWriteUserAddr"))
if mibBuilder.loadTexts: pcomSnmpAuthReadWriteUserEntry.setStatus('mandatory')
pcomSnmpAuthReadWriteUserAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 3, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthReadWriteUserAddr.setStatus('mandatory')
pcomSnmpAuthReadWriteUserMask = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthReadWriteUserMask.setStatus('mandatory')
pcomSnmpAuthReadWriteUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomSnmpAuthReadWriteUserStatus.setStatus('mandatory')
pcomSnmpAuthUnauth = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4))
pcomSnmpAuthUnauthTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4, 1), )
if mibBuilder.loadTexts: pcomSnmpAuthUnauthTable.setStatus('mandatory')
pcomSnmpAuthUnauthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4, 1, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomSnmpAuthUnauthIndex"))
if mibBuilder.loadTexts: pcomSnmpAuthUnauthEntry.setStatus('mandatory')
pcomSnmpAuthUnauthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomSnmpAuthUnauthIndex.setStatus('mandatory')
pcomSnmpAuthUnauthTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomSnmpAuthUnauthTimeStamp.setStatus('mandatory')
pcomSnmpAuthUnauthIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomSnmpAuthUnauthIpAddress.setStatus('mandatory')
pcomSnmpAuthUnauthUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomSnmpAuthUnauthUdpPort.setStatus('mandatory')
pcomSnmpAuthUnauthCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomSnmpAuthUnauthCommunity.setStatus('mandatory')
pcomSnmpAuthUnauthOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("getRequest", 2), ("getNextRequest", 3), ("getResponse", 4), ("setRequest", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomSnmpAuthUnauthOperation.setStatus('mandatory')
pcomSnmpAuthUnauthReason = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 5, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("badComName", 1), ("badComUse", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomSnmpAuthUnauthReason.setStatus('mandatory')
pcomErrLogNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomErrLogNumEntries.setStatus('mandatory')
pcomErrLogTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 6, 2), )
if mibBuilder.loadTexts: pcomErrLogTable.setStatus('mandatory')
pcomErrLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 6, 2, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomErrLogIndex"))
if mibBuilder.loadTexts: pcomErrLogEntry.setStatus('mandatory')
pcomErrLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomErrLogIndex.setStatus('mandatory')
pcomErrLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 6, 2, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomErrLogTimeStamp.setStatus('mandatory')
pcomErrLogResetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomErrLogResetNumber.setStatus('mandatory')
pcomErrLogInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomErrLogInfo.setStatus('mandatory')
pcomErrLogFwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 6, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomErrLogFwVersion.setStatus('mandatory')
pcomEsysPowerups = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEsysPowerups.setStatus('mandatory')
pcomEsysMgmtResets = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 7, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEsysMgmtResets.setStatus('mandatory')
pcomEsysUnsolicitedResets = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEsysUnsolicitedResets.setStatus('mandatory')
pcomEsysNVRAMfailedFlag = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEsysNVRAMfailedFlag.setStatus('mandatory')
pcomEsysNVRAMsize = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEsysNVRAMsize.setStatus('mandatory')
pcomEsysNVRAMavailableOctets = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 7, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEsysNVRAMavailableOctets.setStatus('mandatory')
pcomEsysHubVersion = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 7, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEsysHubVersion.setStatus('mandatory')
pcomEifTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 8, 1), )
if mibBuilder.loadTexts: pcomEifTable.setStatus('mandatory')
pcomEifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 8, 1, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomEifIndex"))
if mibBuilder.loadTexts: pcomEifEntry.setStatus('mandatory')
pcomEifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEifIndex.setStatus('mandatory')
pcomEifInBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 8, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomEifInBroadcastPkts.setStatus('mandatory')
pcomLigoNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoNumEntries.setStatus('mandatory')
pcomLigoTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 2), )
if mibBuilder.loadTexts: pcomLigoTable.setStatus('mandatory')
pcomLigoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 2, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomLigoIndex"))
if mibBuilder.loadTexts: pcomLigoEntry.setStatus('mandatory')
pcomLigoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoIndex.setStatus('mandatory')
pcomLigoType = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("fddi", 2), ("ethernet", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoType.setStatus('mandatory')
pcomLigoSubtypeSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomLigoSubtypeSelect.setStatus('mandatory')
pcomLigoSubtypeNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoSubtypeNumEntries.setStatus('mandatory')
pcomLigoSubtypeTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 4), )
if mibBuilder.loadTexts: pcomLigoSubtypeTable.setStatus('mandatory')
pcomLigoSubtypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 4, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomLigoSubtypeIndex"))
if mibBuilder.loadTexts: pcomLigoSubtypeEntry.setStatus('mandatory')
pcomLigoSubtypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoSubtypeIndex.setStatus('mandatory')
pcomLigoSubtypeLigoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoSubtypeLigoIndex.setStatus('mandatory')
pcomLigoSubtypeLabelIndexMask = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoSubtypeLabelIndexMask.setStatus('mandatory')
pcomLigoSubtypeFlavor = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("fddiRoot-Primary", 1), ("fddiRoot-Secondary", 2), ("fddiNonroot", 3), ("fddiTrunk-A-Primary", 4), ("fddiTrunk-A-Secondary", 5), ("fddiTrunk-B-Primary", 6), ("fddiTrunk-B-Secondary", 7), ("fddiTrunk-AB-Primary", 8), ("fddiTrunk-AB-Secondary", 9), ("fddiStump-Primary", 10), ("fddiStump-Secondary", 11), ("ethernet-front", 12), ("ethernet-back", 13), ("fddiNonroot-M", 14), ("fddiNonroot-S", 15), ("fddiNonroot-SM", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoSubtypeFlavor.setStatus('mandatory')
pcomLigoLabelNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoLabelNumEntries.setStatus('mandatory')
pcomLigoLabelTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 6), )
if mibBuilder.loadTexts: pcomLigoLabelTable.setStatus('mandatory')
pcomLigoLabelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 6, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomLigoLabelIndex"))
if mibBuilder.loadTexts: pcomLigoLabelEntry.setStatus('mandatory')
pcomLigoLabelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoLabelIndex.setStatus('mandatory')
pcomLigoLabelString = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 9, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomLigoLabelString.setStatus('mandatory')
pcomConTotalConfigChanges = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConTotalConfigChanges.setStatus('mandatory')
pcomConNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConNumEntries.setStatus('mandatory')
pcomConTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 3), )
if mibBuilder.loadTexts: pcomConTable.setStatus('mandatory')
pcomConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 3, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomConIndex"))
if mibBuilder.loadTexts: pcomConEntry.setStatus('mandatory')
pcomConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConIndex.setStatus('mandatory')
pcomConTech = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ethernet", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConTech.setStatus('mandatory')
pcomConClass = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bezcon", 1), ("extcon", 2), ("interthinwire", 3), ("mac", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConClass.setStatus('mandatory')
pcomConGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomConGroupId.setStatus('mandatory')
pcomConGroupSet = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConGroupSet.setStatus('mandatory')
pcomConLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConLabel.setStatus('mandatory')
pcomConSubtypeSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomConSubtypeSelect.setStatus('mandatory')
pcomConSubtypeNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConSubtypeNumEntries.setStatus('mandatory')
pcomConSubtypeTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 5), )
if mibBuilder.loadTexts: pcomConSubtypeTable.setStatus('mandatory')
pcomConSubtypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 5, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomConSubtypeIndex"))
if mibBuilder.loadTexts: pcomConSubtypeEntry.setStatus('mandatory')
pcomConSubtypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConSubtypeIndex.setStatus('mandatory')
pcomConSubtypeConSet = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConSubtypeConSet.setStatus('mandatory')
pcomConSubtypeFlavor = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("thinwire", 2), ("aui", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConSubtypeFlavor.setStatus('mandatory')
pcomConIntLanNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConIntLanNumEntries.setStatus('mandatory')
pcomConIntLanTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 7), )
if mibBuilder.loadTexts: pcomConIntLanTable.setStatus('mandatory')
pcomConIntLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 7, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomConIntLanIndex"))
if mibBuilder.loadTexts: pcomConIntLanEntry.setStatus('mandatory')
pcomConIntLanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConIntLanIndex.setStatus('mandatory')
pcomConIntLanGroupIdMask = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConIntLanGroupIdMask.setStatus('mandatory')
pcomConIntLanName = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomConIntLanName.setStatus('mandatory')
pcomConAssignNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcomConAssignNumEntries.setStatus('mandatory')
pcomConAssignTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 9), )
if mibBuilder.loadTexts: pcomConAssignTable.setStatus('mandatory')
pcomConAssignEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 9, 1), ).setIndexNames((0, "DECHUB900-COMMON-MIB-V3-0", "pcomConAssignIndex"))
if mibBuilder.loadTexts: pcomConAssignEntry.setStatus('mandatory')
pcomConAssignIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomConAssignIndex.setStatus('mandatory')
pcomConAssignConGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomConAssignConGroup.setStatus('mandatory')
pcomConAssignIntLan = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomConAssignIntLan.setStatus('mandatory')
pcomConAssignEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 10, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcomConAssignEntryStatus.setStatus('mandatory')
pcom90mgtBackplaneHubMaster = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcom90mgtBackplaneHubMaster.setStatus('mandatory')
pcom90mgtBackplaneHubMasterState = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcom90mgtBackplaneHubMasterState.setStatus('mandatory')
pcom90mgtBackplaneConfig = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notConfigured", 1), ("standAlone", 2), ("single-DEChub90", 3), ("pair-DEChub90", 4), ("decStack90", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pcom90mgtBackplaneConfig.setStatus('mandatory')
mibBuilder.exportSymbols("DECHUB900-COMMON-MIB-V3-0", pcomLoadAdminStatus=pcomLoadAdminStatus, pcomEsysNVRAMavailableOctets=pcomEsysNVRAMavailableOctets, pcomConSubtypeIndex=pcomConSubtypeIndex, pcomErrLogInfo=pcomErrLogInfo, pcomConClass=pcomConClass, pcomEsysMgmtResets=pcomEsysMgmtResets, pcomSnmpAuthReadWriteUserEntry=pcomSnmpAuthReadWriteUserEntry, pcomSnmpAuthUnauthIndex=pcomSnmpAuthUnauthIndex, pcomErrLogTable=pcomErrLogTable, pcomConEntry=pcomConEntry, pcomLigoTable=pcomLigoTable, pcomLoadDevSpecific=pcomLoadDevSpecific, pcomConGroupSet=pcomConGroupSet, pcomLigo=pcomLigo, pcomSnmpAuthUnauthEntry=pcomSnmpAuthUnauthEntry, pcomLigoLabelString=pcomLigoLabelString, pcomConLabel=pcomConLabel, pcomErrLogNumEntries=pcomErrLogNumEntries, pcomConIntLanNumEntries=pcomConIntLanNumEntries, pcomConSubtypeNumEntries=pcomConSubtypeNumEntries, pcomSnmpAuthTrapCommunity=pcomSnmpAuthTrapCommunity, pcomConIntLanName=pcomConIntLanName, pcomConIntLanEntry=pcomConIntLanEntry, pcomEsysNVRAMsize=pcomEsysNVRAMsize, pcomConTech=pcomConTech, pcomLigoSubtypeTable=pcomLigoSubtypeTable, pcomSnmpAuthReadOnlyUserEntry=pcomSnmpAuthReadOnlyUserEntry, pcomErrLogEntry=pcomErrLogEntry, pcomEsysNVRAMfailedFlag=pcomEsysNVRAMfailedFlag, pcomLigoLabelEntry=pcomLigoLabelEntry, pcomSnmpAuthReadOnlyUserAddr=pcomSnmpAuthReadOnlyUserAddr, pcomLigoIndex=pcomLigoIndex, pcomErrLogIndex=pcomErrLogIndex, pcomConSubtypeTable=pcomConSubtypeTable, pcom90mgtBackplaneConfig=pcom90mgtBackplaneConfig, pcomLigoNumEntries=pcomLigoNumEntries, pcomConAssignIntLan=pcomConAssignIntLan, pcomEsn=pcomEsn, pcomHubId=pcomHubId, pcomConGroupId=pcomConGroupId, pcomEifEntry=pcomEifEntry, pcomHubIpAddress=pcomHubIpAddress, pcomSnmpAuthUnauthCommunity=pcomSnmpAuthUnauthCommunity, pcomConIntLanIndex=pcomConIntLanIndex, pcomEifTable=pcomEifTable, pcomLigoSubtypeFlavor=pcomLigoSubtypeFlavor, pcomSnmpAuth=pcomSnmpAuth, pcomSnmpAuthTrapUserAddr=pcomSnmpAuthTrapUserAddr, pcomEsysHubVersion=pcomEsysHubVersion, pcomConTable=pcomConTable, pcomConSubtypeConSet=pcomConSubtypeConSet, decHub900=decHub900, dec=dec, pcomLoadFilename=pcomLoadFilename, pcom90mgtBackplaneHubMaster=pcom90mgtBackplaneHubMaster, pcomSnmpAuthUnauthOperation=pcomSnmpAuthUnauthOperation, pcomSnmpAuthReadWriteUserStatus=pcomSnmpAuthReadWriteUserStatus, pcomConNumEntries=pcomConNumEntries, ema=ema, pcomSnmpAuthUnauthIpAddress=pcomSnmpAuthUnauthIpAddress, pcomEifInBroadcastPkts=pcomEifInBroadcastPkts, pcomEsys=pcomEsys, pcomConIntLanTable=pcomConIntLanTable, pcomConAssignEntryStatus=pcomConAssignEntryStatus, pcomSnmpAuthReadOnlyUserMask=pcomSnmpAuthReadOnlyUserMask, pcomErrLogTimeStamp=pcomErrLogTimeStamp, pcomLigoLabelNumEntries=pcomLigoLabelNumEntries, pcomSnmpAuthReadOnlyUserStatus=pcomSnmpAuthReadOnlyUserStatus, pcomLigoSubtypeLabelIndexMask=pcomLigoSubtypeLabelIndexMask, pcomAdminStatus=pcomAdminStatus, pcomEsysUnsolicitedResets=pcomEsysUnsolicitedResets, pcomLedIndex=pcomLedIndex, pcomConSubtypeSelect=pcomConSubtypeSelect, pcomLedEntry=pcomLedEntry, pcomEsysPowerups=pcomEsysPowerups, pcomSnmpAuthReadOnlyCommunity=pcomSnmpAuthReadOnlyCommunity, pcomSnmpAuthTrapUserEntry=pcomSnmpAuthTrapUserEntry, pcomLigoSubtypeSelect=pcomLigoSubtypeSelect, pcomConTotalConfigChanges=pcomConTotalConfigChanges, pcomLedTable=pcomLedTable, pcomLigoSubtypeLigoIndex=pcomLigoSubtypeLigoIndex, pcomConSubtypeEntry=pcomConSubtypeEntry, pcomLed=pcomLed, pcomSnmpAuthTrapUserStatus=pcomSnmpAuthTrapUserStatus, pcomLedInterestingChanges=pcomLedInterestingChanges, pcomLoad=pcomLoad, pcomErrLog=pcomErrLog, pcomLigoLabelTable=pcomLigoLabelTable, pcomLigoType=pcomLigoType, pcomEif=pcomEif, pcomConAssignIndex=pcomConAssignIndex, pcomSlot=pcomSlot, pcomErrLogFwVersion=pcomErrLogFwVersion, pcomConIndex=pcomConIndex, pcomSnmpAuthReadWriteCommunity=pcomSnmpAuthReadWriteCommunity, pcomLedProgram=pcomLedProgram, pcomSnmpAuthReadWriteUserTable=pcomSnmpAuthReadWriteUserTable, pcomConAssignEntry=pcomConAssignEntry, pcomSnmpAuthReadWriteUserMask=pcomSnmpAuthReadWriteUserMask, pcomHubCommunity=pcomHubCommunity, pcomSnmpAuthReadWriteUserAddr=pcomSnmpAuthReadWriteUserAddr, pcomSnmpAuthUnauthTimeStamp=pcomSnmpAuthUnauthTimeStamp, pcomSlotNumber=pcomSlotNumber, pubCommon=pubCommon, pcomSnmpAuthReadOnly=pcomSnmpAuthReadOnly, pcomLedDescr=pcomLedDescr, pcomLigoLabelIndex=pcomLigoLabelIndex, pcom90mgtBackplaneHubMasterState=pcom90mgtBackplaneHubMasterState, pcomConAssignNumEntries=pcomConAssignNumEntries, pcomLigoSubtypeIndex=pcomLigoSubtypeIndex, pcomSerialNumber=pcomSerialNumber, pcomLigoEntry=pcomLigoEntry, pcomConIntLanGroupIdMask=pcomConIntLanGroupIdMask, pcomSnmpAuthUnauthUdpPort=pcomSnmpAuthUnauthUdpPort, decMIBextension=decMIBextension, pcomDiagFailure=pcomDiagFailure, pcomSnmpAuthUnauth=pcomSnmpAuthUnauth, pcomErrLogResetNumber=pcomErrLogResetNumber, pcomConAssignConGroup=pcomConAssignConGroup, pcomSnmpAuthTrapUserTable=pcomSnmpAuthTrapUserTable, pcomHub=pcomHub, pcom90mgt=pcom90mgt, pcomEifIndex=pcomEifIndex, pcomLigoSubtypeNumEntries=pcomLigoSubtypeNumEntries, pcomConSubtypeFlavor=pcomConSubtypeFlavor, pcomSnmpAuthReadWrite=pcomSnmpAuthReadWrite, pcomLigoSubtypeEntry=pcomLigoSubtypeEntry, pcomConAssignTable=pcomConAssignTable, pcomLoadOperStatus=pcomLoadOperStatus, pcomSnmpAuthUnauthTable=pcomSnmpAuthUnauthTable, pcomSnmpAuthTrap=pcomSnmpAuthTrap, pcomOperStatus=pcomOperStatus, pcomLoadIpHostAddr=pcomLoadIpHostAddr, pcomLoadTftpDirection=pcomLoadTftpDirection, pcomSnmpAuthUnauthReason=pcomSnmpAuthUnauthReason, pcomCon=pcomCon, pcomSnmpAuthReadOnlyUserTable=pcomSnmpAuthReadOnlyUserTable)
