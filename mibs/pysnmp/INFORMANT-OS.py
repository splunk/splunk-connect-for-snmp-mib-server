#
# PySNMP MIB module INFORMANT-OS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INFORMANT-OS
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Integer32, TimeTicks, Counter32, IpAddress, NotificationType, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, ObjectIdentity, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "TimeTicks", "Counter32", "IpAddress", "NotificationType", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "ObjectIdentity", "Counter64", "Gauge32")
DisplayString, TruthValue, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "DateAndTime")
WtcsDisplayString, informant = mibBuilder.importSymbols("WTCS", "WtcsDisplayString", "informant")
wmiOperatingSystem = ModuleIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22))
wmiOperatingSystem.setRevisions(('2007-08-31 21:29', '2007-06-05 22:28', '2006-05-24 22:27', '2005-03-19 18:50', '2004-11-03 21:33',))
if mibBuilder.loadTexts: wmiOperatingSystem.setLastUpdated('200801142359Z')
if mibBuilder.loadTexts: wmiOperatingSystem.setOrganization('Informant Systems, Inc.')
wmiDesktop = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1))
if mibBuilder.loadTexts: wmiDesktop.setStatus('current')
win32DesktopTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1), )
if mibBuilder.loadTexts: win32DesktopTable.setStatus('current')
win32DesktopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "osdtIndex"))
if mibBuilder.loadTexts: win32DesktopEntry.setStatus('current')
osdtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtIndex.setStatus('current')
osdtBorderWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtBorderWidth.setStatus('current')
osdtCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtCaption.setStatus('current')
osdtCoolSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtCoolSwitch.setStatus('current')
osdtCursorBlinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 5), Gauge32()).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtCursorBlinkRate.setStatus('current')
osdtDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtDescription.setStatus('current')
osdtDragFullWindows = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtDragFullWindows.setStatus('current')
osdtGridGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 8), Gauge32()).setUnits('8 Pixels').setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtGridGranularity.setStatus('current')
osdtIconSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 9), Gauge32()).setUnits('Pixels').setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtIconSpacing.setStatus('current')
osdtIconTitleFaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtIconTitleFaceName.setStatus('current')
osdtIconTitleSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 11), Gauge32()).setUnits('Point').setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtIconTitleSize.setStatus('current')
osdtIconTitleWrap = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtIconTitleWrap.setStatus('current')
osdtName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtName.setStatus('current')
osdtPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtPattern.setStatus('current')
osdtScreenSaverActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtScreenSaverActive.setStatus('current')
osdtScreenSaverExecutable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtScreenSaverExecutable.setStatus('current')
osdtScreenSaverSecure = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtScreenSaverSecure.setStatus('current')
osdtScreenSaverTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 18), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtScreenSaverTimeout.setStatus('current')
osdtSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtSettingID.setStatus('current')
osdtWallpaper = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtWallpaper.setStatus('current')
osdtWallpaperStretched = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtWallpaperStretched.setStatus('current')
osdtWallpaperTiled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 1, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdtWallpaperTiled.setStatus('current')
win32EnvironmentTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2), )
if mibBuilder.loadTexts: win32EnvironmentTable.setStatus('current')
win32EnvironmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "osevIndex"))
if mibBuilder.loadTexts: win32EnvironmentEntry.setStatus('current')
osevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osevIndex.setStatus('current')
osevCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osevCaption.setStatus('current')
osevDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osevDescription.setStatus('current')
osevInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osevInstallDate.setStatus('current')
osevName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osevName.setStatus('current')
osevStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osevStatus.setStatus('current')
osevSystemVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osevSystemVariable.setStatus('current')
osevUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1, 8), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 260))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osevUserName.setStatus('current')
osevVariableValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 2, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osevVariableValue.setStatus('current')
win32TimeZoneTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3), )
if mibBuilder.loadTexts: win32TimeZoneTable.setStatus('current')
win32TimeZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1), ).setIndexNames((0, "INFORMANT-OS", "ostzIndex"))
if mibBuilder.loadTexts: win32TimeZoneEntry.setStatus('current')
ostzIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzIndex.setStatus('current')
ostzBias = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 2), Integer32()).setUnits('Minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzBias.setStatus('current')
ostzCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzCaption.setStatus('current')
ostzDaylightBias = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 4), Integer32()).setUnits('Minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightBias.setStatus('current')
ostzDaylightDay = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightDay.setStatus('current')
ostzDaylightDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightDayOfWeek.setStatus('current')
ostzDaylightHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightHour.setStatus('current')
ostzDaylightMillisecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightMillisecond.setStatus('current')
ostzDaylightMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightMinute.setStatus('current')
ostzDaylightMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightMonth.setStatus('current')
ostzDaylightName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 11), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightName.setStatus('current')
ostzDaylightSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightSecond.setStatus('current')
ostzDaylightYear = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDaylightYear.setStatus('current')
ostzDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzDescription.setStatus('current')
ostzSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzSettingID.setStatus('current')
ostzStandardBias = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 16), Gauge32()).setUnits('Minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardBias.setStatus('current')
ostzStandardDay = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardDay.setStatus('current')
ostzStandardDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardDayOfWeek.setStatus('current')
ostzStandardHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardHour.setStatus('current')
ostzStandardMillisecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardMillisecond.setStatus('current')
ostzStandardMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardMinute.setStatus('current')
ostzStandardMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardMonth.setStatus('current')
ostzStandardName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 23), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardName.setStatus('current')
ostzStandardSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardSecond.setStatus('current')
ostzStandardYear = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 1, 3, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostzStandardYear.setStatus('current')
wmiDrivers = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2))
if mibBuilder.loadTexts: wmiDrivers.setStatus('current')
win32DriverVXDTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1), )
if mibBuilder.loadTexts: win32DriverVXDTable.setStatus('current')
win32DriverVXDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "osvxdIndex"))
if mibBuilder.loadTexts: win32DriverVXDEntry.setStatus('current')
osvxdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdIndex.setStatus('current')
osvxdBuildNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdBuildNumber.setStatus('current')
osvxdCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdCaption.setStatus('current')
osvxdCodeSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdCodeSet.setStatus('current')
osvxdControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdControl.setStatus('current')
osvxdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdDescription.setStatus('current')
osvxdDeviceDescriptorBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdDeviceDescriptorBlock.setStatus('current')
osvxdIdentificationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdIdentificationCode.setStatus('current')
osvxdInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdInstallDate.setStatus('current')
osvxdLanguageEdition = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdLanguageEdition.setStatus('current')
osvxdManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdManufacturer.setStatus('current')
osvxdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdName.setStatus('current')
osvxdOtherTargetOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdOtherTargetOS.setStatus('current')
osvxdPMAPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdPMAPI.setStatus('current')
osvxdSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdSerialNumber.setStatus('current')
osvxdServiceTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdServiceTableSize.setStatus('current')
osvxdSoftwareElementID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 17), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdSoftwareElementID.setStatus('current')
osvxdSoftwareElementState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deployable", 1), ("installable", 2), ("executable", 3), ("running", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdSoftwareElementState.setStatus('current')
osvxdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdStatus.setStatus('current')
osvxdTargetOperatingSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("macos", 2), ("attunix", 3), ("dgux", 4), ("decnt", 5), ("digitalUnix", 6), ("openVMS", 7), ("hpux", 8), ("aix", 9), ("mvs", 10), ("os400", 11), ("os2", 12), ("javaVM", 13), ("msdos", 14), ("win3x", 15), ("win95", 16), ("win98", 17), ("winnt", 18), ("wince", 19), ("ncr3000", 20), ("netWare", 21), ("osf", 22), ("dcOS", 23), ("reliantUNIX", 24), ("scoUnixWare", 25), ("scoOpenServer", 26), ("sequent", 27), ("irix", 28), ("solaris", 29), ("sunOS", 30), ("u6000", 31), ("aseries", 32), ("tandemNSK", 33), ("tandemNT", 34), ("bs2000", 35), ("linux", 36), ("lynx", 37), ("xenix", 38), ("vmESA", 39), ("interactiveUNIX", 40), ("bsdunix", 41), ("freeBSD", 42), ("netBSD", 43), ("gnuHurd", 44), ("os9", 45), ("machKernel", 46), ("inferno", 47), ("qnx", 48), ("epoc", 49), ("ixWorks", 50), ("vxWorks", 51), ("miNT", 52), ("beOS", 53), ("hpMPE", 54), ("nextStep", 55), ("palmPilot", 56), ("rhapsody", 57), ("windows2000", 58), ("dedicated", 59), ("vse", 60), ("tpf", 61)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdTargetOperatingSystem.setStatus('current')
osvxdV86API = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdV86API.setStatus('current')
osvxdVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 1, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvxdVersion.setStatus('current')
win32SystemDriverTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2), )
if mibBuilder.loadTexts: win32SystemDriverTable.setStatus('current')
win32SystemDriverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "ossdIndex"))
if mibBuilder.loadTexts: win32SystemDriverEntry.setStatus('current')
ossdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdIndex.setStatus('current')
ossdAcceptPause = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdAcceptPause.setStatus('current')
ossdAcceptStop = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdAcceptStop.setStatus('current')
ossdCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdCaption.setStatus('current')
ossdCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 5), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdCreationClassName.setStatus('current')
ossdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdDescription.setStatus('current')
ossdDesktopInteract = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdDesktopInteract.setStatus('current')
ossdDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdDisplayName.setStatus('current')
ossdErrorControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdErrorControl.setStatus('current')
ossdExitCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdExitCode.setStatus('current')
ossdInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdInstallDate.setStatus('current')
ossdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdName.setStatus('current')
ossdPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdPathName.setStatus('current')
ossdServiceSpecificExitCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdServiceSpecificExitCode.setStatus('current')
ossdServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("kernalDriver", 1), ("fileSystemDriver", 2), ("adapter", 3), ("recognizerDriver", 4), ("ownProcess", 5), ("shareProcess", 6), ("interactiveProcess", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdServiceType.setStatus('current')
ossdStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdStarted.setStatus('current')
ossdStartMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdStartMode.setStatus('current')
ossdStartName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdStartName.setStatus('current')
ossdState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("stopped", 1), ("startPending", 2), ("stopPending", 3), ("running", 4), ("continuePending", 5), ("pausePending", 6), ("paused", 7), ("unknown", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdState.setStatus('current')
ossdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdStatus.setStatus('current')
ossdSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdSystemCreationClassName.setStatus('current')
ossdSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdSystemName.setStatus('current')
ossdTagId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 2, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossdTagId.setStatus('current')
wmiFileSystem = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3))
if mibBuilder.loadTexts: wmiFileSystem.setStatus('current')
win32DiskPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1), )
if mibBuilder.loadTexts: win32DiskPartitionTable.setStatus('current')
win32DiskPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "osdpIndex"))
if mibBuilder.loadTexts: win32DiskPartitionEntry.setStatus('current')
osdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpIndex.setStatus('current')
osdpAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("readable", 1), ("writable", 2), ("readwriteSupported", 3), ("writeOnce", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpAccess.setStatus('current')
osdpAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpAvailability.setStatus('current')
osdpBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpBlockSize.setStatus('current')
osdpBootable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpBootable.setStatus('current')
osdpBootPartition = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpBootPartition.setStatus('current')
osdpCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpCaption.setStatus('current')
osdpConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpConfigManagerErrorCode.setStatus('current')
osdpConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpConfigManagerUserConfig.setStatus('current')
osdpCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpCreationClassName.setStatus('current')
osdpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpDescription.setStatus('current')
osdpDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpDeviceID.setStatus('current')
osdpDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpDiskIndex.setStatus('current')
osdpErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpErrorCleared.setStatus('current')
osdpErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpErrorDescription.setStatus('current')
osdpErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpErrorMethodology.setStatus('current')
osdpHiddenSectors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpHiddenSectors.setStatus('current')
osdpPartitionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpPartitionIndex.setStatus('current')
osdpInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpInstallDate.setStatus('current')
osdpLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpLastErrorCode.setStatus('current')
osdpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpName.setStatus('current')
osdpNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpNumberOfBlocks.setStatus('current')
osdpPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpPNPDeviceID.setStatus('current')
osdpPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpPowerManagementCapabilities.setStatus('current')
osdpPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpPowerManagementSupported.setStatus('current')
osdpPrimaryPartition = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpPrimaryPartition.setStatus('current')
osdpPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpPurpose.setStatus('current')
osdpRewritePartition = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpRewritePartition.setStatus('current')
osdpSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 29), WtcsDisplayString()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpSize.setStatus('current')
osdpStartingOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 30), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpStartingOffset.setStatus('current')
osdpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpStatus.setStatus('current')
osdpStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpStatusInfo.setStatus('current')
osdpSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 33), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpSystemCreationClassName.setStatus('current')
osdpSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpSystemName.setStatus('current')
osdpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 1, 1, 35), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdpType.setStatus('current')
win32LogicalDiskTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2), )
if mibBuilder.loadTexts: win32LogicalDiskTable.setStatus('current')
win32LogicalDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "osldIndex"))
if mibBuilder.loadTexts: win32LogicalDiskEntry.setStatus('current')
osldIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldIndex.setStatus('current')
osldAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("readable", 1), ("writable", 2), ("readWriteSupported", 3), ("writeOnce", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldAccess.setStatus('current')
osldAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17), ("paused", 18), ("notReady", 19), ("notConfigured", 20), ("quiesced", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldAvailability.setStatus('current')
osldBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldBlockSize.setStatus('current')
osldCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldCaption.setStatus('current')
osldCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldCompressed.setStatus('current')
osldConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldConfigManagerErrorCode.setStatus('current')
osldConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldConfigManagerUserConfig.setStatus('current')
osldCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldCreationClassName.setStatus('current')
osldDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldDescription.setStatus('current')
osldDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldDeviceID.setStatus('current')
osldDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("noRootDirectory", 1), ("removableDisk", 2), ("localDisk", 3), ("networkDrive", 4), ("compactDisc", 5), ("ramDisk", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldDriveType.setStatus('current')
osldErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldErrorCleared.setStatus('current')
osldErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldErrorDescription.setStatus('current')
osldErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldErrorMethodology.setStatus('current')
osldFileSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldFileSystem.setStatus('current')
osldFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldFreeSpace.setStatus('current')
osldInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldInstallDate.setStatus('current')
osldLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldLastErrorCode.setStatus('current')
osldMaximumComponentLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldMaximumComponentLength.setStatus('current')
osldMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 21), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldMediaType.setStatus('current')
osldName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldName.setStatus('current')
osldNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldNumberOfBlocks.setStatus('current')
osldPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldPNPDeviceID.setStatus('current')
osldPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldPowerManagementCapabilities.setStatus('current')
osldPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldPowerManagementSupported.setStatus('current')
osldProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldProviderName.setStatus('current')
osldPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldPurpose.setStatus('current')
osldQuotasDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 29), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldQuotasDisabled.setStatus('current')
osldQuotasIncomplete = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldQuotasIncomplete.setStatus('current')
osldQuotasRebuilding = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldQuotasRebuilding.setStatus('current')
osldSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldSize.setStatus('current')
osldStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldStatus.setStatus('current')
osldStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldStatusInfo.setStatus('current')
osldSupportsDiskQuotas = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 35), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldSupportsDiskQuotas.setStatus('current')
osldSupportsFileBasedCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldSupportsFileBasedCompression.setStatus('current')
osldSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 37), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldSystemCreationClassName.setStatus('current')
osldSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 38), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldSystemName.setStatus('current')
osldVolumeDirty = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 39), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldVolumeDirty.setStatus('current')
osldVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 40), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldVolumeName.setStatus('current')
osldVolumeSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 2, 1, 41), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osldVolumeSerialNumber.setStatus('current')
win32MappedLogicalDiskTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3), )
if mibBuilder.loadTexts: win32MappedLogicalDiskTable.setStatus('current')
win32MappedLogicalDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1), ).setIndexNames((0, "INFORMANT-OS", "osmldIndex"))
if mibBuilder.loadTexts: win32MappedLogicalDiskEntry.setStatus('current')
osmldIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldIndex.setStatus('current')
osmldAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("readable", 1), ("writeable", 2), ("readWriteSupported", 3), ("writeOnce", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldAccess.setStatus('current')
osmldAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("runningFullPower", 3), ("warning", 4), ("inTest", 5), ("notApplicable", 6), ("powerOff", 7), ("offLine", 8), ("offDuty", 9), ("degraded", 10), ("notInstalled", 11), ("installError", 12), ("powerSaveUnknown", 13), ("powerSaveLowPowerMode", 14), ("powerSaveStandby", 15), ("powerCycle", 16), ("powerSaveWarning", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldAvailability.setStatus('current')
osmldBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 4), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldBlockSize.setStatus('current')
osmldCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldCaption.setStatus('current')
osmldCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldCompressed.setStatus('current')
osmldConfigManagerErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("workingProperly", 0), ("notConfigured", 1), ("cannotLoad", 2), ("lowResource", 3), ("driverCorrupted", 4), ("needResource", 5), ("bootConflicts", 6), ("cannotFilter", 7), ("driverLoaderMissing", 8), ("resourceIncorrect", 9), ("cannotStart", 10), ("deviceFailed", 11), ("noFreeResources", 12), ("cannotVerifyResources", 13), ("restartComputer", 14), ("reenumerationProblem", 15), ("cannotIdentify", 16), ("unknownResourceType", 17), ("reinstallDrivers", 18), ("failedVXDloader", 19), ("registryCorrupted", 20), ("systemFailure", 21), ("deviceDisabled", 22), ("systemFailuer2", 23), ("deviceProblem", 24), ("settingUpDevice", 25), ("settingUpDevice2", 26), ("invalidLogConfiguration", 27), ("driversNotInstalled", 28), ("missingResources", 29), ("conflictIRQ", 30), ("cannotLoadDrivers", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldConfigManagerErrorCode.setStatus('current')
osmldConfigManagerUserConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldConfigManagerUserConfig.setStatus('current')
osmldCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 9), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldCreationClassName.setStatus('current')
osmldDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldDescription.setStatus('current')
osmldDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldDeviceID.setStatus('current')
osmldErrorCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldErrorCleared.setStatus('current')
osmldErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldErrorDescription.setStatus('current')
osmldErrorMethodology = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldErrorMethodology.setStatus('current')
osmldFileSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldFileSystem.setStatus('current')
osmldFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 16), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldFreeSpace.setStatus('current')
osmldInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldInstallDate.setStatus('current')
osmldLastErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldLastErrorCode.setStatus('current')
osmldMaximumComponentLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldMaximumComponentLength.setStatus('current')
osmldName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldName.setStatus('current')
osmldNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldNumberOfBlocks.setStatus('current')
osmldPNPDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldPNPDeviceID.setStatus('current')
osmldPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("notSupported", 1), ("disabled", 2), ("enabled", 3), ("powerSavingModesEnterAutomatic", 4), ("powerStateSettable", 5), ("powerCyclingSupported", 6), ("timedPowerOnSupported", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldPowerManagementCapabilities.setStatus('current')
osmldPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldPowerManagementSupported.setStatus('current')
osmldProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldProviderName.setStatus('current')
osmldPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldPurpose.setStatus('current')
osmldQuotasDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldQuotasDisabled.setStatus('current')
osmldQuotasIncomplete = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldQuotasIncomplete.setStatus('current')
osmldQuotasRebuilding = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 29), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldQuotasRebuilding.setStatus('current')
osmldSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldSessionID.setStatus('current')
osmldSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 31), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldSize.setStatus('current')
osmldStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldStatus.setStatus('current')
osmldStatusInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("enabled", 3), ("disabled", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldStatusInfo.setStatus('current')
osmldSupportsDiskQuotas = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 34), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldSupportsDiskQuotas.setStatus('current')
osmldSupportFileBasedCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 35), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldSupportFileBasedCompression.setStatus('current')
osmldSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 36), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldSystemCreationClassName.setStatus('current')
osmldSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 37), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldSystemName.setStatus('current')
osmldVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 38), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldVolumeName.setStatus('current')
osmldVolumeSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 3, 1, 39), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osmldVolumeSerialNumber.setStatus('current')
win32QuotaSettingTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4), )
if mibBuilder.loadTexts: win32QuotaSettingTable.setStatus('current')
win32QuotaSettingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1), ).setIndexNames((0, "INFORMANT-OS", "osqsIndex"))
if mibBuilder.loadTexts: win32QuotaSettingEntry.setStatus('current')
osqsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsIndex.setStatus('current')
osqsCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsCaption.setStatus('current')
osqsDefaultLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 3), WtcsDisplayString()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsDefaultLimit.setStatus('current')
osqsDefaultWarningLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 4), WtcsDisplayString()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsDefaultWarningLimit.setStatus('current')
osqsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsDescription.setStatus('current')
osqsExceededNotification = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsExceededNotification.setStatus('current')
osqsSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsSettingID.setStatus('current')
osqsState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("tracked", 1), ("enforced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsState.setStatus('current')
osqsVolumePath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsVolumePath.setStatus('current')
osqsWarningExceededNotification = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 4, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqsWarningExceededNotification.setStatus('current')
win32VolumeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5), )
if mibBuilder.loadTexts: win32VolumeTable.setStatus('current')
win32VolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1), ).setIndexNames((0, "INFORMANT-OS", "osvlIndex"))
if mibBuilder.loadTexts: win32VolumeEntry.setStatus('current')
osvlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlIndex.setStatus('current')
osvlAutomount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlAutomount.setStatus('current')
osvlCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlCapacity.setStatus('current')
osvlCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlCompressed.setStatus('current')
osvlDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlDeviceId.setStatus('current')
osvlDirtyBitSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlDirtyBitSet.setStatus('current')
osvlDriveLetter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlDriveLetter.setStatus('current')
osvlDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("noRootDirectory", 1), ("removableDisk", 2), ("localDisk", 3), ("networkDrive", 4), ("compactDisk", 5), ("ramDisk", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlDriveType.setStatus('current')
osvlFileSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlFileSystem.setStatus('current')
osvlFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlFreeSpace.setStatus('current')
osvlIndexingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlIndexingEnabled.setStatus('current')
osvlLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlLabel.setStatus('current')
osvlMaximumFileNameLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlMaximumFileNameLength.setStatus('current')
osvlQuotasEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlQuotasEnabled.setStatus('current')
osvlQuotasIncomplete = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlQuotasIncomplete.setStatus('current')
osvlQuotasRebuilding = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlQuotasRebuilding.setStatus('current')
osvlSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlSerialNumber.setStatus('current')
osvlSupportsDiskQuotas = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlSupportsDiskQuotas.setStatus('current')
osvlSupportsFileBasedCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 3, 5, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osvlSupportsFileBasedCompression.setStatus('current')
wmiJobObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4))
if mibBuilder.loadTexts: wmiJobObjects.setStatus('current')
win32NamedJobObjectTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 1), )
if mibBuilder.loadTexts: win32NamedJobObjectTable.setStatus('current')
win32NamedJobObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "osnjoIndex"))
if mibBuilder.loadTexts: win32NamedJobObjectEntry.setStatus('current')
osnjoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnjoIndex.setStatus('current')
osnjoBasicUIRestrictions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("desktop", 1), ("displaySettings", 2), ("exitWindows", 4), ("globalAtoms", 8), ("handles", 16), ("readClipboard", 32), ("systemParameters", 64), ("writeClipboard", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnjoBasicUIRestrictions.setStatus('current')
osnjoCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 1, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnjoCaption.setStatus('current')
osnjoCollectionID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 1, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnjoCollectionID.setStatus('current')
osnjoDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 1, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnjoDescription.setStatus('current')
win32NamedJobObjectActgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2), )
if mibBuilder.loadTexts: win32NamedJobObjectActgInfoTable.setStatus('current')
win32NamedJobObjectActgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "osjoaIndex"))
if mibBuilder.loadTexts: win32NamedJobObjectActgInfoEntry.setStatus('current')
osjoaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaIndex.setStatus('current')
osjoaActiveProcesses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaActiveProcesses.setStatus('current')
osjoaCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaCaption.setStatus('current')
osjoaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaDescription.setStatus('current')
osjoaName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 5), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaName.setStatus('current')
osjoaOtherOperationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaOtherOperationCount.setStatus('current')
osjoaOtherTransferCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaOtherTransferCount.setStatus('current')
osjoaPeakJobMemoryUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 8), Gauge32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaPeakJobMemoryUsed.setStatus('current')
osjoaPeakProcessMemoryUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 9), Gauge32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaPeakProcessMemoryUsed.setStatus('current')
osjoaReadOperationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaReadOperationCount.setStatus('current')
osjoaReadTransferCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaReadTransferCount.setStatus('current')
osjoaThisPeriodTotalKernelTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 12), WtcsDisplayString()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaThisPeriodTotalKernelTime.setStatus('current')
osjoaThisPeriodTotalUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 13), WtcsDisplayString()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaThisPeriodTotalUserTime.setStatus('current')
osjoaTotalKernelTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 14), WtcsDisplayString()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaTotalKernelTime.setStatus('current')
osjoaTotalPageFaultCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaTotalPageFaultCount.setStatus('current')
osjoaTotalProcesses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaTotalProcesses.setStatus('current')
osjoaTotalTerminatedProcesses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaTotalTerminatedProcesses.setStatus('current')
osjoaTotalUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 18), WtcsDisplayString()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaTotalUserTime.setStatus('current')
osjoaWriteOperationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaWriteOperationCount.setStatus('current')
osjoaWriteTransferCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 2, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjoaWriteTransferCount.setStatus('current')
win32NamedJobObjectLimitSetTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3), )
if mibBuilder.loadTexts: win32NamedJobObjectLimitSetTable.setStatus('current')
win32NamedJobObjectLimitSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1), ).setIndexNames((0, "INFORMANT-OS", "osjolIndex"))
if mibBuilder.loadTexts: win32NamedJobObjectLimitSetEntry.setStatus('current')
osjolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolIndex.setStatus('current')
osjolActiveProcessLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolActiveProcessLimit.setStatus('current')
osjolAffinity = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolAffinity.setStatus('current')
osjolCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolCaption.setStatus('current')
osjolDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolDescription.setStatus('current')
osjolJobMemoryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolJobMemoryLimit.setStatus('current')
osjolLimitFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("limitWorkingSet", 1), ("limitProcessTime", 2), ("limitJobTime", 4), ("activeProcessLimit", 8), ("limitAffinity", 16), ("limitPriorityClass", 32), ("limitPreserveJobTime", 64), ("limitSchedulingClass", 128), ("limitProcessMemory", 256), ("limitJobMemory", 512), ("limitDieOnUnhandledException", 1024), ("limitBreakawayOK", 2048), ("silentBreakawayOK", 4096)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolLimitFlags.setStatus('current')
osjolMaximumWorkingSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolMaximumWorkingSetSize.setStatus('current')
osjolMinimumWorkingSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolMinimumWorkingSetSize.setStatus('current')
osjolPerJobUserTimeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 10), WtcsDisplayString()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolPerJobUserTimeLimit.setStatus('current')
osjolPerProcessUserTimeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 11), WtcsDisplayString()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolPerProcessUserTimeLimit.setStatus('current')
osjolPriorityClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolPriorityClass.setStatus('current')
osjolProcessMemoryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolProcessMemoryLimit.setStatus('current')
osjolSchedulingClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolSchedulingClass.setStatus('current')
osjolSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 4, 3, 1, 15), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osjolSettingID.setStatus('current')
wmiPageFiles = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5))
if mibBuilder.loadTexts: wmiPageFiles.setStatus('current')
win32PageFileTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1), )
if mibBuilder.loadTexts: win32PageFileTable.setStatus('current')
win32PageFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "ospfIndex"))
if mibBuilder.loadTexts: win32PageFileEntry.setStatus('current')
ospfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfIndex.setStatus('current')
ospfAccessMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfAccessMask.setStatus('current')
ospfArchive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfArchive.setStatus('current')
ospfCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfCaption.setStatus('current')
ospfCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfCompressed.setStatus('current')
ospfCompressionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfCompressionMethod.setStatus('current')
ospfCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfCreationClassName.setStatus('current')
ospfCreationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfCreationDate.setStatus('current')
ospfCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfCSCreationClassName.setStatus('current')
ospfCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfCSName.setStatus('current')
ospfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfDescription.setStatus('current')
ospfDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfDrive.setStatus('current')
ospfEightDotThreeFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfEightDotThreeFileName.setStatus('current')
ospfEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfEncrypted.setStatus('current')
ospfEncryptionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfEncryptionMethod.setStatus('current')
ospfExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfExtension.setStatus('current')
ospfFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfFileName.setStatus('current')
ospfFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfFileSize.setStatus('current')
ospfFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfFileType.setStatus('current')
ospfFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 20), Gauge32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfFreeSpace.setStatus('current')
ospfFSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfFSCreationClassName.setStatus('current')
ospfFSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 22), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfFSName.setStatus('current')
ospfHidden = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfHidden.setStatus('current')
ospfInitialSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 24), Gauge32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfInitialSize.setStatus('current')
ospfInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfInstallDate.setStatus('current')
ospfInUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfInUseCount.setStatus('current')
ospfLastAccessed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 27), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLastAccessed.setStatus('current')
ospfLastModified = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 28), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLastModified.setStatus('current')
ospfManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfManufacturer.setStatus('current')
ospfMaximumSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 30), Gauge32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfMaximumSize.setStatus('current')
ospfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfName.setStatus('current')
ospfPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfPath.setStatus('current')
ospfReadable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfReadable.setStatus('current')
ospfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatus.setStatus('current')
ospfSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 35), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfSystem.setStatus('current')
ospfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 36), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVersion.setStatus('current')
ospfWriteable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 1, 1, 37), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfWriteable.setStatus('current')
win32PageFileSettingTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 2), )
if mibBuilder.loadTexts: win32PageFileSettingTable.setStatus('current')
win32PageFileSettingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "ospfsIndex"))
if mibBuilder.loadTexts: win32PageFileSettingEntry.setStatus('current')
ospfsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfsIndex.setStatus('current')
ospfsCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 2, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfsCaption.setStatus('current')
ospfsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfsDescription.setStatus('current')
ospfsInitialSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 2, 1, 4), Gauge32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfsInitialSize.setStatus('current')
ospfsMaximumSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 2, 1, 5), Gauge32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfsMaximumSize.setStatus('current')
ospfsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 2, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfsName.setStatus('current')
ospfsSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 2, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfsSettingID.setStatus('current')
win32PageFileUsageTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3), )
if mibBuilder.loadTexts: win32PageFileUsageTable.setStatus('current')
win32PageFileUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1), ).setIndexNames((0, "INFORMANT-OS", "ospfuIndex"))
if mibBuilder.loadTexts: win32PageFileUsageEntry.setStatus('current')
ospfuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuIndex.setStatus('current')
ospfuAllocatedBaseSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 2), Gauge32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuAllocatedBaseSize.setStatus('current')
ospfuCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuCaption.setStatus('current')
ospfuCurrentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 4), Gauge32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuCurrentUsage.setStatus('current')
ospfuDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuDescription.setStatus('current')
ospfuInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuInstallDate.setStatus('current')
ospfuName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuName.setStatus('current')
ospfuPeakUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 8), Gauge32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuPeakUsage.setStatus('current')
ospfuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuStatus.setStatus('current')
ospfuTempPageFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 5, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfuTempPageFile.setStatus('current')
wmiMultimedia = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6))
if mibBuilder.loadTexts: wmiMultimedia.setStatus('current')
win32CodecFileTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1), )
if mibBuilder.loadTexts: win32CodecFileTable.setStatus('current')
win32CodecFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "oscfIndex"))
if mibBuilder.loadTexts: win32CodecFileEntry.setStatus('current')
oscfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfIndex.setStatus('current')
oscfAccessMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("fileLISTDIRECTORY", 0), ("fileADDFILE", 1), ("fileADDSUBDIRECTORY", 2), ("fileREADEA", 3), ("fileWRITEEA", 4), ("fileTRAVERSE", 5), ("fileDELETECHILD", 6), ("fileREADATTRIBUTES", 7), ("fileWRITEATTRIBUTES", 8), ("delete", 16), ("readCONTROL", 17), ("writeDAC", 18), ("writeOWNER", 19), ("synchronize", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfAccessMask.setStatus('current')
oscfArchive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfArchive.setStatus('current')
oscfCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfCaption.setStatus('current')
oscfCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfCompressed.setStatus('current')
oscfCompressionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfCompressionMethod.setStatus('current')
oscfCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfCreationClassName.setStatus('current')
oscfCreationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfCreationDate.setStatus('current')
oscfCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfCSCreationClassName.setStatus('current')
oscfCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfCSName.setStatus('current')
oscfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfDescription.setStatus('current')
oscfDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfDrive.setStatus('current')
oscfEightDotThreeFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfEightDotThreeFileName.setStatus('current')
oscfEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfEncrypted.setStatus('current')
oscfEncryptionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfEncryptionMethod.setStatus('current')
oscfExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfExtension.setStatus('current')
oscfFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfFileName.setStatus('current')
oscfFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfFileSize.setStatus('current')
oscfFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfFileType.setStatus('current')
oscfFSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfFSCreationClassName.setStatus('current')
oscfFSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfFSName.setStatus('current')
oscfGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("audio", 1), ("video", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfGroup.setStatus('current')
oscfHidden = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfHidden.setStatus('current')
oscfInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfInstallDate.setStatus('current')
oscfInUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfInUseCount.setStatus('current')
oscfLastAccessed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 26), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfLastAccessed.setStatus('current')
oscfLastModified = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 27), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfLastModified.setStatus('current')
oscfManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfManufacturer.setStatus('current')
oscfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfName.setStatus('current')
oscfPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfPath.setStatus('current')
oscfReadable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfReadable.setStatus('current')
oscfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfStatus.setStatus('current')
oscfSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfSystem.setStatus('current')
oscfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfVersion.setStatus('current')
oscfWriteable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 6, 1, 1, 35), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscfWriteable.setStatus('current')
wmiNetworking = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7))
if mibBuilder.loadTexts: wmiNetworking.setStatus('current')
win32IP4PersistedRouteTableTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1), )
if mibBuilder.loadTexts: win32IP4PersistedRouteTableTable.setStatus('current')
win32IP4PersistedRouteTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "osprtIndex"))
if mibBuilder.loadTexts: win32IP4PersistedRouteTableEntry.setStatus('current')
osprtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtIndex.setStatus('current')
osprtCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtCaption.setStatus('current')
osprtDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtDescription.setStatus('current')
osprtDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtDestination.setStatus('current')
osprtInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtInstallDate.setStatus('current')
osprtMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtMask.setStatus('current')
osprtMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtMetric1.setStatus('current')
osprtName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtName.setStatus('current')
osprtNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtNextHop.setStatus('current')
osprtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osprtStatus.setStatus('current')
win32IP4RouteTableTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2), )
if mibBuilder.loadTexts: win32IP4RouteTableTable.setStatus('current')
win32IP4RouteTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "osrtIndex"))
if mibBuilder.loadTexts: win32IP4RouteTableEntry.setStatus('current')
osrtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtIndex.setStatus('current')
osrtAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtAge.setStatus('current')
osrtCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtCaption.setStatus('current')
osrtDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtDescription.setStatus('current')
osrtDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtDestination.setStatus('current')
osrtInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtInformation.setStatus('current')
osrtInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtInstallDate.setStatus('current')
osrtInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtInterfaceIndex.setStatus('current')
osrtMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtMask.setStatus('current')
osrtMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtMetric1.setStatus('current')
osrtMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtMetric2.setStatus('current')
osrtMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtMetric3.setStatus('current')
osrtMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtMetric4.setStatus('current')
osrtMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtMetric5.setStatus('current')
osrtName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtName.setStatus('current')
osrtNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtNextHop.setStatus('current')
osrtProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("isis", 9), ("esis", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtProtocol.setStatus('current')
osrtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtStatus.setStatus('current')
osrtType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("indirect", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrtType.setStatus('current')
win32NetworkClientTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 3), )
if mibBuilder.loadTexts: win32NetworkClientTable.setStatus('current')
win32NetworkClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 3, 1), ).setIndexNames((0, "INFORMANT-OS", "osnclIndex"))
if mibBuilder.loadTexts: win32NetworkClientEntry.setStatus('current')
osnclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnclIndex.setStatus('current')
osnclCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 3, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnclCaption.setStatus('current')
osnclDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 3, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnclDescription.setStatus('current')
osnclInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 3, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnclInstallDate.setStatus('current')
osnclManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 3, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnclManufacturer.setStatus('current')
osnclName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 3, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnclName.setStatus('current')
osnclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnclStatus.setStatus('current')
win32NetworkConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4), )
if mibBuilder.loadTexts: win32NetworkConnectionTable.setStatus('current')
win32NetworkConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1), ).setIndexNames((0, "INFORMANT-OS", "osncoIndex"))
if mibBuilder.loadTexts: win32NetworkConnectionEntry.setStatus('current')
osncoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoIndex.setStatus('current')
osncoAccessMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoAccessMask.setStatus('current')
osncoCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoCaption.setStatus('current')
osncoComment = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoComment.setStatus('current')
osncoConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("connected", 1), ("error", 2), ("paused", 3), ("disconnected", 4), ("connecting", 5), ("reconnecting", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoConnectionState.setStatus('current')
osncoConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("currentConnection", 1), ("persistentConnection", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoConnectionType.setStatus('current')
osncoDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoDescription.setStatus('current')
osncoDisplayType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("domain", 1), ("generic", 2), ("server", 3), ("share", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoDisplayType.setStatus('current')
osncoInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoInstallDate.setStatus('current')
osncoLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoLocalName.setStatus('current')
osncoName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoName.setStatus('current')
osncoPersistent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoPersistent.setStatus('current')
osncoProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoProviderName.setStatus('current')
osncoRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoRemoteName.setStatus('current')
osncoRemotePath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoRemotePath.setStatus('current')
osncoResourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disk", 1), ("print", 2), ("any", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoResourceType.setStatus('current')
osncoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoStatus.setStatus('current')
osncoUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 4, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osncoUserName.setStatus('current')
win32NetworkProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5), )
if mibBuilder.loadTexts: win32NetworkProtocolTable.setStatus('current')
win32NetworkProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1), ).setIndexNames((0, "INFORMANT-OS", "osnpIndex"))
if mibBuilder.loadTexts: win32NetworkProtocolEntry.setStatus('current')
osnpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpIndex.setStatus('current')
osnpCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpCaption.setStatus('current')
osnpConnectionlessService = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpConnectionlessService.setStatus('current')
osnpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpDescription.setStatus('current')
osnpGuaranteesDelivery = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpGuaranteesDelivery.setStatus('current')
osnpGuaranteesSequencing = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpGuaranteesSequencing.setStatus('current')
osnpInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpInstallDate.setStatus('current')
osnpMaximumAddressSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 8), Gauge32()).setUnits('Characters').setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpMaximumAddressSize.setStatus('current')
osnpMaximumMessageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 9), Gauge32()).setUnits('Characters').setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpMaximumMessageSize.setStatus('current')
osnpMessageOriented = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpMessageOriented.setStatus('current')
osnpMinimumAddressSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 11), Gauge32()).setUnits('Characters').setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpMinimumAddressSize.setStatus('current')
osnpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpName.setStatus('current')
osnpPseudoStreamOriented = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpPseudoStreamOriented.setStatus('current')
osnpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpStatus.setStatus('current')
osnpSupportsBroadcasting = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsBroadcasting.setStatus('current')
osnpSupportsConnectData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsConnectData.setStatus('current')
osnpSupportsDisconnectData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsDisconnectData.setStatus('current')
osnpSupportsEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsEncryption.setStatus('current')
osnpSupportsExpeditedData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsExpeditedData.setStatus('current')
osnpSupportsFragmentation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsFragmentation.setStatus('current')
osnpSupportsGracefulClosing = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsGracefulClosing.setStatus('current')
osnpSupportsGuaranteedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsGuaranteedBandwidth.setStatus('current')
osnpSupportsMulticasting = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsMulticasting.setStatus('current')
osnpSupportsQualityofService = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 5, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osnpSupportsQualityofService.setStatus('current')
win32NTDomainTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6), )
if mibBuilder.loadTexts: win32NTDomainTable.setStatus('current')
win32NTDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1), ).setIndexNames((0, "INFORMANT-OS", "osdoIndex"))
if mibBuilder.loadTexts: win32NTDomainEntry.setStatus('current')
osdoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoIndex.setStatus('current')
osdoCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoCaption.setStatus('current')
osdoClientSiteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoClientSiteName.setStatus('current')
osdoCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoCreationClassName.setStatus('current')
osdoDcSiteName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDcSiteName.setStatus('current')
osdoDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDescription.setStatus('current')
osdoDNSForestName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDNSForestName.setStatus('current')
osdoDomainControllerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDomainControllerAddress.setStatus('current')
osdoDomainControllerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dnsINETADDRESS", 1), ("dnsNETBIOSADDRESS", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDomainControllerAddressType.setStatus('current')
osdoDomainControllerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDomainControllerName.setStatus('current')
osdoDomainGUID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDomainGUID.setStatus('current')
osdoDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDomainName.setStatus('current')
osdoDSDirectoryServiceFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDSDirectoryServiceFlag.setStatus('current')
osdoDSDnsControllerFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDSDnsControllerFlag.setStatus('current')
osdoDSDnsDomainFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDSDnsDomainFlag.setStatus('current')
osdoDSDnsForestFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDSDnsForestFlag.setStatus('current')
osdoDSGlobalCatalogFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDSGlobalCatalogFlag.setStatus('current')
osdoDSKerberosDistCenterFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDSKerberosDistCenterFlag.setStatus('current')
osdoDSPriDomainControllerFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDSPriDomainControllerFlag.setStatus('current')
osdoDSTimeServiceFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDSTimeServiceFlag.setStatus('current')
osdoDSWritableFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoDSWritableFlag.setStatus('current')
osdoInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 22), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoInstallDate.setStatus('current')
osdoName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoName.setStatus('current')
osdoNameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoNameFormat.setStatus('current')
osdoPrimaryOwnerContact = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoPrimaryOwnerContact.setStatus('current')
osdoPrimaryOwnerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 26), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoPrimaryOwnerName.setStatus('current')
osdoRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoRoles.setStatus('current')
osdoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 7, 6, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdoStatus.setStatus('current')
wmiOperatingSystemSettings = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8))
if mibBuilder.loadTexts: wmiOperatingSystemSettings.setStatus('current')
win32BootConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1), )
if mibBuilder.loadTexts: win32BootConfigurationTable.setStatus('current')
win32BootConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "osbcIndex"))
if mibBuilder.loadTexts: win32BootConfigurationEntry.setStatus('current')
osbcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcIndex.setStatus('current')
osbcBootDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcBootDirectory.setStatus('current')
osbcCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcCaption.setStatus('current')
osbcConfigurationPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcConfigurationPath.setStatus('current')
osbcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcDescription.setStatus('current')
osbcLastDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcLastDrive.setStatus('current')
osbcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 7), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcName.setStatus('current')
osbcScratchDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcScratchDirectory.setStatus('current')
osbcSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 9), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcSettingID.setStatus('current')
osbcTempDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osbcTempDirectory.setStatus('current')
win32ComputerSystemTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2), )
if mibBuilder.loadTexts: win32ComputerSystemTable.setStatus('current')
win32ComputerSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "oscsIndex"))
if mibBuilder.loadTexts: win32ComputerSystemEntry.setStatus('current')
oscsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsIndex.setStatus('current')
oscsAdminPasswordStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("notImplemented", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsAdminPasswordStatus.setStatus('current')
oscsAutomaticResetBootOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsAutomaticResetBootOption.setStatus('current')
oscsAutomaticResetCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsAutomaticResetCapability.setStatus('current')
oscsBootOptionOnLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("reserved", 1), ("operatingSystem", 2), ("systemUtilities", 3), ("doNotReboot", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsBootOptionOnLimit.setStatus('current')
oscsBootOptionOnWatchDog = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("reserved", 1), ("operatingSystem", 2), ("systemUtilities", 3), ("doNotReboot", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsBootOptionOnWatchDog.setStatus('current')
oscsBootROMSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsBootROMSupported.setStatus('current')
oscsBootupState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normalBoot", 1), ("failsafeBoot", 2), ("failsafeWithNetworkBoot", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsBootupState.setStatus('current')
oscsCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsCaption.setStatus('current')
oscsChassisBootupState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("safes", 3), ("warning", 4), ("critical", 5), ("nonrecoverable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsChassisBootupState.setStatus('current')
oscsCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsCreationClassName.setStatus('current')
oscsCurrentTimeZone = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 12), Integer32()).setUnits('Minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsCurrentTimeZone.setStatus('current')
oscsDaylightInEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsDaylightInEffect.setStatus('current')
oscsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsDescription.setStatus('current')
oscsDNSHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsDNSHostName.setStatus('current')
oscsDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsDomain.setStatus('current')
oscsDomainRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("standaloneWorkstation", 0), ("memberWorkstation", 1), ("standaloneServer", 2), ("memberServer", 3), ("backupDomainController", 4), ("primaryDomainController", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsDomainRole.setStatus('current')
oscsEnableDaylightSavingsTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsEnableDaylightSavingsTime.setStatus('current')
oscsFrontPanelResetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("notImplemented", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsFrontPanelResetStatus.setStatus('current')
oscsInfraredSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsInfraredSupported.setStatus('current')
oscsInitialLoadInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsInitialLoadInfo.setStatus('current')
oscsInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 22), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsInstallDate.setStatus('current')
oscsKeyboardPasswordStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("notImplemented", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsKeyboardPasswordStatus.setStatus('current')
oscsLastLoadInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsLastLoadInfo.setStatus('current')
oscsManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 25), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsManufacturer.setStatus('current')
oscsModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 26), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsModel.setStatus('current')
oscsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsName.setStatus('current')
oscsNameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("ip", 2), ("dial", 3), ("hid", 4), ("nwa", 5), ("hwa", 6), ("x25", 7), ("isdn", 8), ("ipx", 9), ("dcc", 10), ("icd", 11), ("e164", 12), ("sna", 13), ("osi", 14), ("other", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsNameFormat.setStatus('current')
oscsNetworkServerModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 29), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsNetworkServerModeEnabled.setStatus('current')
oscsNumberOfProcessors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsNumberOfProcessors.setStatus('current')
oscsOEMLogoBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 31), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsOEMLogoBitmap.setStatus('current')
oscsOEMStringArray = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsOEMStringArray.setStatus('current')
oscsPartOfDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPartOfDomain.setStatus('current')
oscsPauseAfterReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 34), Integer32()).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPauseAfterReset.setStatus('current')
oscsPowerManagementCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 35), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPowerManagementCapabilities.setStatus('current')
oscsPowerManagementSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPowerManagementSupported.setStatus('current')
oscsPowerOnPasswordStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("notImplemented", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPowerOnPasswordStatus.setStatus('current')
oscsPowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("fullPower", 1), ("powerSaveLowPowerMode", 2), ("powerSaveStandby", 3), ("powerSaveUnknown", 4), ("powerCycle", 5), ("powerOff", 6), ("powerSaveWarning", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPowerState.setStatus('current')
oscsPowerSupplyState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("safe", 3), ("warning", 4), ("critical", 5), ("nonrecoverable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPowerSupplyState.setStatus('current')
oscsPrimaryOwnerContact = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 40), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPrimaryOwnerContact.setStatus('current')
oscsPrimaryOwnerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 41), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPrimaryOwnerName.setStatus('current')
oscsResetCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("disabled", 3), ("enabled", 4), ("nonrecoverable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsResetCapability.setStatus('current')
oscsResetCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsResetCount.setStatus('current')
oscsResetLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsResetLimit.setStatus('current')
oscsRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 45), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsRoles.setStatus('current')
oscsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsStatus.setStatus('current')
oscsSupportContactDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 47), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsSupportContactDescription.setStatus('current')
oscsSystemStartupDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsSystemStartupDelay.setStatus('current')
oscsSystemStartupOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 49), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsSystemStartupOptions.setStatus('current')
oscsSystemStartupSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsSystemStartupSetting.setStatus('current')
oscsSystemType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("x86BasedPC", 1), ("mipsBasedPC", 2), ("alphaBasedPC", 3), ("powerPC", 4), ("shxPC", 5), ("strongARMPC", 6), ("n64bitIntelPC", 7), ("n64bitAlphaPC", 8), ("unknown", 9), ("x86Nec98PC", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsSystemType.setStatus('current')
oscsThermalState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("safe", 3), ("warning", 4), ("critical", 5), ("nonrecoverable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsThermalState.setStatus('current')
oscsTotalPhysicalMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 53), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsTotalPhysicalMemory.setStatus('current')
oscsUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 54), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsUserName.setStatus('current')
oscsWakeUpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("reserved", 0), ("other", 1), ("unknown", 2), ("apmTimer", 3), ("modemRing", 4), ("lanRemote", 5), ("powerSwitch", 6), ("pciPME", 7), ("acPowerRestored", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsWakeUpType.setStatus('current')
oscsWorkgroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 56), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsWorkgroup.setStatus('current')
oscsAutomaticManagedPagefile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 57), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsAutomaticManagedPagefile.setStatus('current')
oscsNumberOfLogicalProcessors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsNumberOfLogicalProcessors.setStatus('current')
oscsPCSystemType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 2, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unspecified", 0), ("desktop", 1), ("mobile", 2), ("workstation", 3), ("enterpriseServer", 4), ("sohoServer", 5), ("appliancePC", 6), ("performanceServer", 7), ("maximum", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscsPCSystemType.setStatus('current')
win32ComputerSystemProductTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3), )
if mibBuilder.loadTexts: win32ComputerSystemProductTable.setStatus('current')
win32ComputerSystemProductEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1), ).setIndexNames((0, "INFORMANT-OS", "oscspIndex"))
if mibBuilder.loadTexts: win32ComputerSystemProductEntry.setStatus('current')
oscspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscspIndex.setStatus('current')
oscspCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscspCaption.setStatus('current')
oscspDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscspDescription.setStatus('current')
oscspIdentifyingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscspIdentifyingNumber.setStatus('current')
oscspName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1, 5), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscspName.setStatus('current')
oscspSKUNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscspSKUNumber.setStatus('current')
oscspUUID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscspUUID.setStatus('current')
oscspVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1, 8), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscspVendor.setStatus('current')
oscspVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 3, 1, 9), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscspVersion.setStatus('current')
win32LoadOrderGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4), )
if mibBuilder.loadTexts: win32LoadOrderGroupTable.setStatus('current')
win32LoadOrderGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4, 1), ).setIndexNames((0, "INFORMANT-OS", "oslogIndex"))
if mibBuilder.loadTexts: win32LoadOrderGroupEntry.setStatus('current')
oslogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oslogIndex.setStatus('current')
oslogCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oslogCaption.setStatus('current')
oslogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oslogDescription.setStatus('current')
oslogDriverEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oslogDriverEnabled.setStatus('current')
oslogGroupOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oslogGroupOrder.setStatus('current')
oslogInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oslogInstallDate.setStatus('current')
oslogName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oslogName.setStatus('current')
oslogStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oslogStatus.setStatus('current')
win32OperatingSystemTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5), )
if mibBuilder.loadTexts: win32OperatingSystemTable.setStatus('current')
win32OperatingSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1), ).setIndexNames((0, "INFORMANT-OS", "ososIndex"))
if mibBuilder.loadTexts: win32OperatingSystemEntry.setStatus('current')
ososIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososIndex.setStatus('current')
ososBootDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososBootDevice.setStatus('current')
ososBuildNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososBuildNumber.setStatus('current')
ososBuildType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososBuildType.setStatus('current')
ososCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososCaption.setStatus('current')
ososCodeSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososCodeSet.setStatus('current')
ososCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososCountryCode.setStatus('current')
ososCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 8), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososCreationClassName.setStatus('current')
ososCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososCSCreationClassName.setStatus('current')
ososCSDVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososCSDVersion.setStatus('current')
ososCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososCSName.setStatus('current')
ososCurrentTimeZone = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososCurrentTimeZone.setStatus('current')
ososDataExecPrevention32BitAppl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososDataExecPrevention32BitAppl.setStatus('current')
ososDataExecPreventionAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososDataExecPreventionAvailable.setStatus('current')
ososDataExecPreventionDrivers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososDataExecPreventionDrivers.setStatus('current')
ososDebug = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososDebug.setStatus('current')
ososDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososDescription.setStatus('current')
ososDistributed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososDistributed.setStatus('current')
ososEncryptionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososEncryptionLevel.setStatus('current')
ososForegroundApplicationBoost = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("minimum", 1), ("maximum", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososForegroundApplicationBoost.setStatus('current')
ososFreePhysicalMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososFreePhysicalMemory.setStatus('current')
ososFreeSpaceInPagingFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososFreeSpaceInPagingFiles.setStatus('current')
ososFreeVirtualMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososFreeVirtualMemory.setStatus('current')
ososInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososInstallDate.setStatus('current')
ososLargeSystemCache = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("optimizeMemoryForApplications", 0), ("optimizeMemoryForSystemPerform", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososLargeSystemCache.setStatus('current')
ososLastBootUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 26), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososLastBootUpTime.setStatus('current')
ososLocalDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 27), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososLocalDateTime.setStatus('current')
ososLocale = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososLocale.setStatus('current')
ososManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 29), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososManufacturer.setStatus('current')
ososMaxNumberOfProcesses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososMaxNumberOfProcesses.setStatus('current')
ososMaxProcessMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososMaxProcessMemorySize.setStatus('current')
ososName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 32), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososName.setStatus('current')
ososNumberOfLicensedUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososNumberOfLicensedUsers.setStatus('current')
ososNumberOfProcesses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososNumberOfProcesses.setStatus('current')
ososNumberOfUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososNumberOfUsers.setStatus('current')
ososOrganization = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 36), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososOrganization.setStatus('current')
ososOSLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 9, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1086, 2049, 2052, 2055, 2057, 2058, 2060, 2064, 2067, 2068, 2070, 2072, 2073, 2074, 2077, 3073, 3076, 3079, 3081, 3082, 3084, 3098, 4097, 4100, 4103, 4105, 4106, 4108, 5121, 5127, 5129, 5130, 5132, 6145, 6153, 6154, 7169, 7177, 7178, 8193, 8201, 8202, 9217, 9226, 10241, 10249, 10250, 11265, 11273, 11274, 12289, 12298, 13313, 13322, 14337, 14346, 15361, 15370, 16385, 16394, 17418, 18442, 19466, 20490))).clone(namedValues=NamedValues(("arabic", 1), ("chinese", 4), ("english", 9), ("arabicSaudiArabia", 1025), ("bulgarian", 1026), ("catalan", 1027), ("chineseTaiwan", 1028), ("czech", 1029), ("danish", 1030), ("germanGermany", 1031), ("greek", 1032), ("englishUnitedStates", 1033), ("spanishTraditionalSort", 1034), ("finnish", 1035), ("frenchFrance", 1036), ("hebrew", 1037), ("hungarian", 1038), ("icelandic", 1039), ("italianItaly", 1040), ("japanese", 1041), ("korean", 1042), ("dutchNetherlands", 1043), ("norwegianBokmal", 1044), ("polish", 1045), ("portugueseBrazil", 1046), ("rhaetoRomanic", 1047), ("romanian", 1048), ("russian", 1049), ("croatian", 1050), ("slovak", 1051), ("albanian", 1052), ("swedish", 1053), ("thai", 1054), ("turkish", 1055), ("urdu", 1056), ("indonesian", 1057), ("ukrainian", 1058), ("belarusian", 1059), ("slovenian", 1060), ("estonian", 1061), ("latvian", 1062), ("lithuanian", 1063), ("farsi", 1065), ("vietnamese", 1066), ("basque", 1069), ("serbian", 1070), ("macedonianFYROM", 1071), ("sutu", 1072), ("tsonga", 1073), ("tswana", 1074), ("xhosa", 1076), ("zulu", 1077), ("afrikaans", 1078), ("faeroese", 1080), ("hindi", 1081), ("maltese", 1082), ("gaelic", 1084), ("yiddish", 1085), ("malayMalaysia", 1086), ("arabicIraq", 2049), ("chinesePRC", 2052), ("germanSwitzerland", 2055), ("englishUnitedKingdom", 2057), ("spanishMexico", 2058), ("frenchBelgium", 2060), ("italianSwitzerland", 2064), ("dutchBelgium", 2067), ("norwegianNynorsk", 2068), ("portuguesePortugal", 2070), ("romanianMoldova", 2072), ("russianMoldova", 2073), ("serbianLatin", 2074), ("swedishFinland", 2077), ("arabicEgypt", 3073), ("chineseHongKongSAR", 3076), ("germanAustria", 3079), ("englishAustralia", 3081), ("spanishInternationalSort", 3082), ("frenchCanada", 3084), ("serbianCyrillic", 3098), ("arabicLibya", 4097), ("chineseSingapore", 4100), ("germanLuxembourg", 4103), ("englishCanada", 4105), ("spanishGuatemala", 4106), ("frenchSwitzerland", 4108), ("arabicAlgeria", 5121), ("germanLiechtenstein", 5127), ("englishNewZealand", 5129), ("spanishCostaRica", 5130), ("frenchLuxembourg", 5132), ("arabicMorocco", 6145), ("englishIreland", 6153), ("spanishPanama", 6154), ("arabicTunisia", 7169), ("englishSouthAfrica", 7177), ("spanishDominicanRepublic", 7178), ("arabicOman", 8193), ("englishJamaica", 8201), ("spanishVenezuela", 8202), ("arabicYemen", 9217), ("spanishColombia", 9226), ("arabicSyria", 10241), ("englishBelize", 10249), ("spanishPeru", 10250), ("arabicJordan", 11265), ("englishTrinidad", 11273), ("spanishArgentina", 11274), ("arabicLebanon", 12289), ("spanishEcuador", 12298), ("arabicKuwait", 13313), ("spanishChile", 13322), ("arabicUAE", 14337), ("spanishUruguay", 14346), ("arabicBahrain", 15361), ("spanishParaguay", 15370), ("arabicQatar", 16385), ("spanishBolivia", 16394), ("spanishElSalvador", 17418), ("spanishHonduras", 18442), ("spanishNicaragua", 19466), ("spanishPuertoRico", 20490)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososOSLanguage.setStatus('current')
ososOSProductSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososOSProductSuite.setStatus('current')
ososOSType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("macros", 2), ("attunix", 3), ("dgux", 4), ("decnt", 5), ("digitalUnix", 6), ("openVMS", 7), ("hpux", 8), ("aix", 9), ("mvs", 10), ("os400", 11), ("os2", 12), ("javaVM", 13), ("msdos", 14), ("win3x", 15), ("win95", 16), ("win98", 17), ("winnt", 18), ("wince", 19), ("ncr3000", 20), ("netWare", 21), ("osf", 22), ("dcOS", 23), ("reliantUNIX", 24), ("scoUnixWare", 25), ("scoOpenServer", 26), ("sequent", 27), ("irix", 28), ("solaris", 29), ("sunOS", 30), ("u6000", 31), ("aseries", 32), ("tandemNSK", 33), ("tandemNT", 34), ("bs2000", 35), ("linux", 36), ("lynx", 37), ("xenix", 38), ("vmESA", 39), ("interactiveUNIX", 40), ("bsdunix", 41), ("freeBSD", 42), ("netBSD", 43), ("gnuHurd", 44), ("os9", 45), ("machKernel", 46), ("inferno", 47), ("qnx", 48), ("epoc", 49), ("ixWorks", 50), ("vxWorks", 51), ("miNT", 52), ("beOS", 53), ("hpMPE", 54), ("nextStep", 55), ("palmPilot", 56), ("rhapsody", 57)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososOSType.setStatus('current')
ososOtherTypeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 40), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososOtherTypeDescription.setStatus('current')
ososPAEEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 41), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososPAEEnabled.setStatus('current')
ososPlusProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 42), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososPlusProductID.setStatus('current')
ososPlusVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 43), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososPlusVersionNumber.setStatus('current')
ososPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 44), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososPrimary.setStatus('current')
ososProductType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("workStation", 1), ("domainController", 2), ("server", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososProductType.setStatus('current')
ososQuantumLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("oneTick", 2), ("twoTicks", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososQuantumLength.setStatus('current')
ososQuantumType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("fixed", 2), ("variable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososQuantumType.setStatus('current')
ososRegisteredUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 48), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososRegisteredUser.setStatus('current')
ososSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 49), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososSerialNumber.setStatus('current')
ososServicePackMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososServicePackMajorVersion.setStatus('current')
ososServicePackMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososServicePackMinorVersion.setStatus('current')
ososSizeStoredInPagingFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososSizeStoredInPagingFiles.setStatus('current')
ososStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososStatus.setStatus('current')
ososSuiteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososSuiteMask.setStatus('current')
ososSystemDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 55), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososSystemDevice.setStatus('current')
ososSystemDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 56), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososSystemDirectory.setStatus('current')
ososSystemDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 57), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososSystemDrive.setStatus('current')
ososTotalSwapSpaceSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososTotalSwapSpaceSize.setStatus('current')
ososTotalVirtualMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososTotalVirtualMemorySize.setStatus('current')
ososTotalVisibleMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososTotalVisibleMemorySize.setStatus('current')
ososVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 61), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososVersion.setStatus('current')
ososWindowsDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 5, 1, 62), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ososWindowsDirectory.setStatus('current')
win32OSRecoveryConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6), )
if mibBuilder.loadTexts: win32OSRecoveryConfigTable.setStatus('current')
win32OSRecoveryConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1), ).setIndexNames((0, "INFORMANT-OS", "osrcIndex"))
if mibBuilder.loadTexts: win32OSRecoveryConfigEntry.setStatus('current')
osrcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcIndex.setStatus('current')
osrcAutoReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcAutoReboot.setStatus('current')
osrcCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcCaption.setStatus('current')
osrcDebugFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcDebugFilePath.setStatus('current')
osrcDebugInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("completeMemoryDump", 1), ("kernelMemoryDump", 2), ("smallMemoryDump", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcDebugInfoType.setStatus('current')
osrcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcDescription.setStatus('current')
osrcExpandedDebugFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcExpandedDebugFilePath.setStatus('current')
osrcExpandedMiniDumpDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcExpandedMiniDumpDirectory.setStatus('current')
osrcKernelDumpOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcKernelDumpOnly.setStatus('current')
osrcMiniDumpDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcMiniDumpDirectory.setStatus('current')
osrcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 11), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcName.setStatus('current')
osrcOverwriteExistingDebugFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcOverwriteExistingDebugFile.setStatus('current')
osrcSendAdminAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcSendAdminAlert.setStatus('current')
osrcSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcSettingID.setStatus('current')
osrcWriteDebugInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcWriteDebugInfo.setStatus('current')
osrcWriteToSystemLog = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 6, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osrcWriteToSystemLog.setStatus('current')
win32QuickFixEngineeringTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7), )
if mibBuilder.loadTexts: win32QuickFixEngineeringTable.setStatus('current')
win32QuickFixEngineeringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1), ).setIndexNames((0, "INFORMANT-OS", "osqfeIndex"))
if mibBuilder.loadTexts: win32QuickFixEngineeringEntry.setStatus('current')
osqfeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeIndex.setStatus('current')
osqfeCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeCaption.setStatus('current')
osqfeCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeCSName.setStatus('current')
osqfeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeDescription.setStatus('current')
osqfeFixComments = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeFixComments.setStatus('current')
osqfeHotFixID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 260))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeHotFixID.setStatus('current')
osqfeInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeInstallDate.setStatus('current')
osqfeInstalledBy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeInstalledBy.setStatus('current')
osqfeInstalledOn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeInstalledOn.setStatus('current')
osqfeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeName.setStatus('current')
osqfeServicePackInEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 11), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 260))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeServicePackInEffect.setStatus('current')
osqfeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osqfeStatus.setStatus('current')
win32StartupCommandTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8), )
if mibBuilder.loadTexts: win32StartupCommandTable.setStatus('current')
win32StartupCommandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8, 1), ).setIndexNames((0, "INFORMANT-OS", "osscIndex"))
if mibBuilder.loadTexts: win32StartupCommandEntry.setStatus('current')
osscIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscIndex.setStatus('current')
osscCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscCaption.setStatus('current')
osscCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscCommand.setStatus('current')
osscDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscDescription.setStatus('current')
osscLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscLocation.setStatus('current')
osscName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscName.setStatus('current')
osscSettingID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscSettingID.setStatus('current')
osscUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 8, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscUser.setStatus('current')
win32Shutdown = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 5, 6, 8, 12))).clone(namedValues=NamedValues(("logOff", 0), ("shutdown", 1), ("reboot", 2), ("forcedLogOff", 4), ("forceShutdown", 5), ("forcedReboot", 6), ("powerOff", 8), ("forcedPowerOff", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32Shutdown.setStatus('current')
win32WinSATTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10), )
if mibBuilder.loadTexts: win32WinSATTable.setStatus('current')
win32WinSATEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1), ).setIndexNames((0, "INFORMANT-OS", "ossatIndex"))
if mibBuilder.loadTexts: win32WinSATEntry.setStatus('current')
ossatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossatIndex.setStatus('current')
ossatCPUScore = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossatCPUScore.setStatus('current')
ossatD3DScore = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossatD3DScore.setStatus('current')
ossatDiskScore = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossatDiskScore.setStatus('current')
ossatGraphicsScore = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossatGraphicsScore.setStatus('current')
ossatMemoryScore = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossatMemoryScore.setStatus('current')
ossatTimeTaken = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossatTimeTaken.setStatus('current')
ossatAssessmentState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("stateUknown", 0), ("valid", 1), ("incoherentWithHardware", 2), ("noAssessmentAvailable", 3), ("invalid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossatAssessmentState.setStatus('current')
ossatSPRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 8, 10, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossatSPRLevel.setStatus('current')
wmiProcesses = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9))
if mibBuilder.loadTexts: wmiProcesses.setStatus('current')
win32ProcessTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1), )
if mibBuilder.loadTexts: win32ProcessTable.setStatus('current')
win32ProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "ospsIndex"))
if mibBuilder.loadTexts: win32ProcessEntry.setStatus('current')
ospsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsIndex.setStatus('current')
ospsCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsCaption.setStatus('current')
ospsCommandLine = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsCommandLine.setStatus('current')
ospsCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsCreationClassName.setStatus('current')
ospsCreationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsCreationDate.setStatus('current')
ospsCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsCSCreationClassName.setStatus('current')
ospsCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsCSName.setStatus('current')
ospsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsDescription.setStatus('current')
ospsExecutablePath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsExecutablePath.setStatus('current')
ospsExecutionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsExecutionState.setStatus('current')
ospsHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsHandle.setStatus('current')
ospsHandleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsHandleCount.setStatus('current')
ospsInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsInstallDate.setStatus('current')
ospsKernelModeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 14), Counter64()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsKernelModeTime.setStatus('current')
ospsMaximumWorkingSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 15), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsMaximumWorkingSetSize.setStatus('current')
ospsMinimumWorkingSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 16), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsMinimumWorkingSetSize.setStatus('current')
ospsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsName.setStatus('current')
ospsOSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsOSCreationClassName.setStatus('current')
ospsOSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsOSName.setStatus('current')
ospsOtherOperationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsOtherOperationCount.setStatus('current')
ospsOtherTransferCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 21), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsOtherTransferCount.setStatus('current')
ospsPageFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsPageFaults.setStatus('current')
ospsPageFileUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 23), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsPageFileUsage.setStatus('current')
ospsParentProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsParentProcessId.setStatus('current')
ospsPeakPageFileUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 25), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsPeakPageFileUsage.setStatus('current')
ospsPeakVirtualSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 26), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsPeakVirtualSize.setStatus('current')
ospsPeakWorkingSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 27), Gauge32()).setUnits('Kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsPeakWorkingSetSize.setStatus('current')
ospsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsPriority.setStatus('current')
ospsPrivatePageCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsPrivatePageCount.setStatus('current')
ospsProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsProcessId.setStatus('current')
ospsQuotaNonPagedPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsQuotaNonPagedPoolUsage.setStatus('current')
ospsQuotaPagedPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsQuotaPagedPoolUsage.setStatus('current')
ospsQuotaPeakNonPagedPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsQuotaPeakNonPagedPoolUsage.setStatus('current')
ospsQuotaPeakPagedPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsQuotaPeakPagedPoolUsage.setStatus('current')
ospsReadOperationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsReadOperationCount.setStatus('current')
ospsReadTransferCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 36), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsReadTransferCount.setStatus('current')
ospsSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsSessionId.setStatus('current')
ospsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 38), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsStatus.setStatus('current')
ospsTerminationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 39), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsTerminationDate.setStatus('current')
ospsThreadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsThreadCount.setStatus('current')
ospsUserModeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 41), Counter64()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsUserModeTime.setStatus('current')
ospsVirtualSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 42), Gauge32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsVirtualSize.setStatus('current')
ospsWindowsVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 43), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsWindowsVersion.setStatus('current')
ospsWorkingSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsWorkingSetSize.setStatus('current')
ospsWriteOperationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsWriteOperationCount.setStatus('current')
ospsWriteTransferCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 1, 1, 46), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ospsWriteTransferCount.setStatus('current')
win32ThreadTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2), )
if mibBuilder.loadTexts: win32ThreadTable.setStatus('current')
win32ThreadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "ostdIndex"))
if mibBuilder.loadTexts: win32ThreadEntry.setStatus('current')
ostdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdIndex.setStatus('current')
ostdCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdCaption.setStatus('current')
ostdCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdCreationClassName.setStatus('current')
ostdCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 4), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdCSCreationClassName.setStatus('current')
ostdCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 5), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdCSName.setStatus('current')
ostdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdDescription.setStatus('current')
ostdElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 7), Counter64()).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdElapsedTime.setStatus('current')
ostdExecutionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("other", 1), ("ready", 2), ("running", 3), ("blocked", 4), ("suspendedBlocked", 5), ("suspendedReady", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdExecutionState.setStatus('current')
ostdHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 9), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdHandle.setStatus('current')
ostdInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdInstallDate.setStatus('current')
ostdKernelModeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 11), Counter64()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdKernelModeTime.setStatus('current')
ostdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdName.setStatus('current')
ostdOSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdOSCreationClassName.setStatus('current')
ostdOSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 14), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdOSName.setStatus('current')
ostdPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdPriority.setStatus('current')
ostdPriorityBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdPriorityBase.setStatus('current')
ostdProcessCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 17), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdProcessCreationClassName.setStatus('current')
ostdProcessHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 18), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdProcessHandle.setStatus('current')
ostdStartAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdStartAddress.setStatus('current')
ostdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdStatus.setStatus('current')
ostdThreadState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("initialized", 0), ("ready", 1), ("running", 2), ("standby", 3), ("terminated", 4), ("waiting", 5), ("transition", 6), ("unknown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdThreadState.setStatus('current')
ostdThreadWaitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("executive", 0), ("freePage", 1), ("pageIn", 2), ("poolAllocation", 3), ("executionDelay", 4), ("freePage2", 5), ("pageIn2", 6), ("executive2", 7), ("freePage3", 8), ("pageIn3", 9), ("poolAllocation2", 10), ("executionDelay2", 11), ("freePage4", 12), ("pageIn4", 13), ("eventPairHigh", 14), ("eventPairLow", 15), ("lpcreceive", 16), ("lpcreply", 17), ("virtualMemory", 18), ("pageOut", 19), ("unknown", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdThreadWaitReason.setStatus('current')
ostdUserModeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 2, 1, 23), Counter64()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: ostdUserModeTime.setStatus('current')
win32CreateProcess = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 22, 9, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CreateProcess.setStatus('current')
wmiSchedulerJobs = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10))
if mibBuilder.loadTexts: wmiSchedulerJobs.setStatus('current')
win32CurrentTimeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1), )
if mibBuilder.loadTexts: win32CurrentTimeTable.setStatus('current')
win32CurrentTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "osctIndex"))
if mibBuilder.loadTexts: win32CurrentTimeEntry.setStatus('current')
osctIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctIndex.setStatus('current')
osctDay = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctDay.setStatus('current')
osctDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctDayOfWeek.setStatus('current')
osctHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctHour.setStatus('current')
osctMilliseconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctMilliseconds.setStatus('current')
osctMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctMinute.setStatus('current')
osctMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctMonth.setStatus('current')
osctQuarter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctQuarter.setStatus('current')
osctSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctSecond.setStatus('current')
osctWeekInMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctWeekInMonth.setStatus('current')
osctYear = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osctYear.setStatus('current')
win32ScheduledJobTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2), )
if mibBuilder.loadTexts: win32ScheduledJobTable.setStatus('current')
win32ScheduledJobEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "ossjIndex"))
if mibBuilder.loadTexts: win32ScheduledJobEntry.setStatus('current')
ossjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjIndex.setStatus('current')
ossjCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjCaption.setStatus('current')
ossjCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjCommand.setStatus('current')
ossjDaysOfMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjDaysOfMonth.setStatus('current')
ossjDaysOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjDaysOfWeek.setStatus('current')
ossjDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjDescription.setStatus('current')
ossjElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjElapsedTime.setStatus('current')
ossjInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjInstallDate.setStatus('current')
ossjInteractWithDesktop = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjInteractWithDesktop.setStatus('current')
ossjJobId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjJobId.setStatus('current')
ossjJobStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjJobStatus.setStatus('current')
ossjName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjName.setStatus('current')
ossjNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjNotify.setStatus('current')
ossjOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjOwner.setStatus('current')
ossjPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjPriority.setStatus('current')
ossjRunRepeatedly = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjRunRepeatedly.setStatus('current')
ossjStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjStartTime.setStatus('current')
ossjStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjStatus.setStatus('current')
ossjTimeSubmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjTimeSubmitted.setStatus('current')
ossjUntilTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 10, 2, 1, 20), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossjUntilTime.setStatus('current')
wmiServices = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11))
if mibBuilder.loadTexts: wmiServices.setStatus('current')
win32ServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1), )
if mibBuilder.loadTexts: win32ServiceTable.setStatus('current')
win32ServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "ossvcIndex"))
if mibBuilder.loadTexts: win32ServiceEntry.setStatus('current')
ossvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcIndex.setStatus('current')
ossvcAcceptPause = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcAcceptPause.setStatus('current')
ossvcAcceptStop = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcAcceptStop.setStatus('current')
ossvcCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcCaption.setStatus('current')
ossvcCheckPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcCheckPoint.setStatus('current')
ossvcCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 6), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcCreationClassName.setStatus('current')
ossvcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcDescription.setStatus('current')
ossvcDesktopInteract = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcDesktopInteract.setStatus('current')
ossvcDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcDisplayName.setStatus('current')
ossvcErrorControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcErrorControl.setStatus('current')
ossvcExitCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcExitCode.setStatus('current')
ossvcInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcInstallDate.setStatus('current')
ossvcName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcName.setStatus('current')
ossvcPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcPathName.setStatus('current')
ossvcProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcProcessId.setStatus('current')
ossvcServiceSpecificExitCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcServiceSpecificExitCode.setStatus('current')
ossvcServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("kernelDriver", 1), ("fileSystemDriver", 2), ("adapter", 3), ("recognizerDriver", 4), ("ownProcess", 5), ("shareProcess", 6), ("interactiveProcess", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcServiceType.setStatus('current')
ossvcStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcStarted.setStatus('current')
ossvcStartMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcStartMode.setStatus('current')
ossvcStartName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcStartName.setStatus('current')
ossvcState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("stopped", 1), ("startPending", 2), ("stopPending", 3), ("running", 4), ("continuePending", 5), ("pausePending", 6), ("paused", 7), ("unknown", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ossvcState.setStatus('current')
ossvcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcStatus.setStatus('current')
ossvcSystemCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcSystemCreationClassName.setStatus('current')
ossvcSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 24), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcSystemName.setStatus('current')
ossvcTagId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcTagId.setStatus('current')
ossvcWaitHint = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 11, 1, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ossvcWaitHint.setStatus('current')
wmiShares = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12))
if mibBuilder.loadTexts: wmiShares.setStatus('current')
win32DFSNodeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1), )
if mibBuilder.loadTexts: win32DFSNodeTable.setStatus('current')
win32DFSNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "osdfsnIndex"))
if mibBuilder.loadTexts: win32DFSNodeEntry.setStatus('current')
osdfsnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfsnIndex.setStatus('current')
osdfsnCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfsnCaption.setStatus('current')
osdfsnDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfsnDescription.setStatus('current')
osdfsnInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfsnInstallDate.setStatus('current')
osdfsnName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfsnName.setStatus('current')
osdfsnRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfsnRoot.setStatus('current')
osdfsnState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ok", 0), ("inconsistent", 1), ("online", 2), ("offline", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfsnState.setStatus('current')
osdfsnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfsnStatus.setStatus('current')
osdfsnTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 1, 1, 9), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfsnTimeout.setStatus('current')
win32DFSTargetTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2), )
if mibBuilder.loadTexts: win32DFSTargetTable.setStatus('current')
win32DFSTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "osdfstIndex"))
if mibBuilder.loadTexts: win32DFSTargetEntry.setStatus('current')
osdfstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstIndex.setStatus('current')
osdfstCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 2), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstCaption.setStatus('current')
osdfstDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstDescription.setStatus('current')
osdfstInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstInstallDate.setStatus('current')
osdfstLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstLinkName.setStatus('current')
osdfstName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstName.setStatus('current')
osdfstServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstServerName.setStatus('current')
osdfstShareName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstShareName.setStatus('current')
osdfstState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4))).clone(namedValues=NamedValues(("offline", 0), ("online", 2), ("active", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstState.setStatus('current')
osdfstStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osdfstStatus.setStatus('current')
win32ServerConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3), )
if mibBuilder.loadTexts: win32ServerConnectionTable.setStatus('current')
win32ServerConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1), ).setIndexNames((0, "INFORMANT-OS", "osscnIndex"))
if mibBuilder.loadTexts: win32ServerConnectionEntry.setStatus('current')
osscnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnIndex.setStatus('current')
osscnActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 2), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnActiveTime.setStatus('current')
osscnCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnCaption.setStatus('current')
osscnComputerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnComputerName.setStatus('current')
osscnConnectionID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnConnectionID.setStatus('current')
osscnDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnDescription.setStatus('current')
osscnInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnInstallDate.setStatus('current')
osscnName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnName.setStatus('current')
osscnNumberOfFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnNumberOfFiles.setStatus('current')
osscnNumberOfUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnNumberOfUsers.setStatus('current')
osscnShareName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnShareName.setStatus('current')
osscnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnStatus.setStatus('current')
osscnUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 3, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscnUserName.setStatus('current')
win32ServerSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4), )
if mibBuilder.loadTexts: win32ServerSessionTable.setStatus('current')
win32ServerSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1), ).setIndexNames((0, "INFORMANT-OS", "osssIndex"))
if mibBuilder.loadTexts: win32ServerSessionEntry.setStatus('current')
osssIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssIndex.setStatus('current')
osssActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 2), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: osssActiveTime.setStatus('current')
osssCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 3), WtcsDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssCaption.setStatus('current')
osssClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssClientType.setStatus('current')
osssComputerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssComputerName.setStatus('current')
osssDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssDescription.setStatus('current')
osssIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 7), Gauge32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: osssIdleTime.setStatus('current')
osssInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssInstallDate.setStatus('current')
osssName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssName.setStatus('current')
osssResourcesOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssResourcesOpened.setStatus('current')
osssSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("guest", 0), ("noEncryption", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssSessionType.setStatus('current')
osssStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssStatus.setStatus('current')
osssTransportName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssTransportName.setStatus('current')
osssUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 4, 1, 14), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osssUserName.setStatus('current')
win32ShareTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5), )
if mibBuilder.loadTexts: win32ShareTable.setStatus('current')
win32ShareEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1), ).setIndexNames((0, "INFORMANT-OS", "osshIndex"))
if mibBuilder.loadTexts: win32ShareEntry.setStatus('current')
osshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshIndex.setStatus('current')
osshAccessMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshAccessMask.setStatus('current')
osshAllowMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshAllowMaximum.setStatus('current')
osshCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshCaption.setStatus('current')
osshDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshDescription.setStatus('current')
osshInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshInstallDate.setStatus('current')
osshMaximumAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshMaximumAllowed.setStatus('current')
osshName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshName.setStatus('current')
osshPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshPath.setStatus('current')
osshStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshStatus.setStatus('current')
osshType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 12, 5, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osshType.setStatus('current')
wmiStorage = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13))
if mibBuilder.loadTexts: wmiStorage.setStatus('current')
win32ShadowContextTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1), )
if mibBuilder.loadTexts: win32ShadowContextTable.setStatus('current')
win32ShadowContextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "osscxIndex"))
if mibBuilder.loadTexts: win32ShadowContextEntry.setStatus('current')
osscxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxIndex.setStatus('current')
osscxClientAccessible = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxClientAccessible.setStatus('current')
osscxDifferential = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxDifferential.setStatus('current')
osscxExposedLocally = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxExposedLocally.setStatus('current')
osscxExposedRemotely = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxExposedRemotely.setStatus('current')
osscxHardwareAssisted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxHardwareAssisted.setStatus('current')
osscxImported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxImported.setStatus('current')
osscxName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 8), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxName.setStatus('current')
osscxNoAutoRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxNoAutoRelease.setStatus('current')
osscxNotSurfaced = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxNotSurfaced.setStatus('current')
osscxNoWriters = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxNoWriters.setStatus('current')
osscxPersistent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxPersistent.setStatus('current')
osscxPlex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxPlex.setStatus('current')
osscxTransportable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscxTransportable.setStatus('current')
win32ShadowCopyTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2), )
if mibBuilder.loadTexts: win32ShadowCopyTable.setStatus('current')
win32ShadowCopyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "osscpIndex"))
if mibBuilder.loadTexts: win32ShadowCopyEntry.setStatus('current')
osscpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpIndex.setStatus('current')
osscpClientAccessible = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpClientAccessible.setStatus('current')
osscpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpCount.setStatus('current')
osscpDeviceObject = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpDeviceObject.setStatus('current')
osscpDifferential = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpDifferential.setStatus('current')
osscpExposedLocally = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpExposedLocally.setStatus('current')
osscpExposedName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpExposedName.setStatus('current')
osscpExposedRemotely = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpExposedRemotely.setStatus('current')
osscpHardwareAssisted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpHardwareAssisted.setStatus('current')
osscpID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpID.setStatus('current')
osscpImported = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpImported.setStatus('current')
osscpNoAutoRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpNoAutoRelease.setStatus('current')
osscpNotSurfaced = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpNotSurfaced.setStatus('current')
osscpNoWriters = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpNoWriters.setStatus('current')
osscpOriginatingMachine = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpOriginatingMachine.setStatus('current')
osscpPersistent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpPersistent.setStatus('current')
osscpPlex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpPlex.setStatus('current')
osscpProviderID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 18), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpProviderID.setStatus('current')
osscpServiceMachine = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpServiceMachine.setStatus('current')
osscpSetID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpSetID.setStatus('current')
osscpState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 0), ("preparing", 1), ("processingPrepare", 2), ("prepared", 3), ("processingPrecommit", 4), ("precommitted", 5), ("processingCommit", 6), ("committed", 7), ("processingPostcommit", 8), ("created", 9), ("aborted", 10), ("deleted", 11), ("count", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpState.setStatus('current')
osscpTransportable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpTransportable.setStatus('current')
osscpVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 2, 1, 23), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osscpVolumeName.setStatus('current')
win32ShadowProviderTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 3), )
if mibBuilder.loadTexts: win32ShadowProviderTable.setStatus('current')
win32ShadowProviderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 3, 1), ).setIndexNames((0, "INFORMANT-OS", "osspIndex"))
if mibBuilder.loadTexts: win32ShadowProviderEntry.setStatus('current')
osspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osspIndex.setStatus('current')
osspCLSID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 3, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osspCLSID.setStatus('current')
osspID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 3, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osspID.setStatus('current')
osspName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 3, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osspName.setStatus('current')
osspType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("system", 1), ("software", 2), ("hardware", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osspType.setStatus('current')
osspVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 3, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osspVersion.setStatus('current')
osspVersionID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 13, 3, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osspVersionID.setStatus('current')
wmiEventLog = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14))
if mibBuilder.loadTexts: wmiEventLog.setStatus('current')
win32NTEventlogFileTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1), )
if mibBuilder.loadTexts: win32NTEventlogFileTable.setStatus('current')
win32NTEventlogFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1), ).setIndexNames((0, "INFORMANT-OS", "oselfIndex"))
if mibBuilder.loadTexts: win32NTEventlogFileEntry.setStatus('current')
oselfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfIndex.setStatus('current')
oselfAccessMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 2), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfAccessMask.setStatus('current')
oselfArchive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfArchive.setStatus('current')
oselfCaption = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfCaption.setStatus('current')
oselfCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfCompressed.setStatus('current')
oselfCompressionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 6), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfCompressionMethod.setStatus('current')
oselfCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 7), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfCreationClassName.setStatus('current')
oselfCreationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfCreationDate.setStatus('current')
oselfCSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfCSCreationClassName.setStatus('current')
oselfCSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfCSName.setStatus('current')
oselfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfDescription.setStatus('current')
oselfDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 12), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfDrive.setStatus('current')
oselfEightDotThreeFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfEightDotThreeFileName.setStatus('current')
oselfEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfEncrypted.setStatus('current')
oselfEncryptionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 15), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfEncryptionMethod.setStatus('current')
oselfExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfExtension.setStatus('current')
oselfFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfFileName.setStatus('current')
oselfFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfFileSize.setStatus('current')
oselfFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 19), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfFileType.setStatus('current')
oselfFSCreationClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 20), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfFSCreationClassName.setStatus('current')
oselfFSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 21), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfFSName.setStatus('current')
oselfHidden = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfHidden.setStatus('current')
oselfInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 23), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfInstallDate.setStatus('current')
oselfInUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfInUseCount.setStatus('current')
oselfLastAccessed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfLastAccessed.setStatus('current')
oselfLastModified = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 26), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfLastModified.setStatus('current')
oselfLogFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 27), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfLogFileName.setStatus('current')
oselfManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 28), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfManufacturer.setStatus('current')
oselfMaxFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfMaxFileSize.setStatus('current')
oselfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 30), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfName.setStatus('current')
oselfNumberOfRecords = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfNumberOfRecords.setStatus('current')
oselfOverwriteOutDated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 32), Gauge32()).setUnits('Days').setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfOverwriteOutDated.setStatus('current')
oselfOverWritePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 33), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfOverWritePolicy.setStatus('current')
oselfPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 34), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfPath.setStatus('current')
oselfReadable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 35), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfReadable.setStatus('current')
oselfSources = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 36), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfSources.setStatus('current')
oselfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ok", 1), ("error", 2), ("degraded", 3), ("unknown", 4), ("predFail", 5), ("starting", 6), ("stopping", 7), ("service", 8), ("stressed", 9), ("nonRecover", 10), ("noContact", 11), ("lostComm", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfStatus.setStatus('current')
oselfSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfSystem.setStatus('current')
oselfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 39), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfVersion.setStatus('current')
oselfWriteable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 1, 1, 40), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselfWriteable.setStatus('current')
win32NTLogEventTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2), )
if mibBuilder.loadTexts: win32NTLogEventTable.setStatus('current')
win32NTLogEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1), ).setIndexNames((0, "INFORMANT-OS", "oselIndex"))
if mibBuilder.loadTexts: win32NTLogEventEntry.setStatus('current')
oselIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselIndex.setStatus('current')
oselCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselCategory.setStatus('current')
oselCategoryString = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 3), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselCategoryString.setStatus('current')
oselComputerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 4), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselComputerName.setStatus('current')
oselData = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 5), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselData.setStatus('current')
oselEventCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselEventCode.setStatus('current')
oselEventIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselEventIdentifier.setStatus('current')
oselEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("error", 1), ("warning", 2), ("information", 3), ("securityAuditSuccess", 4), ("securityAuditFailure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselEventType.setStatus('current')
oselInsertionStrings = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 9), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselInsertionStrings.setStatus('current')
oselLogfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 10), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselLogfile.setStatus('current')
oselMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 11), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselMessage.setStatus('current')
oselRecordNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselRecordNumber.setStatus('current')
oselSourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 13), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselSourceName.setStatus('current')
oselTimeGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselTimeGenerated.setStatus('current')
oselTimeWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselTimeWritten.setStatus('current')
oselType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 16), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselType.setStatus('current')
oselUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 22, 14, 2, 1, 17), WtcsDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oselUser.setStatus('current')
mibBuilder.exportSymbols("INFORMANT-OS", osldPowerManagementSupported=osldPowerManagementSupported, osscnCaption=osscnCaption, ososBootDevice=ososBootDevice, ospfSystem=ospfSystem, ospfFreeSpace=ospfFreeSpace, osjoaReadTransferCount=osjoaReadTransferCount, osjoaTotalTerminatedProcesses=osjoaTotalTerminatedProcesses, osjoaTotalKernelTime=osjoaTotalKernelTime, oscfEncrypted=oscfEncrypted, oscfExtension=oscfExtension, ospsInstallDate=ospsInstallDate, oselEventType=oselEventType, ospfsInitialSize=ospfsInitialSize, ososOtherTypeDescription=ososOtherTypeDescription, oscfLastAccessed=oscfLastAccessed, oselfNumberOfRecords=oselfNumberOfRecords, osmldCreationClassName=osmldCreationClassName, oscsPowerManagementSupported=oscsPowerManagementSupported, osvlSerialNumber=osvlSerialNumber, ospfCompressionMethod=ospfCompressionMethod, ososDataExecPreventionDrivers=ososDataExecPreventionDrivers, osqsState=osqsState, oscsUserName=oscsUserName, ostdThreadState=ostdThreadState, osctMilliseconds=osctMilliseconds, ospfsName=ospfsName, osqsDescription=osqsDescription, win32ComputerSystemTable=win32ComputerSystemTable, ososPlusVersionNumber=ososPlusVersionNumber, osscnNumberOfUsers=osscnNumberOfUsers, osctIndex=osctIndex, win32CodecFileEntry=win32CodecFileEntry, osevSystemVariable=osevSystemVariable, osmldQuotasDisabled=osmldQuotasDisabled, ossvcStartName=ossvcStartName, win32QuickFixEngineeringTable=win32QuickFixEngineeringTable, osvlCompressed=osvlCompressed, osspCLSID=osspCLSID, ososOrganization=ososOrganization, osmldStatus=osmldStatus, oslogName=oslogName, osscpNoWriters=osscpNoWriters, win32SystemDriverEntry=win32SystemDriverEntry, ospfLastModified=ospfLastModified, osjolDescription=osjolDescription, osvlFileSystem=osvlFileSystem, ossjDaysOfMonth=ossjDaysOfMonth, osscpVolumeName=osscpVolumeName, osncoDisplayType=osncoDisplayType, osldFreeSpace=osldFreeSpace, osjolLimitFlags=osjolLimitFlags, oselSourceName=oselSourceName, oselfSystem=oselfSystem, osdoDomainControllerName=osdoDomainControllerName, osscDescription=osscDescription, osscnInstallDate=osscnInstallDate, ososForegroundApplicationBoost=ososForegroundApplicationBoost, oscfFSCreationClassName=oscfFSCreationClassName, oscfWriteable=oscfWriteable, osldPNPDeviceID=osldPNPDeviceID, osrtIndex=osrtIndex, osdpRewritePartition=osdpRewritePartition, osspIndex=osspIndex, ossdInstallDate=ossdInstallDate, osbcSettingID=osbcSettingID, osvlCapacity=osvlCapacity, ospfName=ospfName, ostzBias=ostzBias, ostdOSName=ostdOSName, ostzDaylightBias=ostzDaylightBias, ossjCommand=ossjCommand, osqfeInstallDate=osqfeInstallDate, oselfOverwriteOutDated=oselfOverwriteOutDated, ospsReadTransferCount=ospsReadTransferCount, osscUser=osscUser, osqsCaption=osqsCaption, osmldIndex=osmldIndex, ososNumberOfUsers=ososNumberOfUsers, ospsPriority=ospsPriority, wmiShares=wmiShares, osnpSupportsExpeditedData=osnpSupportsExpeditedData, osbcLastDrive=osbcLastDrive, win32NamedJobObjectTable=win32NamedJobObjectTable, osmldName=osmldName, ospsPeakVirtualSize=ospsPeakVirtualSize, osldMaximumComponentLength=osldMaximumComponentLength, win32ScheduledJobTable=win32ScheduledJobTable, oselfWriteable=oselfWriteable, oscsPauseAfterReset=oscsPauseAfterReset, oscsWakeUpType=oscsWakeUpType, osqfeInstalledOn=osqfeInstalledOn, oscfName=oscfName, osscLocation=osscLocation, oscsBootROMSupported=oscsBootROMSupported, osnpConnectionlessService=osnpConnectionlessService, ososLastBootUpTime=ososLastBootUpTime, ososQuantumType=ososQuantumType, osvxdCodeSet=osvxdCodeSet, ososOSType=ososOSType, oscfFileType=oscfFileType, ossdName=ossdName, oscsKeyboardPasswordStatus=oscsKeyboardPasswordStatus, osqsVolumePath=osqsVolumePath, osdpPartitionIndex=osdpPartitionIndex, osnpGuaranteesDelivery=osnpGuaranteesDelivery, win32ProcessTable=win32ProcessTable, osscpExposedLocally=osscpExposedLocally, oscfHidden=oscfHidden, ospfuTempPageFile=ospfuTempPageFile, win32NTLogEventTable=win32NTLogEventTable, win32DiskPartitionTable=win32DiskPartitionTable, wmiEventLog=wmiEventLog, ossvcAcceptStop=ossvcAcceptStop, oscsNumberOfProcessors=oscsNumberOfProcessors, osscxNoWriters=osscxNoWriters, oselUser=oselUser, osdtWallpaper=osdtWallpaper, oscsCurrentTimeZone=oscsCurrentTimeZone, osldSupportsFileBasedCompression=osldSupportsFileBasedCompression, win32BootConfigurationTable=win32BootConfigurationTable, win32NamedJobObjectActgInfoTable=win32NamedJobObjectActgInfoTable, ospfuInstallDate=ospfuInstallDate, osbcDescription=osbcDescription, oscsDescription=oscsDescription, ososInstallDate=ososInstallDate, ossvcIndex=ossvcIndex, osbcIndex=osbcIndex, win32IP4RouteTableTable=win32IP4RouteTableTable, ospfCSCreationClassName=ospfCSCreationClassName, ososIndex=ososIndex, ossatSPRLevel=ossatSPRLevel, ospsQuotaPeakNonPagedPoolUsage=ospsQuotaPeakNonPagedPoolUsage, ospsExecutablePath=ospsExecutablePath, win32OSRecoveryConfigEntry=win32OSRecoveryConfigEntry, osldSystemCreationClassName=osldSystemCreationClassName, osrtMetric3=osrtMetric3, osdoNameFormat=osdoNameFormat, ostzDaylightName=ostzDaylightName, osjoaIndex=osjoaIndex, osjoaReadOperationCount=osjoaReadOperationCount, ososCountryCode=ososCountryCode, osvlSupportsDiskQuotas=osvlSupportsDiskQuotas, oscsModel=oscsModel, osqsExceededNotification=osqsExceededNotification, oscsThermalState=oscsThermalState, osnclStatus=osnclStatus, ospsOtherTransferCount=ospsOtherTransferCount, ostdPriority=ostdPriority, win32DFSNodeTable=win32DFSNodeTable, ososEncryptionLevel=ososEncryptionLevel, osdtIndex=osdtIndex, osshName=osshName, oscsDomainRole=oscsDomainRole, osdtCursorBlinkRate=osdtCursorBlinkRate, osnpPseudoStreamOriented=osnpPseudoStreamOriented, osrcCaption=osrcCaption, ospfuAllocatedBaseSize=ospfuAllocatedBaseSize, ostzStandardSecond=ostzStandardSecond, osnclCaption=osnclCaption, osscpCount=osscpCount, osscxClientAccessible=osscxClientAccessible, win32SystemDriverTable=win32SystemDriverTable, osdoIndex=osdoIndex, osvxdStatus=osvxdStatus, ospsVirtualSize=ospsVirtualSize, win32ShadowCopyTable=win32ShadowCopyTable, osdpSize=osdpSize, oscfFSName=oscfFSName, win32NetworkClientTable=win32NetworkClientTable, osnjoIndex=osnjoIndex, ososFreeSpaceInPagingFiles=ososFreeSpaceInPagingFiles, ospsWriteOperationCount=ospsWriteOperationCount, ossjInteractWithDesktop=ossjInteractWithDesktop, osrcKernelDumpOnly=osrcKernelDumpOnly, win32DiskPartitionEntry=win32DiskPartitionEntry, osldMediaType=osldMediaType, oslogInstallDate=oslogInstallDate, osevCaption=osevCaption, oscsIndex=oscsIndex, osjoaTotalUserTime=osjoaTotalUserTime, oselMessage=oselMessage, osprtInstallDate=osprtInstallDate, osdoRoles=osdoRoles, oscsCaption=oscsCaption, ospfInitialSize=ospfInitialSize, oscfReadable=oscfReadable, oselType=oselType, oselfLastModified=oselfLastModified, osqsWarningExceededNotification=osqsWarningExceededNotification, osdtName=osdtName, oselfDrive=oselfDrive, ososFreePhysicalMemory=ososFreePhysicalMemory, osctSecond=osctSecond, ososPrimary=ososPrimary, osjolPriorityClass=osjolPriorityClass, ospfCaption=ospfCaption, osscxHardwareAssisted=osscxHardwareAssisted, osrtProtocol=osrtProtocol, osvxdSoftwareElementID=osvxdSoftwareElementID, osmldMaximumComponentLength=osmldMaximumComponentLength, oselfInUseCount=oselfInUseCount, osvlDeviceId=osvlDeviceId, win32OperatingSystemEntry=win32OperatingSystemEntry, osqfeServicePackInEffect=osqfeServicePackInEffect, oscfLastModified=oscfLastModified, osdfsnRoot=osdfsnRoot, osscpDifferential=osscpDifferential, oslogStatus=oslogStatus, win32DriverVXDTable=win32DriverVXDTable, win32DFSTargetTable=win32DFSTargetTable, oscsManufacturer=oscsManufacturer, osnpStatus=osnpStatus, osmldFileSystem=osmldFileSystem, osdpConfigManagerErrorCode=osdpConfigManagerErrorCode, ostdKernelModeTime=ostdKernelModeTime, osldPowerManagementCapabilities=osldPowerManagementCapabilities, osldStatus=osldStatus, ososLocale=ososLocale, osdpAvailability=osdpAvailability, osdoDSDnsDomainFlag=osdoDSDnsDomainFlag, win32StartupCommandTable=win32StartupCommandTable, ospfEncryptionMethod=ospfEncryptionMethod, osldVolumeName=osldVolumeName, ospsPeakPageFileUsage=ospsPeakPageFileUsage, osdpIndex=osdpIndex, osldErrorDescription=osldErrorDescription, oscsInfraredSupported=oscsInfraredSupported, ososVersion=ososVersion, ospsPrivatePageCount=ospsPrivatePageCount, osdpName=osdpName, osmldConfigManagerUserConfig=osmldConfigManagerUserConfig, ospfArchive=ospfArchive, osjoaActiveProcesses=osjoaActiveProcesses, osdpCreationClassName=osdpCreationClassName, ospfCSName=ospfCSName, osdtIconTitleWrap=osdtIconTitleWrap, osmldNumberOfBlocks=osmldNumberOfBlocks, oscsInitialLoadInfo=oscsInitialLoadInfo, osscIndex=osscIndex, ossvcStatus=ossvcStatus, osscxPersistent=osscxPersistent, osdtPattern=osdtPattern, ososWindowsDirectory=ososWindowsDirectory, oscsTotalPhysicalMemory=oscsTotalPhysicalMemory, ososBuildNumber=ososBuildNumber, osscpPersistent=osscpPersistent, osdpNumberOfBlocks=osdpNumberOfBlocks, ososQuantumLength=ososQuantumLength, oscsPowerState=oscsPowerState, oselData=oselData, osnpMaximumAddressSize=osnpMaximumAddressSize, ossdExitCode=ossdExitCode, win32LogicalDiskTable=win32LogicalDiskTable, win32LogicalDiskEntry=win32LogicalDiskEntry)
mibBuilder.exportSymbols("INFORMANT-OS", ospfVersion=ospfVersion, oselCategory=oselCategory, oscsFrontPanelResetStatus=oscsFrontPanelResetStatus, ospfFileSize=ospfFileSize, win32ScheduledJobEntry=win32ScheduledJobEntry, osldName=osldName, osnpCaption=osnpCaption, oscsSystemStartupOptions=oscsSystemStartupOptions, osshType=osshType, ososCSName=ososCSName, osrtMask=osrtMask, oscsPrimaryOwnerContact=oscsPrimaryOwnerContact, ospsThreadCount=ospsThreadCount, osldErrorMethodology=osldErrorMethodology, oselTimeGenerated=oselTimeGenerated, ososSuiteMask=ososSuiteMask, oselRecordNumber=oselRecordNumber, osssClientType=osssClientType, oselfFSCreationClassName=oselfFSCreationClassName, ospfIndex=ospfIndex, osjoaWriteTransferCount=osjoaWriteTransferCount, osevUserName=osevUserName, osqfeIndex=osqfeIndex, oselfLogFileName=oselfLogFileName, osmldErrorMethodology=osmldErrorMethodology, oscsPowerManagementCapabilities=oscsPowerManagementCapabilities, osdoDSTimeServiceFlag=osdoDSTimeServiceFlag, osvxdInstallDate=osvxdInstallDate, osdpConfigManagerUserConfig=osdpConfigManagerUserConfig, wmiFileSystem=wmiFileSystem, osmldAvailability=osmldAvailability, osvlSupportsFileBasedCompression=osvlSupportsFileBasedCompression, ostdIndex=ostdIndex, osnjoDescription=osnjoDescription, osdpDeviceID=osdpDeviceID, osdtIconTitleFaceName=osdtIconTitleFaceName, osevStatus=osevStatus, osjoaName=osjoaName, ostzStandardBias=ostzStandardBias, osssActiveTime=osssActiveTime, ospfDescription=ospfDescription, ossvcPathName=ossvcPathName, osscpNoAutoRelease=osscpNoAutoRelease, oslogCaption=oslogCaption, ospsTerminationDate=ospsTerminationDate, oscfPath=oscfPath, oscsResetCount=oscsResetCount, oscfInUseCount=oscfInUseCount, osmldSystemName=osmldSystemName, ospfFSCreationClassName=ospfFSCreationClassName, win32DesktopEntry=win32DesktopEntry, ospsWriteTransferCount=ospsWriteTransferCount, osrtStatus=osrtStatus, osmldLastErrorCode=osmldLastErrorCode, ososStatus=ososStatus, wmiSchedulerJobs=wmiSchedulerJobs, oscsAutomaticResetCapability=oscsAutomaticResetCapability, osssStatus=osssStatus, osshAccessMask=osshAccessMask, osldDescription=osldDescription, ossdServiceType=ossdServiceType, win32PageFileEntry=win32PageFileEntry, ospsCommandLine=ospsCommandLine, osnpSupportsMulticasting=osnpSupportsMulticasting, ossvcInstallDate=ossvcInstallDate, ospfsSettingID=ospfsSettingID, osdoCaption=osdoCaption, ospsParentProcessId=ospsParentProcessId, ososSystemDevice=ososSystemDevice, osmldBlockSize=osmldBlockSize, ososSystemDrive=ososSystemDrive, oscfDrive=oscfDrive, ospsIndex=ospsIndex, osdtBorderWidth=osdtBorderWidth, ososCodeSet=ososCodeSet, ossjDescription=ossjDescription, osdpType=osdpType, osdoDcSiteName=osdoDcSiteName, win32QuotaSettingEntry=win32QuotaSettingEntry, osjoaDescription=osjoaDescription, ossdStartName=ossdStartName, oscsSystemStartupDelay=oscsSystemStartupDelay, oscsWorkgroup=oscsWorkgroup, osjolMinimumWorkingSetSize=osjolMinimumWorkingSetSize, win32DFSTargetEntry=win32DFSTargetEntry, osscxExposedRemotely=osscxExposedRemotely, ospfFileType=ospfFileType, osmldProviderName=osmldProviderName, oscsName=oscsName, osmldPowerManagementSupported=osmldPowerManagementSupported, osdpStatus=osdpStatus, win32EnvironmentEntry=win32EnvironmentEntry, ospfExtension=ospfExtension, osnpMaximumMessageSize=osnpMaximumMessageSize, oscsSystemStartupSetting=oscsSystemStartupSetting, osdpErrorMethodology=osdpErrorMethodology, ostzStandardHour=ostzStandardHour, osssCaption=osssCaption, osncoIndex=osncoIndex, osncoName=osncoName, oscspCaption=oscspCaption, osmldAccess=osmldAccess, osncoAccessMask=osncoAccessMask, osnpSupportsGracefulClosing=osnpSupportsGracefulClosing, ososNumberOfProcesses=ososNumberOfProcesses, osjolJobMemoryLimit=osjolJobMemoryLimit, osmldSystemCreationClassName=osmldSystemCreationClassName, oselfIndex=oselfIndex, ososDebug=ososDebug, ospsUserModeTime=ospsUserModeTime, osdfstLinkName=osdfstLinkName, osjoaPeakJobMemoryUsed=osjoaPeakJobMemoryUsed, osctQuarter=osctQuarter, osprtDestination=osprtDestination, osjoaTotalPageFaultCount=osjoaTotalPageFaultCount, osdtScreenSaverTimeout=osdtScreenSaverTimeout, win32PageFileTable=win32PageFileTable, osscnIndex=osscnIndex, osctDayOfWeek=osctDayOfWeek, osscpExposedName=osscpExposedName, oscsOEMLogoBitmap=oscsOEMLogoBitmap, osdpHiddenSectors=osdpHiddenSectors, win32CodecFileTable=win32CodecFileTable, ostdProcessHandle=ostdProcessHandle, ospsQuotaPeakPagedPoolUsage=ospsQuotaPeakPagedPoolUsage, ososPlusProductID=ososPlusProductID, oselfSources=oselfSources, osqfeStatus=osqfeStatus, osssTransportName=osssTransportName, osscpIndex=osscpIndex, osdoPrimaryOwnerName=osdoPrimaryOwnerName, osssResourcesOpened=osssResourcesOpened, oscfArchive=oscfArchive, osvlQuotasRebuilding=osvlQuotasRebuilding, osscpID=osscpID, osjoaTotalProcesses=osjoaTotalProcesses, win32NetworkProtocolTable=win32NetworkProtocolTable, ostdPriorityBase=ostdPriorityBase, oscfCompressionMethod=oscfCompressionMethod, osscnUserName=osscnUserName, ossvcCheckPoint=ossvcCheckPoint, osbcScratchDirectory=osbcScratchDirectory, osshMaximumAllowed=osshMaximumAllowed, ospfHidden=ospfHidden, osvxdManufacturer=osvxdManufacturer, osdoDSDirectoryServiceFlag=osdoDSDirectoryServiceFlag, osspType=osspType, osnpName=osnpName, win32ComputerSystemEntry=win32ComputerSystemEntry, osscpPlex=osscpPlex, win32CurrentTimeTable=win32CurrentTimeTable, ossjInstallDate=ossjInstallDate, osdpSystemName=osdpSystemName, osnjoCaption=osnjoCaption, oscsCreationClassName=oscsCreationClassName, ospsOSName=ospsOSName, ostdThreadWaitReason=ostdThreadWaitReason, osjoaCaption=osjoaCaption, osldProviderName=osldProviderName, ossjName=ossjName, ossjRunRepeatedly=ossjRunRepeatedly, win32NamedJobObjectActgInfoEntry=win32NamedJobObjectActgInfoEntry, ossvcExitCode=ossvcExitCode, oselfCreationDate=oselfCreationDate, osnclIndex=osnclIndex, osmldCaption=osmldCaption, osdtScreenSaverExecutable=osdtScreenSaverExecutable, osncoPersistent=osncoPersistent, ossdTagId=ossdTagId, osdoStatus=osdoStatus, osssInstallDate=osssInstallDate, osscxNoAutoRelease=osscxNoAutoRelease, osvxdControl=osvxdControl, osdpErrorDescription=osdpErrorDescription, oslogIndex=oslogIndex, osdfstStatus=osdfstStatus, win32CreateProcess=win32CreateProcess, osshCaption=osshCaption, osvxdSoftwareElementState=osvxdSoftwareElementState, ossvcState=ossvcState, ostdStartAddress=ostdStartAddress, osrcSendAdminAlert=osrcSendAdminAlert, osmldQuotasRebuilding=osmldQuotasRebuilding, osldQuotasDisabled=osldQuotasDisabled, osspVersion=osspVersion, ostdCaption=ostdCaption, osjoaThisPeriodTotalUserTime=osjoaThisPeriodTotalUserTime, win32ServerSessionEntry=win32ServerSessionEntry, osdtGridGranularity=osdtGridGranularity, osjolCaption=osjolCaption, ososBuildType=ososBuildType, oselfExtension=oselfExtension, win32LoadOrderGroupTable=win32LoadOrderGroupTable, oscspVersion=oscspVersion, osprtMetric1=osprtMetric1, osrtInstallDate=osrtInstallDate, ossatMemoryScore=ossatMemoryScore, ospfuName=ospfuName, ossjJobId=ossjJobId, oselfLastAccessed=oselfLastAccessed, osnpDescription=osnpDescription, osdoName=osdoName, ossvcServiceSpecificExitCode=ossvcServiceSpecificExitCode, osmldVolumeName=osmldVolumeName, osdpStatusInfo=osdpStatusInfo, osjolProcessMemoryLimit=osjolProcessMemoryLimit, osvlQuotasIncomplete=osvlQuotasIncomplete, osmldStatusInfo=osmldStatusInfo, osevVariableValue=osevVariableValue, osrcExpandedMiniDumpDirectory=osrcExpandedMiniDumpDirectory, osldVolumeDirty=osldVolumeDirty, ossjStatus=ossjStatus, osldQuotasRebuilding=osldQuotasRebuilding, osprtStatus=osprtStatus, win32IP4RouteTableEntry=win32IP4RouteTableEntry, ossjPriority=ossjPriority, osldCreationClassName=osldCreationClassName, ossdStartMode=ossdStartMode, osjolPerProcessUserTimeLimit=osjolPerProcessUserTimeLimit, osrtCaption=osrtCaption, ossatAssessmentState=ossatAssessmentState, ostzStandardMonth=ostzStandardMonth, win32NTLogEventEntry=win32NTLogEventEntry, ososServicePackMinorVersion=ososServicePackMinorVersion, osspID=osspID, osrtMetric5=osrtMetric5, osscpOriginatingMachine=osscpOriginatingMachine, ospfEncrypted=ospfEncrypted, ostzDaylightHour=ostzDaylightHour, osncoComment=osncoComment, oselfReadable=oselfReadable, osncoLocalName=osncoLocalName, ostzDescription=ostzDescription, win32NTEventlogFileEntry=win32NTEventlogFileEntry, osmldDescription=osmldDescription, oscfCSCreationClassName=oscfCSCreationClassName, osscxExposedLocally=osscxExposedLocally, ososTotalVisibleMemorySize=ososTotalVisibleMemorySize, osmldErrorDescription=osmldErrorDescription, oscfCreationClassName=oscfCreationClassName, ospsCreationClassName=ospsCreationClassName, osvlMaximumFileNameLength=osvlMaximumFileNameLength, osssName=osssName, ostzDaylightMonth=ostzDaylightMonth, ostdExecutionState=ostdExecutionState, oscsPrimaryOwnerName=oscsPrimaryOwnerName, osshStatus=osshStatus, oscsDNSHostName=oscsDNSHostName, win32WinSATTable=win32WinSATTable, osssDescription=osssDescription, oselfHidden=oselfHidden, osscCommand=osscCommand, osldCompressed=osldCompressed, osmldSupportsDiskQuotas=osmldSupportsDiskQuotas)
mibBuilder.exportSymbols("INFORMANT-OS", ospfuStatus=ospfuStatus, ososDistributed=ososDistributed, osdoDomainName=osdoDomainName, ossdDisplayName=ossdDisplayName, ossdErrorControl=ossdErrorControl, oscsDaylightInEffect=oscsDaylightInEffect, ososCurrentTimeZone=ososCurrentTimeZone, oscfDescription=oscfDescription, osvlDriveType=osvlDriveType, osdfsnInstallDate=osdfsnInstallDate, win32ServerConnectionTable=win32ServerConnectionTable, osshPath=osshPath, oscsNetworkServerModeEnabled=oscsNetworkServerModeEnabled, osqfeHotFixID=osqfeHotFixID, osvxdTargetOperatingSystem=osvxdTargetOperatingSystem, osmldSupportFileBasedCompression=osmldSupportFileBasedCompression, osrtNextHop=osrtNextHop, osdtCaption=osdtCaption, oscfStatus=oscfStatus, oscspIndex=oscspIndex, osshAllowMaximum=osshAllowMaximum, ossdDesktopInteract=ossdDesktopInteract, osvlIndex=osvlIndex, osvxdLanguageEdition=osvxdLanguageEdition, ossatGraphicsScore=ossatGraphicsScore, ossdState=ossdState, oscsPCSystemType=oscsPCSystemType, oscspDescription=oscspDescription, oselfFSName=oselfFSName, ospfsCaption=ospfsCaption, osjoaWriteOperationCount=osjoaWriteOperationCount, osctMonth=osctMonth, ososProductType=ososProductType, wmiNetworking=wmiNetworking, osdpPowerManagementCapabilities=osdpPowerManagementCapabilities, osevName=osevName, osdpErrorCleared=osdpErrorCleared, osrtInterfaceIndex=osrtInterfaceIndex, osscSettingID=osscSettingID, osjolActiveProcessLimit=osjolActiveProcessLimit, osscpState=osscpState, osvxdBuildNumber=osvxdBuildNumber, osmldCompressed=osmldCompressed, ospfInUseCount=ospfInUseCount, ostzDaylightDay=ostzDaylightDay, oscfEncryptionMethod=oscfEncryptionMethod, wmiJobObjects=wmiJobObjects, win32LoadOrderGroupEntry=win32LoadOrderGroupEntry, osprtCaption=osprtCaption, osrtInformation=osrtInformation, win32IP4PersistedRouteTableTable=win32IP4PersistedRouteTableTable, ossatDiskScore=ossatDiskScore, osdfstDescription=osdfstDescription, ososDataExecPreventionAvailable=ososDataExecPreventionAvailable, ososCaption=ososCaption, osldNumberOfBlocks=osldNumberOfBlocks, ostdCSName=ostdCSName, osdtScreenSaverSecure=osdtScreenSaverSecure, ossatD3DScore=ossatD3DScore, ostzStandardYear=ostzStandardYear, ospsPeakWorkingSetSize=ospsPeakWorkingSetSize, osdfsnState=osdfsnState, osscnName=osscnName, oselfCSCreationClassName=oselfCSCreationClassName, osdtIconTitleSize=osdtIconTitleSize, win32Shutdown=win32Shutdown, osncoUserName=osncoUserName, osscnDescription=osscnDescription, oscsBootupState=oscsBootupState, ossdSystemCreationClassName=ossdSystemCreationClassName, ostzStandardDayOfWeek=ostzStandardDayOfWeek, osvxdV86API=osvxdV86API, oscsChassisBootupState=oscsChassisBootupState, ostdHandle=ostdHandle, ossdStatus=ossdStatus, ospsDescription=ospsDescription, oselfStatus=oselfStatus, osdpPrimaryPartition=osdpPrimaryPartition, osldCaption=osldCaption, osldSupportsDiskQuotas=osldSupportsDiskQuotas, osdoInstallDate=osdoInstallDate, oscsPartOfDomain=oscsPartOfDomain, osdoDomainControllerAddress=osdoDomainControllerAddress, ospsPageFileUsage=ospsPageFileUsage, win32VolumeEntry=win32VolumeEntry, oselfEncryptionMethod=oselfEncryptionMethod, osrcName=osrcName, ostdInstallDate=ostdInstallDate, oscfVersion=oscfVersion, osrcIndex=osrcIndex, wmiProcesses=wmiProcesses, osrtName=osrtName, ososCSCreationClassName=ososCSCreationClassName, osvxdIndex=osvxdIndex, ossvcDesktopInteract=ossvcDesktopInteract, ossdCreationClassName=ossdCreationClassName, osbcBootDirectory=osbcBootDirectory, osdfstInstallDate=osdfstInstallDate, osdoCreationClassName=osdoCreationClassName, osmldFreeSpace=osmldFreeSpace, ossvcCreationClassName=ossvcCreationClassName, osnpSupportsQualityofService=osnpSupportsQualityofService, osctMinute=osctMinute, osdoDomainGUID=osdoDomainGUID, PYSNMP_MODULE_ID=wmiOperatingSystem, osdoDSDnsControllerFlag=osdoDSDnsControllerFlag, osvlFreeSpace=osvlFreeSpace, ossdDescription=ossdDescription, win32VolumeTable=win32VolumeTable, osevIndex=osevIndex, ossjElapsedTime=ossjElapsedTime, win32NTDomainTable=win32NTDomainTable, osmldInstallDate=osmldInstallDate, osqfeInstalledBy=osqfeInstalledBy, osdpDescription=osdpDescription, osvxdCaption=osvxdCaption, osdpInstallDate=osdpInstallDate, osbcName=osbcName, oscfGroup=oscfGroup, osldAccess=osldAccess, oscsNameFormat=oscsNameFormat, osjolAffinity=osjolAffinity, win32NTEventlogFileTable=win32NTEventlogFileTable, ossjTimeSubmitted=ossjTimeSubmitted, win32PageFileSettingTable=win32PageFileSettingTable, win32ThreadTable=win32ThreadTable, osdfsnDescription=osdfsnDescription, osmldVolumeSerialNumber=osmldVolumeSerialNumber, ospsCSCreationClassName=ospsCSCreationClassName, osvxdIdentificationCode=osvxdIdentificationCode, ospsQuotaNonPagedPoolUsage=ospsQuotaNonPagedPoolUsage, ossvcProcessId=ossvcProcessId, ossjOwner=ossjOwner, ospsStatus=ospsStatus, ospsOtherOperationCount=ospsOtherOperationCount, osscnConnectionID=osscnConnectionID, osrtAge=osrtAge, ospfCompressed=ospfCompressed, osncoRemoteName=osncoRemoteName, oscsPowerOnPasswordStatus=oscsPowerOnPasswordStatus, ostzStandardMinute=ostzStandardMinute, ospsCaption=ospsCaption, ossvcStarted=ossvcStarted, ospfDrive=ospfDrive, osevDescription=osevDescription, oslogDriverEnabled=oslogDriverEnabled, osnpInstallDate=osnpInstallDate, ospsHandleCount=ospsHandleCount, win32ThreadEntry=win32ThreadEntry, osncoStatus=osncoStatus, osscnComputerName=osscnComputerName, osvxdSerialNumber=osvxdSerialNumber, osnpGuaranteesSequencing=osnpGuaranteesSequencing, osnjoCollectionID=osnjoCollectionID, osshIndex=osshIndex, ospfCreationDate=ospfCreationDate, wmiOperatingSystem=wmiOperatingSystem, ospfuCaption=ospfuCaption, ososOSLanguage=ososOSLanguage, osnpIndex=osnpIndex, win32ShadowContextEntry=win32ShadowContextEntry, ostzDaylightDayOfWeek=ostzDaylightDayOfWeek, osdpStartingOffset=osdpStartingOffset, osncoInstallDate=osncoInstallDate, oscspName=oscspName, ososRegisteredUser=ososRegisteredUser, ospsSessionId=ospsSessionId, osncoProviderName=osncoProviderName, win32ShadowCopyEntry=win32ShadowCopyEntry, osnclDescription=osnclDescription, oscfFileName=oscfFileName, win32OperatingSystemTable=win32OperatingSystemTable, osldLastErrorCode=osldLastErrorCode, win32ShadowProviderEntry=win32ShadowProviderEntry, osnclManufacturer=osnclManufacturer, osssComputerName=osssComputerName, oselfFileName=oselfFileName, osncoConnectionType=osncoConnectionType, ossvcServiceType=ossvcServiceType, ospsMaximumWorkingSetSize=ospsMaximumWorkingSetSize, osscpHardwareAssisted=osscpHardwareAssisted, osldVolumeSerialNumber=osldVolumeSerialNumber, ostzDaylightMinute=ostzDaylightMinute, ospsCSName=ospsCSName, win32ShadowProviderTable=win32ShadowProviderTable, wmiMultimedia=wmiMultimedia, ospfsMaximumSize=ospfsMaximumSize, osdfstCaption=osdfstCaption, oscspVendor=oscspVendor, win32PageFileUsageEntry=win32PageFileUsageEntry, ososFreeVirtualMemory=ososFreeVirtualMemory, osldDriveType=osldDriveType, osldSize=osldSize, oscfCSName=oscfCSName, oscspUUID=oscspUUID, ososLocalDateTime=ososLocalDateTime, osdfstShareName=osdfstShareName, osldStatusInfo=osldStatusInfo, ostdStatus=ostdStatus, ostzDaylightYear=ostzDaylightYear, ospfCreationClassName=ospfCreationClassName, ospfPath=ospfPath, osctDay=osctDay, osdpPNPDeviceID=osdpPNPDeviceID, ostzDaylightMillisecond=ostzDaylightMillisecond, win32NetworkProtocolEntry=win32NetworkProtocolEntry, ospfFSName=ospfFSName, osdtCoolSwitch=osdtCoolSwitch, oselCategoryString=oselCategoryString, oselEventIdentifier=oselEventIdentifier, osmldQuotasIncomplete=osmldQuotasIncomplete, oselfCompressionMethod=oselfCompressionMethod, oselfEightDotThreeFileName=oselfEightDotThreeFileName, ossjJobStatus=ossjJobStatus, ossatTimeTaken=ossatTimeTaken, win32CurrentTimeEntry=win32CurrentTimeEntry, oselInsertionStrings=oselInsertionStrings, osvlDirtyBitSet=osvlDirtyBitSet, osvxdName=osvxdName, oselEventCode=oselEventCode, ostdElapsedTime=ostdElapsedTime, osdpDiskIndex=osdpDiskIndex, osnpMessageOriented=osnpMessageOriented, oselfMaxFileSize=oselfMaxFileSize, osssIndex=osssIndex, osdpAccess=osdpAccess, osjoaOtherOperationCount=osjoaOtherOperationCount, osqfeFixComments=osqfeFixComments, ososLargeSystemCache=ososLargeSystemCache, oscfFileSize=oscfFileSize, ospsProcessId=ospsProcessId, osnpSupportsBroadcasting=osnpSupportsBroadcasting, oscsSupportContactDescription=oscsSupportContactDescription, osevInstallDate=osevInstallDate, osnclName=osnclName, ososDescription=ososDescription, osdfsnName=osdfsnName, ossdCaption=ossdCaption, osvxdVersion=osvxdVersion, ossjUntilTime=ossjUntilTime, osdfstState=osdfstState, oscfEightDotThreeFileName=oscfEightDotThreeFileName, oscfCaption=oscfCaption, osncoResourceType=osncoResourceType, ososSerialNumber=ososSerialNumber, ospfuIndex=ospfuIndex, osdoDSGlobalCatalogFlag=osdoDSGlobalCatalogFlag, oselfCreationClassName=oselfCreationClassName, ososMaxNumberOfProcesses=ososMaxNumberOfProcesses, oscspIdentifyingNumber=oscspIdentifyingNumber, osdtIconSpacing=osdtIconSpacing, osvxdServiceTableSize=osvxdServiceTableSize, oscsStatus=oscsStatus, osscxDifferential=osscxDifferential)
mibBuilder.exportSymbols("INFORMANT-OS", ossatCPUScore=ossatCPUScore, oselfFileType=oselfFileType, win32MappedLogicalDiskEntry=win32MappedLogicalDiskEntry, ospsExecutionState=ospsExecutionState, oscsAutomaticResetBootOption=oscsAutomaticResetBootOption, oscsBootOptionOnWatchDog=oscsBootOptionOnWatchDog, win32ServiceEntry=win32ServiceEntry, ossvcCaption=ossvcCaption, osdfsnCaption=osdfsnCaption, oselfOverWritePolicy=oselfOverWritePolicy, oscsDomain=oscsDomain, osldAvailability=osldAvailability, osjolSchedulingClass=osjolSchedulingClass, oscsNumberOfLogicalProcessors=oscsNumberOfLogicalProcessors, ospfLastAccessed=ospfLastAccessed, wmiOperatingSystemSettings=wmiOperatingSystemSettings, wmiServices=wmiServices, oscsOEMStringArray=oscsOEMStringArray, osmldDeviceID=osmldDeviceID, osscpNotSurfaced=osscpNotSurfaced, ossvcDisplayName=ossvcDisplayName, win32DFSNodeEntry=win32DFSNodeEntry, osrtType=osrtType, osdfsnTimeout=osdfsnTimeout, oselLogfile=oselLogfile, osrtMetric2=osrtMetric2, osncoDescription=osncoDescription, osmldPurpose=osmldPurpose, osrcDescription=osrcDescription, osscnNumberOfFiles=osscnNumberOfFiles, win32BootConfigurationEntry=win32BootConfigurationEntry, oscsSystemType=oscsSystemType, osrcWriteToSystemLog=osrcWriteToSystemLog, ospsOSCreationClassName=ospsOSCreationClassName, win32ShareEntry=win32ShareEntry, ostzCaption=ostzCaption, oselIndex=oselIndex, ospfuCurrentUsage=ospfuCurrentUsage, osnpSupportsDisconnectData=osnpSupportsDisconnectData, oscsInstallDate=oscsInstallDate, oscsBootOptionOnLimit=oscsBootOptionOnLimit, win32WinSATEntry=win32WinSATEntry, osldPurpose=osldPurpose, win32NamedJobObjectLimitSetTable=win32NamedJobObjectLimitSetTable, ospfAccessMask=ospfAccessMask, oscsPowerSupplyState=oscsPowerSupplyState, win32ServiceTable=win32ServiceTable, wmiPageFiles=wmiPageFiles, osdtWallpaperTiled=osdtWallpaperTiled, osvxdOtherTargetOS=osvxdOtherTargetOS, win32QuickFixEngineeringEntry=win32QuickFixEngineeringEntry, osdpBlockSize=osdpBlockSize, osldErrorCleared=osldErrorCleared, oscfManufacturer=oscfManufacturer, win32NetworkConnectionEntry=win32NetworkConnectionEntry, osssIdleTime=osssIdleTime, ossjNotify=ossjNotify, ossjStartTime=ossjStartTime, osprtNextHop=osprtNextHop, osqsDefaultLimit=osqsDefaultLimit, ostzStandardMillisecond=ostzStandardMillisecond, win32TimeZoneEntry=win32TimeZoneEntry, ososMaxProcessMemorySize=ososMaxProcessMemorySize, osjolIndex=osjolIndex, ostzStandardName=ostzStandardName, win32StartupCommandEntry=win32StartupCommandEntry, osscxTransportable=osscxTransportable, osdtSettingID=osdtSettingID, osrtDestination=osrtDestination, oselfPath=oselfPath, oscsEnableDaylightSavingsTime=oscsEnableDaylightSavingsTime, ospsHandle=ospsHandle, osnjoBasicUIRestrictions=osnjoBasicUIRestrictions, oselfInstallDate=oselfInstallDate, ospsKernelModeTime=ospsKernelModeTime, osdoDSPriDomainControllerFlag=osdoDSPriDomainControllerFlag, osvxdPMAPI=osvxdPMAPI, osldConfigManagerUserConfig=osldConfigManagerUserConfig, osdfsnIndex=osdfsnIndex, osldFileSystem=osldFileSystem, ossvcErrorControl=ossvcErrorControl, win32NamedJobObjectLimitSetEntry=win32NamedJobObjectLimitSetEntry, win32TimeZoneTable=win32TimeZoneTable, ossvcSystemName=ossvcSystemName, ososServicePackMajorVersion=ososServicePackMajorVersion, osdfsnStatus=osdfsnStatus, osdpPurpose=osdpPurpose, osqfeName=osqfeName, ostzIndex=ostzIndex, ospsReadOperationCount=ospsReadOperationCount, ososOSProductSuite=ososOSProductSuite, oselfCompressed=oselfCompressed, osdtWallpaperStretched=osdtWallpaperStretched, ospfEightDotThreeFileName=ospfEightDotThreeFileName, ospsPageFaults=ospsPageFaults, ossvcWaitHint=ossvcWaitHint, osspVersionID=osspVersionID, oselfEncrypted=oselfEncrypted, osdtScreenSaverActive=osdtScreenSaverActive, ossdAcceptPause=ossdAcceptPause, osprtIndex=osprtIndex, win32PageFileSettingEntry=win32PageFileSettingEntry, osvlLabel=osvlLabel, ospfStatus=ospfStatus, oscfCreationDate=oscfCreationDate, osnpSupportsConnectData=osnpSupportsConnectData, win32ComputerSystemProductEntry=win32ComputerSystemProductEntry, ospfsIndex=ospfsIndex, osqfeCaption=osqfeCaption, ostdProcessCreationClassName=ostdProcessCreationClassName, osjoaPeakProcessMemoryUsed=osjoaPeakProcessMemoryUsed, osqfeDescription=osqfeDescription, win32QuotaSettingTable=win32QuotaSettingTable, oscsAdminPasswordStatus=oscsAdminPasswordStatus, osscxName=osscxName, ospfuDescription=ospfuDescription, osscxNotSurfaced=osscxNotSurfaced, win32IP4PersistedRouteTableEntry=win32IP4PersistedRouteTableEntry, osrcDebugInfoType=osrcDebugInfoType, ossvcDescription=ossvcDescription, osscxImported=osscxImported, ossvcAcceptPause=ossvcAcceptPause, osscpDeviceObject=osscpDeviceObject, osspName=osspName, ososNumberOfLicensedUsers=ososNumberOfLicensedUsers, ossvcName=ossvcName, wmiDesktop=wmiDesktop, ostzStandardDay=ostzStandardDay, oscspSKUNumber=oscspSKUNumber, osrcMiniDumpDirectory=osrcMiniDumpDirectory, osldConfigManagerErrorCode=osldConfigManagerErrorCode, osqsSettingID=osqsSettingID, ososCSDVersion=ososCSDVersion, oscfSystem=oscfSystem, osdoDSWritableFlag=osdoDSWritableFlag, ospsQuotaPagedPoolUsage=ospsQuotaPagedPoolUsage, ossdServiceSpecificExitCode=ossdServiceSpecificExitCode, osdpBootPartition=osdpBootPartition, osrcSettingID=osrcSettingID, osscpSetID=osscpSetID, osscCaption=osscCaption, osqsDefaultWarningLimit=osqsDefaultWarningLimit, oscfInstallDate=oscfInstallDate, ospsCreationDate=ospsCreationDate, oscsLastLoadInfo=oscsLastLoadInfo, osshInstallDate=osshInstallDate, osdpSystemCreationClassName=osdpSystemCreationClassName, osncoConnectionState=osncoConnectionState, ospfuPeakUsage=ospfuPeakUsage, ososManufacturer=ososManufacturer, osqfeCSName=osqfeCSName, osjoaThisPeriodTotalKernelTime=osjoaThisPeriodTotalKernelTime, osrtDescription=osrtDescription, osscpProviderID=osscpProviderID, osrcWriteDebugInfo=osrcWriteDebugInfo, osssSessionType=osssSessionType, osvlDriveLetter=osvlDriveLetter, win32ServerSessionTable=win32ServerSessionTable, ossvcStartMode=ossvcStartMode, ostdDescription=ostdDescription, osscnActiveTime=osscnActiveTime, osldDeviceID=osldDeviceID, osjolSettingID=osjolSettingID, osjoaOtherTransferCount=osjoaOtherTransferCount, osdoDSKerberosDistCenterFlag=osdoDSKerberosDistCenterFlag, osrcDebugFilePath=osrcDebugFilePath, osdpCaption=osdpCaption, ossjDaysOfWeek=ossjDaysOfWeek, osdoClientSiteName=osdoClientSiteName, osssUserName=osssUserName, osmldPowerManagementCapabilities=osmldPowerManagementCapabilities, osrtMetric1=osrtMetric1, osvlQuotasEnabled=osvlQuotasEnabled, osnpSupportsGuaranteedBandwidth=osnpSupportsGuaranteedBandwidth, osjolPerJobUserTimeLimit=osjolPerJobUserTimeLimit, osscnStatus=osscnStatus, ososPAEEnabled=ososPAEEnabled, oselfAccessMask=oselfAccessMask, win32ProcessEntry=win32ProcessEntry, osscxIndex=osscxIndex, win32DesktopTable=win32DesktopTable, osrcExpandedDebugFilePath=osrcExpandedDebugFilePath, osscpExposedRemotely=osscpExposedRemotely, oselfArchive=oselfArchive, ossdAcceptStop=ossdAcceptStop, ospsMinimumWorkingSetSize=ospsMinimumWorkingSetSize, osscnShareName=osscnShareName, osdpPowerManagementSupported=osdpPowerManagementSupported, ososTotalVirtualMemorySize=ososTotalVirtualMemorySize, ostdCreationClassName=ostdCreationClassName, osdfstName=osdfstName, osvxdDeviceDescriptorBlock=osvxdDeviceDescriptorBlock, osmldSessionID=osmldSessionID, wmiDrivers=wmiDrivers, ososTotalSwapSpaceSize=ososTotalSwapSpaceSize, osdoDNSForestName=osdoDNSForestName, osjolMaximumWorkingSetSize=osjolMaximumWorkingSetSize, osdpBootable=osdpBootable, ososSizeStoredInPagingFiles=ososSizeStoredInPagingFiles, ostzDaylightSecond=ostzDaylightSecond, osvxdDescription=osvxdDescription, osscpServiceMachine=osscpServiceMachine, osctHour=osctHour, win32PageFileUsageTable=win32PageFileUsageTable, osdfstIndex=osdfstIndex, ospfMaximumSize=ospfMaximumSize, osldQuotasIncomplete=osldQuotasIncomplete, osncoRemotePath=osncoRemotePath, oscsAutomaticManagedPagefile=oscsAutomaticManagedPagefile, ossvcSystemCreationClassName=ossvcSystemCreationClassName, osshDescription=osshDescription, osbcConfigurationPath=osbcConfigurationPath, osncoCaption=osncoCaption, osscpImported=osscpImported, ossdStarted=ossdStarted, osrcAutoReboot=osrcAutoReboot, osldBlockSize=osldBlockSize, osmldErrorCleared=osmldErrorCleared, osdtDragFullWindows=osdtDragFullWindows, ossjIndex=ossjIndex, ososName=ososName, oselTimeWritten=oselTimeWritten, osdpLastErrorCode=osdpLastErrorCode, osnclInstallDate=osnclInstallDate, osnpSupportsEncryption=osnpSupportsEncryption, osdoDomainControllerAddressType=osdoDomainControllerAddressType, win32ComputerSystemProductTable=win32ComputerSystemProductTable, oscsResetLimit=oscsResetLimit, osscName=osscName, win32MappedLogicalDiskTable=win32MappedLogicalDiskTable, oselfCaption=oselfCaption, ospsName=ospsName, ossdIndex=ossdIndex, oselfManufacturer=oselfManufacturer, ososCreationClassName=ososCreationClassName, win32OSRecoveryConfigTable=win32OSRecoveryConfigTable, osscpTransportable=osscpTransportable, osldIndex=osldIndex, osnpSupportsFragmentation=osnpSupportsFragmentation, osprtName=osprtName, ospfReadable=ospfReadable, osctYear=osctYear, osldInstallDate=osldInstallDate, ospfFileName=ospfFileName, ososDataExecPrevention32BitAppl=ososDataExecPrevention32BitAppl, oslogDescription=oslogDescription, ossdSystemName=ossdSystemName, oscsResetCapability=oscsResetCapability, osctWeekInMonth=osctWeekInMonth, ospfManufacturer=ospfManufacturer, ossdPathName=ossdPathName, oscfCompressed=oscfCompressed, ostdCSCreationClassName=ostdCSCreationClassName, osscpClientAccessible=osscpClientAccessible)
mibBuilder.exportSymbols("INFORMANT-OS", osprtMask=osprtMask, osdoDescription=osdoDescription, osdfstServerName=osdfstServerName, osdtDescription=osdtDescription, osprtDescription=osprtDescription, oslogGroupOrder=oslogGroupOrder, win32ShareTable=win32ShareTable, oselComputerName=oselComputerName, osdoPrimaryOwnerContact=osdoPrimaryOwnerContact, ostdOSCreationClassName=ostdOSCreationClassName, oselfCSName=oselfCSName, ostzSettingID=ostzSettingID, win32NetworkConnectionTable=win32NetworkConnectionTable, oscsRoles=oscsRoles, win32NamedJobObjectEntry=win32NamedJobObjectEntry, osvlIndexingEnabled=osvlIndexingEnabled, osbcCaption=osbcCaption, ossatIndex=ossatIndex, osqsIndex=osqsIndex, ospsWindowsVersion=ospsWindowsVersion, oselfFileSize=oselfFileSize, ospfsDescription=ospfsDescription, win32ServerConnectionEntry=win32ServerConnectionEntry, oscfAccessMask=oscfAccessMask, osmldPNPDeviceID=osmldPNPDeviceID, wmiStorage=wmiStorage, osmldConfigManagerErrorCode=osmldConfigManagerErrorCode, oscfIndex=oscfIndex, ososSystemDirectory=ososSystemDirectory, osrcOverwriteExistingDebugFile=osrcOverwriteExistingDebugFile, osscxPlex=osscxPlex, ostdName=ostdName, osldSystemName=osldSystemName, osbcTempDirectory=osbcTempDirectory, ostdUserModeTime=ostdUserModeTime, osdoDSDnsForestFlag=osdoDSDnsForestFlag, win32EnvironmentTable=win32EnvironmentTable, osmldSize=osmldSize, ospfInstallDate=ospfInstallDate, osnpMinimumAddressSize=osnpMinimumAddressSize, ospfWriteable=ospfWriteable, win32DriverVXDEntry=win32DriverVXDEntry, win32ShadowContextTable=win32ShadowContextTable, oselfName=oselfName, ossjCaption=ossjCaption, oselfVersion=oselfVersion, osvlAutomount=osvlAutomount, ossvcTagId=ossvcTagId, oselfDescription=oselfDescription, ospsWorkingSetSize=ospsWorkingSetSize, osrtMetric4=osrtMetric4, win32NTDomainEntry=win32NTDomainEntry, win32NetworkClientEntry=win32NetworkClientEntry)
