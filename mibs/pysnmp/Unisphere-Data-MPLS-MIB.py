#
# PySNMP MIB module Unisphere-Data-MPLS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-MPLS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:24:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, Unsigned32, TimeTicks, Counter32, Integer32, Bits, Counter64, NotificationType, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Unsigned32", "TimeTicks", "Counter32", "Integer32", "Bits", "Counter64", "NotificationType", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress")
DisplayString, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "TextualConvention")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
UsdNextIfIndex, = mibBuilder.importSymbols("Unisphere-Data-TC", "UsdNextIfIndex")
usdMplsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54))
usdMplsMIB.setRevisions(('2002-11-04 15:35', '2002-04-03 20:44',))
if mibBuilder.loadTexts: usdMplsMIB.setLastUpdated('200211041535Z')
if mibBuilder.loadTexts: usdMplsMIB.setOrganization('Juniper Networks, Inc.')
class UsdMajorCfgVciRanges(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(33, 65535)

class UsdMajorCfgVpiRanges(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class UsdMinorCfgBWRanges(TextualConvention, Unsigned32):
    status = 'current'

class UsdMinorCfgHoldingAndSetupPriorityRanges(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 7)

class UsdMinorCfgRetryTimesAndNorouteRanges(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class UsdMinorCfgRetryIntervalAndNorouteRanges(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 60)

class UsdProfileCfgBWRanges(TextualConvention, Unsigned32):
    status = 'current'

class UsdProfileCfgHoldingAndSetupPriorityRanges(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 7)

class UsdProfileCfgRetryTimesAndNorouteRanges(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class UsdProfileCfgRetryIntervalAndNorouteRanges(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 60)

usdMplsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1))
usdMplsLsrGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1))
usdMplsMajorLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2))
usdMplsMinorLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3))
usdMplsTunnelProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4))
usdMplsExplicitPath = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5))
usdMplsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1))
usdMplsGroupList = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2))
usdMplsIfMajorLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1))
usdMplsIfMinorLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1))
usdMplsMinorLayerList = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2))
usdMplsTunnelProfileGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1))
usdMplsTunnelProfileList = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2))
usdMplsExplicitPathGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1))
usdMplsGroupMplsEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupMplsEnable.setStatus('current')
usdMplsGroupReopTimer = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800)).clone(3600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupReopTimer.setStatus('current')
usdMplsGroupLabelRangeLow = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1048576)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLabelRangeLow.setStatus('current')
usdMplsGroupLabelRangeHigh = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1048576)).clone(1048575)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLabelRangeHigh.setStatus('current')
usdMplsGroupLspRetryTimesNoroute = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLspRetryTimesNoroute.setStatus('current')
usdMplsGroupLspRetryIntervalNoroute = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLspRetryIntervalNoroute.setStatus('current')
usdMplsGroupLspRetryTimes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLspRetryTimes.setStatus('current')
usdMplsGroupLspRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLspRetryInterval.setStatus('current')
usdMplsGroupLdpRetryTimesNoroute = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLdpRetryTimesNoroute.setStatus('current')
usdMplsGroupLdpRetryIntervalNoroute = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLdpRetryIntervalNoroute.setStatus('current')
usdMplsGroupLdpRetryTimes = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLdpRetryTimes.setStatus('current')
usdMplsGroupLdpRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLdpRetryInterval.setStatus('current')
usdMplsGroupLdpSessionRetries = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLdpSessionRetries.setStatus('current')
usdMplsGroupLdpSessionRetryTimer = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLdpSessionRetryTimer.setStatus('current')
usdMplsGroupTopologyDrivenIpProfileName = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenIpProfileName.setStatus('current')
usdMplsGroupTopologyDrivenLdpEgressIpIntf = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenLdpEgressIpIntf.setStatus('current')
usdMplsGroupTopologyDrivenLdpIngressIpIntf = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenLdpIngressIpIntf.setStatus('current')
usdMplsGroupTopologyDrivenLdpEgressIpIntfHostOnly = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenLdpEgressIpIntfHostOnly.setStatus('current')
usdMplsGroupTopologyDrivenLdpIngressIpIntfHostOnly = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 19), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenLdpIngressIpIntfHostOnly.setStatus('current')
usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyListType = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accessList", 1), ("prefixList", 2), ("noPolicyList", 3))).clone('noPolicyList')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyListType.setStatus('current')
usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyListType = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accessList", 1), ("prefixList", 2), ("noPolicyList", 3))).clone('noPolicyList')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyListType.setStatus('current')
usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyList = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyList.setStatus('current')
usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyList = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyList.setStatus('current')
usdMplsGroupTopologyDrivenLdp = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupTopologyDrivenLdp.setStatus('current')
usdMplsGroupLspLabelDistCtrlMode = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ordered", 0), ("independent", 1), ("undefined", 2))).clone('ordered')).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdMplsGroupLspLabelDistCtrlMode.setStatus('current')
usdMplsGroupLdpAdvHostOnly = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 26), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupLdpAdvHostOnly.setStatus('current')
usdMplsGroupLsrState = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdMplsGroupLsrState.setStatus('current')
usdMplsGroupReopNow = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 1, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdMplsGroupReopNow.setStatus('current')
usdMplsGroupTargetedHelloSendTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 1), )
if mibBuilder.loadTexts: usdMplsGroupTargetedHelloSendTable.setStatus('current')
usdMplsGroupTargetedHelloSendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 1, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsGroupTargetedHelloSendAddress"))
if mibBuilder.loadTexts: usdMplsGroupTargetedHelloSendEntry.setStatus('current')
usdMplsGroupTargetedHelloSendAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: usdMplsGroupTargetedHelloSendAddress.setStatus('current')
usdMplsGroupLdpTargetedHelloSendMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("add", 0), ("delete", 1), ("none", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsGroupLdpTargetedHelloSendMode.setStatus('current')
usdMplsGroupTargetedHelloReceiveTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 2), )
if mibBuilder.loadTexts: usdMplsGroupTargetedHelloReceiveTable.setStatus('current')
usdMplsGroupTargetedHelloReceiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 2, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsGroupTargetedHelloReceiveAddress"))
if mibBuilder.loadTexts: usdMplsGroupTargetedHelloReceiveEntry.setStatus('current')
usdMplsGroupTargetedHelloReceiveAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: usdMplsGroupTargetedHelloReceiveAddress.setStatus('current')
usdMplsGroupLdpTargetedHelloReceiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("add", 0), ("delete", 1), ("none", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsGroupLdpTargetedHelloReceiveMode.setStatus('current')
usdMplsGroupLdpLabelAdverRouteListTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 3), )
if mibBuilder.loadTexts: usdMplsGroupLdpLabelAdverRouteListTable.setStatus('current')
usdMplsGroupLdpLabelAdverRouteListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 3, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpLabelAdverRouteListName"), (0, "Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpLabelAdverNbrListName"))
if mibBuilder.loadTexts: usdMplsGroupLdpLabelAdverRouteListEntry.setStatus('current')
usdMplsGroupLdpLabelAdverRouteListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: usdMplsGroupLdpLabelAdverRouteListName.setStatus('current')
usdMplsGroupLdpLabelAdverNbrListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: usdMplsGroupLdpLabelAdverNbrListName.setStatus('current')
usdMplsGroupLabelAdverListMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("add", 0), ("delete", 1), ("none", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsGroupLabelAdverListMode.setStatus('current')
usdMplsGroupLdpProfileTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 4), )
if mibBuilder.loadTexts: usdMplsGroupLdpProfileTable.setStatus('current')
usdMplsGroupLdpProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 4, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpProfileName"))
if mibBuilder.loadTexts: usdMplsGroupLdpProfileEntry.setStatus('current')
usdMplsGroupLdpProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: usdMplsGroupLdpProfileName.setStatus('current')
usdMplsGroupLdpProfileHelloHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsGroupLdpProfileHelloHoldTime.setStatus('current')
usdMplsGroupLdpProfileCrLdpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsGroupLdpProfileCrLdpAdminState.setStatus('current')
usdMplsGroupLdpProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsGroupLdpProfileRowStatus.setStatus('current')
usdMplsGroupRsvpProfileTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 5), )
if mibBuilder.loadTexts: usdMplsGroupRsvpProfileTable.setStatus('current')
usdMplsGroupRsvpProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 5, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsGroupRsvpProfileName"))
if mibBuilder.loadTexts: usdMplsGroupRsvpProfileEntry.setStatus('current')
usdMplsGroupRsvpProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: usdMplsGroupRsvpProfileName.setStatus('current')
usdMplsGroupRsvpProfileRefreshPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000000)).clone(30000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsGroupRsvpProfileRefreshPeriod.setStatus('current')
usdMplsGroupRsvpProfileCleanupTimeoutFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsGroupRsvpProfileCleanupTimeoutFactor.setStatus('current')
usdMplsGroupRsvpProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 1, 2, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsGroupRsvpProfileRowStatus.setStatus('current')
usdMplsIfMajorNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 1), UsdNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdMplsIfMajorNextIfIndex.setStatus('current')
usdMplsIfMajorTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2), )
if mibBuilder.loadTexts: usdMplsIfMajorTable.setStatus('current')
usdMplsIfMajorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsIfMajorIndex"))
if mibBuilder.loadTexts: usdMplsIfMajorEntry.setStatus('current')
usdMplsIfMajorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdMplsIfMajorIndex.setStatus('current')
usdMplsIfMajorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorRowStatus.setStatus('current')
usdMplsIfMajorLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorLowerIfIndex.setStatus('current')
usdMplsIfMajorAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorAdminStatus.setStatus('current')
usdMplsIfMajorLdpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorLdpAdminStatus.setStatus('current')
usdMplsIfMajorLdpProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorLdpProfileName.setStatus('current')
usdMplsIfMajorLdpVpiStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 7), UsdMajorCfgVpiRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorLdpVpiStart.setStatus('current')
usdMplsIfMajorLdpVpiStop = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 8), UsdMajorCfgVpiRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorLdpVpiStop.setStatus('current')
usdMplsIfMajorLdpVciStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 9), UsdMajorCfgVciRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorLdpVciStart.setStatus('current')
usdMplsIfMajorLdpVciStop = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 10), UsdMajorCfgVciRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorLdpVciStop.setStatus('current')
usdMplsIfMajorRsvpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorRsvpAdminStatus.setStatus('current')
usdMplsIfMajorRsvpProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorRsvpProfileName.setStatus('current')
usdMplsIfMajorRsvpVpiStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 13), UsdMajorCfgVpiRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorRsvpVpiStart.setStatus('current')
usdMplsIfMajorRsvpVpiStop = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 14), UsdMajorCfgVpiRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorRsvpVpiStop.setStatus('current')
usdMplsIfMajorRsvpVciStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 15), UsdMajorCfgVciRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorRsvpVciStart.setStatus('current')
usdMplsIfMajorRsvpVciStop = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 16), UsdMajorCfgVciRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMajorRsvpVciStop.setStatus('current')
usdMplsIfMajorLabelSpaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("rsvpVpiVci", 1), ("rsvpVpi", 2), ("rsvpVci", 3), ("ldpVpiVci", 4), ("ldpVpi", 5), ("ldpVci", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdMplsIfMajorLabelSpaceType.setStatus('current')
usdMplsIfMajorOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("lowerLayerNotAvailable", 0), ("lowerLayerDown", 1), ("up", 2), ("configIncompleteInterfaceEnabled", 3), ("configIncompleteInterfaceDisabled", 4), ("interfaceDisabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdMplsIfMajorOpState.setStatus('current')
usdMplsIfMajorCrLdpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 2, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdMplsIfMajorCrLdpAdminState.setStatus('current')
usdMplsIfMinorNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 1), UsdNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdMplsIfMinorNextIfIndex.setStatus('current')
usdMplsIfMinorTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2), )
if mibBuilder.loadTexts: usdMplsIfMinorTable.setStatus('current')
usdMplsIfMinorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsIfMinorIndex"))
if mibBuilder.loadTexts: usdMplsIfMinorEntry.setStatus('current')
usdMplsIfMinorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdMplsIfMinorIndex.setStatus('current')
usdMplsIfMinorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorRowStatus.setStatus('current')
usdMplsIfMinorLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdMplsIfMinorLowerIfIndex.setStatus('current')
usdMplsIfMinorAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorAdminStatus.setStatus('current')
usdMplsIfMinorEndpointAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorEndpointAddress.setStatus('current')
usdMplsIfMinorEndpointDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorEndpointDstMask.setStatus('current')
usdMplsIfMinorTunnelMetricMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("absolute", 0), ("relative", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorTunnelMetricMode.setStatus('current')
usdMplsIfMinorAbsoluteTunnelMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorAbsoluteTunnelMetric.setStatus('current')
usdMplsIfMinorRelativeTunnelMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorRelativeTunnelMetric.setStatus('current')
usdMplsIfMinorLabelDistProto = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("crLdp", 0), ("rsvpTe", 1), ("undefined", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorLabelDistProto.setStatus('current')
usdMplsIfMinorAnnounceToOspf = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorAnnounceToOspf.setStatus('current')
usdMplsIfMinorAnnounceToIsis = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorAnnounceToIsis.setStatus('current')
usdMplsIfMinorAnnounceToBgp = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorAnnounceToBgp.setStatus('current')
usdMplsIfMinorBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 14), UsdMinorCfgBWRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorBandwidth.setStatus('current')
usdMplsIfMinorAffinity = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4)).clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorAffinity.setStatus('current')
usdMplsIfMinorAffinityMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4)).clone(hexValue="0000ffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorAffinityMask.setStatus('current')
usdMplsIfMinorSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 17), UsdMinorCfgHoldingAndSetupPriorityRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorSetupPriority.setStatus('current')
usdMplsIfMinorHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 18), UsdMinorCfgHoldingAndSetupPriorityRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorHoldingPriority.setStatus('current')
usdMplsIfMinorTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorTunnelName.setStatus('current')
usdMplsIfMinorTunnelRetryTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 20), UsdMinorCfgRetryTimesAndNorouteRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorTunnelRetryTimes.setStatus('current')
usdMplsIfMinorTunnelRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 21), UsdMinorCfgRetryIntervalAndNorouteRanges().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorTunnelRetryInterval.setStatus('current')
usdMplsIfMinorTunnelRetryTimesNoroute = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 22), UsdMinorCfgRetryTimesAndNorouteRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorTunnelRetryTimesNoroute.setStatus('current')
usdMplsIfMinorTunnelRetryIntervalNoroute = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 23), UsdMinorCfgRetryIntervalAndNorouteRanges().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorTunnelRetryIntervalNoroute.setStatus('current')
usdMplsIfMinorBaseTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 24), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorBaseTunnelName.setStatus('current')
usdMplsIfMinorVpnOuiNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorVpnOuiNumber.setStatus('current')
usdMplsIfMinorVpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 26), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorVpnIndex.setStatus('current')
usdMplsIfMinorTunnelOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("established", 0), ("teNegotiation", 1), ("up", 2), ("down", 3), ("cfgChanged", 4), ("cfgIncEn", 5), ("cfgIncDis", 6), ("disabled", 7), ("rel", 8), ("noChange", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdMplsIfMinorTunnelOpState.setStatus('current')
usdMplsIfMinorTargetedDynamicTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 28), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorTargetedDynamicTunnel.setStatus('current')
usdMplsIfMinorReoptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 1, 2, 1, 29), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorReoptimization.setStatus('current')
usdMplsIfMinorPathOptionTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2, 1), )
if mibBuilder.loadTexts: usdMplsIfMinorPathOptionTable.setStatus('current')
usdMplsIfMinorPathOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2, 1, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionIndex"), (0, "Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionNumber"))
if mibBuilder.loadTexts: usdMplsIfMinorPathOptionEntry.setStatus('current')
usdMplsIfMinorPathOptionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdMplsIfMinorPathOptionIndex.setStatus('current')
usdMplsIfMinorPathOptionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: usdMplsIfMinorPathOptionNumber.setStatus('current')
usdMplsIfMinorPathOptionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("hopByHop", 0), ("isis", 1), ("ospf", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorPathOptionProtocol.setStatus('current')
usdMplsIfMinorPathOptionLockdown = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2, 1, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorPathOptionLockdown.setStatus('current')
usdMplsIfMinorPathOptionPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorPathOptionPathName.setStatus('current')
usdMplsIfMinorPathOptionPathId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorPathOptionPathId.setStatus('current')
usdMplsIfMinorPathOptionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 3, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsIfMinorPathOptionRowStatus.setStatus('current')
usdMplsTunnelProfileTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1), )
if mibBuilder.loadTexts: usdMplsTunnelProfileTable.setStatus('current')
usdMplsTunnelProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileName"))
if mibBuilder.loadTexts: usdMplsTunnelProfileEntry.setStatus('current')
usdMplsTunnelProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: usdMplsTunnelProfileName.setStatus('current')
usdMplsTunnelProfileAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileAdminStatus.setStatus('current')
usdMplsTunnelProfileBaseTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileBaseTunnelName.setStatus('current')
usdMplsTunnelProfileIpProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileIpProfileName.setStatus('current')
usdMplsTunnelProfileLabelDistProto = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("crLdp", 0), ("rsvpTe", 1), ("undefined", 2))).clone('undefined')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileLabelDistProto.setStatus('current')
usdMplsTunnelProfileAnnounceToOspf = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileAnnounceToOspf.setStatus('current')
usdMplsTunnelProfileAnnounceToIsis = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileAnnounceToIsis.setStatus('current')
usdMplsTunnelProfileAnnounceToBgp = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileAnnounceToBgp.setStatus('current')
usdMplsTunnelProfileMetricMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("absolute", 0), ("relative", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileMetricMode.setStatus('current')
usdMplsTunnelProfileAbsoluteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileAbsoluteMetric.setStatus('current')
usdMplsTunnelProfileRelativeMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileRelativeMetric.setStatus('current')
usdMplsTunnelProfileBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 12), UsdProfileCfgBWRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileBandwidth.setStatus('current')
usdMplsTunnelProfileAffinity = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4)).clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileAffinity.setStatus('current')
usdMplsTunnelProfileAffinityMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4)).clone(hexValue="0000ffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileAffinityMask.setStatus('current')
usdMplsTunnelProfileSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 15), UsdProfileCfgHoldingAndSetupPriorityRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileSetupPriority.setStatus('current')
usdMplsTunnelProfileHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 16), UsdProfileCfgHoldingAndSetupPriorityRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileHoldingPriority.setStatus('current')
usdMplsTunnelProfileRetryTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 17), UsdProfileCfgRetryTimesAndNorouteRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileRetryTimes.setStatus('current')
usdMplsTunnelProfileRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 18), UsdProfileCfgRetryIntervalAndNorouteRanges().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileRetryInterval.setStatus('current')
usdMplsTunnelProfileRetryTimesNoroute = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 19), UsdProfileCfgRetryTimesAndNorouteRanges()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileRetryTimesNoroute.setStatus('current')
usdMplsTunnelProfileRetryIntervalNoroute = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 20), UsdProfileCfgRetryIntervalAndNorouteRanges().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileRetryIntervalNoroute.setStatus('current')
usdMplsTunnelProfileVpnOuiNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileVpnOuiNumber.setStatus('current')
usdMplsTunnelProfileVpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 22), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileVpnIndex.setStatus('current')
usdMplsTunnelProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileRowStatus.setStatus('current')
usdMplsTunnelProfileTargetedDynamicTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 1, 1, 1, 24), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileTargetedDynamicTunnel.setStatus('current')
usdMplsTunnelProfilePathOptionTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 1), )
if mibBuilder.loadTexts: usdMplsTunnelProfilePathOptionTable.setStatus('current')
usdMplsTunnelProfilePathOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 1, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileNamePathOption"), (0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionNumber"))
if mibBuilder.loadTexts: usdMplsTunnelProfilePathOptionEntry.setStatus('current')
usdMplsTunnelProfileNamePathOption = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: usdMplsTunnelProfileNamePathOption.setStatus('current')
usdMplsTunnelProfilePathOptionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: usdMplsTunnelProfilePathOptionNumber.setStatus('current')
usdMplsTunnelProfilePathOptionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("hopByHop", 0), ("isis", 1), ("ospf", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfilePathOptionProtocol.setStatus('current')
usdMplsTunnelProfilePathOptionLockdown = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 1, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfilePathOptionLockdown.setStatus('current')
usdMplsTunnelProfilePathOptionPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfilePathOptionPathName.setStatus('current')
usdMplsTunnelProfilePathOptionPathId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfilePathOptionPathId.setStatus('current')
usdMplsTunnelProfilePathOptionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfilePathOptionRowStatus.setStatus('current')
usdMplsTunnelProfileDynamicEndpointTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 2), )
if mibBuilder.loadTexts: usdMplsTunnelProfileDynamicEndpointTable.setStatus('current')
usdMplsTunnelProfileDynamicEndpointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 2, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileNameDynamicEndpoint"), (0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileDynamicEndpointType"), (0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileDynamicEndpointPolicyListType"), (0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileDynamicEndpointListName"))
if mibBuilder.loadTexts: usdMplsTunnelProfileDynamicEndpointEntry.setStatus('current')
usdMplsTunnelProfileNameDynamicEndpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: usdMplsTunnelProfileNameDynamicEndpoint.setStatus('current')
usdMplsTunnelProfileDynamicEndpointType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("isisLevel2", 0), ("ospfBorder", 1))))
if mibBuilder.loadTexts: usdMplsTunnelProfileDynamicEndpointType.setStatus('current')
usdMplsTunnelProfileDynamicEndpointPolicyListType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accessList", 1), ("prefixList", 2), ("noPolicyList", 3))))
if mibBuilder.loadTexts: usdMplsTunnelProfileDynamicEndpointPolicyListType.setStatus('current')
usdMplsTunnelProfileDynamicEndpointListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: usdMplsTunnelProfileDynamicEndpointListName.setStatus('current')
usdMplsTunnelProfileDynamicEndpointRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileDynamicEndpointRowStatus.setStatus('current')
usdMplsTunnelProfileTunnelEndpointTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 3), )
if mibBuilder.loadTexts: usdMplsTunnelProfileTunnelEndpointTable.setStatus('current')
usdMplsTunnelProfileTunnelEndpointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 3, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileNameTunnelEndpoint"), (0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileTunnelEndpointAddress"), (0, "Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileTunnelEndpointDstMask"))
if mibBuilder.loadTexts: usdMplsTunnelProfileTunnelEndpointEntry.setStatus('current')
usdMplsTunnelProfileNameTunnelEndpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: usdMplsTunnelProfileNameTunnelEndpoint.setStatus('current')
usdMplsTunnelProfileTunnelEndpointAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: usdMplsTunnelProfileTunnelEndpointAddress.setStatus('current')
usdMplsTunnelProfileTunnelEndpointDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 3, 1, 3), IpAddress())
if mibBuilder.loadTexts: usdMplsTunnelProfileTunnelEndpointDstMask.setStatus('current')
usdMplsTunnelProfileTunnelEndpointRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 4, 2, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsTunnelProfileTunnelEndpointRowStatus.setStatus('current')
usdMplsExplicitPathTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 1), )
if mibBuilder.loadTexts: usdMplsExplicitPathTable.setStatus('current')
usdMplsExplicitPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 1, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathName"))
if mibBuilder.loadTexts: usdMplsExplicitPathEntry.setStatus('current')
usdMplsExplicitPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: usdMplsExplicitPathName.setStatus('current')
usdMplsExplicitPathAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsExplicitPathAdminState.setStatus('current')
usdMplsExplicitPathRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsExplicitPathRowStatus.setStatus('current')
usdMplsExplicitPathNodeTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 2), )
if mibBuilder.loadTexts: usdMplsExplicitPathNodeTable.setStatus('current')
usdMplsExplicitPathNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 2, 1), ).setIndexNames((0, "Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathNodeName"), (0, "Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathNodeIndexNumber"))
if mibBuilder.loadTexts: usdMplsExplicitPathNodeEntry.setStatus('current')
usdMplsExplicitPathNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)))
if mibBuilder.loadTexts: usdMplsExplicitPathNodeName.setStatus('current')
usdMplsExplicitPathNodeIndexNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: usdMplsExplicitPathNodeIndexNumber.setStatus('current')
usdMplsExplicitPathNodeLoose = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsExplicitPathNodeLoose.setStatus('current')
usdMplsExplicitPathNodeHopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsExplicitPathNodeHopAddress.setStatus('current')
usdMplsExplicitPathNodeHopAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 2, 1, 5), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsExplicitPathNodeHopAddressMask.setStatus('current')
usdMplsExplicitPathNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 1, 5, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdMplsExplicitPathNodeRowStatus.setStatus('current')
usdMplsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2))
usdMplsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 1))
usdMplsConfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 2))
usdMplsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 1, 1)).setObjects(("Unisphere-Data-MPLS-MIB", "usdMplsLsrGlobalConfGroup"), ("Unisphere-Data-MPLS-MIB", "usdMplsMajorLayerConfGroup"), ("Unisphere-Data-MPLS-MIB", "usdMplsMinorLayerConfGroup"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileConfGroup"), ("Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathConfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdMplsCompliance = usdMplsCompliance.setStatus('obsolete')
usdMplsCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 1, 2)).setObjects(("Unisphere-Data-MPLS-MIB", "usdMplsLsrGlobalConfGroup"), ("Unisphere-Data-MPLS-MIB", "usdMplsMajorLayerConfGroup"), ("Unisphere-Data-MPLS-MIB", "usdMplsMinorLayerConfGroup2"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileConfGroup2"), ("Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathConfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdMplsCompliance2 = usdMplsCompliance2.setStatus('current')
usdMplsLsrGlobalConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 2, 1)).setObjects(("Unisphere-Data-MPLS-MIB", "usdMplsGroupMplsEnable"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupReopTimer"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLabelRangeLow"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLabelRangeHigh"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLspRetryTimesNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLspRetryIntervalNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLspRetryTimes"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLspRetryInterval"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpRetryTimesNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpRetryIntervalNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpRetryTimes"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpRetryInterval"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpSessionRetries"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpSessionRetryTimer"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenIpProfileName"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenLdpEgressIpIntf"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenLdpIngressIpIntf"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenLdpEgressIpIntfHostOnly"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenLdpIngressIpIntfHostOnly"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyListType"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyListType"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyList"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyList"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupTopologyDrivenLdp"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLspLabelDistCtrlMode"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpAdvHostOnly"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLsrState"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupReopNow"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpTargetedHelloSendMode"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpTargetedHelloReceiveMode"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLabelAdverListMode"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpProfileHelloHoldTime"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpProfileCrLdpAdminState"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupLdpProfileRowStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupRsvpProfileRefreshPeriod"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupRsvpProfileCleanupTimeoutFactor"), ("Unisphere-Data-MPLS-MIB", "usdMplsGroupRsvpProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdMplsLsrGlobalConfGroup = usdMplsLsrGlobalConfGroup.setStatus('current')
usdMplsMajorLayerConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 2, 2)).setObjects(("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorNextIfIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorRowStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorLowerIfIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorAdminStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorLdpAdminStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorLdpProfileName"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorLdpVpiStart"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorLdpVpiStop"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorLdpVciStart"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorLdpVciStop"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorRsvpAdminStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorRsvpProfileName"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorRsvpVpiStart"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorRsvpVpiStop"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorRsvpVciStart"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorRsvpVciStop"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorLabelSpaceType"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorOpState"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMajorCrLdpAdminState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdMplsMajorLayerConfGroup = usdMplsMajorLayerConfGroup.setStatus('current')
usdMplsMinorLayerConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 2, 3)).setObjects(("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorNextIfIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorRowStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorLowerIfIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAdminStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorEndpointAddress"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorEndpointDstMask"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelMetricMode"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAbsoluteTunnelMetric"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorRelativeTunnelMetric"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorLabelDistProto"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAnnounceToOspf"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAnnounceToIsis"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAnnounceToBgp"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorBandwidth"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAffinity"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAffinityMask"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorSetupPriority"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorHoldingPriority"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelName"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelRetryTimes"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelRetryInterval"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelRetryTimesNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelRetryIntervalNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorBaseTunnelName"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorVpnOuiNumber"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorVpnIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelOpState"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTargetedDynamicTunnel"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorReoptimization"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionProtocol"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionLockdown"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionPathName"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionPathId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdMplsMinorLayerConfGroup = usdMplsMinorLayerConfGroup.setStatus('obsolete')
usdMplsTunnelProfileConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 2, 4)).setObjects(("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAdminStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileBaseTunnelName"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileIpProfileName"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileLabelDistProto"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAnnounceToOspf"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAnnounceToIsis"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAnnounceToBgp"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileMetricMode"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAbsoluteMetric"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRelativeMetric"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileBandwidth"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAffinity"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAffinityMask"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileSetupPriority"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileHoldingPriority"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRetryTimes"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRetryInterval"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRetryTimesNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRetryIntervalNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileVpnOuiNumber"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileVpnIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRowStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileTargetedDynamicTunnel"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionProtocol"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionLockdown"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionPathName"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionPathId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdMplsTunnelProfileConfGroup = usdMplsTunnelProfileConfGroup.setStatus('obsolete')
usdMplsExplicitPathConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 2, 5)).setObjects(("Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathAdminState"), ("Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathRowStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathNodeLoose"), ("Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathNodeHopAddress"), ("Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathNodeHopAddressMask"), ("Unisphere-Data-MPLS-MIB", "usdMplsExplicitPathNodeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdMplsExplicitPathConfGroup = usdMplsExplicitPathConfGroup.setStatus('current')
usdMplsMinorLayerConfGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 2, 6)).setObjects(("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorNextIfIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorRowStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorLowerIfIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAdminStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorEndpointAddress"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorEndpointDstMask"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelMetricMode"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAbsoluteTunnelMetric"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorRelativeTunnelMetric"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorLabelDistProto"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAnnounceToOspf"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAnnounceToIsis"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAnnounceToBgp"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorBandwidth"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAffinity"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorAffinityMask"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorSetupPriority"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorHoldingPriority"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelName"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelRetryTimes"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelRetryInterval"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelRetryTimesNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelRetryIntervalNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorBaseTunnelName"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorVpnOuiNumber"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorVpnIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTunnelOpState"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorTargetedDynamicTunnel"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorReoptimization"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionProtocol"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionLockdown"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionPathName"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionPathId"), ("Unisphere-Data-MPLS-MIB", "usdMplsIfMinorPathOptionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdMplsMinorLayerConfGroup2 = usdMplsMinorLayerConfGroup2.setStatus('current')
usdMplsTunnelProfileConfGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 54, 2, 2, 7)).setObjects(("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAdminStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileBaseTunnelName"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileIpProfileName"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileLabelDistProto"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAnnounceToOspf"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAnnounceToIsis"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAnnounceToBgp"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileMetricMode"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAbsoluteMetric"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRelativeMetric"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileBandwidth"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAffinity"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileAffinityMask"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileSetupPriority"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileHoldingPriority"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRetryTimes"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRetryInterval"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRetryTimesNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRetryIntervalNoroute"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileVpnOuiNumber"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileVpnIndex"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileRowStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileTargetedDynamicTunnel"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionProtocol"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionLockdown"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionPathName"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionPathId"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfilePathOptionRowStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileDynamicEndpointRowStatus"), ("Unisphere-Data-MPLS-MIB", "usdMplsTunnelProfileTunnelEndpointRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdMplsTunnelProfileConfGroup2 = usdMplsTunnelProfileConfGroup2.setStatus('current')
mibBuilder.exportSymbols("Unisphere-Data-MPLS-MIB", usdMplsTunnelProfileNameTunnelEndpoint=usdMplsTunnelProfileNameTunnelEndpoint, usdMplsIfMinorPathOptionEntry=usdMplsIfMinorPathOptionEntry, usdMplsTunnelProfileDynamicEndpointRowStatus=usdMplsTunnelProfileDynamicEndpointRowStatus, UsdMinorCfgHoldingAndSetupPriorityRanges=UsdMinorCfgHoldingAndSetupPriorityRanges, usdMplsMIB=usdMplsMIB, usdMplsGroupRsvpProfileCleanupTimeoutFactor=usdMplsGroupRsvpProfileCleanupTimeoutFactor, usdMplsIfMinorLabelDistProto=usdMplsIfMinorLabelDistProto, usdMplsTunnelProfileNamePathOption=usdMplsTunnelProfileNamePathOption, usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyList=usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyList, usdMplsTunnelProfilePathOptionPathId=usdMplsTunnelProfilePathOptionPathId, usdMplsGroupLsrState=usdMplsGroupLsrState, usdMplsTunnelProfileTunnelEndpointAddress=usdMplsTunnelProfileTunnelEndpointAddress, usdMplsTunnelProfileRelativeMetric=usdMplsTunnelProfileRelativeMetric, usdMplsIfMinorTunnelRetryTimesNoroute=usdMplsIfMinorTunnelRetryTimesNoroute, usdMplsMinorLayerList=usdMplsMinorLayerList, usdMplsGroupLabelAdverListMode=usdMplsGroupLabelAdverListMode, usdMplsTunnelProfilePathOptionPathName=usdMplsTunnelProfilePathOptionPathName, usdMplsExplicitPathNodeHopAddress=usdMplsExplicitPathNodeHopAddress, usdMplsGroupRsvpProfileTable=usdMplsGroupRsvpProfileTable, usdMplsGroupLspRetryInterval=usdMplsGroupLspRetryInterval, usdMplsIfMinorAbsoluteTunnelMetric=usdMplsIfMinorAbsoluteTunnelMetric, usdMplsIfMinorPathOptionTable=usdMplsIfMinorPathOptionTable, usdMplsIfMinorAnnounceToOspf=usdMplsIfMinorAnnounceToOspf, usdMplsIfMinorPathOptionPathId=usdMplsIfMinorPathOptionPathId, usdMplsIfMajorOpState=usdMplsIfMajorOpState, UsdProfileCfgRetryTimesAndNorouteRanges=UsdProfileCfgRetryTimesAndNorouteRanges, usdMplsIfMajorRsvpVciStart=usdMplsIfMajorRsvpVciStart, usdMplsIfMinorTunnelRetryInterval=usdMplsIfMinorTunnelRetryInterval, UsdMinorCfgRetryTimesAndNorouteRanges=UsdMinorCfgRetryTimesAndNorouteRanges, usdMplsTunnelProfilePathOptionNumber=usdMplsTunnelProfilePathOptionNumber, usdMplsCompliance=usdMplsCompliance, usdMplsGroupLdpProfileName=usdMplsGroupLdpProfileName, usdMplsExplicitPathNodeName=usdMplsExplicitPathNodeName, usdMplsMinorLayer=usdMplsMinorLayer, usdMplsGroupLdpProfileEntry=usdMplsGroupLdpProfileEntry, usdMplsIfMinorAffinity=usdMplsIfMinorAffinity, usdMplsExplicitPathRowStatus=usdMplsExplicitPathRowStatus, usdMplsCompliance2=usdMplsCompliance2, usdMplsExplicitPathName=usdMplsExplicitPathName, usdMplsTunnelProfilePathOptionTable=usdMplsTunnelProfilePathOptionTable, usdMplsGroupTargetedHelloSendTable=usdMplsGroupTargetedHelloSendTable, usdMplsIfMinorTunnelMetricMode=usdMplsIfMinorTunnelMetricMode, usdMplsTunnelProfileRetryInterval=usdMplsTunnelProfileRetryInterval, usdMplsIfMinorVpnIndex=usdMplsIfMinorVpnIndex, usdMplsGroupLdpSessionRetries=usdMplsGroupLdpSessionRetries, usdMplsGroupTopologyDrivenLdpIngressIpIntfHostOnly=usdMplsGroupTopologyDrivenLdpIngressIpIntfHostOnly, usdMplsIfMinorTable=usdMplsIfMinorTable, usdMplsGroupReopTimer=usdMplsGroupReopTimer, usdMplsIfMinorPathOptionNumber=usdMplsIfMinorPathOptionNumber, usdMplsTunnelProfileRetryTimes=usdMplsTunnelProfileRetryTimes, usdMplsMajorLayer=usdMplsMajorLayer, usdMplsIfMinorAffinityMask=usdMplsIfMinorAffinityMask, usdMplsTunnelProfileTunnelEndpointEntry=usdMplsTunnelProfileTunnelEndpointEntry, usdMplsIfMajorRsvpAdminStatus=usdMplsIfMajorRsvpAdminStatus, UsdProfileCfgRetryIntervalAndNorouteRanges=UsdProfileCfgRetryIntervalAndNorouteRanges, usdMplsGroupTopologyDrivenLdpEgressIpIntf=usdMplsGroupTopologyDrivenLdpEgressIpIntf, usdMplsTunnelProfileRetryIntervalNoroute=usdMplsTunnelProfileRetryIntervalNoroute, usdMplsMinorLayerConfGroup=usdMplsMinorLayerConfGroup, usdMplsGroupLdpRetryIntervalNoroute=usdMplsGroupLdpRetryIntervalNoroute, usdMplsGroupLdpRetryTimes=usdMplsGroupLdpRetryTimes, usdMplsGroupLdpLabelAdverRouteListEntry=usdMplsGroupLdpLabelAdverRouteListEntry, usdMplsIfMinorNextIfIndex=usdMplsIfMinorNextIfIndex, usdMplsIfMinorTunnelName=usdMplsIfMinorTunnelName, usdMplsIfMajorAdminStatus=usdMplsIfMajorAdminStatus, usdMplsExplicitPathNodeIndexNumber=usdMplsExplicitPathNodeIndexNumber, usdMplsGroupList=usdMplsGroupList, usdMplsGroupLdpAdvHostOnly=usdMplsGroupLdpAdvHostOnly, usdMplsGroupLspRetryTimesNoroute=usdMplsGroupLspRetryTimesNoroute, usdMplsIfMajorTable=usdMplsIfMajorTable, usdMplsTunnelProfileTunnelEndpointTable=usdMplsTunnelProfileTunnelEndpointTable, usdMplsTunnelProfilePathOptionEntry=usdMplsTunnelProfilePathOptionEntry, usdMplsIfMinorPathOptionRowStatus=usdMplsIfMinorPathOptionRowStatus, usdMplsGroupLspRetryIntervalNoroute=usdMplsGroupLspRetryIntervalNoroute, usdMplsIfMajorLdpProfileName=usdMplsIfMajorLdpProfileName, usdMplsTunnelProfileDynamicEndpointListName=usdMplsTunnelProfileDynamicEndpointListName, usdMplsLsrGlobalConfGroup=usdMplsLsrGlobalConfGroup, usdMplsIfMinorBandwidth=usdMplsIfMinorBandwidth, usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyListType=usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyListType, usdMplsIfMinorPathOptionLockdown=usdMplsIfMinorPathOptionLockdown, usdMplsIfMajorLdpVpiStart=usdMplsIfMajorLdpVpiStart, usdMplsExplicitPathNodeEntry=usdMplsExplicitPathNodeEntry, usdMplsTunnelProfileRowStatus=usdMplsTunnelProfileRowStatus, usdMplsExplicitPathNodeHopAddressMask=usdMplsExplicitPathNodeHopAddressMask, usdMplsIfMinorPathOptionIndex=usdMplsIfMinorPathOptionIndex, usdMplsGroupTargetedHelloReceiveAddress=usdMplsGroupTargetedHelloReceiveAddress, usdMplsTunnelProfileMetricMode=usdMplsTunnelProfileMetricMode, usdMplsGroupTargetedHelloSendEntry=usdMplsGroupTargetedHelloSendEntry, usdMplsIfMinorEndpointDstMask=usdMplsIfMinorEndpointDstMask, usdMplsGroupLspLabelDistCtrlMode=usdMplsGroupLspLabelDistCtrlMode, usdMplsIfMajorLayer=usdMplsIfMajorLayer, usdMplsGroupRsvpProfileRowStatus=usdMplsGroupRsvpProfileRowStatus, usdMplsIfMajorEntry=usdMplsIfMajorEntry, usdMplsIfMinorRowStatus=usdMplsIfMinorRowStatus, PYSNMP_MODULE_ID=usdMplsMIB, usdMplsGroupLabelRangeHigh=usdMplsGroupLabelRangeHigh, usdMplsIfMajorIndex=usdMplsIfMajorIndex, usdMplsExplicitPathTable=usdMplsExplicitPathTable, usdMplsTunnelProfileConfGroup=usdMplsTunnelProfileConfGroup, usdMplsMajorLayerConfGroup=usdMplsMajorLayerConfGroup, usdMplsGroupLdpProfileTable=usdMplsGroupLdpProfileTable, usdMplsTunnelProfile=usdMplsTunnelProfile, usdMplsMinorLayerConfGroup2=usdMplsMinorLayerConfGroup2, usdMplsTunnelProfileTunnelEndpointRowStatus=usdMplsTunnelProfileTunnelEndpointRowStatus, usdMplsGroupTargetedHelloReceiveTable=usdMplsGroupTargetedHelloReceiveTable, usdMplsTunnelProfileAnnounceToOspf=usdMplsTunnelProfileAnnounceToOspf, usdMplsExplicitPathConfGroup=usdMplsExplicitPathConfGroup, usdMplsTunnelProfileTunnelEndpointDstMask=usdMplsTunnelProfileTunnelEndpointDstMask, usdMplsExplicitPathAdminState=usdMplsExplicitPathAdminState, usdMplsTunnelProfileTargetedDynamicTunnel=usdMplsTunnelProfileTargetedDynamicTunnel, usdMplsGroupTopologyDrivenLdpIngressIpIntf=usdMplsGroupTopologyDrivenLdpIngressIpIntf, usdMplsIfMinorReoptimization=usdMplsIfMinorReoptimization, usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyListType=usdMplsGroupTopologyDrivenLdpIngressIpIntfPolicyListType, usdMplsGroupLdpTargetedHelloSendMode=usdMplsGroupLdpTargetedHelloSendMode, usdMplsTunnelProfileList=usdMplsTunnelProfileList, UsdMinorCfgBWRanges=UsdMinorCfgBWRanges, usdMplsIfMinorTunnelRetryIntervalNoroute=usdMplsIfMinorTunnelRetryIntervalNoroute, usdMplsGroupLdpLabelAdverNbrListName=usdMplsGroupLdpLabelAdverNbrListName, usdMplsGroup=usdMplsGroup, usdMplsIfMinorAnnounceToBgp=usdMplsIfMinorAnnounceToBgp, usdMplsIfMajorRowStatus=usdMplsIfMajorRowStatus, usdMplsLsrGlobalConfig=usdMplsLsrGlobalConfig, usdMplsIfMajorLowerIfIndex=usdMplsIfMajorLowerIfIndex, usdMplsExplicitPathEntry=usdMplsExplicitPathEntry, usdMplsTunnelProfileAbsoluteMetric=usdMplsTunnelProfileAbsoluteMetric, usdMplsIfMajorLdpVpiStop=usdMplsIfMajorLdpVpiStop, usdMplsIfMinorAdminStatus=usdMplsIfMinorAdminStatus, usdMplsObjects=usdMplsObjects, usdMplsTunnelProfileGroup=usdMplsTunnelProfileGroup, usdMplsGroupTopologyDrivenIpProfileName=usdMplsGroupTopologyDrivenIpProfileName, usdMplsIfMinorVpnOuiNumber=usdMplsIfMinorVpnOuiNumber, usdMplsTunnelProfileLabelDistProto=usdMplsTunnelProfileLabelDistProto, usdMplsTunnelProfileAnnounceToIsis=usdMplsTunnelProfileAnnounceToIsis, usdMplsExplicitPathNodeLoose=usdMplsExplicitPathNodeLoose, usdMplsIfMinorLowerIfIndex=usdMplsIfMinorLowerIfIndex, usdMplsTunnelProfileDynamicEndpointTable=usdMplsTunnelProfileDynamicEndpointTable, usdMplsExplicitPathNodeTable=usdMplsExplicitPathNodeTable, usdMplsIfMinorPathOptionPathName=usdMplsIfMinorPathOptionPathName, usdMplsTunnelProfileTable=usdMplsTunnelProfileTable, usdMplsTunnelProfileDynamicEndpointType=usdMplsTunnelProfileDynamicEndpointType, usdMplsGroupTopologyDrivenLdp=usdMplsGroupTopologyDrivenLdp, usdMplsGroupRsvpProfileEntry=usdMplsGroupRsvpProfileEntry, usdMplsIfMinorPathOptionProtocol=usdMplsIfMinorPathOptionProtocol, usdMplsTunnelProfileRetryTimesNoroute=usdMplsTunnelProfileRetryTimesNoroute, usdMplsTunnelProfileVpnOuiNumber=usdMplsTunnelProfileVpnOuiNumber, usdMplsIfMajorLdpVciStart=usdMplsIfMajorLdpVciStart, usdMplsGroupLdpSessionRetryTimer=usdMplsGroupLdpSessionRetryTimer, usdMplsExplicitPath=usdMplsExplicitPath, usdMplsGroupRsvpProfileRefreshPeriod=usdMplsGroupRsvpProfileRefreshPeriod, usdMplsGroupLdpLabelAdverRouteListTable=usdMplsGroupLdpLabelAdverRouteListTable, usdMplsIfMinorTunnelOpState=usdMplsIfMinorTunnelOpState, usdMplsIfMajorRsvpVpiStart=usdMplsIfMajorRsvpVpiStart, usdMplsGroupLdpProfileRowStatus=usdMplsGroupLdpProfileRowStatus, usdMplsGroupLspRetryTimes=usdMplsGroupLspRetryTimes, usdMplsIfMajorRsvpVciStop=usdMplsIfMajorRsvpVciStop, usdMplsGroupTargetedHelloReceiveEntry=usdMplsGroupTargetedHelloReceiveEntry, usdMplsTunnelProfileNameDynamicEndpoint=usdMplsTunnelProfileNameDynamicEndpoint, usdMplsGroupLdpProfileCrLdpAdminState=usdMplsGroupLdpProfileCrLdpAdminState, usdMplsIfMajorRsvpVpiStop=usdMplsIfMajorRsvpVpiStop, UsdMajorCfgVpiRanges=UsdMajorCfgVpiRanges, usdMplsIfMinorTargetedDynamicTunnel=usdMplsIfMinorTargetedDynamicTunnel, UsdMajorCfgVciRanges=UsdMajorCfgVciRanges, usdMplsIfMinorBaseTunnelName=usdMplsIfMinorBaseTunnelName, usdMplsTunnelProfileBandwidth=usdMplsTunnelProfileBandwidth, usdMplsIfMinorEndpointAddress=usdMplsIfMinorEndpointAddress, usdMplsTunnelProfileHoldingPriority=usdMplsTunnelProfileHoldingPriority, usdMplsIfMinorTunnelRetryTimes=usdMplsIfMinorTunnelRetryTimes, usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyList=usdMplsGroupTopologyDrivenLdpEgressIpIntfPolicyList, usdMplsTunnelProfilePathOptionProtocol=usdMplsTunnelProfilePathOptionProtocol, usdMplsGroupLabelRangeLow=usdMplsGroupLabelRangeLow, UsdProfileCfgBWRanges=UsdProfileCfgBWRanges, usdMplsTunnelProfileBaseTunnelName=usdMplsTunnelProfileBaseTunnelName, usdMplsGroupLdpProfileHelloHoldTime=usdMplsGroupLdpProfileHelloHoldTime, usdMplsIfMajorLabelSpaceType=usdMplsIfMajorLabelSpaceType, usdMplsTunnelProfilePathOptionLockdown=usdMplsTunnelProfilePathOptionLockdown, usdMplsTunnelProfileAffinity=usdMplsTunnelProfileAffinity, usdMplsTunnelProfileAnnounceToBgp=usdMplsTunnelProfileAnnounceToBgp, usdMplsIfMinorIndex=usdMplsIfMinorIndex, usdMplsIfMinorSetupPriority=usdMplsIfMinorSetupPriority, usdMplsTunnelProfileIpProfileName=usdMplsTunnelProfileIpProfileName, usdMplsIfMinorHoldingPriority=usdMplsIfMinorHoldingPriority, usdMplsGroupLdpTargetedHelloReceiveMode=usdMplsGroupLdpTargetedHelloReceiveMode, usdMplsTunnelProfileSetupPriority=usdMplsTunnelProfileSetupPriority, usdMplsCompliances=usdMplsCompliances, usdMplsGroupRsvpProfileName=usdMplsGroupRsvpProfileName, UsdProfileCfgHoldingAndSetupPriorityRanges=UsdProfileCfgHoldingAndSetupPriorityRanges, usdMplsIfMinorLayer=usdMplsIfMinorLayer, usdMplsGroupLdpRetryInterval=usdMplsGroupLdpRetryInterval, usdMplsTunnelProfileName=usdMplsTunnelProfileName, usdMplsIfMajorLdpAdminStatus=usdMplsIfMajorLdpAdminStatus, usdMplsIfMajorLdpVciStop=usdMplsIfMajorLdpVciStop, usdMplsGroupLdpLabelAdverRouteListName=usdMplsGroupLdpLabelAdverRouteListName, usdMplsIfMajorCrLdpAdminState=usdMplsIfMajorCrLdpAdminState, usdMplsGroupLdpRetryTimesNoroute=usdMplsGroupLdpRetryTimesNoroute, usdMplsIfMinorEntry=usdMplsIfMinorEntry, usdMplsGroupTopologyDrivenLdpEgressIpIntfHostOnly=usdMplsGroupTopologyDrivenLdpEgressIpIntfHostOnly, usdMplsTunnelProfileDynamicEndpointPolicyListType=usdMplsTunnelProfileDynamicEndpointPolicyListType, usdMplsTunnelProfileAdminStatus=usdMplsTunnelProfileAdminStatus, usdMplsTunnelProfileAffinityMask=usdMplsTunnelProfileAffinityMask, usdMplsTunnelProfilePathOptionRowStatus=usdMplsTunnelProfilePathOptionRowStatus, usdMplsConfGroups=usdMplsConfGroups, usdMplsGroupMplsEnable=usdMplsGroupMplsEnable, usdMplsIfMajorRsvpProfileName=usdMplsIfMajorRsvpProfileName, UsdMinorCfgRetryIntervalAndNorouteRanges=UsdMinorCfgRetryIntervalAndNorouteRanges, usdMplsGroupTargetedHelloSendAddress=usdMplsGroupTargetedHelloSendAddress, usdMplsTunnelProfileVpnIndex=usdMplsTunnelProfileVpnIndex, usdMplsConformance=usdMplsConformance, usdMplsIfMinorRelativeTunnelMetric=usdMplsIfMinorRelativeTunnelMetric, usdMplsTunnelProfileDynamicEndpointEntry=usdMplsTunnelProfileDynamicEndpointEntry, usdMplsIfMajorNextIfIndex=usdMplsIfMajorNextIfIndex, usdMplsTunnelProfileEntry=usdMplsTunnelProfileEntry, usdMplsExplicitPathNodeRowStatus=usdMplsExplicitPathNodeRowStatus, usdMplsExplicitPathGroup=usdMplsExplicitPathGroup, usdMplsTunnelProfileConfGroup2=usdMplsTunnelProfileConfGroup2, usdMplsIfMinorAnnounceToIsis=usdMplsIfMinorAnnounceToIsis, usdMplsGroupReopNow=usdMplsGroupReopNow)
