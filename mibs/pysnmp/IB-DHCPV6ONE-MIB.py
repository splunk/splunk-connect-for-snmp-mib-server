#
# PySNMP MIB module IB-DHCPV6ONE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IB-DHCPV6ONE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:39:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
IbIpv6Addr, IbString, ibDHCPOne = mibBuilder.importSymbols("IB-SMI-MIB", "IbIpv6Addr", "IbString", "ibDHCPOne")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, NotificationType, Bits, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, enterprises, Gauge32, Counter64, Counter32, TimeTicks, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "Bits", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "enterprises", "Gauge32", "Counter64", "Counter32", "TimeTicks", "ObjectIdentity", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ibDhcpv6Module = ModuleIdentity((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2))
ibDhcpv6Module.setRevisions(('2010-12-29 00:00',))
if mibBuilder.loadTexts: ibDhcpv6Module.setLastUpdated('201012290000Z')
if mibBuilder.loadTexts: ibDhcpv6Module.setOrganization('Infoblox')
ibDHCPv6SubnetTable = MibTable((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 1), )
if mibBuilder.loadTexts: ibDHCPv6SubnetTable.setStatus('current')
ibDHCPv6SubnetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 1, 1), ).setIndexNames((0, "IB-DHCPV6ONE-MIB", "ibDHCPv6SubnetNetworkAddress"))
if mibBuilder.loadTexts: ibDHCPv6SubnetEntry.setStatus('current')
ibDHCPv6SubnetNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 1, 1, 1), IbIpv6Addr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6SubnetNetworkAddress.setStatus('current')
ibDHCPv6SubnetNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6SubnetNetworkMask.setStatus('current')
ibDHCPv6Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3))
ibDhcpv6TotalNoOfSolicits = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfSolicits.setStatus('current')
ibDhcpv6TotalNoOfRequests = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfRequests.setStatus('current')
ibDhcpv6TotalNoOfReleases = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfReleases.setStatus('current')
ibDhcpv6TotalNoOfAdvertises = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfAdvertises.setStatus('current')
ibDhcpv6TotalNoOfReplies = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfReplies.setStatus('current')
ibDhcpv6TotalNoOfRenews = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfRenews.setStatus('current')
ibDhcpv6TotalNoOfRebinds = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfRebinds.setStatus('current')
ibDhcpv6TotalNoOfDeclines = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfDeclines.setStatus('current')
ibDhcpv6TotalNoOfInformationRequests = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfInformationRequests.setStatus('current')
ibDhcpv6TotalNoOfOthers = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 3, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6TotalNoOfOthers.setStatus('current')
ibDhcpv6DeferredQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDhcpv6DeferredQueueSize.setStatus('current')
ibDHCPv6DDNSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 5))
ibDHCPv6DDNSAvgLatency5 = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6DDNSAvgLatency5.setStatus('current')
ibDHCPv6DDNSAvgLatency15 = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 5, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6DDNSAvgLatency15.setStatus('current')
ibDHCPv6DDNSAvgLatency60 = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 5, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6DDNSAvgLatency60.setStatus('current')
ibDHCPv6DDNSAvgLatency1440 = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 5, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6DDNSAvgLatency1440.setStatus('current')
ibDHCPv6DDNSTimeoutCount5 = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 5, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6DDNSTimeoutCount5.setStatus('current')
ibDHCPv6DDNSTimeoutCount15 = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 5, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6DDNSTimeoutCount15.setStatus('current')
ibDHCPv6DDNSTimeoutCount60 = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 5, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6DDNSTimeoutCount60.setStatus('current')
ibDHCPv6DDNSTimeoutCount1440 = MibScalar((1, 3, 6, 1, 4, 1, 7779, 3, 1, 1, 4, 2, 5, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibDHCPv6DDNSTimeoutCount1440.setStatus('current')
mibBuilder.exportSymbols("IB-DHCPV6ONE-MIB", ibDHCPv6DDNSAvgLatency15=ibDHCPv6DDNSAvgLatency15, ibDHCPv6DDNSTimeoutCount1440=ibDHCPv6DDNSTimeoutCount1440, ibDHCPv6DDNSTimeoutCount15=ibDHCPv6DDNSTimeoutCount15, ibDhcpv6DeferredQueueSize=ibDhcpv6DeferredQueueSize, ibDhcpv6TotalNoOfReplies=ibDhcpv6TotalNoOfReplies, ibDhcpv6TotalNoOfReleases=ibDhcpv6TotalNoOfReleases, ibDHCPv6SubnetEntry=ibDHCPv6SubnetEntry, ibDHCPv6SubnetNetworkMask=ibDHCPv6SubnetNetworkMask, ibDHCPv6SubnetTable=ibDHCPv6SubnetTable, ibDHCPv6SubnetNetworkAddress=ibDHCPv6SubnetNetworkAddress, ibDHCPv6DDNSAvgLatency5=ibDHCPv6DDNSAvgLatency5, ibDHCPv6DDNSAvgLatency1440=ibDHCPv6DDNSAvgLatency1440, ibDhcpv6TotalNoOfInformationRequests=ibDhcpv6TotalNoOfInformationRequests, ibDhcpv6TotalNoOfRequests=ibDhcpv6TotalNoOfRequests, ibDhcpv6TotalNoOfRenews=ibDhcpv6TotalNoOfRenews, ibDhcpv6TotalNoOfOthers=ibDhcpv6TotalNoOfOthers, ibDhcpv6TotalNoOfDeclines=ibDhcpv6TotalNoOfDeclines, ibDHCPv6Statistics=ibDHCPv6Statistics, ibDhcpv6TotalNoOfRebinds=ibDhcpv6TotalNoOfRebinds, ibDHCPv6DDNSTimeoutCount60=ibDHCPv6DDNSTimeoutCount60, ibDhcpv6Module=ibDhcpv6Module, ibDHCPv6DDNSStats=ibDHCPv6DDNSStats, PYSNMP_MODULE_ID=ibDhcpv6Module, ibDhcpv6TotalNoOfAdvertises=ibDhcpv6TotalNoOfAdvertises, ibDHCPv6DDNSAvgLatency60=ibDHCPv6DDNSAvgLatency60, ibDhcpv6TotalNoOfSolicits=ibDhcpv6TotalNoOfSolicits, ibDHCPv6DDNSTimeoutCount5=ibDHCPv6DDNSTimeoutCount5)
