#
# PySNMP MIB module XYLAN-FLT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-FLT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
MacAddress, = mibBuilder.importSymbols("BRIDGE-MIB", "MacAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Gauge32, ObjectIdentity, iso, ModuleIdentity, Integer32, Counter32, Unsigned32, MibIdentifier, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "ObjectIdentity", "iso", "ModuleIdentity", "Integer32", "Counter32", "Unsigned32", "MibIdentifier", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xylanFltArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanFltArch")
xylanFltStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 1))
xylanFltStaticConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 2))
xylanFltActiveConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 3))
xylanFltTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 4))
xylanFltActiveAdminState = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltActiveAdminState.setStatus('mandatory')
xylanFltActiveOperState = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("initializing", 0), ("active", 1), ("deactivating", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltActiveOperState.setStatus('mandatory')
xylanFltConfigAdminState = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltConfigAdminState.setStatus('mandatory')
xylanFltCommit = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 1, 4), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: xylanFltCommit.setStatus('mandatory')
xylanFltGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1))
xylanFltServices = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2))
xylanFltGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3))
xylanFltGroupTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 1), )
if mibBuilder.loadTexts: xylanFltGroupTable.setStatus('mandatory')
xylanFltGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 1, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltGroupIndex"))
if mibBuilder.loadTexts: xylanFltGroupEntry.setStatus('mandatory')
xylanFltGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(30, 30)).setFixedLength(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltGroupIndex.setStatus('mandatory')
xylanFltGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltGroupAdminState.setStatus('mandatory')
xylanFltGroupProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("na", 0), ("ip", 1), ("ipx", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltGroupProtocol.setStatus('mandatory')
xylanFltGroupAdrType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("na", 0), ("destination", 1), ("source", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltGroupAdrType.setStatus('mandatory')
xylanFltRuleListTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 2), )
if mibBuilder.loadTexts: xylanFltRuleListTable.setStatus('mandatory')
xylanFltRuleListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 2, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltGroupIndex"), (0, "XYLAN-FLT-MIB", "xylanFltRuleListIndex"))
if mibBuilder.loadTexts: xylanFltRuleListEntry.setStatus('mandatory')
xylanFltRuleListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(47, 47)).setFixedLength(47)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltRuleListIndex.setStatus('mandatory')
xylanFltRuleListAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltRuleListAdminState.setStatus('mandatory')
xylanFltRuleListRule = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltRuleListRule.setStatus('mandatory')
xylanFltServiceTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 1), )
if mibBuilder.loadTexts: xylanFltServiceTable.setStatus('mandatory')
xylanFltServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 1, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltServiceIndex"))
if mibBuilder.loadTexts: xylanFltServiceEntry.setStatus('mandatory')
xylanFltServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltServiceIndex.setStatus('mandatory')
xylanFltServiceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltServiceAdminState.setStatus('mandatory')
xylanFltServiceNumberTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 2), )
if mibBuilder.loadTexts: xylanFltServiceNumberTable.setStatus('mandatory')
xylanFltServiceNumberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 2, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltServiceIndex"), (0, "XYLAN-FLT-MIB", "xylanFltServiceNumberIndex"))
if mibBuilder.loadTexts: xylanFltServiceNumberEntry.setStatus('mandatory')
xylanFltServiceNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltServiceNumberIndex.setStatus('mandatory')
xylanFltServiceNumberAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltServiceNumberAdminState.setStatus('mandatory')
xylanFltServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 3), )
if mibBuilder.loadTexts: xylanFltServiceGroupTable.setStatus('mandatory')
xylanFltServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 3, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltServiceIndex"), (0, "XYLAN-FLT-MIB", "xylanFltServiceGroupIndex"))
if mibBuilder.loadTexts: xylanFltServiceGroupEntry.setStatus('mandatory')
xylanFltServiceGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(44, 44)).setFixedLength(44)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltServiceGroupIndex.setStatus('mandatory')
xylanFltServiceGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltServiceGroupAdminState.setStatus('mandatory')
xylanFltGlobalIPRule = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltGlobalIPRule.setStatus('mandatory')
xylanFltGlobalIPXRule = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltGlobalIPXRule.setStatus('mandatory')
xylanFltGlobalPrecedence = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("destination", 1), ("source", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltGlobalPrecedence.setStatus('mandatory')
xylanFltGlobalGroupTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 4), )
if mibBuilder.loadTexts: xylanFltGlobalGroupTable.setStatus('mandatory')
xylanFltGlobalGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 4, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltGlobalGroupIndex"))
if mibBuilder.loadTexts: xylanFltGlobalGroupEntry.setStatus('mandatory')
xylanFltGlobalGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(44, 44)).setFixedLength(44)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltGlobalGroupIndex.setStatus('mandatory')
xylanFltGlobalGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltGlobalGroupAdminState.setStatus('mandatory')
xylanFltGlobalServiceTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 5), )
if mibBuilder.loadTexts: xylanFltGlobalServiceTable.setStatus('mandatory')
xylanFltGlobalServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 5, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltGlobalServiceIndex"))
if mibBuilder.loadTexts: xylanFltGlobalServiceEntry.setStatus('mandatory')
xylanFltGlobalServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(44, 44)).setFixedLength(44)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltGlobalServiceIndex.setStatus('mandatory')
xylanFltGlobalServiceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 2, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanFltGlobalServiceAdminState.setStatus('mandatory')
xylanFltIpServicePortTbl = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 1), )
if mibBuilder.loadTexts: xylanFltIpServicePortTbl.setStatus('mandatory')
xylanFltIpServicePortTblEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 1, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltIpServicePortName"), (0, "XYLAN-FLT-MIB", "xylanFltIpServicePortNumber"))
if mibBuilder.loadTexts: xylanFltIpServicePortTblEntry.setStatus('mandatory')
xylanFltIpServicePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServicePortName.setStatus('mandatory')
xylanFltIpServicePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServicePortNumber.setStatus('mandatory')
xylanFltIpServiceRuleTbl = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2), )
if mibBuilder.loadTexts: xylanFltIpServiceRuleTbl.setStatus('mandatory')
xylanFltIpServiceRuleTblEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltIpServiceRuleName"), (0, "XYLAN-FLT-MIB", "xylanFltIpServiceRuleID"))
if mibBuilder.loadTexts: xylanFltIpServiceRuleTblEntry.setStatus('mandatory')
xylanFltIpServiceRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServiceRuleName.setStatus('mandatory')
xylanFltIpServiceRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServiceRuleID.setStatus('mandatory')
xylanFltIpServiceRuleDest = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServiceRuleDest.setStatus('mandatory')
xylanFltIpServiceRuleDestMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServiceRuleDestMask.setStatus('mandatory')
xylanFltIpServiceRuleSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServiceRuleSrc.setStatus('mandatory')
xylanFltIpServiceRuleSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServiceRuleSrcMask.setStatus('mandatory')
xylanFltIpServiceRuleDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServiceRuleDisp.setStatus('mandatory')
xylanFltIpServiceRuleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServiceRuleCount.setStatus('mandatory')
xylanFltIpServiceRuleGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpServiceRuleGroup.setStatus('mandatory')
xylanFltIpxRuleTbl = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 3), )
if mibBuilder.loadTexts: xylanFltIpxRuleTbl.setStatus('mandatory')
xylanFltIpxRuleTblEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 3, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltIpxRuleType"), (0, "XYLAN-FLT-MIB", "xylanFltIpxRuleID"))
if mibBuilder.loadTexts: xylanFltIpxRuleTblEntry.setStatus('mandatory')
xylanFltIpxRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 0), ("full-address", 1), ("node", 2), ("network", 3), ("global", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxRuleType.setStatus('mandatory')
xylanFltIpxRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxRuleID.setStatus('mandatory')
xylanFltIpxRuleNet = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxRuleNet.setStatus('mandatory')
xylanFltIpxRuleNode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxRuleNode.setStatus('mandatory')
xylanFltIpxRuleDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxRuleDisp.setStatus('mandatory')
xylanFltIpxRuleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxRuleCount.setStatus('mandatory')
xylanFltIpxRuleGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxRuleGroup.setStatus('mandatory')
xylanFltIpQueries = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 4), )
if mibBuilder.loadTexts: xylanFltIpQueries.setStatus('mandatory')
xylanFltIpQuery = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 4, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltIpQueryDest"), (0, "XYLAN-FLT-MIB", "xylanFltIpQuerySrc"), (0, "XYLAN-FLT-MIB", "xylanFltIpQueryPort"))
if mibBuilder.loadTexts: xylanFltIpQuery.setStatus('mandatory')
xylanFltIpQueryDest = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpQueryDest.setStatus('mandatory')
xylanFltIpQuerySrc = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpQuerySrc.setStatus('mandatory')
xylanFltIpQueryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpQueryPort.setStatus('mandatory')
xylanFltIpQueryDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpQueryDisp.setStatus('mandatory')
xylanFltIpQueryService = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpQueryService.setStatus('mandatory')
xylanFltIpQueryRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpQueryRuleID.setStatus('mandatory')
xylanFltIpxQueries = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 5), )
if mibBuilder.loadTexts: xylanFltIpxQueries.setStatus('mandatory')
xylanFltIpxQuery = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 5, 1), ).setIndexNames((0, "XYLAN-FLT-MIB", "xylanFltIpxQueryNetwork"), (0, "XYLAN-FLT-MIB", "xylanFltIpxQueryNode"))
if mibBuilder.loadTexts: xylanFltIpxQuery.setStatus('mandatory')
xylanFltIpxQueryNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxQueryNetwork.setStatus('mandatory')
xylanFltIpxQueryNode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxQueryNode.setStatus('mandatory')
xylanFltIpxQueryDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxQueryDisp.setStatus('mandatory')
xylanFltIpxQueryRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("no-rule-applies", 0), ("full-address", 1), ("node", 2), ("network", 3), ("global", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxQueryRuleType.setStatus('mandatory')
xylanFltIpxQueryRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltIpxQueryRuleID.setStatus('mandatory')
xylanFltActDefaultIpDisp = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltActDefaultIpDisp.setStatus('mandatory')
xylanFltActIpPrecedence = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("destination", 1), ("source", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltActIpPrecedence.setStatus('mandatory')
xylanFltActDefaultIpxDisp = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltActDefaultIpxDisp.setStatus('mandatory')
xylanFltIpTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 1))
xylanFltLastIpDenySrc = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastIpDenySrc.setStatus('mandatory')
xylanFltLastIpDenyDest = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastIpDenyDest.setStatus('mandatory')
xylanFltLastIpDenyPort = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastIpDenyPort.setStatus('mandatory')
xylanFltIpxTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 2))
xylanFltLastIpxDenyNet = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastIpxDenyNet.setStatus('mandatory')
xylanFltLastIpxDenyNode = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastIpxDenyNode.setStatus('mandatory')
xylanFltCommitTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 3))
xylanFltLastCommitTrapReason = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("no-trap-sent", 0), ("service-not-found", 1), ("group-not-found", 2), ("ipx-in-non-global-group", 3), ("port-in-two-services", 4), ("duplicate-service-names", 5), ("same-ipx-address-for-two-rules", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastCommitTrapReason.setStatus('mandatory')
xylanFltLastCommitTrapEntity1 = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastCommitTrapEntity1.setStatus('mandatory')
xylanFltLastCommitTrapEntity2 = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastCommitTrapEntity2.setStatus('optional')
xylanFltLastCommitTrapPort = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastCommitTrapPort.setStatus('optional')
xylanFltLastCommitTrapIpxNet = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 3, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastCommitTrapIpxNet.setStatus('optional')
xylanFltLastCommitTrapIpxNode = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 22, 4, 3, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanFltLastCommitTrapIpxNode.setStatus('optional')
mibBuilder.exportSymbols("XYLAN-FLT-MIB", xylanFltGlobalGroupEntry=xylanFltGlobalGroupEntry, xylanFltGlobals=xylanFltGlobals, xylanFltGlobalServiceTable=xylanFltGlobalServiceTable, xylanFltServiceNumberIndex=xylanFltServiceNumberIndex, xylanFltIpxRuleCount=xylanFltIpxRuleCount, xylanFltGlobalGroupAdminState=xylanFltGlobalGroupAdminState, xylanFltIpxRuleTblEntry=xylanFltIpxRuleTblEntry, xylanFltStaticConfig=xylanFltStaticConfig, xylanFltIpxQueryNode=xylanFltIpxQueryNode, xylanFltServiceIndex=xylanFltServiceIndex, xylanFltGroupIndex=xylanFltGroupIndex, xylanFltServiceNumberAdminState=xylanFltServiceNumberAdminState, xylanFltIpServicePortName=xylanFltIpServicePortName, xylanFltGroupAdrType=xylanFltGroupAdrType, xylanFltLastCommitTrapEntity2=xylanFltLastCommitTrapEntity2, xylanFltServiceGroupTable=xylanFltServiceGroupTable, xylanFltIpxRuleID=xylanFltIpxRuleID, xylanFltIpQueryService=xylanFltIpQueryService, xylanFltIpQueryRuleID=xylanFltIpQueryRuleID, xylanFltTraps=xylanFltTraps, xylanFltActIpPrecedence=xylanFltActIpPrecedence, xylanFltIpServiceRuleSrcMask=xylanFltIpServiceRuleSrcMask, xylanFltIpServiceRuleSrc=xylanFltIpServiceRuleSrc, xylanFltServiceNumberEntry=xylanFltServiceNumberEntry, xylanFltIpQuery=xylanFltIpQuery, xylanFltServiceTable=xylanFltServiceTable, xylanFltIpxRuleGroup=xylanFltIpxRuleGroup, xylanFltLastCommitTrapReason=xylanFltLastCommitTrapReason, xylanFltIpQueryPort=xylanFltIpQueryPort, xylanFltActiveOperState=xylanFltActiveOperState, xylanFltIpQuerySrc=xylanFltIpQuerySrc, xylanFltIpServiceRuleID=xylanFltIpServiceRuleID, xylanFltGlobalIPRule=xylanFltGlobalIPRule, xylanFltServiceEntry=xylanFltServiceEntry, xylanFltRuleListEntry=xylanFltRuleListEntry, xylanFltGlobalServiceIndex=xylanFltGlobalServiceIndex, xylanFltIpxRuleNode=xylanFltIpxRuleNode, xylanFltIpServiceRuleGroup=xylanFltIpServiceRuleGroup, xylanFltIpQueryDest=xylanFltIpQueryDest, xylanFltIpxRuleNet=xylanFltIpxRuleNet, xylanFltGlobalServiceEntry=xylanFltGlobalServiceEntry, xylanFltGroups=xylanFltGroups, xylanFltIpxTrapInfo=xylanFltIpxTrapInfo, xylanFltIpQueries=xylanFltIpQueries, xylanFltGlobalGroupIndex=xylanFltGlobalGroupIndex, xylanFltLastCommitTrapIpxNode=xylanFltLastCommitTrapIpxNode, xylanFltConfigAdminState=xylanFltConfigAdminState, xylanFltActiveAdminState=xylanFltActiveAdminState, xylanFltServiceGroupAdminState=xylanFltServiceGroupAdminState, xylanFltRuleListRule=xylanFltRuleListRule, xylanFltLastCommitTrapPort=xylanFltLastCommitTrapPort, xylanFltIpTrapInfo=xylanFltIpTrapInfo, xylanFltRuleListTable=xylanFltRuleListTable, xylanFltStatus=xylanFltStatus, xylanFltIpServiceRuleDisp=xylanFltIpServiceRuleDisp, xylanFltIpServiceRuleDestMask=xylanFltIpServiceRuleDestMask, xylanFltIpServicePortTblEntry=xylanFltIpServicePortTblEntry, xylanFltLastIpxDenyNet=xylanFltLastIpxDenyNet, xylanFltServices=xylanFltServices, xylanFltGlobalGroupTable=xylanFltGlobalGroupTable, xylanFltIpxRuleDisp=xylanFltIpxRuleDisp, xylanFltIpServiceRuleTbl=xylanFltIpServiceRuleTbl, xylanFltRuleListIndex=xylanFltRuleListIndex, xylanFltIpServiceRuleCount=xylanFltIpServiceRuleCount, xylanFltGroupTable=xylanFltGroupTable, xylanFltIpxRuleTbl=xylanFltIpxRuleTbl, xylanFltCommit=xylanFltCommit, xylanFltIpServicePortTbl=xylanFltIpServicePortTbl, xylanFltLastCommitTrapIpxNet=xylanFltLastCommitTrapIpxNet, xylanFltLastIpDenyPort=xylanFltLastIpDenyPort, xylanFltIpQueryDisp=xylanFltIpQueryDisp, xylanFltGlobalServiceAdminState=xylanFltGlobalServiceAdminState, xylanFltIpxQuery=xylanFltIpxQuery, xylanFltLastIpxDenyNode=xylanFltLastIpxDenyNode, xylanFltIpxQueryRuleID=xylanFltIpxQueryRuleID, xylanFltIpxQueries=xylanFltIpxQueries, xylanFltServiceAdminState=xylanFltServiceAdminState, xylanFltGlobalIPXRule=xylanFltGlobalIPXRule, xylanFltLastIpDenySrc=xylanFltLastIpDenySrc, xylanFltServiceNumberTable=xylanFltServiceNumberTable, xylanFltActDefaultIpDisp=xylanFltActDefaultIpDisp, xylanFltServiceGroupIndex=xylanFltServiceGroupIndex, xylanFltLastIpDenyDest=xylanFltLastIpDenyDest, xylanFltGlobalPrecedence=xylanFltGlobalPrecedence, xylanFltActDefaultIpxDisp=xylanFltActDefaultIpxDisp, xylanFltIpServicePortNumber=xylanFltIpServicePortNumber, xylanFltIpxQueryNetwork=xylanFltIpxQueryNetwork, xylanFltRuleListAdminState=xylanFltRuleListAdminState, xylanFltCommitTrapInfo=xylanFltCommitTrapInfo, xylanFltLastCommitTrapEntity1=xylanFltLastCommitTrapEntity1, xylanFltIpServiceRuleDest=xylanFltIpServiceRuleDest, xylanFltServiceGroupEntry=xylanFltServiceGroupEntry, xylanFltIpxRuleType=xylanFltIpxRuleType, xylanFltGroupAdminState=xylanFltGroupAdminState, xylanFltGroupProtocol=xylanFltGroupProtocol, xylanFltIpServiceRuleName=xylanFltIpServiceRuleName, xylanFltActiveConfig=xylanFltActiveConfig, xylanFltIpxQueryRuleType=xylanFltIpxQueryRuleType, xylanFltIpxQueryDisp=xylanFltIpxQueryDisp, xylanFltGroupEntry=xylanFltGroupEntry, xylanFltIpServiceRuleTblEntry=xylanFltIpServiceRuleTblEntry)
