#
# PySNMP MIB module Wellfleet-NHRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-NHRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Unsigned32, Bits, Counter64, Gauge32, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, MibIdentifier, TimeTicks, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "Bits", "Counter64", "Gauge32", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "MibIdentifier", "TimeTicks", "ModuleIdentity", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfNhrpGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfNhrpGroup")
wfNhrpNetTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1), )
if mibBuilder.loadTexts: wfNhrpNetTable.setStatus('mandatory')
wfNhrpNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1), ).setIndexNames((0, "Wellfleet-NHRP-MIB", "wfNhrpLayer2Type"), (0, "Wellfleet-NHRP-MIB", "wfNhrpLayer3Type"))
if mibBuilder.loadTexts: wfNhrpNetEntry.setStatus('mandatory')
wfNhrpDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDelete.setStatus('mandatory')
wfNhrpLayer2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fr", 1), ("atm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpLayer2Type.setStatus('mandatory')
wfNhrpLayer3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ip", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpLayer3Type.setStatus('mandatory')
wfNhrpNHReqPath = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("routed", 1), ("defNHS", 2))).clone('routed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpNHReqPath.setStatus('mandatory')
wfNhrpClientDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpClientDisable.setStatus('mandatory')
wfNhrpClientRegInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 200)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpClientRegInterval.setStatus('mandatory')
wfNhrpClientHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 200)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpClientHoldTime.setStatus('mandatory')
wfNhrpClientReqTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpClientReqTimeout.setStatus('mandatory')
wfNhrpClientReqRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpClientReqRetry.setStatus('mandatory')
wfNhrpClientMaxPendRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpClientMaxPendRequests.setStatus('mandatory')
wfNhrpServerDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerDisable.setStatus('mandatory')
wfNhrpServerFwdDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerFwdDisable.setStatus('mandatory')
wfNhrpServerMaxNhEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerMaxNhEntries.setStatus('mandatory')
wfNhrpServerMaxPendRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerMaxPendRequests.setStatus('mandatory')
wfNhrpServerUseBgp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use", 1), ("notuse", 2))).clone('notuse')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerUseBgp.setStatus('mandatory')
wfNhrpServerUseDns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use", 1), ("notuse", 2))).clone('notuse')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerUseDns.setStatus('mandatory')
wfNhrpServerDnsProxyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32550)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerDnsProxyPort.setStatus('mandatory')
wfNhrpServerOverrideNbmaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerOverrideNbmaAddr.setStatus('mandatory')
wfNhrpBogusNbmaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone('NOADDRESS')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpBogusNbmaAddr.setStatus('mandatory')
wfNhrpNhCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1024)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpNhCacheSize.setStatus('mandatory')
wfNhrpQosCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1024)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpQosCacheSize.setStatus('mandatory')
wfNhrpAddrXlateCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1024)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpAddrXlateCacheSize.setStatus('mandatory')
wfNhrpServerLoadBalance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerLoadBalance.setStatus('mandatory')
wfNhrpServerNegativeCaching = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerNegativeCaching.setStatus('mandatory')
wfNhrpServerNegativeTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpServerNegativeTTL.setStatus('mandatory')
wfNhrpDebugLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDebugLevel.setStatus('mandatory')
wfNhrpStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notreset", 1), ("reset", 2))).clone('notreset')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpStatReset.setStatus('mandatory')
wfNhrpNhCacheSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpNhCacheSequence.setStatus('mandatory')
wfNhrpNhCacheNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpNhCacheNumEntries.setStatus('mandatory')
wfNhrpQosCacheNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpQosCacheNumEntries.setStatus('mandatory')
wfNhrpAddrXlateCacheNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpAddrXlateCacheNumEntries.setStatus('mandatory')
wfNhrpIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 2), )
if mibBuilder.loadTexts: wfNhrpIfTable.setStatus('mandatory')
wfNhrpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 2, 1), ).setIndexNames((0, "Wellfleet-NHRP-MIB", "wfNhrpIfLayer2Type"), (0, "Wellfleet-NHRP-MIB", "wfNhrpIfLayer3Type"), (0, "Wellfleet-NHRP-MIB", "wfNhrpIfCct"))
if mibBuilder.loadTexts: wfNhrpIfEntry.setStatus('mandatory')
wfNhrpIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpIfDelete.setStatus('mandatory')
wfNhrpIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpIfDisable.setStatus('mandatory')
wfNhrpIfVCType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2))).clone('pvc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpIfVCType.setStatus('mandatory')
wfNhrpIfCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1023))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1023)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpIfCct.setStatus('mandatory')
wfNhrpIfLayer2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fr", 1), ("atm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpIfLayer2Type.setStatus('mandatory')
wfNhrpIfLayer3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ip", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpIfLayer3Type.setStatus('mandatory')
wfNhrpIfPktsXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpIfPktsXmt.setStatus('mandatory')
wfNhrpDefNhsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3), )
if mibBuilder.loadTexts: wfNhrpDefNhsTable.setStatus('mandatory')
wfNhrpDefNhsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1), ).setIndexNames((0, "Wellfleet-NHRP-MIB", "wfNhrpDefNhsLayer2Type"), (0, "Wellfleet-NHRP-MIB", "wfNhrpDefNhsLayer3Type"), (0, "Wellfleet-NHRP-MIB", "wfNhrpDefNhsIndex"))
if mibBuilder.loadTexts: wfNhrpDefNhsEntry.setStatus('mandatory')
wfNhrpDefNhsDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDefNhsDelete.setStatus('mandatory')
wfNhrpDefNhsDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDefNhsDisable.setStatus('mandatory')
wfNhrpDefNhsCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1023))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1023)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDefNhsCct.setStatus('mandatory')
wfNhrpDefNhsVcid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDefNhsVcid1.setStatus('mandatory')
wfNhrpDefNhsVcid2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDefNhsVcid2.setStatus('mandatory')
wfNhrpDefNhsProtoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDefNhsProtoAddr.setStatus('mandatory')
wfNhrpDefNhsServingNetworkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDefNhsServingNetworkAddr.setStatus('mandatory')
wfNhrpDefNhsServingNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDefNhsServingNetworkMask.setStatus('mandatory')
wfNhrpDefNhsNbmaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpDefNhsNbmaAddr.setStatus('mandatory')
wfNhrpDefNhsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpDefNhsStatus.setStatus('mandatory')
wfNhrpDefNhsLayer2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fr", 1), ("atm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpDefNhsLayer2Type.setStatus('mandatory')
wfNhrpDefNhsLayer3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ip", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpDefNhsLayer3Type.setStatus('mandatory')
wfNhrpDefNhsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpDefNhsIndex.setStatus('mandatory')
wfNhrpNHCacheTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4), )
if mibBuilder.loadTexts: wfNhrpNHCacheTable.setStatus('mandatory')
wfNhrpNHCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1), ).setIndexNames((0, "Wellfleet-NHRP-MIB", "wfNhrpNHCacheSlot"), (0, "Wellfleet-NHRP-MIB", "wfNhrpNHCacheLayer2Type"), (0, "Wellfleet-NHRP-MIB", "wfNhrpNHCacheLayer3Type"), (0, "Wellfleet-NHRP-MIB", "wfNhrpNHCacheDestAddr"), (0, "Wellfleet-NHRP-MIB", "wfNhrpNHCacheDestAddrPrefixLen"), (0, "Wellfleet-NHRP-MIB", "wfNhrpNHCachePrefOrder"))
if mibBuilder.loadTexts: wfNhrpNHCacheEntry.setStatus('mandatory')
wfNhrpNHCacheSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpNHCacheSlot.setStatus('mandatory')
wfNhrpNHCacheLayer2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fr", 1), ("atm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpNHCacheLayer2Type.setStatus('mandatory')
wfNhrpNHCacheLayer3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ip", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpNHCacheLayer3Type.setStatus('mandatory')
wfNhrpNHCacheDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpNHCacheDestAddr.setStatus('mandatory')
wfNhrpNHCacheDestAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpNHCacheDestAddrPrefixLen.setStatus('mandatory')
wfNhrpNHCachePrefOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpNHCachePrefOrder.setStatus('mandatory')
wfNhrpNHCacheNhProtAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpNHCacheNhProtAddr.setStatus('mandatory')
wfNhrpNHCacheNhNbmaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpNHCacheNhNbmaAddr.setStatus('mandatory')
wfNhrpNHCacheHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10, 30, 200))).clone(namedValues=NamedValues(("minimum", 10), ("default", 30), ("maximum", 200))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpNHCacheHoldTime.setStatus('mandatory')
wfNhrpNHCacheFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpNHCacheFlags.setStatus('mandatory')
wfNhrpNHCachePrefValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpNHCachePrefValue.setStatus('mandatory')
wfNhrpNHCacheMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpNHCacheMtu.setStatus('mandatory')
wfNhrpNHCacheDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpNHCacheDelete.setStatus('mandatory')
wfNhrpTest = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5))
wfNhrpTestDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestDelete.setStatus('mandatory')
wfNhrpTestLayer2Type = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fr", 1), ("atm", 2))).clone('fr')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestLayer2Type.setStatus('mandatory')
wfNhrpTestLayer3Type = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ip", 1))).clone('ip')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestLayer3Type.setStatus('mandatory')
wfNhrpTestSlot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 2))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 16), ("default", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestSlot.setStatus('mandatory')
wfNhrpTestNHRPeriod = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 5), Integer32().clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestNHRPeriod.setStatus('mandatory')
wfNhrpTestNHRDestAddr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestNHRDestAddr.setStatus('mandatory')
wfNhrpTestNHRDestPrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestNHRDestPrefix.setStatus('mandatory')
wfNhrpTestNHRReqOpt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestNHRReqOpt.setStatus('mandatory')
wfNhrpTestNHRReqQOS = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestNHRReqQOS.setStatus('mandatory')
wfNhrpTestLogDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestLogDisable.setStatus('mandatory')
wfNhrpTestRegCmd = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("ignore", 1), ("register", 2), ("purge", 3), ("nhreq", 4), ("mpsResReq", 5), ("mpsResRply", 6), ("mpsPurgeReq", 7), ("mpsPurgeRply", 8), ("mpsAddMps", 9), ("mpsDelMps", 10))).clone('ignore')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestRegCmd.setStatus('mandatory')
wfNhrpTestRegNhsAddr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestRegNhsAddr.setStatus('mandatory')
wfNhrpTestRegReqOpt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestRegReqOpt.setStatus('mandatory')
wfNhrpTestRegClientHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestRegClientHoldTime.setStatus('mandatory')
wfNhrpTestRegClientPrefVal = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestRegClientPrefVal.setStatus('mandatory')
wfNhrpTestRegClientMtu = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestRegClientMtu.setStatus('mandatory')
wfNhrpTestRegClientPrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestRegClientPrefix.setStatus('mandatory')
wfNhrpTestRegClientProto = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestRegClientProto.setStatus('mandatory')
wfNhrpTestRegClientNbma = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestRegClientNbma.setStatus('mandatory')
wfNhrpTestMpsGH = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestMpsGH.setStatus('mandatory')
wfNhrpTestMpsCct = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 5, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNhrpTestMpsCct.setStatus('mandatory')
wfNhrpClientStatTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6), )
if mibBuilder.loadTexts: wfNhrpClientStatTable.setStatus('mandatory')
wfNhrpClientStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1), ).setIndexNames((0, "Wellfleet-NHRP-MIB", "wfNhrpClientStatL2Type"), (0, "Wellfleet-NHRP-MIB", "wfNhrpClientStatL3Type"))
if mibBuilder.loadTexts: wfNhrpClientStatEntry.setStatus('mandatory')
wfNhrpClientStatL2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fr", 1), ("atm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatL2Type.setStatus('mandatory')
wfNhrpClientStatL3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ip", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatL3Type.setStatus('mandatory')
wfNhrpClientStatTxResolveReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatTxResolveReq.setStatus('mandatory')
wfNhrpClientStatRxResolveReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatRxResolveReplyAck.setStatus('mandatory')
wfNhrpClientStatRxResolveReplyNak = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatRxResolveReplyNak.setStatus('mandatory')
wfNhrpClientStatTxRegisterReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatTxRegisterReq.setStatus('mandatory')
wfNhrpClientStatRxRegisterReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatRxRegisterReplyAck.setStatus('mandatory')
wfNhrpClientStatRxRegisterReplyNak = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatRxRegisterReplyNak.setStatus('mandatory')
wfNhrpClientStatTxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatTxPurgeReq.setStatus('mandatory')
wfNhrpClientStatRxPurgeReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatRxPurgeReplyAck.setStatus('mandatory')
wfNhrpClientStatRxPurgeReplyNak = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatRxPurgeReplyNak.setStatus('mandatory')
wfNhrpClientStatUnsolicitPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatUnsolicitPurgeReq.setStatus('mandatory')
wfNhrpClientStatTxError = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatTxError.setStatus('mandatory')
wfNhrpClientStatRxError = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatRxError.setStatus('mandatory')
wfNhrpClientStatLocalError = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatLocalError.setStatus('mandatory')
wfNhrpClientStatRetryReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpClientStatRetryReq.setStatus('mandatory')
wfNhrpServerStatTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7), )
if mibBuilder.loadTexts: wfNhrpServerStatTable.setStatus('mandatory')
wfNhrpServerStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1), ).setIndexNames((0, "Wellfleet-NHRP-MIB", "wfNhrpServerStatL2Type"), (0, "Wellfleet-NHRP-MIB", "wfNhrpServerStatL3Type"))
if mibBuilder.loadTexts: wfNhrpServerStatEntry.setStatus('mandatory')
wfNhrpServerStatL2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fr", 1), ("atm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatL2Type.setStatus('mandatory')
wfNhrpServerStatL3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ip", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatL3Type.setStatus('mandatory')
wfNhrpServerStatRxResolveReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatRxResolveReq.setStatus('mandatory')
wfNhrpServerStatTxResolveReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatTxResolveReplyAck.setStatus('mandatory')
wfNhrpServerStatTxResolveReplyNak = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatTxResolveReplyNak.setStatus('mandatory')
wfNhrpServerStatRxRegisterReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatRxRegisterReq.setStatus('mandatory')
wfNhrpServerStatTxRegisterReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatTxRegisterReplyAck.setStatus('mandatory')
wfNhrpServerStatTxRegisterReplyNak = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatTxRegisterReplyNak.setStatus('mandatory')
wfNhrpServerStatRxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatRxPurgeReq.setStatus('mandatory')
wfNhrpServerStatTxPurgeReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatTxPurgeReplyAck.setStatus('mandatory')
wfNhrpServerStatTxPurgeReplyNak = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatTxPurgeReplyNak.setStatus('mandatory')
wfNhrpServerStatRxError = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatRxError.setStatus('mandatory')
wfNhrpServerStatTxError = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatTxError.setStatus('mandatory')
wfNhrpServerStatFwdResolveReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatFwdResolveReq.setStatus('mandatory')
wfNhrpServerStatFwdResolveReply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatFwdResolveReply.setStatus('mandatory')
wfNhrpServerStatFwdRegisterReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatFwdRegisterReq.setStatus('mandatory')
wfNhrpServerStatFwdRegisterReply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatFwdRegisterReply.setStatus('mandatory')
wfNhrpServerStatFwdPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatFwdPurgeReq.setStatus('mandatory')
wfNhrpServerStatFwdPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatFwdPurgeReply.setStatus('mandatory')
wfNhrpServerStatFwdError = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatFwdError.setStatus('mandatory')
wfNhrpServerStatDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 23, 7, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNhrpServerStatDropPkts.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-NHRP-MIB", wfNhrpTestMpsGH=wfNhrpTestMpsGH, wfNhrpServerStatRxError=wfNhrpServerStatRxError, wfNhrpServerStatEntry=wfNhrpServerStatEntry, wfNhrpClientStatL3Type=wfNhrpClientStatL3Type, wfNhrpServerStatFwdResolveReply=wfNhrpServerStatFwdResolveReply, wfNhrpServerStatFwdRegisterReply=wfNhrpServerStatFwdRegisterReply, wfNhrpClientStatTable=wfNhrpClientStatTable, wfNhrpQosCacheSize=wfNhrpQosCacheSize, wfNhrpNHCacheNhProtAddr=wfNhrpNHCacheNhProtAddr, wfNhrpDefNhsTable=wfNhrpDefNhsTable, wfNhrpServerNegativeTTL=wfNhrpServerNegativeTTL, wfNhrpClientHoldTime=wfNhrpClientHoldTime, wfNhrpServerStatTxResolveReplyAck=wfNhrpServerStatTxResolveReplyAck, wfNhrpTestNHRReqQOS=wfNhrpTestNHRReqQOS, wfNhrpDefNhsIndex=wfNhrpDefNhsIndex, wfNhrpTestRegClientMtu=wfNhrpTestRegClientMtu, wfNhrpNhCacheSequence=wfNhrpNhCacheSequence, wfNhrpServerLoadBalance=wfNhrpServerLoadBalance, wfNhrpClientStatRxPurgeReplyNak=wfNhrpClientStatRxPurgeReplyNak, wfNhrpServerOverrideNbmaAddr=wfNhrpServerOverrideNbmaAddr, wfNhrpNhCacheSize=wfNhrpNhCacheSize, wfNhrpServerStatFwdPurgeReq=wfNhrpServerStatFwdPurgeReq, wfNhrpDefNhsLayer3Type=wfNhrpDefNhsLayer3Type, wfNhrpTest=wfNhrpTest, wfNhrpServerDnsProxyPort=wfNhrpServerDnsProxyPort, wfNhrpTestRegCmd=wfNhrpTestRegCmd, wfNhrpNetEntry=wfNhrpNetEntry, wfNhrpIfEntry=wfNhrpIfEntry, wfNhrpDefNhsCct=wfNhrpDefNhsCct, wfNhrpServerStatTxResolveReplyNak=wfNhrpServerStatTxResolveReplyNak, wfNhrpServerStatFwdError=wfNhrpServerStatFwdError, wfNhrpIfDelete=wfNhrpIfDelete, wfNhrpNHCacheSlot=wfNhrpNHCacheSlot, wfNhrpDefNhsDelete=wfNhrpDefNhsDelete, wfNhrpDebugLevel=wfNhrpDebugLevel, wfNhrpServerMaxNhEntries=wfNhrpServerMaxNhEntries, wfNhrpTestRegClientNbma=wfNhrpTestRegClientNbma, wfNhrpTestNHRDestPrefix=wfNhrpTestNHRDestPrefix, wfNhrpBogusNbmaAddr=wfNhrpBogusNbmaAddr, wfNhrpIfCct=wfNhrpIfCct, wfNhrpNHReqPath=wfNhrpNHReqPath, wfNhrpClientStatLocalError=wfNhrpClientStatLocalError, wfNhrpServerStatL2Type=wfNhrpServerStatL2Type, wfNhrpIfVCType=wfNhrpIfVCType, wfNhrpNHCacheDestAddr=wfNhrpNHCacheDestAddr, wfNhrpClientStatL2Type=wfNhrpClientStatL2Type, wfNhrpServerUseBgp=wfNhrpServerUseBgp, wfNhrpServerDisable=wfNhrpServerDisable, wfNhrpServerUseDns=wfNhrpServerUseDns, wfNhrpDefNhsProtoAddr=wfNhrpDefNhsProtoAddr, wfNhrpDefNhsStatus=wfNhrpDefNhsStatus, wfNhrpServerStatFwdRegisterReq=wfNhrpServerStatFwdRegisterReq, wfNhrpAddrXlateCacheSize=wfNhrpAddrXlateCacheSize, wfNhrpClientStatRxResolveReplyNak=wfNhrpClientStatRxResolveReplyNak, wfNhrpNhCacheNumEntries=wfNhrpNhCacheNumEntries, wfNhrpNHCachePrefOrder=wfNhrpNHCachePrefOrder, wfNhrpClientStatRxResolveReplyAck=wfNhrpClientStatRxResolveReplyAck, wfNhrpClientStatRxError=wfNhrpClientStatRxError, wfNhrpServerStatRxResolveReq=wfNhrpServerStatRxResolveReq, wfNhrpClientStatUnsolicitPurgeReq=wfNhrpClientStatUnsolicitPurgeReq, wfNhrpNHCacheMtu=wfNhrpNHCacheMtu, wfNhrpTestRegReqOpt=wfNhrpTestRegReqOpt, wfNhrpQosCacheNumEntries=wfNhrpQosCacheNumEntries, wfNhrpStatReset=wfNhrpStatReset, wfNhrpClientMaxPendRequests=wfNhrpClientMaxPendRequests, wfNhrpDefNhsEntry=wfNhrpDefNhsEntry, wfNhrpTestDelete=wfNhrpTestDelete, wfNhrpIfDisable=wfNhrpIfDisable, wfNhrpDefNhsNbmaAddr=wfNhrpDefNhsNbmaAddr, wfNhrpServerStatTable=wfNhrpServerStatTable, wfNhrpTestRegClientHoldTime=wfNhrpTestRegClientHoldTime, wfNhrpClientStatEntry=wfNhrpClientStatEntry, wfNhrpClientStatTxError=wfNhrpClientStatTxError, wfNhrpTestLayer3Type=wfNhrpTestLayer3Type, wfNhrpClientStatTxResolveReq=wfNhrpClientStatTxResolveReq, wfNhrpServerNegativeCaching=wfNhrpServerNegativeCaching, wfNhrpIfLayer3Type=wfNhrpIfLayer3Type, wfNhrpDefNhsDisable=wfNhrpDefNhsDisable, wfNhrpDefNhsLayer2Type=wfNhrpDefNhsLayer2Type, wfNhrpNHCacheDestAddrPrefixLen=wfNhrpNHCacheDestAddrPrefixLen, wfNhrpDefNhsVcid1=wfNhrpDefNhsVcid1, wfNhrpTestMpsCct=wfNhrpTestMpsCct, wfNhrpClientStatRxPurgeReplyAck=wfNhrpClientStatRxPurgeReplyAck, wfNhrpNHCachePrefValue=wfNhrpNHCachePrefValue, wfNhrpClientStatTxRegisterReq=wfNhrpClientStatTxRegisterReq, wfNhrpAddrXlateCacheNumEntries=wfNhrpAddrXlateCacheNumEntries, wfNhrpServerStatTxRegisterReplyAck=wfNhrpServerStatTxRegisterReplyAck, wfNhrpTestRegClientPrefix=wfNhrpTestRegClientPrefix, wfNhrpServerStatTxPurgeReplyNak=wfNhrpServerStatTxPurgeReplyNak, wfNhrpTestLogDisable=wfNhrpTestLogDisable, wfNhrpServerStatDropPkts=wfNhrpServerStatDropPkts, wfNhrpServerFwdDisable=wfNhrpServerFwdDisable, wfNhrpNetTable=wfNhrpNetTable, wfNhrpDefNhsServingNetworkMask=wfNhrpDefNhsServingNetworkMask, wfNhrpServerStatRxPurgeReq=wfNhrpServerStatRxPurgeReq, wfNhrpNHCacheDelete=wfNhrpNHCacheDelete, wfNhrpClientStatRetryReq=wfNhrpClientStatRetryReq, wfNhrpNHCacheHoldTime=wfNhrpNHCacheHoldTime, wfNhrpServerStatTxError=wfNhrpServerStatTxError, wfNhrpClientStatRxRegisterReplyAck=wfNhrpClientStatRxRegisterReplyAck, wfNhrpServerStatTxPurgeReplyAck=wfNhrpServerStatTxPurgeReplyAck, wfNhrpNHCacheTable=wfNhrpNHCacheTable, wfNhrpServerStatFwdPurgeReply=wfNhrpServerStatFwdPurgeReply, wfNhrpClientReqTimeout=wfNhrpClientReqTimeout, wfNhrpNHCacheNhNbmaAddr=wfNhrpNHCacheNhNbmaAddr, wfNhrpTestRegNhsAddr=wfNhrpTestRegNhsAddr, wfNhrpClientStatRxRegisterReplyNak=wfNhrpClientStatRxRegisterReplyNak, wfNhrpClientReqRetry=wfNhrpClientReqRetry, wfNhrpServerMaxPendRequests=wfNhrpServerMaxPendRequests, wfNhrpTestRegClientProto=wfNhrpTestRegClientProto, wfNhrpServerStatL3Type=wfNhrpServerStatL3Type, wfNhrpClientDisable=wfNhrpClientDisable, wfNhrpClientRegInterval=wfNhrpClientRegInterval, wfNhrpDefNhsVcid2=wfNhrpDefNhsVcid2, wfNhrpTestSlot=wfNhrpTestSlot, wfNhrpIfPktsXmt=wfNhrpIfPktsXmt, wfNhrpServerStatTxRegisterReplyNak=wfNhrpServerStatTxRegisterReplyNak, wfNhrpNHCacheLayer3Type=wfNhrpNHCacheLayer3Type, wfNhrpTestLayer2Type=wfNhrpTestLayer2Type, wfNhrpTestNHRReqOpt=wfNhrpTestNHRReqOpt, wfNhrpNHCacheFlags=wfNhrpNHCacheFlags, wfNhrpNHCacheEntry=wfNhrpNHCacheEntry, wfNhrpTestRegClientPrefVal=wfNhrpTestRegClientPrefVal, wfNhrpIfLayer2Type=wfNhrpIfLayer2Type, wfNhrpIfTable=wfNhrpIfTable, wfNhrpClientStatTxPurgeReq=wfNhrpClientStatTxPurgeReq, wfNhrpDelete=wfNhrpDelete, wfNhrpLayer2Type=wfNhrpLayer2Type, wfNhrpTestNHRDestAddr=wfNhrpTestNHRDestAddr, wfNhrpTestNHRPeriod=wfNhrpTestNHRPeriod, wfNhrpDefNhsServingNetworkAddr=wfNhrpDefNhsServingNetworkAddr, wfNhrpServerStatFwdResolveReq=wfNhrpServerStatFwdResolveReq, wfNhrpServerStatRxRegisterReq=wfNhrpServerStatRxRegisterReq, wfNhrpNHCacheLayer2Type=wfNhrpNHCacheLayer2Type, wfNhrpLayer3Type=wfNhrpLayer3Type)
