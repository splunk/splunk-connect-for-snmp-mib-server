#
# PySNMP MIB module Wellfleet-RREDUND-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-RREDUND-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, IpAddress, Counter32, Integer32, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, MibIdentifier, Gauge32, iso, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "IpAddress", "Counter32", "Integer32", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "MibIdentifier", "Gauge32", "iso", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfRRedGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfRRedGroup")
wfRRedundGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1))
wfRRedundDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundDelete.setStatus('mandatory')
wfRRedundDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundDisable.setStatus('mandatory')
wfRRedundState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("up", 1), ("waitnewpri", 2), ("rcvdprigdby", 3), ("waitprigdby", 4), ("waitsosrply", 5), ("bidding", 6), ("init", 7), ("down", 8), ("notpresent", 9))).clone('init')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundState.setStatus('mandatory')
wfRRedundGroupId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundGroupId.setStatus('mandatory')
wfRRedundMemberId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundMemberId.setStatus('mandatory')
wfRRedundRole = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2))).clone('secondary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundRole.setStatus('mandatory')
wfRRedundRefNum = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRefNum.setStatus('mandatory')
wfRRedundGoodIFCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundGoodIFCount.setStatus('mandatory')
wfRRedundGoodRESCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundGoodRESCount.setStatus('mandatory')
wfRRedundSwitch = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dontswitch", 1), ("switch", 2))).clone('dontswitch')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundSwitch.setStatus('mandatory')
wfRRedundAuto = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("manual", 1), ("auto", 2), ("oneshotauto", 3), ("failureonlyauto", 4))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundAuto.setStatus('mandatory')
wfRRedundGoodBidCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundGoodBidCount.setStatus('mandatory')
wfRRedundVersion = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 13), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundVersion.setStatus('mandatory')
wfRRedundPriority = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundPriority.setStatus('mandatory')
wfRRedundHelloTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundHelloTimer.setStatus('mandatory')
wfRRedundBidDuration = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(45)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundBidDuration.setStatus('mandatory')
wfRRedundTimeoutCounters = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundTimeoutCounters.setStatus('mandatory')
wfRRedundNPrimaryCounters = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundNPrimaryCounters.setStatus('mandatory')
wfRRedundRoleSwitchDelayTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundRoleSwitchDelayTimer.setStatus('mandatory')
wfRRedundPriConfigFilePath = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundPriConfigFilePath.setStatus('mandatory')
wfRRedundPriMemberID = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundPriMemberID.setStatus('mandatory')
wfRRedundPriState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("up", 1), ("waitnewpri", 2), ("rcvdprigdby", 3), ("waitprigdby", 4), ("waitsosrply", 5), ("bidding", 6), ("init", 7), ("down", 8), ("notpresent", 9))).clone('init')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundPriState.setStatus('mandatory')
wfRRedundPriRefNum = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundPriRefNum.setStatus('mandatory')
wfRRedundPriGoodIFCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundPriGoodIFCount.setStatus('mandatory')
wfRRedundPriGoodRESCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundPriGoodRESCount.setStatus('mandatory')
wfRRedundBSecMemberID = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundBSecMemberID.setStatus('mandatory')
wfRRedundBSecState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("up", 1), ("waitnewpri", 2), ("rcvdprigdby", 3), ("waitprigdby", 4), ("waitsosrply", 5), ("bidding", 6), ("init", 7), ("down", 8), ("notpresent", 9))).clone('init')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundBSecState.setStatus('mandatory')
wfRRedundBSecRefNum = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundBSecRefNum.setStatus('mandatory')
wfRRedundBSecGoodIFCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundBSecGoodIFCount.setStatus('mandatory')
wfRRedundBSecGoodRESCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundBSecGoodRESCount.setStatus('mandatory')
wfRRedundWarmBoot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundWarmBoot.setStatus('mandatory')
wfRRedundSlot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundSlot.setStatus('mandatory')
wfRRedundSlotMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 33), Gauge32().clone(4294705152)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundSlotMask.setStatus('mandatory')
wfRRedundAtmDeathTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundAtmDeathTimer.setStatus('mandatory')
wfRRedundCctTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2), )
if mibBuilder.loadTexts: wfRRedundCctTable.setStatus('mandatory')
wfRRedundCctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1), ).setIndexNames((0, "Wellfleet-RREDUND-MIB", "wfRRedundCctCct"))
if mibBuilder.loadTexts: wfRRedundCctEntry.setStatus('mandatory')
wfRRedundCctDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundCctDelete.setStatus('mandatory')
wfRRedundCctDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundCctDisable.setStatus('mandatory')
wfRRedundCctCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundCctCct.setStatus('mandatory')
wfRRedundCctPrimaryMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundCctPrimaryMACAddr.setStatus('mandatory')
wfRRedundCctMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("circuit", 1), ("link", 2))).clone('circuit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundCctMonitor.setStatus('mandatory')
wfRRedundCctRSwitchOnFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundCctRSwitchOnFailure.setStatus('mandatory')
wfRRedundCctSendPduDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundCctSendPduDisable.setStatus('mandatory')
wfRRedundCctStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundCctStatus.setStatus('mandatory')
wfRRedundCctSONMPXmtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundCctSONMPXmtCount.setStatus('mandatory')
wfRRedundCctSONMPRcvCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundCctSONMPRcvCount.setStatus('mandatory')
wfRRedundCctSONMPRcvErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundCctSONMPRcvErrorCount.setStatus('mandatory')
wfRRedundResourceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3), )
if mibBuilder.loadTexts: wfRRedundResourceTable.setStatus('mandatory')
wfRRedundResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1), ).setIndexNames((0, "Wellfleet-RREDUND-MIB", "wfRRedundResourceCircuitNumber"), (0, "Wellfleet-RREDUND-MIB", "wfRRedundResourceNetAddr"))
if mibBuilder.loadTexts: wfRRedundResourceEntry.setStatus('mandatory')
wfRRedundResourceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundResourceDelete.setStatus('mandatory')
wfRRedundResourceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundResourceDisable.setStatus('mandatory')
wfRRedundResourceCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundResourceCircuitNumber.setStatus('mandatory')
wfRRedundResourceNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundResourceNetAddr.setStatus('mandatory')
wfRRedundResourceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("reachable", 1), ("unreachable", 2), ("unknown", 3))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundResourceStatus.setStatus('mandatory')
wfRRedundResourceStatusUpdateDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundResourceStatusUpdateDisable.setStatus('mandatory')
wfRRedundResourcePingIntervalTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86399)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundResourcePingIntervalTimer.setStatus('mandatory')
wfRRedundResourcePingRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundResourcePingRetryCount.setStatus('mandatory')
wfRRedundResourcePingTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundResourcePingTimeOut.setStatus('mandatory')
wfRRedundRemoteMemberTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4), )
if mibBuilder.loadTexts: wfRRedundRemoteMemberTable.setStatus('mandatory')
wfRRedundRemoteMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1), ).setIndexNames((0, "Wellfleet-RREDUND-MIB", "wfRRedundRemoteMemberGroupId"), (0, "Wellfleet-RREDUND-MIB", "wfRRedundRemoteMemberId"))
if mibBuilder.loadTexts: wfRRedundRemoteMemberEntry.setStatus('mandatory')
wfRRedundRemoteMemberDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRRedundRemoteMemberDelete.setStatus('mandatory')
wfRRedundRemoteMemberGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberGroupId.setStatus('mandatory')
wfRRedundRemoteMemberId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberId.setStatus('mandatory')
wfRRedundRemoteMemberNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberNetAddr.setStatus('mandatory')
wfRRedundRemoteMemberRole = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2))).clone('secondary')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberRole.setStatus('mandatory')
wfRRedundRemoteMemberState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("up", 1), ("waitnewpri", 2), ("rcvdprigdby", 3), ("waitprigdby", 4), ("waitsosrply", 5), ("bidding", 6), ("init", 7), ("down", 8), ("notpresent", 9))).clone('init')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberState.setStatus('mandatory')
wfRRedundRemoteMemberRefNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberRefNum.setStatus('mandatory')
wfRRedundRemoteMemberPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberPriority.setStatus('mandatory')
wfRRedundRemoteMemberGoodIfCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberGoodIfCnt.setStatus('mandatory')
wfRRedundRemoteMemberGoodResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberGoodResCnt.setStatus('mandatory')
wfRRedundRemoteMemberIfCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberIfCnt.setStatus('mandatory')
wfRRedundRemoteMemberLocalIfReachCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 17, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRRedundRemoteMemberLocalIfReachCnt.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-RREDUND-MIB", wfRRedundRefNum=wfRRedundRefNum, wfRRedundBidDuration=wfRRedundBidDuration, wfRRedundRemoteMemberRole=wfRRedundRemoteMemberRole, wfRRedundRemoteMemberDelete=wfRRedundRemoteMemberDelete, wfRRedundSlotMask=wfRRedundSlotMask, wfRRedundCctDisable=wfRRedundCctDisable, wfRRedundCctRSwitchOnFailure=wfRRedundCctRSwitchOnFailure, wfRRedundWarmBoot=wfRRedundWarmBoot, wfRRedundResourcePingTimeOut=wfRRedundResourcePingTimeOut, wfRRedundRemoteMemberIfCnt=wfRRedundRemoteMemberIfCnt, wfRRedundRemoteMemberNetAddr=wfRRedundRemoteMemberNetAddr, wfRRedundRemoteMemberState=wfRRedundRemoteMemberState, wfRRedundCctSONMPRcvCount=wfRRedundCctSONMPRcvCount, wfRRedundTimeoutCounters=wfRRedundTimeoutCounters, wfRRedundRemoteMemberTable=wfRRedundRemoteMemberTable, wfRRedundBSecRefNum=wfRRedundBSecRefNum, wfRRedundResourceStatusUpdateDisable=wfRRedundResourceStatusUpdateDisable, wfRRedundRemoteMemberRefNum=wfRRedundRemoteMemberRefNum, wfRRedundPriGoodRESCount=wfRRedundPriGoodRESCount, wfRRedundCctStatus=wfRRedundCctStatus, wfRRedundSlot=wfRRedundSlot, wfRRedundBSecGoodIFCount=wfRRedundBSecGoodIFCount, wfRRedundGoodBidCount=wfRRedundGoodBidCount, wfRRedundRemoteMemberEntry=wfRRedundRemoteMemberEntry, wfRRedundMemberId=wfRRedundMemberId, wfRRedundCctTable=wfRRedundCctTable, wfRRedundCctDelete=wfRRedundCctDelete, wfRRedundBSecGoodRESCount=wfRRedundBSecGoodRESCount, wfRRedundResourceDisable=wfRRedundResourceDisable, wfRRedundResourceNetAddr=wfRRedundResourceNetAddr, wfRRedundAtmDeathTimer=wfRRedundAtmDeathTimer, wfRRedundRemoteMemberId=wfRRedundRemoteMemberId, wfRRedundCctCct=wfRRedundCctCct, wfRRedundRemoteMemberGroupId=wfRRedundRemoteMemberGroupId, wfRRedundAuto=wfRRedundAuto, wfRRedundGroupId=wfRRedundGroupId, wfRRedundBSecState=wfRRedundBSecState, wfRRedundPriRefNum=wfRRedundPriRefNum, wfRRedundResourceTable=wfRRedundResourceTable, wfRRedundVersion=wfRRedundVersion, wfRRedundRemoteMemberGoodResCnt=wfRRedundRemoteMemberGoodResCnt, wfRRedundRemoteMemberLocalIfReachCnt=wfRRedundRemoteMemberLocalIfReachCnt, wfRRedundNPrimaryCounters=wfRRedundNPrimaryCounters, wfRRedundPriority=wfRRedundPriority, wfRRedundDelete=wfRRedundDelete, wfRRedundPriState=wfRRedundPriState, wfRRedundCctMonitor=wfRRedundCctMonitor, wfRRedundPriGoodIFCount=wfRRedundPriGoodIFCount, wfRRedundCctSONMPXmtCount=wfRRedundCctSONMPXmtCount, wfRRedundCctEntry=wfRRedundCctEntry, wfRRedundBSecMemberID=wfRRedundBSecMemberID, wfRRedundCctSONMPRcvErrorCount=wfRRedundCctSONMPRcvErrorCount, wfRRedundResourceDelete=wfRRedundResourceDelete, wfRRedundRemoteMemberGoodIfCnt=wfRRedundRemoteMemberGoodIfCnt, wfRRedundResourceCircuitNumber=wfRRedundResourceCircuitNumber, wfRRedundState=wfRRedundState, wfRRedundGoodRESCount=wfRRedundGoodRESCount, wfRRedundHelloTimer=wfRRedundHelloTimer, wfRRedundRole=wfRRedundRole, wfRRedundRoleSwitchDelayTimer=wfRRedundRoleSwitchDelayTimer, wfRRedundResourcePingRetryCount=wfRRedundResourcePingRetryCount, wfRRedundSwitch=wfRRedundSwitch, wfRRedundCctPrimaryMACAddr=wfRRedundCctPrimaryMACAddr, wfRRedundResourceEntry=wfRRedundResourceEntry, wfRRedundRemoteMemberPriority=wfRRedundRemoteMemberPriority, wfRRedundGroup=wfRRedundGroup, wfRRedundGoodIFCount=wfRRedundGoodIFCount, wfRRedundResourceStatus=wfRRedundResourceStatus, wfRRedundCctSendPduDisable=wfRRedundCctSendPduDisable, wfRRedundPriMemberID=wfRRedundPriMemberID, wfRRedundDisable=wfRRedundDisable, wfRRedundPriConfigFilePath=wfRRedundPriConfigFilePath, wfRRedundResourcePingIntervalTimer=wfRRedundResourcePingIntervalTimer)
