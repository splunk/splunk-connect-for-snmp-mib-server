#
# PySNMP MIB module GDCMDM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GDCMDM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:05:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
SCinstance, = mibBuilder.importSymbols("GDCMACRO-MIB", "SCinstance")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Unsigned32, Gauge32, MibIdentifier, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, Integer32, enterprises, TimeTicks, ModuleIdentity, IpAddress, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "Gauge32", "MibIdentifier", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "Integer32", "enterprises", "TimeTicks", "ModuleIdentity", "IpAddress", "Counter64", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
gdc = MibIdentifier((1, 3, 6, 1, 4, 1, 498))
mdm = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 4))
mdmNetworkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 1), )
if mibBuilder.loadTexts: mdmNetworkConfigTable.setStatus('mandatory')
mdmNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 1, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmNetworkIndex"))
if mibBuilder.loadTexts: mdmNetworkEntry.setStatus('mandatory')
mdmNetworkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 1, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmNetworkIndex.setStatus('mandatory')
mdmNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("switchedNetwork", 1), ("privateLine2Wire", 2), ("privateLine4Wire", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmNetworkType.setStatus('mandatory')
mdmSNTxType = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("permissive", 1), ("programmable", 2), ("adjustable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSNTxType.setStatus('mandatory')
mdmSNTxLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSNTxLevel.setStatus('mandatory')
mdmSNHandshakeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("gdcVfastAuto", 1), ("gdcVfastOnly", 2), ("v32bisAuto", 3), ("v32bisOnly", 4), ("v32Auto", 5), ("v32Only", 6), ("v22bis", 7), ("v22Only", 8), ("bell212", 9), ("bell103", 10), ("v21", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSNHandshakeMode.setStatus('mandatory')
mdmDTEConfigTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 2), )
if mibBuilder.loadTexts: mdmDTEConfigTable.setStatus('mandatory')
mdmDTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 2, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmDTEIndex"))
if mibBuilder.loadTexts: mdmDTEntry.setStatus('mandatory')
mdmDTEIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDTEIndex.setStatus('mandatory')
mdmDTESpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("autobaud", 1), ("lastAT", 2), ("bps300", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12000", 9), ("bps14400", 10), ("bps16800", 11), ("bps19200", 12), ("bps21600", 13), ("bps24000", 14), ("bps26400", 15), ("bps28800", 16), ("bps38400", 17), ("bps57600", 18), ("bps76800", 19), ("bps115200", 20), ("bps128000", 21)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDTESpeed.setStatus('mandatory')
mdmCPMResp = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("autobaud", 1), ("lastConnectSpeed", 2), ("bps300", 3), ("bps1200", 4), ("bps2400", 5), ("bps4800", 6), ("bps7200", 7), ("bps9600", 8), ("bps12000", 9), ("bps14400", 10), ("bps16800", 11), ("bps19200", 12), ("bps21600", 13), ("bps24000", 14), ("bps26400", 15), ("bps28800", 16), ("bps38400", 17), ("bps57600", 18), ("bps76800", 19), ("bps115200", 20), ("bps128000", 21)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCPMResp.setStatus('mandatory')
mdmCharLength = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("data6Stop1", 1), ("data7Stop1", 2), ("data7ParityStop1", 3), ("data8Stop1", 4), ("data7ParityStop2", 5), ("data8ParityStop1", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCharLength.setStatus('mandatory')
mdmParity = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("even", 1), ("space", 2), ("odd", 3), ("mark", 4), ("auto", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmParity.setStatus('mandatory')
mdmOverspeed = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nominal", 1), ("extended", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmOverspeed.setStatus('mandatory')
mdmFlowCntrl = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("xonXoffSig", 2), ("cts", 3), ("rtsCts", 4), ("xonXoff", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmFlowCntrl.setStatus('mandatory')
mdmTermEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTermEcho.setStatus('mandatory')
mdmDCDCntrl = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forceOn", 1), ("real", 2), ("forceOnToggleDisc", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDCDCntrl.setStatus('mandatory')
mdmCTSCntrl = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cmdOnDataRTS", 1), ("cmdOnDataReal", 2), ("realCCITT", 3), ("forceOn", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCTSCntrl.setStatus('mandatory')
mdmDTRTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("forceon", 1), ("offInCmdMode", 2), ("offDisc", 3), ("offDiscRecallUser", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDTRTrans.setStatus('mandatory')
mdmDSRCntrl = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("onUntilDisc", 1), ("normal", 2), ("followDCD", 3), ("forceOn", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDSRCntrl.setStatus('mandatory')
mdmDSRCntrlAL = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onAnaloop", 1), ("offAnaloop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDSRCntrlAL.setStatus('mandatory')
mdmTXClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("receiverwrap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTXClockSource.setStatus('mandatory')
mdmRTSCTSDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRTSCTSDelay.setStatus('mandatory')
mdmCarriageReturnCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCarriageReturnCharacter.setStatus('mandatory')
mdmCharacterAbortDialing = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCharacterAbortDialing.setStatus('mandatory')
mdmDelayDTR = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDelayDTR.setStatus('mandatory')
mdmEscapeCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEscapeCharacter.setStatus('mandatory')
mdmLineFeedCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLineFeedCharacter.setStatus('mandatory')
mdmHangUpDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmHangUpDelay.setStatus('mandatory')
mdmEscapeCharacterGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmEscapeCharacterGuardTime.setStatus('mandatory')
mdmOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("asyncDataMode", 1), ("asyncCmdsyncData", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmOperatingMode.setStatus('mandatory')
mdmBackSpaceCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmBackSpaceCharacter.setStatus('mandatory')
mdmModemConfigTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 3), )
if mibBuilder.loadTexts: mdmModemConfigTable.setStatus('mandatory')
mdmModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 3, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmModemIndex"))
if mibBuilder.loadTexts: mdmModemEntry.setStatus('mandatory')
mdmModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmModemIndex.setStatus('mandatory')
mdmRingsToAns = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRingsToAns.setStatus('mandatory')
mdmFallFwrdBack = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmFallFwrdBack.setStatus('mandatory')
mdmTrellis = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTrellis.setStatus('mandatory')
mdmSQRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("sQThree", 2), ("sQForever", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSQRetrain.setStatus('mandatory')
mdmLongSpaceDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLongSpaceDisc.setStatus('mandatory')
mdmMakeBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("onLossDTR", 2), ("inAL", 3), ("inALorLossRTSorDTR", 4), ("onLossRTS", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmMakeBusy.setStatus('mandatory')
mdmRDLOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRDLOptions.setStatus('mandatory')
mdmTestTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTestTimer.setStatus('mandatory')
mdmDTETestCntrl = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDTETestCntrl.setStatus('mandatory')
mdmDCDLossDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDCDLossDisc.setStatus('mandatory')
mdmCDRespTime = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCDRespTime.setStatus('mandatory')
mdmAnswerOriginate = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("answerIfRingDetect", 1), ("forceAnswer", 2), ("autoAnswerInOriginate", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAnswerOriginate.setStatus('mandatory')
mdmWaitForDCD = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmWaitForDCD.setStatus('mandatory')
mdmDialerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 4), )
if mibBuilder.loadTexts: mdmDialerConfigTable.setStatus('mandatory')
mdmDialerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 4, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmDialerIndex"))
if mibBuilder.loadTexts: mdmDialerEntry.setStatus('mandatory')
mdmDialerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 4, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDialerIndex.setStatus('mandatory')
mdmCPMMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("basic", 1), ("extendedNoCPM", 2), ("extendedDialtone", 3), ("extendedBusy", 4), ("extendedFullCPM", 5), ("extendedFullCPMRingback", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCPMMonitor.setStatus('mandatory')
mdmParserSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("at", 1), ("v25async", 2), ("v25HDLC", 3), ("v25bisync", 4), ("noparser", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmParserSelection.setStatus('mandatory')
mdmDTRDial = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("disable", 1), ("cellNumber0", 2), ("cellNumber1", 3), ("cellNumber2", 4), ("cellNumber3", 5), ("cellNumber4", 6), ("cellNumber5", 7), ("cellNumber6", 8), ("cellNumber7", 9), ("cellNumber8", 10), ("cellNumber9", 11), ("talkData", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDTRDial.setStatus('mandatory')
mdmDialType = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pulse", 1), ("dtmf", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDialType.setStatus('mandatory')
mdmResponseMode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("enableInOriginate", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmResponseMode.setStatus('mandatory')
mdmResponseType = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("numeric", 1), ("alpha", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmResponseType.setStatus('mandatory')
mdmPauseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmPauseTime.setStatus('mandatory')
mdmWaitForDialtoneTime = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmWaitForDialtoneTime.setStatus('mandatory')
mdmProtocolConfigTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 5), )
if mibBuilder.loadTexts: mdmProtocolConfigTable.setStatus('mandatory')
mdmProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 5, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmProtocolIndex"))
if mibBuilder.loadTexts: mdmProtocolEntry.setStatus('mandatory')
mdmProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmProtocolIndex.setStatus('mandatory')
mdmCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("txpathonly", 3), ("rxpathonly", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCompression.setStatus('mandatory')
mdmAsyncProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("wire", 1), ("direct", 2), ("mnpreliable", 3), ("autoreliable", 4), ("v42reliable", 5), ("reliableLAPMorMNP", 6), ("v13", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAsyncProtocol.setStatus('mandatory')
mdmFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("unidirectional", 3), ("bidirectional", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmFlowControl.setStatus('mandatory')
mdmBreakHandling = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("expediteDest", 1), ("expediteNonDest", 2), ("nonExpediteNonDest", 3), ("ignored", 4), ("timedNonExpediteNonDest", 5), ("timedNonExpediteNonDest2", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmBreakHandling.setStatus('mandatory')
mdmConnAndLinkMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("separateMessages", 1), ("bothAfterLink", 2), ("microcomCompatible", 3), ("connectAfterLink", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmConnAndLinkMessages.setStatus('mandatory')
mdmErrorCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noBuffer", 1), ("bufferRxData", 2), ("fallbackWithFallbackChar", 3), ("fallbackV14Buffer", 4), ("fallbackV14WithFallbackChar", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmErrorCorrection.setStatus('mandatory')
mdmV13Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bidirectional", 1), ("txEnable", 2), ("rxEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmV13Mode.setStatus('mandatory')
mdmSyncProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalsync", 1), ("v13sync", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSyncProtocol.setStatus('mandatory')
mdmFrameRetransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmFrameRetransLimit.setStatus('mandatory')
mdmPrivateLineConfigTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 6), )
if mibBuilder.loadTexts: mdmPrivateLineConfigTable.setStatus('mandatory')
mdmPrivateLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 6, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmPrivateLineIndex"))
if mibBuilder.loadTexts: mdmPrivateLineEntry.setStatus('mandatory')
mdmPrivateLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 6, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmPrivateLineIndex.setStatus('mandatory')
mdmPrivateLineTxLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("dBm0", 1), ("dBm1", 2), ("dBm2", 3), ("dBm3", 4), ("dBm4", 5), ("dBm5", 6), ("dBm6", 7), ("dBm7", 8), ("dBm8", 9), ("dBm9", 10), ("dBm10", 11), ("dBm11", 12), ("dBm12", 13), ("dBm13", 14), ("dBm14", 15), ("dBm15", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmPrivateLineTxLevel.setStatus('mandatory')
mdmPrivateLineHandshakeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("gdcVfastonly", 1), ("v32bisonly", 2), ("v32only", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmPrivateLineHandshakeMode.setStatus('mandatory')
mdmAutoDialRestoral = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enableWithEndOfSession", 2), ("enableWithoutEndOfSession", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAutoDialRestoral.setStatus('mandatory')
mdmPrivateLineDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmPrivateLineDownTime.setStatus('mandatory')
mdmDBUtoPLLookbackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDBUtoPLLookbackTime.setStatus('mandatory')
mdmAlarmScanTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 7), )
if mibBuilder.loadTexts: mdmAlarmScanTable.setStatus('mandatory')
mdmAlarmScanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 7, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmAlarmScanIndex"))
if mibBuilder.loadTexts: mdmAlarmScanEntry.setStatus('mandatory')
mdmAlarmScanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 7, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmAlarmScanIndex.setStatus('mandatory')
mdmAlarmScan = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmAlarmScan.setStatus('mandatory')
mdmResetSelfPowerBit = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmResetSelfPowerBit.setStatus('mandatory')
mdmMaskAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 8), )
if mibBuilder.loadTexts: mdmMaskAlarmTable.setStatus('mandatory')
mdmMaskAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 8, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmMaskAlarmIndex"))
if mibBuilder.loadTexts: mdmMaskAlarmEntry.setStatus('mandatory')
mdmMaskAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmMaskAlarmIndex.setStatus('mandatory')
mdmDTRLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDTRLoss.setStatus('mandatory')
mdmFallback = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmFallback.setStatus('mandatory')
mdmRxdTran = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRxdTran.setStatus('mandatory')
mdmTxdTran = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTxdTran.setStatus('mandatory')
mdmDCDLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDCDLoss.setStatus('mandatory')
mdmRingNoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRingNoAnswer.setStatus('mandatory')
mdmRetrain = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRetrain.setStatus('mandatory')
mdmCallLength = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCallLength.setStatus('mandatory')
mdmCallFail = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCallFail.setStatus('mandatory')
mdmConfigErr = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmConfigErr.setStatus('mandatory')
mdmSignalQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSignalQuality.setStatus('mandatory')
mdmOnDBU = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmOnDBU.setStatus('mandatory')
mdmRemoteConfigMask = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRemoteConfigMask.setStatus('mandatory')
mdmTestTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 8, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmTestTimeout.setStatus('mandatory')
mdmThresholdsTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 9), )
if mibBuilder.loadTexts: mdmThresholdsTable.setStatus('mandatory')
mdmThresholdsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 9, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmThresholdsIndex"))
if mibBuilder.loadTexts: mdmThresholdsEntry.setStatus('mandatory')
mdmThresholdsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 9, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmThresholdsIndex.setStatus('mandatory')
mdmCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 9, 1, 2), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCallDuration.setStatus('mandatory')
mdmRetrainThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRetrainThreshold.setStatus('mandatory')
mdmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 10), )
if mibBuilder.loadTexts: mdmStatusTable.setStatus('mandatory')
mdmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 10, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmStatusIndex"))
if mibBuilder.loadTexts: mdmStatusEntry.setStatus('mandatory')
mdmStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmStatusIndex.setStatus('mandatory')
mdmPLLookbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmPLLookbackStatus.setStatus('mandatory')
mdmAutoDialRestoralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmAutoDialRestoralStatus.setStatus('mandatory')
mdmTXDtransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notransition", 1), ("transition", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTXDtransitions.setStatus('mandatory')
mdmRXDtransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notransition", 1), ("transition", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRXDtransitions.setStatus('mandatory')
mdmRTStransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notransition", 1), ("transition", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRTStransitions.setStatus('mandatory')
mdmDTRtransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notransition", 1), ("transition", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDTRtransitions.setStatus('mandatory')
mdmDCDtransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notransition", 1), ("transition", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDCDtransitions.setStatus('mandatory')
mdmTXCLKtransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notransition", 1), ("transition", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTXCLKtransitions.setStatus('mandatory')
mdmDTR = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDTR.setStatus('mandatory')
mdmCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCTS.setStatus('mandatory')
mdmDSR = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDSR.setStatus('mandatory')
mdmDCD = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDCD.setStatus('mandatory')
mdmSQM = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmSQM.setStatus('mandatory')
mdmRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRTS.setStatus('mandatory')
mdmSwitchedPrivate = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switchedNetwork", 1), ("privateLine", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmSwitchedPrivate.setStatus('mandatory')
mdmControlTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 11), )
if mibBuilder.loadTexts: mdmControlTable.setStatus('mandatory')
mdmControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 11, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmControlIndex"))
if mibBuilder.loadTexts: mdmControlEntry.setStatus('mandatory')
mdmControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 11, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmControlIndex.setStatus('mandatory')
mdmSoftReset = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmSoftReset.setStatus('mandatory')
mdmFrontPanel = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inhibit", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmFrontPanel.setStatus('mandatory')
mdmMakeClearBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onHook", 1), ("offHook", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmMakeClearBusy.setStatus('mandatory')
mdmPLTalkData = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("data", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmPLTalkData.setStatus('mandatory')
mdmWhatAreYouTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 12), )
if mibBuilder.loadTexts: mdmWhatAreYouTable.setStatus('mandatory')
mdmWhatAreYouEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 12, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmWhatAreYouIndex"))
if mibBuilder.loadTexts: mdmWhatAreYouEntry.setStatus('mandatory')
mdmWhatAreYouIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 12, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmWhatAreYouIndex.setStatus('mandatory')
mdmVFCard = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 127))).clone(namedValues=NamedValues(("domestic", 1), ("cardA", 65), ("cardB", 66), ("cardC", 67), ("cardD", 68), ("cardE", 69), ("cardF", 70), ("cardG", 71), ("cardH", 72), ("cardJ", 74), ("cardK", 75), ("cardL", 76), ("cardM", 77), ("cardN", 78), ("cardP", 80), ("cardR", 82), ("noCard", 127)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmVFCard.setStatus('mandatory')
mdmDTECard = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v35", 1), ("eia530", 2), ("eia232", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDTECard.setStatus('mandatory')
mdmProductCode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(23))).clone(namedValues=NamedValues(("dmsVfast", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmProductCode.setStatus('mandatory')
mdmCodeRev = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCodeRev.setStatus('mandatory')
mdmBootRev = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmBootRev.setStatus('mandatory')
mdmCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 12, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCountryCode.setStatus('mandatory')
mdmDiagnosticTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 13), )
if mibBuilder.loadTexts: mdmDiagnosticTable.setStatus('mandatory')
mdmDiagnosticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 13, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmDiagnosticIndex"))
if mibBuilder.loadTexts: mdmDiagnosticEntry.setStatus('mandatory')
mdmDiagnosticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 13, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDiagnosticIndex.setStatus('mandatory')
mdmDiagnosticTest = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("terminateTest", 1), ("analoop", 2), ("analoopSelfTest", 3), ("remoteDigitalLoop", 4), ("remoteDigitalLoopSelfTest", 5), ("selfTest", 6), ("digitalLoop", 7)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmDiagnosticTest.setStatus('mandatory')
mdmDiagnosticResults = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDiagnosticResults.setStatus('mandatory')
mdmDiagnosticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 68, 96, 97))).clone(namedValues=NamedValues(("rmtDigLpHsk", 1), ("inboundRmtDigLp", 2), ("rmtDigLp", 4), ("localDigLp", 8), ("analoopHsk", 16), ("analoop", 32), ("selftest", 64), ("rmtDigLpSelftest", 68), ("analoopSelftest", 96), ("notInTest", 97)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDiagnosticStatus.setStatus('mandatory')
mdmTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 8, 16, 17))).clone(namedValues=NamedValues(("canNotBeDone", 4), ("terminated", 8), ("timedout", 16), ("noPrevStatus", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTestStatus.setStatus('mandatory')
mdmTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 13, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmTestDuration.setStatus('mandatory')
mdmDialingFunctionTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 14), )
if mibBuilder.loadTexts: mdmDialingFunctionTable.setStatus('mandatory')
mdmDialingFunctionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 14, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmDialFunctionIndex"))
if mibBuilder.loadTexts: mdmDialingFunctionEntry.setStatus('mandatory')
mdmDialFunctionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 14, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDialFunctionIndex.setStatus('mandatory')
mdmManualDial = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 36))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmManualDial.setStatus('mandatory')
mdmTerminateCall = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("goOnhook", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmTerminateCall.setStatus('mandatory')
mdmDialStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 33))).clone(namedValues=NamedValues(("disconnect", 1), ("idle", 2), ("dial", 4), ("training", 8), ("retrain", 16), ("data", 32), ("inTest", 33)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDialStatus.setStatus('mandatory')
mdmCallProgressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 10, 16, 17, 18, 19, 32, 64, 128, 256, 257, 258, 259, 260))).clone(namedValues=NamedValues(("ringback", 1), ("incomingRing", 2), ("busy", 4), ("noAnswer", 8), ("ringAndNoAnswer", 10), ("noCarrier", 16), ("ringbackNoCarrier", 17), ("ringNoCarrier", 18), ("ringNoCarrier2", 19), ("noDialtone", 32), ("noLoopCurrent", 64), ("unobtainableNumber", 128), ("connect", 256), ("connectRingback", 257), ("connectIncomingRing", 258), ("connectIncomingRing2", 259), ("noPrevStatus", 260)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCallProgressStatus.setStatus('mandatory')
mdmDialingCellsFunctionTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 15), )
if mibBuilder.loadTexts: mdmDialingCellsFunctionTable.setStatus('mandatory')
mdmDialingCellsFunctionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 15, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmDialCellFunctionIndex"), (0, "GDCMDM-MIB", "mdmCellNumber"))
if mibBuilder.loadTexts: mdmDialingCellsFunctionEntry.setStatus('mandatory')
mdmDialCellFunctionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 15, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDialCellFunctionIndex.setStatus('mandatory')
mdmCellNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCellNumber.setStatus('mandatory')
mdmDial = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("goDial", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmDial.setStatus('mandatory')
mdmCellPhoneNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 15, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 36))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmCellPhoneNumber.setStatus('mandatory')
mdmTerminateCellCall = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("goOnhook", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmTerminateCellCall.setStatus('mandatory')
mdmMaintenanceTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 16), )
if mibBuilder.loadTexts: mdmMaintenanceTable.setStatus('mandatory')
mdmMaintenanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 16, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmMaintenanceIndex"))
if mibBuilder.loadTexts: mdmMaintenanceEntry.setStatus('mandatory')
mdmMaintenanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 16, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmMaintenanceIndex.setStatus('mandatory')
mdmSaveRecallConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("recallFactoryDefault0", 1), ("recallFactoryDefault1", 2), ("recallFactoryDefault2", 3), ("recallFactoryDefault3", 4), ("recallUserProfile0", 5), ("recallUserProfile1", 6), ("recallUserProfile2", 7), ("recallUserProfile3", 8), ("saveUserProfile0", 9), ("saveUserProfile1", 10), ("saveUserProfile2", 11), ("saveUserProfile3", 12)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmSaveRecallConfig.setStatus('mandatory')
mdmConfigCksum = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 16, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmConfigCksum.setStatus('mandatory')
mdmPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmPassword.setStatus('mandatory')
mdmSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 16, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmSerialNumber.setStatus('mandatory')
mdmPowerUpProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("zero", 1), ("one", 2), ("two", 3), ("three", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmPowerUpProfile.setStatus('mandatory')
mdmPasswordOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("enablehandshake", 2), ("enableonline", 3), ("enable", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmPasswordOperation.setStatus('mandatory')
mdmStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 17), )
if mibBuilder.loadTexts: mdmStatisticsTable.setStatus('mandatory')
mdmStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 17, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmStatisticsIndex"))
if mibBuilder.loadTexts: mdmStatisticsEntry.setStatus('mandatory')
mdmStatisticsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmStatisticsIndex.setStatus('mandatory')
mdmDCERate = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("bps300", 2), ("bps1200", 3), ("bps2400", 4), ("bps4800", 5), ("bps7200", 6), ("bps9600", 7), ("bps12000", 8), ("bps14400", 9), ("bps16800", 10), ("bps19200", 11), ("bps21600", 12), ("bps24000", 13), ("bps26400", 14), ("bps28800", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDCERate.setStatus('mandatory')
mdmCallDurationStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCallDurationStat.setStatus('mandatory')
mdmRetrainCount = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRetrainCount.setStatus('mandatory')
mdmFallbackCount = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmFallbackCount.setStatus('mandatory')
mdmFallforwardCount = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmFallforwardCount.setStatus('mandatory')
mdmRxSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRxSignalLevel.setStatus('mandatory')
mdmSignaltoNoiseRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmSignaltoNoiseRatio.setStatus('mandatory')
mdmAnswerOriginateStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("originate", 1), ("answer", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmAnswerOriginateStat.setStatus('mandatory')
mdmDiscReason = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("usertimeout", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDiscReason.setStatus('mandatory')
mdmCompressionEfficiency = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCompressionEfficiency.setStatus('mandatory')
mdmThruput = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmThruput.setStatus('mandatory')
mdmRemoteConfigTable = MibTable((1, 3, 6, 1, 4, 1, 498, 4, 18), )
if mibBuilder.loadTexts: mdmRemoteConfigTable.setStatus('mandatory')
mdmRemoteConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 4, 18, 1), ).setIndexNames((0, "GDCMDM-MIB", "mdmRemoteConfigIndex"))
if mibBuilder.loadTexts: mdmRemoteConfigEntry.setStatus('mandatory')
mdmRemoteConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 18, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRemoteConfigIndex.setStatus('mandatory')
mdmRemoteConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enableDTE", 2), ("enableDMS", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRemoteConfiguration.setStatus('mandatory')
mdmEndRemoteConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noUpdate", 1), ("update", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmEndRemoteConfiguration.setStatus('mandatory')
mdmPasswordRemoteConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 4, 18, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mdmPasswordRemoteConfiguration.setStatus('mandatory')
mdmMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 498, 4, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmMIBVersion.setStatus('mandatory')
mdmCallStatsTrap = NotificationType((1, 3, 6, 1, 4, 1, 498, 4) + (0,1)).setObjects(("GDCMDM-MIB", "mdmDCERate"), ("GDCMDM-MIB", "mdmRetrainCount"), ("GDCMDM-MIB", "mdmFallbackCount"), ("GDCMDM-MIB", "mdmFallforwardCount"), ("GDCMDM-MIB", "mdmRxSignalLevel"), ("GDCMDM-MIB", "mdmSignaltoNoiseRatio"), ("GDCMDM-MIB", "mdmAnswerOriginateStat"), ("GDCMDM-MIB", "mdmCallDurationStat"), ("GDCMDM-MIB", "mdmDiscReason"), ("GDCMDM-MIB", "mdmCompressionEfficiency"), ("GDCMDM-MIB", "mdmThruput"))
mibBuilder.exportSymbols("GDCMDM-MIB", mdmMakeBusy=mdmMakeBusy, mdmCarriageReturnCharacter=mdmCarriageReturnCharacter, mdmRxdTran=mdmRxdTran, mdmAlarmScanIndex=mdmAlarmScanIndex, mdmConfigErr=mdmConfigErr, mdmResponseType=mdmResponseType, mdmHangUpDelay=mdmHangUpDelay, mdmRTStransitions=mdmRTStransitions, mdmSoftReset=mdmSoftReset, mdmThresholdsIndex=mdmThresholdsIndex, mdmDialType=mdmDialType, mdmTestTimer=mdmTestTimer, mdmTerminateCall=mdmTerminateCall, mdmRemoteConfigMask=mdmRemoteConfigMask, mdmDiagnosticEntry=mdmDiagnosticEntry, mdmMaskAlarmTable=mdmMaskAlarmTable, mdmOverspeed=mdmOverspeed, mdmDCERate=mdmDCERate, mdmProtocolIndex=mdmProtocolIndex, mdm=mdm, mdmBackSpaceCharacter=mdmBackSpaceCharacter, mdmFallback=mdmFallback, mdmDialingFunctionTable=mdmDialingFunctionTable, mdmSignalQuality=mdmSignalQuality, mdmControlEntry=mdmControlEntry, mdmProductCode=mdmProductCode, mdmStatisticsTable=mdmStatisticsTable, mdmDiscReason=mdmDiscReason, mdmDCDLoss=mdmDCDLoss, mdmRemoteConfigTable=mdmRemoteConfigTable, mdmSaveRecallConfig=mdmSaveRecallConfig, mdmPrivateLineEntry=mdmPrivateLineEntry, mdmMaintenanceEntry=mdmMaintenanceEntry, mdmModemConfigTable=mdmModemConfigTable, mdmDTRLoss=mdmDTRLoss, mdmDTESpeed=mdmDTESpeed, mdmAutoDialRestoralStatus=mdmAutoDialRestoralStatus, mdmModemIndex=mdmModemIndex, mdmFallforwardCount=mdmFallforwardCount, mdmFallFwrdBack=mdmFallFwrdBack, mdmDSR=mdmDSR, mdmStatisticsIndex=mdmStatisticsIndex, mdmParserSelection=mdmParserSelection, mdmAsyncProtocol=mdmAsyncProtocol, mdmModemEntry=mdmModemEntry, mdmErrorCorrection=mdmErrorCorrection, mdmSNTxType=mdmSNTxType, mdmAnswerOriginateStat=mdmAnswerOriginateStat, mdmThresholdsTable=mdmThresholdsTable, mdmAlarmScanTable=mdmAlarmScanTable, mdmCallProgressStatus=mdmCallProgressStatus, mdmControlIndex=mdmControlIndex, mdmCTS=mdmCTS, mdmDialCellFunctionIndex=mdmDialCellFunctionIndex, mdmPasswordRemoteConfiguration=mdmPasswordRemoteConfiguration, mdmRetrainThreshold=mdmRetrainThreshold, mdmWaitForDCD=mdmWaitForDCD, mdmDTEIndex=mdmDTEIndex, mdmPLTalkData=mdmPLTalkData, mdmPauseTime=mdmPauseTime, mdmWhatAreYouEntry=mdmWhatAreYouEntry, mdmCDRespTime=mdmCDRespTime, mdmFrontPanel=mdmFrontPanel, mdmTestStatus=mdmTestStatus, mdmDialFunctionIndex=mdmDialFunctionIndex, mdmRxSignalLevel=mdmRxSignalLevel, mdmCPMMonitor=mdmCPMMonitor, mdmResponseMode=mdmResponseMode, mdmNetworkConfigTable=mdmNetworkConfigTable, mdmNetworkType=mdmNetworkType, mdmDCDCntrl=mdmDCDCntrl, mdmOperatingMode=mdmOperatingMode, mdmTestTimeout=mdmTestTimeout, mdmTermEcho=mdmTermEcho, mdmOnDBU=mdmOnDBU, mdmControlTable=mdmControlTable, mdmCellPhoneNumber=mdmCellPhoneNumber, mdmDTEntry=mdmDTEntry, mdmDialingCellsFunctionEntry=mdmDialingCellsFunctionEntry, mdmDTETestCntrl=mdmDTETestCntrl, mdmRemoteConfigEntry=mdmRemoteConfigEntry, mdmDTECard=mdmDTECard, mdmRemoteConfigIndex=mdmRemoteConfigIndex, mdmVFCard=mdmVFCard, mdmMaskAlarmIndex=mdmMaskAlarmIndex, mdmDTRTrans=mdmDTRTrans, mdmMaintenanceIndex=mdmMaintenanceIndex, mdmStatusIndex=mdmStatusIndex, mdmEndRemoteConfiguration=mdmEndRemoteConfiguration, mdmPrivateLineConfigTable=mdmPrivateLineConfigTable, mdmResetSelfPowerBit=mdmResetSelfPowerBit, mdmEscapeCharacter=mdmEscapeCharacter, mdmDial=mdmDial, mdmPrivateLineIndex=mdmPrivateLineIndex, mdmSerialNumber=mdmSerialNumber, mdmProtocolEntry=mdmProtocolEntry, mdmMaskAlarmEntry=mdmMaskAlarmEntry, mdmBreakHandling=mdmBreakHandling, mdmRDLOptions=mdmRDLOptions, mdmRetrain=mdmRetrain, mdmStatisticsEntry=mdmStatisticsEntry, mdmDTRDial=mdmDTRDial, mdmRXDtransitions=mdmRXDtransitions, mdmCallDurationStat=mdmCallDurationStat, mdmRTS=mdmRTS, mdmSignaltoNoiseRatio=mdmSignaltoNoiseRatio, mdmAnswerOriginate=mdmAnswerOriginate, mdmPrivateLineTxLevel=mdmPrivateLineTxLevel, mdmNetworkIndex=mdmNetworkIndex, mdmCallStatsTrap=mdmCallStatsTrap, mdmTerminateCellCall=mdmTerminateCellCall, mdmRingsToAns=mdmRingsToAns, mdmRetrainCount=mdmRetrainCount, mdmNetworkEntry=mdmNetworkEntry, mdmWhatAreYouTable=mdmWhatAreYouTable, mdmCompressionEfficiency=mdmCompressionEfficiency, mdmCallLength=mdmCallLength, mdmPrivateLineDownTime=mdmPrivateLineDownTime, mdmCharLength=mdmCharLength, mdmMakeClearBusy=mdmMakeClearBusy, mdmSNHandshakeMode=mdmSNHandshakeMode, mdmLineFeedCharacter=mdmLineFeedCharacter, mdmDialerConfigTable=mdmDialerConfigTable, mdmTXCLKtransitions=mdmTXCLKtransitions, mdmPowerUpProfile=mdmPowerUpProfile, mdmMaintenanceTable=mdmMaintenanceTable, mdmDialerEntry=mdmDialerEntry, mdmPasswordOperation=mdmPasswordOperation, mdmDSRCntrl=mdmDSRCntrl, mdmPassword=mdmPassword, mdmCPMResp=mdmCPMResp, mdmRemoteConfiguration=mdmRemoteConfiguration, mdmMIBVersion=mdmMIBVersion, mdmAlarmScanEntry=mdmAlarmScanEntry, mdmSwitchedPrivate=mdmSwitchedPrivate, mdmCTSCntrl=mdmCTSCntrl, mdmDiagnosticTable=mdmDiagnosticTable, mdmDCDLossDisc=mdmDCDLossDisc, mdmDiagnosticIndex=mdmDiagnosticIndex, mdmRingNoAnswer=mdmRingNoAnswer, mdmRTSCTSDelay=mdmRTSCTSDelay, mdmPLLookbackStatus=mdmPLLookbackStatus, mdmWaitForDialtoneTime=mdmWaitForDialtoneTime, mdmDiagnosticStatus=mdmDiagnosticStatus, mdmFlowControl=mdmFlowControl, mdmCodeRev=mdmCodeRev, mdmPrivateLineHandshakeMode=mdmPrivateLineHandshakeMode, mdmDCDtransitions=mdmDCDtransitions, mdmSNTxLevel=mdmSNTxLevel, mdmDialingFunctionEntry=mdmDialingFunctionEntry, mdmDialStatus=mdmDialStatus, mdmSQRetrain=mdmSQRetrain, gdc=gdc, mdmConnAndLinkMessages=mdmConnAndLinkMessages, mdmDialerIndex=mdmDialerIndex, mdmDialingCellsFunctionTable=mdmDialingCellsFunctionTable, mdmFallbackCount=mdmFallbackCount, mdmTXClockSource=mdmTXClockSource, mdmLongSpaceDisc=mdmLongSpaceDisc, mdmStatusTable=mdmStatusTable, mdmSQM=mdmSQM, mdmCompression=mdmCompression, mdmBootRev=mdmBootRev, mdmDiagnosticTest=mdmDiagnosticTest, mdmParity=mdmParity, mdmCellNumber=mdmCellNumber, mdmAutoDialRestoral=mdmAutoDialRestoral, mdmProtocolConfigTable=mdmProtocolConfigTable, mdmDTR=mdmDTR, mdmDiagnosticResults=mdmDiagnosticResults, mdmDelayDTR=mdmDelayDTR, mdmCharacterAbortDialing=mdmCharacterAbortDialing, mdmDTEConfigTable=mdmDTEConfigTable, mdmCountryCode=mdmCountryCode, mdmManualDial=mdmManualDial, mdmDCD=mdmDCD, mdmTXDtransitions=mdmTXDtransitions, mdmFlowCntrl=mdmFlowCntrl, mdmV13Mode=mdmV13Mode, mdmDBUtoPLLookbackTime=mdmDBUtoPLLookbackTime, mdmAlarmScan=mdmAlarmScan, mdmCallFail=mdmCallFail, mdmFrameRetransLimit=mdmFrameRetransLimit, mdmWhatAreYouIndex=mdmWhatAreYouIndex, mdmDSRCntrlAL=mdmDSRCntrlAL, mdmTrellis=mdmTrellis, mdmDTRtransitions=mdmDTRtransitions, mdmThruput=mdmThruput, mdmCallDuration=mdmCallDuration, mdmStatusEntry=mdmStatusEntry, mdmEscapeCharacterGuardTime=mdmEscapeCharacterGuardTime, mdmThresholdsEntry=mdmThresholdsEntry, mdmConfigCksum=mdmConfigCksum, mdmTestDuration=mdmTestDuration, mdmSyncProtocol=mdmSyncProtocol, mdmTxdTran=mdmTxdTran)
