#
# PySNMP MIB module PANDATEL-ETC-MODEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PANDATEL-ETC-MODEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:28:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
device_id, mdmSpecifics = mibBuilder.importSymbols("PANDATEL-MODEM-MIB", "device-id", "mdmSpecifics")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, enterprises, IpAddress, NotificationType, ModuleIdentity, Counter64, Unsigned32, iso, TimeTicks, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "enterprises", "IpAddress", "NotificationType", "ModuleIdentity", "Counter64", "Unsigned32", "iso", "TimeTicks", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
etc_modem = MibIdentifier((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 10000, 2, 901)).setLabel("etc-modem")
etc = MibIdentifier((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901))
etcModemTable = MibTable((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1), )
if mibBuilder.loadTexts: etcModemTable.setStatus('mandatory')
etcTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1), ).setIndexNames((0, "PANDATEL-ETC-MODEM-MIB", "mdmRack"), (0, "PANDATEL-ETC-MODEM-MIB", "mdmModem"), (0, "PANDATEL-ETC-MODEM-MIB", "mdmPosition"))
if mibBuilder.loadTexts: etcTableEntry.setStatus('mandatory')
mdmRack = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRack.setStatus('mandatory')
mdmModem = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmModem.setStatus('mandatory')
mdmPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmPosition.setStatus('mandatory')
mdmModemName = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmModemName.setStatus('mandatory')
mdmDataEquipmentEmulation = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 9, 99))).clone(namedValues=NamedValues(("other", 1), ("to-hub", 8), ("to-nic", 9), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDataEquipmentEmulation.setStatus('mandatory')
mdmModemProperty = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 17, 99))).clone(namedValues=NamedValues(("other", 1), ("eth100base-tx-full-duplex", 16), ("eth100base-tx-half-duplex", 17), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmModemProperty.setStatus('mandatory')
mdmAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmAlarm.setStatus('mandatory')
mdmRemoteAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 5, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("enable", 5), ("disable-local", 8), ("disable-local-and-remote", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmRemoteAccessMode.setStatus('mandatory')
mdmForcedRemoteAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmForcedRemoteAccess.setStatus('mandatory')
mdmOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("normal", 7), ("remote-fault-detection", 8), ("link-pass-through", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmOperationMode.setStatus('mandatory')
mdmFoPower = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("low", 2), ("high", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmFoPower.setStatus('mandatory')
mdmAutoDetectModemProperty = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAutoDetectModemProperty.setStatus('mandatory')
mdmInterfaceAlarmCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 98), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 100))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("no-link-signal", 3), ("not-available", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmInterfaceAlarmCondition.setStatus('mandatory')
mdmLineAlarmCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 99), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 100))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("no-link-signal", 3), ("laser-fail", 4), ("no-link-signal-or-laser-fail", 5), ("not-available", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmLineAlarmCondition.setStatus('mandatory')
mdmStatusInterfacePort = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 140), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmStatusInterfacePort.setStatus('mandatory')
mdmStatusLinePort = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 901, 1, 1, 141), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmStatusLinePort.setStatus('mandatory')
mibBuilder.exportSymbols("PANDATEL-ETC-MODEM-MIB", mdmLineAlarmCondition=mdmLineAlarmCondition, mdmStatusLinePort=mdmStatusLinePort, mdmModemProperty=mdmModemProperty, mdmRemoteAccessMode=mdmRemoteAccessMode, mdmRack=mdmRack, etcTableEntry=etcTableEntry, mdmStatusInterfacePort=mdmStatusInterfacePort, mdmDataEquipmentEmulation=mdmDataEquipmentEmulation, mdmFoPower=mdmFoPower, mdmAlarm=mdmAlarm, mdmAutoDetectModemProperty=mdmAutoDetectModemProperty, mdmPosition=mdmPosition, mdmOperationMode=mdmOperationMode, etcModemTable=etcModemTable, mdmModemName=mdmModemName, etc_modem=etc_modem, mdmForcedRemoteAccess=mdmForcedRemoteAccess, etc=etc, mdmModem=mdmModem, mdmInterfaceAlarmCondition=mdmInterfaceAlarmCondition)
