#
# PySNMP MIB module NNC-PKT-STATISTICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NNC-PKT-STATISTICS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:13:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
atmVclVpi, atmVclVci = mibBuilder.importSymbols("ATM-MIB", "atmVclVpi", "atmVclVci")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NncExtAbsIntvlNumberType, NncExtIntvlStateType, NncExtRelIntvlNumberType = mibBuilder.importSymbols("NNC-INTERVAL-STATISTICS-TC-MIB", "NncExtAbsIntvlNumberType", "NncExtIntvlStateType", "NncExtRelIntvlNumberType")
NncExtCounter64, nncExtensions = mibBuilder.importSymbols("NNCGNI0001-SMI", "NncExtCounter64", "nncExtensions")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, ModuleIdentity, Counter64, Unsigned32, MibIdentifier, Bits, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, iso, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "Counter64", "Unsigned32", "MibIdentifier", "Bits", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "iso", "Gauge32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nncExtPktStatistics = ModuleIdentity((1, 3, 6, 1, 4, 1, 123, 3, 50))
if mibBuilder.loadTexts: nncExtPktStatistics.setLastUpdated('9801160330Z')
if mibBuilder.loadTexts: nncExtPktStatistics.setOrganization('Newbridge Networks Corporation')
nncPktStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 50, 1))
nncPktStatisticsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 50, 2))
nncPktStatisticsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 50, 3))
nncPktStatisticsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 50, 4))
class NncPktVclCoSType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("controlAndRouting", 1), ("standard", 2), ("premium", 3))

nncPktVcl15MinCurTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1), )
if mibBuilder.loadTexts: nncPktVcl15MinCurTable.setStatus('current')
nncPktVcl15MinCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurCoS"))
if mibBuilder.loadTexts: nncPktVcl15MinCurEntry.setStatus('current')
nncPktVcl15MinCurCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 1), NncPktVclCoSType())
if mibBuilder.loadTexts: nncPktVcl15MinCurCoS.setStatus('current')
nncPktVcl15MinCurState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 2), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurState.setStatus('current')
nncPktVcl15MinCurAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 3), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurAbsoluteIntervalNumber.setStatus('current')
nncPktVcl15MinCurInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurInOctets.setStatus('current')
nncPktVcl15MinCurInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurInUcastPkts.setStatus('current')
nncPktVcl15MinCurInMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurInMulticastPkts.setStatus('current')
nncPktVcl15MinCurInBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurInBroadcastPkts.setStatus('current')
nncPktVcl15MinCurInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurInDiscards.setStatus('current')
nncPktVcl15MinCurInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurInErrors.setStatus('current')
nncPktVcl15MinCurOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurOutOctets.setStatus('current')
nncPktVcl15MinCurOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 11), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurOutUcastPkts.setStatus('current')
nncPktVcl15MinCurOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 12), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurOutMulticastPkts.setStatus('current')
nncPktVcl15MinCurOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 13), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurOutBroadcastPkts.setStatus('current')
nncPktVcl15MinCurOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 14), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurOutDiscards.setStatus('current')
nncPktVcl15MinCurOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 1, 1, 15), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinCurOutErrors.setStatus('current')
nncPktVcl15MinIntTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2), )
if mibBuilder.loadTexts: nncPktVcl15MinIntTable.setStatus('current')
nncPktVcl15MinIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntNumber"), (0, "NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntCoS"))
if mibBuilder.loadTexts: nncPktVcl15MinIntEntry.setStatus('current')
nncPktVcl15MinIntNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 1), NncExtRelIntvlNumberType())
if mibBuilder.loadTexts: nncPktVcl15MinIntNumber.setStatus('current')
nncPktVcl15MinIntCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 2), NncPktVclCoSType())
if mibBuilder.loadTexts: nncPktVcl15MinIntCoS.setStatus('current')
nncPktVcl15MinIntState = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 3), NncExtIntvlStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntState.setStatus('current')
nncPktVcl15MinIntAbsoluteIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 4), NncExtAbsIntvlNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntAbsoluteIntervalNumber.setStatus('current')
nncPktVcl15MinIntInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntInOctets.setStatus('current')
nncPktVcl15MinIntInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntInUcastPkts.setStatus('current')
nncPktVcl15MinIntInMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntInMulticastPkts.setStatus('current')
nncPktVcl15MinIntInBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntInBroadcastPkts.setStatus('current')
nncPktVcl15MinIntInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntInDiscards.setStatus('current')
nncPktVcl15MinIntInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntInErrors.setStatus('current')
nncPktVcl15MinIntOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 11), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntOutOctets.setStatus('current')
nncPktVcl15MinIntOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 12), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntOutUcastPkts.setStatus('current')
nncPktVcl15MinIntOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 13), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntOutMulticastPkts.setStatus('current')
nncPktVcl15MinIntOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 14), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntOutBroadcastPkts.setStatus('current')
nncPktVcl15MinIntOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 15), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntOutDiscards.setStatus('current')
nncPktVcl15MinIntOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 2, 1, 16), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVcl15MinIntOutErrors.setStatus('current')
nncPktVclStatTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3), )
if mibBuilder.loadTexts: nncPktVclStatTable.setStatus('current')
nncPktVclStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "NNC-PKT-STATISTICS-MIB", "nncPktVclStatCoS"))
if mibBuilder.loadTexts: nncPktVclStatEntry.setStatus('current')
nncPktVclStatCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 1), NncPktVclCoSType())
if mibBuilder.loadTexts: nncPktVclStatCoS.setStatus('current')
nncPktVclStatInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 2), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatInOctets.setStatus('current')
nncPktVclStatInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 3), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatInUcastPkts.setStatus('current')
nncPktVclStatInMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 4), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatInMulticastPkts.setStatus('current')
nncPktVclStatInBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 5), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatInBroadcastPkts.setStatus('current')
nncPktVclStatInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 6), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatInDiscards.setStatus('current')
nncPktVclStatInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 7), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatInErrors.setStatus('current')
nncPktVclStatOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 8), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatOutOctets.setStatus('current')
nncPktVclStatOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 9), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatOutUcastPkts.setStatus('current')
nncPktVclStatOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 10), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatOutMulticastPkts.setStatus('current')
nncPktVclStatOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 11), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatOutBroadcastPkts.setStatus('current')
nncPktVclStatOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 12), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatOutDiscards.setStatus('current')
nncPktVclStatOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 50, 1, 3, 1, 13), NncExtCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncPktVclStatOutErrors.setStatus('current')
nncPktVcl15MinCurGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 50, 3, 5)).setObjects(("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurState"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurAbsoluteIntervalNumber"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurInOctets"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurInUcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurInMulticastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurInBroadcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurInDiscards"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurInErrors"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurOutOctets"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurOutUcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurOutMulticastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurOutBroadcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurOutDiscards"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurOutErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncPktVcl15MinCurGroup = nncPktVcl15MinCurGroup.setStatus('current')
nncPktVcl15MinIntGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 50, 3, 6)).setObjects(("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntAbsoluteIntervalNumber"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntInOctets"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntInUcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntInMulticastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntInBroadcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntInDiscards"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntInErrors"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntOutOctets"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntOutUcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntOutMulticastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntOutBroadcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntOutDiscards"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntOutErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncPktVcl15MinIntGroup = nncPktVcl15MinIntGroup.setStatus('current')
nncPktVclStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 50, 3, 7)).setObjects(("NNC-PKT-STATISTICS-MIB", "nncPktVclStatInOctets"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatInUcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatInMulticastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatInBroadcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatInDiscards"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatInErrors"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatOutOctets"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatOutUcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatOutMulticastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatOutBroadcastPkts"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatOutDiscards"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatOutErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncPktVclStatGroup = nncPktVclStatGroup.setStatus('current')
nncVclIntervalStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 123, 3, 50, 3, 8)).setObjects(("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurState"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncVclIntervalStateGroup = nncVclIntervalStateGroup.setStatus('current')
nncPktStatisticsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 123, 3, 50, 4, 1)).setObjects(("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinCurGroup"), ("NNC-PKT-STATISTICS-MIB", "nncPktVcl15MinIntGroup"), ("NNC-PKT-STATISTICS-MIB", "nncPktVclStatGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nncPktStatisticsCompliance = nncPktStatisticsCompliance.setStatus('current')
mibBuilder.exportSymbols("NNC-PKT-STATISTICS-MIB", nncPktVclStatOutBroadcastPkts=nncPktVclStatOutBroadcastPkts, nncPktVcl15MinIntOutOctets=nncPktVcl15MinIntOutOctets, nncPktStatisticsObjects=nncPktStatisticsObjects, nncPktVclStatOutErrors=nncPktVclStatOutErrors, nncPktVcl15MinCurEntry=nncPktVcl15MinCurEntry, nncPktVcl15MinIntAbsoluteIntervalNumber=nncPktVcl15MinIntAbsoluteIntervalNumber, nncPktVcl15MinIntOutUcastPkts=nncPktVcl15MinIntOutUcastPkts, nncPktStatisticsGroups=nncPktStatisticsGroups, nncPktVcl15MinIntOutMulticastPkts=nncPktVcl15MinIntOutMulticastPkts, nncPktVcl15MinIntNumber=nncPktVcl15MinIntNumber, nncPktVcl15MinIntInMulticastPkts=nncPktVcl15MinIntInMulticastPkts, nncPktVcl15MinCurOutErrors=nncPktVcl15MinCurOutErrors, nncPktVcl15MinCurInDiscards=nncPktVcl15MinCurInDiscards, nncPktVcl15MinCurGroup=nncPktVcl15MinCurGroup, nncPktVclStatOutOctets=nncPktVclStatOutOctets, nncPktVclStatOutDiscards=nncPktVclStatOutDiscards, nncPktVclStatInUcastPkts=nncPktVclStatInUcastPkts, nncPktVclStatOutUcastPkts=nncPktVclStatOutUcastPkts, nncPktVcl15MinCurOutDiscards=nncPktVcl15MinCurOutDiscards, nncPktVcl15MinIntTable=nncPktVcl15MinIntTable, nncPktVclStatCoS=nncPktVclStatCoS, nncPktVcl15MinCurState=nncPktVcl15MinCurState, nncPktVcl15MinCurInOctets=nncPktVcl15MinCurInOctets, nncPktVcl15MinCurCoS=nncPktVcl15MinCurCoS, nncPktVcl15MinCurAbsoluteIntervalNumber=nncPktVcl15MinCurAbsoluteIntervalNumber, PYSNMP_MODULE_ID=nncExtPktStatistics, nncPktVcl15MinCurOutBroadcastPkts=nncPktVcl15MinCurOutBroadcastPkts, nncPktVcl15MinIntInErrors=nncPktVcl15MinIntInErrors, nncPktVclStatInBroadcastPkts=nncPktVclStatInBroadcastPkts, nncPktVclStatInErrors=nncPktVclStatInErrors, nncPktVcl15MinIntInDiscards=nncPktVcl15MinIntInDiscards, nncPktVclStatInMulticastPkts=nncPktVclStatInMulticastPkts, nncPktVcl15MinCurInUcastPkts=nncPktVcl15MinCurInUcastPkts, nncPktVclStatInDiscards=nncPktVclStatInDiscards, nncPktStatisticsCompliances=nncPktStatisticsCompliances, nncPktVcl15MinIntEntry=nncPktVcl15MinIntEntry, NncPktVclCoSType=NncPktVclCoSType, nncPktVclStatOutMulticastPkts=nncPktVclStatOutMulticastPkts, nncPktVclStatInOctets=nncPktVclStatInOctets, nncPktVcl15MinIntGroup=nncPktVcl15MinIntGroup, nncPktVcl15MinCurInMulticastPkts=nncPktVcl15MinCurInMulticastPkts, nncPktVcl15MinCurOutUcastPkts=nncPktVcl15MinCurOutUcastPkts, nncExtPktStatistics=nncExtPktStatistics, nncPktVclStatEntry=nncPktVclStatEntry, nncPktVcl15MinIntOutErrors=nncPktVcl15MinIntOutErrors, nncPktVcl15MinCurOutMulticastPkts=nncPktVcl15MinCurOutMulticastPkts, nncPktVcl15MinIntInUcastPkts=nncPktVcl15MinIntInUcastPkts, nncPktVcl15MinIntInBroadcastPkts=nncPktVcl15MinIntInBroadcastPkts, nncPktVcl15MinCurTable=nncPktVcl15MinCurTable, nncPktVcl15MinCurInErrors=nncPktVcl15MinCurInErrors, nncPktVcl15MinCurOutOctets=nncPktVcl15MinCurOutOctets, nncPktVcl15MinIntCoS=nncPktVcl15MinIntCoS, nncPktVclStatGroup=nncPktVclStatGroup, nncVclIntervalStateGroup=nncVclIntervalStateGroup, nncPktStatisticsCompliance=nncPktStatisticsCompliance, nncPktStatisticsTraps=nncPktStatisticsTraps, nncPktVcl15MinCurInBroadcastPkts=nncPktVcl15MinCurInBroadcastPkts, nncPktVcl15MinIntOutBroadcastPkts=nncPktVcl15MinIntOutBroadcastPkts, nncPktVcl15MinIntOutDiscards=nncPktVcl15MinIntOutDiscards, nncPktVcl15MinIntState=nncPktVcl15MinIntState, nncPktVcl15MinIntInOctets=nncPktVcl15MinIntInOctets, nncPktVclStatTable=nncPktVclStatTable)
