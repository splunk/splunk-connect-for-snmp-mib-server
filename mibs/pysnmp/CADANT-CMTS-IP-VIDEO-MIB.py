#
# PySNMP MIB module CADANT-CMTS-IP-VIDEO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-CMTS-IP-VIDEO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:27:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
cadCmtsIpVideo, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadCmtsIpVideo")
CardId, PortId = mibBuilder.importSymbols("CADANT-TC", "CardId", "PortId")
TenthdB, = mibBuilder.importSymbols("DOCS-IF-MIB", "TenthdB")
AttributeMask, = mibBuilder.importSymbols("DOCS-IF3-MIB", "AttributeMask")
ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero")
SnmpEngineID, SnmpAdminString = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpEngineID", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, Unsigned32, Gauge32, Counter32, NotificationType, Integer32, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, MibIdentifier, Bits, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Unsigned32", "Gauge32", "Counter32", "NotificationType", "Integer32", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Bits", "Counter64")
DisplayString, TruthValue, RowStatus, DateAndTime, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "DateAndTime", "TextualConvention", "MacAddress")
cadCmtsIpVideoMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1))
cadCmtsIpVideoMib.setRevisions(('2011-08-04 00:00', '2011-07-11 00:00', '2011-04-20 00:00', '2011-04-19 00:00', '2010-12-16 00:00', '2010-07-07 00:00', '2010-04-20 00:00', '2010-04-15 00:00',))
if mibBuilder.loadTexts: cadCmtsIpVideoMib.setLastUpdated('201108040000Z')
if mibBuilder.loadTexts: cadCmtsIpVideoMib.setOrganization('Arris International, Inc.')
cadSysIpVideoCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 1))
cadSysIpVideoAttributeMask = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 1, 1), AttributeMask().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadSysIpVideoAttributeMask.setStatus('current')
cadSysIpVideoVodThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadSysIpVideoVodThreshold.setStatus('current')
cadSysIpVideoLinearThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadSysIpVideoLinearThreshold.setStatus('current')
cadSysIpVideoInterDbcDelayTimer = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000)).clone(100)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadSysIpVideoInterDbcDelayTimer.setStatus('current')
cadSysIpVideoMulticastControlled = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadSysIpVideoMulticastControlled.setStatus('current')
cadSysIpVideoMulticastAllowedUsage = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(20)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadSysIpVideoMulticastAllowedUsage.setStatus('current')
cadIpVideoMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3))
cadIPVideoMonitorDropsTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 1), )
if mibBuilder.loadTexts: cadIPVideoMonitorDropsTable.setStatus('current')
cadIpVideoMonitorDropsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 1, 1), ).setIndexNames((0, "CADANT-CMTS-IP-VIDEO-MIB", "cadIpVideoMonitorCardId"), (0, "CADANT-CMTS-IP-VIDEO-MIB", "cadIpVideoMonitorPortConnectorId"), (0, "CADANT-CMTS-IP-VIDEO-MIB", "cadIpVideoMonitorCurTimeIdx"))
if mibBuilder.loadTexts: cadIpVideoMonitorDropsEntry.setStatus('current')
cadIpVideoMonitorCurTimeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cadIpVideoMonitorCurTimeIdx.setStatus('current')
cadIpVideoMonitorMulticastDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorMulticastDrops.setStatus('current')
cadIpVideoMonitorUnicastDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorUnicastDrops.setStatus('current')
cadIpVideoMonitorDropsSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorDropsSuspectFlag.setStatus('current')
cadIpVideoMonitorCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorCreateTime.setStatus('current')
cadIpVideoMonitorCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 1, 1, 6), CardId())
if mibBuilder.loadTexts: cadIpVideoMonitorCardId.setStatus('current')
cadIpVideoMonitorPortConnectorId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 1, 1, 7), PortId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadIpVideoMonitorPortConnectorId.setStatus('current')
cadIpVideoMonitorDsChlTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 2), )
if mibBuilder.loadTexts: cadIpVideoMonitorDsChlTable.setStatus('current')
cadIpVideoMonitorDsChlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CADANT-CMTS-IP-VIDEO-MIB", "cadIpVideoMonitorCurTimeIdx"))
if mibBuilder.loadTexts: cadIpVideoMonitorDsChlEntry.setStatus('current')
cadIpVideoMonitorDsChlCurTimeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cadIpVideoMonitorDsChlCurTimeIdx.setStatus('current')
cadIpVideoMonitorMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorMcastPkts.setStatus('current')
cadIpVideoMonitorMcastFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorMcastFlows.setStatus('current')
cadIpVideoMonitorUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorUcastPkts.setStatus('current')
cadIpVideoMonitorUcastFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorUcastFlows.setStatus('current')
cadIpVideoMonitorDsChlSuspectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 2, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorDsChlSuspectFlag.setStatus('current')
cadIpVideoMonitorDsChlCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 125, 1, 3, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIpVideoMonitorDsChlCreateTime.setStatus('current')
mibBuilder.exportSymbols("CADANT-CMTS-IP-VIDEO-MIB", cadSysIpVideoInterDbcDelayTimer=cadSysIpVideoInterDbcDelayTimer, cadIpVideoMonitorCreateTime=cadIpVideoMonitorCreateTime, cadIpVideoMonitorUcastFlows=cadIpVideoMonitorUcastFlows, cadIPVideoMonitorDropsTable=cadIPVideoMonitorDropsTable, cadIpVideoMonitorUnicastDrops=cadIpVideoMonitorUnicastDrops, cadIpVideoMonitorDropsEntry=cadIpVideoMonitorDropsEntry, cadIpVideoMonitor=cadIpVideoMonitor, cadSysIpVideoCfg=cadSysIpVideoCfg, cadSysIpVideoLinearThreshold=cadSysIpVideoLinearThreshold, cadSysIpVideoAttributeMask=cadSysIpVideoAttributeMask, PYSNMP_MODULE_ID=cadCmtsIpVideoMib, cadIpVideoMonitorDsChlSuspectFlag=cadIpVideoMonitorDsChlSuspectFlag, cadIpVideoMonitorCurTimeIdx=cadIpVideoMonitorCurTimeIdx, cadIpVideoMonitorDsChlEntry=cadIpVideoMonitorDsChlEntry, cadIpVideoMonitorUcastPkts=cadIpVideoMonitorUcastPkts, cadIpVideoMonitorDropsSuspectFlag=cadIpVideoMonitorDropsSuspectFlag, cadIpVideoMonitorDsChlCurTimeIdx=cadIpVideoMonitorDsChlCurTimeIdx, cadIpVideoMonitorMulticastDrops=cadIpVideoMonitorMulticastDrops, cadIpVideoMonitorMcastFlows=cadIpVideoMonitorMcastFlows, cadSysIpVideoMulticastAllowedUsage=cadSysIpVideoMulticastAllowedUsage, cadIpVideoMonitorDsChlTable=cadIpVideoMonitorDsChlTable, cadIpVideoMonitorPortConnectorId=cadIpVideoMonitorPortConnectorId, cadIpVideoMonitorMcastPkts=cadIpVideoMonitorMcastPkts, cadCmtsIpVideoMib=cadCmtsIpVideoMib, cadSysIpVideoVodThreshold=cadSysIpVideoVodThreshold, cadIpVideoMonitorCardId=cadIpVideoMonitorCardId, cadIpVideoMonitorDsChlCreateTime=cadIpVideoMonitorDsChlCreateTime, cadSysIpVideoMulticastControlled=cadSysIpVideoMulticastControlled)
