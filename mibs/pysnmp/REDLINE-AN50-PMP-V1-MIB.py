#
# PySNMP MIB module REDLINE-AN50-PMP-V1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDLINE-AN50-PMP-V1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:46:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Bits, Counter64, Gauge32, ModuleIdentity, ObjectIdentity, Integer32, NotificationType, enterprises, iso, Unsigned32, MibIdentifier, Counter32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "Counter64", "Gauge32", "ModuleIdentity", "ObjectIdentity", "Integer32", "NotificationType", "enterprises", "iso", "Unsigned32", "MibIdentifier", "Counter32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
redline = MibIdentifier((1, 3, 6, 1, 4, 1, 10728))
redlineProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 1))
redlineMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2))
redlineAN50 = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 1, 1))
redlineAN50PMPV1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 51))
an50pmpLinkTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1), )
if mibBuilder.loadTexts: an50pmpLinkTable.setStatus('mandatory')
an50pmpLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1), ).setIndexNames((0, "REDLINE-AN50-PMP-V1-MIB", "an50pmpLinkID"))
if mibBuilder.loadTexts: an50pmpLinkEntry.setStatus('mandatory')
an50pmpLinkID = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkID.setStatus('mandatory')
an50pmpLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkName.setStatus('mandatory')
an50pmpLinkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkGroupID.setStatus('mandatory')
an50pmpLinkPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkPeerMac.setStatus('mandatory')
an50pmpLinkMaxDLBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkMaxDLBurstRate.setStatus('mandatory')
an50pmpLinkMaxULBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkMaxULBurstRate.setStatus('mandatory')
an50pmpLinkMaxHost = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkMaxHost.setStatus('mandatory')
an50pmpLinkCIDDLCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkCIDDLCIR.setStatus('mandatory')
an50pmpLinkCIDDLPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkCIDDLPIR.setStatus('mandatory')
an50pmpLinkCIDULCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkCIDULCIR.setStatus('mandatory')
an50pmpLinkCIDULPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkCIDULPIR.setStatus('mandatory')
an50pmpLinkDLQoS = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 54))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkDLQoS.setStatus('mandatory')
an50pmpLinkULQoS = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 54))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkULQoS.setStatus('mandatory')
an50pmpLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 14), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkRowStatus.setStatus('mandatory')
an50pmpLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2), )
if mibBuilder.loadTexts: an50pmpLinkStatusTable.setStatus('mandatory')
an50pmpLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1), ).setIndexNames((0, "REDLINE-AN50-PMP-V1-MIB", "an50pmpLinkID"))
if mibBuilder.loadTexts: an50pmpLinkStatusEntry.setStatus('mandatory')
an50pmpLinkStatusID = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkStatusID.setStatus('mandatory')
an50pmpLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkStatus.setStatus('mandatory')
an50pmpLinkStatusCode = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkStatusCode.setStatus('mandatory')
an50pmpLinkRegConn = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkRegConn.setStatus('mandatory')
an50pmpLinkDLBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLBurstRate.setStatus('mandatory')
an50pmpLinkDLRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLRSSI.setStatus('mandatory')
an50pmpLinkDLSINADR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLSINADR.setStatus('mandatory')
an50pmpLinkDLStatLostFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLStatLostFrm.setStatus('mandatory')
an50pmpLinkDLStatBlksTot = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLStatBlksTot.setStatus('mandatory')
an50pmpLinkDLStatBlksRetr = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLStatBlksRetr.setStatus('mandatory')
an50pmpLinkDLStatBlksDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLStatBlksDisc.setStatus('mandatory')
an50pmpLinkDLCIDStatPktDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLCIDStatPktDisc.setStatus('mandatory')
an50pmpLinkDLCIDStatPktTran = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLCIDStatPktTran.setStatus('mandatory')
an50pmpLinkDLCIDStatPktRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLCIDStatPktRecv.setStatus('mandatory')
an50pmpLinkULBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULBurstRate.setStatus('mandatory')
an50pmpLinkULRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULRSSI.setStatus('mandatory')
an50pmpLinkULSINADR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULSINADR.setStatus('mandatory')
an50pmpLinkULStatLostFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULStatLostFrm.setStatus('mandatory')
an50pmpLinkULStatBlksTot = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULStatBlksTot.setStatus('mandatory')
an50pmpLinkULStatBlksRetr = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULStatBlksRetr.setStatus('mandatory')
an50pmpLinkULStatBlksDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULStatBlksDisc.setStatus('mandatory')
an50pmpLinkULCIDStatPktDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULCIDStatPktDisc.setStatus('mandatory')
an50pmpLinkULCIDStatPktTran = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULCIDStatPktTran.setStatus('mandatory')
an50pmpLinkULCIDStatPktRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULCIDStatPktRecv.setStatus('mandatory')
an50pmpLinkUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 25), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkUpTime.setStatus('mandatory')
an50pmpLinkLostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkLostCount.setStatus('mandatory')
an50pmpCIDSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("donothing", 1), ("saveConfig", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpCIDSaveConfig.setStatus('mandatory')
an50pmpLastModifiedCID = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLastModifiedCID.setStatus('mandatory')
an50pmpLastMissedSsMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLastMissedSsMacAddress.setStatus('mandatory')
an50pmpLastRegisteredSsMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLastRegisteredSsMacAddress.setStatus('mandatory')
an50pmpLastSuccessfulID = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLastSuccessfulID.setStatus('mandatory')
an50pmpLastDeniedSsMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLastDeniedSsMacAddress.setStatus('mandatory')
mibBuilder.exportSymbols("REDLINE-AN50-PMP-V1-MIB", an50pmpLastModifiedCID=an50pmpLastModifiedCID, redline=redline, an50pmpLinkDLStatBlksDisc=an50pmpLinkDLStatBlksDisc, an50pmpLinkStatusCode=an50pmpLinkStatusCode, an50pmpLinkMaxHost=an50pmpLinkMaxHost, an50pmpLinkDLBurstRate=an50pmpLinkDLBurstRate, an50pmpLinkULCIDStatPktTran=an50pmpLinkULCIDStatPktTran, redlineProducts=redlineProducts, an50pmpLinkULCIDStatPktRecv=an50pmpLinkULCIDStatPktRecv, an50pmpLinkStatusID=an50pmpLinkStatusID, an50pmpLinkName=an50pmpLinkName, an50pmpLinkDLStatBlksRetr=an50pmpLinkDLStatBlksRetr, an50pmpLinkStatusEntry=an50pmpLinkStatusEntry, an50pmpLinkCIDDLCIR=an50pmpLinkCIDDLCIR, an50pmpLinkPeerMac=an50pmpLinkPeerMac, an50pmpLastMissedSsMacAddress=an50pmpLastMissedSsMacAddress, an50pmpLastDeniedSsMacAddress=an50pmpLastDeniedSsMacAddress, an50pmpLastSuccessfulID=an50pmpLastSuccessfulID, an50pmpLinkULStatLostFrm=an50pmpLinkULStatLostFrm, an50pmpLinkULQoS=an50pmpLinkULQoS, an50pmpLastRegisteredSsMacAddress=an50pmpLastRegisteredSsMacAddress, an50pmpLinkULStatBlksDisc=an50pmpLinkULStatBlksDisc, an50pmpLinkDLCIDStatPktDisc=an50pmpLinkDLCIDStatPktDisc, an50pmpLinkGroupID=an50pmpLinkGroupID, an50pmpLinkUpTime=an50pmpLinkUpTime, redlineAN50=redlineAN50, an50pmpLinkULStatBlksRetr=an50pmpLinkULStatBlksRetr, an50pmpLinkULBurstRate=an50pmpLinkULBurstRate, an50pmpLinkTable=an50pmpLinkTable, an50pmpLinkCIDDLPIR=an50pmpLinkCIDDLPIR, an50pmpLinkDLQoS=an50pmpLinkDLQoS, an50pmpLinkCIDULPIR=an50pmpLinkCIDULPIR, an50pmpLinkRegConn=an50pmpLinkRegConn, an50pmpLinkMaxULBurstRate=an50pmpLinkMaxULBurstRate, an50pmpLinkDLSINADR=an50pmpLinkDLSINADR, an50pmpLinkULStatBlksTot=an50pmpLinkULStatBlksTot, an50pmpLinkULCIDStatPktDisc=an50pmpLinkULCIDStatPktDisc, an50pmpLinkDLStatBlksTot=an50pmpLinkDLStatBlksTot, redlineAN50PMPV1=redlineAN50PMPV1, an50pmpLinkID=an50pmpLinkID, an50pmpLinkDLCIDStatPktTran=an50pmpLinkDLCIDStatPktTran, an50pmpLinkRowStatus=an50pmpLinkRowStatus, an50pmpLinkULSINADR=an50pmpLinkULSINADR, an50pmpLinkCIDULCIR=an50pmpLinkCIDULCIR, an50pmpLinkULRSSI=an50pmpLinkULRSSI, an50pmpLinkStatusTable=an50pmpLinkStatusTable, an50pmpLinkMaxDLBurstRate=an50pmpLinkMaxDLBurstRate, an50pmpLinkStatus=an50pmpLinkStatus, an50pmpLinkDLRSSI=an50pmpLinkDLRSSI, an50pmpLinkDLCIDStatPktRecv=an50pmpLinkDLCIDStatPktRecv, an50pmpLinkLostCount=an50pmpLinkLostCount, an50pmpCIDSaveConfig=an50pmpCIDSaveConfig, an50pmpLinkDLStatLostFrm=an50pmpLinkDLStatLostFrm, redlineMgmt=redlineMgmt, an50pmpLinkEntry=an50pmpLinkEntry)
