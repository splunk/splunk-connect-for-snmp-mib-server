#
# PySNMP MIB module NEMO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NEMO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:08:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
mip6MnBLEntry, mip6MnBLCOAType, mip6MnBLCOA, mip6BindingCacheEntry, mip6BindingHomeAddress, mip6BindingHomeAddressType = mibBuilder.importSymbols("MOBILEIPV6-MIB", "mip6MnBLEntry", "mip6MnBLCOAType", "mip6MnBLCOA", "mip6BindingCacheEntry", "mip6BindingHomeAddress", "mip6BindingHomeAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, Counter32, ModuleIdentity, TimeTicks, ObjectIdentity, Bits, NotificationType, mib_2, IpAddress, Gauge32, Counter64, MibIdentifier, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "Bits", "NotificationType", "mib-2", "IpAddress", "Gauge32", "Counter64", "MibIdentifier", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TimeStamp, TextualConvention, TruthValue, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "TruthValue", "DateAndTime", "DisplayString")
nemoMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 184))
nemoMIB.setRevisions(('2009-03-10 00:00',))
if mibBuilder.loadTexts: nemoMIB.setLastUpdated('200903100000Z')
if mibBuilder.loadTexts: nemoMIB.setOrganization('IETF MEXT Working Group')
nemoNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 0))
nemoObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1))
nemoConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 2))
nemoCore = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 1))
nemoMr = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 2))
nemoCn = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 3))
nemoHa = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 4))
nemoSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 1, 1))
nemoBindings = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 1, 2))
nemoConfiguration = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 1, 3))
nemoStats = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 1, 4))
nemoMrSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 2, 1))
nemoMrConf = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 2, 2))
nemoMrRegistration = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 2, 3))
nemoMrGlobalStats = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 2, 4))
nemoHaAdvertisement = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 4, 1))
nemoHaStats = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 4, 2))
nemoHaRegistration = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 4, 3))
nemoHaGlobalStats = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 1))
class NemoBURequestRejectionCode(TextualConvention, Integer32):
    reference = 'RFC 3963: Section 4.2'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(140, 141, 142, 143))
    namedValues = NamedValues(("mobileRouterOperationNotPermitted", 140), ("invalidPrefix", 141), ("notAuthorizedForPrefix", 142), ("forwardingSetupFailed", 143))

nemoCapabilities = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("mobileRouter", 0), ("homeAgentSupport", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoCapabilities.setStatus('current')
nemoStatus = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nemoStatus.setStatus('current')
nemoCounterDiscontinuityTime = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 1, 4, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoCounterDiscontinuityTime.setStatus('current')
nemoMrBLTable = MibTable((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 1), )
if mibBuilder.loadTexts: nemoMrBLTable.setStatus('current')
nemoMrBLEntry = MibTableRow((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 1, 1), )
mip6MnBLEntry.registerAugmentions(("NEMO-MIB", "nemoMrBLEntry"))
nemoMrBLEntry.setIndexNames(*mip6MnBLEntry.getIndexNames())
if mibBuilder.loadTexts: nemoMrBLEntry.setStatus('current')
nemoMrBLMode = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("implicitMode", 1), ("explicitMode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBLMode.setStatus('current')
nemoMrBLMrFlag = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBLMrFlag.setStatus('current')
nemoMrBLHomeAddressPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 1, 1, 3), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBLHomeAddressPrefixLength.setStatus('current')
nemoMrBLCareofAddressPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 1, 1, 4), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBLCareofAddressPrefixLength.setStatus('current')
nemoMrBLActiveEgressIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 1, 1, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBLActiveEgressIfIndex.setStatus('current')
nemoMrBLEstablishedHomeTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 1, 1, 6), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBLEstablishedHomeTunnelIfIndex.setStatus('current')
nemoMrRegnCounters = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 2))
nemoMrMobilityMessagesSent = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrMobilityMessagesSent.setStatus('current')
nemoMrMobilityMessagesRecd = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrMobilityMessagesRecd.setStatus('current')
nemoMrPrefixRegMode = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("implicitMode", 1), ("explicitMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nemoMrPrefixRegMode.setStatus('current')
nemoHaMobileNetworkPrefixTable = MibTable((1, 3, 6, 1, 2, 1, 184, 1, 4, 3, 1), )
if mibBuilder.loadTexts: nemoHaMobileNetworkPrefixTable.setStatus('current')
nemoHaMobileNetworkPrefixEntry = MibTableRow((1, 3, 6, 1, 2, 1, 184, 1, 4, 3, 1, 1), ).setIndexNames((0, "MOBILEIPV6-MIB", "mip6BindingHomeAddressType"), (0, "MOBILEIPV6-MIB", "mip6BindingHomeAddress"), (0, "NEMO-MIB", "nemoHaMobileNetworkPrefixSeqNo"))
if mibBuilder.loadTexts: nemoHaMobileNetworkPrefixEntry.setStatus('current')
nemoHaMobileNetworkPrefixSeqNo = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: nemoHaMobileNetworkPrefixSeqNo.setStatus('current')
nemoHaMobileNetworkPrefixType = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 3, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaMobileNetworkPrefixType.setStatus('current')
nemoHaMobileNetworkPrefix = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 3, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaMobileNetworkPrefix.setStatus('current')
nemoHaMobileNetworkPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaMobileNetworkPrefixLength.setStatus('current')
nemoHaMobileNetworkPrefixSource = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("configured", 1), ("bindingUpdate", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaMobileNetworkPrefixSource.setStatus('current')
nemoBindingCacheTable = MibTable((1, 3, 6, 1, 2, 1, 184, 1, 1, 2, 1), )
if mibBuilder.loadTexts: nemoBindingCacheTable.setStatus('current')
nemoBindingCacheEntry = MibTableRow((1, 3, 6, 1, 2, 1, 184, 1, 1, 2, 1, 1), )
mip6BindingCacheEntry.registerAugmentions(("NEMO-MIB", "nemoBindingCacheEntry"))
nemoBindingCacheEntry.setIndexNames(*mip6BindingCacheEntry.getIndexNames())
if mibBuilder.loadTexts: nemoBindingCacheEntry.setStatus('current')
nemoBindingMrFlag = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoBindingMrFlag.setStatus('current')
nemoBindingMrMode = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("implicitMode", 1), ("explicitMode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoBindingMrMode.setStatus('current')
nemoMrEgressIfTable = MibTable((1, 3, 6, 1, 2, 1, 184, 1, 2, 1, 1), )
if mibBuilder.loadTexts: nemoMrEgressIfTable.setStatus('current')
nemoMrEgressIfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 184, 1, 2, 1, 1, 1), ).setIndexNames((0, "NEMO-MIB", "nemoMrEgressIfIndex"))
if mibBuilder.loadTexts: nemoMrEgressIfEntry.setStatus('current')
nemoMrEgressIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: nemoMrEgressIfIndex.setStatus('current')
nemoMrEgressIfPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrEgressIfPriority.setStatus('current')
nemoMrEgressIfDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrEgressIfDescription.setStatus('current')
nemoMrEgressIfRoamHoldDownTime = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 2, 1, 1, 1, 4), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrEgressIfRoamHoldDownTime.setStatus('current')
nemoMrDiscoveryRequests = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrDiscoveryRequests.setStatus('current')
nemoMrDiscoveryReplies = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrDiscoveryReplies.setStatus('current')
nemoMrDiscoveryRepliesRouterFlagZero = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrDiscoveryRepliesRouterFlagZero.setStatus('current')
nemoMrMovedHome = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrMovedHome.setStatus('current')
nemoMrMovedOutofHome = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrMovedOutofHome.setStatus('current')
nemoMrMovedFNtoFN = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrMovedFNtoFN.setStatus('current')
nemoMrBetterIfDetected = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBetterIfDetected.setStatus('current')
nemoMrBindingAcksWONemoSupport = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBindingAcksWONemoSupport.setStatus('current')
nemoMrBindingAcksRegTypeChangeDisallowed = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBindingAcksRegTypeChangeDisallowed.setStatus('current')
nemoMrBindingAcksOperationNotPermitted = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBindingAcksOperationNotPermitted.setStatus('current')
nemoMrBindingAcksInvalidPrefix = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBindingAcksInvalidPrefix.setStatus('current')
nemoMrBindingAcksNotAuthorizedForPrefix = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBindingAcksNotAuthorizedForPrefix.setStatus('current')
nemoMrBindingAcksForwardingSetupFailed = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBindingAcksForwardingSetupFailed.setStatus('current')
nemoMrBindingAcksOtherError = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 2, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoMrBindingAcksOtherError.setStatus('current')
nemoHaBUAcksWONemoSupport = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBUAcksWONemoSupport.setStatus('current')
nemoHaBUAcksRegTypeChangeDisallowed = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBUAcksRegTypeChangeDisallowed.setStatus('current')
nemoHaBUAcksOperationNotPermitted = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBUAcksOperationNotPermitted.setStatus('current')
nemoHaBUAcksInvalidPrefix = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBUAcksInvalidPrefix.setStatus('current')
nemoHaBUAcksNotAuthorizedForPrefix = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBUAcksNotAuthorizedForPrefix.setStatus('current')
nemoHaBUAcksForwardingSetupFailed = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBUAcksForwardingSetupFailed.setStatus('current')
nemoHaBUAcksOtherError = MibScalar((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBUAcksOtherError.setStatus('current')
nemoHaCounterTable = MibTable((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 2), )
if mibBuilder.loadTexts: nemoHaCounterTable.setStatus('current')
nemoHaCounterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 2, 1), ).setIndexNames((0, "MOBILEIPV6-MIB", "mip6BindingHomeAddressType"), (0, "MOBILEIPV6-MIB", "mip6BindingHomeAddress"))
if mibBuilder.loadTexts: nemoHaCounterEntry.setStatus('current')
nemoHaBURequestsAccepted = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBURequestsAccepted.setStatus('current')
nemoHaBURequestsDenied = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBURequestsDenied.setStatus('current')
nemoHaBCEntryCreationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 2, 1, 3), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBCEntryCreationTime.setStatus('current')
nemoHaBUAcceptedTime = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 2, 1, 4), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBUAcceptedTime.setStatus('current')
nemoHaBURejectionTime = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 2, 1, 5), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaBURejectionTime.setStatus('current')
nemoHaRecentBURejectionCode = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 2, 1, 6), NemoBURequestRejectionCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaRecentBURejectionCode.setStatus('current')
nemoHaCtrDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 184, 1, 4, 2, 2, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nemoHaCtrDiscontinuityTime.setStatus('current')
nemoHomeTunnelEstablished = NotificationType((1, 3, 6, 1, 2, 1, 184, 0, 1)).setObjects(("NEMO-MIB", "nemoMrBLActiveEgressIfIndex"), ("NEMO-MIB", "nemoMrBLEstablishedHomeTunnelIfIndex"), ("MOBILEIPV6-MIB", "mip6MnBLCOAType"), ("MOBILEIPV6-MIB", "mip6MnBLCOA"), ("NEMO-MIB", "nemoMrBLHomeAddressPrefixLength"), ("NEMO-MIB", "nemoMrBLCareofAddressPrefixLength"))
if mibBuilder.loadTexts: nemoHomeTunnelEstablished.setStatus('current')
nemoHomeTunnelReleased = NotificationType((1, 3, 6, 1, 2, 1, 184, 0, 2)).setObjects(("NEMO-MIB", "nemoMrBLActiveEgressIfIndex"), ("NEMO-MIB", "nemoMrBLEstablishedHomeTunnelIfIndex"), ("MOBILEIPV6-MIB", "mip6MnBLCOAType"), ("MOBILEIPV6-MIB", "mip6MnBLCOA"), ("NEMO-MIB", "nemoMrBLHomeAddressPrefixLength"), ("NEMO-MIB", "nemoMrBLCareofAddressPrefixLength"))
if mibBuilder.loadTexts: nemoHomeTunnelReleased.setStatus('current')
nemoGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 2, 1))
nemoCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 184, 2, 2))
nemoSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 184, 2, 1, 1)).setObjects(("NEMO-MIB", "nemoCapabilities"), ("NEMO-MIB", "nemoStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoSystemGroup = nemoSystemGroup.setStatus('current')
nemoBindingCacheGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 184, 2, 1, 2)).setObjects(("NEMO-MIB", "nemoBindingMrFlag"), ("NEMO-MIB", "nemoBindingMrMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoBindingCacheGroup = nemoBindingCacheGroup.setStatus('current')
nemoStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 184, 2, 1, 3)).setObjects(("NEMO-MIB", "nemoCounterDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoStatsGroup = nemoStatsGroup.setStatus('current')
nemoMrConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 184, 2, 1, 4)).setObjects(("NEMO-MIB", "nemoMrEgressIfPriority"), ("NEMO-MIB", "nemoMrEgressIfDescription"), ("NEMO-MIB", "nemoMrEgressIfRoamHoldDownTime"), ("NEMO-MIB", "nemoMrDiscoveryRequests"), ("NEMO-MIB", "nemoMrDiscoveryReplies"), ("NEMO-MIB", "nemoMrDiscoveryRepliesRouterFlagZero"), ("NEMO-MIB", "nemoMrMovedHome"), ("NEMO-MIB", "nemoMrMovedOutofHome"), ("NEMO-MIB", "nemoMrMovedFNtoFN"), ("NEMO-MIB", "nemoMrBetterIfDetected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoMrConfGroup = nemoMrConfGroup.setStatus('current')
nemoMrRegistrationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 184, 2, 1, 5)).setObjects(("NEMO-MIB", "nemoMrBLMode"), ("NEMO-MIB", "nemoMrBLMrFlag"), ("NEMO-MIB", "nemoMrBLHomeAddressPrefixLength"), ("NEMO-MIB", "nemoMrBLCareofAddressPrefixLength"), ("NEMO-MIB", "nemoMrBLActiveEgressIfIndex"), ("NEMO-MIB", "nemoMrBLEstablishedHomeTunnelIfIndex"), ("NEMO-MIB", "nemoMrMobilityMessagesSent"), ("NEMO-MIB", "nemoMrMobilityMessagesRecd"), ("NEMO-MIB", "nemoMrPrefixRegMode"), ("NEMO-MIB", "nemoMrBindingAcksWONemoSupport"), ("NEMO-MIB", "nemoMrBindingAcksRegTypeChangeDisallowed"), ("NEMO-MIB", "nemoMrBindingAcksOperationNotPermitted"), ("NEMO-MIB", "nemoMrBindingAcksInvalidPrefix"), ("NEMO-MIB", "nemoMrBindingAcksNotAuthorizedForPrefix"), ("NEMO-MIB", "nemoMrBindingAcksForwardingSetupFailed"), ("NEMO-MIB", "nemoMrBindingAcksOtherError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoMrRegistrationGroup = nemoMrRegistrationGroup.setStatus('current')
nemoHaSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 184, 2, 1, 6)).setObjects(("NEMO-MIB", "nemoHaMobileNetworkPrefixType"), ("NEMO-MIB", "nemoHaMobileNetworkPrefix"), ("NEMO-MIB", "nemoHaMobileNetworkPrefixLength"), ("NEMO-MIB", "nemoHaMobileNetworkPrefixSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoHaSystemGroup = nemoHaSystemGroup.setStatus('current')
nemoHaStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 184, 2, 1, 7)).setObjects(("NEMO-MIB", "nemoHaBURequestsAccepted"), ("NEMO-MIB", "nemoHaBURequestsDenied"), ("NEMO-MIB", "nemoHaBCEntryCreationTime"), ("NEMO-MIB", "nemoHaBUAcceptedTime"), ("NEMO-MIB", "nemoHaBURejectionTime"), ("NEMO-MIB", "nemoHaRecentBURejectionCode"), ("NEMO-MIB", "nemoHaCtrDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoHaStatsGroup = nemoHaStatsGroup.setStatus('current')
nemoHaGlobalStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 184, 2, 1, 8)).setObjects(("NEMO-MIB", "nemoHaBUAcksWONemoSupport"), ("NEMO-MIB", "nemoHaBUAcksRegTypeChangeDisallowed"), ("NEMO-MIB", "nemoHaBUAcksOperationNotPermitted"), ("NEMO-MIB", "nemoHaBUAcksInvalidPrefix"), ("NEMO-MIB", "nemoHaBUAcksNotAuthorizedForPrefix"), ("NEMO-MIB", "nemoHaBUAcksForwardingSetupFailed"), ("NEMO-MIB", "nemoHaBUAcksOtherError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoHaGlobalStatsGroup = nemoHaGlobalStatsGroup.setStatus('current')
nemoNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 184, 2, 1, 9)).setObjects(("NEMO-MIB", "nemoHomeTunnelEstablished"), ("NEMO-MIB", "nemoHomeTunnelReleased"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoNotificationGroup = nemoNotificationGroup.setStatus('current')
nemoCoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 184, 2, 2, 1)).setObjects(("NEMO-MIB", "nemoSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoCoreCompliance = nemoCoreCompliance.setStatus('current')
nemoCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 184, 2, 2, 2)).setObjects(("NEMO-MIB", "nemoSystemGroup"), ("NEMO-MIB", "nemoBindingCacheGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoCompliance2 = nemoCompliance2.setStatus('current')
nemoCoreReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 184, 2, 2, 3)).setObjects(("NEMO-MIB", "nemoSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoCoreReadOnlyCompliance = nemoCoreReadOnlyCompliance.setStatus('current')
nemoReadOnlyCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 184, 2, 2, 4)).setObjects(("NEMO-MIB", "nemoSystemGroup"), ("NEMO-MIB", "nemoBindingCacheGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoReadOnlyCompliance2 = nemoReadOnlyCompliance2.setStatus('current')
nemoMrCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 184, 2, 2, 5)).setObjects(("NEMO-MIB", "nemoStatsGroup"), ("NEMO-MIB", "nemoMrConfGroup"), ("NEMO-MIB", "nemoMrRegistrationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoMrCompliance = nemoMrCompliance.setStatus('current')
nemoMrReadOnlyCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 184, 2, 2, 6)).setObjects(("NEMO-MIB", "nemoStatsGroup"), ("NEMO-MIB", "nemoMrConfGroup"), ("NEMO-MIB", "nemoMrRegistrationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoMrReadOnlyCompliance2 = nemoMrReadOnlyCompliance2.setStatus('current')
nemoHaCoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 184, 2, 2, 7)).setObjects(("NEMO-MIB", "nemoHaSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoHaCoreCompliance = nemoHaCoreCompliance.setStatus('current')
nemoHaCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 184, 2, 2, 8)).setObjects(("NEMO-MIB", "nemoHaSystemGroup"), ("NEMO-MIB", "nemoHaStatsGroup"), ("NEMO-MIB", "nemoHaGlobalStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoHaCompliance2 = nemoHaCompliance2.setStatus('current')
nemoNotificationCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 184, 2, 2, 9)).setObjects(("NEMO-MIB", "nemoNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nemoNotificationCompliance = nemoNotificationCompliance.setStatus('current')
mibBuilder.exportSymbols("NEMO-MIB", nemoMrBLActiveEgressIfIndex=nemoMrBLActiveEgressIfIndex, nemoHaBURequestsAccepted=nemoHaBURequestsAccepted, nemoMrRegistrationGroup=nemoMrRegistrationGroup, nemoHaCompliance2=nemoHaCompliance2, nemoBindings=nemoBindings, nemoHaMobileNetworkPrefixSeqNo=nemoHaMobileNetworkPrefixSeqNo, nemoMrEgressIfIndex=nemoMrEgressIfIndex, nemoMrBindingAcksOtherError=nemoMrBindingAcksOtherError, nemoHaBURequestsDenied=nemoHaBURequestsDenied, nemoCoreCompliance=nemoCoreCompliance, nemoCompliances=nemoCompliances, nemoMrBindingAcksForwardingSetupFailed=nemoMrBindingAcksForwardingSetupFailed, nemoMrBLMrFlag=nemoMrBLMrFlag, nemoMrEgressIfEntry=nemoMrEgressIfEntry, nemoHomeTunnelEstablished=nemoHomeTunnelEstablished, nemoHaBURejectionTime=nemoHaBURejectionTime, nemoHaGlobalStats=nemoHaGlobalStats, nemoBindingMrMode=nemoBindingMrMode, nemoMrReadOnlyCompliance2=nemoMrReadOnlyCompliance2, nemoBindingCacheGroup=nemoBindingCacheGroup, nemoMr=nemoMr, nemoMrEgressIfDescription=nemoMrEgressIfDescription, nemoHaCoreCompliance=nemoHaCoreCompliance, nemoMrBLEstablishedHomeTunnelIfIndex=nemoMrBLEstablishedHomeTunnelIfIndex, nemoStats=nemoStats, nemoHaStatsGroup=nemoHaStatsGroup, nemoHaBCEntryCreationTime=nemoHaBCEntryCreationTime, nemoNotificationCompliance=nemoNotificationCompliance, nemoMrMovedOutofHome=nemoMrMovedOutofHome, nemoMrRegnCounters=nemoMrRegnCounters, nemoHaStats=nemoHaStats, nemoMrDiscoveryRequests=nemoMrDiscoveryRequests, nemoHa=nemoHa, nemoBindingCacheTable=nemoBindingCacheTable, nemoMrMovedFNtoFN=nemoMrMovedFNtoFN, nemoMrBindingAcksNotAuthorizedForPrefix=nemoMrBindingAcksNotAuthorizedForPrefix, nemoHaCtrDiscontinuityTime=nemoHaCtrDiscontinuityTime, NemoBURequestRejectionCode=NemoBURequestRejectionCode, nemoSystem=nemoSystem, nemoMIB=nemoMIB, nemoStatus=nemoStatus, nemoConfiguration=nemoConfiguration, nemoCapabilities=nemoCapabilities, nemoMrBetterIfDetected=nemoMrBetterIfDetected, nemoHaBUAcksRegTypeChangeDisallowed=nemoHaBUAcksRegTypeChangeDisallowed, nemoMrBLCareofAddressPrefixLength=nemoMrBLCareofAddressPrefixLength, nemoMrMobilityMessagesSent=nemoMrMobilityMessagesSent, nemoHaSystemGroup=nemoHaSystemGroup, nemoConformance=nemoConformance, nemoMrBindingAcksRegTypeChangeDisallowed=nemoMrBindingAcksRegTypeChangeDisallowed, nemoBindingMrFlag=nemoBindingMrFlag, nemoHaBUAcksForwardingSetupFailed=nemoHaBUAcksForwardingSetupFailed, nemoHaBUAcksInvalidPrefix=nemoHaBUAcksInvalidPrefix, PYSNMP_MODULE_ID=nemoMIB, nemoHaBUAcceptedTime=nemoHaBUAcceptedTime, nemoMrPrefixRegMode=nemoMrPrefixRegMode, nemoStatsGroup=nemoStatsGroup, nemoCounterDiscontinuityTime=nemoCounterDiscontinuityTime, nemoBindingCacheEntry=nemoBindingCacheEntry, nemoHomeTunnelReleased=nemoHomeTunnelReleased, nemoMrBindingAcksInvalidPrefix=nemoMrBindingAcksInvalidPrefix, nemoHaCounterEntry=nemoHaCounterEntry, nemoMrDiscoveryReplies=nemoMrDiscoveryReplies, nemoMrEgressIfTable=nemoMrEgressIfTable, nemoNotifications=nemoNotifications, nemoHaRecentBURejectionCode=nemoHaRecentBURejectionCode, nemoHaMobileNetworkPrefixTable=nemoHaMobileNetworkPrefixTable, nemoNotificationGroup=nemoNotificationGroup, nemoObjects=nemoObjects, nemoHaMobileNetworkPrefixSource=nemoHaMobileNetworkPrefixSource, nemoMrEgressIfPriority=nemoMrEgressIfPriority, nemoHaBUAcksWONemoSupport=nemoHaBUAcksWONemoSupport, nemoMrConfGroup=nemoMrConfGroup, nemoHaRegistration=nemoHaRegistration, nemoHaMobileNetworkPrefix=nemoHaMobileNetworkPrefix, nemoMrConf=nemoMrConf, nemoReadOnlyCompliance2=nemoReadOnlyCompliance2, nemoCompliance2=nemoCompliance2, nemoMrCompliance=nemoMrCompliance, nemoMrGlobalStats=nemoMrGlobalStats, nemoHaBUAcksNotAuthorizedForPrefix=nemoHaBUAcksNotAuthorizedForPrefix, nemoHaGlobalStatsGroup=nemoHaGlobalStatsGroup, nemoMrRegistration=nemoMrRegistration, nemoHaMobileNetworkPrefixType=nemoHaMobileNetworkPrefixType, nemoMrEgressIfRoamHoldDownTime=nemoMrEgressIfRoamHoldDownTime, nemoMrBindingAcksOperationNotPermitted=nemoMrBindingAcksOperationNotPermitted, nemoHaAdvertisement=nemoHaAdvertisement, nemoMrBLHomeAddressPrefixLength=nemoMrBLHomeAddressPrefixLength, nemoMrBLEntry=nemoMrBLEntry, nemoCoreReadOnlyCompliance=nemoCoreReadOnlyCompliance, nemoMrSystem=nemoMrSystem, nemoSystemGroup=nemoSystemGroup, nemoHaMobileNetworkPrefixEntry=nemoHaMobileNetworkPrefixEntry, nemoMrMovedHome=nemoMrMovedHome, nemoGroups=nemoGroups, nemoMrBLMode=nemoMrBLMode, nemoHaMobileNetworkPrefixLength=nemoHaMobileNetworkPrefixLength, nemoMrDiscoveryRepliesRouterFlagZero=nemoMrDiscoveryRepliesRouterFlagZero, nemoCore=nemoCore, nemoHaCounterTable=nemoHaCounterTable, nemoHaBUAcksOperationNotPermitted=nemoHaBUAcksOperationNotPermitted, nemoMrBLTable=nemoMrBLTable, nemoHaBUAcksOtherError=nemoHaBUAcksOtherError, nemoMrBindingAcksWONemoSupport=nemoMrBindingAcksWONemoSupport, nemoCn=nemoCn, nemoMrMobilityMessagesRecd=nemoMrMobilityMessagesRecd)
