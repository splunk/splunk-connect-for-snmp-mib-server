#
# PySNMP MIB module SLED-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SLED-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:59:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Gauge32, Integer32, Bits, ModuleIdentity, Counter64, IpAddress, TimeTicks, ObjectIdentity, iso, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Gauge32", "Integer32", "Bits", "ModuleIdentity", "Counter64", "IpAddress", "TimeTicks", "ObjectIdentity", "iso", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
DisplayString, TimeStamp, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TextualConvention", "TruthValue")
sledMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13))
sledMib.setRevisions(('2007-05-18 00:00', '2006-07-28 00:00', '2005-02-09 00:00', '2004-11-24 00:00', '2003-10-15 00:00',))
if mibBuilder.loadTexts: sledMib.setLastUpdated('200705180000Z')
if mibBuilder.loadTexts: sledMib.setOrganization('CableLabs eDOCSIS Working Group')
sledNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 0))
sledMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1))
sledMibNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 2))
sledMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 3))
sledGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 1))
sledLoopback = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 2))
sledPktGen = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 3))
sledGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sledGlobalEnable.setStatus('current')
sledLoopbackInterface = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 2, 1), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sledLoopbackInterface.setStatus('current')
sledLoopbackEnable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 2, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sledLoopbackEnable.setStatus('current')
sledLoopbackPktHdr = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(42, 42)).setFixedLength(42)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sledLoopbackPktHdr.setStatus('current')
sledPktGenInterface = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 3, 1), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sledPktGenInterface.setStatus('current')
sledPktGenPayload = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 3, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 1518))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sledPktGenPayload.setStatus('current')
sledPktGenRate = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 3, 3), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sledPktGenRate.setStatus('current')
sledPktGenNumPkts = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 3, 4), Unsigned32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sledPktGenNumPkts.setStatus('current')
sledPktGenTrigger = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("stop", 2))).clone('stop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sledPktGenTrigger.setStatus('current')
sledPktGenLastTrigger = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 1, 3, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sledPktGenLastTrigger.setStatus('current')
sledMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 3, 1))
sledMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 3, 2))
sledMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 3, 1, 1)).setObjects(("SLED-MIB", "sledMibBaseGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sledMibCompliance = sledMibCompliance.setStatus('current')
sledMibBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 13, 3, 2, 1)).setObjects(("SLED-MIB", "sledGlobalEnable"), ("SLED-MIB", "sledLoopbackInterface"), ("SLED-MIB", "sledLoopbackEnable"), ("SLED-MIB", "sledLoopbackPktHdr"), ("SLED-MIB", "sledPktGenInterface"), ("SLED-MIB", "sledPktGenPayload"), ("SLED-MIB", "sledPktGenRate"), ("SLED-MIB", "sledPktGenNumPkts"), ("SLED-MIB", "sledPktGenTrigger"), ("SLED-MIB", "sledPktGenLastTrigger"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sledMibBaseGroup = sledMibBaseGroup.setStatus('current')
mibBuilder.exportSymbols("SLED-MIB", sledPktGenPayload=sledPktGenPayload, sledPktGenNumPkts=sledPktGenNumPkts, sledPktGenRate=sledPktGenRate, sledMib=sledMib, sledPktGenTrigger=sledPktGenTrigger, sledLoopbackEnable=sledLoopbackEnable, sledMibGroups=sledMibGroups, sledNotifications=sledNotifications, PYSNMP_MODULE_ID=sledMib, sledMibConformance=sledMibConformance, sledPktGen=sledPktGen, sledPktGenLastTrigger=sledPktGenLastTrigger, sledLoopback=sledLoopback, sledGlobalEnable=sledGlobalEnable, sledMibCompliance=sledMibCompliance, sledGlobal=sledGlobal, sledMibNotificationsObjects=sledMibNotificationsObjects, sledLoopbackInterface=sledLoopbackInterface, sledMibCompliances=sledMibCompliances, sledPktGenInterface=sledPktGenInterface, sledMibBaseGroup=sledMibBaseGroup, sledMibObjects=sledMibObjects, sledLoopbackPktHdr=sledLoopbackPktHdr)
