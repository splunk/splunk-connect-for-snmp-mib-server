#
# PySNMP MIB module TPT-MISC-NOTIFY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPT-MISC-NOTIFY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:18:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Bits, Gauge32, Unsigned32, NotificationType, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, iso, ObjectIdentity, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "Gauge32", "Unsigned32", "NotificationType", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "iso", "ObjectIdentity", "MibIdentifier", "ModuleIdentity")
DisplayString, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TextualConvention")
SslInspectedFlag, = mibBuilder.importSymbols("TPT-POLICY-MIB", "SslInspectedFlag")
tpt_tpa_unkparams, tpt_tpa_eventsV2, tpt_tpa_objs = mibBuilder.importSymbols("TPT-TPAMIBS-MIB", "tpt-tpa-unkparams", "tpt-tpa-eventsV2", "tpt-tpa-objs")
tpt_misc_notify = ModuleIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 2)).setLabel("tpt-misc-notify")
tpt_misc_notify.setRevisions(('2016-05-25 18:54', '2016-05-03 17:26', '2015-05-28 13:30', '2014-11-11 18:43',))
if mibBuilder.loadTexts: tpt_misc_notify.setLastUpdated('201605251854Z')
if mibBuilder.loadTexts: tpt_misc_notify.setOrganization('Trend Micro, Inc.')
tptMiscNotifyDeviceID = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptMiscNotifyDeviceID.setStatus('current')
tptManagedNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 9)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"))
if mibBuilder.loadTexts: tptManagedNotify.setStatus('current')
tptUnmanagedNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 10)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"))
if mibBuilder.loadTexts: tptUnmanagedNotify.setStatus('current')
class LogFileType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("system", 1), ("alert", 2), ("block", 3), ("peer", 4), ("audit", 5), ("quarantine", 6))

tptRolloverNotifyFileType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 32), LogFileType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptRolloverNotifyFileType.setStatus('current')
tptRolloverNotifyMaxFiles = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptRolloverNotifyMaxFiles.setStatus('deprecated')
tptRolloverNotifyNumFiles = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptRolloverNotifyNumFiles.setStatus('deprecated')
tptRolloverNotifyTime = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptRolloverNotifyTime.setStatus('current')
tptRolloverNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 11)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptRolloverNotifyFileType"), ("TPT-MISC-NOTIFY-MIB", "tptRolloverNotifyTime"))
if mibBuilder.loadTexts: tptRolloverNotify.setStatus('current')
class DiscoveryDelta(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("changed", 1), ("unchanged", 2))

tptDiscoveryNotifyScanID = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 42), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyScanID.setStatus('obsolete')
tptDiscoveryNotifySegmentName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 43), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifySegmentName.setStatus('obsolete')
tptDiscoveryNotifyScanRange = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 44), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyScanRange.setStatus('obsolete')
tptDiscoveryNotifyDelta = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 45), DiscoveryDelta()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyDelta.setStatus('obsolete')
tptDiscoveryNotifyNewHosts = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyNewHosts.setStatus('obsolete')
tptDiscoveryNotifyChanged = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyChanged.setStatus('obsolete')
tptDiscoveryNotifyUnchanged = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyUnchanged.setStatus('obsolete')
tptDiscoveryNotifyNotFound = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyNotFound.setStatus('obsolete')
tptDiscoveryNotifyUnknown = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyUnknown.setStatus('obsolete')
tptDiscoveryNotifyStartTime = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyStartTime.setStatus('obsolete')
tptDiscoveryNotifyStopTime = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyStopTime.setStatus('obsolete')
tptDiscoveryNotifyErrorText = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 53), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyErrorText.setStatus('obsolete')
tptDiscoveryNotifySchedID = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 56), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifySchedID.setStatus('obsolete')
tptDiscoveryNotifyStartStop = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 12)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyScanID"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifySegmentName"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyScanRange"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyDelta"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyNewHosts"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyChanged"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyUnchanged"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyNotFound"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyUnknown"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyStartTime"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyStopTime"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyErrorText"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifySchedID"))
if mibBuilder.loadTexts: tptDiscoveryNotifyStartStop.setStatus('obsolete')
tptDiscoveryNotifyHostNetAddr = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 54), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyHostNetAddr.setStatus('obsolete')
tptDiscoveryNotifyHostDeviceID = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 55), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptDiscoveryNotifyHostDeviceID.setStatus('obsolete')
tptDiscoveryNotifyNewHost = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 13)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyHostNetAddr"), ("TPT-MISC-NOTIFY-MIB", "tptDiscoveryNotifyHostDeviceID"))
if mibBuilder.loadTexts: tptDiscoveryNotifyNewHost.setStatus('obsolete')
class SystemLogSeverity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("critical", 1), ("error", 2), ("emergency", 3), ("warning", 4), ("alert", 5), ("notice", 6), ("info", 7), ("debug", 8))

tptSystemLogNotifyText = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 92), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptSystemLogNotifyText.setStatus('current')
tptSystemLogNotifySequence = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptSystemLogNotifySequence.setStatus('current')
tptSystemLogNotifySeverity = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 94), SystemLogSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptSystemLogNotifySeverity.setStatus('current')
tptSystemLogNotifyTimeSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 95), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptSystemLogNotifyTimeSec.setStatus('current')
tptSystemLogNotifyTimeNano = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 96), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptSystemLogNotifyTimeNano.setStatus('current')
tptSystemLogNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 16)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptSystemLogNotifyText"), ("TPT-MISC-NOTIFY-MIB", "tptSystemLogNotifySequence"), ("TPT-MISC-NOTIFY-MIB", "tptSystemLogNotifySeverity"), ("TPT-MISC-NOTIFY-MIB", "tptSystemLogNotifyTimeSec"), ("TPT-MISC-NOTIFY-MIB", "tptSystemLogNotifyTimeNano"))
if mibBuilder.loadTexts: tptSystemLogNotify.setStatus('current')
class AddOrRemove(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("add", 1), ("remove", 2))

tptQuarantineNotifyHostNetAddr = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 132), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptQuarantineNotifyHostNetAddr.setStatus('current')
tptQuarantineNotifyHostNetAddrV6 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 136), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptQuarantineNotifyHostNetAddrV6.setStatus('current')
tptQuarantineNotifyReason = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 133), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptQuarantineNotifyReason.setStatus('current')
tptQuarantineNotifySegmentName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 134), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptQuarantineNotifySegmentName.setStatus('current')
tptQuarantineNotifyAction = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 135), AddOrRemove()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptQuarantineNotifyAction.setStatus('current')
tptQuarantineNotifySslInspected = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 181), SslInspectedFlag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptQuarantineNotifySslInspected.setStatus('current')
tptQuarantineNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 20)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptQuarantineNotifyHostNetAddr"), ("TPT-MISC-NOTIFY-MIB", "tptQuarantineNotifyReason"), ("TPT-MISC-NOTIFY-MIB", "tptQuarantineNotifySegmentName"), ("TPT-MISC-NOTIFY-MIB", "tptQuarantineNotifyAction"), ("TPT-MISC-NOTIFY-MIB", "tptQuarantineNotifyHostNetAddrV6"), ("TPT-MISC-NOTIFY-MIB", "tptQuarantineNotifySslInspected"))
if mibBuilder.loadTexts: tptQuarantineNotify.setStatus('current')
class CongestionThresholdPhase(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("entering", 1), ("continuing", 2), ("exiting", 3))

tptCongestionPacketLoss = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 153), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptCongestionPacketLoss.setStatus('current')
tptCongestionNotifyPhase = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 154), CongestionThresholdPhase()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptCongestionNotifyPhase.setStatus('current')
tptCongestionThreshold = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 155), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptCongestionThreshold.setStatus('current')
tptTier3CongestionPacketLoss = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 156), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptTier3CongestionPacketLoss.setStatus('current')
tptTier3CongestionNotifyPhase = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 157), CongestionThresholdPhase()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptTier3CongestionNotifyPhase.setStatus('current')
tptTier3CongestionThreshold = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 158), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptTier3CongestionThreshold.setStatus('current')
tptCongestionThresholdNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 25)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptCongestionNotifyPhase"), ("TPT-MISC-NOTIFY-MIB", "tptCongestionPacketLoss"), ("TPT-MISC-NOTIFY-MIB", "tptCongestionThreshold"))
if mibBuilder.loadTexts: tptCongestionThresholdNotify.setStatus('current')
tptiTier3CongestionThresholdNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 26)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptTier3CongestionNotifyPhase"), ("TPT-MISC-NOTIFY-MIB", "tptTier3CongestionPacketLoss"), ("TPT-MISC-NOTIFY-MIB", "tptTier3CongestionThreshold"))
if mibBuilder.loadTexts: tptiTier3CongestionThresholdNotify.setStatus('current')
tptAuditLogNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 60)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogNotifyTime"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogNotifyAccess"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogNotifyType"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogNotifyIpAddrType"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogNotifyIpAddr"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogNotifyCategory"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogNotifyResult"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogNotifyUser"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogNotifyMessage"))
if mibBuilder.loadTexts: tptAuditLogNotify.setStatus('current')
class AuditLogResult(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("success", 1), ("failed", 2))

class AuditLogCategory(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))
    namedValues = NamedValues(("undefined", 1), ("general", 2), ("login", 3), ("logout", 4), ("user", 5), ("time", 6), ("policy", 7), ("update", 8), ("boot", 9), ("report", 10), ("host", 11), ("cfg", 12), ("device", 13), ("sms", 14), ("server", 15), ("segment", 16), ("license", 17), ("ha", 18), ("monitor", 19), ("ipFilter", 20), ("connTable", 21), ("hostComm", 22), ("tse", 23), ("cf", 24))

tptAuditLogNotifyTime = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 170), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptAuditLogNotifyTime.setStatus('current')
tptAuditLogNotifyAccess = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 171), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptAuditLogNotifyAccess.setStatus('current')
tptAuditLogNotifyType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 172), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptAuditLogNotifyType.setStatus('current')
tptAuditLogNotifyIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 173), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptAuditLogNotifyIpAddrType.setStatus('current')
tptAuditLogNotifyIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 174), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptAuditLogNotifyIpAddr.setStatus('current')
tptAuditLogNotifyCategory = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 175), AuditLogCategory()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptAuditLogNotifyCategory.setStatus('current')
tptAuditLogNotifyResult = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 176), AuditLogResult()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptAuditLogNotifyResult.setStatus('current')
tptAuditLogNotifyUser = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 177), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptAuditLogNotifyUser.setStatus('current')
tptAuditLogNotifyMessage = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 178), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4096))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptAuditLogNotifyMessage.setStatus('current')
tptAuditLogCapacityNotifyPercent = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 201), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptAuditLogCapacityNotifyPercent.setStatus('current')
tptAuditLogCapacityOrFailureNotifyTime = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 202), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptAuditLogCapacityOrFailureNotifyTime.setStatus('current')
tptAuditLogCapacityNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 61)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptAuditLogCapacityNotifyPercent"), ("TPT-MISC-NOTIFY-MIB", "tptRolloverNotifyTime"))
if mibBuilder.loadTexts: tptAuditLogCapacityNotify.setStatus('current')
tptLoggingFailureNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 62)).setObjects(("TPT-MISC-NOTIFY-MIB", "tptMiscNotifyDeviceID"), ("TPT-MISC-NOTIFY-MIB", "tptRolloverNotifyTime"))
if mibBuilder.loadTexts: tptLoggingFailureNotify.setStatus('current')
mibBuilder.exportSymbols("TPT-MISC-NOTIFY-MIB", tptDiscoveryNotifyUnchanged=tptDiscoveryNotifyUnchanged, tptDiscoveryNotifyStopTime=tptDiscoveryNotifyStopTime, tptMiscNotifyDeviceID=tptMiscNotifyDeviceID, tptSystemLogNotifyText=tptSystemLogNotifyText, tptQuarantineNotifyReason=tptQuarantineNotifyReason, tptLoggingFailureNotify=tptLoggingFailureNotify, tptCongestionPacketLoss=tptCongestionPacketLoss, tptAuditLogNotifyType=tptAuditLogNotifyType, tpt_misc_notify=tpt_misc_notify, tptDiscoveryNotifyHostNetAddr=tptDiscoveryNotifyHostNetAddr, tptTier3CongestionNotifyPhase=tptTier3CongestionNotifyPhase, tptAuditLogNotifyTime=tptAuditLogNotifyTime, tptDiscoveryNotifySchedID=tptDiscoveryNotifySchedID, tptSystemLogNotifyTimeNano=tptSystemLogNotifyTimeNano, tptQuarantineNotifyHostNetAddr=tptQuarantineNotifyHostNetAddr, tptAuditLogNotifyIpAddr=tptAuditLogNotifyIpAddr, tptAuditLogCapacityNotify=tptAuditLogCapacityNotify, tptQuarantineNotify=tptQuarantineNotify, tptDiscoveryNotifyNotFound=tptDiscoveryNotifyNotFound, tptDiscoveryNotifyNewHost=tptDiscoveryNotifyNewHost, tptAuditLogCapacityNotifyPercent=tptAuditLogCapacityNotifyPercent, CongestionThresholdPhase=CongestionThresholdPhase, tptAuditLogCapacityOrFailureNotifyTime=tptAuditLogCapacityOrFailureNotifyTime, tptAuditLogNotify=tptAuditLogNotify, tptDiscoveryNotifyStartTime=tptDiscoveryNotifyStartTime, tptQuarantineNotifySslInspected=tptQuarantineNotifySslInspected, tptDiscoveryNotifyUnknown=tptDiscoveryNotifyUnknown, AddOrRemove=AddOrRemove, tptTier3CongestionThreshold=tptTier3CongestionThreshold, tptiTier3CongestionThresholdNotify=tptiTier3CongestionThresholdNotify, tptAuditLogNotifyMessage=tptAuditLogNotifyMessage, tptDiscoveryNotifyDelta=tptDiscoveryNotifyDelta, SystemLogSeverity=SystemLogSeverity, tptDiscoveryNotifyScanID=tptDiscoveryNotifyScanID, tptAuditLogNotifyCategory=tptAuditLogNotifyCategory, tptAuditLogNotifyAccess=tptAuditLogNotifyAccess, tptRolloverNotifyNumFiles=tptRolloverNotifyNumFiles, tptDiscoveryNotifyChanged=tptDiscoveryNotifyChanged, tptDiscoveryNotifySegmentName=tptDiscoveryNotifySegmentName, tptDiscoveryNotifyNewHosts=tptDiscoveryNotifyNewHosts, PYSNMP_MODULE_ID=tpt_misc_notify, tptSystemLogNotifyTimeSec=tptSystemLogNotifyTimeSec, tptRolloverNotifyMaxFiles=tptRolloverNotifyMaxFiles, tptQuarantineNotifySegmentName=tptQuarantineNotifySegmentName, tptCongestionThresholdNotify=tptCongestionThresholdNotify, tptSystemLogNotifySeverity=tptSystemLogNotifySeverity, DiscoveryDelta=DiscoveryDelta, LogFileType=LogFileType, tptRolloverNotifyFileType=tptRolloverNotifyFileType, tptQuarantineNotifyAction=tptQuarantineNotifyAction, tptCongestionThreshold=tptCongestionThreshold, tptManagedNotify=tptManagedNotify, tptDiscoveryNotifyErrorText=tptDiscoveryNotifyErrorText, AuditLogResult=AuditLogResult, tptQuarantineNotifyHostNetAddrV6=tptQuarantineNotifyHostNetAddrV6, tptDiscoveryNotifyStartStop=tptDiscoveryNotifyStartStop, tptAuditLogNotifyUser=tptAuditLogNotifyUser, tptAuditLogNotifyIpAddrType=tptAuditLogNotifyIpAddrType, tptTier3CongestionPacketLoss=tptTier3CongestionPacketLoss, tptUnmanagedNotify=tptUnmanagedNotify, tptDiscoveryNotifyHostDeviceID=tptDiscoveryNotifyHostDeviceID, tptAuditLogNotifyResult=tptAuditLogNotifyResult, tptSystemLogNotifySequence=tptSystemLogNotifySequence, tptRolloverNotify=tptRolloverNotify, AuditLogCategory=AuditLogCategory, tptCongestionNotifyPhase=tptCongestionNotifyPhase, tptDiscoveryNotifyScanRange=tptDiscoveryNotifyScanRange, tptRolloverNotifyTime=tptRolloverNotifyTime, tptSystemLogNotify=tptSystemLogNotify)
