#
# PySNMP MIB module WWP-LEOS-COMMUNITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-COMMUNITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
AddressFamilyNumbers, = mibBuilder.importSymbols("IANA-ADDRESS-FAMILY-NUMBERS-MIB", "AddressFamilyNumbers")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, iso, Bits, IpAddress, TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, NotificationType, MibIdentifier, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "iso", "Bits", "IpAddress", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "NotificationType", "MibIdentifier", "Unsigned32", "ObjectIdentity")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
wwpModules, wwpModulesLeos = mibBuilder.importSymbols("WWP-SMI", "wwpModules", "wwpModulesLeos")
wwpLeosCommunityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22))
wwpLeosCommunityMIB.setRevisions(('2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpLeosCommunityMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpLeosCommunityMIB.setOrganization('World Wide Packets, Inc')
wwpLeosCommunityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1))
wwpLeosCommunity = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1))
wwpLeosCommunityMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 2))
wwpLeosCommunityMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 2, 0))
wwpLeosCommunityMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 3))
wwpLeosCommunityMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 3, 1))
wwpLeosCommunityMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 3, 2))
wwpLeosCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1), )
if mibBuilder.loadTexts: wwpLeosCommunityTable.setStatus('current')
wwpLeosCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1), ).setIndexNames((0, "WWP-LEOS-COMMUNITY-MIB", "wwpLeosCommunityIndex"))
if mibBuilder.loadTexts: wwpLeosCommunityEntry.setStatus('current')
wwpLeosCommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosCommunityIndex.setStatus('current')
wwpLeosCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosCommunityName.setStatus('current')
wwpLeosCommunityAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosCommunityAddr.setStatus('current')
wwpLeosCommunityResolvedIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosCommunityResolvedIp.setStatus('current')
wwpLeosCommunityRights = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosCommunityRights.setStatus('current')
wwpLeosCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosCommunityStatus.setStatus('current')
wwpLeosNotifCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosNotifCommunityTable.setStatus('current')
wwpLeosNotifCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-COMMUNITY-MIB", "wwpLeosNotifIndex"))
if mibBuilder.loadTexts: wwpLeosNotifCommunityEntry.setStatus('current')
wwpLeosNotifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNotifIndex.setStatus('current')
wwpLeosNotifCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosNotifCommunityName.setStatus('current')
wwpLeosNotifCommunityDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosNotifCommunityDestAddr.setStatus('current')
wwpLeosNotifCommunityResolvedIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNotifCommunityResolvedIpAddr.setStatus('current')
wwpLeosNotifCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosNotifCommunityStatus.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-COMMUNITY-MIB", wwpLeosNotifCommunityStatus=wwpLeosNotifCommunityStatus, wwpLeosCommunityAddr=wwpLeosCommunityAddr, wwpLeosCommunityRights=wwpLeosCommunityRights, wwpLeosCommunityMIBGroups=wwpLeosCommunityMIBGroups, wwpLeosCommunityIndex=wwpLeosCommunityIndex, wwpLeosNotifIndex=wwpLeosNotifIndex, wwpLeosCommunityName=wwpLeosCommunityName, wwpLeosCommunityTable=wwpLeosCommunityTable, wwpLeosNotifCommunityTable=wwpLeosNotifCommunityTable, wwpLeosCommunityStatus=wwpLeosCommunityStatus, wwpLeosNotifCommunityResolvedIpAddr=wwpLeosNotifCommunityResolvedIpAddr, wwpLeosCommunity=wwpLeosCommunity, wwpLeosCommunityMIBConformance=wwpLeosCommunityMIBConformance, wwpLeosNotifCommunityEntry=wwpLeosNotifCommunityEntry, wwpLeosNotifCommunityDestAddr=wwpLeosNotifCommunityDestAddr, PYSNMP_MODULE_ID=wwpLeosCommunityMIB, wwpLeosCommunityMIBObjects=wwpLeosCommunityMIBObjects, wwpLeosCommunityMIBNotificationPrefix=wwpLeosCommunityMIBNotificationPrefix, wwpLeosCommunityEntry=wwpLeosCommunityEntry, wwpLeosNotifCommunityName=wwpLeosNotifCommunityName, wwpLeosCommunityResolvedIp=wwpLeosCommunityResolvedIp, wwpLeosCommunityMIB=wwpLeosCommunityMIB, wwpLeosCommunityMIBNotifications=wwpLeosCommunityMIBNotifications, wwpLeosCommunityMIBCompliances=wwpLeosCommunityMIBCompliances)
