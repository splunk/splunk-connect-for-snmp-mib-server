#
# PySNMP MIB module TC-GROUPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TC-GROUPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, Integer32, ModuleIdentity, iso, ObjectIdentity, Gauge32, NotificationType, Counter64, MibIdentifier, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "ModuleIdentity", "iso", "ObjectIdentity", "Gauge32", "NotificationType", "Counter64", "MibIdentifier", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "TimeTicks", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nbTcGroups = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10))
nbTcGroups.setRevisions(('2006-01-12 00:00', '2005-07-07 00:00',))
if mibBuilder.loadTexts: nbTcGroups.setLastUpdated('200601120000Z')
if mibBuilder.loadTexts: nbTcGroups.setOrganization('MRV Communications, Inc.')
nbase = MibIdentifier((1, 3, 6, 1, 4, 1, 629))
nbSwitchG1 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1))
nbSwitchG1Il = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50))
nbRouterConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12))
nbRtActionLists = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9))
nbTcGrpSupport = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 100))
nbTcGrpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 101))
class SupportValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("notSupported", 1), ("supported", 2))

class EntryValidator(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("valid", 1), ("invalid", 2))

nbTcGrpCntrTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 1), )
if mibBuilder.loadTexts: nbTcGrpCntrTable.setStatus('current')
nbTcGrpCntrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 1, 1), ).setIndexNames((0, "TC-GROUPS-MIB", "nbTcGroupCntrGrpName"), (0, "TC-GROUPS-MIB", "nbTcGroupCntrActionName"))
if mibBuilder.loadTexts: nbTcGrpCntrEntry.setStatus('current')
nbTcGroupCntrGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: nbTcGroupCntrGrpName.setStatus('current')
nbTcGroupCntrActionName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: nbTcGroupCntrActionName.setStatus('current')
nbTcGroupCntrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 1, 1, 3), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbTcGroupCntrStatus.setStatus('current')
nbTcGrpDscrTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 2), )
if mibBuilder.loadTexts: nbTcGrpDscrTable.setStatus('current')
nbTcGrpDscrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 2, 1), ).setIndexNames((0, "TC-GROUPS-MIB", "nbTcGroupDscrGrpName"))
if mibBuilder.loadTexts: nbTcGrpDscrEntry.setStatus('current')
nbTcGroupDscrGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: nbTcGroupDscrGrpName.setStatus('current')
nbTcGroupDscrText = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbTcGroupDscrText.setStatus('current')
nbTcGrpReslTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3), )
if mibBuilder.loadTexts: nbTcGrpReslTable.setStatus('current')
nbTcGrpReslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1), )
nbTcGrpCntrEntry.registerAugmentions(("TC-GROUPS-MIB", "nbTcGrpReslEntry"))
nbTcGrpReslEntry.setIndexNames(*nbTcGrpCntrEntry.getIndexNames())
if mibBuilder.loadTexts: nbTcGrpReslEntry.setStatus('current')
nbTcGroupReslStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslStatus.setStatus('current')
nbTcGroupReslCnfrmncCntrSet = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslCnfrmncCntrSet.setStatus('current')
nbTcGroupReslMeteringGreens = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslMeteringGreens.setStatus('current')
nbTcGroupReslMeteringYellows = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslMeteringYellows.setStatus('current')
nbTcGroupReslMeteringReds = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslMeteringReds.setStatus('current')
nbTcGroupReslAggrOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslAggrOctets.setStatus('current')
nbTcGroupReslAggrPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslAggrPackets.setStatus('current')
nbTcGroupReslConfGreenOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslConfGreenOctets.setStatus('current')
nbTcGroupReslConfGreenPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslConfGreenPackets.setStatus('current')
nbTcGroupReslConfYellowOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslConfYellowOctets.setStatus('current')
nbTcGroupReslConfYellowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslConfYellowPackets.setStatus('current')
nbTcGroupReslConfRedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslConfRedOctets.setStatus('current')
nbTcGroupReslConfRedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGroupReslConfRedPackets.setStatus('current')
nbTcActCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 9), )
if mibBuilder.loadTexts: nbTcActCtrlTable.setStatus('current')
nbTcActCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 9, 1), ).setIndexNames((0, "TC-GROUPS-MIB", "nbTcActName"))
if mibBuilder.loadTexts: nbTcActCtrlEntry.setStatus('current')
nbTcActName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 9, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: nbTcActName.setStatus('current')
nbTcActStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 9, 1, 64), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbTcActStatus.setStatus('current')
nbTcActReslTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 10), )
if mibBuilder.loadTexts: nbTcActReslTable.setStatus('current')
nbTcActReslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 10, 1), )
nbTcActCtrlEntry.registerAugmentions(("TC-GROUPS-MIB", "nbTcActReslEntry"))
nbTcActReslEntry.setIndexNames(*nbTcActCtrlEntry.getIndexNames())
if mibBuilder.loadTexts: nbTcActReslEntry.setStatus('current')
nbTcActReslStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 10, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcActReslStatus.setStatus('current')
nbTcGrpSupportGroups = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 100, 2), SupportValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGrpSupportGroups.setStatus('current')
nbTcGrpSupportLists = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 100, 9), SupportValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbTcGrpSupportLists.setStatus('current')
nbTcGrpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 101, 1))
nbTcGrpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 101, 2))
nbTcGrpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 101, 1, 1)).setObjects(("TC-GROUPS-MIB", "nbTcGrpSupportReflectors"), ("TC-GROUPS-MIB", "nbTcGrpGroup"), ("TC-GROUPS-MIB", "nbTcActGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nbTcGrpMIBCompliance = nbTcGrpMIBCompliance.setStatus('current')
nbTcGrpSupportReflectors = ObjectGroup((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 101, 2, 1)).setObjects(("TC-GROUPS-MIB", "nbTcGrpSupportGroups"), ("TC-GROUPS-MIB", "nbTcGrpSupportLists"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nbTcGrpSupportReflectors = nbTcGrpSupportReflectors.setStatus('current')
nbTcGrpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 101, 2, 2)).setObjects(("TC-GROUPS-MIB", "nbTcGroupCntrStatus"), ("TC-GROUPS-MIB", "nbTcGroupDscrText"), ("TC-GROUPS-MIB", "nbTcGroupReslStatus"), ("TC-GROUPS-MIB", "nbTcGroupReslCnfrmncCntrSet"), ("TC-GROUPS-MIB", "nbTcGroupReslMeteringGreens"), ("TC-GROUPS-MIB", "nbTcGroupReslMeteringYellows"), ("TC-GROUPS-MIB", "nbTcGroupReslMeteringReds"), ("TC-GROUPS-MIB", "nbTcGroupReslAggrOctets"), ("TC-GROUPS-MIB", "nbTcGroupReslAggrPackets"), ("TC-GROUPS-MIB", "nbTcGroupReslConfGreenOctets"), ("TC-GROUPS-MIB", "nbTcGroupReslConfGreenPackets"), ("TC-GROUPS-MIB", "nbTcGroupReslConfYellowOctets"), ("TC-GROUPS-MIB", "nbTcGroupReslConfYellowPackets"), ("TC-GROUPS-MIB", "nbTcGroupReslConfRedOctets"), ("TC-GROUPS-MIB", "nbTcGroupReslConfRedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nbTcGrpGroup = nbTcGrpGroup.setStatus('current')
nbTcActGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 629, 1, 50, 12, 9, 10, 101, 2, 3)).setObjects(("TC-GROUPS-MIB", "nbTcActStatus"), ("TC-GROUPS-MIB", "nbTcActReslStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nbTcActGroup = nbTcActGroup.setStatus('current')
mibBuilder.exportSymbols("TC-GROUPS-MIB", nbTcGroupDscrGrpName=nbTcGroupDscrGrpName, nbTcGrpSupportLists=nbTcGrpSupportLists, nbTcGroupCntrGrpName=nbTcGroupCntrGrpName, nbTcGrpCntrTable=nbTcGrpCntrTable, nbTcGroupDscrText=nbTcGroupDscrText, nbTcGroupReslConfYellowOctets=nbTcGroupReslConfYellowOctets, nbTcGrpReslTable=nbTcGrpReslTable, nbRtActionLists=nbRtActionLists, nbTcGrpSupportReflectors=nbTcGrpSupportReflectors, SupportValue=SupportValue, nbTcActReslEntry=nbTcActReslEntry, PYSNMP_MODULE_ID=nbTcGroups, nbTcGrpMIBGroups=nbTcGrpMIBGroups, nbTcGroupReslMeteringReds=nbTcGroupReslMeteringReds, nbTcGroupReslConfGreenOctets=nbTcGroupReslConfGreenOctets, nbRouterConfig=nbRouterConfig, nbTcGroupReslMeteringGreens=nbTcGroupReslMeteringGreens, nbTcGrpDscrTable=nbTcGrpDscrTable, nbTcGroups=nbTcGroups, nbTcGrpSupport=nbTcGrpSupport, nbTcGroupReslMeteringYellows=nbTcGroupReslMeteringYellows, nbTcActReslStatus=nbTcActReslStatus, nbTcGroupReslConfGreenPackets=nbTcGroupReslConfGreenPackets, nbTcGrpMIBCompliance=nbTcGrpMIBCompliance, nbTcGrpConformance=nbTcGrpConformance, nbTcGrpGroup=nbTcGrpGroup, nbTcActStatus=nbTcActStatus, nbTcGrpSupportGroups=nbTcGrpSupportGroups, nbTcGrpReslEntry=nbTcGrpReslEntry, nbTcGroupCntrStatus=nbTcGroupCntrStatus, nbTcGrpDscrEntry=nbTcGrpDscrEntry, nbTcGroupReslConfRedPackets=nbTcGroupReslConfRedPackets, EntryValidator=EntryValidator, nbTcGroupReslConfYellowPackets=nbTcGroupReslConfYellowPackets, nbTcActCtrlTable=nbTcActCtrlTable, nbSwitchG1Il=nbSwitchG1Il, nbTcGroupReslStatus=nbTcGroupReslStatus, nbTcActName=nbTcActName, nbTcActCtrlEntry=nbTcActCtrlEntry, nbTcGrpMIBCompliances=nbTcGrpMIBCompliances, nbase=nbase, nbTcGroupReslAggrPackets=nbTcGroupReslAggrPackets, nbTcGroupCntrActionName=nbTcGroupCntrActionName, nbTcGroupReslAggrOctets=nbTcGroupReslAggrOctets, nbTcGroupReslConfRedOctets=nbTcGroupReslConfRedOctets, nbTcGroupReslCnfrmncCntrSet=nbTcGroupReslCnfrmncCntrSet, nbTcGrpCntrEntry=nbTcGrpCntrEntry, nbTcActReslTable=nbTcActReslTable, nbTcActGroup=nbTcActGroup, nbSwitchG1=nbSwitchG1)
