#
# PySNMP MIB module Wellfleet-DS1E1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-DS1E1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, Counter32, iso, ModuleIdentity, IpAddress, Bits, Integer32, Gauge32, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "Counter32", "iso", "ModuleIdentity", "IpAddress", "Bits", "Integer32", "Gauge32", "Counter64", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfDs1E1Group, wfMcT1Group = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfDs1E1Group", "wfMcT1Group")
wfDs1E1ModuleTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1), )
if mibBuilder.loadTexts: wfDs1E1ModuleTable.setStatus('mandatory')
wfDs1E1ModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1ModuleSlot"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1ModuleModule"))
if mibBuilder.loadTexts: wfDs1E1ModuleEntry.setStatus('mandatory')
wfDs1E1ModuleDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ModuleDelete.setStatus('mandatory')
wfDs1E1ModuleSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleSlot.setStatus('mandatory')
wfDs1E1ModuleModule = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleModule.setStatus('mandatory')
wfDs1E1ModulePrimaryClock = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("external", 1), ("loop1", 2), ("loop2", 3), ("internal", 4), ("loop3", 5), ("loop4", 6))).clone('loop1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ModulePrimaryClock.setStatus('mandatory')
wfDs1E1ModuleSecondaryClock = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("external", 1), ("loop1", 2), ("loop2", 3), ("internal", 4), ("loop3", 5), ("loop4", 6))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ModuleSecondaryClock.setStatus('mandatory')
wfDs1E1ModuleCurrentClock = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("external", 1), ("loop1", 2), ("loop2", 3), ("internal", 4), ("loop3", 5), ("loop4", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleCurrentClock.setStatus('mandatory')
wfDs1E1ModuleExtClockOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("notpresent", 2))).clone('present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleExtClockOperational.setStatus('mandatory')
wfDs1E1ModuleLoop1ClockOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("notpresent", 2))).clone('present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleLoop1ClockOperational.setStatus('mandatory')
wfDs1E1ModuleLoop2ClockOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("notpresent", 2))).clone('present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleLoop2ClockOperational.setStatus('mandatory')
wfDs1E1ModuleLoop3ClockOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("notpresent", 2))).clone('present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleLoop3ClockOperational.setStatus('mandatory')
wfDs1E1ModuleLoop4ClockOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("notpresent", 2))).clone('present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleLoop4ClockOperational.setStatus('mandatory')
wfDs1E1ModuleCfgTxBufferUseCredits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ModuleCfgTxBufferUseCredits.setStatus('mandatory')
wfDs1E1ModuleCfgRxBufferUseCredits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ModuleCfgRxBufferUseCredits.setStatus('mandatory')
wfDs1E1ModuleTxBufferUseCredits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleTxBufferUseCredits.setStatus('mandatory')
wfDs1E1ModuleRxBufferUseCredits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ModuleRxBufferUseCredits.setStatus('mandatory')
wfDs1E1PortMapTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 2), )
if mibBuilder.loadTexts: wfDs1E1PortMapTable.setStatus('mandatory')
wfDs1E1PortMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 2, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1PortMapSlot"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1PortMapConnector"))
if mibBuilder.loadTexts: wfDs1E1PortMapEntry.setStatus('mandatory')
wfDs1E1PortMapDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortMapDelete.setStatus('mandatory')
wfDs1E1PortMapSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1PortMapSlot.setStatus('mandatory')
wfDs1E1PortMapConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1PortMapConnector.setStatus('mandatory')
wfDs1E1PortMapLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortMapLineNumber.setStatus('mandatory')
wfDs1E1PortMapDslId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1PortMapDslId.setStatus('mandatory')
wfDs1E1PortTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3), )
if mibBuilder.loadTexts: wfDs1E1PortTable.setStatus('mandatory')
wfDs1E1PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1PortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1PortEntry.setStatus('mandatory')
wfDs1E1PortDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortDelete.setStatus('mandatory')
wfDs1E1PortDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortDisable.setStatus('mandatory')
wfDs1E1PortState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 10, 11, 15, 20))).clone(namedValues=NamedValues(("up", 1), ("yelalarm", 2), ("aisalarm", 3), ("redalarm", 4), ("loopback", 10), ("bert", 11), ("init", 15), ("notpresent", 20))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1PortState.setStatus('mandatory')
wfDs1E1PortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1PortLineNumber.setStatus('mandatory')
wfDs1E1PortMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 4608)).clone(1600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortMtu.setStatus('mandatory')
wfDs1E1PortSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ds1-minus-15", 1), ("ds1-minus-7point5", 2), ("zero-point0", 3), ("dsx1-plus-point5", 4), ("dsx1-plus-point8", 5), ("dsx1-plus-1point1", 6), ("dsx1-plus-1point5", 7))).clone('zero-point0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortSignalLevel.setStatus('mandatory')
wfDs1E1PortSetupAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortSetupAlarmThreshold.setStatus('mandatory')
wfDs1E1PortClearAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortClearAlarmThreshold.setStatus('mandatory')
wfDs1E1PortFdlTargetHdlcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("az", 1), ("by", 2))).clone('by')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortFdlTargetHdlcAddress.setStatus('mandatory')
wfDs1E1PortAcceptLoopbackRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortAcceptLoopbackRequest.setStatus('mandatory')
wfDs1E1PortLoopbackState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noloop", 1), ("mgrreqpayloadloop", 2), ("mgrreqlineloop", 3), ("netreqpayloadloop", 4), ("netreqlineloop", 5), ("otherloop", 6))).clone('noloop')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1PortLoopbackState.setStatus('mandatory')
wfDs1E1PortBertMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortBertMode.setStatus('mandatory')
wfDs1E1PortBertTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("zeros", 1), ("ones", 2), ("qrss", 3), ("two15", 4), ("two15-inv", 5), ("two20", 6), ("two23", 7), ("two23-inv", 8))).clone('ones')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortBertTestPattern.setStatus('mandatory')
wfDs1E1PortBertSendAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ais-alarm", 1), ("yellow-alarm", 2), ("disabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortBertSendAlarm.setStatus('mandatory')
wfDs1E1PortInternationalBit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortInternationalBit.setStatus('mandatory')
wfDs1E1PortLineApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nonpri", 1), ("pri", 2), ("mixed", 3), ("frswpri", 4))).clone('nonpri')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortLineApplication.setStatus('mandatory')
wfDs1E1PortLoggingEnableMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortLoggingEnableMask.setStatus('mandatory')
wfDs1E1PortSendPrmCrAddressBit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("prm-ci", 1), ("prm-carrier", 2))).clone('prm-ci')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortSendPrmCrAddressBit.setStatus('mandatory')
wfDs1E1PortAcceptPrmCrAddressBit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("prm-ci", 1), ("prm-carrier", 2))).clone('prm-ci')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortAcceptPrmCrAddressBit.setStatus('mandatory')
wfDs1E1PortLineImpedanceOption = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rj45-120-ohms", 1), ("bnc-75-ohms", 2))).clone('rj45-120-ohms')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortLineImpedanceOption.setStatus('mandatory')
wfDs1E1PortFdlLoopInterframeFill = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mark", 1), ("loop-retention", 2))).clone('mark')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortFdlLoopInterframeFill.setStatus('mandatory')
wfDs1E1PortRelayCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loop", 1), ("no-loop", 2))).clone('loop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortRelayCtrl.setStatus('mandatory')
wfDs1E1PortRelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loop", 1), ("noLoop", 2))).clone('loop')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1PortRelayStatus.setStatus('mandatory')
wfDs1E1PortPrimaryClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("loop", 3))).clone('loop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortPrimaryClockSource.setStatus('mandatory')
wfDs1E1PortSecondaryClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("loop", 3))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortSecondaryClockSource.setStatus('mandatory')
wfDs1E1PortCurrentClock = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("loop", 3))).clone('loop')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1PortCurrentClock.setStatus('mandatory')
wfDs1E1PortExtClockOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("notpresent", 2))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1PortExtClockOperational.setStatus('mandatory')
wfDs1E1PortTransmitWaveform = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("long-haul-0point0", 1), ("long-haul-7point5", 2), ("long-haul-15point0", 3), ("long-haul-22point5", 4), ("short-haul-0to110", 5), ("short-haul-110to220", 6), ("short-haul-220to330", 7), ("short-haul-330to440", 8), ("short-haul-440to550", 9), ("short-haul-550to660", 10))).clone('short-haul-0to110')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1PortTransmitWaveform.setStatus('mandatory')
wfDs1E1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4), )
if mibBuilder.loadTexts: wfDs1E1ConfigTable.setStatus('mandatory')
wfDs1E1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1ConfigPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1ConfigEntry.setStatus('mandatory')
wfDs1E1ConfigDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ConfigDelete.setStatus('mandatory')
wfDs1E1ConfigPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ConfigPortLineNumber.setStatus('mandatory')
wfDs1E1ConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ConfigIfIndex.setStatus('mandatory')
wfDs1E1ConfigTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ConfigTimeElapsed.setStatus('mandatory')
wfDs1E1ConfigValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ConfigValidIntervals.setStatus('mandatory')
wfDs1E1ConfigLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unframedt1", 1), ("esf", 2), ("sf", 3), ("e1", 4), ("e1crc", 5), ("e1mf", 6), ("e1crcmf", 7), ("unframede1", 8))).clone('esf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ConfigLineType.setStatus('mandatory')
wfDs1E1ConfigLineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("jbzs", 1), ("b8zs", 2), ("hdb3", 3), ("zbtsi", 4), ("ami", 5))).clone('b8zs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ConfigLineCoding.setStatus('mandatory')
wfDs1E1ConfigSendCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("sendnocode", 1), ("sendlinecode", 2), ("sendpayloadcode", 3), ("sendresetcode", 4), ("sendqrs", 5), ("send511pattern", 6), ("send3in24pattern", 7), ("sendothertestpattern", 8))).clone('sendnocode')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ConfigSendCode.setStatus('mandatory')
wfDs1E1ConfigCircuitIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ConfigCircuitIdentifier.setStatus('mandatory')
wfDs1E1ConfigLoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noloop", 1), ("payloadloop", 2), ("lineloop", 3))).clone('noloop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ConfigLoopbackConfig.setStatus('mandatory')
wfDs1E1ConfigLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("noalarm", 1), ("rcvfarendlof", 2), ("xmtfarendlof", 4), ("rcvais", 8), ("xmtais", 16), ("lossofframe", 32), ("lossofsignal", 64), ("loopbackstate", 128), ("t16ais", 256), ("rcvfarendlomf", 512), ("xmtfarendlomf", 1024), ("rcvtestcode", 2048), ("otherfailure", 4096))).clone('noalarm')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ConfigLineStatus.setStatus('mandatory')
wfDs1E1ConfigSignalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("robbedbit", 2), ("bitoriented", 3), ("messageoriented", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ConfigSignalMode.setStatus('mandatory')
wfDs1E1ConfigTransmitClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("looptiming", 1), ("localtiming", 2), ("throughtiming", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ConfigTransmitClockSource.setStatus('mandatory')
wfDs1E1ConfigFdl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 8))).clone(namedValues=NamedValues(("ansi403", 2), ("att54016", 4), ("none", 8))).clone('ansi403')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ConfigFdl.setStatus('mandatory')
wfDs1E1ActionTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5), )
if mibBuilder.loadTexts: wfDs1E1ActionTable.setStatus('mandatory')
wfDs1E1ActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1ActionPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1ActionEntry.setStatus('mandatory')
wfDs1E1ActionPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ActionPortLineNumber.setStatus('mandatory')
wfDs1E1ActionBertReset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 21))).clone(namedValues=NamedValues(("reset", 1), ("noaction", 21))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionBertReset.setStatus('mandatory')
wfDs1E1ActionBertErrorInsert = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 21))).clone(namedValues=NamedValues(("oneerror", 1), ("errorperthousand", 2), ("errorpermillion", 3), ("disable", 4), ("noaction", 21))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionBertErrorInsert.setStatus('mandatory')
wfDs1E1ActionSendLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 21))).clone(namedValues=NamedValues(("loopup", 1), ("loopdown", 2), ("noaction", 21))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionSendLoopCode.setStatus('mandatory')
wfDs1E1ActionSendFdlLoopbackCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 21))).clone(namedValues=NamedValues(("lineloopci", 1), ("lineloopia", 2), ("lineloopib", 3), ("deactivatell", 4), ("payloadloop", 5), ("deactivatepl", 6), ("deactivateall", 7), ("noaction", 21))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionSendFdlLoopbackCode.setStatus('mandatory')
wfDs1E1ActionSendLoopUpFractionalCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(33))).clone(namedValues=NamedValues(("noaction", 33))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionSendLoopUpFractionalCode.setStatus('mandatory')
wfDs1E1ActionSendLoopDownFractionalCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(33))).clone(namedValues=NamedValues(("noaction", 33))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionSendLoopDownFractionalCode.setStatus('mandatory')
wfDs1E1ActionClearFractionalLoopState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(33))).clone(namedValues=NamedValues(("noaction", 33))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionClearFractionalLoopState.setStatus('mandatory')
wfDs1E1ActionClearFdlStats = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clrStats", 1), ("noaction", 2))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionClearFdlStats.setStatus('mandatory')
wfDs1E1ActionClearCurrentStats = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clrStats", 1), ("noaction", 2))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionClearCurrentStats.setStatus('mandatory')
wfDs1E1ActionClearFarEndCurrentStats = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clrStats", 1), ("noaction", 2))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionClearFarEndCurrentStats.setStatus('mandatory')
wfDs1E1ActionClearDayCurrentStats = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clrStats", 1), ("noaction", 2))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionClearDayCurrentStats.setStatus('mandatory')
wfDs1E1ActionClearFarEndDayCurrentStats = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clrStats", 1), ("noaction", 2))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionClearFarEndDayCurrentStats.setStatus('mandatory')
wfDs1E1ActionClearIntervalStats = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clrStats", 1), ("noaction", 2))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionClearIntervalStats.setStatus('mandatory')
wfDs1E1ActionClearFarEndIntervalStats = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clrStats", 1), ("noaction", 2))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ActionClearFarEndIntervalStats.setStatus('mandatory')
wfLogicalLineTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6), )
if mibBuilder.loadTexts: wfLogicalLineTable.setStatus('mandatory')
wfLogicalLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfLogicalLinePortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfLogicalLineIndex"))
if mibBuilder.loadTexts: wfLogicalLineEntry.setStatus('mandatory')
wfLogicalLineDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineDelete.setStatus('mandatory')
wfLogicalLineDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineDisable.setStatus('mandatory')
wfLogicalLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("lmiwait", 4), ("loopback", 5), ("linedieing", 6), ("linedead", 7), ("remoteloop", 8), ("remotedeaf", 9), ("bert", 10), ("hwfrac", 11), ("priWait", 12), ("lineloopbofltest", 19), ("notpresent", 20))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineState.setStatus('mandatory')
wfLogicalLinePortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLinePortLineNumber.setStatus('mandatory')
wfLogicalLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineIndex.setStatus('mandatory')
wfLogicalLineCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineCct.setStatus('mandatory')
wfLogicalLineLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineLineNumber.setStatus('mandatory')
wfLogicalLineBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineBofl.setStatus('mandatory')
wfLogicalLineBoflTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineBoflTmo.setStatus('mandatory')
wfLogicalLineFractionalLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineFractionalLoopback.setStatus('mandatory')
wfLogicalLineTimeSlotAssignment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineTimeSlotAssignment.setStatus('mandatory')
wfLogicalLineMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineMtu.setStatus('mandatory')
wfLogicalLineMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineMadr.setStatus('mandatory')
wfLogicalLineWanProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("standard", 1), ("passthru", 2), ("ppp", 3), ("smds", 4), ("framerelay", 5), ("x25", 6), ("switch", 7), ("sw", 8), ("atm", 9), ("lapb", 10), ("sdlc", 11))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineWanProtocol.setStatus('mandatory')
wfLogicalLineHdlcService = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transparent", 1), ("llc1", 2))).clone('llc1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineHdlcService.setStatus('mandatory')
wfLogicalLineLocalHdlcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 7))).clone(namedValues=NamedValues(("dce", 1), ("dte", 3), ("seven", 7))).clone('seven')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineLocalHdlcAddress.setStatus('mandatory')
wfLogicalLineRemoteHdlcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 7))).clone(namedValues=NamedValues(("dce", 1), ("dte", 3), ("seven", 7))).clone('seven')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineRemoteHdlcAddress.setStatus('mandatory')
wfLogicalLineRateAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("adaption-64k", 1), ("adaption-56kmsb", 2), ("adaption-56klsb", 3), ("adaption-9dot6k", 4), ("adaption-19dot2k", 5))).clone('adaption-56klsb')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineRateAdaption.setStatus('mandatory')
wfLogicalLineIFTF = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flags", 1), ("idles", 2))).clone('flags')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineIFTF.setStatus('mandatory')
wfLogicalLineCRCSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc-32", 1), ("crc-16", 2))).clone('crc-16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineCRCSize.setStatus('mandatory')
wfLogicalLineRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxOctets.setStatus('mandatory')
wfLogicalLineRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxFrames.setStatus('mandatory')
wfLogicalLineTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineTxOctets.setStatus('mandatory')
wfLogicalLineTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineTxFrames.setStatus('mandatory')
wfLogicalLineRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxErrors.setStatus('mandatory')
wfLogicalLineTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineTxErrors.setStatus('mandatory')
wfLogicalLineLackRxResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineLackRxResources.setStatus('mandatory')
wfLogicalLineLackTxResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineLackTxResources.setStatus('mandatory')
wfLogicalLineTxUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineTxUnderflows.setStatus('mandatory')
wfLogicalLineRxOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxOverflows.setStatus('mandatory')
wfLogicalLineRxNullFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxNullFrames.setStatus('mandatory')
wfLogicalLineRxShortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxShortFrames.setStatus('mandatory')
wfLogicalLineRxLossSyncs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxLossSyncs.setStatus('mandatory')
wfLogicalLineRxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxCRCErrors.setStatus('mandatory')
wfLogicalLineRxNonOctetBits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxNonOctetBits.setStatus('mandatory')
wfLogicalLineRxLongFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxLongFrames.setStatus('mandatory')
wfLogicalLineRxAbortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxAbortFrames.setStatus('mandatory')
wfLogicalLineRxDescOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxDescOverflows.setStatus('mandatory')
wfLogicalLineRxReplenMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxReplenMisses.setStatus('mandatory')
wfLogicalLineRxIFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxIFCs.setStatus('mandatory')
wfLogicalLineRxDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxDropPackets.setStatus('mandatory')
wfLogicalLineCfgTxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineCfgTxQueueLength.setStatus('mandatory')
wfLogicalLineCfgRxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineCfgRxQueueLength.setStatus('mandatory')
wfLogicalLineTxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineTxQueueLength.setStatus('mandatory')
wfLogicalLineRxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxQueueLength.setStatus('mandatory')
wfLogicalLineTxQueueEmpties = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineTxQueueEmpties.setStatus('mandatory')
wfLogicalLineRxIntProcs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxIntProcs.setStatus('mandatory')
wfLogicalLineTxIntProcs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineTxIntProcs.setStatus('mandatory')
wfLogicalLineRxPktCorruptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxPktCorruptions.setStatus('mandatory')
wfLogicalLineTurboBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineTurboBofl.setStatus('mandatory')
wfLogicalLineBoflNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineBoflNum.setStatus('mandatory')
wfLogicalLineBoflLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(22, 4450)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineBoflLen.setStatus('mandatory')
wfLogicalLineOutQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineOutQLen.setStatus('mandatory')
wfLogicalLineLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 54), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineLastChange.setStatus('mandatory')
wfLogicalLineCfgMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 4608)).clone(1600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineCfgMtu.setStatus('mandatory')
wfLogicalLineRemoteLpbkDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineRemoteLpbkDetection.setStatus('mandatory')
wfLogicalLineLastState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("lmiwait", 4), ("loopback", 5), ("linedieing", 6), ("linedead", 7), ("remoteloop", 8), ("remotedeaf", 9), ("bert", 10), ("hwfrac", 11), ("priWait", 12), ("notpresent", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineLastState.setStatus('mandatory')
wfLogicalLineRxIdles = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineRxIdles.setStatus('mandatory')
wfLogicalLineRole = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("syncconnect", 1), ("dchannel", 2), ("bchannel", 3))).clone('syncconnect')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineRole.setStatus('mandatory')
wfLogicalLineActiveCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineActiveCct.setStatus('mandatory')
wfLogicalLineActualRateAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("adaption64k", 1), ("adaption56kmsb", 2), ("adaption56klsb", 3), ("adaption9dot6k", 4), ("adaption19dot2k", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineActualRateAdaption.setStatus('mandatory')
wfLogicalLineBertMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineBertMode.setStatus('mandatory')
wfLogicalLineBertTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("zeros", 1), ("ones", 2), ("qrss", 3), ("two15", 4), ("two15-inv", 5), ("two20", 6), ("two23", 7), ("two23-inv", 8))).clone('ones')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineBertTestPattern.setStatus('mandatory')
wfLogicalLineAcceptFracLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineAcceptFracLoopCode.setStatus('mandatory')
wfLogicalLineDS0AStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLogicalLineDS0AStatus.setStatus('mandatory')
wfLogicalLineNRZIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineNRZIEnable.setStatus('mandatory')
wfLogicalLineNRZIType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 6, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("space", 1), ("mark", 2))).clone('mark')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLogicalLineNRZIType.setStatus('mandatory')
wfDs1E1FracTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 7), )
if mibBuilder.loadTexts: wfDs1E1FracTable.setStatus('mandatory')
wfDs1E1FracEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 7, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1FracPortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1FracNumber"))
if mibBuilder.loadTexts: wfDs1E1FracEntry.setStatus('mandatory')
wfDs1E1FracDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FracDelete.setStatus('mandatory')
wfDs1E1FracPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FracPortLineNumber.setStatus('mandatory')
wfDs1E1FracNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FracNumber.setStatus('mandatory')
wfDs1E1FracLogicalLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 7, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FracLogicalLineIndex.setStatus('mandatory')
wfDs1E1FracActualLogicalLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FracActualLogicalLineIndex.setStatus('mandatory')
wfDs1E1CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10), )
if mibBuilder.loadTexts: wfDs1E1CurrentTable.setStatus('mandatory')
wfDs1E1CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1CurrentPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1CurrentEntry.setStatus('mandatory')
wfDs1E1CurrentPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentPortLineNumber.setStatus('mandatory')
wfDs1E1CurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentESs.setStatus('mandatory')
wfDs1E1CurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentSESs.setStatus('mandatory')
wfDs1E1CurrentSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentSEFSs.setStatus('mandatory')
wfDs1E1CurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentUASs.setStatus('mandatory')
wfDs1E1CurrentCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentCSSs.setStatus('mandatory')
wfDs1E1CurrentPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentPCVs.setStatus('mandatory')
wfDs1E1CurrentLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentLESs.setStatus('mandatory')
wfDs1E1CurrentBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentBESs.setStatus('mandatory')
wfDs1E1CurrentDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentDMs.setStatus('mandatory')
wfDs1E1CurrentLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentLCVs.setStatus('mandatory')
wfDs1E1CurrentSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentSASs.setStatus('mandatory')
wfDs1E1CurrentAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentAISSs.setStatus('mandatory')
wfDs1E1CurrentFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFCs.setStatus('mandatory')
wfDs1E1CurrentTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentTimeElapsed.setStatus('mandatory')
wfDs1E1CurrentValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentValidIntervals.setStatus('mandatory')
wfDs1E1CurrentValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentValidFlag.setStatus('mandatory')
wfDs1E1IntervalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11), )
if mibBuilder.loadTexts: wfDs1E1IntervalTable.setStatus('mandatory')
wfDs1E1IntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1IntervalPortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1IntervalNumber"))
if mibBuilder.loadTexts: wfDs1E1IntervalEntry.setStatus('mandatory')
wfDs1E1IntervalPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalPortLineNumber.setStatus('mandatory')
wfDs1E1IntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalNumber.setStatus('mandatory')
wfDs1E1IntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalESs.setStatus('mandatory')
wfDs1E1IntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalSESs.setStatus('mandatory')
wfDs1E1IntervalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalSEFSs.setStatus('mandatory')
wfDs1E1IntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalUASs.setStatus('mandatory')
wfDs1E1IntervalCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalCSSs.setStatus('mandatory')
wfDs1E1IntervalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalPCVs.setStatus('mandatory')
wfDs1E1IntervalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalLESs.setStatus('mandatory')
wfDs1E1IntervalBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalBESs.setStatus('mandatory')
wfDs1E1IntervalDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalDMs.setStatus('mandatory')
wfDs1E1IntervalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalLCVs.setStatus('mandatory')
wfDs1E1IntervalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalSASs.setStatus('mandatory')
wfDs1E1IntervalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalAISSs.setStatus('mandatory')
wfDs1E1IntervalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFCs.setStatus('mandatory')
wfDs1E1IntervalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 11, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalValidFlag.setStatus('mandatory')
wfDs1E1TotalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12), )
if mibBuilder.loadTexts: wfDs1E1TotalTable.setStatus('mandatory')
wfDs1E1TotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1TotalPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1TotalEntry.setStatus('mandatory')
wfDs1E1TotalPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalPortLineNumber.setStatus('mandatory')
wfDs1E1TotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalESs.setStatus('mandatory')
wfDs1E1TotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalSESs.setStatus('mandatory')
wfDs1E1TotalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalSEFSs.setStatus('mandatory')
wfDs1E1TotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalUASs.setStatus('mandatory')
wfDs1E1TotalCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalCSSs.setStatus('mandatory')
wfDs1E1TotalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalPCVs.setStatus('mandatory')
wfDs1E1TotalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalLESs.setStatus('mandatory')
wfDs1E1TotalBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalBESs.setStatus('mandatory')
wfDs1E1TotalDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalDMs.setStatus('mandatory')
wfDs1E1TotalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalLCVs.setStatus('mandatory')
wfDs1E1TotalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalSASs.setStatus('mandatory')
wfDs1E1TotalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalAISSs.setStatus('mandatory')
wfDs1E1TotalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFCs.setStatus('mandatory')
wfDs1E1TotalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 12, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalValidFlag.setStatus('mandatory')
wfDs1E1AnsiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13), )
if mibBuilder.loadTexts: wfDs1E1AnsiTable.setStatus('mandatory')
wfDs1E1AnsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1AnsiPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1AnsiEntry.setStatus('mandatory')
wfDs1E1AnsiPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiPortLineNumber.setStatus('mandatory')
wfDs1E1AnsiCRCCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiCRCCounts.setStatus('mandatory')
wfDs1E1AnsiBPVCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiBPVCounts.setStatus('mandatory')
wfDs1E1AnsiOOFCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiOOFCounts.setStatus('mandatory')
wfDs1E1AnsiFECounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiFECounts.setStatus('mandatory')
wfDs1E1AnsiESCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiESCounts.setStatus('mandatory')
wfDs1E1AnsiSESCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiSESCounts.setStatus('mandatory')
wfDs1E1AnsiUASCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiUASCounts.setStatus('mandatory')
wfDs1E1AnsiPRMR0Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiPRMR0Counts.setStatus('mandatory')
wfDs1E1AnsiPRMR1Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiPRMR1Counts.setStatus('mandatory')
wfDs1E1AnsiPRMR2Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiPRMR2Counts.setStatus('mandatory')
wfDs1E1AnsiPRMR3Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiPRMR3Counts.setStatus('mandatory')
wfDs1E1AnsiPRMESCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiPRMESCounts.setStatus('mandatory')
wfDs1E1AnsiPRMSESCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiPRMSESCounts.setStatus('mandatory')
wfDs1E1AnsiPRMECounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 8, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1AnsiPRMECounts.setStatus('mandatory')
wfDs1E1BertStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 14), )
if mibBuilder.loadTexts: wfDs1E1BertStatsTable.setStatus('mandatory')
wfDs1E1BertStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 14, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1BertStatsPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1BertStatsEntry.setStatus('mandatory')
wfDs1E1BertStatsPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1BertStatsPortLineNumber.setStatus('mandatory')
wfDs1E1BertStatsBitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1BertStatsBitErrors.setStatus('mandatory')
wfDs1E1BertStatsBits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1BertStatsBits.setStatus('mandatory')
wfDs1E1CurrentFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15), )
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsTable.setStatus('mandatory')
wfDs1E1CurrentFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1CurrentFramerStatsPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsEntry.setStatus('mandatory')
wfDs1E1CurrentFramerStatsPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsPortLineNumber.setStatus('mandatory')
wfDs1E1CurrentFramerStatsMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsMediaType.setStatus('mandatory')
wfDs1E1CurrentFramerStatsBpvCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsBpvCounts.setStatus('mandatory')
wfDs1E1CurrentFramerStatsCrc4Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsCrc4Counts.setStatus('mandatory')
wfDs1E1CurrentFramerStatsFebeCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsFebeCounts.setStatus('mandatory')
wfDs1E1CurrentFramerStatsOofCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsOofCounts.setStatus('mandatory')
wfDs1E1CurrentFramerStatsFeCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsFeCounts.setStatus('mandatory')
wfDs1E1CurrentFramerStatsLossFrameFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsLossFrameFailures.setStatus('mandatory')
wfDs1E1CurrentFramerStatsLossSignalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsLossSignalFailures.setStatus('mandatory')
wfDs1E1CurrentFramerStatsAlarmIndicationFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsAlarmIndicationFailures.setStatus('mandatory')
wfDs1E1CurrentFramerStatsRemoteAlarmFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 15, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1CurrentFramerStatsRemoteAlarmFailures.setStatus('mandatory')
wfDs1E1TotalFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16), )
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsTable.setStatus('mandatory')
wfDs1E1TotalFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1TotalFramerStatsPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsEntry.setStatus('mandatory')
wfDs1E1TotalFramerStatsPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsPortLineNumber.setStatus('mandatory')
wfDs1E1TotalFramerStatsMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsMediaType.setStatus('mandatory')
wfDs1E1TotalFramerStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsValidIntervals.setStatus('mandatory')
wfDs1E1TotalFramerStatsBpvCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsBpvCounts.setStatus('mandatory')
wfDs1E1TotalFramerStatsCrc4Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsCrc4Counts.setStatus('mandatory')
wfDs1E1TotalFramerStatsFebeCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsFebeCounts.setStatus('mandatory')
wfDs1E1TotalFramerStatsOofCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsOofCounts.setStatus('mandatory')
wfDs1E1TotalFramerStatsFeCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsFeCounts.setStatus('mandatory')
wfDs1E1TotalFramerStatsLossFrameFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsLossFrameFailures.setStatus('mandatory')
wfDs1E1TotalFramerStatsLossSignalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsLossSignalFailures.setStatus('mandatory')
wfDs1E1TotalFramerStatsAlarmIndicationFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsAlarmIndicationFailures.setStatus('mandatory')
wfDs1E1TotalFramerStatsRemoteAlarmFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 16, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1TotalFramerStatsRemoteAlarmFailures.setStatus('mandatory')
wfDs1E1IntervalFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17), )
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsTable.setStatus('mandatory')
wfDs1E1IntervalFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1IntervalFramerStatsPortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1IntervalFramerStatsIntervalNumber"))
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsEntry.setStatus('mandatory')
wfDs1E1IntervalFramerStatsPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsPortLineNumber.setStatus('mandatory')
wfDs1E1IntervalFramerStatsIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsIntervalNumber.setStatus('mandatory')
wfDs1E1IntervalFramerStatsMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsMediaType.setStatus('mandatory')
wfDs1E1IntervalFramerStatsBpvCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsBpvCounts.setStatus('mandatory')
wfDs1E1IntervalFramerStatsCrc4Counts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsCrc4Counts.setStatus('mandatory')
wfDs1E1IntervalFramerStatsFebeCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsFebeCounts.setStatus('mandatory')
wfDs1E1IntervalFramerStatsOofCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsOofCounts.setStatus('mandatory')
wfDs1E1IntervalFramerStatsFeCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsFeCounts.setStatus('mandatory')
wfDs1E1IntervalFramerStatsLossFrameFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsLossFrameFailures.setStatus('mandatory')
wfDs1E1IntervalFramerStatsLossSignalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsLossSignalFailures.setStatus('mandatory')
wfDs1E1IntervalFramerStatsAlarmIndicationFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsAlarmIndicationFailures.setStatus('mandatory')
wfDs1E1IntervalFramerStatsRemoteAlarmFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 17, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1IntervalFramerStatsRemoteAlarmFailures.setStatus('mandatory')
wfDs1E1ClockTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 18), )
if mibBuilder.loadTexts: wfDs1E1ClockTable.setStatus('mandatory')
wfDs1E1ClockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 18, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1ClockPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1ClockEntry.setStatus('mandatory')
wfDs1E1ClockDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ClockDelete.setStatus('mandatory')
wfDs1E1ClockPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 18, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ClockPortLineNumber.setStatus('mandatory')
wfDs1E1ClockPrimaryClock = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("loop1", 3), ("loop2", 4), ("loop3", 5), ("loop4", 6))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ClockPrimaryClock.setStatus('mandatory')
wfDs1E1ClockSecondaryClock = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("loop1", 3), ("loop2", 4), ("loop3", 5), ("loop4", 6))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ClockSecondaryClock.setStatus('mandatory')
wfDs1E1ClockCurrentClock = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("loop1", 3), ("loop2", 4), ("loop3", 5), ("loop4", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ClockCurrentClock.setStatus('mandatory')
wfDs1E1ClockLoopClockOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 18, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("notpresent", 2))).clone('present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ClockLoopClockOperational.setStatus('mandatory')
wfDs1E1ClockExtClockOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 18, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("notpresent", 2))).clone('present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ClockExtClockOperational.setStatus('mandatory')
wfDs1E1LineCfgTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21), )
if mibBuilder.loadTexts: wfDs1E1LineCfgTable.setStatus('mandatory')
wfDs1E1LineCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1LineCfgPortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1LineCfgIndex"))
if mibBuilder.loadTexts: wfDs1E1LineCfgEntry.setStatus('mandatory')
wfDs1E1LineCfgDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgDelete.setStatus('mandatory')
wfDs1E1LineCfgDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgDisable.setStatus('mandatory')
wfDs1E1LineCfgState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("lmiwait", 4), ("loopback", 5), ("linedieing", 6), ("linedead", 7), ("remoteloop", 8), ("remotedeaf", 9), ("bert", 10), ("hwfrac", 11), ("priWait", 12), ("quePkgWait", 13), ("queMisCfg", 14), ("notpresent", 20))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineCfgState.setStatus('mandatory')
wfDs1E1LineLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineLastChange.setStatus('mandatory')
wfDs1E1LineCfgPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineCfgPortLineNumber.setStatus('mandatory')
wfDs1E1LineCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineCfgIndex.setStatus('mandatory')
wfDs1E1LineCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineCfgIfIndex.setStatus('mandatory')
wfDs1E1LineCfgCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgCct.setStatus('mandatory')
wfDs1E1LineCfgLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgLineNumber.setStatus('mandatory')
wfDs1E1LineCfgQosServicePkg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgQosServicePkg.setStatus('mandatory')
wfDs1E1LineCfgTimeSlotAssign = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgTimeSlotAssign.setStatus('mandatory')
wfDs1E1LineCfgActualTimeSlotAssign = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineCfgActualTimeSlotAssign.setStatus('mandatory')
wfDs1E1LineCfgWanProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("standard", 1), ("passthru", 2), ("ppp", 3), ("smds", 4), ("framerelay", 5), ("x25", 6), ("switch", 7), ("sw", 8), ("atm", 9), ("lapb", 10), ("sdlc", 11))).clone('ppp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgWanProtocol.setStatus('mandatory')
wfDs1E1LineCfgRateAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("adaption64k", 1), ("adaption56klsb", 3))).clone('adaption64k')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgRateAdaption.setStatus('mandatory')
wfDs1E1LineCfgIFTF = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flags", 1), ("idles", 2))).clone('flags')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgIFTF.setStatus('mandatory')
wfDs1E1LineCfgCRCSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc32", 1), ("crc16", 2))).clone('crc16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgCRCSize.setStatus('mandatory')
wfDs1E1LineCfgMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 4608)).clone(4608)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgMtu.setStatus('mandatory')
wfDs1E1LineCfgBertMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgBertMode.setStatus('mandatory')
wfDs1E1LineCfgBertTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("zeros", 1), ("ones", 2), ("qrss", 3), ("two15", 4), ("two15-inv", 5), ("two20", 6), ("two23", 7), ("two23-inv", 8))).clone('ones')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgBertTestPattern.setStatus('mandatory')
wfDs1E1LineCfgFractionalLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgFractionalLoopback.setStatus('mandatory')
wfDs1E1LineCfgAcceptFracLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgAcceptFracLoopCode.setStatus('mandatory')
wfDs1E1LineCfgManagerMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 21, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timeslots", 1), ("t1", 2))).clone('timeslots')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1LineCfgManagerMethod.setStatus('mandatory')
wfDs1E1LineStatTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22), )
if mibBuilder.loadTexts: wfDs1E1LineStatTable.setStatus('mandatory')
wfDs1E1LineStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1LineStatPortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1LineStatIndex"))
if mibBuilder.loadTexts: wfDs1E1LineStatEntry.setStatus('mandatory')
wfDs1E1LineStatPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatPortLineNumber.setStatus('mandatory')
wfDs1E1LineStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatIndex.setStatus('mandatory')
wfDs1E1LineStatRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxOctets.setStatus('mandatory')
wfDs1E1LineStatTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatTxOctets.setStatus('mandatory')
wfDs1E1LineStatRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxFrames.setStatus('mandatory')
wfDs1E1LineStatTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatTxFrames.setStatus('mandatory')
wfDs1E1LineStatRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxErrors.setStatus('mandatory')
wfDs1E1LineStatTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatTxErrors.setStatus('mandatory')
wfDs1E1LineStatRxDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxDropPackets.setStatus('mandatory')
wfDs1E1LineStatTxDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatTxDropPackets.setStatus('mandatory')
wfDs1E1LineStatTxUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatTxUnderflows.setStatus('mandatory')
wfDs1E1LineStatRxOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxOverflows.setStatus('mandatory')
wfDs1E1LineStatRxShortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxShortFrames.setStatus('mandatory')
wfDs1E1LineStatRxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxCRCErrors.setStatus('mandatory')
wfDs1E1LineStatRxNonOctetBits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxNonOctetBits.setStatus('mandatory')
wfDs1E1LineStatRxLongFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxLongFrames.setStatus('mandatory')
wfDs1E1LineStatRxAbortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 22, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineStatRxAbortFrames.setStatus('mandatory')
wfDs1E1DayCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24), )
if mibBuilder.loadTexts: wfDs1E1DayCurrentTable.setStatus('mandatory')
wfDs1E1DayCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1DayCurrentPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1DayCurrentEntry.setStatus('mandatory')
wfDs1E1DayCurrentPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentPortLineNumber.setStatus('mandatory')
wfDs1E1DayCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentESs.setStatus('mandatory')
wfDs1E1DayCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentSESs.setStatus('mandatory')
wfDs1E1DayCurrentSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentSEFSs.setStatus('mandatory')
wfDs1E1DayCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentUASs.setStatus('mandatory')
wfDs1E1DayCurrentCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentCSSs.setStatus('mandatory')
wfDs1E1DayCurrentPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentPCVs.setStatus('mandatory')
wfDs1E1DayCurrentLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentLESs.setStatus('mandatory')
wfDs1E1DayCurrentBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentBESs.setStatus('mandatory')
wfDs1E1DayCurrentDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentDMs.setStatus('mandatory')
wfDs1E1DayCurrentLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentLCVs.setStatus('mandatory')
wfDs1E1DayCurrentSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentSASs.setStatus('mandatory')
wfDs1E1DayCurrentAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentAISSs.setStatus('mandatory')
wfDs1E1DayCurrentFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentFCs.setStatus('mandatory')
wfDs1E1DayCurrentTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentTimeElapsed.setStatus('mandatory')
wfDs1E1DayCurrentValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentValidIntervals.setStatus('mandatory')
wfDs1E1DayCurrentValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 24, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayCurrentValidFlag.setStatus('mandatory')
wfDs1E1DayIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25), )
if mibBuilder.loadTexts: wfDs1E1DayIntervalTable.setStatus('mandatory')
wfDs1E1DayIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1DayIntervalPortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1DayIntervalNumber"))
if mibBuilder.loadTexts: wfDs1E1DayIntervalEntry.setStatus('mandatory')
wfDs1E1DayIntervalPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalPortLineNumber.setStatus('mandatory')
wfDs1E1DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalNumber.setStatus('mandatory')
wfDs1E1DayIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalESs.setStatus('mandatory')
wfDs1E1DayIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalSESs.setStatus('mandatory')
wfDs1E1DayIntervalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalSEFSs.setStatus('mandatory')
wfDs1E1DayIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalUASs.setStatus('mandatory')
wfDs1E1DayIntervalCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalCSSs.setStatus('mandatory')
wfDs1E1DayIntervalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalPCVs.setStatus('mandatory')
wfDs1E1DayIntervalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalLESs.setStatus('mandatory')
wfDs1E1DayIntervalBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalBESs.setStatus('mandatory')
wfDs1E1DayIntervalDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalDMs.setStatus('mandatory')
wfDs1E1DayIntervalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalLCVs.setStatus('mandatory')
wfDs1E1DayIntervalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalSASs.setStatus('mandatory')
wfDs1E1DayIntervalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalAISSs.setStatus('mandatory')
wfDs1E1DayIntervalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalFCs.setStatus('mandatory')
wfDs1E1DayIntervalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 25, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayIntervalValidFlag.setStatus('mandatory')
wfDs1E1DayTotalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26), )
if mibBuilder.loadTexts: wfDs1E1DayTotalTable.setStatus('mandatory')
wfDs1E1DayTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1DayTotalPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1DayTotalEntry.setStatus('mandatory')
wfDs1E1DayTotalPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalPortLineNumber.setStatus('mandatory')
wfDs1E1DayTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalESs.setStatus('mandatory')
wfDs1E1DayTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalSESs.setStatus('mandatory')
wfDs1E1DayTotalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalSEFSs.setStatus('mandatory')
wfDs1E1DayTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalUASs.setStatus('mandatory')
wfDs1E1DayTotalCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalCSSs.setStatus('mandatory')
wfDs1E1DayTotalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalPCVs.setStatus('mandatory')
wfDs1E1DayTotalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalLESs.setStatus('mandatory')
wfDs1E1DayTotalBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalBESs.setStatus('mandatory')
wfDs1E1DayTotalDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalDMs.setStatus('mandatory')
wfDs1E1DayTotalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalLCVs.setStatus('mandatory')
wfDs1E1DayTotalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalSASs.setStatus('mandatory')
wfDs1E1DayTotalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalAISSs.setStatus('mandatory')
wfDs1E1DayTotalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalFCs.setStatus('mandatory')
wfDs1E1DayTotalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 26, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayTotalValidFlag.setStatus('mandatory')
wfDs1E1FarEndCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27), )
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentTable.setStatus('mandatory')
wfDs1E1FarEndCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndCurrentPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentEntry.setStatus('mandatory')
wfDs1E1FarEndCurrentPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentPortLineNumber.setStatus('mandatory')
wfDs1E1FarEndCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentESs.setStatus('mandatory')
wfDs1E1FarEndCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentSESs.setStatus('mandatory')
wfDs1E1FarEndCurrentSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentSEFSs.setStatus('mandatory')
wfDs1E1FarEndCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentUASs.setStatus('mandatory')
wfDs1E1FarEndCurrentCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentCSSs.setStatus('mandatory')
wfDs1E1FarEndCurrentPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentPCVs.setStatus('mandatory')
wfDs1E1FarEndCurrentLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentLESs.setStatus('mandatory')
wfDs1E1FarEndCurrentBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentBESs.setStatus('mandatory')
wfDs1E1FarEndCurrentDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentDMs.setStatus('mandatory')
wfDs1E1FarEndCurrentLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentLCVs.setStatus('mandatory')
wfDs1E1FarEndCurrentSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentSASs.setStatus('mandatory')
wfDs1E1FarEndCurrentAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentAISSs.setStatus('mandatory')
wfDs1E1FarEndCurrentFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentFCs.setStatus('mandatory')
wfDs1E1FarEndCurrentTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentTimeElapsed.setStatus('mandatory')
wfDs1E1FarEndCurrentValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentValidIntervals.setStatus('mandatory')
wfDs1E1FarEndCurrentValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 27, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndCurrentValidFlag.setStatus('mandatory')
wfDs1E1FarEndIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28), )
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalTable.setStatus('mandatory')
wfDs1E1FarEndIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndIntervalPortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndIntervalNumber"))
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalEntry.setStatus('mandatory')
wfDs1E1FarEndIntervalPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalPortLineNumber.setStatus('mandatory')
wfDs1E1FarEndIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalNumber.setStatus('mandatory')
wfDs1E1FarEndIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalESs.setStatus('mandatory')
wfDs1E1FarEndIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalSESs.setStatus('mandatory')
wfDs1E1FarEndIntervalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalSEFSs.setStatus('mandatory')
wfDs1E1FarEndIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalUASs.setStatus('mandatory')
wfDs1E1FarEndIntervalCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalCSSs.setStatus('mandatory')
wfDs1E1FarEndIntervalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalPCVs.setStatus('mandatory')
wfDs1E1FarEndIntervalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalLESs.setStatus('mandatory')
wfDs1E1FarEndIntervalBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalBESs.setStatus('mandatory')
wfDs1E1FarEndIntervalDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalDMs.setStatus('mandatory')
wfDs1E1FarEndIntervalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalLCVs.setStatus('mandatory')
wfDs1E1FarEndIntervalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalSASs.setStatus('mandatory')
wfDs1E1FarEndIntervalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalAISSs.setStatus('mandatory')
wfDs1E1FarEndIntervalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalFCs.setStatus('mandatory')
wfDs1E1FarEndIntervalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 28, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndIntervalValidFlag.setStatus('mandatory')
wfDs1E1FarEndTotalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29), )
if mibBuilder.loadTexts: wfDs1E1FarEndTotalTable.setStatus('mandatory')
wfDs1E1FarEndTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndTotalPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1FarEndTotalEntry.setStatus('mandatory')
wfDs1E1FarEndTotalPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalPortLineNumber.setStatus('mandatory')
wfDs1E1FarEndTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalESs.setStatus('mandatory')
wfDs1E1FarEndTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalSESs.setStatus('mandatory')
wfDs1E1FarEndTotalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalSEFSs.setStatus('mandatory')
wfDs1E1FarEndTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalUASs.setStatus('mandatory')
wfDs1E1FarEndTotalCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalCSSs.setStatus('mandatory')
wfDs1E1FarEndTotalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalPCVs.setStatus('mandatory')
wfDs1E1FarEndTotalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalLESs.setStatus('mandatory')
wfDs1E1FarEndTotalBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalBESs.setStatus('mandatory')
wfDs1E1FarEndTotalDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalDMs.setStatus('mandatory')
wfDs1E1FarEndTotalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalLCVs.setStatus('mandatory')
wfDs1E1FarEndTotalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalSASs.setStatus('mandatory')
wfDs1E1FarEndTotalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalAISSs.setStatus('mandatory')
wfDs1E1FarEndTotalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalFCs.setStatus('mandatory')
wfDs1E1FarEndTotalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 29, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndTotalValidFlag.setStatus('mandatory')
wfDs1E1FarEndDayCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30), )
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentTable.setStatus('mandatory')
wfDs1E1FarEndDayCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndDayCurrentPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentEntry.setStatus('mandatory')
wfDs1E1FarEndDayCurrentPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentPortLineNumber.setStatus('mandatory')
wfDs1E1FarEndDayCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentESs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentSESs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentSEFSs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentUASs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentCSSs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentPCVs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentLESs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentBESs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentDMs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentLCVs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentSASs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentAISSs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentFCs.setStatus('mandatory')
wfDs1E1FarEndDayCurrentTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentTimeElapsed.setStatus('mandatory')
wfDs1E1FarEndDayCurrentValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentValidIntervals.setStatus('mandatory')
wfDs1E1FarEndDayCurrentValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 30, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayCurrentValidFlag.setStatus('mandatory')
wfDs1E1FarEndDayIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31), )
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalTable.setStatus('mandatory')
wfDs1E1FarEndDayIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndDayIntervalPortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndDayIntervalNumber"))
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalEntry.setStatus('mandatory')
wfDs1E1FarEndDayIntervalPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalPortLineNumber.setStatus('mandatory')
wfDs1E1FarEndDayIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalNumber.setStatus('mandatory')
wfDs1E1FarEndDayIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalESs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalSESs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalSEFSs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalUASs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalCSSs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalPCVs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalLESs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalBESs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalDMs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalLCVs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalSASs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalAISSs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalFCs.setStatus('mandatory')
wfDs1E1FarEndDayIntervalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 31, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayIntervalValidFlag.setStatus('mandatory')
wfDs1E1FarEndDayTotalTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32), )
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalTable.setStatus('mandatory')
wfDs1E1FarEndDayTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndDayTotalPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalEntry.setStatus('mandatory')
wfDs1E1FarEndDayTotalPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalPortLineNumber.setStatus('mandatory')
wfDs1E1FarEndDayTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalESs.setStatus('mandatory')
wfDs1E1FarEndDayTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalSESs.setStatus('mandatory')
wfDs1E1FarEndDayTotalSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalSEFSs.setStatus('mandatory')
wfDs1E1FarEndDayTotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalUASs.setStatus('mandatory')
wfDs1E1FarEndDayTotalCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalCSSs.setStatus('mandatory')
wfDs1E1FarEndDayTotalPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalPCVs.setStatus('mandatory')
wfDs1E1FarEndDayTotalLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalLESs.setStatus('mandatory')
wfDs1E1FarEndDayTotalBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalBESs.setStatus('mandatory')
wfDs1E1FarEndDayTotalDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalDMs.setStatus('mandatory')
wfDs1E1FarEndDayTotalLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalLCVs.setStatus('mandatory')
wfDs1E1FarEndDayTotalSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalSASs.setStatus('mandatory')
wfDs1E1FarEndDayTotalAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalAISSs.setStatus('mandatory')
wfDs1E1FarEndDayTotalFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalFCs.setStatus('mandatory')
wfDs1E1FarEndDayTotalValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 32, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayTotalValidFlag.setStatus('mandatory')
wfDs1E1ThrAlrtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33), )
if mibBuilder.loadTexts: wfDs1E1ThrAlrtTable.setStatus('mandatory')
wfDs1E1ThrAlrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1ThrAlrtPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1ThrAlrtEntry.setStatus('mandatory')
wfDs1E1ThrAlrtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtDelete.setStatus('mandatory')
wfDs1E1ThrAlrtPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtPortLineNumber.setStatus('mandatory')
wfDs1E1ThrAlrtESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 3), Gauge32().clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtESs.setStatus('mandatory')
wfDs1E1ThrAlrtSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 4), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtSESs.setStatus('mandatory')
wfDs1E1ThrAlrtSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtSEFSs.setStatus('mandatory')
wfDs1E1ThrAlrtUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 6), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtUASs.setStatus('mandatory')
wfDs1E1ThrAlrtCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 7), Gauge32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtCSSs.setStatus('mandatory')
wfDs1E1ThrAlrtPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 8), Gauge32().clone(13296)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtPCVs.setStatus('mandatory')
wfDs1E1ThrAlrtLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 9), Gauge32().clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtLESs.setStatus('mandatory')
wfDs1E1ThrAlrtBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 10), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtBESs.setStatus('mandatory')
wfDs1E1ThrAlrtDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtDMs.setStatus('mandatory')
wfDs1E1ThrAlrtLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 12), Gauge32().clone(13340)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtLCVs.setStatus('mandatory')
wfDs1E1ThrAlrtSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 13), Gauge32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtSASs.setStatus('mandatory')
wfDs1E1ThrAlrtAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtAISSs.setStatus('mandatory')
wfDs1E1ThrAlrtFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 33, 1, 15), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1ThrAlrtFCs.setStatus('mandatory')
wfDs1E1DayThrAlrtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34), )
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtTable.setStatus('mandatory')
wfDs1E1DayThrAlrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1DayThrAlrtPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtEntry.setStatus('mandatory')
wfDs1E1DayThrAlrtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtDelete.setStatus('mandatory')
wfDs1E1DayThrAlrtPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtPortLineNumber.setStatus('mandatory')
wfDs1E1DayThrAlrtESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 3), Gauge32().clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtESs.setStatus('mandatory')
wfDs1E1DayThrAlrtSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 4), Gauge32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtSESs.setStatus('mandatory')
wfDs1E1DayThrAlrtSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtSEFSs.setStatus('mandatory')
wfDs1E1DayThrAlrtUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 6), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtUASs.setStatus('mandatory')
wfDs1E1DayThrAlrtCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 7), Gauge32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtCSSs.setStatus('mandatory')
wfDs1E1DayThrAlrtPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 8), Gauge32().clone(132960)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtPCVs.setStatus('mandatory')
wfDs1E1DayThrAlrtLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 9), Gauge32().clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtLESs.setStatus('mandatory')
wfDs1E1DayThrAlrtBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 10), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtBESs.setStatus('mandatory')
wfDs1E1DayThrAlrtDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtDMs.setStatus('mandatory')
wfDs1E1DayThrAlrtLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 12), Gauge32().clone(133400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtLCVs.setStatus('mandatory')
wfDs1E1DayThrAlrtSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 13), Gauge32().clone(17)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtSASs.setStatus('mandatory')
wfDs1E1DayThrAlrtAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtAISSs.setStatus('mandatory')
wfDs1E1DayThrAlrtFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 34, 1, 15), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1DayThrAlrtFCs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35), )
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtTable.setStatus('mandatory')
wfDs1E1FarEndThrAlrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndThrAlrtPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtEntry.setStatus('mandatory')
wfDs1E1FarEndThrAlrtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtDelete.setStatus('mandatory')
wfDs1E1FarEndThrAlrtPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtPortLineNumber.setStatus('mandatory')
wfDs1E1FarEndThrAlrtESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 3), Gauge32().clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtESs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 4), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtSESs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtSEFSs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 6), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtUASs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 7), Gauge32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtCSSs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 8), Gauge32().clone(13296)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtPCVs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 9), Gauge32().clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtLESs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 10), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtBESs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtDMs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 12), Gauge32().clone(13340)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtLCVs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 13), Gauge32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtSASs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtAISSs.setStatus('mandatory')
wfDs1E1FarEndThrAlrtFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 35, 1, 15), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndThrAlrtFCs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36), )
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtTable.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1FarEndDayThrAlrtPortLineNumber"))
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtEntry.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtDelete.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtPortLineNumber.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 3), Gauge32().clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtESs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 4), Gauge32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtSESs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtSEFSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtSEFSs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 6), Gauge32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtUASs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtCSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 7), Gauge32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtCSSs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 8), Gauge32().clone(132960)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtPCVs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtLESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 9), Gauge32().clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtLESs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtBESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 10), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtBESs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtDMs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtDMs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 12), Gauge32().clone(133400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtLCVs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 13), Gauge32().clone(17)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtSASs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtAISSs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtAISSs.setStatus('mandatory')
wfDs1E1FarEndDayThrAlrtFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 36, 1, 15), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs1E1FarEndDayThrAlrtFCs.setStatus('mandatory')
wfDs1E1LineQueStatTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 20), )
if mibBuilder.loadTexts: wfDs1E1LineQueStatTable.setStatus('mandatory')
wfDs1E1LineQueStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 20, 1), ).setIndexNames((0, "Wellfleet-DS1E1-MIB", "wfDs1E1LineQueStatPortLineNumber"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1LineQueStatLineIndex"), (0, "Wellfleet-DS1E1-MIB", "wfDs1E1LineQueStatQueueIndex"))
if mibBuilder.loadTexts: wfDs1E1LineQueStatEntry.setStatus('mandatory')
wfDs1E1LineQueStatPortLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineQueStatPortLineNumber.setStatus('mandatory')
wfDs1E1LineQueStatLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 20, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineQueStatLineIndex.setStatus('mandatory')
wfDs1E1LineQueStatQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 20, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineQueStatQueueIndex.setStatus('mandatory')
wfDs1E1LineQueStatTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 20, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineQueStatTxOctets.setStatus('mandatory')
wfDs1E1LineQueStatTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 20, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineQueStatTxPackets.setStatus('mandatory')
wfDs1E1LineQueStatTxDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 9, 20, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1E1LineQueStatTxDrops.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-DS1E1-MIB", wfDs1E1AnsiPortLineNumber=wfDs1E1AnsiPortLineNumber, wfDs1E1AnsiSESCounts=wfDs1E1AnsiSESCounts, wfDs1E1ModuleLoop4ClockOperational=wfDs1E1ModuleLoop4ClockOperational, wfDs1E1FarEndDayTotalEntry=wfDs1E1FarEndDayTotalEntry, wfDs1E1AnsiEntry=wfDs1E1AnsiEntry, wfDs1E1DayTotalPCVs=wfDs1E1DayTotalPCVs, wfDs1E1FarEndDayThrAlrtAISSs=wfDs1E1FarEndDayThrAlrtAISSs, wfDs1E1TotalFramerStatsRemoteAlarmFailures=wfDs1E1TotalFramerStatsRemoteAlarmFailures, wfDs1E1PortSignalLevel=wfDs1E1PortSignalLevel, wfDs1E1FarEndCurrentSEFSs=wfDs1E1FarEndCurrentSEFSs, wfDs1E1FarEndTotalCSSs=wfDs1E1FarEndTotalCSSs, wfDs1E1ActionSendLoopCode=wfDs1E1ActionSendLoopCode, wfDs1E1DayTotalUASs=wfDs1E1DayTotalUASs, wfDs1E1ActionClearFractionalLoopState=wfDs1E1ActionClearFractionalLoopState, wfDs1E1PortRelayStatus=wfDs1E1PortRelayStatus, wfDs1E1FarEndDayThrAlrtSESs=wfDs1E1FarEndDayThrAlrtSESs, wfDs1E1FarEndDayCurrentSESs=wfDs1E1FarEndDayCurrentSESs, wfLogicalLineRxFrames=wfLogicalLineRxFrames, wfDs1E1IntervalFramerStatsFeCounts=wfDs1E1IntervalFramerStatsFeCounts, wfDs1E1FarEndDayTotalDMs=wfDs1E1FarEndDayTotalDMs, wfDs1E1TotalSESs=wfDs1E1TotalSESs, wfDs1E1IntervalUASs=wfDs1E1IntervalUASs, wfDs1E1IntervalDMs=wfDs1E1IntervalDMs, wfLogicalLineCfgRxQueueLength=wfLogicalLineCfgRxQueueLength, wfDs1E1FarEndTotalBESs=wfDs1E1FarEndTotalBESs, wfDs1E1FarEndThrAlrtDelete=wfDs1E1FarEndThrAlrtDelete, wfDs1E1PortMtu=wfDs1E1PortMtu, wfDs1E1FarEndDayIntervalBESs=wfDs1E1FarEndDayIntervalBESs, wfDs1E1LineStatTxUnderflows=wfDs1E1LineStatTxUnderflows, wfDs1E1FarEndDayThrAlrtTable=wfDs1E1FarEndDayThrAlrtTable, wfDs1E1CurrentFramerStatsOofCounts=wfDs1E1CurrentFramerStatsOofCounts, wfDs1E1FarEndDayThrAlrtDMs=wfDs1E1FarEndDayThrAlrtDMs, wfDs1E1AnsiOOFCounts=wfDs1E1AnsiOOFCounts, wfDs1E1BertStatsBits=wfDs1E1BertStatsBits, wfDs1E1FarEndDayCurrentValidFlag=wfDs1E1FarEndDayCurrentValidFlag, wfDs1E1FarEndDayTotalValidFlag=wfDs1E1FarEndDayTotalValidFlag, wfLogicalLineBertMode=wfLogicalLineBertMode, wfDs1E1FarEndIntervalLESs=wfDs1E1FarEndIntervalLESs, wfLogicalLineRemoteLpbkDetection=wfLogicalLineRemoteLpbkDetection, wfDs1E1DayTotalCSSs=wfDs1E1DayTotalCSSs, wfDs1E1BertStatsTable=wfDs1E1BertStatsTable, wfDs1E1TotalLCVs=wfDs1E1TotalLCVs, wfDs1E1TotalTable=wfDs1E1TotalTable, wfDs1E1FarEndDayTotalSASs=wfDs1E1FarEndDayTotalSASs, wfDs1E1ThrAlrtPCVs=wfDs1E1ThrAlrtPCVs, wfLogicalLineRxQueueLength=wfLogicalLineRxQueueLength, wfDs1E1DayTotalBESs=wfDs1E1DayTotalBESs, wfDs1E1FarEndDayThrAlrtPCVs=wfDs1E1FarEndDayThrAlrtPCVs, wfDs1E1FarEndThrAlrtTable=wfDs1E1FarEndThrAlrtTable, wfDs1E1ActionTable=wfDs1E1ActionTable, wfDs1E1LineStatRxNonOctetBits=wfDs1E1LineStatRxNonOctetBits, wfDs1E1TotalAISSs=wfDs1E1TotalAISSs, wfLogicalLinePortLineNumber=wfLogicalLinePortLineNumber, wfDs1E1LineCfgIfIndex=wfDs1E1LineCfgIfIndex, wfDs1E1LineCfgLineNumber=wfDs1E1LineCfgLineNumber, wfDs1E1PortInternationalBit=wfDs1E1PortInternationalBit, wfDs1E1FarEndTotalFCs=wfDs1E1FarEndTotalFCs, wfDs1E1FarEndDayTotalPCVs=wfDs1E1FarEndDayTotalPCVs, wfDs1E1FracEntry=wfDs1E1FracEntry, wfDs1E1AnsiPRMECounts=wfDs1E1AnsiPRMECounts, wfLogicalLineTxQueueLength=wfLogicalLineTxQueueLength, wfLogicalLineWanProtocol=wfLogicalLineWanProtocol, wfLogicalLineBoflLen=wfLogicalLineBoflLen, wfDs1E1LineCfgEntry=wfDs1E1LineCfgEntry, wfDs1E1FarEndDayCurrentSASs=wfDs1E1FarEndDayCurrentSASs, wfDs1E1DayThrAlrtTable=wfDs1E1DayThrAlrtTable, wfDs1E1FarEndIntervalFCs=wfDs1E1FarEndIntervalFCs, wfDs1E1ModuleTable=wfDs1E1ModuleTable, wfDs1E1IntervalBESs=wfDs1E1IntervalBESs, wfDs1E1DayCurrentEntry=wfDs1E1DayCurrentEntry, wfDs1E1FarEndDayTotalCSSs=wfDs1E1FarEndDayTotalCSSs, wfDs1E1LineQueStatLineIndex=wfDs1E1LineQueStatLineIndex, wfDs1E1TotalFramerStatsBpvCounts=wfDs1E1TotalFramerStatsBpvCounts, wfDs1E1PortAcceptLoopbackRequest=wfDs1E1PortAcceptLoopbackRequest, wfDs1E1FarEndDayThrAlrtUASs=wfDs1E1FarEndDayThrAlrtUASs, wfDs1E1PortSetupAlarmThreshold=wfDs1E1PortSetupAlarmThreshold, wfDs1E1FarEndDayCurrentSEFSs=wfDs1E1FarEndDayCurrentSEFSs, wfDs1E1DayThrAlrtLESs=wfDs1E1DayThrAlrtLESs, wfDs1E1CurrentFramerStatsFebeCounts=wfDs1E1CurrentFramerStatsFebeCounts, wfDs1E1DayThrAlrtDelete=wfDs1E1DayThrAlrtDelete, wfDs1E1CurrentTable=wfDs1E1CurrentTable, wfLogicalLineRxDropPackets=wfLogicalLineRxDropPackets, wfDs1E1IntervalNumber=wfDs1E1IntervalNumber, wfDs1E1FarEndDayCurrentUASs=wfDs1E1FarEndDayCurrentUASs, wfDs1E1TotalFramerStatsLossSignalFailures=wfDs1E1TotalFramerStatsLossSignalFailures, wfDs1E1FarEndThrAlrtLESs=wfDs1E1FarEndThrAlrtLESs, wfDs1E1LineStatIndex=wfDs1E1LineStatIndex, wfDs1E1ThrAlrtAISSs=wfDs1E1ThrAlrtAISSs, wfDs1E1FarEndDayIntervalLCVs=wfDs1E1FarEndDayIntervalLCVs, wfDs1E1DayCurrentLESs=wfDs1E1DayCurrentLESs, wfDs1E1FarEndDayThrAlrtFCs=wfDs1E1FarEndDayThrAlrtFCs, wfDs1E1DayCurrentDMs=wfDs1E1DayCurrentDMs, wfLogicalLineEntry=wfLogicalLineEntry, wfDs1E1DayIntervalEntry=wfDs1E1DayIntervalEntry, wfDs1E1PortPrimaryClockSource=wfDs1E1PortPrimaryClockSource, wfDs1E1IntervalSASs=wfDs1E1IntervalSASs, wfDs1E1ThrAlrtCSSs=wfDs1E1ThrAlrtCSSs, wfDs1E1FarEndDayTotalBESs=wfDs1E1FarEndDayTotalBESs, wfDs1E1DayTotalTable=wfDs1E1DayTotalTable, wfDs1E1ClockTable=wfDs1E1ClockTable, wfDs1E1LineCfgIndex=wfDs1E1LineCfgIndex, wfDs1E1FarEndThrAlrtFCs=wfDs1E1FarEndThrAlrtFCs, wfDs1E1FarEndDayThrAlrtCSSs=wfDs1E1FarEndDayThrAlrtCSSs, wfDs1E1TotalPCVs=wfDs1E1TotalPCVs, wfDs1E1FarEndDayIntervalSESs=wfDs1E1FarEndDayIntervalSESs, wfDs1E1DayThrAlrtFCs=wfDs1E1DayThrAlrtFCs, wfDs1E1PortLoggingEnableMask=wfDs1E1PortLoggingEnableMask, wfDs1E1TotalFramerStatsPortLineNumber=wfDs1E1TotalFramerStatsPortLineNumber, wfDs1E1LineStatRxErrors=wfDs1E1LineStatRxErrors, wfDs1E1FarEndDayIntervalTable=wfDs1E1FarEndDayIntervalTable, wfDs1E1CurrentFramerStatsMediaType=wfDs1E1CurrentFramerStatsMediaType, wfDs1E1FarEndDayCurrentTable=wfDs1E1FarEndDayCurrentTable, wfDs1E1DayTotalPortLineNumber=wfDs1E1DayTotalPortLineNumber, wfDs1E1FarEndCurrentLCVs=wfDs1E1FarEndCurrentLCVs, wfLogicalLineTxUnderflows=wfLogicalLineTxUnderflows, wfDs1E1FarEndDayTotalSESs=wfDs1E1FarEndDayTotalSESs, wfDs1E1AnsiPRMR3Counts=wfDs1E1AnsiPRMR3Counts, wfDs1E1ConfigTable=wfDs1E1ConfigTable, wfDs1E1FarEndDayTotalLCVs=wfDs1E1FarEndDayTotalLCVs, wfDs1E1FarEndCurrentSESs=wfDs1E1FarEndCurrentSESs, wfLogicalLineRxDescOverflows=wfLogicalLineRxDescOverflows, wfDs1E1FarEndDayCurrentCSSs=wfDs1E1FarEndDayCurrentCSSs, wfDs1E1IntervalFramerStatsLossFrameFailures=wfDs1E1IntervalFramerStatsLossFrameFailures, wfDs1E1CurrentFramerStatsFeCounts=wfDs1E1CurrentFramerStatsFeCounts, wfDs1E1DayIntervalAISSs=wfDs1E1DayIntervalAISSs, wfDs1E1FarEndTotalPortLineNumber=wfDs1E1FarEndTotalPortLineNumber, wfDs1E1FarEndCurrentTable=wfDs1E1FarEndCurrentTable, wfDs1E1DayCurrentBESs=wfDs1E1DayCurrentBESs, wfDs1E1PortLineImpedanceOption=wfDs1E1PortLineImpedanceOption, wfDs1E1FarEndTotalDMs=wfDs1E1FarEndTotalDMs, wfDs1E1BertStatsPortLineNumber=wfDs1E1BertStatsPortLineNumber, wfDs1E1LineStatRxCRCErrors=wfDs1E1LineStatRxCRCErrors, wfDs1E1PortMapDslId=wfDs1E1PortMapDslId, wfDs1E1PortMapEntry=wfDs1E1PortMapEntry, wfDs1E1PortBertMode=wfDs1E1PortBertMode, wfDs1E1FarEndCurrentESs=wfDs1E1FarEndCurrentESs, wfDs1E1FarEndDayIntervalSEFSs=wfDs1E1FarEndDayIntervalSEFSs, wfDs1E1FarEndThrAlrtESs=wfDs1E1FarEndThrAlrtESs, wfDs1E1FarEndDayTotalUASs=wfDs1E1FarEndDayTotalUASs, wfDs1E1FarEndDayThrAlrtSASs=wfDs1E1FarEndDayThrAlrtSASs, wfDs1E1DayIntervalLESs=wfDs1E1DayIntervalLESs, wfDs1E1FarEndIntervalESs=wfDs1E1FarEndIntervalESs, wfDs1E1TotalSASs=wfDs1E1TotalSASs, wfDs1E1FarEndTotalSESs=wfDs1E1FarEndTotalSESs, wfDs1E1ModuleModule=wfDs1E1ModuleModule, wfDs1E1IntervalESs=wfDs1E1IntervalESs, wfDs1E1CurrentTimeElapsed=wfDs1E1CurrentTimeElapsed, wfDs1E1ClockDelete=wfDs1E1ClockDelete, wfDs1E1ActionSendLoopUpFractionalCode=wfDs1E1ActionSendLoopUpFractionalCode, wfDs1E1LineStatRxFrames=wfDs1E1LineStatRxFrames, wfDs1E1FarEndDayCurrentTimeElapsed=wfDs1E1FarEndDayCurrentTimeElapsed, wfDs1E1DayThrAlrtEntry=wfDs1E1DayThrAlrtEntry, wfLogicalLineRxAbortFrames=wfLogicalLineRxAbortFrames, wfDs1E1IntervalLCVs=wfDs1E1IntervalLCVs, wfDs1E1CurrentCSSs=wfDs1E1CurrentCSSs, wfDs1E1ThrAlrtSESs=wfDs1E1ThrAlrtSESs, wfDs1E1CurrentFramerStatsAlarmIndicationFailures=wfDs1E1CurrentFramerStatsAlarmIndicationFailures, wfDs1E1IntervalFramerStatsTable=wfDs1E1IntervalFramerStatsTable, wfDs1E1ThrAlrtTable=wfDs1E1ThrAlrtTable, wfDs1E1ActionPortLineNumber=wfDs1E1ActionPortLineNumber, wfDs1E1FarEndIntervalNumber=wfDs1E1FarEndIntervalNumber, wfDs1E1CurrentFramerStatsBpvCounts=wfDs1E1CurrentFramerStatsBpvCounts, wfDs1E1FarEndDayIntervalPCVs=wfDs1E1FarEndDayIntervalPCVs, wfDs1E1LineCfgTable=wfDs1E1LineCfgTable, wfDs1E1LineCfgTimeSlotAssign=wfDs1E1LineCfgTimeSlotAssign, wfDs1E1DayCurrentFCs=wfDs1E1DayCurrentFCs, wfDs1E1FarEndDayCurrentLCVs=wfDs1E1FarEndDayCurrentLCVs, wfDs1E1PortLoopbackState=wfDs1E1PortLoopbackState, wfDs1E1LineStatTxFrames=wfDs1E1LineStatTxFrames, wfDs1E1TotalUASs=wfDs1E1TotalUASs, wfDs1E1PortBertTestPattern=wfDs1E1PortBertTestPattern, wfLogicalLineBoflTmo=wfLogicalLineBoflTmo, wfDs1E1DayIntervalSESs=wfDs1E1DayIntervalSESs, wfDs1E1ConfigDelete=wfDs1E1ConfigDelete, wfDs1E1TotalEntry=wfDs1E1TotalEntry, wfDs1E1LineCfgBertMode=wfDs1E1LineCfgBertMode, wfDs1E1ClockExtClockOperational=wfDs1E1ClockExtClockOperational, wfDs1E1PortLineApplication=wfDs1E1PortLineApplication, wfLogicalLineTxFrames=wfLogicalLineTxFrames, wfDs1E1DayThrAlrtAISSs=wfDs1E1DayThrAlrtAISSs, wfDs1E1IntervalFramerStatsOofCounts=wfDs1E1IntervalFramerStatsOofCounts, wfDs1E1FarEndDayThrAlrtLCVs=wfDs1E1FarEndDayThrAlrtLCVs, wfDs1E1DayIntervalPCVs=wfDs1E1DayIntervalPCVs, wfDs1E1LineQueStatTxPackets=wfDs1E1LineQueStatTxPackets, wfDs1E1PortFdlTargetHdlcAddress=wfDs1E1PortFdlTargetHdlcAddress, wfLogicalLineRxIntProcs=wfLogicalLineRxIntProcs, wfDs1E1IntervalCSSs=wfDs1E1IntervalCSSs, wfDs1E1ThrAlrtPortLineNumber=wfDs1E1ThrAlrtPortLineNumber, wfLogicalLineTxIntProcs=wfLogicalLineTxIntProcs, wfLogicalLineRxPktCorruptions=wfLogicalLineRxPktCorruptions, wfDs1E1CurrentFramerStatsLossFrameFailures=wfDs1E1CurrentFramerStatsLossFrameFailures, wfDs1E1DayTotalValidFlag=wfDs1E1DayTotalValidFlag, wfLogicalLineTurboBofl=wfLogicalLineTurboBofl, wfDs1E1ThrAlrtSEFSs=wfDs1E1ThrAlrtSEFSs, wfLogicalLineHdlcService=wfLogicalLineHdlcService, wfDs1E1IntervalFramerStatsMediaType=wfDs1E1IntervalFramerStatsMediaType, wfDs1E1FarEndIntervalAISSs=wfDs1E1FarEndIntervalAISSs, wfDs1E1PortAcceptPrmCrAddressBit=wfDs1E1PortAcceptPrmCrAddressBit, wfDs1E1ConfigLineType=wfDs1E1ConfigLineType, wfDs1E1IntervalTable=wfDs1E1IntervalTable, wfDs1E1DayCurrentTable=wfDs1E1DayCurrentTable, wfDs1E1DayTotalDMs=wfDs1E1DayTotalDMs, wfDs1E1ActionClearFarEndIntervalStats=wfDs1E1ActionClearFarEndIntervalStats, wfDs1E1FarEndThrAlrtSASs=wfDs1E1FarEndThrAlrtSASs, wfDs1E1FarEndDayCurrentEntry=wfDs1E1FarEndDayCurrentEntry, wfDs1E1TotalFCs=wfDs1E1TotalFCs, wfLogicalLineLineNumber=wfLogicalLineLineNumber, wfDs1E1TotalFramerStatsEntry=wfDs1E1TotalFramerStatsEntry, wfDs1E1FarEndDayIntervalPortLineNumber=wfDs1E1FarEndDayIntervalPortLineNumber, wfDs1E1DayCurrentPCVs=wfDs1E1DayCurrentPCVs, wfDs1E1ThrAlrtLCVs=wfDs1E1ThrAlrtLCVs, wfLogicalLineTxOctets=wfLogicalLineTxOctets, wfDs1E1LineCfgCct=wfDs1E1LineCfgCct, wfDs1E1DayIntervalBESs=wfDs1E1DayIntervalBESs, wfDs1E1ClockLoopClockOperational=wfDs1E1ClockLoopClockOperational, wfDs1E1DayIntervalTable=wfDs1E1DayIntervalTable, wfDs1E1DayThrAlrtESs=wfDs1E1DayThrAlrtESs, wfDs1E1DayTotalSASs=wfDs1E1DayTotalSASs, wfDs1E1FarEndDayIntervalNumber=wfDs1E1FarEndDayIntervalNumber, wfDs1E1ConfigIfIndex=wfDs1E1ConfigIfIndex, wfDs1E1LineCfgMtu=wfDs1E1LineCfgMtu, wfDs1E1LineCfgBertTestPattern=wfDs1E1LineCfgBertTestPattern, wfDs1E1DayIntervalValidFlag=wfDs1E1DayIntervalValidFlag, wfDs1E1CurrentBESs=wfDs1E1CurrentBESs, wfDs1E1FarEndCurrentValidIntervals=wfDs1E1FarEndCurrentValidIntervals, wfDs1E1AnsiBPVCounts=wfDs1E1AnsiBPVCounts, wfDs1E1DayTotalESs=wfDs1E1DayTotalESs, wfDs1E1FracDelete=wfDs1E1FracDelete, wfDs1E1TotalFramerStatsLossFrameFailures=wfDs1E1TotalFramerStatsLossFrameFailures, wfDs1E1FarEndDayCurrentLESs=wfDs1E1FarEndDayCurrentLESs, wfDs1E1FarEndTotalLESs=wfDs1E1FarEndTotalLESs, wfDs1E1FarEndDayThrAlrtEntry=wfDs1E1FarEndDayThrAlrtEntry, wfDs1E1IntervalFramerStatsFebeCounts=wfDs1E1IntervalFramerStatsFebeCounts, wfLogicalLineCfgTxQueueLength=wfLogicalLineCfgTxQueueLength, wfLogicalLineFractionalLoopback=wfLogicalLineFractionalLoopback, wfDs1E1DayIntervalFCs=wfDs1E1DayIntervalFCs, wfDs1E1ClockCurrentClock=wfDs1E1ClockCurrentClock, wfDs1E1FarEndCurrentCSSs=wfDs1E1FarEndCurrentCSSs, wfDs1E1FarEndIntervalTable=wfDs1E1FarEndIntervalTable, wfDs1E1FarEndTotalSEFSs=wfDs1E1FarEndTotalSEFSs, wfLogicalLineRxNonOctetBits=wfLogicalLineRxNonOctetBits, wfDs1E1IntervalFramerStatsRemoteAlarmFailures=wfDs1E1IntervalFramerStatsRemoteAlarmFailures, wfDs1E1FarEndDayIntervalLESs=wfDs1E1FarEndDayIntervalLESs, wfDs1E1FarEndDayTotalPortLineNumber=wfDs1E1FarEndDayTotalPortLineNumber, wfDs1E1FarEndDayTotalAISSs=wfDs1E1FarEndDayTotalAISSs, wfDs1E1PortCurrentClock=wfDs1E1PortCurrentClock, wfDs1E1LineQueStatQueueIndex=wfDs1E1LineQueStatQueueIndex, wfDs1E1FarEndDayTotalFCs=wfDs1E1FarEndDayTotalFCs, wfDs1E1CurrentValidIntervals=wfDs1E1CurrentValidIntervals, wfDs1E1FarEndIntervalDMs=wfDs1E1FarEndIntervalDMs, wfDs1E1DayIntervalNumber=wfDs1E1DayIntervalNumber, wfDs1E1IntervalLESs=wfDs1E1IntervalLESs, wfDs1E1FarEndThrAlrtSEFSs=wfDs1E1FarEndThrAlrtSEFSs, wfDs1E1DayIntervalSASs=wfDs1E1DayIntervalSASs)
mibBuilder.exportSymbols("Wellfleet-DS1E1-MIB", wfDs1E1ActionClearFdlStats=wfDs1E1ActionClearFdlStats, wfDs1E1FarEndDayIntervalCSSs=wfDs1E1FarEndDayIntervalCSSs, wfDs1E1ClockEntry=wfDs1E1ClockEntry, wfDs1E1ConfigSendCode=wfDs1E1ConfigSendCode, wfLogicalLineOutQLen=wfLogicalLineOutQLen, wfDs1E1TotalDMs=wfDs1E1TotalDMs, wfDs1E1FarEndIntervalLCVs=wfDs1E1FarEndIntervalLCVs, wfDs1E1DayTotalLCVs=wfDs1E1DayTotalLCVs, wfDs1E1CurrentPCVs=wfDs1E1CurrentPCVs, wfDs1E1ConfigLineStatus=wfDs1E1ConfigLineStatus, wfDs1E1ActionSendLoopDownFractionalCode=wfDs1E1ActionSendLoopDownFractionalCode, wfDs1E1AnsiFECounts=wfDs1E1AnsiFECounts, wfDs1E1DayThrAlrtBESs=wfDs1E1DayThrAlrtBESs, wfDs1E1DayIntervalESs=wfDs1E1DayIntervalESs, wfDs1E1ClockPortLineNumber=wfDs1E1ClockPortLineNumber, wfDs1E1FarEndThrAlrtPortLineNumber=wfDs1E1FarEndThrAlrtPortLineNumber, wfDs1E1FarEndIntervalSEFSs=wfDs1E1FarEndIntervalSEFSs, wfDs1E1FarEndIntervalSESs=wfDs1E1FarEndIntervalSESs, wfDs1E1PortMapTable=wfDs1E1PortMapTable, wfDs1E1DayThrAlrtSASs=wfDs1E1DayThrAlrtSASs, wfDs1E1FarEndDayThrAlrtSEFSs=wfDs1E1FarEndDayThrAlrtSEFSs, wfDs1E1FarEndDayCurrentBESs=wfDs1E1FarEndDayCurrentBESs, wfDs1E1LineQueStatTable=wfDs1E1LineQueStatTable, wfDs1E1CurrentSEFSs=wfDs1E1CurrentSEFSs, wfDs1E1FarEndDayIntervalFCs=wfDs1E1FarEndDayIntervalFCs, wfDs1E1TotalFramerStatsOofCounts=wfDs1E1TotalFramerStatsOofCounts, wfDs1E1FarEndDayTotalESs=wfDs1E1FarEndDayTotalESs, wfDs1E1FarEndDayThrAlrtDelete=wfDs1E1FarEndDayThrAlrtDelete, wfDs1E1DayThrAlrtUASs=wfDs1E1DayThrAlrtUASs, wfDs1E1DayIntervalSEFSs=wfDs1E1DayIntervalSEFSs, wfDs1E1LineQueStatEntry=wfDs1E1LineQueStatEntry, wfDs1E1FarEndTotalAISSs=wfDs1E1FarEndTotalAISSs, wfLogicalLineLocalHdlcAddress=wfLogicalLineLocalHdlcAddress, wfLogicalLineLastState=wfLogicalLineLastState, wfDs1E1FarEndTotalPCVs=wfDs1E1FarEndTotalPCVs, wfDs1E1DayTotalSEFSs=wfDs1E1DayTotalSEFSs, wfLogicalLineRxIFCs=wfLogicalLineRxIFCs, wfLogicalLineDisable=wfLogicalLineDisable, wfDs1E1FracTable=wfDs1E1FracTable, wfDs1E1LineCfgState=wfDs1E1LineCfgState, wfDs1E1ClockSecondaryClock=wfDs1E1ClockSecondaryClock, wfDs1E1AnsiPRMR0Counts=wfDs1E1AnsiPRMR0Counts, wfDs1E1IntervalAISSs=wfDs1E1IntervalAISSs, wfLogicalLineActiveCct=wfLogicalLineActiveCct, wfLogicalLineTable=wfLogicalLineTable, wfDs1E1AnsiESCounts=wfDs1E1AnsiESCounts, wfDs1E1ThrAlrtBESs=wfDs1E1ThrAlrtBESs, wfDs1E1IntervalPortLineNumber=wfDs1E1IntervalPortLineNumber, wfDs1E1TotalPortLineNumber=wfDs1E1TotalPortLineNumber, wfDs1E1AnsiCRCCounts=wfDs1E1AnsiCRCCounts, wfDs1E1FarEndCurrentFCs=wfDs1E1FarEndCurrentFCs, wfDs1E1CurrentFramerStatsPortLineNumber=wfDs1E1CurrentFramerStatsPortLineNumber, wfDs1E1FarEndCurrentPortLineNumber=wfDs1E1FarEndCurrentPortLineNumber, wfLogicalLineRxNullFrames=wfLogicalLineRxNullFrames, wfDs1E1ModuleExtClockOperational=wfDs1E1ModuleExtClockOperational, wfDs1E1DayCurrentESs=wfDs1E1DayCurrentESs, wfDs1E1ConfigValidIntervals=wfDs1E1ConfigValidIntervals, wfDs1E1FarEndDayCurrentFCs=wfDs1E1FarEndDayCurrentFCs, wfDs1E1LineStatRxAbortFrames=wfDs1E1LineStatRxAbortFrames, wfDs1E1AnsiUASCounts=wfDs1E1AnsiUASCounts, wfDs1E1DayCurrentValidFlag=wfDs1E1DayCurrentValidFlag, wfDs1E1PortMapSlot=wfDs1E1PortMapSlot, wfDs1E1FarEndCurrentEntry=wfDs1E1FarEndCurrentEntry, wfLogicalLineRxLossSyncs=wfLogicalLineRxLossSyncs, wfDs1E1CurrentFCs=wfDs1E1CurrentFCs, wfDs1E1ThrAlrtDelete=wfDs1E1ThrAlrtDelete, wfDs1E1TotalFramerStatsAlarmIndicationFailures=wfDs1E1TotalFramerStatsAlarmIndicationFailures, wfDs1E1CurrentFramerStatsRemoteAlarmFailures=wfDs1E1CurrentFramerStatsRemoteAlarmFailures, wfDs1E1PortLineNumber=wfDs1E1PortLineNumber, wfDs1E1ModuleCurrentClock=wfDs1E1ModuleCurrentClock, wfDs1E1ConfigPortLineNumber=wfDs1E1ConfigPortLineNumber, wfDs1E1IntervalFramerStatsEntry=wfDs1E1IntervalFramerStatsEntry, wfDs1E1DayCurrentAISSs=wfDs1E1DayCurrentAISSs, wfDs1E1FarEndDayThrAlrtPortLineNumber=wfDs1E1FarEndDayThrAlrtPortLineNumber, wfLogicalLineNRZIType=wfLogicalLineNRZIType, wfDs1E1DayCurrentSESs=wfDs1E1DayCurrentSESs, wfDs1E1FarEndTotalValidFlag=wfDs1E1FarEndTotalValidFlag, wfDs1E1IntervalFramerStatsLossSignalFailures=wfDs1E1IntervalFramerStatsLossSignalFailures, wfDs1E1FarEndDayIntervalDMs=wfDs1E1FarEndDayIntervalDMs, wfDs1E1FarEndCurrentDMs=wfDs1E1FarEndCurrentDMs, wfDs1E1FarEndCurrentAISSs=wfDs1E1FarEndCurrentAISSs, wfLogicalLineRole=wfLogicalLineRole, wfDs1E1LineQueStatPortLineNumber=wfDs1E1LineQueStatPortLineNumber, wfDs1E1FarEndDayCurrentESs=wfDs1E1FarEndDayCurrentESs, wfDs1E1FarEndIntervalUASs=wfDs1E1FarEndIntervalUASs, wfLogicalLineRemoteHdlcAddress=wfLogicalLineRemoteHdlcAddress, wfDs1E1CurrentUASs=wfDs1E1CurrentUASs, wfDs1E1AnsiPRMR2Counts=wfDs1E1AnsiPRMR2Counts, wfDs1E1CurrentFramerStatsEntry=wfDs1E1CurrentFramerStatsEntry, wfDs1E1CurrentFramerStatsTable=wfDs1E1CurrentFramerStatsTable, wfLogicalLineLastChange=wfLogicalLineLastChange, wfDs1E1AnsiPRMESCounts=wfDs1E1AnsiPRMESCounts, wfDs1E1TotalFramerStatsTable=wfDs1E1TotalFramerStatsTable, wfDs1E1PortMapDelete=wfDs1E1PortMapDelete, wfDs1E1ThrAlrtFCs=wfDs1E1ThrAlrtFCs, wfDs1E1DayCurrentUASs=wfDs1E1DayCurrentUASs, wfLogicalLineBoflNum=wfLogicalLineBoflNum, wfDs1E1ModulePrimaryClock=wfDs1E1ModulePrimaryClock, wfDs1E1ActionClearDayCurrentStats=wfDs1E1ActionClearDayCurrentStats, wfDs1E1FarEndDayCurrentAISSs=wfDs1E1FarEndDayCurrentAISSs, wfLogicalLineTxErrors=wfLogicalLineTxErrors, wfDs1E1FarEndDayCurrentPortLineNumber=wfDs1E1FarEndDayCurrentPortLineNumber, wfLogicalLineState=wfLogicalLineState, wfDs1E1LineStatRxShortFrames=wfDs1E1LineStatRxShortFrames, wfDs1E1CurrentPortLineNumber=wfDs1E1CurrentPortLineNumber, wfLogicalLineBofl=wfLogicalLineBofl, wfLogicalLineTimeSlotAssignment=wfLogicalLineTimeSlotAssignment, wfDs1E1ModuleCfgRxBufferUseCredits=wfDs1E1ModuleCfgRxBufferUseCredits, wfLogicalLineActualRateAdaption=wfLogicalLineActualRateAdaption, wfDs1E1ActionBertErrorInsert=wfDs1E1ActionBertErrorInsert, wfDs1E1CurrentLESs=wfDs1E1CurrentLESs, wfDs1E1LineQueStatTxDrops=wfDs1E1LineQueStatTxDrops, wfDs1E1FarEndDayCurrentPCVs=wfDs1E1FarEndDayCurrentPCVs, wfDs1E1ConfigLoopbackConfig=wfDs1E1ConfigLoopbackConfig, wfDs1E1IntervalSESs=wfDs1E1IntervalSESs, wfDs1E1LineStatTable=wfDs1E1LineStatTable, wfLogicalLineMtu=wfLogicalLineMtu, wfDs1E1LineCfgDisable=wfDs1E1LineCfgDisable, wfDs1E1DayThrAlrtPCVs=wfDs1E1DayThrAlrtPCVs, wfLogicalLineRxOverflows=wfLogicalLineRxOverflows, wfDs1E1FarEndDayIntervalUASs=wfDs1E1FarEndDayIntervalUASs, wfDs1E1ModuleTxBufferUseCredits=wfDs1E1ModuleTxBufferUseCredits, wfDs1E1CurrentLCVs=wfDs1E1CurrentLCVs, wfDs1E1IntervalFramerStatsAlarmIndicationFailures=wfDs1E1IntervalFramerStatsAlarmIndicationFailures, wfDs1E1ModuleLoop2ClockOperational=wfDs1E1ModuleLoop2ClockOperational, wfLogicalLineRxShortFrames=wfLogicalLineRxShortFrames, wfDs1E1ThrAlrtUASs=wfDs1E1ThrAlrtUASs, wfDs1E1LineCfgRateAdaption=wfDs1E1LineCfgRateAdaption, wfDs1E1LineCfgPortLineNumber=wfDs1E1LineCfgPortLineNumber, wfDs1E1DayCurrentTimeElapsed=wfDs1E1DayCurrentTimeElapsed, wfDs1E1TotalFramerStatsCrc4Counts=wfDs1E1TotalFramerStatsCrc4Counts, wfDs1E1FarEndTotalEntry=wfDs1E1FarEndTotalEntry, wfDs1E1FarEndDayTotalTable=wfDs1E1FarEndDayTotalTable, wfDs1E1ModuleLoop3ClockOperational=wfDs1E1ModuleLoop3ClockOperational, wfDs1E1ActionClearFarEndCurrentStats=wfDs1E1ActionClearFarEndCurrentStats, wfDs1E1IntervalFramerStatsPortLineNumber=wfDs1E1IntervalFramerStatsPortLineNumber, wfDs1E1TotalFramerStatsValidIntervals=wfDs1E1TotalFramerStatsValidIntervals, wfDs1E1PortMapConnector=wfDs1E1PortMapConnector, wfDs1E1IntervalFCs=wfDs1E1IntervalFCs, wfLogicalLineRxErrors=wfLogicalLineRxErrors, wfDs1E1CurrentSASs=wfDs1E1CurrentSASs, wfLogicalLineMadr=wfLogicalLineMadr, wfDs1E1CurrentESs=wfDs1E1CurrentESs, wfDs1E1FarEndTotalTable=wfDs1E1FarEndTotalTable, wfLogicalLineRxReplenMisses=wfLogicalLineRxReplenMisses, wfLogicalLineIndex=wfLogicalLineIndex, wfDs1E1FarEndIntervalCSSs=wfDs1E1FarEndIntervalCSSs, wfDs1E1ActionSendFdlLoopbackCode=wfDs1E1ActionSendFdlLoopbackCode, wfDs1E1FarEndCurrentBESs=wfDs1E1FarEndCurrentBESs, wfDs1E1PortFdlLoopInterframeFill=wfDs1E1PortFdlLoopInterframeFill, wfDs1E1DayTotalEntry=wfDs1E1DayTotalEntry, wfDs1E1ActionClearFarEndDayCurrentStats=wfDs1E1ActionClearFarEndDayCurrentStats, wfDs1E1FarEndDayTotalSEFSs=wfDs1E1FarEndDayTotalSEFSs, wfDs1E1FarEndDayIntervalValidFlag=wfDs1E1FarEndDayIntervalValidFlag, wfDs1E1ModuleDelete=wfDs1E1ModuleDelete, wfDs1E1ConfigSignalMode=wfDs1E1ConfigSignalMode, wfDs1E1DayThrAlrtSEFSs=wfDs1E1DayThrAlrtSEFSs, wfLogicalLineRxIdles=wfLogicalLineRxIdles, wfDs1E1ThrAlrtDMs=wfDs1E1ThrAlrtDMs, wfDs1E1ActionClearCurrentStats=wfDs1E1ActionClearCurrentStats, wfDs1E1FarEndTotalUASs=wfDs1E1FarEndTotalUASs, wfDs1E1PortDisable=wfDs1E1PortDisable, wfDs1E1DayThrAlrtPortLineNumber=wfDs1E1DayThrAlrtPortLineNumber, wfDs1E1FracPortLineNumber=wfDs1E1FracPortLineNumber, wfDs1E1FarEndDayIntervalSASs=wfDs1E1FarEndDayIntervalSASs, wfDs1E1DayIntervalUASs=wfDs1E1DayIntervalUASs, wfDs1E1FarEndTotalLCVs=wfDs1E1FarEndTotalLCVs, wfDs1E1LineCfgQosServicePkg=wfDs1E1LineCfgQosServicePkg, wfDs1E1LineCfgActualTimeSlotAssign=wfDs1E1LineCfgActualTimeSlotAssign, wfDs1E1LineQueStatTxOctets=wfDs1E1LineQueStatTxOctets, wfDs1E1LineCfgIFTF=wfDs1E1LineCfgIFTF, wfDs1E1PortTransmitWaveform=wfDs1E1PortTransmitWaveform, wfDs1E1DayTotalSESs=wfDs1E1DayTotalSESs, wfDs1E1LineStatTxOctets=wfDs1E1LineStatTxOctets, wfDs1E1FarEndIntervalBESs=wfDs1E1FarEndIntervalBESs, wfDs1E1FarEndDayTotalLESs=wfDs1E1FarEndDayTotalLESs, wfDs1E1LineCfgAcceptFracLoopCode=wfDs1E1LineCfgAcceptFracLoopCode, wfDs1E1LineStatTxDropPackets=wfDs1E1LineStatTxDropPackets, wfDs1E1TotalSEFSs=wfDs1E1TotalSEFSs, wfDs1E1CurrentFramerStatsLossSignalFailures=wfDs1E1CurrentFramerStatsLossSignalFailures, wfDs1E1FarEndThrAlrtLCVs=wfDs1E1FarEndThrAlrtLCVs, wfDs1E1PortMapLineNumber=wfDs1E1PortMapLineNumber, wfDs1E1IntervalSEFSs=wfDs1E1IntervalSEFSs, wfDs1E1ModuleSlot=wfDs1E1ModuleSlot, wfDs1E1ActionEntry=wfDs1E1ActionEntry, wfDs1E1AnsiPRMSESCounts=wfDs1E1AnsiPRMSESCounts, wfDs1E1ConfigCircuitIdentifier=wfDs1E1ConfigCircuitIdentifier, wfDs1E1FarEndIntervalPCVs=wfDs1E1FarEndIntervalPCVs, wfDs1E1TotalFramerStatsFeCounts=wfDs1E1TotalFramerStatsFeCounts, wfDs1E1ConfigEntry=wfDs1E1ConfigEntry, wfDs1E1AnsiPRMR1Counts=wfDs1E1AnsiPRMR1Counts, wfDs1E1TotalValidFlag=wfDs1E1TotalValidFlag, wfDs1E1ConfigLineCoding=wfDs1E1ConfigLineCoding, wfDs1E1PortSendPrmCrAddressBit=wfDs1E1PortSendPrmCrAddressBit, wfDs1E1DayIntervalLCVs=wfDs1E1DayIntervalLCVs, wfDs1E1PortClearAlarmThreshold=wfDs1E1PortClearAlarmThreshold, wfDs1E1DayThrAlrtDMs=wfDs1E1DayThrAlrtDMs, wfDs1E1LineLastChange=wfDs1E1LineLastChange, wfDs1E1FarEndIntervalSASs=wfDs1E1FarEndIntervalSASs, wfDs1E1FarEndDayIntervalESs=wfDs1E1FarEndDayIntervalESs, wfDs1E1ModuleSecondaryClock=wfDs1E1ModuleSecondaryClock, wfLogicalLineDS0AStatus=wfLogicalLineDS0AStatus, wfDs1E1DayIntervalPortLineNumber=wfDs1E1DayIntervalPortLineNumber, wfDs1E1IntervalEntry=wfDs1E1IntervalEntry, wfLogicalLineLackTxResources=wfLogicalLineLackTxResources, wfDs1E1FarEndCurrentLESs=wfDs1E1FarEndCurrentLESs, wfDs1E1ConfigTransmitClockSource=wfDs1E1ConfigTransmitClockSource, wfDs1E1FarEndIntervalEntry=wfDs1E1FarEndIntervalEntry, wfDs1E1PortBertSendAlarm=wfDs1E1PortBertSendAlarm, wfDs1E1DayCurrentLCVs=wfDs1E1DayCurrentLCVs, wfLogicalLineCRCSize=wfLogicalLineCRCSize, wfDs1E1CurrentValidFlag=wfDs1E1CurrentValidFlag, wfDs1E1LineCfgDelete=wfDs1E1LineCfgDelete, wfDs1E1FarEndDayThrAlrtBESs=wfDs1E1FarEndDayThrAlrtBESs, wfDs1E1FarEndThrAlrtEntry=wfDs1E1FarEndThrAlrtEntry, wfDs1E1LineStatRxDropPackets=wfDs1E1LineStatRxDropPackets, wfDs1E1DayCurrentSASs=wfDs1E1DayCurrentSASs, wfDs1E1LineStatPortLineNumber=wfDs1E1LineStatPortLineNumber, wfDs1E1FarEndDayThrAlrtLESs=wfDs1E1FarEndDayThrAlrtLESs, wfDs1E1PortState=wfDs1E1PortState, wfDs1E1FracActualLogicalLineIndex=wfDs1E1FracActualLogicalLineIndex, wfDs1E1DayThrAlrtLCVs=wfDs1E1DayThrAlrtLCVs, wfDs1E1ThrAlrtLESs=wfDs1E1ThrAlrtLESs, wfDs1E1ModuleLoop1ClockOperational=wfDs1E1ModuleLoop1ClockOperational, wfLogicalLineRateAdaption=wfLogicalLineRateAdaption, wfLogicalLineCct=wfLogicalLineCct, wfDs1E1IntervalFramerStatsIntervalNumber=wfDs1E1IntervalFramerStatsIntervalNumber, wfDs1E1ConfigTimeElapsed=wfDs1E1ConfigTimeElapsed, wfDs1E1BertStatsBitErrors=wfDs1E1BertStatsBitErrors, wfDs1E1PortEntry=wfDs1E1PortEntry, wfDs1E1FarEndThrAlrtDMs=wfDs1E1FarEndThrAlrtDMs, wfDs1E1FarEndThrAlrtCSSs=wfDs1E1FarEndThrAlrtCSSs, wfDs1E1IntervalPCVs=wfDs1E1IntervalPCVs, wfDs1E1ClockPrimaryClock=wfDs1E1ClockPrimaryClock, wfLogicalLineLackRxResources=wfLogicalLineLackRxResources, wfDs1E1ThrAlrtSASs=wfDs1E1ThrAlrtSASs, wfDs1E1LineStatRxLongFrames=wfDs1E1LineStatRxLongFrames, wfDs1E1FarEndCurrentValidFlag=wfDs1E1FarEndCurrentValidFlag, wfLogicalLineCfgMtu=wfLogicalLineCfgMtu, wfDs1E1FarEndCurrentTimeElapsed=wfDs1E1FarEndCurrentTimeElapsed, wfDs1E1IntervalFramerStatsCrc4Counts=wfDs1E1IntervalFramerStatsCrc4Counts, wfDs1E1TotalBESs=wfDs1E1TotalBESs, wfDs1E1LineStatTxErrors=wfDs1E1LineStatTxErrors, wfDs1E1FarEndThrAlrtBESs=wfDs1E1FarEndThrAlrtBESs, wfDs1E1ModuleEntry=wfDs1E1ModuleEntry, wfDs1E1CurrentEntry=wfDs1E1CurrentEntry, wfDs1E1FracLogicalLineIndex=wfDs1E1FracLogicalLineIndex, wfLogicalLineRxLongFrames=wfLogicalLineRxLongFrames, wfLogicalLineDelete=wfLogicalLineDelete, wfDs1E1FarEndCurrentPCVs=wfDs1E1FarEndCurrentPCVs, wfDs1E1FarEndDayCurrentValidIntervals=wfDs1E1FarEndDayCurrentValidIntervals, wfDs1E1TotalESs=wfDs1E1TotalESs, wfDs1E1LineCfgWanProtocol=wfDs1E1LineCfgWanProtocol, wfDs1E1PortSecondaryClockSource=wfDs1E1PortSecondaryClockSource)
mibBuilder.exportSymbols("Wellfleet-DS1E1-MIB", wfDs1E1AnsiTable=wfDs1E1AnsiTable, wfDs1E1ModuleRxBufferUseCredits=wfDs1E1ModuleRxBufferUseCredits, wfDs1E1DayCurrentValidIntervals=wfDs1E1DayCurrentValidIntervals, wfDs1E1DayIntervalDMs=wfDs1E1DayIntervalDMs, wfDs1E1ActionClearIntervalStats=wfDs1E1ActionClearIntervalStats, wfDs1E1ThrAlrtEntry=wfDs1E1ThrAlrtEntry, wfDs1E1LineCfgCRCSize=wfDs1E1LineCfgCRCSize, wfDs1E1ModuleCfgTxBufferUseCredits=wfDs1E1ModuleCfgTxBufferUseCredits, wfDs1E1FarEndDayThrAlrtESs=wfDs1E1FarEndDayThrAlrtESs, wfDs1E1LineStatRxOverflows=wfDs1E1LineStatRxOverflows, wfDs1E1PortTable=wfDs1E1PortTable, wfDs1E1FarEndIntervalPortLineNumber=wfDs1E1FarEndIntervalPortLineNumber, wfDs1E1CurrentAISSs=wfDs1E1CurrentAISSs, wfDs1E1FarEndCurrentUASs=wfDs1E1FarEndCurrentUASs, wfDs1E1FarEndIntervalValidFlag=wfDs1E1FarEndIntervalValidFlag, wfDs1E1FarEndThrAlrtSESs=wfDs1E1FarEndThrAlrtSESs, wfDs1E1TotalFramerStatsFebeCounts=wfDs1E1TotalFramerStatsFebeCounts, wfLogicalLineBertTestPattern=wfLogicalLineBertTestPattern, wfLogicalLineRxCRCErrors=wfLogicalLineRxCRCErrors, wfDs1E1TotalLESs=wfDs1E1TotalLESs, wfDs1E1PortDelete=wfDs1E1PortDelete, wfDs1E1DayIntervalCSSs=wfDs1E1DayIntervalCSSs, wfDs1E1TotalCSSs=wfDs1E1TotalCSSs, wfDs1E1CurrentFramerStatsCrc4Counts=wfDs1E1CurrentFramerStatsCrc4Counts, wfDs1E1DayThrAlrtSESs=wfDs1E1DayThrAlrtSESs, wfDs1E1PortRelayCtrl=wfDs1E1PortRelayCtrl, wfDs1E1PortExtClockOperational=wfDs1E1PortExtClockOperational, wfDs1E1DayCurrentPortLineNumber=wfDs1E1DayCurrentPortLineNumber, wfDs1E1FracNumber=wfDs1E1FracNumber, wfDs1E1LineCfgManagerMethod=wfDs1E1LineCfgManagerMethod, wfDs1E1CurrentSESs=wfDs1E1CurrentSESs, wfDs1E1BertStatsEntry=wfDs1E1BertStatsEntry, wfLogicalLineNRZIEnable=wfLogicalLineNRZIEnable, wfDs1E1DayCurrentCSSs=wfDs1E1DayCurrentCSSs, wfDs1E1FarEndThrAlrtUASs=wfDs1E1FarEndThrAlrtUASs, wfDs1E1FarEndCurrentSASs=wfDs1E1FarEndCurrentSASs, wfDs1E1FarEndDayCurrentDMs=wfDs1E1FarEndDayCurrentDMs, wfLogicalLineTxQueueEmpties=wfLogicalLineTxQueueEmpties, wfDs1E1DayTotalLESs=wfDs1E1DayTotalLESs, wfDs1E1LineStatEntry=wfDs1E1LineStatEntry, wfLogicalLineAcceptFracLoopCode=wfLogicalLineAcceptFracLoopCode, wfDs1E1DayTotalAISSs=wfDs1E1DayTotalAISSs, wfDs1E1DayTotalFCs=wfDs1E1DayTotalFCs, wfDs1E1FarEndDayIntervalEntry=wfDs1E1FarEndDayIntervalEntry, wfDs1E1FarEndTotalSASs=wfDs1E1FarEndTotalSASs, wfDs1E1LineStatRxOctets=wfDs1E1LineStatRxOctets, wfDs1E1IntervalValidFlag=wfDs1E1IntervalValidFlag, wfDs1E1ThrAlrtESs=wfDs1E1ThrAlrtESs, wfDs1E1TotalFramerStatsMediaType=wfDs1E1TotalFramerStatsMediaType, wfDs1E1FarEndThrAlrtAISSs=wfDs1E1FarEndThrAlrtAISSs, wfDs1E1CurrentDMs=wfDs1E1CurrentDMs, wfDs1E1ConfigFdl=wfDs1E1ConfigFdl, wfLogicalLineIFTF=wfLogicalLineIFTF, wfDs1E1DayCurrentSEFSs=wfDs1E1DayCurrentSEFSs, wfDs1E1FarEndDayIntervalAISSs=wfDs1E1FarEndDayIntervalAISSs, wfDs1E1FarEndThrAlrtPCVs=wfDs1E1FarEndThrAlrtPCVs, wfDs1E1ActionBertReset=wfDs1E1ActionBertReset, wfDs1E1IntervalFramerStatsBpvCounts=wfDs1E1IntervalFramerStatsBpvCounts, wfDs1E1LineCfgFractionalLoopback=wfDs1E1LineCfgFractionalLoopback, wfDs1E1DayThrAlrtCSSs=wfDs1E1DayThrAlrtCSSs, wfLogicalLineRxOctets=wfLogicalLineRxOctets, wfDs1E1FarEndTotalESs=wfDs1E1FarEndTotalESs)
