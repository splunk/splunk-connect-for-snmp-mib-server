#
# PySNMP MIB module Unisphere-Data-SLEP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-SLEP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:25:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, Integer32, ModuleIdentity, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, Counter64, Unsigned32, Bits, MibIdentifier, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "ModuleIdentity", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "Counter64", "Unsigned32", "Bits", "MibIdentifier", "TimeTicks", "IpAddress")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
UsdNextIfIndex, UsdEnable = mibBuilder.importSymbols("Unisphere-Data-TC", "UsdNextIfIndex", "UsdEnable")
usdSlepMIBS = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15))
usdSlepMIBS.setRevisions(('2001-04-03 19:10', '2000-01-03 00:00',))
if mibBuilder.loadTexts: usdSlepMIBS.setLastUpdated('200104031910Z')
if mibBuilder.loadTexts: usdSlepMIBS.setOrganization('Unisphere Networks, Inc.')
usdSlepObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1))
usdSlepIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1))
usdSlepNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 1), UsdNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSlepNextIfIndex.setStatus('current')
usdSlepIfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 2), )
if mibBuilder.loadTexts: usdSlepIfTable.setStatus('current')
usdSlepIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 2, 1), ).setIndexNames((0, "Unisphere-Data-SLEP-MIB", "usdSlepIfIndex"))
if mibBuilder.loadTexts: usdSlepIfEntry.setStatus('current')
usdSlepIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdSlepIfIndex.setStatus('current')
usdSlepKeepAliveTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6553)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSlepKeepAliveTimer.setStatus('current')
usdSlepIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSlepIfLowerIfIndex.setStatus('current')
usdSlepIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSlepIfRowStatus.setStatus('current')
usdSlepDownWhenLooped = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 2, 1, 5), UsdEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdSlepDownWhenLooped.setStatus('current')
usdSlepIfStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 3), )
if mibBuilder.loadTexts: usdSlepIfStatisticsTable.setStatus('current')
usdSlepIfStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 3, 1), ).setIndexNames((0, "Unisphere-Data-SLEP-MIB", "usdSlepIfStatsIndex"))
if mibBuilder.loadTexts: usdSlepIfStatisticsEntry.setStatus('current')
usdSlepIfStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdSlepIfStatsIndex.setStatus('current')
usdSlepKeepAliveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSlepKeepAliveFailures.setStatus('current')
usdSlepLinkStatusTooLongPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSlepLinkStatusTooLongPackets.setStatus('current')
usdSlepLinkStatusBadFCSs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdSlepLinkStatusBadFCSs.setStatus('current')
usdSlepConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 4))
usdSlepCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 4, 1))
usdSlepGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 4, 2))
usdSlepCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 4, 1, 1)).setObjects(("Unisphere-Data-SLEP-MIB", "usdSlepGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSlepCompliance = usdSlepCompliance.setStatus('obsolete')
usdSlepCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 4, 1, 2)).setObjects(("Unisphere-Data-SLEP-MIB", "usdSlepGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSlepCompliance2 = usdSlepCompliance2.setStatus('current')
usdSlepGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 4, 2, 1)).setObjects(("Unisphere-Data-SLEP-MIB", "usdSlepNextIfIndex"), ("Unisphere-Data-SLEP-MIB", "usdSlepKeepAliveTimer"), ("Unisphere-Data-SLEP-MIB", "usdSlepIfLowerIfIndex"), ("Unisphere-Data-SLEP-MIB", "usdSlepIfRowStatus"), ("Unisphere-Data-SLEP-MIB", "usdSlepKeepAliveFailures"), ("Unisphere-Data-SLEP-MIB", "usdSlepLinkStatusTooLongPackets"), ("Unisphere-Data-SLEP-MIB", "usdSlepLinkStatusBadFCSs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSlepGroup = usdSlepGroup.setStatus('obsolete')
usdSlepGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 15, 4, 2, 2)).setObjects(("Unisphere-Data-SLEP-MIB", "usdSlepNextIfIndex"), ("Unisphere-Data-SLEP-MIB", "usdSlepKeepAliveTimer"), ("Unisphere-Data-SLEP-MIB", "usdSlepIfLowerIfIndex"), ("Unisphere-Data-SLEP-MIB", "usdSlepIfRowStatus"), ("Unisphere-Data-SLEP-MIB", "usdSlepDownWhenLooped"), ("Unisphere-Data-SLEP-MIB", "usdSlepKeepAliveFailures"), ("Unisphere-Data-SLEP-MIB", "usdSlepLinkStatusTooLongPackets"), ("Unisphere-Data-SLEP-MIB", "usdSlepLinkStatusBadFCSs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdSlepGroup2 = usdSlepGroup2.setStatus('current')
mibBuilder.exportSymbols("Unisphere-Data-SLEP-MIB", usdSlepCompliance2=usdSlepCompliance2, usdSlepIfStatisticsTable=usdSlepIfStatisticsTable, usdSlepIfRowStatus=usdSlepIfRowStatus, usdSlepObjects=usdSlepObjects, usdSlepIfStatsIndex=usdSlepIfStatsIndex, usdSlepMIBS=usdSlepMIBS, usdSlepIfEntry=usdSlepIfEntry, usdSlepLinkStatusTooLongPackets=usdSlepLinkStatusTooLongPackets, usdSlepCompliance=usdSlepCompliance, usdSlepGroup=usdSlepGroup, usdSlepNextIfIndex=usdSlepNextIfIndex, usdSlepLinkStatusBadFCSs=usdSlepLinkStatusBadFCSs, usdSlepKeepAliveFailures=usdSlepKeepAliveFailures, usdSlepCompliances=usdSlepCompliances, usdSlepIfIndex=usdSlepIfIndex, usdSlepIfTable=usdSlepIfTable, PYSNMP_MODULE_ID=usdSlepMIBS, usdSlepIfLayer=usdSlepIfLayer, usdSlepIfStatisticsEntry=usdSlepIfStatisticsEntry, usdSlepKeepAliveTimer=usdSlepKeepAliveTimer, usdSlepDownWhenLooped=usdSlepDownWhenLooped, usdSlepConformance=usdSlepConformance, usdSlepGroups=usdSlepGroups, usdSlepGroup2=usdSlepGroup2, usdSlepIfLowerIfIndex=usdSlepIfLowerIfIndex)
