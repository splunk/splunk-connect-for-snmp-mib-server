#
# PySNMP MIB module BUNDLE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BUNDLE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:24:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ntEnterpriseDataTasmanMgmt, = mibBuilder.importSymbols("NT-ENTERPRISE-DATA-MIB", "ntEnterpriseDataTasmanMgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
mib_2, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, Integer32, NotificationType, ObjectIdentity, TimeTicks, iso, Unsigned32, MibIdentifier, ModuleIdentity, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "Integer32", "NotificationType", "ObjectIdentity", "TimeTicks", "iso", "Unsigned32", "MibIdentifier", "ModuleIdentity", "Counter64", "Counter32")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
nnbundleMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13))
nnbundleMib.setRevisions(('1999-04-23 00:00',))
if mibBuilder.loadTexts: nnbundleMib.setLastUpdated('9907010000Z')
if mibBuilder.loadTexts: nnbundleMib.setOrganization('Nortel Networks')
nnbundleTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1), )
if mibBuilder.loadTexts: nnbundleTable.setStatus('current')
nnbundleTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1), ).setIndexNames((0, "BUNDLE-MIB", "nnbundleId"))
if mibBuilder.loadTexts: nnbundleTableEntry.setStatus('current')
nnbundleId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: nnbundleId.setStatus('current')
nnbundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleName.setStatus('current')
nnbundleContact = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleContact.setStatus('current')
nnbundleDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 76))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDescr.setStatus('current')
nnbundleEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noEncap", 1), ("ppp", 2), ("hdlc", 3), ("frameRelay", 4))).clone('noEncap')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleEncapsulation.setStatus('current')
nnbundleDropEs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 6), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropEs.setStatus('current')
nnbundleDropSes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 7), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropSes.setStatus('current')
nnbundleDropUas = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 8), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropUas.setStatus('current')
nnbundleDropEev = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 9), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropEev.setStatus('current')
nnbundleDropBes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 10), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropBes.setStatus('current')
nnbundleDropBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 11), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropBbe.setStatus('current')
nnbundleDropLofc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 12), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropLofc.setStatus('current')
nnbundleDropBpv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 13), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropBpv.setStatus('current')
nnbundleDropCss = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 14), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropCss.setStatus('current')
nnbundleDropOof = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 15), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropOof.setStatus('current')
nnbundleDropCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 16), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDropCrc.setStatus('current')
nnbundleIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 17), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleIpAddr.setStatus('current')
nnbundleSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 18), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleSubnetMask.setStatus('current')
nnbundleSrcForwardingAddrPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 19), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleSrcForwardingAddrPrimary.setStatus('current')
nnbundleSrcForwardingAddrSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 20), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleSrcForwardingAddrSecondary.setStatus('current')
nnbundleRestoreMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnbundleRestoreMethod.setStatus('current')
nnbundleLinkRestoralTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 22), Integer32().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleLinkRestoralTime.setStatus('current')
nnbundleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnbundleStatus.setStatus('current')
nnbundleLinkRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnbundleLinkRestore.setStatus('current')
nnbundleNoOfLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnbundleNoOfLinks.setStatus('current')
nnbundleTotalBw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 26), Integer32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: nnbundleTotalBw.setStatus('current')
nnbundleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 27), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleRowStatus.setStatus('current')
nnbundleIpUnnumbered = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleIpUnnumbered.setStatus('current')
nnbundleIpMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noMcast", 0), ("pass", 1), ("block", 2), ("ospfrip2", 3))).clone('noMcast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleIpMulticast.setStatus('current')
nnbundleDirectedBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleDirectedBcast.setStatus('current')
nnbundleIcmpUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleIcmpUnreachable.setStatus('current')
nnbundleIcmpRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleIcmpRedirect.setStatus('current')
nnbundleClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 33), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleClearCounters.setStatus('current')
nnbundleTrackHoldDownTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleTrackHoldDownTimer.setStatus('current')
nnbundleDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnbundleDropPackets.setStatus('current')
nnbundleLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2), )
if mibBuilder.loadTexts: nnbundleLinkTable.setStatus('current')
nnbundleLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1), ).setIndexNames((0, "BUNDLE-MIB", "nnbundleId"), (0, "BUNDLE-MIB", "nnbundleLinkT1Num"))
if mibBuilder.loadTexts: nnbundleLinkEntry.setStatus('current')
nnbundleLinkT1Num = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: nnbundleLinkT1Num.setStatus('current')
nnbundleLinkTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('00ffffff')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleLinkTimeSlots.setStatus('current')
nnbundleLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("ct3", 1), ("t1", 2), ("e1", 3), ("hssi", 4), ("t3", 5), ("v35", 6), ("ft1", 7), ("fe1", 8), ("x21", 9), ("s530", 10), ("s530A", 11), ("s449", 12), ("s232", 13)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleLinkType.setStatus('current')
nnbundleLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kbps56", 1), ("kbps64", 2), ("notApplicable", 3))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleLinkSpeed.setStatus('current')
nnbundleLinkInvertedData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleLinkInvertedData.setStatus('current')
nnbundleLinkPhysIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleLinkPhysIfNum.setStatus('current')
nnbundleLinkDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 7), Integer32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nnbundleLinkDiffDelay.setStatus('current')
nnbundleLinkBw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 8), Integer32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: nnbundleLinkBw.setStatus('current')
nnbundleLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnbundleLinkStatus.setStatus('current')
nnbundleLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnbundleLinkRowStatus.setStatus('current')
nnbundleTrackTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 3), )
if mibBuilder.loadTexts: nnbundleTrackTable.setStatus('current')
nnbundleTrackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 3, 1), ).setIndexNames((0, "BUNDLE-MIB", "nnbundleId"), (0, "BUNDLE-MIB", "nntrackIntfId"))
if mibBuilder.loadTexts: nnbundleTrackEntry.setStatus('current')
nntrackIntfId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: nntrackIntfId.setStatus('current')
nntrackIntfName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nntrackIntfName.setStatus('current')
nntrackIntfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntrackIntfStatus.setStatus('current')
nntrackIntfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nntrackIntfRowStatus.setStatus('current')
nnloopbackIfTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 4), )
if mibBuilder.loadTexts: nnloopbackIfTable.setStatus('current')
nnloopbackIfTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 4, 1), ).setIndexNames((0, "BUNDLE-MIB", "nnloopbackIfId"))
if mibBuilder.loadTexts: nnloopbackIfTableEntry.setStatus('current')
nnloopbackIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: nnloopbackIfId.setStatus('current')
nnloopbackIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnloopbackIfName.setStatus('current')
nnloopbackIfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 4, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnloopbackIfIpAddr.setStatus('current')
nnloopbackIfSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 4, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnloopbackIfSubnetMask.setStatus('current')
nnloopbackIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnloopbackIfStatus.setStatus('current')
nnloopbackIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnloopbackIfRowStatus.setStatus('current')
nnbundleTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5))
nnbundleNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 0))
nnbundleTrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1))
nnenableBundleUpDownNotification = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnenableBundleUpDownNotification.setStatus('current')
nnbundleNameStr = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnbundleNameStr.setStatus('current')
nnbundleDownCause = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("admin-delete", 1), ("admin-down", 2), ("l1-failures", 3), ("l2-negotiation-fail", 4), ("bcp-negotiation-fail", 5), ("l3-negotiation-fail", 6), ("bundle-track-down", 7)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnbundleDownCause.setStatus('current')
nnbundleContactInfo = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnbundleContactInfo.setStatus('current')
nnbundleDescrInfo = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 25))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnbundleDescrInfo.setStatus('current')
nnbundleDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 0, 1)).setObjects(("BUNDLE-MIB", "nnbundleNameStr"), ("BUNDLE-MIB", "nnbundleDownCause"), ("BUNDLE-MIB", "nnbundleContactInfo"), ("BUNDLE-MIB", "nnbundleDescrInfo"))
if mibBuilder.loadTexts: nnbundleDownTrap.setStatus('current')
nnbundleUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 0, 2)).setObjects(("BUNDLE-MIB", "nnbundleNameStr"), ("BUNDLE-MIB", "nnbundleContactInfo"), ("BUNDLE-MIB", "nnbundleDescrInfo"))
if mibBuilder.loadTexts: nnbundleUpTrap.setStatus('current')
nnenableLinkUpDownNotification = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnenableLinkUpDownNotification.setStatus('current')
nnlinkNum = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnlinkNum.setStatus('current')
nnlinkType = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("t1", 1), ("t1-within-ct3", 2), ("e1", 3), ("e1-within-ce3", 4), ("t3", 5), ("hssi", 6), ("v35", 7), ("ft1", 8), ("fe1", 9), ("x21", 10), ("s530", 11), ("s530A", 12), ("s449", 13), ("s232", 14)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnlinkType.setStatus('current')
nnlinkCt3Num = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnlinkCt3Num.setStatus('current')
nnlinkDownCause = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("admin-delete", 1), ("admin-down", 2), ("drop-config", 3), ("diffdelay", 4), ("l1-failures", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnlinkDownCause.setStatus('current')
nnlinkBundleName = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnlinkBundleName.setStatus('current')
nnlinkCircuitId = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnlinkCircuitId.setStatus('current')
nnlinkContactInfo = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnlinkContactInfo.setStatus('current')
nnlinkNameInfo = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnlinkNameInfo.setStatus('current')
nnlinkDescrInfo = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 25))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnlinkDescrInfo.setStatus('current')
nnlinkDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 0, 3)).setObjects(("BUNDLE-MIB", "nnlinkNum"), ("BUNDLE-MIB", "nnlinkType"), ("BUNDLE-MIB", "nnlinkCt3Num"), ("BUNDLE-MIB", "nnlinkDownCause"), ("BUNDLE-MIB", "nnlinkBundleName"), ("BUNDLE-MIB", "nnlinkCircuitId"), ("BUNDLE-MIB", "nnlinkContactInfo"), ("BUNDLE-MIB", "nnlinkNameInfo"), ("BUNDLE-MIB", "nnlinkDescrInfo"))
if mibBuilder.loadTexts: nnlinkDownTrap.setStatus('current')
nnlinkUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 5, 0, 4)).setObjects(("BUNDLE-MIB", "nnlinkNum"), ("BUNDLE-MIB", "nnlinkType"), ("BUNDLE-MIB", "nnlinkCt3Num"), ("BUNDLE-MIB", "nnlinkBundleName"), ("BUNDLE-MIB", "nnlinkCircuitId"), ("BUNDLE-MIB", "nnlinkContactInfo"), ("BUNDLE-MIB", "nnlinkNameInfo"), ("BUNDLE-MIB", "nnlinkDescrInfo"))
if mibBuilder.loadTexts: nnlinkUpTrap.setStatus('current')
nnbundleNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 13, 6)).setObjects(("BUNDLE-MIB", "nnbundleDownTrap"), ("BUNDLE-MIB", "nnbundleUpTrap"), ("BUNDLE-MIB", "nnlinkDownTrap"), ("BUNDLE-MIB", "nnlinkUpTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nnbundleNotificationGroup = nnbundleNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("BUNDLE-MIB", nnbundleSrcForwardingAddrPrimary=nnbundleSrcForwardingAddrPrimary, nnbundleLinkInvertedData=nnbundleLinkInvertedData, nnbundleUpTrap=nnbundleUpTrap, nnbundleClearCounters=nnbundleClearCounters, nnbundleDropBes=nnbundleDropBes, nnbundleTrapVariables=nnbundleTrapVariables, nnbundleDropBpv=nnbundleDropBpv, nnloopbackIfStatus=nnloopbackIfStatus, nnbundleDescr=nnbundleDescr, nnbundleNameStr=nnbundleNameStr, nnbundleTotalBw=nnbundleTotalBw, nnloopbackIfSubnetMask=nnloopbackIfSubnetMask, PYSNMP_MODULE_ID=nnbundleMib, nnbundleId=nnbundleId, nnbundleEncapsulation=nnbundleEncapsulation, nnbundleIcmpUnreachable=nnbundleIcmpUnreachable, nnbundleTrackEntry=nnbundleTrackEntry, nnbundleName=nnbundleName, nnbundleLinkType=nnbundleLinkType, nnbundleDropCss=nnbundleDropCss, nnbundleTable=nnbundleTable, nnbundleContact=nnbundleContact, nnbundleDropUas=nnbundleDropUas, nnlinkType=nnlinkType, nnbundleDropEev=nnbundleDropEev, nnlinkDownTrap=nnlinkDownTrap, nnlinkContactInfo=nnlinkContactInfo, nnbundleLinkRestore=nnbundleLinkRestore, nnbundleLinkT1Num=nnbundleLinkT1Num, nnbundleLinkStatus=nnbundleLinkStatus, nnbundleTrackTable=nnbundleTrackTable, nnloopbackIfId=nnloopbackIfId, nnbundleLinkRowStatus=nnbundleLinkRowStatus, nnbundleMib=nnbundleMib, nnbundleTableEntry=nnbundleTableEntry, nnbundleDropCrc=nnbundleDropCrc, nnbundleIpMulticast=nnbundleIpMulticast, nnbundleLinkBw=nnbundleLinkBw, nnbundleDropLofc=nnbundleDropLofc, nnbundleLinkSpeed=nnbundleLinkSpeed, nnbundleStatus=nnbundleStatus, nnloopbackIfRowStatus=nnloopbackIfRowStatus, nnbundleRowStatus=nnbundleRowStatus, nnbundleDirectedBcast=nnbundleDirectedBcast, nnbundleNoOfLinks=nnbundleNoOfLinks, nnbundleDropOof=nnbundleDropOof, nnbundleLinkRestoralTime=nnbundleLinkRestoralTime, nnbundleDownCause=nnbundleDownCause, nnlinkCt3Num=nnlinkCt3Num, nnlinkUpTrap=nnlinkUpTrap, nnlinkDownCause=nnlinkDownCause, nnbundleIpUnnumbered=nnbundleIpUnnumbered, nnbundleLinkTimeSlots=nnbundleLinkTimeSlots, nnbundleSubnetMask=nnbundleSubnetMask, nntrackIntfName=nntrackIntfName, nnbundleDropEs=nnbundleDropEs, nnloopbackIfTable=nnloopbackIfTable, nnlinkNum=nnlinkNum, nnlinkCircuitId=nnlinkCircuitId, nnlinkBundleName=nnlinkBundleName, nnbundleDropBbe=nnbundleDropBbe, nnbundleLinkPhysIfNum=nnbundleLinkPhysIfNum, nnenableBundleUpDownNotification=nnenableBundleUpDownNotification, nnbundleLinkDiffDelay=nnbundleLinkDiffDelay, nnloopbackIfIpAddr=nnloopbackIfIpAddr, nnloopbackIfName=nnloopbackIfName, nntrackIntfId=nntrackIntfId, nnlinkDescrInfo=nnlinkDescrInfo, nnbundleTrackHoldDownTimer=nnbundleTrackHoldDownTimer, nnbundleSrcForwardingAddrSecondary=nnbundleSrcForwardingAddrSecondary, nnlinkNameInfo=nnlinkNameInfo, nnbundleLinkTable=nnbundleLinkTable, nntrackIntfRowStatus=nntrackIntfRowStatus, nnbundleNotificationGroup=nnbundleNotificationGroup, nnbundleDropPackets=nnbundleDropPackets, nnbundleDropSes=nnbundleDropSes, nnbundleTraps=nnbundleTraps, nnbundleDownTrap=nnbundleDownTrap, nnenableLinkUpDownNotification=nnenableLinkUpDownNotification, nnbundleIpAddr=nnbundleIpAddr, nnloopbackIfTableEntry=nnloopbackIfTableEntry, nntrackIntfStatus=nntrackIntfStatus, nnbundleRestoreMethod=nnbundleRestoreMethod, nnbundleNotifications=nnbundleNotifications, nnbundleDescrInfo=nnbundleDescrInfo, nnbundleLinkEntry=nnbundleLinkEntry, nnbundleContactInfo=nnbundleContactInfo, nnbundleIcmpRedirect=nnbundleIcmpRedirect)
