#
# PySNMP MIB module STACK-TOP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STACK-TOP
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, Counter32, Unsigned32, enterprises, Integer32, Gauge32, IpAddress, ObjectIdentity, MibIdentifier, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "Unsigned32", "enterprises", "Integer32", "Gauge32", "IpAddress", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Bits")
MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TextualConvention")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
stacktop = ModuleIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 301))
stacktop.setRevisions(('2004-05-14 00:00',))
if mibBuilder.loadTexts: stacktop.setLastUpdated('200705280000Z')
if mibBuilder.loadTexts: stacktop.setOrganization('ZTE Corp.')
class VendorIdType(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

sysMasterVoteTimes = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMasterVoteTimes.setStatus('current')
sysMasterLastVoteTime = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMasterLastVoteTime.setStatus('current')
sysLastDetecTopEndTime = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLastDetecTopEndTime.setStatus('current')
sysTopChagTimes = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTopChagTimes.setStatus('current')
sysTopDetecMsgCount = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTopDetecMsgCount.setStatus('current')
sysTopInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6), )
if mibBuilder.loadTexts: sysTopInfoTable.setStatus('current')
sysTopInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1), ).setIndexNames((0, "STACK-TOP", "sysDeviceMacAddr"), (0, "STACK-TOP", "sysDeviceStkPortIndex"))
if mibBuilder.loadTexts: sysTopInfoEntry.setStatus('current')
sysDeviceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceMacAddr.setStatus('current')
sysDeviceStkPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkPortIndex.setStatus('current')
sysDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceType.setStatus('current')
sysDeviceStkPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkPortNum.setStatus('current')
sysDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceID.setStatus('current')
sysDeviceMasterPri = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceMasterPri.setStatus('current')
sysDeviceStkIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkIfStatus.setStatus('current')
sysDeviceStkIfPanel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkIfPanel.setStatus('current')
sysDeviceStkIfPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkIfPortID.setStatus('current')
sysDeviceStkPortNeibMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkPortNeibMacAddr.setStatus('current')
sysDeviceStkPortNeibPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkPortNeibPortIndex.setStatus('current')
sysStkPortMsgStacTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7), )
if mibBuilder.loadTexts: sysStkPortMsgStacTable.setStatus('current')
sysStkPortMsgStacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1), ).setIndexNames((0, "STACK-TOP", "sysStkDeviceID"), (0, "STACK-TOP", "sysStkDeviceStkIfIndex"))
if mibBuilder.loadTexts: sysStkPortMsgStacEntry.setStatus('current')
sysStkDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStkDeviceID.setStatus('current')
sysStkDeviceStkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStkDeviceStkIfIndex.setStatus('current')
sysStkPortRecMsgCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStkPortRecMsgCount.setStatus('current')
sysStkPortSendMsgCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStkPortSendMsgCount.setStatus('current')
mibBuilder.exportSymbols("STACK-TOP", sysStkPortSendMsgCount=sysStkPortSendMsgCount, VendorIdType=VendorIdType, sysDeviceStkIfPortID=sysDeviceStkIfPortID, sysStkPortMsgStacEntry=sysStkPortMsgStacEntry, sysStkDeviceStkIfIndex=sysStkDeviceStkIfIndex, sysTopChagTimes=sysTopChagTimes, sysDeviceStkPortNeibPortIndex=sysDeviceStkPortNeibPortIndex, zxr10=zxr10, zte=zte, sysTopDetecMsgCount=sysTopDetecMsgCount, sysDeviceID=sysDeviceID, sysDeviceStkPortNeibMacAddr=sysDeviceStkPortNeibMacAddr, sysMasterLastVoteTime=sysMasterLastVoteTime, sysMasterVoteTimes=sysMasterVoteTimes, sysTopInfoTable=sysTopInfoTable, sysDeviceMacAddr=sysDeviceMacAddr, sysDeviceMasterPri=sysDeviceMasterPri, sysStkDeviceID=sysStkDeviceID, sysStkPortMsgStacTable=sysStkPortMsgStacTable, sysDeviceStkIfPanel=sysDeviceStkIfPanel, sysDeviceStkIfStatus=sysDeviceStkIfStatus, sysDeviceType=sysDeviceType, PYSNMP_MODULE_ID=stacktop, stacktop=stacktop, sysDeviceStkPortNum=sysDeviceStkPortNum, sysDeviceStkPortIndex=sysDeviceStkPortIndex, sysLastDetecTopEndTime=sysLastDetecTopEndTime, sysTopInfoEntry=sysTopInfoEntry, sysStkPortRecMsgCount=sysStkPortRecMsgCount)
