#
# PySNMP MIB module HDR2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HDR2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:11:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, MibIdentifier, enterprises, Bits, ModuleIdentity, ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, TimeTicks, iso, Unsigned32, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibIdentifier", "enterprises", "Bits", "ModuleIdentity", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "TimeTicks", "iso", "Unsigned32", "Integer32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
common = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 4))
hdr2 = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 4, 48))
hdr2Cfg = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 4, 48, 1))
hdr2CfgTable = MibTable((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1), )
if mibBuilder.loadTexts: hdr2CfgTable.setStatus('mandatory')
hdr2CfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1), ).setIndexNames((0, "HDR2-MIB", "hdr2CfgIndex"))
if mibBuilder.loadTexts: hdr2CfgEntry.setStatus('mandatory')
hdr2CfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdr2CfgIndex.setStatus('mandatory')
hdr2CfgRegSigType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("r2MFC", 1), ("r2MFSC", 2))).clone('r2MFC')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgRegSigType.setStatus('mandatory')
hdr2CfgAnumIden = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgAnumIden.setStatus('mandatory')
hdr2CfgForcedRel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgForcedRel.setStatus('mandatory')
hdr2CfgLastBDigTout = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgLastBDigTout.setStatus('mandatory')
hdr2CfgAddrComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("a3", 1), ("a5", 2), ("a6", 3))).clone('a3')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgAddrComplete.setStatus('mandatory')
hdr2CfgEndBparty = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgEndBparty.setStatus('mandatory')
hdr2CfgAlawMulaw = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("aLAW", 1), ("mULAW", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgAlawMulaw.setStatus('mandatory')
hdr2CfgLineSigType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("r2DIG", 1), ("p7DIG", 2), ("r2EandM", 3))).clone('r2DIG')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgLineSigType.setStatus('mandatory')
hdr2CfgProjID = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("iTU-T", 1), ("argentina", 2), ("australia", 3), ("brazil", 4), ("chile", 5), ("china", 6), ("colombia", 7), ("india", 8), ("korea", 9), ("malaysia", 10), ("mexico", 11), ("newZealand", 12), ("philippines", 13), ("sweden", 14), ("venezuela", 15))).clone('iTU-T')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgProjID.setStatus('mandatory')
hdr2CfgSeizeAck = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgSeizeAck.setStatus('mandatory')
hdr2CfgAnumBnum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 36)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgAnumBnum.setStatus('mandatory')
hdr2CfgSubBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("b2", 1), ("b3", 2))).clone('b3')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgSubBusy.setStatus('mandatory')
hdr2CfgSndCallingPtyCatgy = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("a5", 1), ("a6", 2))).clone('a5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgSndCallingPtyCatgy.setStatus('mandatory')
hdr2CfgLineDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2), ("both", 3))).clone('incoming')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgLineDirection.setStatus('mandatory')
hdr2CfgPersistentOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgPersistentOverride.setStatus('mandatory')
hdr2CfgWrongNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("b5", 1), ("b7", 2))).clone('b5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgWrongNumber.setStatus('mandatory')
hdr2CfgIncomingCpc = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("analog", 1), ("digital", 2), ("maintanace", 3), ("test", 4))).clone('analog')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgIncomingCpc.setStatus('mandatory')
hdr2CfgRegSigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgRegSigStatus.setStatus('mandatory')
hdr2CfgUnusedAbcd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgUnusedAbcd.setStatus('mandatory')
hdr2CfgBlkToBlk = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgBlkToBlk.setStatus('mandatory')
hdr2CfgDelayLos = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(6000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgDelayLos.setStatus('mandatory')
hdr2CfgInGlare = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgInGlare.setStatus('mandatory')
hdr2CfgClrCall = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgClrCall.setStatus('mandatory')
hdr2CfgANumQry = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgANumQry.setStatus('mandatory')
hdr2CfgANumNAv = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgANumNAv.setStatus('mandatory')
hdr2CfgANumReq = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("c1", 1), ("c5", 2), ("c6", 3), ("c9", 4))).clone('c5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgANumReq.setStatus('mandatory')
hdr2CfgClrFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgClrFwd.setStatus('mandatory')
hdr2CfgRelGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgRelGuard.setStatus('mandatory')
hdr2CfgPIClrBck = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgPIClrBck.setStatus('mandatory')
hdr2CfgDelayAns = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 2000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgDelayAns.setStatus('mandatory')
hdr2CfgBNumLen = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 36)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgBNumLen.setStatus('mandatory')
hdr2CfgActBTout = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("b-number", 1), ("error", 2))).clone('b-number')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgActBTout.setStatus('mandatory')
hdr2CfgInSubFree = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b1", 1), ("b5", 2), ("b6", 3))).clone('b6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgInSubFree.setStatus('mandatory')
hdr2CfgBNumNFnd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("acceptAllCalls", 1), ("rejectAllCalls", 2), ("acceptAllCallsAsDigital", 3), ("acceptAllCallsAnalog", 4))).clone('acceptAllCalls')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgBNumNFnd.setStatus('mandatory')
hdr2CfgSndBNumN = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("a9", 1), ("a10", 2))).clone('a9')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgSndBNumN.setStatus('mandatory')
hdr2CfgSndBNumN1 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("a2", 1), ("a8", 2), ("a9", 3), ("a10", 4))).clone('a2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgSndBNumN1.setStatus('mandatory')
hdr2CfgSndBNumN2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("a7", 1), ("a9", 2))).clone('a7')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgSndBNumN2.setStatus('mandatory')
hdr2CfgSndBNumN3 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("a8", 1), ("a10", 2))).clone('a8')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgSndBNumN3.setStatus('mandatory')
hdr2CfgSndFBNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("a2", 1), ("a9", 2), ("a10", 3))).clone('a10')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgSndFBNum.setStatus('mandatory')
hdr2CfgDumANum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 36)).clone('1234')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgDumANum.setStatus('mandatory')
hdr2CfgEndANum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("iii-12", 1), ("iii-15", 2))).clone('iii-15')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgEndANum.setStatus('mandatory')
hdr2CfgOutCatAnalog = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("ii-1", 1), ("ii-2", 2), ("ii-3", 3), ("ii-4", 4), ("ii-5", 5), ("ii-6", 6), ("ii-7", 7), ("ii-8", 8), ("ii-9", 9), ("ii-10", 10), ("ii-11", 11), ("ii-12", 12), ("ii-13", 13), ("ii-14", 14), ("ii-15", 15))).clone('ii-1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgOutCatAnalog.setStatus('mandatory')
hdr2CfgOutCatDigital = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("ii-1", 1), ("ii-2", 2), ("ii-3", 3), ("ii-4", 4), ("ii-5", 5), ("ii-6", 6), ("ii-7", 7), ("ii-8", 8), ("ii-9", 9), ("ii-10", 10), ("ii-11", 11), ("ii-12", 12), ("ii-13", 13), ("ii-14", 14), ("ii-15", 15))).clone('ii-6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgOutCatDigital.setStatus('mandatory')
hdr2CfgOutCatTest = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("ii-1", 1), ("ii-2", 2), ("ii-3", 3), ("ii-4", 4), ("ii-5", 5), ("ii-6", 6), ("ii-7", 7), ("ii-8", 8), ("ii-9", 9), ("ii-10", 10), ("ii-11", 11), ("ii-12", 12), ("ii-13", 13), ("ii-14", 14), ("ii-15", 15))).clone('ii-13')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgOutCatTest.setStatus('mandatory')
hdr2CfgOutCatMaintenance = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 1, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("ii-1", 1), ("ii-2", 2), ("ii-3", 3), ("ii-4", 4), ("ii-5", 5), ("ii-6", 6), ("ii-7", 7), ("ii-8", 8), ("ii-9", 9), ("ii-10", 10), ("ii-11", 11), ("ii-12", 12), ("ii-13", 13), ("ii-14", 14), ("ii-15", 15))).clone('ii-3')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2CfgOutCatMaintenance.setStatus('mandatory')
hdr2InCatMap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 4, 48, 2))
hdr2InCatMapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 4, 48, 2, 1), )
if mibBuilder.loadTexts: hdr2InCatMapTable.setStatus('mandatory')
hdr2InCatMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 4, 48, 2, 1, 1), ).setIndexNames((0, "HDR2-MIB", "hdr2InCatMapIndex"), (0, "HDR2-MIB", "hdr2InCatMapSigNum"))
if mibBuilder.loadTexts: hdr2InCatMapEntry.setStatus('mandatory')
hdr2InCatMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdr2InCatMapIndex.setStatus('mandatory')
hdr2InCatMapSigNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdr2InCatMapSigNum.setStatus('mandatory')
hdr2InCatMapCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("analog", 1), ("digital", 2), ("test", 3), ("maintenance", 4))).clone('analog')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2InCatMapCallType.setStatus('mandatory')
hdr2Pte = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 4, 48, 3))
hdr2PteTable = MibTable((1, 3, 6, 1, 4, 1, 429, 4, 48, 3, 1), )
if mibBuilder.loadTexts: hdr2PteTable.setStatus('mandatory')
hdr2PteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 4, 48, 3, 1, 1), ).setIndexNames((0, "HDR2-MIB", "hdr2PteIndex"))
if mibBuilder.loadTexts: hdr2PteEntry.setStatus('mandatory')
hdr2PteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdr2PteIndex.setStatus('mandatory')
hdr2PteMultiFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disableAll", 1), ("enableTrapOnly", 2), ("enableSysLogOnly", 3), ("enableAll", 4))).clone('enableAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2PteMultiFrame.setStatus('mandatory')
hdr2PteMultiFrameClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disableAll", 1), ("enableTrapOnly", 2), ("enableSysLogOnly", 3), ("enableAll", 4))).clone('enableAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2PteMultiFrameClr.setStatus('mandatory')
hdr2PteRemMultiFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disableAll", 1), ("enableTrapOnly", 2), ("enableSysLogOnly", 3), ("enableAll", 4))).clone('enableAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2PteRemMultiFrame.setStatus('mandatory')
hdr2PteRemMultiFrameClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disableAll", 1), ("enableTrapOnly", 2), ("enableSysLogOnly", 3), ("enableAll", 4))).clone('enableAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2PteRemMultiFrameClr.setStatus('mandatory')
hdr2Te = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 4, 48, 4))
hdr2TeTable = MibTable((1, 3, 6, 1, 4, 1, 429, 4, 48, 4, 1), )
if mibBuilder.loadTexts: hdr2TeTable.setStatus('mandatory')
hdr2TeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 4, 48, 4, 1, 1), ).setIndexNames((0, "HDR2-MIB", "hdr2TeIndex"))
if mibBuilder.loadTexts: hdr2TeEntry.setStatus('mandatory')
hdr2TeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdr2TeIndex.setStatus('mandatory')
hdr2TeMultiFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2TeMultiFrame.setStatus('mandatory')
hdr2TeMultiFrameClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2TeMultiFrameClr.setStatus('mandatory')
hdr2TeRemMultiFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2TeRemMultiFrame.setStatus('mandatory')
hdr2TeRemMultiFrameClr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 4, 48, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdr2TeRemMultiFrameClr.setStatus('mandatory')
mibBuilder.exportSymbols("HDR2-MIB", hdr2PteTable=hdr2PteTable, hdr2InCatMap=hdr2InCatMap, hdr2CfgAnumIden=hdr2CfgAnumIden, hdr2PteRemMultiFrameClr=hdr2PteRemMultiFrameClr, hdr2CfgTable=hdr2CfgTable, hdr2CfgSubBusy=hdr2CfgSubBusy, hdr2CfgBNumLen=hdr2CfgBNumLen, hdr2InCatMapIndex=hdr2InCatMapIndex, hdr2InCatMapCallType=hdr2InCatMapCallType, hdr2CfgUnusedAbcd=hdr2CfgUnusedAbcd, hdr2TeTable=hdr2TeTable, hdr2Cfg=hdr2Cfg, hdr2PteEntry=hdr2PteEntry, hdr2TeMultiFrameClr=hdr2TeMultiFrameClr, hdr2CfgSeizeAck=hdr2CfgSeizeAck, hdr2CfgDelayLos=hdr2CfgDelayLos, hdr2CfgEntry=hdr2CfgEntry, hdr2CfgSndBNumN1=hdr2CfgSndBNumN1, hdr2CfgForcedRel=hdr2CfgForcedRel, hdr2CfgOutCatDigital=hdr2CfgOutCatDigital, hdr2TeEntry=hdr2TeEntry, hdr2CfgSndFBNum=hdr2CfgSndFBNum, common=common, hdr2CfgRelGuard=hdr2CfgRelGuard, hdr2CfgLineDirection=hdr2CfgLineDirection, hdr2TeRemMultiFrame=hdr2TeRemMultiFrame, hdr2CfgOutCatAnalog=hdr2CfgOutCatAnalog, hdr2CfgIndex=hdr2CfgIndex, hdr2TeMultiFrame=hdr2TeMultiFrame, hdr2CfgSndCallingPtyCatgy=hdr2CfgSndCallingPtyCatgy, hdr2CfgLastBDigTout=hdr2CfgLastBDigTout, hdr2CfgAddrComplete=hdr2CfgAddrComplete, hdr2CfgIncomingCpc=hdr2CfgIncomingCpc, hdr2CfgRegSigStatus=hdr2CfgRegSigStatus, hdr2CfgPersistentOverride=hdr2CfgPersistentOverride, hdr2CfgANumNAv=hdr2CfgANumNAv, usr=usr, hdr2CfgEndANum=hdr2CfgEndANum, hdr2CfgANumReq=hdr2CfgANumReq, hdr2TeIndex=hdr2TeIndex, hdr2CfgPIClrBck=hdr2CfgPIClrBck, hdr2CfgWrongNumber=hdr2CfgWrongNumber, hdr2CfgOutCatMaintenance=hdr2CfgOutCatMaintenance, hdr2CfgSndBNumN2=hdr2CfgSndBNumN2, hdr2PteIndex=hdr2PteIndex, hdr2CfgSndBNumN=hdr2CfgSndBNumN, hdr2CfgAlawMulaw=hdr2CfgAlawMulaw, hdr2Pte=hdr2Pte, hdr2PteRemMultiFrame=hdr2PteRemMultiFrame, hdr2CfgDumANum=hdr2CfgDumANum, hdr2PteMultiFrame=hdr2PteMultiFrame, hdr2CfgAnumBnum=hdr2CfgAnumBnum, hdr2CfgActBTout=hdr2CfgActBTout, hdr2CfgSndBNumN3=hdr2CfgSndBNumN3, hdr2CfgANumQry=hdr2CfgANumQry, hdr2PteMultiFrameClr=hdr2PteMultiFrameClr, hdr2CfgInGlare=hdr2CfgInGlare, hdr2InCatMapEntry=hdr2InCatMapEntry, hdr2InCatMapSigNum=hdr2InCatMapSigNum, hdr2CfgDelayAns=hdr2CfgDelayAns, hdr2CfgRegSigType=hdr2CfgRegSigType, hdr2Te=hdr2Te, hdr2CfgEndBparty=hdr2CfgEndBparty, hdr2CfgInSubFree=hdr2CfgInSubFree, hdr2CfgClrFwd=hdr2CfgClrFwd, hdr2CfgOutCatTest=hdr2CfgOutCatTest, hdr2CfgBlkToBlk=hdr2CfgBlkToBlk, hdr2=hdr2, hdr2InCatMapTable=hdr2InCatMapTable, hdr2CfgBNumNFnd=hdr2CfgBNumNFnd, hdr2CfgProjID=hdr2CfgProjID, hdr2CfgLineSigType=hdr2CfgLineSigType, hdr2TeRemMultiFrameClr=hdr2TeRemMultiFrameClr, hdr2CfgClrCall=hdr2CfgClrCall)
