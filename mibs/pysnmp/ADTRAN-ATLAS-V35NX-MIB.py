#
# PySNMP MIB module ADTRAN-ATLAS-V35NX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ADTRAN-ATLAS-V35NX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:59:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
adATLASModuleInfoFPStatus, = mibBuilder.importSymbols("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus")
adATLASUnitPortAddress, adATLASUnitSlotAddress, adATLASUnitFPStatus = mibBuilder.importSymbols("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress", "adATLASUnitSlotAddress", "adATLASUnitFPStatus")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, enterprises, ObjectIdentity, iso, IpAddress, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, NotificationType, Bits, Counter32, Counter64, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "enterprises", "ObjectIdentity", "iso", "IpAddress", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "NotificationType", "Bits", "Counter32", "Counter64", "NotificationType", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
adtran = MibIdentifier((1, 3, 6, 1, 4, 1, 664))
adMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2))
adATLASmg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 154))
adGenATLASmg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 154, 1))
adATLASV35Nxmg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7))
adATLASV35NxIfNumber = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfNumber.setStatus('mandatory')
adATLASV35NxIfTable = MibTable((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 2), )
if mibBuilder.loadTexts: adATLASV35NxIfTable.setStatus('mandatory')
adATLASV35NxIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 2, 1), ).setIndexNames((0, "ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfIndex"))
if mibBuilder.loadTexts: adATLASV35NxIfEntry.setStatus('mandatory')
adATLASV35NxIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfIndex.setStatus('mandatory')
adATLASV35NxIfSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfSlotNum.setStatus('mandatory')
adATLASV35NxIfPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfPortNum.setStatus('mandatory')
adATLASV35NxIfAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfAlarmStatus.setStatus('mandatory')
adATLASV35NxIfDTEStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfDTEStatus.setStatus('mandatory')
adATLASV35NxIfDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfDataRate.setStatus('mandatory')
adATLASV35NxIfPLLFifoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfPLLFifoStatus.setStatus('mandatory')
adATLASV35NxIfInbandStatTable = MibTable((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 3), )
if mibBuilder.loadTexts: adATLASV35NxIfInbandStatTable.setStatus('mandatory')
adATLASV35NxIfInbandStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 3, 1), ).setIndexNames((0, "ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfInbandStatIndex"))
if mibBuilder.loadTexts: adATLASV35NxIfInbandStatEntry.setStatus('mandatory')
adATLASV35NxIfInbandStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfInbandStatIndex.setStatus('mandatory')
adATLASV35NxIfInbandStatRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfInbandStatRxFrames.setStatus('mandatory')
adATLASV35NxIfInbandStatTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfInbandStatTxFrames.setStatus('mandatory')
adATLASV35NxIfInbandStatRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfInbandStatRxBytes.setStatus('mandatory')
adATLASV35NxIfInbandStatTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxIfInbandStatTxBytes.setStatus('mandatory')
adATLASV35NxIfInbandStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("resetStats", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASV35NxIfInbandStatReset.setStatus('mandatory')
adATLASV35NxTstTable = MibTable((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4), )
if mibBuilder.loadTexts: adATLASV35NxTstTable.setStatus('mandatory')
adATLASV35NxTstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1), ).setIndexNames((0, "ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxTstIndex"))
if mibBuilder.loadTexts: adATLASV35NxTstEntry.setStatus('mandatory')
adATLASV35NxTstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxTstIndex.setStatus('mandatory')
adATLASV35NxTstLoopbk = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noLpBk", 1), ("localLpBk", 2), ("remoteLpBk", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASV35NxTstLoopbk.setStatus('mandatory')
adATLASV35NxTstLoopbkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("inactive", 1), ("loopingUpRmt", 2), ("rmtLooped", 3), ("loopingDownRmt", 4), ("rmtLoopFailed", 5), ("loopedFromRmt", 6), ("loopbkActive", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxTstLoopbkStatus.setStatus('mandatory')
adATLASV35NxTst511Pattern = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASV35NxTst511Pattern.setStatus('mandatory')
adATLASV35NxTstPatternSync = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("synced", 1), ("noSync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxTstPatternSync.setStatus('mandatory')
adATLASV35NxTstPatternSyncLost = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("syncLost", 1), ("syncNotLost", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxTstPatternSyncLost.setStatus('mandatory')
adATLASV35NxTstPatternESs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASV35NxTstPatternESs.setStatus('mandatory')
adATLASV35NxTstInjectErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("injectError", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASV35NxTstInjectErrs.setStatus('mandatory')
adATLASV35NxTstClearRslts = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 7, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clearResults", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASV35NxTstClearRslts.setStatus('mandatory')
adATLASV35NxSlipAlarmActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400700)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfAlarmStatus"))
adATLASV35NxSlipAlarmInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400701)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfAlarmStatus"))
adATLASV35NxPLLAlarmActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400702)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfAlarmStatus"))
adATLASV35NxPLLAlarmInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400703)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfAlarmStatus"))
adATLASV35NxZeroAlarmActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400704)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfAlarmStatus"))
adATLASV35NxZeroAlarmInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400705)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfAlarmStatus"))
adATLASV35NxExtClkAlarmActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400706)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfAlarmStatus"))
adATLASV35NxExtClkAlarmInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400707)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfAlarmStatus"))
adATLASV35NxRTSActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400708)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxRTSInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400709)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxCTSActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400710)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxCTSInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400711)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxDTRActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400712)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxDTRInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400713)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxDSRActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400714)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxDSRInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400715)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxDCDActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400716)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxDCDInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400717)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxRIActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400718)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxRIInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400719)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxTDActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400720)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxTDInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400721)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxRDActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400722)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxRDInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400723)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxECActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400724)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
adATLASV35NxECInActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400725)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"), ("ADTRAN-ATLAS-V35NX-MIB", "adATLASV35NxIfDTEStatus"))
mibBuilder.exportSymbols("ADTRAN-ATLAS-V35NX-MIB", adATLASV35NxTDActive=adATLASV35NxTDActive, adATLASV35NxIfPLLFifoStatus=adATLASV35NxIfPLLFifoStatus, adATLASV35NxIfDTEStatus=adATLASV35NxIfDTEStatus, adATLASV35NxTDInActive=adATLASV35NxTDInActive, adATLASV35NxIfTable=adATLASV35NxIfTable, adATLASV35NxIfInbandStatEntry=adATLASV35NxIfInbandStatEntry, adATLASV35NxZeroAlarmInActive=adATLASV35NxZeroAlarmInActive, adATLASV35NxIfEntry=adATLASV35NxIfEntry, adATLASV35NxECInActive=adATLASV35NxECInActive, adATLASV35NxIfInbandStatIndex=adATLASV35NxIfInbandStatIndex, adATLASV35NxIfInbandStatReset=adATLASV35NxIfInbandStatReset, adATLASV35NxTstClearRslts=adATLASV35NxTstClearRslts, adATLASV35NxSlipAlarmInActive=adATLASV35NxSlipAlarmInActive, adATLASV35NxTstLoopbk=adATLASV35NxTstLoopbk, adATLASV35NxIfIndex=adATLASV35NxIfIndex, adATLASV35NxIfNumber=adATLASV35NxIfNumber, adATLASV35NxIfInbandStatTxFrames=adATLASV35NxIfInbandStatTxFrames, adATLASV35NxExtClkAlarmActive=adATLASV35NxExtClkAlarmActive, adATLASV35NxSlipAlarmActive=adATLASV35NxSlipAlarmActive, adATLASV35NxDSRActive=adATLASV35NxDSRActive, adATLASV35NxTstIndex=adATLASV35NxTstIndex, adATLASV35NxTstTable=adATLASV35NxTstTable, adATLASV35NxIfInbandStatRxBytes=adATLASV35NxIfInbandStatRxBytes, adtran=adtran, adATLASV35NxZeroAlarmActive=adATLASV35NxZeroAlarmActive, adATLASV35NxDCDActive=adATLASV35NxDCDActive, adATLASV35NxTstEntry=adATLASV35NxTstEntry, adATLASV35NxTstInjectErrs=adATLASV35NxTstInjectErrs, adATLASV35NxRDActive=adATLASV35NxRDActive, adATLASV35NxTstLoopbkStatus=adATLASV35NxTstLoopbkStatus, adATLASV35NxCTSActive=adATLASV35NxCTSActive, adATLASV35NxTstPatternSyncLost=adATLASV35NxTstPatternSyncLost, adATLASV35NxExtClkAlarmInActive=adATLASV35NxExtClkAlarmInActive, adATLASV35NxRTSInActive=adATLASV35NxRTSInActive, adATLASV35NxIfInbandStatTxBytes=adATLASV35NxIfInbandStatTxBytes, adATLASV35NxTst511Pattern=adATLASV35NxTst511Pattern, adATLASV35NxDTRActive=adATLASV35NxDTRActive, adATLASV35NxIfDataRate=adATLASV35NxIfDataRate, adATLASV35NxIfInbandStatRxFrames=adATLASV35NxIfInbandStatRxFrames, adATLASV35NxTstPatternSync=adATLASV35NxTstPatternSync, adATLASV35NxPLLAlarmActive=adATLASV35NxPLLAlarmActive, adATLASV35NxDTRInActive=adATLASV35NxDTRInActive, adATLASV35NxRIInActive=adATLASV35NxRIInActive, adATLASV35NxIfAlarmStatus=adATLASV35NxIfAlarmStatus, adMgmt=adMgmt, adATLASV35NxIfInbandStatTable=adATLASV35NxIfInbandStatTable, adATLASV35NxDSRInActive=adATLASV35NxDSRInActive, adATLASV35NxCTSInActive=adATLASV35NxCTSInActive, adATLASV35NxDCDInActive=adATLASV35NxDCDInActive, adATLASV35NxRIActive=adATLASV35NxRIActive, adATLASV35NxRDInActive=adATLASV35NxRDInActive, adATLASV35NxECActive=adATLASV35NxECActive, adATLASV35NxIfPortNum=adATLASV35NxIfPortNum, adGenATLASmg=adGenATLASmg, adATLASV35NxPLLAlarmInActive=adATLASV35NxPLLAlarmInActive, adATLASV35NxRTSActive=adATLASV35NxRTSActive, adATLASV35Nxmg=adATLASV35Nxmg, adATLASmg=adATLASmg, adATLASV35NxIfSlotNum=adATLASV35NxIfSlotNum, adATLASV35NxTstPatternESs=adATLASV35NxTstPatternESs)
