#
# PySNMP MIB module KBRIDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/KBRIDGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:54:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter64, Integer32, enterprises, TimeTicks, iso, Bits, ModuleIdentity, IpAddress, Counter32, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "Integer32", "enterprises", "TimeTicks", "iso", "Bits", "ModuleIdentity", "IpAddress", "Counter32", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
karlnet = ModuleIdentity((1, 3, 6, 1, 4, 1, 762))
karlnet.setRevisions(('2002-01-28 12:00', '2001-07-17 12:00', '2001-05-09 12:00', '2000-09-18 12:00', '2000-07-25 12:00', '2000-07-11 12:00',))
if mibBuilder.loadTexts: karlnet.setLastUpdated('200201281200Z')
if mibBuilder.loadTexts: karlnet.setOrganization('KarlNet Incorporated')
kbridge_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 762, 2)).setLabel("kbridge-mib")
karlNetKBControl = MibIdentifier((1, 3, 6, 1, 4, 1, 762, 2, 1))
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

kbControlReboot = MibScalar((1, 3, 6, 1, 4, 1, 762, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: kbControlReboot.setStatus('current')
kbControlTestSNMPWrite = MibScalar((1, 3, 6, 1, 4, 1, 762, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: kbControlTestSNMPWrite.setStatus('current')
kbControlShutdown = MibScalar((1, 3, 6, 1, 4, 1, 762, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: kbControlShutdown.setStatus('current')
kbControlTemperature = MibScalar((1, 3, 6, 1, 4, 1, 762, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbControlTemperature.setStatus('current')
kbWireless = MibIdentifier((1, 3, 6, 1, 4, 1, 762, 2, 5))
kbWirelessStationNumber = MibScalar((1, 3, 6, 1, 4, 1, 762, 2, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationNumber.setStatus('current')
kbWirelessStationTable = MibTable((1, 3, 6, 1, 4, 1, 762, 2, 5, 2), )
if mibBuilder.loadTexts: kbWirelessStationTable.setStatus('current')
kbWirelessStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1), ).setIndexNames((0, "KBRIDGE-MIB", "kbWirelessStationIndex"))
if mibBuilder.loadTexts: kbWirelessStationEntry.setStatus('current')
kbWirelessStationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationIndex.setStatus('current')
kbWirelessStationInterfaceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationInterfaceNumber.setStatus('current')
kbWirelessStationName = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationName.setStatus('current')
kbWirelessStationExclHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationExclHellos.setStatus('current')
kbWirelessStationGoodHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationGoodHellos.setStatus('current')
kbWirelessStationLowHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationLowHellos.setStatus('current')
kbWirelessStationSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationSignalLevel.setStatus('current')
kbWirelessStationNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationNoiseLevel.setStatus('current')
kbWirelessStationSignalQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationSignalQuality.setStatus('current')
kbWirelessStationPktTransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationPktTransmits.setStatus('current')
kbWirelessStationMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationMACAddress.setStatus('current')
kbWirelessStationTransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationTransmits.setStatus('current')
kbWirelessStationBadTransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationBadTransmits.setStatus('current')
kbWirelessStationReTransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationReTransmits.setStatus('current')
kbWirelessStationIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationIPAddress.setStatus('current')
kbWirelessStationType = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("compatibility-Mode", 1), ("tc-Peer-to-Peer", 2), ("tc-Base-Station", 3), ("tc-Satellite-Station", 4), ("tc-Polling-Base-Station", 5), ("tc-PtP-Controller", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationType.setStatus('current')
kbWirelessStationSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown-SNR", 1), ("low-SNR", 2), ("good-SNR", 3), ("excellent-SNR", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationSNR.setStatus('current')
kbWirelessStationState = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("online", 1), ("offline", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationState.setStatus('current')
kbWirelessPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessPoll.setStatus('current')
kbWirelessPollData = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessPollData.setStatus('current')
kbWirelessPollNoData = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessPollNoData.setStatus('current')
kbWirelessPollMoreData = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessPollMoreData.setStatus('deprecated')
kbWirelessPollTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 23), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kbWirelessPollTimeouts.setStatus('current')
kbWirelessPollOfflines = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 24), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kbWirelessPollOfflines.setStatus('current')
kbWirelessTestTime = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 25), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kbWirelessTestTime.setStatus('current')
kbWirelessTestInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kbWirelessTestInterval.setStatus('current')
kbWirelessTestPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: kbWirelessTestPacketSize.setStatus('current')
kbWirelessTestOurTx = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurTx.setStatus('current')
kbWirelessTestOurRx = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurRx.setStatus('current')
kbWirelessTestHisTx = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisTx.setStatus('current')
kbWirelessTestHisRx = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisRx.setStatus('current')
kbWirelessTestOurCurSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurCurSignalLevel.setStatus('current')
kbWirelessTestOurCurNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurCurNoiseLevel.setStatus('current')
kbWirelessTestOurCurSignalQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurCurSignalQuality.setStatus('current')
kbWirelessTestOurCurSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurCurSNR.setStatus('current')
kbWirelessTestOurMinSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurMinSignalLevel.setStatus('current')
kbWirelessTestOurMinNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurMinNoiseLevel.setStatus('current')
kbWirelessTestOurMinSignalQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurMinSignalQuality.setStatus('current')
kbWirelessTestOurMinSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurMinSNR.setStatus('current')
kbWirelessTestOurMaxSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurMaxSignalLevel.setStatus('current')
kbWirelessTestOurMaxNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurMaxNoiseLevel.setStatus('current')
kbWirelessTestOurMaxSignalQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurMaxSignalQuality.setStatus('current')
kbWirelessTestOurMaxSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestOurMaxSNR.setStatus('current')
kbWirelessTestHisCurSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisCurSignalLevel.setStatus('current')
kbWirelessTestHisCurNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisCurNoiseLevel.setStatus('current')
kbWirelessTestHisCurSignalQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisCurSignalQuality.setStatus('current')
kbWirelessTestHisCurSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisCurSNR.setStatus('current')
kbWirelessTestHisMinSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisMinSignalLevel.setStatus('current')
kbWirelessTestHisMinNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisMinNoiseLevel.setStatus('current')
kbWirelessTestHisMinSignalQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisMinSignalQuality.setStatus('current')
kbWirelessTestHisMinSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisMinSNR.setStatus('current')
kbWirelessTestHisMaxSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisMaxSignalLevel.setStatus('current')
kbWirelessTestHisMaxNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisMaxNoiseLevel.setStatus('current')
kbWirelessTestHisMaxSignalQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisMaxSignalQuality.setStatus('current')
kbWirelessTestHisMaxSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestHisMaxSNR.setStatus('current')
kbWirelessTestLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestLinkUp.setStatus('current')
kbWirelessTestLostLink = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestLostLink.setStatus('current')
kbWirelessTestLostTestPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessTestLostTestPkts.setStatus('current')
kbWirelessStationRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("waveLAN-I", 0), ("clarion-M10", 1), ("waveLAN-IEEE", 2), ("microwave", 3), ("radioLAN", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationRadioType.setStatus('current')
kbWirelessRecordType = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("linktest", 1), ("turboCell", 2), ("combination", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessRecordType.setStatus('current')
kbWirelessStationPktReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationPktReceives.setStatus('current')
kbWirelessStationReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationReceives.setStatus('current')
kbWirelessStationBytesReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationBytesReceives.setStatus('current')
kbWirelessStationBytesTransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationBytesTransmits.setStatus('current')
kbWirelessRegistrationRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 65), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessRegistrationRecord.setStatus('obsolete')
kbWirelessStationFragmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationFragmentDiscards.setStatus('current')
kbWirelessStationFragmentMissings = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationFragmentMissings.setStatus('current')
kbWirelessStationFragmentLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationFragmentLostFrames.setStatus('current')
kbWirelessStationFragmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 5, 2, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbWirelessStationFragmentErrors.setStatus('current')
kbSEC = MibIdentifier((1, 3, 6, 1, 4, 1, 762, 2, 8))
kbSECClientTable = MibTable((1, 3, 6, 1, 4, 1, 762, 2, 8, 1), )
if mibBuilder.loadTexts: kbSECClientTable.setStatus('current')
kbSECClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 762, 2, 8, 1, 1), ).setIndexNames((0, "KBRIDGE-MIB", "kbSECClientAddress"))
if mibBuilder.loadTexts: kbSECClientEntry.setStatus('current')
kbSECClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 8, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbSECClientAddress.setStatus('current')
kbSECStationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 8, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbSECStationAddress.setStatus('current')
kbClientInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 762, 2, 9))
kbClientInfoByNumberTable = MibTable((1, 3, 6, 1, 4, 1, 762, 2, 9, 1), )
if mibBuilder.loadTexts: kbClientInfoByNumberTable.setStatus('current')
kbClientInfoByNumberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 762, 2, 9, 1, 1), ).setIndexNames((0, "KBRIDGE-MIB", "kbCIbyNumberVirtualPort"))
if mibBuilder.loadTexts: kbClientInfoByNumberEntry.setStatus('current')
kbCIbyNumberVirtualPort = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyNumberVirtualPort.setStatus('current')
kbCIbyNumberMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyNumberMACAddress.setStatus('current')
kbCIByNumberInterfaceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIByNumberInterfaceNum.setStatus('current')
kbCIbyNumberStationName = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyNumberStationName.setStatus('current')
kbCIbyNumberTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyNumberTotalBytes.setStatus('current')
kbCIbyNumberTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyNumberTotalPackets.setStatus('current')
kbCIbyNumberSNRAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyNumberSNRAverage.setStatus('current')
kbCIbyNumberTimeLastRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyNumberTimeLastRecv.setStatus('current')
kbClientInfoByMacTable = MibTable((1, 3, 6, 1, 4, 1, 762, 2, 9, 2), )
if mibBuilder.loadTexts: kbClientInfoByMacTable.setStatus('current')
kbClientInfoByMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 762, 2, 9, 2, 1), ).setIndexNames((0, "KBRIDGE-MIB", "kbCIbyMacMACAddress"))
if mibBuilder.loadTexts: kbClientInfoByMacEntry.setStatus('current')
kbCIbyMacMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyMacMACAddress.setStatus('current')
kbCIbyMacVirtualPort = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyMacVirtualPort.setStatus('current')
kbCIbyMacInterfaceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyMacInterfaceNum.setStatus('current')
kbCIbyMacStationName = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyMacStationName.setStatus('current')
kbCIbyMacTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyMacTotalBytes.setStatus('current')
kbCIbyMacTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyMacTotalPackets.setStatus('current')
kbCIbyMacSNRAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyMacSNRAverage.setStatus('current')
kbCIbyMacTimeLastRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 762, 2, 9, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: kbCIbyMacTimeLastRecv.setStatus('current')
mibBuilder.exportSymbols("KBRIDGE-MIB", kbWirelessRecordType=kbWirelessRecordType, kbSECStationAddress=kbSECStationAddress, kbCIbyNumberVirtualPort=kbCIbyNumberVirtualPort, kbWirelessTestTime=kbWirelessTestTime, kbWirelessTestHisMaxSNR=kbWirelessTestHisMaxSNR, kbCIbyNumberTotalBytes=kbCIbyNumberTotalBytes, kbWirelessStationInterfaceNumber=kbWirelessStationInterfaceNumber, kbWirelessStationTable=kbWirelessStationTable, kbWirelessTestHisMinSignalLevel=kbWirelessTestHisMinSignalLevel, kbWirelessTestHisMinNoiseLevel=kbWirelessTestHisMinNoiseLevel, kbClientInfoByMacEntry=kbClientInfoByMacEntry, kbWirelessTestHisMinSNR=kbWirelessTestHisMinSNR, kbWirelessTestHisCurNoiseLevel=kbWirelessTestHisCurNoiseLevel, kbWirelessTestOurCurSignalQuality=kbWirelessTestOurCurSignalQuality, kbridge_mib=kbridge_mib, kbWirelessStationNoiseLevel=kbWirelessStationNoiseLevel, kbWirelessStationFragmentErrors=kbWirelessStationFragmentErrors, kbWirelessStationState=kbWirelessStationState, kbWirelessStationType=kbWirelessStationType, kbControlTestSNMPWrite=kbControlTestSNMPWrite, kbWirelessTestLinkUp=kbWirelessTestLinkUp, kbWirelessTestHisMaxSignalQuality=kbWirelessTestHisMaxSignalQuality, kbSECClientEntry=kbSECClientEntry, kbWirelessTestOurCurSignalLevel=kbWirelessTestOurCurSignalLevel, kbWirelessTestOurMaxNoiseLevel=kbWirelessTestOurMaxNoiseLevel, kbWirelessStationFragmentMissings=kbWirelessStationFragmentMissings, kbCIbyMacInterfaceNum=kbCIbyMacInterfaceNum, karlNetKBControl=karlNetKBControl, kbSECClientTable=kbSECClientTable, kbWirelessPollNoData=kbWirelessPollNoData, kbWirelessTestHisMaxNoiseLevel=kbWirelessTestHisMaxNoiseLevel, kbWirelessTestHisCurSNR=kbWirelessTestHisCurSNR, kbWirelessTestHisMaxSignalLevel=kbWirelessTestHisMaxSignalLevel, kbCIbyMacTimeLastRecv=kbCIbyMacTimeLastRecv, kbWirelessTestOurTx=kbWirelessTestOurTx, kbCIByNumberInterfaceNum=kbCIByNumberInterfaceNum, kbWirelessStationSignalLevel=kbWirelessStationSignalLevel, kbWirelessTestHisCurSignalLevel=kbWirelessTestHisCurSignalLevel, kbSECClientAddress=kbSECClientAddress, kbClientInfoByNumberTable=kbClientInfoByNumberTable, kbWirelessStationBytesTransmits=kbWirelessStationBytesTransmits, kbClientInfoByNumberEntry=kbClientInfoByNumberEntry, kbWirelessStationBadTransmits=kbWirelessStationBadTransmits, kbWirelessStationReceives=kbWirelessStationReceives, kbWirelessStationLowHellos=kbWirelessStationLowHellos, kbControlShutdown=kbControlShutdown, kbWirelessTestOurMaxSignalQuality=kbWirelessTestOurMaxSignalQuality, kbWirelessTestOurCurSNR=kbWirelessTestOurCurSNR, kbWirelessTestOurMinNoiseLevel=kbWirelessTestOurMinNoiseLevel, kbCIbyNumberTotalPackets=kbCIbyNumberTotalPackets, kbWirelessStationIndex=kbWirelessStationIndex, kbWirelessPollMoreData=kbWirelessPollMoreData, kbWirelessStationMACAddress=kbWirelessStationMACAddress, kbWirelessRegistrationRecord=kbWirelessRegistrationRecord, kbWirelessPollData=kbWirelessPollData, kbWirelessStationBytesReceives=kbWirelessStationBytesReceives, kbControlTemperature=kbControlTemperature, kbWirelessTestOurMaxSignalLevel=kbWirelessTestOurMaxSignalLevel, kbWirelessStationIPAddress=kbWirelessStationIPAddress, kbWirelessStationFragmentDiscards=kbWirelessStationFragmentDiscards, PYSNMP_MODULE_ID=karlnet, kbWirelessTestHisCurSignalQuality=kbWirelessTestHisCurSignalQuality, kbSEC=kbSEC, kbCIbyMacStationName=kbCIbyMacStationName, kbWirelessStationExclHellos=kbWirelessStationExclHellos, kbWirelessTestLostLink=kbWirelessTestLostLink, kbClientInfoByMacTable=kbClientInfoByMacTable, kbWirelessStationGoodHellos=kbWirelessStationGoodHellos, kbCIbyNumberStationName=kbCIbyNumberStationName, kbWirelessStationPktReceives=kbWirelessStationPktReceives, kbWirelessTestInterval=kbWirelessTestInterval, kbWirelessStationRadioType=kbWirelessStationRadioType, kbWirelessStationSNR=kbWirelessStationSNR, kbWirelessStationPktTransmits=kbWirelessStationPktTransmits, kbWirelessTestOurCurNoiseLevel=kbWirelessTestOurCurNoiseLevel, kbWirelessTestOurMinSignalQuality=kbWirelessTestOurMinSignalQuality, kbWirelessTestOurRx=kbWirelessTestOurRx, kbCIbyNumberTimeLastRecv=kbCIbyNumberTimeLastRecv, kbWirelessStationNumber=kbWirelessStationNumber, MacAddress=MacAddress, kbWirelessPollOfflines=kbWirelessPollOfflines, kbCIbyMacTotalBytes=kbCIbyMacTotalBytes, kbWirelessTestPacketSize=kbWirelessTestPacketSize, kbWireless=kbWireless, kbWirelessTestOurMaxSNR=kbWirelessTestOurMaxSNR, kbWirelessTestHisRx=kbWirelessTestHisRx, kbWirelessTestHisMinSignalQuality=kbWirelessTestHisMinSignalQuality, kbWirelessTestOurMinSignalLevel=kbWirelessTestOurMinSignalLevel, kbWirelessTestOurMinSNR=kbWirelessTestOurMinSNR, karlnet=karlnet, kbWirelessStationTransmits=kbWirelessStationTransmits, kbWirelessStationFragmentLostFrames=kbWirelessStationFragmentLostFrames, kbCIbyMacVirtualPort=kbCIbyMacVirtualPort, kbWirelessTestLostTestPkts=kbWirelessTestLostTestPkts, kbCIbyNumberMACAddress=kbCIbyNumberMACAddress, kbWirelessTestHisTx=kbWirelessTestHisTx, kbCIbyMacTotalPackets=kbCIbyMacTotalPackets, kbWirelessStationName=kbWirelessStationName, kbCIbyMacSNRAverage=kbCIbyMacSNRAverage, kbWirelessStationSignalQuality=kbWirelessStationSignalQuality, kbControlReboot=kbControlReboot, kbWirelessPollTimeouts=kbWirelessPollTimeouts, kbWirelessStationEntry=kbWirelessStationEntry, kbCIbyMacMACAddress=kbCIbyMacMACAddress, kbWirelessStationReTransmits=kbWirelessStationReTransmits, kbWirelessPoll=kbWirelessPoll, kbCIbyNumberSNRAverage=kbCIbyNumberSNRAverage, kbClientInfo=kbClientInfo)
