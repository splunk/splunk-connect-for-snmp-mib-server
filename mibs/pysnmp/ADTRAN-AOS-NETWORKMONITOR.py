#
# PySNMP MIB module ADTRAN-AOS-NETWORKMONITOR (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ADTRAN-AOS-NETWORKMONITOR
# Produced by pysmi-0.3.4 at Mon Apr 29 16:58:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
adGenAOSConformance, adGenAOSRouter = mibBuilder.importSymbols("ADTRAN-AOS", "adGenAOSConformance", "adGenAOSRouter")
adIdentity, = mibBuilder.importSymbols("ADTRAN-MIB", "adIdentity")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64, IpAddress, Unsigned32, Gauge32, NotificationType, MibIdentifier, Counter32, ModuleIdentity, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64", "IpAddress", "Unsigned32", "Gauge32", "NotificationType", "MibIdentifier", "Counter32", "ModuleIdentity", "Bits", "iso")
TruthValue, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "DisplayString")
adGenAOSNetMonMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 664, 6, 10000, 53, 2, 2))
adGenAOSNetMonMib.setRevisions(('2010-10-27 00:00', '2009-01-20 00:00', '2008-09-30 00:00', '2008-08-12 00:00', '2008-06-25 00:00', '2007-08-23 00:00',))
if mibBuilder.loadTexts: adGenAOSNetMonMib.setLastUpdated('201010270000Z')
if mibBuilder.loadTexts: adGenAOSNetMonMib.setOrganization('ADTRAN, Inc.')
adGenAOSNetMon = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2))
adGenAOSnmTrackTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 0))
adGenAOSnmProbeTableNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmProbeTableNextIndex.setStatus('current')
adGenAOSnmProbeTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 2), )
if mibBuilder.loadTexts: adGenAOSnmProbeTable.setStatus('current')
adGenAOSnmProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 2, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIndex"))
if mibBuilder.loadTexts: adGenAOSnmProbeEntry.setStatus('current')
adGenAOSnmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmIndex.setStatus('current')
adGenAOSnmName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adGenAOSnmName.setStatus('current')
adGenAOSnmType = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("icmpEcho", 1), ("tcpConnect", 2), ("httpRequest", 3), ("icmpTimeStamp", 4), ("twamp", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adGenAOSnmType.setStatus('current')
adGenAOSnmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adGenAOSnmRowStatus.setStatus('current')
adGenAOSnmConfigProbeTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3), )
if mibBuilder.loadTexts: adGenAOSnmConfigProbeTable.setStatus('current')
adGenAOSnmConfigProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIndex"))
if mibBuilder.loadTexts: adGenAOSnmConfigProbeEntry.setStatus('current')
adGenAOSnmCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmCfgName.setStatus('current')
adGenAOSnmAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmAdminStatus.setStatus('current')
adGenAOSnmPollPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmPollPeriod.setStatus('current')
adGenAOSnmTimeoutPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTimeoutPeriod.setStatus('current')
adGenAOSnmToleranceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("rate", 2), ("consecutive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmToleranceMode.setStatus('current')
adGenAOSnmFailTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmFailTolerance.setStatus('current')
adGenAOSnmPassTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmPassTolerance.setStatus('current')
adGenAOSnmToleranceTestSize = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmToleranceTestSize.setStatus('current')
adGenAOSnmClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmClearCounters.setStatus('current')
adGenAOSnmProbeStatusTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 4), )
if mibBuilder.loadTexts: adGenAOSnmProbeStatusTable.setStatus('current')
adGenAOSnmProbeStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 4, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIndex"))
if mibBuilder.loadTexts: adGenAOSnmProbeStatusEntry.setStatus('current')
adGenAOSnmStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmStatusName.setStatus('current')
adGenAOSnmTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fail", 1), ("pass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTestStatus.setStatus('current')
adGenAOSnmTestsRun = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTestsRun.setStatus('current')
adGenAOSnmTestsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTestsFailed.setStatus('current')
adGenAOSnmStatsToleranceTestSize = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmStatsToleranceTestSize.setStatus('current')
adGenAOSnmStatsToleranceTestValue = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmStatsToleranceTestValue.setStatus('current')
adGenAOSnmTimeSinceLastStatusChange = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 4, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTimeSinceLastStatusChange.setStatus('current')
adGenAOSnmCfgTwampProbeTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5), )
if mibBuilder.loadTexts: adGenAOSnmCfgTwampProbeTable.setStatus('current')
adGenAOSnmCfgTwampProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIndex"))
if mibBuilder.loadTexts: adGenAOSnmCfgTwampProbeEntry.setStatus('current')
adGenAOSnmCfgTwName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmCfgTwName.setStatus('current')
adGenAOSnmTwDestHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDestHostname.setStatus('current')
adGenAOSnmTwDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDestPort.setStatus('current')
adGenAOSnmTwSrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwSrcIP.setStatus('current')
adGenAOSnmTwSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwSrcPort.setStatus('current')
adGenAOSnmTwDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDscp.setStatus('current')
adGenAOSnmTwPaddingLen = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1462))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwPaddingLen.setStatus('current')
adGenAOSnmTwPaddingFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ascii", 1), ("hex", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwPaddingFormat.setStatus('current')
adGenAOSnmTwPaddingPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwPaddingPattern.setStatus('current')
adGenAOSnmTwDataPadType = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("zeroes", 1), ("random", 2), ("custom", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDataPadType.setStatus('current')
adGenAOSnmTwPktSendCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwPktSendCnt.setStatus('current')
adGenAOSnmTwSendScheduleType = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("periodic", 1), ("poisson", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwSendScheduleType.setStatus('current')
adGenAOSnmTwSendScheduleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwSendScheduleValue.setStatus('current')
adGenAOSnmTwIpdvAbsInMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsInMinFail.setStatus('current')
adGenAOSnmTwIpdvAbsInAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsInAvgFail.setStatus('current')
adGenAOSnmTwIpdvAbsInMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsInMaxFail.setStatus('current')
adGenAOSnmTwIpdvAbsInMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 17), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsInMinPass.setStatus('current')
adGenAOSnmTwIpdvAbsInAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 18), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsInAvgPass.setStatus('current')
adGenAOSnmTwIpdvAbsInMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 19), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsInMaxPass.setStatus('current')
adGenAOSnmTwIpdvAbsOutMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 20), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsOutMinFail.setStatus('current')
adGenAOSnmTwIpdvAbsOutAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 21), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsOutAvgFail.setStatus('current')
adGenAOSnmTwIpdvAbsOutMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 22), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsOutMaxFail.setStatus('current')
adGenAOSnmTwIpdvAbsOutMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 23), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsOutMinPass.setStatus('current')
adGenAOSnmTwIpdvAbsOutAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 24), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsOutAvgPass.setStatus('current')
adGenAOSnmTwIpdvAbsOutMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 25), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsOutMaxPass.setStatus('current')
adGenAOSnmTwIpdvAbsRtMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 26), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsRtMinFail.setStatus('current')
adGenAOSnmTwIpdvAbsRtAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 27), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsRtAvgFail.setStatus('current')
adGenAOSnmTwIpdvAbsRtMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 28), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsRtMaxFail.setStatus('current')
adGenAOSnmTwIpdvAbsRtMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 29), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsRtMinPass.setStatus('current')
adGenAOSnmTwIpdvAbsRtAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 30), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsRtAvgPass.setStatus('current')
adGenAOSnmTwIpdvAbsRtMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 31), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwIpdvAbsRtMaxPass.setStatus('current')
adGenAOSnmTwDelayInMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInMinFail.setStatus('current')
adGenAOSnmTwDelayInAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInAvgFail.setStatus('current')
adGenAOSnmTwDelayInMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInMaxFail.setStatus('current')
adGenAOSnmTwDelayInMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInMinPass.setStatus('current')
adGenAOSnmTwDelayInAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInAvgPass.setStatus('current')
adGenAOSnmTwDelayInMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 37), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInMaxPass.setStatus('current')
adGenAOSnmTwDelayOutMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutMinFail.setStatus('current')
adGenAOSnmTwDelayOutAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutAvgFail.setStatus('current')
adGenAOSnmTwDelayOutMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutMaxFail.setStatus('current')
adGenAOSnmTwDelayOutMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutMinPass.setStatus('current')
adGenAOSnmTwDelayOutAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 42), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutAvgPass.setStatus('current')
adGenAOSnmTwDelayOutMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutMaxPass.setStatus('current')
adGenAOSnmTwDelayRtMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 44), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtMinFail.setStatus('current')
adGenAOSnmTwDelayRtAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 45), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtAvgFail.setStatus('current')
adGenAOSnmTwDelayRtMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtMaxFail.setStatus('current')
adGenAOSnmTwDelayRtMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 47), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtMinPass.setStatus('current')
adGenAOSnmTwDelayRtAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 48), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtAvgPass.setStatus('current')
adGenAOSnmTwDelayRtMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtMaxPass.setStatus('current')
adGenAOSnmTwPktRtLossFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwPktRtLossFail.setStatus('current')
adGenAOSnmTwPktRtLossPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwPktRtLossPass.setStatus('current')
adGenAOSnmTwHistoryDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 5, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTwHistoryDepth.setStatus('current')
adGenAOSnmTwampHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6), )
if mibBuilder.loadTexts: adGenAOSnmTwampHistoryTable.setStatus('current')
adGenAOSnmTwampHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIndex"), (0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwSeqNum"))
if mibBuilder.loadTexts: adGenAOSnmTwampHistoryEntry.setStatus('current')
adGenAOSnmTwSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwSeqNum.setStatus('current')
adGenAOSnmTwHistoryName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwHistoryName.setStatus('current')
adGenAOSnmTwStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwStartTime.setStatus('current')
adGenAOSnmTwEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwEndTime.setStatus('current')
adGenAOSnmTwLocalSyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwLocalSyncState.setStatus('current')
adGenAOSnmTwLocalClkErr = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwLocalClkErr.setStatus('current')
adGenAOSnmTwRemoteSyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwRemoteSyncState.setStatus('current')
adGenAOSnmTwRemoteClkErr = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwRemoteClkErr.setStatus('current')
adGenAOSnmTwDelayInMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInMin.setStatus('current')
adGenAOSnmTwDelayInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInMax.setStatus('current')
adGenAOSnmTwDelayOutMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutMin.setStatus('current')
adGenAOSnmTwDelayOutMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutMax.setStatus('current')
adGenAOSnmTwDelayRtMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtMin.setStatus('current')
adGenAOSnmTwDelayRtMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtMax.setStatus('current')
adGenAOSnmTwLossRoundTrip = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwLossRoundTrip.setStatus('current')
adGenAOSnmTwDelayOutSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutSum.setStatus('current')
adGenAOSnmTwDelayOutSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutSum2.setStatus('current')
adGenAOSnmTwDelayOutNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayOutNum.setStatus('current')
adGenAOSnmTwDelayInSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInSum.setStatus('current')
adGenAOSnmTwDelayInSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInSum2.setStatus('current')
adGenAOSnmTwDelayInNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayInNum.setStatus('current')
adGenAOSnmTwDelayRtSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtSum.setStatus('current')
adGenAOSnmTwDelayRtSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtSum2.setStatus('current')
adGenAOSnmTwDelayRtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwDelayRtNum.setStatus('current')
adGenAOSnmTwIpvPosInMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosInMin.setStatus('current')
adGenAOSnmTwIpvPosInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosInMax.setStatus('current')
adGenAOSnmTwIpvPosInSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosInSum.setStatus('current')
adGenAOSnmTwIpvPosInSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosInSum2.setStatus('current')
adGenAOSnmTwIpvPosInNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosInNum.setStatus('current')
adGenAOSnmTwIpvPosOutMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosOutMin.setStatus('current')
adGenAOSnmTwIpvPosOutMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosOutMax.setStatus('current')
adGenAOSnmTwIpvPosOutSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosOutSum.setStatus('current')
adGenAOSnmTwIpvPosOutSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosOutSum2.setStatus('current')
adGenAOSnmTwIpvPosOutNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosOutNum.setStatus('current')
adGenAOSnmTwIpvPosRtMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosRtMin.setStatus('current')
adGenAOSnmTwIpvPosRtMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosRtMax.setStatus('current')
adGenAOSnmTwIpvPosRtSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosRtSum.setStatus('current')
adGenAOSnmTwIpvPosRtSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosRtSum2.setStatus('current')
adGenAOSnmTwIpvPosRtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvPosRtNum.setStatus('current')
adGenAOSnmTwIpvNegInMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegInMin.setStatus('current')
adGenAOSnmTwIpvNegInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegInMax.setStatus('current')
adGenAOSnmTwIpvNegInSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegInSum.setStatus('current')
adGenAOSnmTwIpvNegInSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegInSum2.setStatus('current')
adGenAOSnmTwIpvNegInNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegInNum.setStatus('current')
adGenAOSnmTwIpvNegOutMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegOutMin.setStatus('current')
adGenAOSnmTwIpvNegOutMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegOutMax.setStatus('current')
adGenAOSnmTwIpvNegOutSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegOutSum.setStatus('current')
adGenAOSnmTwIpvNegOutSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegOutSum2.setStatus('current')
adGenAOSnmTwIpvNegOutNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegOutNum.setStatus('current')
adGenAOSnmTwIpvNegRtMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegRtMin.setStatus('current')
adGenAOSnmTwIpvNegRtMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegRtMax.setStatus('current')
adGenAOSnmTwIpvNegRtSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegRtSum.setStatus('current')
adGenAOSnmTwIpvNegRtSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegRtSum2.setStatus('current')
adGenAOSnmTwIpvNegRtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvNegRtNum.setStatus('current')
adGenAOSnmTwIpvAbsInMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsInMin.setStatus('current')
adGenAOSnmTwIpvAbsInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsInMax.setStatus('current')
adGenAOSnmTwIpvAbsInSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsInSum.setStatus('current')
adGenAOSnmTwIpvAbsInSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsInSum2.setStatus('current')
adGenAOSnmTwIpvAbsInNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsInNum.setStatus('current')
adGenAOSnmTwIpvAbsOutMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsOutMin.setStatus('current')
adGenAOSnmTwIpvAbsOutMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsOutMax.setStatus('current')
adGenAOSnmTwIpvAbsOutSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsOutSum.setStatus('current')
adGenAOSnmTwIpvAbsOutSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsOutSum2.setStatus('current')
adGenAOSnmTwIpvAbsOutNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsOutNum.setStatus('current')
adGenAOSnmTwIpvAbsRtMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsRtMin.setStatus('current')
adGenAOSnmTwIpvAbsRtMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsRtMax.setStatus('current')
adGenAOSnmTwIpvAbsRtSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsRtSum.setStatus('current')
adGenAOSnmTwIpvAbsRtSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsRtSum2.setStatus('current')
adGenAOSnmTwIpvAbsRtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwIpvAbsRtNum.setStatus('current')
adGenAOSnmTwPktSentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 6, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwPktSentCount.setStatus('current')
adGenAOSnmCfgICMPTSProbeTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7), )
if mibBuilder.loadTexts: adGenAOSnmCfgICMPTSProbeTable.setStatus('current')
adGenAOSnmCfgICMPTSProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIndex"))
if mibBuilder.loadTexts: adGenAOSnmCfgICMPTSProbeEntry.setStatus('current')
adGenAOSnmCfgICMPTSName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmCfgICMPTSName.setStatus('current')
adGenAOSnmICMPTSDestHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDestHostname.setStatus('current')
adGenAOSnmICMPTSSrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSSrcIP.setStatus('current')
adGenAOSnmICMPTSDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDscp.setStatus('current')
adGenAOSnmICMPTSPaddingLen = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1462))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSPaddingLen.setStatus('current')
adGenAOSnmICMPTSPaddingFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ascii", 1), ("hex", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSPaddingFormat.setStatus('current')
adGenAOSnmICMPTSPaddingPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSPaddingPattern.setStatus('current')
adGenAOSnmICMPTSDataPadType = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("zeroes", 1), ("random", 2), ("custom", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDataPadType.setStatus('current')
adGenAOSnmICMPTSPktSendCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSPktSendCnt.setStatus('current')
adGenAOSnmICMPTSSendScheduleType = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("periodic", 1), ("poisson", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSSendScheduleType.setStatus('current')
adGenAOSnmICMPTSSendScheduleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSSendScheduleValue.setStatus('current')
adGenAOSnmICMPTSIpdvAbsInMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsInMinFail.setStatus('current')
adGenAOSnmICMPTSIpdvAbsInAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsInAvgFail.setStatus('current')
adGenAOSnmICMPTSIpdvAbsInMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsInMaxFail.setStatus('current')
adGenAOSnmICMPTSIpdvAbsInMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsInMinPass.setStatus('current')
adGenAOSnmICMPTSIpdvAbsInAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsInAvgPass.setStatus('current')
adGenAOSnmICMPTSIpdvAbsInMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 17), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsInMaxPass.setStatus('current')
adGenAOSnmICMPTSIpdvAbsOutMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 18), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsOutMinFail.setStatus('current')
adGenAOSnmICMPTSIpdvAbsOutAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 19), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsOutAvgFail.setStatus('current')
adGenAOSnmICMPTSIpdvAbsOutMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 20), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsOutMaxFail.setStatus('current')
adGenAOSnmICMPTSIpdvAbsOutMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 21), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsOutMinPass.setStatus('current')
adGenAOSnmICMPTSIpdvAbsOutAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 22), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsOutAvgPass.setStatus('current')
adGenAOSnmICMPTSIpdvAbsOutMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 23), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsOutMaxPass.setStatus('current')
adGenAOSnmICMPTSIpdvAbsRtMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 24), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsRtMinFail.setStatus('current')
adGenAOSnmICMPTSIpdvAbsRtAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 25), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsRtAvgFail.setStatus('current')
adGenAOSnmICMPTSIpdvAbsRtMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 26), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsRtMaxFail.setStatus('current')
adGenAOSnmICMPTSIpdvAbsRtMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 27), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsRtMinPass.setStatus('current')
adGenAOSnmICMPTSIpdvAbsRtAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 28), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsRtAvgPass.setStatus('current')
adGenAOSnmICMPTSIpdvAbsRtMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 29), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpdvAbsRtMaxPass.setStatus('current')
adGenAOSnmICMPTSDelayInMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInMinFail.setStatus('current')
adGenAOSnmICMPTSDelayInAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInAvgFail.setStatus('current')
adGenAOSnmICMPTSDelayInMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInMaxFail.setStatus('current')
adGenAOSnmICMPTSDelayInMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInMinPass.setStatus('current')
adGenAOSnmICMPTSDelayInAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInAvgPass.setStatus('current')
adGenAOSnmICMPTSDelayInMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInMaxPass.setStatus('current')
adGenAOSnmICMPTSDelayOutMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutMinFail.setStatus('current')
adGenAOSnmICMPTSDelayOutAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 37), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutAvgFail.setStatus('current')
adGenAOSnmICMPTSDelayOutMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutMaxFail.setStatus('current')
adGenAOSnmICMPTSDelayOutMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutMinPass.setStatus('current')
adGenAOSnmICMPTSDelayOutAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutAvgPass.setStatus('current')
adGenAOSnmICMPTSDelayOutMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutMaxPass.setStatus('current')
adGenAOSnmICMPTSDelayRtMinFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 42), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtMinFail.setStatus('current')
adGenAOSnmICMPTSDelayRtAvgFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtAvgFail.setStatus('current')
adGenAOSnmICMPTSDelayRtMaxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 44), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtMaxFail.setStatus('current')
adGenAOSnmICMPTSDelayRtMinPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 45), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtMinPass.setStatus('current')
adGenAOSnmICMPTSDelayRtAvgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtAvgPass.setStatus('current')
adGenAOSnmICMPTSDelayRtMaxPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 47), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtMaxPass.setStatus('current')
adGenAOSnmICMPTSPktRtLossFail = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSPktRtLossFail.setStatus('current')
adGenAOSnmICMPTSPktRtLossPass = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSPktRtLossPass.setStatus('current')
adGenAOSnmICMPTSHistoryDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 7, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSHistoryDepth.setStatus('current')
adGenAOSnmICMPTSHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8), )
if mibBuilder.loadTexts: adGenAOSnmICMPTSHistoryTable.setStatus('current')
adGenAOSnmICMPTSHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIndex"), (0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSSeqNum"))
if mibBuilder.loadTexts: adGenAOSnmICMPTSHistoryEntry.setStatus('current')
adGenAOSnmICMPTSSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSSeqNum.setStatus('current')
adGenAOSnmICMPTSHistoryName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSHistoryName.setStatus('current')
adGenAOSnmICMPTSStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSStartTime.setStatus('current')
adGenAOSnmICMPTSEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSEndTime.setStatus('current')
adGenAOSnmICMPTSDelayInMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInMin.setStatus('current')
adGenAOSnmICMPTSDelayInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInMax.setStatus('current')
adGenAOSnmICMPTSDelayOutMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutMin.setStatus('current')
adGenAOSnmICMPTSDelayOutMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutMax.setStatus('current')
adGenAOSnmICMPTSDelayRtMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtMin.setStatus('current')
adGenAOSnmICMPTSDelayRtMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtMax.setStatus('current')
adGenAOSnmICMPTSLossRoundTrip = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSLossRoundTrip.setStatus('current')
adGenAOSnmICMPTSDelayOutSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutSum.setStatus('current')
adGenAOSnmICMPTSDelayOutSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutSum2.setStatus('current')
adGenAOSnmICMPTSDelayOutNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayOutNum.setStatus('current')
adGenAOSnmICMPTSDelayInSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInSum.setStatus('current')
adGenAOSnmICMPTSDelayInSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInSum2.setStatus('current')
adGenAOSnmICMPTSDelayInNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayInNum.setStatus('current')
adGenAOSnmICMPTSDelayRtSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtSum.setStatus('current')
adGenAOSnmICMPTSDelayRtSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtSum2.setStatus('current')
adGenAOSnmICMPTSDelayRtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSDelayRtNum.setStatus('current')
adGenAOSnmICMPTSIpvPosInMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosInMin.setStatus('current')
adGenAOSnmICMPTSIpvPosInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosInMax.setStatus('current')
adGenAOSnmICMPTSIpvPosInSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosInSum.setStatus('current')
adGenAOSnmICMPTSIpvPosInSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosInSum2.setStatus('current')
adGenAOSnmICMPTSIpvPosInNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosInNum.setStatus('current')
adGenAOSnmICMPTSIpvPosOutMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosOutMin.setStatus('current')
adGenAOSnmICMPTSIpvPosOutMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosOutMax.setStatus('current')
adGenAOSnmICMPTSIpvPosOutSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosOutSum.setStatus('current')
adGenAOSnmICMPTSIpvPosOutSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosOutSum2.setStatus('current')
adGenAOSnmICMPTSIpvPosOutNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosOutNum.setStatus('current')
adGenAOSnmICMPTSIpvPosRtMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosRtMin.setStatus('current')
adGenAOSnmICMPTSIpvPosRtMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosRtMax.setStatus('current')
adGenAOSnmICMPTSIpvPosRtSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosRtSum.setStatus('current')
adGenAOSnmICMPTSIpvPosRtSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosRtSum2.setStatus('current')
adGenAOSnmICMPTSIpvPosRtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvPosRtNum.setStatus('current')
adGenAOSnmICMPTSIpvNegInMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegInMin.setStatus('current')
adGenAOSnmICMPTSIpvNegInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegInMax.setStatus('current')
adGenAOSnmICMPTSIpvNegInSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegInSum.setStatus('current')
adGenAOSnmICMPTSIpvNegInSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegInSum2.setStatus('current')
adGenAOSnmICMPTSIpvNegInNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegInNum.setStatus('current')
adGenAOSnmICMPTSIpvNegOutMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegOutMin.setStatus('current')
adGenAOSnmICMPTSIpvNegOutMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegOutMax.setStatus('current')
adGenAOSnmICMPTSIpvNegOutSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegOutSum.setStatus('current')
adGenAOSnmICMPTSIpvNegOutSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegOutSum2.setStatus('current')
adGenAOSnmICMPTSIpvNegOutNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegOutNum.setStatus('current')
adGenAOSnmICMPTSIpvNegRtMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegRtMin.setStatus('current')
adGenAOSnmICMPTSIpvNegRtMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegRtMax.setStatus('current')
adGenAOSnmICMPTSIpvNegRtSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegRtSum.setStatus('current')
adGenAOSnmICMPTSIpvNegRtSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegRtSum2.setStatus('current')
adGenAOSnmICMPTSIpvNegRtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvNegRtNum.setStatus('current')
adGenAOSnmICMPTSIpvAbsInMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsInMin.setStatus('current')
adGenAOSnmICMPTSIpvAbsInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsInMax.setStatus('current')
adGenAOSnmICMPTSIpvAbsInSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsInSum.setStatus('current')
adGenAOSnmICMPTSIpvAbsInSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsInSum2.setStatus('current')
adGenAOSnmICMPTSIpvAbsInNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsInNum.setStatus('current')
adGenAOSnmICMPTSIpvAbsOutMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsOutMin.setStatus('current')
adGenAOSnmICMPTSIpvAbsOutMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsOutMax.setStatus('current')
adGenAOSnmICMPTSIpvAbsOutSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsOutSum.setStatus('current')
adGenAOSnmICMPTSIpvAbsOutSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsOutSum2.setStatus('current')
adGenAOSnmICMPTSIpvAbsOutNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsOutNum.setStatus('current')
adGenAOSnmICMPTSIpvAbsRtMin = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsRtMin.setStatus('current')
adGenAOSnmICMPTSIpvAbsRtMax = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsRtMax.setStatus('current')
adGenAOSnmICMPTSIpvAbsRtSum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsRtSum.setStatus('current')
adGenAOSnmICMPTSIpvAbsRtSum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsRtSum2.setStatus('current')
adGenAOSnmICMPTSIpvAbsRtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSIpvAbsRtNum.setStatus('current')
adGenAOSnmICMPTSPktSentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 8, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSPktSentCount.setStatus('current')
adGenAOSnmICMPTSResponder = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmICMPTSResponder.setStatus('current')
adGenAOSnmTWAMPResponder = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmTWAMPResponder.setStatus('current')
adGenAOSnmICMPTSResponderStatsTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 11), )
if mibBuilder.loadTexts: adGenAOSnmICMPTSResponderStatsTable.setStatus('current')
adGenAOSnmICMPTSResponderStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 11, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSResponderStatsIndex"))
if mibBuilder.loadTexts: adGenAOSnmICMPTSResponderStatsEntry.setStatus('current')
adGenAOSnmICMPTSResponderStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 11, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSResponderStatsIndex.setStatus('current')
adGenAOSnmICMPTSResponderPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSResponderPacketsReceived.setStatus('current')
adGenAOSnmICMPTSResponderPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmICMPTSResponderPacketsSent.setStatus('current')
adGenAOSnmClearICMPTSResponderCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmClearICMPTSResponderCounters.setStatus('current')
adGenAOSnmTwampResponderStatsTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 12), )
if mibBuilder.loadTexts: adGenAOSnmTwampResponderStatsTable.setStatus('current')
adGenAOSnmTwampResponderStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 12, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampResponderStatsIndex"))
if mibBuilder.loadTexts: adGenAOSnmTwampResponderStatsEntry.setStatus('current')
adGenAOSnmTwampResponderStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 12, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwampResponderStatsIndex.setStatus('current')
adGenAOSnmTwampResponderPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwampResponderPacketsReceived.setStatus('current')
adGenAOSnmTwampResponderPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwampResponderPacketsSent.setStatus('current')
adGenAOSnmTwampResponderSessionClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwampResponderSessionClosed.setStatus('current')
adGenAOSnmTwampResponderSessionOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwampResponderSessionOpened.setStatus('current')
adGenAOSnmTwampResponderSessionRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTwampResponderSessionRejected.setStatus('current')
adGenAOSnmClearTwampResponderCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmClearTwampResponderCounters.setStatus('current')
adGenAOSnmCfgIEProbeTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 13), )
if mibBuilder.loadTexts: adGenAOSnmCfgIEProbeTable.setStatus('current')
adGenAOSnmCfgIEProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 13, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIndex"))
if mibBuilder.loadTexts: adGenAOSnmCfgIEProbeEntry.setStatus('current')
adGenAOSnmCfgIEName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 13, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmCfgIEName.setStatus('current')
adGenAOSnmIEDestHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 13, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmIEDestHostname.setStatus('current')
adGenAOSnmIESrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 13, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmIESrcIP.setStatus('current')
adGenAOSnmIEPacketLength = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1462))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmIEPacketLength.setStatus('current')
adGenAOSnmIEPacketPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 13, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSnmIEPacketPattern.setStatus('current')
adGenAOSnmTrackTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 14), )
if mibBuilder.loadTexts: adGenAOSnmTrackTable.setStatus('current')
adGenAOSnmTrackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 14, 1), ).setIndexNames((0, "ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackIndex"))
if mibBuilder.loadTexts: adGenAOSnmTrackEntry.setStatus('current')
adGenAOSnmTrackIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTrackIndex.setStatus('current')
adGenAOSnmTrackName = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 14, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSnmTrackName.setStatus('current')
adGenAOSnmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7))
adGenAOSnmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1))
adGenAOSnmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 2))
adGenAOSnmFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 2, 1)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmProbeGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmProbeTableNextIndexGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmConfigProbeGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmProbeStatusGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgTwampProbeGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampHistoryGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgICMPTSProbeGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSHistoryGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSResponderGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTWAMPResponderGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSResponderStatsGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampResponderStatsGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgIEProbeGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmFullCompliance = adGenAOSnmFullCompliance.setStatus('current')
adGenAOSnmReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 2, 2)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmProbeTableNextIndexGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmConfigProbeGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmProbeStatusGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgTwampProbeGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampHistoryGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgICMPTSProbeGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSHistoryGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSResponderGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTWAMPResponderGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSResponderStatsGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampResponderStatsGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgIEProbeGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackGroup"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmReadOnlyCompliance = adGenAOSnmReadOnlyCompliance.setStatus('current')
adGenAOSnmProbeTableNextIndexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 1)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmProbeTableNextIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmProbeTableNextIndexGroup = adGenAOSnmProbeTableNextIndexGroup.setStatus('current')
adGenAOSnmProbeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 2)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIndex"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmName"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmType"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmProbeGroup = adGenAOSnmProbeGroup.setStatus('current')
adGenAOSnmConfigProbeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 3)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgName"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmAdminStatus"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmPollPeriod"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTimeoutPeriod"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmToleranceMode"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmFailTolerance"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmPassTolerance"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmToleranceTestSize"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmClearCounters"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmConfigProbeGroup = adGenAOSnmConfigProbeGroup.setStatus('current')
adGenAOSnmProbeStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 4)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmStatusName"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTestStatus"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTestsRun"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTestsFailed"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmStatsToleranceTestSize"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmStatsToleranceTestValue"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTimeSinceLastStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmProbeStatusGroup = adGenAOSnmProbeStatusGroup.setStatus('current')
adGenAOSnmCfgTwampProbeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 5)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgTwName"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDestHostname"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDestPort"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwSrcIP"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwSrcPort"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDscp"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwPaddingLen"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwPaddingFormat"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwPaddingPattern"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDataPadType"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwPktSendCnt"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwSendScheduleType"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwSendScheduleValue"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsInMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsInAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsInMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsInMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsInAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsInMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsOutMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsOutAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsOutMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsOutMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsOutAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsOutMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsRtMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsRtAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsRtMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsRtMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsRtAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpdvAbsRtMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwPktRtLossFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwPktRtLossPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwHistoryDepth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmCfgTwampProbeGroup = adGenAOSnmCfgTwampProbeGroup.setStatus('current')
adGenAOSnmTwampHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 6)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwSeqNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwHistoryName"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwStartTime"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwEndTime"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwLocalSyncState"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwLocalClkErr"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwRemoteSyncState"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwRemoteClkErr"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwLossRoundTrip"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwDelayRtNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosRtSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvPosRtNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegRtSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvNegRtNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsRtSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwIpvAbsRtNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwPktSentCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmTwampHistoryGroup = adGenAOSnmTwampHistoryGroup.setStatus('current')
adGenAOSnmCfgICMPTSProbeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 7)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgICMPTSName"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDestHostname"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSSrcIP"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDscp"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSPaddingLen"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSPaddingFormat"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSPaddingPattern"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDataPadType"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSPktSendCnt"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSSendScheduleType"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSSendScheduleValue"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsInMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsInAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsInMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsInMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsInAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsInMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsOutMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsOutAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsOutMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsOutMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsOutAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsOutMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsRtMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsRtAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsRtMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsRtMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsRtAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpdvAbsRtMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtMinFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtAvgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtMaxFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtMinPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtAvgPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtMaxPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSPktRtLossFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSPktRtLossPass"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSHistoryDepth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmCfgICMPTSProbeGroup = adGenAOSnmCfgICMPTSProbeGroup.setStatus('current')
adGenAOSnmICMPTSHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 8)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSSeqNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSHistoryName"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSStartTime"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSEndTime"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSLossRoundTrip"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSDelayRtNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvPosRtNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegRtSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvNegRtNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsInMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsInMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsInSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsInSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsInNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsOutMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsOutMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsOutSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsOutSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsOutNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsRtMin"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsRtMax"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsRtSum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsRtSum2"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSIpvAbsRtNum"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSPktSentCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmICMPTSHistoryGroup = adGenAOSnmICMPTSHistoryGroup.setStatus('current')
adGenAOSnmICMPTSResponderGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 9)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSResponder"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmICMPTSResponderGroup = adGenAOSnmICMPTSResponderGroup.setStatus('current')
adGenAOSnmTWAMPResponderGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 10)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTWAMPResponder"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmTWAMPResponderGroup = adGenAOSnmTWAMPResponderGroup.setStatus('current')
adGenAOSnmICMPTSResponderStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 11)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSResponderStatsIndex"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSResponderPacketsReceived"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmICMPTSResponderPacketsSent"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmClearICMPTSResponderCounters"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmICMPTSResponderStatsGroup = adGenAOSnmICMPTSResponderStatsGroup.setStatus('current')
adGenAOSnmTwampResponderStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 12)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampResponderStatsIndex"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampResponderPacketsReceived"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampResponderPacketsSent"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampResponderSessionClosed"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampResponderSessionOpened"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTwampResponderSessionRejected"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmClearTwampResponderCounters"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmTwampResponderStatsGroup = adGenAOSnmTwampResponderStatsGroup.setStatus('current')
adGenAOSnmCfgIEProbeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 13)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmCfgIEName"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIEDestHostname"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIESrcIP"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIEPacketLength"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmIEPacketPattern"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmCfgIEProbeGroup = adGenAOSnmCfgIEProbeGroup.setStatus('current')
adGenAOSnmTrackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 14)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackIndex"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmTrackGroup = adGenAOSnmTrackGroup.setStatus('current')
adGenAOSnmNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 7, 1, 15)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackStateChgFail"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackStateChgPass"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSnmNotificationGroup = adGenAOSnmNotificationGroup.setStatus('current')
adGenAOSnmTrackStateChgFail = NotificationType((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 0, 1)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackIndex"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackName"))
if mibBuilder.loadTexts: adGenAOSnmTrackStateChgFail.setStatus('current')
adGenAOSnmTrackStateChgPass = NotificationType((1, 3, 6, 1, 4, 1, 664, 5, 53, 2, 2, 0, 2)).setObjects(("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackIndex"), ("ADTRAN-AOS-NETWORKMONITOR", "adGenAOSnmTrackName"))
if mibBuilder.loadTexts: adGenAOSnmTrackStateChgPass.setStatus('current')
mibBuilder.exportSymbols("ADTRAN-AOS-NETWORKMONITOR", adGenAOSnmProbeTableNextIndex=adGenAOSnmProbeTableNextIndex, adGenAOSnmTwSrcIP=adGenAOSnmTwSrcIP, adGenAOSnmICMPTSIpvPosOutSum2=adGenAOSnmICMPTSIpvPosOutSum2, adGenAOSnmTwIpdvAbsRtMaxPass=adGenAOSnmTwIpdvAbsRtMaxPass, adGenAOSnmICMPTSIpvAbsRtSum2=adGenAOSnmICMPTSIpvAbsRtSum2, adGenAOSnmTwDelayInMinFail=adGenAOSnmTwDelayInMinFail, adGenAOSnmTwIpdvAbsRtMinFail=adGenAOSnmTwIpdvAbsRtMinFail, adGenAOSnmTwPktRtLossPass=adGenAOSnmTwPktRtLossPass, adGenAOSnmFailTolerance=adGenAOSnmFailTolerance, adGenAOSnmProbeEntry=adGenAOSnmProbeEntry, adGenAOSnmTwDelayOutMin=adGenAOSnmTwDelayOutMin, adGenAOSnmTwDelayOutMaxPass=adGenAOSnmTwDelayOutMaxPass, adGenAOSnmProbeTableNextIndexGroup=adGenAOSnmProbeTableNextIndexGroup, adGenAOSnmICMPTSIpvPosRtNum=adGenAOSnmICMPTSIpvPosRtNum, adGenAOSnmTwDelayOutAvgFail=adGenAOSnmTwDelayOutAvgFail, adGenAOSnmTwDelayRtSum=adGenAOSnmTwDelayRtSum, adGenAOSnmICMPTSIpvAbsInSum2=adGenAOSnmICMPTSIpvAbsInSum2, adGenAOSnmICMPTSDelayOutMaxFail=adGenAOSnmICMPTSDelayOutMaxFail, adGenAOSnmICMPTSIpvAbsInMin=adGenAOSnmICMPTSIpvAbsInMin, adGenAOSnmICMPTSDelayOutSum2=adGenAOSnmICMPTSDelayOutSum2, adGenAOSnmICMPTSIpvAbsOutSum=adGenAOSnmICMPTSIpvAbsOutSum, adGenAOSnmTwampResponderSessionOpened=adGenAOSnmTwampResponderSessionOpened, adGenAOSnmTwDataPadType=adGenAOSnmTwDataPadType, adGenAOSnmICMPTSIpvPosOutMax=adGenAOSnmICMPTSIpvPosOutMax, adGenAOSnmTwIpdvAbsOutAvgFail=adGenAOSnmTwIpdvAbsOutAvgFail, adGenAOSnmStatsToleranceTestSize=adGenAOSnmStatsToleranceTestSize, adGenAOSnmICMPTSIpvPosOutSum=adGenAOSnmICMPTSIpvPosOutSum, adGenAOSnmTwIpvPosInSum2=adGenAOSnmTwIpvPosInSum2, adGenAOSnmTwDelayInAvgFail=adGenAOSnmTwDelayInAvgFail, adGenAOSnmGroups=adGenAOSnmGroups, adGenAOSnmTwIpvPosOutMin=adGenAOSnmTwIpvPosOutMin, adGenAOSnmICMPTSDelayOutMinPass=adGenAOSnmICMPTSDelayOutMinPass, adGenAOSnmICMPTSIpvNegInSum2=adGenAOSnmICMPTSIpvNegInSum2, adGenAOSnmTwDelayOutSum2=adGenAOSnmTwDelayOutSum2, adGenAOSnmTwIpvNegInSum2=adGenAOSnmTwIpvNegInSum2, adGenAOSnmTwDelayInMin=adGenAOSnmTwDelayInMin, adGenAOSnmICMPTSHistoryEntry=adGenAOSnmICMPTSHistoryEntry, adGenAOSnmICMPTSIpdvAbsInMaxPass=adGenAOSnmICMPTSIpdvAbsInMaxPass, adGenAOSnmTwIpvNegRtSum2=adGenAOSnmTwIpvNegRtSum2, adGenAOSnmTwDelayRtAvgFail=adGenAOSnmTwDelayRtAvgFail, adGenAOSnmTwIpvPosOutNum=adGenAOSnmTwIpvPosOutNum, adGenAOSnmICMPTSResponderPacketsSent=adGenAOSnmICMPTSResponderPacketsSent, adGenAOSnmTwIpdvAbsOutMinPass=adGenAOSnmTwIpdvAbsOutMinPass, adGenAOSnmICMPTSIpvAbsInSum=adGenAOSnmICMPTSIpvAbsInSum, adGenAOSnmTwIpvPosInMin=adGenAOSnmTwIpvPosInMin, adGenAOSnmIndex=adGenAOSnmIndex, adGenAOSnmTwIpdvAbsInMaxPass=adGenAOSnmTwIpdvAbsInMaxPass, adGenAOSnmICMPTSPktRtLossFail=adGenAOSnmICMPTSPktRtLossFail, adGenAOSnmTestStatus=adGenAOSnmTestStatus, adGenAOSnmTwIpdvAbsInMaxFail=adGenAOSnmTwIpdvAbsInMaxFail, adGenAOSnmTrackEntry=adGenAOSnmTrackEntry, adGenAOSnmICMPTSDataPadType=adGenAOSnmICMPTSDataPadType, adGenAOSnmICMPTSIpvAbsOutMax=adGenAOSnmICMPTSIpvAbsOutMax, adGenAOSnmTwIpvAbsInSum2=adGenAOSnmTwIpvAbsInSum2, adGenAOSnmTwIpvNegRtMin=adGenAOSnmTwIpvNegRtMin, adGenAOSnmConfigProbeGroup=adGenAOSnmConfigProbeGroup, PYSNMP_MODULE_ID=adGenAOSNetMonMib, adGenAOSnmICMPTSIpdvAbsRtMaxPass=adGenAOSnmICMPTSIpdvAbsRtMaxPass, adGenAOSnmICMPTSDelayInMinFail=adGenAOSnmICMPTSDelayInMinFail, adGenAOSnmCfgTwampProbeTable=adGenAOSnmCfgTwampProbeTable, adGenAOSnmICMPTSIpdvAbsRtAvgPass=adGenAOSnmICMPTSIpdvAbsRtAvgPass, adGenAOSnmTwIpvAbsInMax=adGenAOSnmTwIpvAbsInMax, adGenAOSnmICMPTSIpvPosOutMin=adGenAOSnmICMPTSIpvPosOutMin, adGenAOSnmCfgIEProbeGroup=adGenAOSnmCfgIEProbeGroup, adGenAOSnmToleranceMode=adGenAOSnmToleranceMode, adGenAOSnmICMPTSResponder=adGenAOSnmICMPTSResponder, adGenAOSnmICMPTSDelayInMax=adGenAOSnmICMPTSDelayInMax, adGenAOSnmTwHistoryName=adGenAOSnmTwHistoryName, adGenAOSnmICMPTSDestHostname=adGenAOSnmICMPTSDestHostname, adGenAOSnmTwIpdvAbsRtMaxFail=adGenAOSnmTwIpdvAbsRtMaxFail, adGenAOSnmTwIpvNegRtSum=adGenAOSnmTwIpvNegRtSum, adGenAOSnmICMPTSIpvAbsOutSum2=adGenAOSnmICMPTSIpvAbsOutSum2, adGenAOSnmTwIpvNegInSum=adGenAOSnmTwIpvNegInSum, adGenAOSnmTwIpvAbsOutMin=adGenAOSnmTwIpvAbsOutMin, adGenAOSnmICMPTSIpvPosRtMax=adGenAOSnmICMPTSIpvPosRtMax, adGenAOSnmICMPTSDelayInNum=adGenAOSnmICMPTSDelayInNum, adGenAOSnmICMPTSIpvAbsRtNum=adGenAOSnmICMPTSIpvAbsRtNum, adGenAOSnmICMPTSSeqNum=adGenAOSnmICMPTSSeqNum, adGenAOSnmTwDelayRtMinFail=adGenAOSnmTwDelayRtMinFail, adGenAOSnmICMPTSIpvPosOutNum=adGenAOSnmICMPTSIpvPosOutNum, adGenAOSnmTwPaddingPattern=adGenAOSnmTwPaddingPattern, adGenAOSnmTwIpvPosInSum=adGenAOSnmTwIpvPosInSum, adGenAOSnmTwIpvNegInNum=adGenAOSnmTwIpvNegInNum, adGenAOSnmTwIpvPosInMax=adGenAOSnmTwIpvPosInMax, adGenAOSnmTwDelayInSum=adGenAOSnmTwDelayInSum, adGenAOSnmICMPTSDelayRtMin=adGenAOSnmICMPTSDelayRtMin, adGenAOSnmICMPTSDelayRtSum2=adGenAOSnmICMPTSDelayRtSum2, adGenAOSnmTwDelayRtMaxPass=adGenAOSnmTwDelayRtMaxPass, adGenAOSnmTwDestHostname=adGenAOSnmTwDestHostname, adGenAOSnmICMPTSDelayRtSum=adGenAOSnmICMPTSDelayRtSum, adGenAOSnmTwSrcPort=adGenAOSnmTwSrcPort, adGenAOSnmCompliances=adGenAOSnmCompliances, adGenAOSnmICMPTSIpvNegOutNum=adGenAOSnmICMPTSIpvNegOutNum, adGenAOSnmICMPTSIpdvAbsOutMinFail=adGenAOSnmICMPTSIpdvAbsOutMinFail, adGenAOSnmICMPTSIpdvAbsOutMinPass=adGenAOSnmICMPTSIpdvAbsOutMinPass, adGenAOSnmICMPTSIpvAbsRtMax=adGenAOSnmICMPTSIpvAbsRtMax, adGenAOSnmTwPaddingLen=adGenAOSnmTwPaddingLen, adGenAOSnmTwIpvNegRtNum=adGenAOSnmTwIpvNegRtNum, adGenAOSnmICMPTSResponderPacketsReceived=adGenAOSnmICMPTSResponderPacketsReceived, adGenAOSnmICMPTSIpvNegOutMax=adGenAOSnmICMPTSIpvNegOutMax, adGenAOSnmICMPTSDelayOutMax=adGenAOSnmICMPTSDelayOutMax, adGenAOSnmCfgIEProbeEntry=adGenAOSnmCfgIEProbeEntry, adGenAOSnmICMPTSIpvAbsRtSum=adGenAOSnmICMPTSIpvAbsRtSum, adGenAOSnmTimeoutPeriod=adGenAOSnmTimeoutPeriod, adGenAOSnmICMPTSPaddingLen=adGenAOSnmICMPTSPaddingLen, adGenAOSnmICMPTSIpvNegRtMax=adGenAOSnmICMPTSIpvNegRtMax, adGenAOSnmTwampResponderSessionRejected=adGenAOSnmTwampResponderSessionRejected, adGenAOSnmTwIpvNegOutSum=adGenAOSnmTwIpvNegOutSum, adGenAOSnmTwIpvPosRtSum2=adGenAOSnmTwIpvPosRtSum2, adGenAOSnmClearTwampResponderCounters=adGenAOSnmClearTwampResponderCounters, adGenAOSnmTwLocalClkErr=adGenAOSnmTwLocalClkErr, adGenAOSnmTwDelayRtMin=adGenAOSnmTwDelayRtMin, adGenAOSnmICMPTSIpvPosRtSum=adGenAOSnmICMPTSIpvPosRtSum, adGenAOSnmICMPTSDelayInSum2=adGenAOSnmICMPTSDelayInSum2, adGenAOSnmICMPTSDelayRtNum=adGenAOSnmICMPTSDelayRtNum, adGenAOSnmTwIpvPosRtNum=adGenAOSnmTwIpvPosRtNum, adGenAOSnmTwIpvPosRtSum=adGenAOSnmTwIpvPosRtSum, adGenAOSnmTwampResponderSessionClosed=adGenAOSnmTwampResponderSessionClosed, adGenAOSnmTwIpvNegRtMax=adGenAOSnmTwIpvNegRtMax, adGenAOSnmICMPTSIpvPosRtMin=adGenAOSnmICMPTSIpvPosRtMin, adGenAOSnmTwPktSendCnt=adGenAOSnmTwPktSendCnt, adGenAOSnmICMPTSHistoryTable=adGenAOSnmICMPTSHistoryTable, adGenAOSnmTwDelayInMax=adGenAOSnmTwDelayInMax, adGenAOSnmReadOnlyCompliance=adGenAOSnmReadOnlyCompliance, adGenAOSnmICMPTSDelayRtMaxFail=adGenAOSnmICMPTSDelayRtMaxFail, adGenAOSnmTwDelayRtNum=adGenAOSnmTwDelayRtNum, adGenAOSnmTwIpvPosRtMax=adGenAOSnmTwIpvPosRtMax, adGenAOSnmICMPTSDelayRtAvgFail=adGenAOSnmICMPTSDelayRtAvgFail, adGenAOSnmTrackName=adGenAOSnmTrackName, adGenAOSnmPassTolerance=adGenAOSnmPassTolerance, adGenAOSnmTwDelayInMinPass=adGenAOSnmTwDelayInMinPass, adGenAOSnmTwStartTime=adGenAOSnmTwStartTime, adGenAOSnmICMPTSIpdvAbsRtMinFail=adGenAOSnmICMPTSIpdvAbsRtMinFail, adGenAOSnmICMPTSIpdvAbsRtMinPass=adGenAOSnmICMPTSIpdvAbsRtMinPass, adGenAOSnmClearICMPTSResponderCounters=adGenAOSnmClearICMPTSResponderCounters, adGenAOSnmTwDelayOutMinPass=adGenAOSnmTwDelayOutMinPass, adGenAOSnmTwDelayInAvgPass=adGenAOSnmTwDelayInAvgPass, adGenAOSnmTwIpvAbsRtSum=adGenAOSnmTwIpvAbsRtSum, adGenAOSnmCfgName=adGenAOSnmCfgName, adGenAOSnmICMPTSIpvNegInSum=adGenAOSnmICMPTSIpvNegInSum, adGenAOSnmConformance=adGenAOSnmConformance, adGenAOSnmTwIpdvAbsRtAvgPass=adGenAOSnmTwIpdvAbsRtAvgPass, adGenAOSnmTwIpvPosOutSum2=adGenAOSnmTwIpvPosOutSum2, adGenAOSnmTwLocalSyncState=adGenAOSnmTwLocalSyncState, adGenAOSnmTwIpvAbsRtSum2=adGenAOSnmTwIpvAbsRtSum2, adGenAOSnmTrackIndex=adGenAOSnmTrackIndex, adGenAOSnmCfgIEProbeTable=adGenAOSnmCfgIEProbeTable, adGenAOSnmICMPTSDelayInAvgFail=adGenAOSnmICMPTSDelayInAvgFail, adGenAOSnmConfigProbeEntry=adGenAOSnmConfigProbeEntry, adGenAOSnmTwDelayOutMax=adGenAOSnmTwDelayOutMax, adGenAOSnmTwIpvAbsOutMax=adGenAOSnmTwIpvAbsOutMax, adGenAOSnmTwDelayRtSum2=adGenAOSnmTwDelayRtSum2, adGenAOSnmICMPTSDelayOutAvgFail=adGenAOSnmICMPTSDelayOutAvgFail, adGenAOSnmTwIpvNegInMax=adGenAOSnmTwIpvNegInMax, adGenAOSnmICMPTSEndTime=adGenAOSnmICMPTSEndTime, adGenAOSnmICMPTSDelayOutMaxPass=adGenAOSnmICMPTSDelayOutMaxPass, adGenAOSnmCfgICMPTSName=adGenAOSnmCfgICMPTSName, adGenAOSnmTwDelayOutMinFail=adGenAOSnmTwDelayOutMinFail, adGenAOSnmICMPTSIpdvAbsOutAvgFail=adGenAOSnmICMPTSIpdvAbsOutAvgFail, adGenAOSnmICMPTSIpdvAbsOutMaxPass=adGenAOSnmICMPTSIpdvAbsOutMaxPass, adGenAOSnmTestsRun=adGenAOSnmTestsRun, adGenAOSnmTwIpvPosRtMin=adGenAOSnmTwIpvPosRtMin, adGenAOSnmICMPTSResponderStatsGroup=adGenAOSnmICMPTSResponderStatsGroup, adGenAOSnmICMPTSIpvNegInNum=adGenAOSnmICMPTSIpvNegInNum, adGenAOSnmTwIpdvAbsInAvgFail=adGenAOSnmTwIpdvAbsInAvgFail, adGenAOSnmTwIpdvAbsOutMaxPass=adGenAOSnmTwIpdvAbsOutMaxPass, adGenAOSnmICMPTSResponderStatsEntry=adGenAOSnmICMPTSResponderStatsEntry, adGenAOSnmAdminStatus=adGenAOSnmAdminStatus, adGenAOSnmTwIpvAbsRtMin=adGenAOSnmTwIpvAbsRtMin, adGenAOSnmTwDelayInNum=adGenAOSnmTwDelayInNum, adGenAOSnmCfgTwampProbeGroup=adGenAOSnmCfgTwampProbeGroup, adGenAOSnmRowStatus=adGenAOSnmRowStatus, adGenAOSnmTwHistoryDepth=adGenAOSnmTwHistoryDepth, adGenAOSnmTwDestPort=adGenAOSnmTwDestPort, adGenAOSnmICMPTSIpvNegRtSum2=adGenAOSnmICMPTSIpvNegRtSum2, adGenAOSnmICMPTSIpvNegRtMin=adGenAOSnmICMPTSIpvNegRtMin, adGenAOSnmTrackTable=adGenAOSnmTrackTable, adGenAOSnmTwIpdvAbsRtMinPass=adGenAOSnmTwIpdvAbsRtMinPass, adGenAOSnmTimeSinceLastStatusChange=adGenAOSnmTimeSinceLastStatusChange, adGenAOSnmClearCounters=adGenAOSnmClearCounters, adGenAOSnmPollPeriod=adGenAOSnmPollPeriod, adGenAOSnmFullCompliance=adGenAOSnmFullCompliance, adGenAOSnmICMPTSSendScheduleType=adGenAOSnmICMPTSSendScheduleType, adGenAOSnmCfgICMPTSProbeTable=adGenAOSnmCfgICMPTSProbeTable, adGenAOSnmICMPTSIpdvAbsInAvgPass=adGenAOSnmICMPTSIpdvAbsInAvgPass, adGenAOSNetMonMib=adGenAOSNetMonMib, adGenAOSnmTwIpvNegOutMax=adGenAOSnmTwIpvNegOutMax, adGenAOSnmICMPTSResponderStatsIndex=adGenAOSnmICMPTSResponderStatsIndex, adGenAOSnmTwampResponderPacketsSent=adGenAOSnmTwampResponderPacketsSent, adGenAOSnmTwIpvPosOutSum=adGenAOSnmTwIpvPosOutSum, adGenAOSnmStatsToleranceTestValue=adGenAOSnmStatsToleranceTestValue, adGenAOSnmICMPTSDelayRtMinPass=adGenAOSnmICMPTSDelayRtMinPass, adGenAOSnmCfgICMPTSProbeEntry=adGenAOSnmCfgICMPTSProbeEntry, adGenAOSnmTwSeqNum=adGenAOSnmTwSeqNum, adGenAOSnmICMPTSHistoryDepth=adGenAOSnmICMPTSHistoryDepth, adGenAOSnmICMPTSIpvPosInMax=adGenAOSnmICMPTSIpvPosInMax, adGenAOSnmTWAMPResponderGroup=adGenAOSnmTWAMPResponderGroup, adGenAOSnmProbeTable=adGenAOSnmProbeTable, adGenAOSnmTwIpdvAbsOutMinFail=adGenAOSnmTwIpdvAbsOutMinFail, adGenAOSnmTwIpdvAbsInMinFail=adGenAOSnmTwIpdvAbsInMinFail, adGenAOSnmICMPTSIpvAbsInNum=adGenAOSnmICMPTSIpvAbsInNum, adGenAOSnmTwPktRtLossFail=adGenAOSnmTwPktRtLossFail, adGenAOSnmTwIpvAbsOutSum2=adGenAOSnmTwIpvAbsOutSum2, adGenAOSnmICMPTSIpdvAbsRtMaxFail=adGenAOSnmICMPTSIpdvAbsRtMaxFail, adGenAOSnmTwDelayOutNum=adGenAOSnmTwDelayOutNum, adGenAOSnmICMPTSHistoryGroup=adGenAOSnmICMPTSHistoryGroup, adGenAOSnmTwampResponderPacketsReceived=adGenAOSnmTwampResponderPacketsReceived, adGenAOSnmICMPTSIpvNegOutSum2=adGenAOSnmICMPTSIpvNegOutSum2, adGenAOSnmICMPTSIpvPosInSum2=adGenAOSnmICMPTSIpvPosInSum2, adGenAOSnmICMPTSHistoryName=adGenAOSnmICMPTSHistoryName, adGenAOSnmTrackStateChgPass=adGenAOSnmTrackStateChgPass, adGenAOSnmTwDelayRtMax=adGenAOSnmTwDelayRtMax, adGenAOSnmTwIpdvAbsRtAvgFail=adGenAOSnmTwIpdvAbsRtAvgFail, adGenAOSnmTwPktSentCount=adGenAOSnmTwPktSentCount, adGenAOSnmTwDelayInMaxFail=adGenAOSnmTwDelayInMaxFail, adGenAOSnmTwPaddingFormat=adGenAOSnmTwPaddingFormat, adGenAOSnmICMPTSDelayInMin=adGenAOSnmICMPTSDelayInMin, adGenAOSnmICMPTSDelayOutNum=adGenAOSnmICMPTSDelayOutNum, adGenAOSnmCfgTwampProbeEntry=adGenAOSnmCfgTwampProbeEntry, adGenAOSnmTwIpvNegOutMin=adGenAOSnmTwIpvNegOutMin, adGenAOSnmTwRemoteSyncState=adGenAOSnmTwRemoteSyncState, adGenAOSnmICMPTSIpdvAbsOutMaxFail=adGenAOSnmICMPTSIpdvAbsOutMaxFail, adGenAOSnmICMPTSIpvNegOutSum=adGenAOSnmICMPTSIpvNegOutSum, adGenAOSnmTwLossRoundTrip=adGenAOSnmTwLossRoundTrip, adGenAOSnmConfigProbeTable=adGenAOSnmConfigProbeTable, adGenAOSnmTwIpvAbsRtNum=adGenAOSnmTwIpvAbsRtNum, adGenAOSnmTwRemoteClkErr=adGenAOSnmTwRemoteClkErr, adGenAOSnmICMPTSDelayInMaxFail=adGenAOSnmICMPTSDelayInMaxFail, adGenAOSnmICMPTSDelayRtMax=adGenAOSnmICMPTSDelayRtMax, adGenAOSnmTwEndTime=adGenAOSnmTwEndTime, adGenAOSnmICMPTSDelayRtMaxPass=adGenAOSnmICMPTSDelayRtMaxPass, adGenAOSnmICMPTSSendScheduleValue=adGenAOSnmICMPTSSendScheduleValue, adGenAOSnmTwDscp=adGenAOSnmTwDscp, adGenAOSnmICMPTSIpdvAbsInAvgFail=adGenAOSnmICMPTSIpdvAbsInAvgFail, adGenAOSnmICMPTSIpvNegRtNum=adGenAOSnmICMPTSIpvNegRtNum, adGenAOSnmICMPTSIpdvAbsOutAvgPass=adGenAOSnmICMPTSIpdvAbsOutAvgPass, adGenAOSnmICMPTSDelayRtAvgPass=adGenAOSnmICMPTSDelayRtAvgPass, adGenAOSnmTwDelayInSum2=adGenAOSnmTwDelayInSum2, adGenAOSnmICMPTSPaddingFormat=adGenAOSnmICMPTSPaddingFormat, adGenAOSnmTwDelayOutAvgPass=adGenAOSnmTwDelayOutAvgPass, adGenAOSnmICMPTSIpvNegInMax=adGenAOSnmICMPTSIpvNegInMax, adGenAOSnmTwampHistoryEntry=adGenAOSnmTwampHistoryEntry, adGenAOSnmICMPTSDelayInAvgPass=adGenAOSnmICMPTSDelayInAvgPass, adGenAOSnmICMPTSIpvPosInNum=adGenAOSnmICMPTSIpvPosInNum, adGenAOSnmTwDelayRtAvgPass=adGenAOSnmTwDelayRtAvgPass, adGenAOSnmTrackStateChgFail=adGenAOSnmTrackStateChgFail, adGenAOSnmTWAMPResponder=adGenAOSnmTWAMPResponder, adGenAOSnmICMPTSIpvAbsOutMin=adGenAOSnmICMPTSIpvAbsOutMin, adGenAOSnmTwampHistoryTable=adGenAOSnmTwampHistoryTable, adGenAOSnmICMPTSIpvPosInSum=adGenAOSnmICMPTSIpvPosInSum, adGenAOSnmNotificationGroup=adGenAOSnmNotificationGroup, adGenAOSnmIEPacketPattern=adGenAOSnmIEPacketPattern, adGenAOSnmTwampResponderStatsIndex=adGenAOSnmTwampResponderStatsIndex, adGenAOSnmICMPTSIpvNegInMin=adGenAOSnmICMPTSIpvNegInMin)
mibBuilder.exportSymbols("ADTRAN-AOS-NETWORKMONITOR", adGenAOSnmTwIpvAbsInNum=adGenAOSnmTwIpvAbsInNum, adGenAOSnmTwampResponderStatsEntry=adGenAOSnmTwampResponderStatsEntry, adGenAOSnmProbeGroup=adGenAOSnmProbeGroup, adGenAOSnmICMPTSIpvPosRtSum2=adGenAOSnmICMPTSIpvPosRtSum2, adGenAOSnmTwDelayOutMaxFail=adGenAOSnmTwDelayOutMaxFail, adGenAOSnmICMPTSIpvAbsOutNum=adGenAOSnmICMPTSIpvAbsOutNum, adGenAOSnmICMPTSResponderStatsTable=adGenAOSnmICMPTSResponderStatsTable, adGenAOSnmTwIpvAbsRtMax=adGenAOSnmTwIpvAbsRtMax, adGenAOSnmTwDelayRtMinPass=adGenAOSnmTwDelayRtMinPass, adGenAOSnmStatusName=adGenAOSnmStatusName, adGenAOSnmTwIpvNegInMin=adGenAOSnmTwIpvNegInMin, adGenAOSnmProbeStatusGroup=adGenAOSnmProbeStatusGroup, adGenAOSnmTwIpvNegOutNum=adGenAOSnmTwIpvNegOutNum, adGenAOSnmICMPTSIpvNegRtSum=adGenAOSnmICMPTSIpvNegRtSum, adGenAOSnmICMPTSDelayInMinPass=adGenAOSnmICMPTSDelayInMinPass, adGenAOSnmICMPTSLossRoundTrip=adGenAOSnmICMPTSLossRoundTrip, adGenAOSnmTrackTraps=adGenAOSnmTrackTraps, adGenAOSnmCfgTwName=adGenAOSnmCfgTwName, adGenAOSnmICMPTSDelayOutMinFail=adGenAOSnmICMPTSDelayOutMinFail, adGenAOSnmICMPTSPktSentCount=adGenAOSnmICMPTSPktSentCount, adGenAOSnmTwampResponderStatsGroup=adGenAOSnmTwampResponderStatsGroup, adGenAOSnmIESrcIP=adGenAOSnmIESrcIP, adGenAOSnmType=adGenAOSnmType, adGenAOSnmTwIpvAbsOutSum=adGenAOSnmTwIpvAbsOutSum, adGenAOSnmTwDelayInMaxPass=adGenAOSnmTwDelayInMaxPass, adGenAOSnmICMPTSIpvNegOutMin=adGenAOSnmICMPTSIpvNegOutMin, adGenAOSnmCfgICMPTSProbeGroup=adGenAOSnmCfgICMPTSProbeGroup, adGenAOSnmTwIpvNegOutSum2=adGenAOSnmTwIpvNegOutSum2, adGenAOSnmICMPTSDelayOutAvgPass=adGenAOSnmICMPTSDelayOutAvgPass, adGenAOSnmICMPTSDscp=adGenAOSnmICMPTSDscp, adGenAOSnmTwIpdvAbsOutAvgPass=adGenAOSnmTwIpdvAbsOutAvgPass, adGenAOSnmTwSendScheduleType=adGenAOSnmTwSendScheduleType, adGenAOSnmICMPTSIpvAbsRtMin=adGenAOSnmICMPTSIpvAbsRtMin, adGenAOSnmICMPTSDelayInSum=adGenAOSnmICMPTSDelayInSum, adGenAOSnmICMPTSIpvPosInMin=adGenAOSnmICMPTSIpvPosInMin, adGenAOSNetMon=adGenAOSNetMon, adGenAOSnmICMPTSPktSendCnt=adGenAOSnmICMPTSPktSendCnt, adGenAOSnmICMPTSIpdvAbsRtAvgFail=adGenAOSnmICMPTSIpdvAbsRtAvgFail, adGenAOSnmTwIpvAbsInSum=adGenAOSnmTwIpvAbsInSum, adGenAOSnmICMPTSPktRtLossPass=adGenAOSnmICMPTSPktRtLossPass, adGenAOSnmTwIpvPosInNum=adGenAOSnmTwIpvPosInNum, adGenAOSnmIEPacketLength=adGenAOSnmIEPacketLength, adGenAOSnmTwDelayOutSum=adGenAOSnmTwDelayOutSum, adGenAOSnmTwampHistoryGroup=adGenAOSnmTwampHistoryGroup, adGenAOSnmProbeStatusTable=adGenAOSnmProbeStatusTable, adGenAOSnmICMPTSDelayRtMinFail=adGenAOSnmICMPTSDelayRtMinFail, adGenAOSnmTwIpdvAbsOutMaxFail=adGenAOSnmTwIpdvAbsOutMaxFail, adGenAOSnmICMPTSIpvAbsInMax=adGenAOSnmICMPTSIpvAbsInMax, adGenAOSnmTrackGroup=adGenAOSnmTrackGroup, adGenAOSnmICMPTSDelayInMaxPass=adGenAOSnmICMPTSDelayInMaxPass, adGenAOSnmICMPTSDelayOutSum=adGenAOSnmICMPTSDelayOutSum, adGenAOSnmTwIpvPosOutMax=adGenAOSnmTwIpvPosOutMax, adGenAOSnmProbeStatusEntry=adGenAOSnmProbeStatusEntry, adGenAOSnmTwSendScheduleValue=adGenAOSnmTwSendScheduleValue, adGenAOSnmICMPTSIpdvAbsInMaxFail=adGenAOSnmICMPTSIpdvAbsInMaxFail, adGenAOSnmTwIpdvAbsInMinPass=adGenAOSnmTwIpdvAbsInMinPass, adGenAOSnmICMPTSResponderGroup=adGenAOSnmICMPTSResponderGroup, adGenAOSnmName=adGenAOSnmName, adGenAOSnmTwIpvAbsOutNum=adGenAOSnmTwIpvAbsOutNum, adGenAOSnmTwDelayRtMaxFail=adGenAOSnmTwDelayRtMaxFail, adGenAOSnmToleranceTestSize=adGenAOSnmToleranceTestSize, adGenAOSnmICMPTSIpdvAbsInMinFail=adGenAOSnmICMPTSIpdvAbsInMinFail, adGenAOSnmICMPTSPaddingPattern=adGenAOSnmICMPTSPaddingPattern, adGenAOSnmICMPTSIpdvAbsInMinPass=adGenAOSnmICMPTSIpdvAbsInMinPass, adGenAOSnmTestsFailed=adGenAOSnmTestsFailed, adGenAOSnmTwIpdvAbsInAvgPass=adGenAOSnmTwIpdvAbsInAvgPass, adGenAOSnmTwIpvAbsInMin=adGenAOSnmTwIpvAbsInMin, adGenAOSnmTwampResponderStatsTable=adGenAOSnmTwampResponderStatsTable, adGenAOSnmICMPTSSrcIP=adGenAOSnmICMPTSSrcIP, adGenAOSnmIEDestHostname=adGenAOSnmIEDestHostname, adGenAOSnmCfgIEName=adGenAOSnmCfgIEName, adGenAOSnmICMPTSStartTime=adGenAOSnmICMPTSStartTime, adGenAOSnmICMPTSDelayOutMin=adGenAOSnmICMPTSDelayOutMin)
