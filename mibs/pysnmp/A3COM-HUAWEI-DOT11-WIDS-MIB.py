#
# PySNMP MIB module A3COM-HUAWEI-DOT11-WIDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-DOT11-WIDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:49:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
H3cDot11RadioType, H3cDot11RadioScopeType, h3cDot11, H3cDot11ChannelScopeType, H3cDot11ObjectIDType, H3cDot11SSIDStringType = mibBuilder.importSymbols("A3COM-HUAWEI-DOT11-REF-MIB", "H3cDot11RadioType", "H3cDot11RadioScopeType", "h3cDot11", "H3cDot11ChannelScopeType", "H3cDot11ObjectIDType", "H3cDot11SSIDStringType")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, TimeTicks, IpAddress, ModuleIdentity, Counter32, Bits, Integer32, Counter64, Unsigned32, NotificationType, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "IpAddress", "ModuleIdentity", "Counter32", "Bits", "Integer32", "Counter64", "Unsigned32", "NotificationType", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
TruthValue, DisplayString, RowStatus, TextualConvention, MacAddress, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention", "MacAddress", "DateAndTime")
h3cDot11WIDS = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5))
h3cDot11WIDS.setRevisions(('2010-05-31 18:00', '2009-07-29 18:00', '2009-05-07 20:00', '2008-07-25 19:00', '2007-06-19 19:00', '2007-05-16 19:00', '2006-08-20 19:00',))
if mibBuilder.loadTexts: h3cDot11WIDS.setLastUpdated('201005311800Z')
if mibBuilder.loadTexts: h3cDot11WIDS.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
class H3cDot11WIDSDevType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("client", 1), ("ap", 2), ("adhoc", 3), ("wirelessBridge", 4), ("unknown", 5))

class H3cDot11WIDSDevPermitType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("permit", 1), ("rogue", 2))

class H3cDot11WIDSAtkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("act", 1), ("asr", 2), ("aur", 3), ("daf", 4), ("dar", 5), ("ndf", 6), ("pbr", 7), ("rar", 8), ("saf", 9), ("sdf", 10), ("wiv", 11), ("unknown", 12))

h3cDot11WIDSConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1))
h3cDot11WIDSGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1))
h3cDot11WIDSDetectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2))
h3cDot11WIDSNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3))
h3cDot11WIDSScanMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("auto", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11WIDSScanMode.setStatus('current')
h3cDot11WIDSScanChannelList = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11WIDSScanChannelList.setStatus('obsolete')
h3cDot11CntMsrMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 3), Bits().clone(namedValues=NamedValues(("rogue", 0), ("adhoc", 1), ("config", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11CntMsrMode.setStatus('current')
h3cDot11DevAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1800))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11DevAgingTime.setStatus('current')
h3cDot11DynBlkListEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11DynBlkListEnable.setStatus('current')
h3cDot11DynBlkListLifeTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11DynBlkListLifeTime.setStatus('current')
h3cDot11FloodAtkDctEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11FloodAtkDctEnable.setStatus('current')
h3cDot11SpoofAtkDctEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SpoofAtkDctEnable.setStatus('current')
h3cDot11WeakIVAtkDctEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11WeakIVAtkDctEnable.setStatus('current')
h3cDot11ResetWIDSRogueHistory = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetWIDSRogueHistory.setStatus('current')
h3cDot11ResetWIDSHistroy = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetWIDSHistroy.setStatus('current')
h3cDot11ResetWIDSStatistics = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetWIDSStatistics.setStatus('current')
h3cDot11ResetAllDynBlkList = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetAllDynBlkList.setStatus('current')
h3cDot11ResetAllStcBlkList = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetAllStcBlkList.setStatus('current')
h3cDot11ResetAllWhtBlkList = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetAllWhtBlkList.setStatus('current')
h3cDot11ResetAllDctRogueAP = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetAllDctRogueAP.setStatus('current')
h3cDot11ResetAllDctRogueSta = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetAllDctRogueSta.setStatus('current')
h3cDot11ResetAllDctAdhoc = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetAllDctAdhoc.setStatus('current')
h3cDot11ResetAllDctDevice = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetAllDctDevice.setStatus('current')
h3cDot11ResetAllDctSSID = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11ResetAllDctSSID.setStatus('current')
h3cDot11WidsFloodInterval = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 21), Unsigned32().clone(1)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11WidsFloodInterval.setStatus('current')
h3cDot11WidsBlackListThreshold = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 22), Unsigned32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11WidsBlackListThreshold.setStatus('current')
h3cDot11SSIDFilterOnOff = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11SSIDFilterOnOff.setStatus('current')
h3cDot11BSSIDFilterOnOff = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11BSSIDFilterOnOff.setStatus('current')
h3cDot11WIDSPermitVendorTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 2), )
if mibBuilder.loadTexts: h3cDot11WIDSPermitVendorTable.setStatus('current')
h3cDot11WIDSPermitVendorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11VendorOUI"))
if mibBuilder.loadTexts: h3cDot11WIDSPermitVendorEntry.setStatus('current')
h3cDot11VendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3))
if mibBuilder.loadTexts: h3cDot11VendorOUI.setStatus('current')
h3cDot11PermitVendorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11PermitVendorRowStatus.setStatus('current')
h3cDot11VendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11VendorName.setStatus('current')
h3cDot11WIDSPermitSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 3), )
if mibBuilder.loadTexts: h3cDot11WIDSPermitSSIDTable.setStatus('current')
h3cDot11WIDSPermitSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11PermitSSID"))
if mibBuilder.loadTexts: h3cDot11WIDSPermitSSIDEntry.setStatus('current')
h3cDot11PermitSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 3, 1, 1), H3cDot11SSIDStringType().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: h3cDot11PermitSSID.setStatus('current')
h3cDot11PermitSSIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11PermitSSIDRowStatus.setStatus('current')
h3cDot11PermitSSIDDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11PermitSSIDDetected.setStatus('current')
h3cDot11WIDSIgnoreListTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 4), )
if mibBuilder.loadTexts: h3cDot11WIDSIgnoreListTable.setStatus('current')
h3cDot11WIDSIgnoreListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11IgnoreMAC"))
if mibBuilder.loadTexts: h3cDot11WIDSIgnoreListEntry.setStatus('current')
h3cDot11IgnoreMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11IgnoreMAC.setStatus('current')
h3cDot11IgnoreListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11IgnoreListRowStatus.setStatus('current')
h3cDot11IgnoreMACDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11IgnoreMACDetected.setStatus('current')
h3cDot11IgnoreDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 4, 1, 4), H3cDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11IgnoreDevType.setStatus('current')
h3cDot11WIDSAttackListTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 5), )
if mibBuilder.loadTexts: h3cDot11WIDSAttackListTable.setStatus('current')
h3cDot11WIDSAttackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11AttackDeviceMac"))
if mibBuilder.loadTexts: h3cDot11WIDSAttackListEntry.setStatus('current')
h3cDot11AttackDeviceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11AttackDeviceMac.setStatus('current')
h3cDot11AttackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11AttackListRowStatus.setStatus('current')
h3cDot11AttackDevDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11AttackDevDetected.setStatus('current')
h3cDot11AttackDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 5, 1, 4), H3cDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11AttackDevType.setStatus('current')
h3cDot11StaticWhiteListTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 6), )
if mibBuilder.loadTexts: h3cDot11StaticWhiteListTable.setStatus('current')
h3cDot11StaticWhiteListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11StaticWhiteListMAC"))
if mibBuilder.loadTexts: h3cDot11StaticWhiteListEntry.setStatus('current')
h3cDot11StaticWhiteListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11StaticWhiteListMAC.setStatus('current')
h3cDot11StaticWhiteListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11StaticWhiteListRowStatus.setStatus('current')
h3cDot11StaticBlackListTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 7), )
if mibBuilder.loadTexts: h3cDot11StaticBlackListTable.setStatus('current')
h3cDot11StaticBlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11StaticBlackListMAC"))
if mibBuilder.loadTexts: h3cDot11StaticBlackListEntry.setStatus('current')
h3cDot11StaticBlackListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11StaticBlackListMAC.setStatus('current')
h3cDot11StaticBlackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11StaticBlackListRowStatus.setStatus('current')
h3cDot11WIDSPermitBSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 8), )
if mibBuilder.loadTexts: h3cDot11WIDSPermitBSSIDTable.setStatus('current')
h3cDot11WIDSPermitBSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11PermitBSSID"))
if mibBuilder.loadTexts: h3cDot11WIDSPermitBSSIDEntry.setStatus('current')
h3cDot11PermitBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11PermitBSSID.setStatus('current')
h3cDot11PermitBSSIDDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 8, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11PermitBSSIDDetected.setStatus('current')
h3cDot11PermitBSSIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11PermitBSSIDRowStatus.setStatus('current')
h3cDot11WIDSRogueAPTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1), )
if mibBuilder.loadTexts: h3cDot11WIDSRogueAPTable.setStatus('current')
h3cDot11WIDSRogueAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11RogueAPBSSMAC"))
if mibBuilder.loadTexts: h3cDot11WIDSRogueAPEntry.setStatus('current')
h3cDot11RogueAPBSSMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11RogueAPBSSMAC.setStatus('current')
h3cDot11RogueAPVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPVendorName.setStatus('current')
h3cDot11RogueAPMonitorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPMonitorNum.setStatus('current')
h3cDot11RogueAPFirstDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPFirstDetectTm.setStatus('current')
h3cDot11RogueAPLastDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPLastDetectTm.setStatus('current')
h3cDot11RogueAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 6), H3cDot11SSIDStringType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPSSID.setStatus('current')
h3cDot11RogueAPMaxSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 7), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPMaxSigStrength.setStatus('current')
h3cDot11RogueAPChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 8), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPChannel.setStatus('current')
h3cDot11RogueAPBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 9), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPBeaconInterval.setStatus('current')
h3cDot11RogueAPAttackedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPAttackedStatus.setStatus('current')
h3cDot11RogueAPToIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RogueAPToIgnore.setStatus('current')
h3cDot11RogueAPEncryptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPEncryptStatus.setStatus('current')
h3cDot11RogueAPReset = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RogueAPReset.setStatus('current')
h3cDot11RogueAPFirstDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPFirstDetectTmStr.setStatus('current')
h3cDot11RogueAPLastDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 1, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueAPLastDetectTmStr.setStatus('current')
h3cDot11WIDSRogueAPExtTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 2), )
if mibBuilder.loadTexts: h3cDot11WIDSRogueAPExtTable.setStatus('current')
h3cDot11WIDSRogueAPExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11RogueAPBSSMAC"), (0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAPID"))
if mibBuilder.loadTexts: h3cDot11WIDSRogueAPExtEntry.setStatus('current')
h3cDot11WIDSAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 2, 1, 1), H3cDot11ObjectIDType())
if mibBuilder.loadTexts: h3cDot11WIDSAPID.setStatus('current')
h3cDot11DetectCurAPSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 2, 1, 2), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectCurAPSigStrength.setStatus('current')
h3cDot11DetectAPByChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 2, 1, 3), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectAPByChannel.setStatus('current')
h3cDot11DetectAPByRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 2, 1, 4), H3cDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectAPByRadioID.setStatus('current')
h3cDot11AttackAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11AttackAPStatus.setStatus('current')
h3cDot11DetectAPFirstTm = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectAPFirstTm.setStatus('current')
h3cDot11DetectAPLastTm = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 2, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectAPLastTm.setStatus('current')
h3cDot11WIDSRogueStaTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3), )
if mibBuilder.loadTexts: h3cDot11WIDSRogueStaTable.setStatus('current')
h3cDot11WIDSRogueStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11RogueStaMAC"))
if mibBuilder.loadTexts: h3cDot11WIDSRogueStaEntry.setStatus('current')
h3cDot11RogueStaMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11RogueStaMAC.setStatus('current')
h3cDot11RogueStaVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaVendorName.setStatus('current')
h3cDot11RogueStaMonitorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaMonitorNum.setStatus('current')
h3cDot11RogueStaFirstDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaFirstDetectTm.setStatus('current')
h3cDot11RogueStaLastDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaLastDetectTm.setStatus('current')
h3cDot11RogueStaAccessBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaAccessBSSID.setStatus('current')
h3cDot11RogueStaMaxSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 7), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaMaxSigStrength.setStatus('current')
h3cDot11RogueStaChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 8), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaChannel.setStatus('current')
h3cDot11RogueStaAttackedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaAttackedStatus.setStatus('current')
h3cDot11RogueStaToIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RogueStaToIgnore.setStatus('current')
h3cDot11RogueStaAdHocStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaAdHocStatus.setStatus('current')
h3cDot11RogueStaReset = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11RogueStaReset.setStatus('current')
h3cDot11RogueStaFirstDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaFirstDetectTmStr.setStatus('current')
h3cDot11RogueStaLastDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 3, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11RogueStaLastDetectTmStr.setStatus('current')
h3cDot11WIDSRogueStaExtTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 4), )
if mibBuilder.loadTexts: h3cDot11WIDSRogueStaExtTable.setStatus('current')
h3cDot11WIDSRogueStaExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11RogueStaMAC"), (0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAPID"))
if mibBuilder.loadTexts: h3cDot11WIDSRogueStaExtEntry.setStatus('current')
h3cDot11DetectCurStaSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 4, 1, 1), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectCurStaSigStrength.setStatus('current')
h3cDot11DetectStaByChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 4, 1, 2), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectStaByChannel.setStatus('current')
h3cDot11DetectStaByRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 4, 1, 3), H3cDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectStaByRadioID.setStatus('current')
h3cDot11AttackStaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11AttackStaStatus.setStatus('current')
h3cDot11DetectStaFirstTm = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectStaFirstTm.setStatus('current')
h3cDot11DetectStaLastTm = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 4, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DetectStaLastTm.setStatus('current')
h3cDot11WIDSDetectedDevTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5), )
if mibBuilder.loadTexts: h3cDot11WIDSDetectedDevTable.setStatus('current')
h3cDot11WIDSDetectedDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSDevMAC"))
if mibBuilder.loadTexts: h3cDot11WIDSDetectedDevEntry.setStatus('current')
h3cDot11WIDSDevMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11WIDSDevMAC.setStatus('current')
h3cDot11WIDSDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 2), H3cDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevType.setStatus('current')
h3cDot11WIDSDevPermitType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 3), H3cDot11WIDSDevPermitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevPermitType.setStatus('current')
h3cDot11WIDSDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevVendor.setStatus('current')
h3cDot11WIDSDevMonitorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevMonitorNum.setStatus('current')
h3cDot11WIDSDevSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevSSID.setStatus('current')
h3cDot11WIDSDevBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevBSSID.setStatus('current')
h3cDot11WIDSDevChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 8), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevChannel.setStatus('current')
h3cDot11WIDSDevMaxRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 9), Integer32()).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevMaxRSSI.setStatus('current')
h3cDot11WIDSDevBeaconIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 10), Integer32()).setUnits('millionsecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevBeaconIntvl.setStatus('current')
h3cDot11WIDSDevFstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevFstDctTime.setStatus('current')
h3cDot11WIDSDevLstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevLstDctTime.setStatus('current')
h3cDot11WIDSDevReset = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11WIDSDevReset.setStatus('current')
h3cDot11WIDSDevSnr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 5, 1, 14), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSDevSnr.setStatus('current')
h3cDot11WIDSRptAPTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 6), )
if mibBuilder.loadTexts: h3cDot11WIDSRptAPTable.setStatus('current')
h3cDot11WIDSRptAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSDevMAC"), (0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSRptAPMAC"))
if mibBuilder.loadTexts: h3cDot11WIDSRptAPEntry.setStatus('current')
h3cDot11WIDSRptAPMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11WIDSRptAPMAC.setStatus('current')
h3cDot11WIDSRptAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 6, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRptAPName.setStatus('current')
h3cDot11WIDSRptAPRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 6, 1, 3), H3cDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRptAPRadioID.setStatus('current')
h3cDot11WIDSRptAPMaxRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRptAPMaxRSSI.setStatus('current')
h3cDot11WIDSRptAPFstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 6, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRptAPFstDctTime.setStatus('current')
h3cDot11WIDSRptAPLstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 6, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRptAPLstDctTime.setStatus('current')
h3cDot11DynBlackListTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 7), )
if mibBuilder.loadTexts: h3cDot11DynBlackListTable.setStatus('current')
h3cDot11DynBlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11DynBlackListMAC"))
if mibBuilder.loadTexts: h3cDot11DynBlackListEntry.setStatus('current')
h3cDot11DynBlackListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11DynBlackListMAC.setStatus('current')
h3cDot11DynBlackListTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 7, 1, 2), Unsigned32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DynBlackListTime.setStatus('current')
h3cDot11DynBlackListReason = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 7, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DynBlackListReason.setStatus('current')
h3cDot11DynBlackListReset = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 7, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDot11DynBlackListReset.setStatus('current')
h3cDot11DynBlackListTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 7, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11DynBlackListTimeTicks.setStatus('current')
h3cDot11WIDSRogueHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 8), )
if mibBuilder.loadTexts: h3cDot11WIDSRogueHistoryTable.setStatus('current')
h3cDot11WIDSRogueHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSRogueHisIndex"))
if mibBuilder.loadTexts: h3cDot11WIDSRogueHistoryEntry.setStatus('current')
h3cDot11WIDSRogueHisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11WIDSRogueHisIndex.setStatus('current')
h3cDot11WIDSRogueHisMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 8, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRogueHisMAC.setStatus('current')
h3cDot11WIDSRogueHisVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 8, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRogueHisVendor.setStatus('current')
h3cDot11WIDSRogueHisType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 8, 1, 4), H3cDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRogueHisType.setStatus('current')
h3cDot11WIDSRogueHisChl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 8, 1, 5), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRogueHisChl.setStatus('current')
h3cDot11WIDSRogueHisSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 8, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRogueHisSSID.setStatus('current')
h3cDot11WIDSRogueHisLastDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 8, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSRogueHisLastDctTime.setStatus('current')
h3cDot11WIDSAtkHistroyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 9), )
if mibBuilder.loadTexts: h3cDot11WIDSAtkHistroyTable.setStatus('current')
h3cDot11WIDSAtkHistroyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 9, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkHisIndex"))
if mibBuilder.loadTexts: h3cDot11WIDSAtkHistroyEntry.setStatus('current')
h3cDot11WIDSAtkHisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cDot11WIDSAtkHisIndex.setStatus('current')
h3cDot11WIDSAtkHisMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 9, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSAtkHisMAC.setStatus('current')
h3cDot11WIDSAtkHisType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 9, 1, 3), H3cDot11WIDSAtkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSAtkHisType.setStatus('current')
h3cDot11WIDSAtkHisChl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 9, 1, 4), H3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSAtkHisChl.setStatus('current')
h3cDot11WIDSAtkHisRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSAtkHisRSSI.setStatus('current')
h3cDot11WIDSAtkHisDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 9, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSAtkHisDctTime.setStatus('current')
h3cDot11WIDSAtkHisAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 9, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSAtkHisAPName.setStatus('current')
h3cDot11WIDSAtkStatis = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 10))
h3cDot11WIDSAtkStasStartTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 10, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSAtkStasStartTime.setStatus('current')
h3cDot11WIDSAtkStasTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 10, 2), )
if mibBuilder.loadTexts: h3cDot11WIDSAtkStasTable.setStatus('current')
h3cDot11WIDSAtkStasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 10, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkStasType"))
if mibBuilder.loadTexts: h3cDot11WIDSAtkStasEntry.setStatus('current')
h3cDot11WIDSAtkStasType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 10, 2, 1, 1), H3cDot11WIDSAtkType())
if mibBuilder.loadTexts: h3cDot11WIDSAtkStasType.setStatus('current')
h3cDot11WIDSAtkStasCurCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 10, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSAtkStasCurCnt.setStatus('current')
h3cDot11WIDSAtkStasTotalCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 10, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11WIDSAtkStasTotalCnt.setStatus('current')
h3cDot11BlackListTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 11), )
if mibBuilder.loadTexts: h3cDot11BlackListTable.setStatus('current')
h3cDot11BlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 11, 1), ).setIndexNames((0, "A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11BlackListMAC"))
if mibBuilder.loadTexts: h3cDot11BlackListEntry.setStatus('current')
h3cDot11BlackListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 11, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cDot11BlackListMAC.setStatus('current')
h3cDot11BlackListTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 11, 1, 2), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11BlackListTime.setStatus('current')
h3cDot11BlackListReason = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 11, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11BlackListReason.setStatus('current')
h3cDot11BlackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDot11BlackListRowStatus.setStatus('current')
h3cDot11BlackListTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 2, 11, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDot11BlackListTimeTicks.setStatus('current')
h3cDot11WIDSTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1))
h3cDot11WIDSDetectRogueTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1, 1)).setObjects(("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSRogueMAC"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSRogueType"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSMonitorMAC"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11MonitorAPID"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11MonitorApRadioID"))
if mibBuilder.loadTexts: h3cDot11WIDSDetectRogueTrap.setStatus('current')
h3cDot11WIDSAdHocTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1, 2)).setObjects(("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAdHocMAC"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSMonitorMAC"))
if mibBuilder.loadTexts: h3cDot11WIDSAdHocTrap.setStatus('current')
h3cDot11WIDSUnauthorSSIDTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1, 3)).setObjects(("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11UnauthorSSIDName"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSMonitorMAC"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11MonitorAPID"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11MonitorApRadioID"))
if mibBuilder.loadTexts: h3cDot11WIDSUnauthorSSIDTrap.setStatus('current')
h3cDot11WIDSDisappearRogueTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1, 4)).setObjects(("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSRogueMAC"))
if mibBuilder.loadTexts: h3cDot11WIDSDisappearRogueTrap.setStatus('current')
h3cDot11WIDSDetectAttack = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1, 5)).setObjects(("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkHisType"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkHisChl"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkHisDctTime"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkHisAPName"))
if mibBuilder.loadTexts: h3cDot11WIDSDetectAttack.setStatus('current')
h3cDot11WIDSDetectWBridge = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1, 6)).setObjects(("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSRptAPName"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSRptAPRadioID"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSRptAPLstDctTime"))
if mibBuilder.loadTexts: h3cDot11WIDSDetectWBridge.setStatus('current')
h3cDot11WIDSFloodTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1, 7)).setObjects(("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkMac"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkFrameType"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSFirstTrapTime"))
if mibBuilder.loadTexts: h3cDot11WIDSFloodTrap.setStatus('current')
h3cDot11WIDSSpoofTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1, 8)).setObjects(("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkMac"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkFrameType"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkChannel"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkTime"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkDestMac"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSFirstTrapTime"))
if mibBuilder.loadTexts: h3cDot11WIDSSpoofTrap.setStatus('current')
h3cDot11WIDSWeakIVTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 1, 9)).setObjects(("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkMac"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkChannel"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkTime"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSAtkDestMac"), ("A3COM-HUAWEI-DOT11-WIDS-MIB", "h3cDot11WIDSFirstTrapTime"))
if mibBuilder.loadTexts: h3cDot11WIDSWeakIVTrap.setStatus('current')
h3cDot11WIDSTrapVarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2))
h3cDot11WIDSRogueMAC = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSRogueMAC.setStatus('current')
h3cDot11WIDSRogueType = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rogueAp", 1), ("rogueStation", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSRogueType.setStatus('current')
h3cDot11WIDSMonitorMAC = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 3), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSMonitorMAC.setStatus('current')
h3cDot11WIDSAdHocMAC = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSAdHocMAC.setStatus('current')
h3cDot11UnauthorSSIDName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 5), H3cDot11SSIDStringType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11UnauthorSSIDName.setStatus('current')
h3cDot11MonitorAPID = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 6), H3cDot11ObjectIDType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11MonitorAPID.setStatus('current')
h3cDot11MonitorApRadioID = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 7), H3cDot11RadioScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11MonitorApRadioID.setStatus('current')
h3cDot11WIDSAtkMac = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 8), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSAtkMac.setStatus('current')
h3cDot11WIDSAtkFrameType = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 9), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSAtkFrameType.setStatus('current')
h3cDot11WIDSAtkChannel = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 10), H3cDot11ChannelScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSAtkChannel.setStatus('current')
h3cDot11WIDSAtkTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 11), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSAtkTime.setStatus('current')
h3cDot11WIDSAtkDestMac = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 12), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSAtkDestMac.setStatus('current')
h3cDot11WIDSFirstTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 75, 5, 3, 2, 13), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDot11WIDSFirstTrapTime.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-DOT11-WIDS-MIB", h3cDot11WIDSAtkHisMAC=h3cDot11WIDSAtkHisMAC, h3cDot11WIDSRogueStaExtEntry=h3cDot11WIDSRogueStaExtEntry, h3cDot11WIDSAtkHisType=h3cDot11WIDSAtkHisType, h3cDot11StaticBlackListRowStatus=h3cDot11StaticBlackListRowStatus, h3cDot11RogueStaFirstDetectTmStr=h3cDot11RogueStaFirstDetectTmStr, h3cDot11WidsBlackListThreshold=h3cDot11WidsBlackListThreshold, h3cDot11WIDSFloodTrap=h3cDot11WIDSFloodTrap, h3cDot11ResetAllStcBlkList=h3cDot11ResetAllStcBlkList, h3cDot11IgnoreMAC=h3cDot11IgnoreMAC, h3cDot11RogueStaMAC=h3cDot11RogueStaMAC, h3cDot11WIDSRptAPFstDctTime=h3cDot11WIDSRptAPFstDctTime, h3cDot11ResetAllDctDevice=h3cDot11ResetAllDctDevice, h3cDot11WIDSRogueHisType=h3cDot11WIDSRogueHisType, h3cDot11WIDSAtkHisAPName=h3cDot11WIDSAtkHisAPName, h3cDot11DynBlackListEntry=h3cDot11DynBlackListEntry, h3cDot11WIDSAtkStatis=h3cDot11WIDSAtkStatis, h3cDot11WIDSDevMAC=h3cDot11WIDSDevMAC, h3cDot11WIDSRogueStaEntry=h3cDot11WIDSRogueStaEntry, h3cDot11DynBlackListTable=h3cDot11DynBlackListTable, h3cDot11StaticBlackListMAC=h3cDot11StaticBlackListMAC, h3cDot11WIDSPermitVendorEntry=h3cDot11WIDSPermitVendorEntry, h3cDot11RogueAPSSID=h3cDot11RogueAPSSID, h3cDot11PermitVendorRowStatus=h3cDot11PermitVendorRowStatus, h3cDot11WIDSIgnoreListTable=h3cDot11WIDSIgnoreListTable, h3cDot11ResetAllDctRogueSta=h3cDot11ResetAllDctRogueSta, h3cDot11AttackListRowStatus=h3cDot11AttackListRowStatus, h3cDot11WIDSWeakIVTrap=h3cDot11WIDSWeakIVTrap, h3cDot11UnauthorSSIDName=h3cDot11UnauthorSSIDName, h3cDot11WIDSRptAPRadioID=h3cDot11WIDSRptAPRadioID, h3cDot11WIDSDetectWBridge=h3cDot11WIDSDetectWBridge, h3cDot11RogueAPVendorName=h3cDot11RogueAPVendorName, h3cDot11WIDSDetectedDevTable=h3cDot11WIDSDetectedDevTable, h3cDot11WIDSDetectRogueTrap=h3cDot11WIDSDetectRogueTrap, h3cDot11WIDSPermitBSSIDEntry=h3cDot11WIDSPermitBSSIDEntry, h3cDot11WeakIVAtkDctEnable=h3cDot11WeakIVAtkDctEnable, h3cDot11StaticBlackListEntry=h3cDot11StaticBlackListEntry, h3cDot11PermitBSSIDDetected=h3cDot11PermitBSSIDDetected, h3cDot11RogueAPFirstDetectTm=h3cDot11RogueAPFirstDetectTm, h3cDot11RogueStaReset=h3cDot11RogueStaReset, h3cDot11DetectStaByRadioID=h3cDot11DetectStaByRadioID, h3cDot11VendorName=h3cDot11VendorName, h3cDot11RogueAPToIgnore=h3cDot11RogueAPToIgnore, h3cDot11AttackDeviceMac=h3cDot11AttackDeviceMac, h3cDot11RogueStaChannel=h3cDot11RogueStaChannel, h3cDot11AttackDevDetected=h3cDot11AttackDevDetected, h3cDot11WIDSRptAPMAC=h3cDot11WIDSRptAPMAC, h3cDot11ResetAllDctRogueAP=h3cDot11ResetAllDctRogueAP, h3cDot11WIDSPermitVendorTable=h3cDot11WIDSPermitVendorTable, h3cDot11PermitBSSID=h3cDot11PermitBSSID, h3cDot11BSSIDFilterOnOff=h3cDot11BSSIDFilterOnOff, h3cDot11RogueStaMaxSigStrength=h3cDot11RogueStaMaxSigStrength, h3cDot11CntMsrMode=h3cDot11CntMsrMode, h3cDot11WIDSFirstTrapTime=h3cDot11WIDSFirstTrapTime, h3cDot11StaticBlackListTable=h3cDot11StaticBlackListTable, h3cDot11VendorOUI=h3cDot11VendorOUI, h3cDot11DevAgingTime=h3cDot11DevAgingTime, h3cDot11WIDSRogueHistoryTable=h3cDot11WIDSRogueHistoryTable, h3cDot11PermitSSIDDetected=h3cDot11PermitSSIDDetected, h3cDot11WIDSAtkDestMac=h3cDot11WIDSAtkDestMac, h3cDot11MonitorApRadioID=h3cDot11MonitorApRadioID, h3cDot11RogueAPLastDetectTm=h3cDot11RogueAPLastDetectTm, h3cDot11WIDSAtkStasTable=h3cDot11WIDSAtkStasTable, h3cDot11ResetAllWhtBlkList=h3cDot11ResetAllWhtBlkList, h3cDot11RogueStaLastDetectTmStr=h3cDot11RogueStaLastDetectTmStr, h3cDot11WIDSDevChannel=h3cDot11WIDSDevChannel, h3cDot11WIDSRptAPName=h3cDot11WIDSRptAPName, h3cDot11WIDSPermitSSIDEntry=h3cDot11WIDSPermitSSIDEntry, h3cDot11WIDSDisappearRogueTrap=h3cDot11WIDSDisappearRogueTrap, h3cDot11AttackAPStatus=h3cDot11AttackAPStatus, h3cDot11WIDSAtkFrameType=h3cDot11WIDSAtkFrameType, h3cDot11ResetAllDynBlkList=h3cDot11ResetAllDynBlkList, h3cDot11WIDSRogueAPExtTable=h3cDot11WIDSRogueAPExtTable, h3cDot11WIDSRogueHisSSID=h3cDot11WIDSRogueHisSSID, h3cDot11DetectCurStaSigStrength=h3cDot11DetectCurStaSigStrength, h3cDot11RogueAPFirstDetectTmStr=h3cDot11RogueAPFirstDetectTmStr, h3cDot11RogueAPChannel=h3cDot11RogueAPChannel, h3cDot11WIDSDevBSSID=h3cDot11WIDSDevBSSID, h3cDot11WidsFloodInterval=h3cDot11WidsFloodInterval, h3cDot11WIDSDevSSID=h3cDot11WIDSDevSSID, h3cDot11WIDSRogueHisLastDctTime=h3cDot11WIDSRogueHisLastDctTime, h3cDot11WIDSDevLstDctTime=h3cDot11WIDSDevLstDctTime, h3cDot11WIDSAtkHisDctTime=h3cDot11WIDSAtkHisDctTime, h3cDot11RogueAPBSSMAC=h3cDot11RogueAPBSSMAC, h3cDot11WIDSAtkHistroyTable=h3cDot11WIDSAtkHistroyTable, h3cDot11DetectAPLastTm=h3cDot11DetectAPLastTm, h3cDot11WIDSRogueType=h3cDot11WIDSRogueType, h3cDot11WIDSRptAPEntry=h3cDot11WIDSRptAPEntry, h3cDot11WIDSScanChannelList=h3cDot11WIDSScanChannelList, h3cDot11ResetWIDSHistroy=h3cDot11ResetWIDSHistroy, h3cDot11PermitBSSIDRowStatus=h3cDot11PermitBSSIDRowStatus, h3cDot11BlackListEntry=h3cDot11BlackListEntry, h3cDot11DetectAPFirstTm=h3cDot11DetectAPFirstTm, h3cDot11MonitorAPID=h3cDot11MonitorAPID, h3cDot11ResetWIDSStatistics=h3cDot11ResetWIDSStatistics, h3cDot11WIDSConfigGroup=h3cDot11WIDSConfigGroup, h3cDot11WIDSAtkStasTotalCnt=h3cDot11WIDSAtkStasTotalCnt, h3cDot11WIDSDevSnr=h3cDot11WIDSDevSnr, h3cDot11WIDSDetectAttack=h3cDot11WIDSDetectAttack, h3cDot11WIDSRptAPTable=h3cDot11WIDSRptAPTable, h3cDot11RogueStaAccessBSSID=h3cDot11RogueStaAccessBSSID, H3cDot11WIDSDevType=H3cDot11WIDSDevType, h3cDot11RogueStaAttackedStatus=h3cDot11RogueStaAttackedStatus, h3cDot11RogueAPBeaconInterval=h3cDot11RogueAPBeaconInterval, h3cDot11WIDSRogueAPExtEntry=h3cDot11WIDSRogueAPExtEntry, h3cDot11DetectAPByChannel=h3cDot11DetectAPByChannel, h3cDot11WIDSDevType=h3cDot11WIDSDevType, h3cDot11WIDSAtkHisRSSI=h3cDot11WIDSAtkHisRSSI, h3cDot11StaticWhiteListRowStatus=h3cDot11StaticWhiteListRowStatus, h3cDot11WIDSRogueAPEntry=h3cDot11WIDSRogueAPEntry, H3cDot11WIDSDevPermitType=H3cDot11WIDSDevPermitType, h3cDot11WIDSAdHocTrap=h3cDot11WIDSAdHocTrap, h3cDot11WIDSTrapVarObjects=h3cDot11WIDSTrapVarObjects, h3cDot11RogueAPAttackedStatus=h3cDot11RogueAPAttackedStatus, h3cDot11RogueAPReset=h3cDot11RogueAPReset, h3cDot11DynBlackListTime=h3cDot11DynBlackListTime, PYSNMP_MODULE_ID=h3cDot11WIDS, h3cDot11PermitSSIDRowStatus=h3cDot11PermitSSIDRowStatus, h3cDot11RogueAPMaxSigStrength=h3cDot11RogueAPMaxSigStrength, h3cDot11WIDSRogueHisVendor=h3cDot11WIDSRogueHisVendor, h3cDot11WIDSPermitSSIDTable=h3cDot11WIDSPermitSSIDTable, h3cDot11WIDSDevVendor=h3cDot11WIDSDevVendor, h3cDot11WIDSDevFstDctTime=h3cDot11WIDSDevFstDctTime, h3cDot11DynBlackListMAC=h3cDot11DynBlackListMAC, h3cDot11WIDSAtkHistroyEntry=h3cDot11WIDSAtkHistroyEntry, h3cDot11RogueStaFirstDetectTm=h3cDot11RogueStaFirstDetectTm, h3cDot11ResetWIDSRogueHistory=h3cDot11ResetWIDSRogueHistory, h3cDot11StaticWhiteListEntry=h3cDot11StaticWhiteListEntry, h3cDot11RogueAPLastDetectTmStr=h3cDot11RogueAPLastDetectTmStr, h3cDot11WIDSDevMonitorNum=h3cDot11WIDSDevMonitorNum, h3cDot11WIDSAtkHisIndex=h3cDot11WIDSAtkHisIndex, h3cDot11WIDSRogueHisChl=h3cDot11WIDSRogueHisChl, h3cDot11DynBlkListEnable=h3cDot11DynBlkListEnable, h3cDot11RogueStaAdHocStatus=h3cDot11RogueStaAdHocStatus, h3cDot11WIDSGlobalConfigGroup=h3cDot11WIDSGlobalConfigGroup, h3cDot11WIDSSpoofTrap=h3cDot11WIDSSpoofTrap, h3cDot11WIDSPermitBSSIDTable=h3cDot11WIDSPermitBSSIDTable, h3cDot11DetectStaFirstTm=h3cDot11DetectStaFirstTm, h3cDot11DynBlkListLifeTime=h3cDot11DynBlkListLifeTime, h3cDot11WIDSAtkStasStartTime=h3cDot11WIDSAtkStasStartTime, h3cDot11AttackDevType=h3cDot11AttackDevType, h3cDot11DetectStaLastTm=h3cDot11DetectStaLastTm, h3cDot11DynBlackListReset=h3cDot11DynBlackListReset, h3cDot11WIDSScanMode=h3cDot11WIDSScanMode, h3cDot11WIDSAtkStasEntry=h3cDot11WIDSAtkStasEntry, h3cDot11WIDSDetectGroup=h3cDot11WIDSDetectGroup, h3cDot11BlackListMAC=h3cDot11BlackListMAC, h3cDot11WIDSDevBeaconIntvl=h3cDot11WIDSDevBeaconIntvl, h3cDot11BlackListTable=h3cDot11BlackListTable, h3cDot11WIDSRogueStaExtTable=h3cDot11WIDSRogueStaExtTable, h3cDot11WIDSAtkMac=h3cDot11WIDSAtkMac, h3cDot11WIDSAttackListTable=h3cDot11WIDSAttackListTable, h3cDot11StaticWhiteListTable=h3cDot11StaticWhiteListTable, h3cDot11DetectStaByChannel=h3cDot11DetectStaByChannel, h3cDot11WIDSRogueHistoryEntry=h3cDot11WIDSRogueHistoryEntry, h3cDot11WIDSRogueStaTable=h3cDot11WIDSRogueStaTable, h3cDot11RogueStaMonitorNum=h3cDot11RogueStaMonitorNum, h3cDot11RogueAPEncryptStatus=h3cDot11RogueAPEncryptStatus, h3cDot11RogueStaToIgnore=h3cDot11RogueStaToIgnore, h3cDot11DetectAPByRadioID=h3cDot11DetectAPByRadioID, H3cDot11WIDSAtkType=H3cDot11WIDSAtkType, h3cDot11WIDSRogueAPTable=h3cDot11WIDSRogueAPTable, h3cDot11DynBlackListReason=h3cDot11DynBlackListReason, h3cDot11WIDSIgnoreListEntry=h3cDot11WIDSIgnoreListEntry, h3cDot11WIDSDevMaxRSSI=h3cDot11WIDSDevMaxRSSI, h3cDot11WIDSDevReset=h3cDot11WIDSDevReset, h3cDot11BlackListReason=h3cDot11BlackListReason, h3cDot11WIDSAtkTime=h3cDot11WIDSAtkTime, h3cDot11WIDSNotifyGroup=h3cDot11WIDSNotifyGroup, h3cDot11RogueStaLastDetectTm=h3cDot11RogueStaLastDetectTm, h3cDot11RogueStaVendorName=h3cDot11RogueStaVendorName, h3cDot11WIDSAtkStasCurCnt=h3cDot11WIDSAtkStasCurCnt, h3cDot11WIDSAtkStasType=h3cDot11WIDSAtkStasType, h3cDot11SSIDFilterOnOff=h3cDot11SSIDFilterOnOff, h3cDot11AttackStaStatus=h3cDot11AttackStaStatus, h3cDot11ResetAllDctSSID=h3cDot11ResetAllDctSSID, h3cDot11WIDSRogueMAC=h3cDot11WIDSRogueMAC, h3cDot11BlackListTimeTicks=h3cDot11BlackListTimeTicks, h3cDot11IgnoreMACDetected=h3cDot11IgnoreMACDetected, h3cDot11BlackListRowStatus=h3cDot11BlackListRowStatus, h3cDot11IgnoreListRowStatus=h3cDot11IgnoreListRowStatus, h3cDot11WIDSAtkHisChl=h3cDot11WIDSAtkHisChl, h3cDot11WIDSAPID=h3cDot11WIDSAPID, h3cDot11WIDSTraps=h3cDot11WIDSTraps, h3cDot11ResetAllDctAdhoc=h3cDot11ResetAllDctAdhoc, h3cDot11WIDSRptAPMaxRSSI=h3cDot11WIDSRptAPMaxRSSI, h3cDot11BlackListTime=h3cDot11BlackListTime, h3cDot11WIDS=h3cDot11WIDS, h3cDot11WIDSRogueHisMAC=h3cDot11WIDSRogueHisMAC, h3cDot11WIDSDetectedDevEntry=h3cDot11WIDSDetectedDevEntry, h3cDot11StaticWhiteListMAC=h3cDot11StaticWhiteListMAC, h3cDot11WIDSAtkChannel=h3cDot11WIDSAtkChannel, h3cDot11WIDSAdHocMAC=h3cDot11WIDSAdHocMAC, h3cDot11WIDSAttackListEntry=h3cDot11WIDSAttackListEntry, h3cDot11DynBlackListTimeTicks=h3cDot11DynBlackListTimeTicks, h3cDot11WIDSRogueHisIndex=h3cDot11WIDSRogueHisIndex, h3cDot11WIDSMonitorMAC=h3cDot11WIDSMonitorMAC, h3cDot11WIDSUnauthorSSIDTrap=h3cDot11WIDSUnauthorSSIDTrap, h3cDot11FloodAtkDctEnable=h3cDot11FloodAtkDctEnable, h3cDot11DetectCurAPSigStrength=h3cDot11DetectCurAPSigStrength, h3cDot11WIDSDevPermitType=h3cDot11WIDSDevPermitType, h3cDot11WIDSRptAPLstDctTime=h3cDot11WIDSRptAPLstDctTime, h3cDot11IgnoreDevType=h3cDot11IgnoreDevType, h3cDot11SpoofAtkDctEnable=h3cDot11SpoofAtkDctEnable, h3cDot11PermitSSID=h3cDot11PermitSSID, h3cDot11RogueAPMonitorNum=h3cDot11RogueAPMonitorNum)
