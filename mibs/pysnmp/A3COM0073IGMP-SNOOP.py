#
# PySNMP MIB module A3COM0073IGMP-SNOOP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM0073IGMP-SNOOP
# Produced by pysmi-0.3.4 at Mon Apr 29 16:54:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Bits, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, Integer32, Counter32, NotificationType, MibIdentifier, ModuleIdentity, Unsigned32, enterprises, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "Integer32", "Counter32", "NotificationType", "MibIdentifier", "ModuleIdentity", "Unsigned32", "enterprises", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
generic = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10))
igmpMib = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 37))
igmpSnoop = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 37, 1))
igmpSnoopEnabled = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopEnabled.setStatus('mandatory')
igmpSnoopRobustness = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopRobustness.setStatus('mandatory')
igmpSnoopLeaveEnabled = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopLeaveEnabled.setStatus('mandatory')
igmpSnoopQueryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 125)).clone(125)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopQueryTimeout.setStatus('mandatory')
igmpSnoopQueryMaxResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopQueryMaxResponseTime.setStatus('mandatory')
igmpSnoopLastMemberQueryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopLastMemberQueryTimeout.setStatus('mandatory')
igmpSnoopLastMemberQueryCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 5)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopLastMemberQueryCount.setStatus('mandatory')
igmpSnoopRouterPortRefreshTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(70, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpSnoopRouterPortRefreshTimeout.setStatus('mandatory')
igmpSnoopVLANTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 9), )
if mibBuilder.loadTexts: igmpSnoopVLANTable.setStatus('mandatory')
igmpSnoopVLANEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: igmpSnoopVLANEntry.setStatus('mandatory')
igmpSnoopVLANJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 9, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopVLANJoins.setStatus('mandatory')
igmpSnoopVLANLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: igmpSnoopVLANLeaves.setStatus('mandatory')
igmpQueryEnabled = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 10), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpQueryEnabled.setStatus('mandatory')
igmpQueryIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 37, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: igmpQueryIpAddress.setStatus('mandatory')
mibBuilder.exportSymbols("A3COM0073IGMP-SNOOP", igmpSnoopLeaveEnabled=igmpSnoopLeaveEnabled, generic=generic, igmpSnoopQueryMaxResponseTime=igmpSnoopQueryMaxResponseTime, igmpMib=igmpMib, igmpSnoopQueryTimeout=igmpSnoopQueryTimeout, igmpSnoopLastMemberQueryCount=igmpSnoopLastMemberQueryCount, igmpSnoopRobustness=igmpSnoopRobustness, igmpSnoopVLANLeaves=igmpSnoopVLANLeaves, igmpSnoopEnabled=igmpSnoopEnabled, TruthValue=TruthValue, igmpSnoopVLANTable=igmpSnoopVLANTable, igmpSnoopVLANEntry=igmpSnoopVLANEntry, igmpQueryIpAddress=igmpQueryIpAddress, a3Com=a3Com, igmpSnoopLastMemberQueryTimeout=igmpSnoopLastMemberQueryTimeout, igmpQueryEnabled=igmpQueryEnabled, igmpSnoopVLANJoins=igmpSnoopVLANJoins, igmpSnoop=igmpSnoop, igmpSnoopRouterPortRefreshTimeout=igmpSnoopRouterPortRefreshTimeout)
