#
# PySNMP MIB module CISCO-CONTEXT-MAPPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CONTEXT-MAPPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:36:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoBridgeDomain, = mibBuilder.importSymbols("CISCO-TC", "CiscoBridgeDomain")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, NotificationType, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, ObjectIdentity, MibIdentifier, Counter32, IpAddress, Bits, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "ObjectIdentity", "MibIdentifier", "Counter32", "IpAddress", "Bits", "Gauge32", "iso")
StorageType, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "DisplayString", "TextualConvention", "RowStatus")
ciscoContextMappingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 468))
ciscoContextMappingMIB.setRevisions(('2008-11-22 00:00', '2008-05-30 00:00', '2008-02-01 00:00', '2005-03-17 00:00',))
if mibBuilder.loadTexts: ciscoContextMappingMIB.setLastUpdated('200811220000Z')
if mibBuilder.loadTexts: ciscoContextMappingMIB.setOrganization('Cisco Systems, Inc.')
cContextMappingMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 468, 1))
cContextMappingMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 468, 2))
cContextMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 1), )
if mibBuilder.loadTexts: cContextMappingTable.setStatus('current')
cContextMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 1, 1), ).setIndexNames((0, "CISCO-CONTEXT-MAPPING-MIB", "cContextMappingVacmContextName"))
if mibBuilder.loadTexts: cContextMappingEntry.setStatus('current')
cContextMappingVacmContextName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: cContextMappingVacmContextName.setStatus('current')
cContextMappingVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingVrfName.setStatus('current')
cContextMappingTopologyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingTopologyName.setStatus('current')
cContextMappingProtoInstName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingProtoInstName.setStatus('current')
cContextMappingStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 1, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingStorageType.setStatus('current')
cContextMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingRowStatus.setStatus('current')
cContextMappingBridgeDomainTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 2), )
if mibBuilder.loadTexts: cContextMappingBridgeDomainTable.setStatus('current')
cContextMappingBridgeDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 2, 1), ).setIndexNames((0, "CISCO-CONTEXT-MAPPING-MIB", "cContextMappingVacmContextName"))
if mibBuilder.loadTexts: cContextMappingBridgeDomainEntry.setStatus('current')
cContextMappingBridgeDomainIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 2, 1, 1), CiscoBridgeDomain()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingBridgeDomainIdentifier.setStatus('current')
cContextMappingBridgeDomainStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 2, 1, 2), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingBridgeDomainStorageType.setStatus('current')
cContextMappingBridgeDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingBridgeDomainRowStatus.setStatus('current')
cContextMappingBridgeInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 3), )
if mibBuilder.loadTexts: cContextMappingBridgeInstanceTable.setStatus('current')
cContextMappingBridgeInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 3, 1), ).setIndexNames((0, "CISCO-CONTEXT-MAPPING-MIB", "cContextMappingVacmContextName"))
if mibBuilder.loadTexts: cContextMappingBridgeInstanceEntry.setStatus('current')
cContextMappingBridgeInstName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 3, 1, 1), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingBridgeInstName.setStatus('current')
cContextMappingBridgeInstStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 3, 1, 2), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingBridgeInstStorageType.setStatus('current')
cContextMappingBridgeInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingBridgeInstRowStatus.setStatus('current')
cContextMappingLicenseGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 4), )
if mibBuilder.loadTexts: cContextMappingLicenseGroupTable.setStatus('current')
cContextMappingLicenseGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 4, 1), ).setIndexNames((0, "CISCO-CONTEXT-MAPPING-MIB", "cContextMappingVacmContextName"))
if mibBuilder.loadTexts: cContextMappingLicenseGroupEntry.setStatus('current')
cContextMappingLicenseGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingLicenseGroupName.setStatus('current')
cContextMappingLicenseGroupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 4, 1, 2), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingLicenseGroupStorageType.setStatus('current')
cContextMappingLicenseGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 468, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cContextMappingLicenseGroupRowStatus.setStatus('current')
cContextMappingMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 1))
cContextMappingMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 2))
cContextMappingMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 1, 1)).setObjects(("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingDataGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cContextMappingMIBCompliance = cContextMappingMIBCompliance.setStatus('deprecated')
cContextMappingMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 1, 2)).setObjects(("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingDataGroup"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeDomainDataGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cContextMappingMIBComplianceRev1 = cContextMappingMIBComplianceRev1.setStatus('deprecated')
cContextMappingMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 1, 3)).setObjects(("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingDataGroup"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeDomainDataGroup"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeInstanceDataGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cContextMappingMIBComplianceRev2 = cContextMappingMIBComplianceRev2.setStatus('deprecated')
cContextMappingMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 1, 4)).setObjects(("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingDataGroup"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeDomainDataGroup"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeInstanceDataGroup"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingLicenseGroupDataGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cContextMappingMIBComplianceRev3 = cContextMappingMIBComplianceRev3.setStatus('current')
cContextMappingDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 2, 1)).setObjects(("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingVrfName"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingTopologyName"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingProtoInstName"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingStorageType"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cContextMappingDataGroup = cContextMappingDataGroup.setStatus('current')
cContextMappingBridgeDomainDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 2, 2)).setObjects(("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeDomainIdentifier"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeDomainStorageType"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeDomainRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cContextMappingBridgeDomainDataGroup = cContextMappingBridgeDomainDataGroup.setStatus('current')
cContextMappingBridgeInstanceDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 2, 3)).setObjects(("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeInstName"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeInstStorageType"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingBridgeInstRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cContextMappingBridgeInstanceDataGroup = cContextMappingBridgeInstanceDataGroup.setStatus('current')
cContextMappingLicenseGroupDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 468, 2, 2, 4)).setObjects(("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingLicenseGroupName"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingLicenseGroupStorageType"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingLicenseGroupStorageType"), ("CISCO-CONTEXT-MAPPING-MIB", "cContextMappingLicenseGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cContextMappingLicenseGroupDataGroup = cContextMappingLicenseGroupDataGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CONTEXT-MAPPING-MIB", cContextMappingBridgeDomainStorageType=cContextMappingBridgeDomainStorageType, cContextMappingLicenseGroupRowStatus=cContextMappingLicenseGroupRowStatus, cContextMappingProtoInstName=cContextMappingProtoInstName, ciscoContextMappingMIB=ciscoContextMappingMIB, cContextMappingTopologyName=cContextMappingTopologyName, cContextMappingBridgeDomainDataGroup=cContextMappingBridgeDomainDataGroup, cContextMappingBridgeDomainEntry=cContextMappingBridgeDomainEntry, cContextMappingMIBObjects=cContextMappingMIBObjects, cContextMappingMIBGroups=cContextMappingMIBGroups, cContextMappingBridgeInstanceEntry=cContextMappingBridgeInstanceEntry, cContextMappingBridgeInstStorageType=cContextMappingBridgeInstStorageType, cContextMappingLicenseGroupDataGroup=cContextMappingLicenseGroupDataGroup, cContextMappingMIBComplianceRev3=cContextMappingMIBComplianceRev3, cContextMappingEntry=cContextMappingEntry, cContextMappingStorageType=cContextMappingStorageType, cContextMappingLicenseGroupTable=cContextMappingLicenseGroupTable, cContextMappingTable=cContextMappingTable, cContextMappingLicenseGroupEntry=cContextMappingLicenseGroupEntry, cContextMappingDataGroup=cContextMappingDataGroup, cContextMappingBridgeInstRowStatus=cContextMappingBridgeInstRowStatus, cContextMappingBridgeDomainIdentifier=cContextMappingBridgeDomainIdentifier, cContextMappingMIBConformance=cContextMappingMIBConformance, cContextMappingLicenseGroupStorageType=cContextMappingLicenseGroupStorageType, cContextMappingMIBCompliance=cContextMappingMIBCompliance, cContextMappingBridgeInstanceDataGroup=cContextMappingBridgeInstanceDataGroup, cContextMappingRowStatus=cContextMappingRowStatus, PYSNMP_MODULE_ID=ciscoContextMappingMIB, cContextMappingVrfName=cContextMappingVrfName, cContextMappingBridgeInstName=cContextMappingBridgeInstName, cContextMappingLicenseGroupName=cContextMappingLicenseGroupName, cContextMappingBridgeDomainTable=cContextMappingBridgeDomainTable, cContextMappingBridgeInstanceTable=cContextMappingBridgeInstanceTable, cContextMappingVacmContextName=cContextMappingVacmContextName, cContextMappingMIBComplianceRev2=cContextMappingMIBComplianceRev2, cContextMappingMIBComplianceRev1=cContextMappingMIBComplianceRev1, cContextMappingBridgeDomainRowStatus=cContextMappingBridgeDomainRowStatus, cContextMappingMIBCompliances=cContextMappingMIBCompliances)
