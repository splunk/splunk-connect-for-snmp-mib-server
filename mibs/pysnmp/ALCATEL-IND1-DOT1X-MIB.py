#
# PySNMP MIB module ALCATEL-IND1-DOT1X-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-DOT1X-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:01:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Dot1X, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Dot1X")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
dot1xPaePortNumber, = mibBuilder.importSymbols("IEEE8021-PAE-MIB", "dot1xPaePortNumber")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibIdentifier, Counter32, Counter64, Unsigned32, NotificationType, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, iso, Bits, enterprises, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "Counter64", "Unsigned32", "NotificationType", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "iso", "Bits", "enterprises", "ObjectIdentity", "Integer32")
TimeStamp, DisplayString, TextualConvention, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DisplayString", "TextualConvention", "MacAddress", "TruthValue")
alcatelIND1Dot1XMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1))
alcatelIND1Dot1XMIB.setRevisions(('2010-02-10 00:00', '2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1Dot1XMIB.setLastUpdated('201002100000Z')
if mibBuilder.loadTexts: alcatelIND1Dot1XMIB.setOrganization('Alcatel-Lucent')
alaIND1Dot1XMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1))
if mibBuilder.loadTexts: alaIND1Dot1XMIBObjects.setStatus('current')
alaIND1Dot1XMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 2))
if mibBuilder.loadTexts: alaIND1Dot1XMIBConformance.setStatus('current')
alaIND1Dot1XMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 2, 1))
if mibBuilder.loadTexts: alaIND1Dot1XMIBGroups.setStatus('current')
class ALADot1xClassificationPolicyType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))
    namedValues = NamedValues(("dotXAuthentication", 0), ("macAuthentication", 1), ("groupMobilityRules", 2), ("vlanId", 3), ("defaultVlan", 4), ("block", 5), ("internalUseOnlyA", 6), ("internalUseOnlyB", 7), ("internalUseOnlyC", 8), ("captivePortalAuthentication", 9), ("captivePortalGroupMobility", 10), ("captivePortalDefaultVlan", 11), ("captivePortalVlanId", 12), ("captivePortalBlock", 13), ("captivePortalUnknown", 14), ("captivePortalUnpAuthSrv", 15), ("captivePortalUnpUsrCfg", 16), ("captivePortalUnpAAArule", 17), ("authServerUNP", 18), ("userConfigUNP", 19), ("aaaRuleUNP", 20), ("aaaAuthSvrDownUNP", 21), ("aaaAuthSvrDownBlock", 22))

class ALADot1xAuthenticationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("noAuthentication", 0), ("dotXAuthentication", 1), ("macAuthentication", 2), ("captivePortal", 3))

class ALADot1xAuthenticationResult(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("notApplicable", 0), ("inProgress", 1), ("success", 2), ("fail", 3))

class ALADot1xMacLearntState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("bridging", 0), ("filtering", 1), ("hicInProgress", 2), ("qmrInProgress", 3))

class ALADot1xMacQueryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("all", 0), ("supplicant", 1), ("nonSupplicant", 2), ("captivePortal", 3))

class ALADot1xDeviceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("supplicant", 1), ("nonSupplicant", 2))

alaDot1xPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1), )
if mibBuilder.loadTexts: alaDot1xPortTable.setStatus('deprecated')
alaDot1xPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"))
if mibBuilder.loadTexts: alaDot1xPortEntry.setStatus('deprecated')
alaDot1xPortSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortSlotNumber.setStatus('deprecated')
alaDot1xPortPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortPortNumber.setStatus('deprecated')
alaDot1xPortMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortMACAddress.setStatus('deprecated')
alaDot1xPortVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortVlan.setStatus('deprecated')
alaDot1xPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortProtocol.setStatus('deprecated')
alaDot1xPortUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortUserName.setStatus('deprecated')
alaDot1xPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initialize", 1), ("disconnected", 2), ("connecting", 3), ("authenticating", 4), ("authenticated", 5), ("aborting", 6), ("held", 7), ("forceAuthenticated", 8), ("forceUnauthenticated", 9), ("authenticatedLocally", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortState.setStatus('deprecated')
alaDot1xSupplicantPolicyUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 1, 1, 8), ALADot1xClassificationPolicyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xSupplicantPolicyUsed.setStatus('deprecated')
alaDot1xMacTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4), )
if mibBuilder.loadTexts: alaDot1xMacTable.setStatus('current')
alaDot1xMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xMACAddress"))
if mibBuilder.loadTexts: alaDot1xMacEntry.setStatus('current')
alaDot1xMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaDot1xMACAddress.setStatus('current')
alaDot1xMacIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xMacIfIndex.setStatus('current')
alaDot1xMacSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xMacSlotNumber.setStatus('current')
alaDot1xMacPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xMacPortNumber.setStatus('current')
alaDot1xMacVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xMacVlan.setStatus('current')
alaDot1xMacProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xMacProtocol.setStatus('current')
alaDot1xMacUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xMacUserName.setStatus('current')
alaDot1xMacState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initialize", 1), ("disconnected", 2), ("connecting", 3), ("authenticating", 4), ("authenticated", 5), ("aborting", 6), ("held", 7), ("forceAuthenticated", 8), ("forceUnauthenticated", 9), ("authenticatedLocally", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xMacState.setStatus('current')
alaDot1xMacSupplicantPolicyUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 4, 1, 9), ALADot1xClassificationPolicyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xMacSupplicantPolicyUsed.setStatus('current')
alaDot1xPortLookupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 2), )
if mibBuilder.loadTexts: alaDot1xPortLookupTable.setStatus('current')
alaDot1xPortLookupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortLookupSlotNumber"), (0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortLookupPortNumber"), (0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortLookupMACAddress"))
if mibBuilder.loadTexts: alaDot1xPortLookupEntry.setStatus('current')
alaDot1xPortLookupSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortLookupSlotNumber.setStatus('current')
alaDot1xPortLookupPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortLookupPortNumber.setStatus('current')
alaDot1xPortLookupMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortLookupMACAddress.setStatus('current')
alaDot1xPortLookupInterfaceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 2, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xPortLookupInterfaceNumber.setStatus('current')
alaDot1xNonSupplicantTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 5), )
if mibBuilder.loadTexts: alaDot1xNonSupplicantTable.setStatus('current')
alaDot1xNonSupplicantEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xNonSupplicantIntfNum"), (0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xNonSupplicantMACAddress"))
if mibBuilder.loadTexts: alaDot1xNonSupplicantEntry.setStatus('current')
alaDot1xNonSupplicantIntfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 5, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xNonSupplicantIntfNum.setStatus('current')
alaDot1xNonSupplicantMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xNonSupplicantMACAddress.setStatus('current')
alaDot1xNonSupplicantVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xNonSupplicantVlanID.setStatus('current')
alaDot1xNonSupplicantPolicyUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 5, 1, 4), ALADot1xClassificationPolicyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xNonSupplicantPolicyUsed.setStatus('current')
alaDot1xAuthenticationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("idle", 1), ("inProgress", 2), ("authenticated", 3), ("failed", 4), ("failedTimeout", 5), ("failedNoServer", 6), ("failedNoResources", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xAuthenticationStatus.setStatus('current')
alaDot1xAuthPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 6), )
if mibBuilder.loadTexts: alaDot1xAuthPolicyTable.setStatus('current')
alaDot1xAuthPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xAuthPolicyIntfNumber"))
if mibBuilder.loadTexts: alaDot1xAuthPolicyEntry.setStatus('current')
alaDot1xAuthPolicyIntfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDot1xAuthPolicyIntfNumber.setStatus('current')
alaDot1xNonSuppPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xNonSuppPolicy.setStatus('current')
alaDot1xSuppPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xSuppPolicy.setStatus('current')
alaDot1xPollingCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xPollingCnt.setStatus('current')
alaDot1xCaptivePortalPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCaptivePortalPolicy.setStatus('current')
alaDot1xCPortalSessionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalSessionLimit.setStatus('current')
alaDot1xCPortalRetryCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalRetryCnt.setStatus('current')
alaDot1xCportalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 7))
alaDot1xCPortalIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 7, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalIpAddress.setStatus('current')
alaDot1xCPortalProxyURL = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 7, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalProxyURL.setStatus('current')
alaDot1xCPortalPostAuthSuccessRedirectURL = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 7, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalPostAuthSuccessRedirectURL.setStatus('current')
alaDot1xCPortalPostAuthFailRedirectURL = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 7, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalPostAuthFailRedirectURL.setStatus('current')
alaDot1xCPortalDNSKeyword1 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 7, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalDNSKeyword1.setStatus('current')
alaDot1xCPortalDNSKeyword2 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 7, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalDNSKeyword2.setStatus('current')
alaDot1xCPortalDNSKeyword3 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 7, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalDNSKeyword3.setStatus('current')
alaDot1xCPortalDNSKeyword4 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 7, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xCPortalDNSKeyword4.setStatus('current')
alaDot1xDeviceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8), )
if mibBuilder.loadTexts: alaDot1xDeviceStatusTable.setStatus('current')
alaDot1xDeviceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusMacQueryType"), (0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusSlotNumber"), (0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusPortNumber"), (0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusMACAddress"), (0, "ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusDeviceType"))
if mibBuilder.loadTexts: alaDot1xDeviceStatusEntry.setStatus('current')
alaDot1xDeviceStatusMacQueryType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 1), ALADot1xMacQueryType())
if mibBuilder.loadTexts: alaDot1xDeviceStatusMacQueryType.setStatus('current')
alaDot1xDeviceStatusSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: alaDot1xDeviceStatusSlotNumber.setStatus('current')
alaDot1xDeviceStatusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)))
if mibBuilder.loadTexts: alaDot1xDeviceStatusPortNumber.setStatus('current')
alaDot1xDeviceStatusMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 4), MacAddress())
if mibBuilder.loadTexts: alaDot1xDeviceStatusMACAddress.setStatus('current')
alaDot1xDeviceStatusDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 5), ALADot1xDeviceType())
if mibBuilder.loadTexts: alaDot1xDeviceStatusDeviceType.setStatus('current')
alaDot1xDeviceStatusVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusVlan.setStatus('current')
alaDot1xDeviceStatusIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusIPAddress.setStatus('current')
alaDot1xDeviceStatusUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusUserName.setStatus('current')
alaDot1xDeviceStatusProfileUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusProfileUsed.setStatus('current')
alaDot1xDeviceStatusAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 10), ALADot1xAuthenticationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusAuthType.setStatus('current')
alaDot1xDeviceStatusPolicyUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 11), ALADot1xClassificationPolicyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusPolicyUsed.setStatus('current')
alaDot1xDeviceStatusAuthResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 12), ALADot1xAuthenticationResult()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusAuthResult.setStatus('current')
alaDot1xDeviceStatusMacLearntState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 13), ALADot1xMacLearntState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusMacLearntState.setStatus('current')
alaDot1xDeviceStatusTimeLearned = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusTimeLearned.setStatus('current')
alaDot1xDeviceStatusCaptivePortalUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 8, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot1xDeviceStatusCaptivePortalUsed.setStatus('current')
alaDot1xAdminLogoutParams = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 9))
alaDot1xAdminLogoutType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noOperation", 0), ("macAddress", 1), ("username", 2), ("networkProfileName", 3), ("interfaceId", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xAdminLogoutType.setStatus('current')
alaDot1xAdminLogoutMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 9, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xAdminLogoutMacAddress.setStatus('current')
alaDot1xAdminLogoutUserName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 9, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xAdminLogoutUserName.setStatus('current')
alaDot1xAdminLogoutNetworkProfileName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 9, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xAdminLogoutNetworkProfileName.setStatus('current')
alaDot1xAdminLogoutInterfaceId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 9, 5), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xAdminLogoutInterfaceId.setStatus('current')
alaDot1xAuthServerTimeout = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 10))
alaDot1xAuthSvrTimeoutPolicy = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xAuthSvrTimeoutPolicy.setStatus('current')
alaDot1xAuthSvrTimeoutReAuthPeriod = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 10, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xAuthSvrTimeoutReAuthPeriod.setStatus('current')
alaDot1xAuthSvrTimeoutStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xAuthSvrTimeoutStatus.setStatus('current')
class AlaPassThroughStatus(TextualConvention, Integer32):
    status = 'obsolete'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

alaPassthroughConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 11))
alaDot1xPassthroughStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 11, 1), AlaPassThroughStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot1xPassthroughStatus.setStatus('obsolete')
alaAvlanPassthroughStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 1, 11, 2), AlaPassThroughStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAvlanPassthroughStatus.setStatus('obsolete')
alaIND1Dot1XMIBCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 2, 2)).setObjects(("ALCATEL-IND1-DOT1X-MIB", "alaINDDot1XPortGroup"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortLookupGroup"), ("ALCATEL-IND1-DOT1X-MIB", "alaINDDot1XPolicyGroup"), ("ALCATEL-IND1-DOT1X-MIB", "alaINDDot1XDeviceStatusGroup"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xAuthSvrTimeoutGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIND1Dot1XMIBCompliances = alaIND1Dot1XMIBCompliances.setStatus('current')
alaINDDot1XPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortSlotNumber"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortPortNumber"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortMACAddress"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortVlan"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortProtocol"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortUserName"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaINDDot1XPortGroup = alaINDDot1XPortGroup.setStatus('current')
alaDot1xPortLookupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortLookupSlotNumber"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortLookupPortNumber"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortLookupMACAddress"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPortLookupInterfaceNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot1xPortLookupGroup = alaDot1xPortLookupGroup.setStatus('current')
alaINDDot1XPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-DOT1X-MIB", "alaDot1xNonSuppPolicy"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xSuppPolicy"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPollingCnt"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xCaptivePortalPolicy"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xCPortalSessionLimit"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xCPortalRetryCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaINDDot1XPolicyGroup = alaINDDot1XPolicyGroup.setStatus('current')
alaINDDot1XDeviceStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusVlan"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusIPAddress"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusUserName"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusProfileUsed"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusAuthType"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusPolicyUsed"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusAuthResult"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusMacLearntState"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusTimeLearned"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xDeviceStatusCaptivePortalUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaINDDot1XDeviceStatusGroup = alaINDDot1XDeviceStatusGroup.setStatus('current')
alaDot1xAuthSvrTimeoutGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-DOT1X-MIB", "alaDot1xAuthSvrTimeoutPolicy"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xAuthSvrTimeoutReAuthPeriod"), ("ALCATEL-IND1-DOT1X-MIB", "alaDot1xAuthSvrTimeoutStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot1xAuthSvrTimeoutGroup = alaDot1xAuthSvrTimeoutGroup.setStatus('current')
alaPassthroughConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 30, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-DOT1X-MIB", "alaDot1xPassthroughStatus"), ("ALCATEL-IND1-DOT1X-MIB", "alaAvlanPassthroughStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaPassthroughConfigGroup = alaPassthroughConfigGroup.setStatus('obsolete')
mibBuilder.exportSymbols("ALCATEL-IND1-DOT1X-MIB", alaDot1xPortEntry=alaDot1xPortEntry, alaDot1xPortVlan=alaDot1xPortVlan, alaDot1xDeviceStatusDeviceType=alaDot1xDeviceStatusDeviceType, alaDot1xCPortalSessionLimit=alaDot1xCPortalSessionLimit, alaDot1xDeviceStatusVlan=alaDot1xDeviceStatusVlan, alaDot1xSupplicantPolicyUsed=alaDot1xSupplicantPolicyUsed, alaDot1xDeviceStatusAuthResult=alaDot1xDeviceStatusAuthResult, alaINDDot1XPortGroup=alaINDDot1XPortGroup, alaPassthroughConfigGroup=alaPassthroughConfigGroup, alaDot1xAuthSvrTimeoutReAuthPeriod=alaDot1xAuthSvrTimeoutReAuthPeriod, alaINDDot1XPolicyGroup=alaINDDot1XPolicyGroup, alaDot1xDeviceStatusPolicyUsed=alaDot1xDeviceStatusPolicyUsed, alaDot1xPortLookupEntry=alaDot1xPortLookupEntry, alaDot1xMacPortNumber=alaDot1xMacPortNumber, alaDot1xMacSlotNumber=alaDot1xMacSlotNumber, alaDot1xMacUserName=alaDot1xMacUserName, alaDot1xDeviceStatusPortNumber=alaDot1xDeviceStatusPortNumber, alaDot1xCPortalDNSKeyword3=alaDot1xCPortalDNSKeyword3, alaDot1xAdminLogoutInterfaceId=alaDot1xAdminLogoutInterfaceId, alaPassthroughConfig=alaPassthroughConfig, alaDot1xAdminLogoutMacAddress=alaDot1xAdminLogoutMacAddress, alaDot1xAdminLogoutType=alaDot1xAdminLogoutType, alaDot1xCPortalPostAuthSuccessRedirectURL=alaDot1xCPortalPostAuthSuccessRedirectURL, alaDot1xPortLookupGroup=alaDot1xPortLookupGroup, alaDot1xNonSupplicantTable=alaDot1xNonSupplicantTable, alaDot1xAuthSvrTimeoutPolicy=alaDot1xAuthSvrTimeoutPolicy, alaDot1xPortState=alaDot1xPortState, alaDot1xDeviceStatusTimeLearned=alaDot1xDeviceStatusTimeLearned, alaDot1xPortSlotNumber=alaDot1xPortSlotNumber, alaDot1xAdminLogoutUserName=alaDot1xAdminLogoutUserName, alaIND1Dot1XMIBConformance=alaIND1Dot1XMIBConformance, alaDot1xPortLookupTable=alaDot1xPortLookupTable, alaDot1xAdminLogoutNetworkProfileName=alaDot1xAdminLogoutNetworkProfileName, alaINDDot1XDeviceStatusGroup=alaINDDot1XDeviceStatusGroup, alcatelIND1Dot1XMIB=alcatelIND1Dot1XMIB, ALADot1xDeviceType=ALADot1xDeviceType, alaDot1xMacEntry=alaDot1xMacEntry, alaDot1xCPortalPostAuthFailRedirectURL=alaDot1xCPortalPostAuthFailRedirectURL, alaDot1xAuthPolicyIntfNumber=alaDot1xAuthPolicyIntfNumber, alaDot1xDeviceStatusUserName=alaDot1xDeviceStatusUserName, alaDot1xMacState=alaDot1xMacState, alaDot1xMacProtocol=alaDot1xMacProtocol, alaDot1xNonSuppPolicy=alaDot1xNonSuppPolicy, alaDot1xNonSupplicantVlanID=alaDot1xNonSupplicantVlanID, alaIND1Dot1XMIBCompliances=alaIND1Dot1XMIBCompliances, alaDot1xNonSupplicantIntfNum=alaDot1xNonSupplicantIntfNum, alaDot1xPortProtocol=alaDot1xPortProtocol, alaDot1xAuthPolicyEntry=alaDot1xAuthPolicyEntry, alaDot1xDeviceStatusCaptivePortalUsed=alaDot1xDeviceStatusCaptivePortalUsed, alaDot1xDeviceStatusTable=alaDot1xDeviceStatusTable, alaDot1xMacTable=alaDot1xMacTable, ALADot1xClassificationPolicyType=ALADot1xClassificationPolicyType, alaDot1xPortLookupInterfaceNumber=alaDot1xPortLookupInterfaceNumber, alaDot1xAdminLogoutParams=alaDot1xAdminLogoutParams, alaDot1xPassthroughStatus=alaDot1xPassthroughStatus, alaDot1xCPortalDNSKeyword1=alaDot1xCPortalDNSKeyword1, alaDot1xDeviceStatusMacQueryType=alaDot1xDeviceStatusMacQueryType, alaDot1xDeviceStatusSlotNumber=alaDot1xDeviceStatusSlotNumber, alaDot1xDeviceStatusProfileUsed=alaDot1xDeviceStatusProfileUsed, alaDot1xAuthenticationStatus=alaDot1xAuthenticationStatus, alaDot1xMacVlan=alaDot1xMacVlan, alaDot1xAuthPolicyTable=alaDot1xAuthPolicyTable, ALADot1xMacQueryType=ALADot1xMacQueryType, alaDot1xAuthServerTimeout=alaDot1xAuthServerTimeout, AlaPassThroughStatus=AlaPassThroughStatus, alaDot1xSuppPolicy=alaDot1xSuppPolicy, alaDot1xDeviceStatusAuthType=alaDot1xDeviceStatusAuthType, alaDot1xPollingCnt=alaDot1xPollingCnt, alaDot1xPortPortNumber=alaDot1xPortPortNumber, alaDot1xNonSupplicantEntry=alaDot1xNonSupplicantEntry, ALADot1xMacLearntState=ALADot1xMacLearntState, alaDot1xPortTable=alaDot1xPortTable, alaDot1xCportalConfig=alaDot1xCportalConfig, alaDot1xCPortalDNSKeyword4=alaDot1xCPortalDNSKeyword4, alaDot1xPortMACAddress=alaDot1xPortMACAddress, alaDot1xCPortalProxyURL=alaDot1xCPortalProxyURL, alaIND1Dot1XMIBGroups=alaIND1Dot1XMIBGroups, alaDot1xMACAddress=alaDot1xMACAddress, alaDot1xPortLookupMACAddress=alaDot1xPortLookupMACAddress, alaIND1Dot1XMIBObjects=alaIND1Dot1XMIBObjects, alaDot1xCaptivePortalPolicy=alaDot1xCaptivePortalPolicy, alaAvlanPassthroughStatus=alaAvlanPassthroughStatus, alaDot1xPortUserName=alaDot1xPortUserName, PYSNMP_MODULE_ID=alcatelIND1Dot1XMIB, alaDot1xPortLookupPortNumber=alaDot1xPortLookupPortNumber, alaDot1xMacSupplicantPolicyUsed=alaDot1xMacSupplicantPolicyUsed, alaDot1xDeviceStatusIPAddress=alaDot1xDeviceStatusIPAddress, alaDot1xNonSupplicantPolicyUsed=alaDot1xNonSupplicantPolicyUsed, ALADot1xAuthenticationResult=ALADot1xAuthenticationResult, alaDot1xAuthSvrTimeoutStatus=alaDot1xAuthSvrTimeoutStatus, alaDot1xDeviceStatusMACAddress=alaDot1xDeviceStatusMACAddress, ALADot1xAuthenticationType=ALADot1xAuthenticationType, alaDot1xMacIfIndex=alaDot1xMacIfIndex, alaDot1xDeviceStatusMacLearntState=alaDot1xDeviceStatusMacLearntState, alaDot1xPortLookupSlotNumber=alaDot1xPortLookupSlotNumber, alaDot1xCPortalIpAddress=alaDot1xCPortalIpAddress, alaDot1xAuthSvrTimeoutGroup=alaDot1xAuthSvrTimeoutGroup, alaDot1xDeviceStatusEntry=alaDot1xDeviceStatusEntry, alaDot1xNonSupplicantMACAddress=alaDot1xNonSupplicantMACAddress, alaDot1xCPortalRetryCnt=alaDot1xCPortalRetryCnt, alaDot1xCPortalDNSKeyword2=alaDot1xCPortalDNSKeyword2)
