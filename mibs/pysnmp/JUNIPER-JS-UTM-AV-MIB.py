#
# PySNMP MIB module JUNIPER-JS-UTM-AV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-JS-UTM-AV-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
jnxJsUTMRoot, = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsUTMRoot")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Unsigned32, Counter32, ObjectIdentity, ModuleIdentity, IpAddress, Counter64, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "Counter32", "ObjectIdentity", "ModuleIdentity", "IpAddress", "Counter64", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "Bits", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxJsAntiVirus = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1))
jnxJsAntiVirus.setRevisions(('2011-02-08 08:00',))
if mibBuilder.loadTexts: jnxJsAntiVirus.setLastUpdated('201102080800Z')
if mibBuilder.loadTexts: jnxJsAntiVirus.setOrganization('Juniper Networks, Inc.')
jnxJsAntiVirusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1))
jnxJsAntiVirusTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 2))
jnxJsAntiVirusTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 0))
jnxJsAntiVirusTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 3))
jnxJsAntiVirusEngine = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 1))
jnxJsAVEngineType = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown-engine", 1), ("kaspersky-lab-engine", 2), ("juniper-express-engine", 3), ("sophos-engine", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVEngineType.setStatus('deprecated')
jnxJsAVCurrentPatternVersionString = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVCurrentPatternVersionString.setStatus('deprecated')
jnxJsAVDatabaseType = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("full", 1), ("express", 2), ("unknown", 3), ("sophos", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVDatabaseType.setStatus('deprecated')
jnxJsAntiVirusStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2))
jnxJsAVScanCodeClean = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeClean.setStatus('deprecated')
jnxJsAVScanCodeInfected = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeInfected.setStatus('deprecated')
jnxJsAVScanCodeProtected = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeProtected.setStatus('deprecated')
jnxJsAVScanCodeDecompress = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeDecompress.setStatus('deprecated')
jnxJsAVScanCodeCorrupted = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeCorrupted.setStatus('deprecated')
jnxJsAVScanCodeNoResource = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeNoResource.setStatus('deprecated')
jnxJsAVScanCodeInternalError = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeInternalError.setStatus('deprecated')
jnxJsAVScanCodeMaxContentSize = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeMaxContentSize.setStatus('deprecated')
jnxJsAVScanCodeTooManyReq = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeTooManyReq.setStatus('deprecated')
jnxJsAVScanCodeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeTimeout.setStatus('deprecated')
jnxJsAVScanCodeEngineNotReady = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsAVScanCodeEngineNotReady.setStatus('deprecated')
jnxJsUTMAntiVirusEngine = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 3), )
if mibBuilder.loadTexts: jnxJsUTMAntiVirusEngine.setStatus('current')
jnxJsUTMAntiVirusEngineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 3, 1), ).setIndexNames((0, "JUNIPER-JS-UTM-AV-MIB", "jnxJsUTMAVEngineIndex"))
if mibBuilder.loadTexts: jnxJsUTMAntiVirusEngineEntry.setStatus('current')
jnxJsUTMAVEngineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: jnxJsUTMAVEngineIndex.setStatus('current')
jnxJsUTMAVEngineType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown-engine", 1), ("kaspersky-lab-engine", 2), ("juniper-express-engine", 3), ("sophos-engine", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVEngineType.setStatus('current')
jnxJsUTMAVPatternVersionString = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVPatternVersionString.setStatus('current')
jnxJsUTMAVDatabaseType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("full", 1), ("express", 2), ("unknown", 3), ("sophos", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVDatabaseType.setStatus('current')
jnxJsUTMAntiVirusStats = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4), )
if mibBuilder.loadTexts: jnxJsUTMAntiVirusStats.setStatus('current')
jnxJsUTMAntiVirusStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1), ).setIndexNames((0, "JUNIPER-JS-UTM-AV-MIB", "jnxJsUTMAVStatsIndex"))
if mibBuilder.loadTexts: jnxJsUTMAntiVirusStatsEntry.setStatus('current')
jnxJsUTMAVStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: jnxJsUTMAVStatsIndex.setStatus('current')
jnxJsUTMAVScanCodeClean = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeClean.setStatus('current')
jnxJsUTMAVScanCodeInfected = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeInfected.setStatus('current')
jnxJsUTMAVScanCodeProtected = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeProtected.setStatus('current')
jnxJsUTMAVScanCodeDecompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeDecompress.setStatus('current')
jnxJsUTMAVScanCodeCorrupted = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeCorrupted.setStatus('current')
jnxJsUTMAVScanCodeNoResource = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeNoResource.setStatus('current')
jnxJsUTMAVScanCodeInternalError = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeInternalError.setStatus('current')
jnxJsUTMAVScanCodeMaxContentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeMaxContentSize.setStatus('current')
jnxJsUTMAVScanCodeTooManyReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeTooManyReq.setStatus('current')
jnxJsUTMAVScanCodeTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeTimeout.setStatus('current')
jnxJsUTMAVScanCodeEngineNotReady = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 1, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsUTMAVScanCodeEngineNotReady.setStatus('current')
jnxJsAvPatternUpdateTrap = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 0, 1)).setObjects(("JUNIPER-JS-UTM-AV-MIB", "jnxAVPatternVersionString"), ("JUNIPER-JS-UTM-AV-MIB", "jnxAVPatternTimestamp"))
if mibBuilder.loadTexts: jnxJsAvPatternUpdateTrap.setStatus('current')
jnxAVPatternVersionString = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxAVPatternVersionString.setStatus('current')
jnxAVPatternTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 13, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxAVPatternTimestamp.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-JS-UTM-AV-MIB", jnxJsAntiVirusTrapVars=jnxJsAntiVirusTrapVars, jnxAVPatternVersionString=jnxAVPatternVersionString, jnxJsUTMAntiVirusStats=jnxJsUTMAntiVirusStats, jnxJsUTMAVPatternVersionString=jnxJsUTMAVPatternVersionString, jnxJsAVScanCodeCorrupted=jnxJsAVScanCodeCorrupted, jnxJsAVScanCodeNoResource=jnxJsAVScanCodeNoResource, jnxJsUTMAVScanCodeEngineNotReady=jnxJsUTMAVScanCodeEngineNotReady, jnxJsUTMAVScanCodeProtected=jnxJsUTMAVScanCodeProtected, jnxJsUTMAntiVirusEngine=jnxJsUTMAntiVirusEngine, jnxJsAVScanCodeInfected=jnxJsAVScanCodeInfected, PYSNMP_MODULE_ID=jnxJsAntiVirus, jnxJsAVScanCodeClean=jnxJsAVScanCodeClean, jnxJsUTMAVStatsIndex=jnxJsUTMAVStatsIndex, jnxJsUTMAVScanCodeNoResource=jnxJsUTMAVScanCodeNoResource, jnxJsUTMAVScanCodeCorrupted=jnxJsUTMAVScanCodeCorrupted, jnxJsUTMAVEngineIndex=jnxJsUTMAVEngineIndex, jnxJsAVScanCodeTooManyReq=jnxJsAVScanCodeTooManyReq, jnxJsUTMAVScanCodeClean=jnxJsUTMAVScanCodeClean, jnxJsUTMAntiVirusEngineEntry=jnxJsUTMAntiVirusEngineEntry, jnxJsUTMAVScanCodeTooManyReq=jnxJsUTMAVScanCodeTooManyReq, jnxAVPatternTimestamp=jnxAVPatternTimestamp, jnxJsAVCurrentPatternVersionString=jnxJsAVCurrentPatternVersionString, jnxJsUTMAVEngineType=jnxJsUTMAVEngineType, jnxJsUTMAVScanCodeDecompress=jnxJsUTMAVScanCodeDecompress, jnxJsAVScanCodeDecompress=jnxJsAVScanCodeDecompress, jnxJsUTMAVScanCodeMaxContentSize=jnxJsUTMAVScanCodeMaxContentSize, jnxJsAntiVirusEngine=jnxJsAntiVirusEngine, jnxJsUTMAVScanCodeInfected=jnxJsUTMAVScanCodeInfected, jnxJsAntiVirus=jnxJsAntiVirus, jnxJsUTMAVScanCodeTimeout=jnxJsUTMAVScanCodeTimeout, jnxJsUTMAntiVirusStatsEntry=jnxJsUTMAntiVirusStatsEntry, jnxJsAVScanCodeTimeout=jnxJsAVScanCodeTimeout, jnxJsUTMAVScanCodeInternalError=jnxJsUTMAVScanCodeInternalError, jnxJsAVScanCodeMaxContentSize=jnxJsAVScanCodeMaxContentSize, jnxJsAntiVirusStats=jnxJsAntiVirusStats, jnxJsAVScanCodeInternalError=jnxJsAVScanCodeInternalError, jnxJsUTMAVDatabaseType=jnxJsUTMAVDatabaseType, jnxJsAntiVirusTrapsPrefix=jnxJsAntiVirusTrapsPrefix, jnxJsAntiVirusTraps=jnxJsAntiVirusTraps, jnxJsAVScanCodeEngineNotReady=jnxJsAVScanCodeEngineNotReady, jnxJsAVDatabaseType=jnxJsAVDatabaseType, jnxJsAVEngineType=jnxJsAVEngineType, jnxJsAntiVirusObjects=jnxJsAntiVirusObjects, jnxJsAvPatternUpdateTrap=jnxJsAvPatternUpdateTrap, jnxJsAVScanCodeProtected=jnxJsAVScanCodeProtected)
