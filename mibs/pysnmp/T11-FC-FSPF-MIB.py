#
# PySNMP MIB module T11-FC-FSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/T11-FC-FSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:07:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
fcmInstanceIndex, fcmSwitchIndex, FcDomainIdOrZero = mibBuilder.importSymbols("FC-MGMT-MIB", "fcmInstanceIndex", "fcmSwitchIndex", "FcDomainIdOrZero")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
mib_2, Gauge32, Bits, IpAddress, Integer32, Counter32, iso, NotificationType, ModuleIdentity, ObjectIdentity, Unsigned32, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "Gauge32", "Bits", "IpAddress", "Integer32", "Counter32", "iso", "NotificationType", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
DisplayString, TextualConvention, TruthValue, StorageType, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "StorageType", "RowStatus")
t11FamConfigDomainId, = mibBuilder.importSymbols("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamConfigDomainId")
T11FabricIndex, = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")
t11FcFspfMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 143))
t11FcFspfMIB.setRevisions(('2006-08-14 00:00',))
if mibBuilder.loadTexts: t11FcFspfMIB.setLastUpdated('200608140000Z')
if mibBuilder.loadTexts: t11FcFspfMIB.setOrganization('T11')
t11FspfNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 143, 0))
t11FspfObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 143, 1))
t11FspfConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 143, 2))
t11FspfConfiguration = MibIdentifier((1, 3, 6, 1, 2, 1, 143, 1, 1))
t11FspfDatabase = MibIdentifier((1, 3, 6, 1, 2, 1, 143, 1, 2))
class T11FspfLsrType(TextualConvention, Integer32):
    reference = 'Fibre Channel - Switch Fabric - 4 (FC-SW-4), ANSI INCITS 418-2006, section 6.1.9.3.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class T11FspfLinkType(TextualConvention, Integer32):
    reference = 'Fibre Channel - Switch Fabric - 4 (FC-SW-4), ANSI INCITS 418-2006, section 6.1.9.4.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class T11FspfInterfaceState(TextualConvention, Integer32):
    reference = 'Fibre Channel - Switch Fabric - 4 (FC-SW-4), ANSI INCITS 418-2006, section 8.7.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("down", 1), ("init", 2), ("dbExchange", 3), ("dbAckwait", 4), ("dbWait", 5), ("full", 6))

class T11FspfLastCreationTime(TextualConvention, TimeTicks):
    status = 'current'

t11FspfTable = MibTable((1, 3, 6, 1, 2, 1, 143, 1, 1, 1), )
if mibBuilder.loadTexts: t11FspfTable.setStatus('current')
t11FspfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FSPF-MIB", "t11FspfFabricIndex"))
if mibBuilder.loadTexts: t11FspfEntry.setStatus('current')
t11FspfFabricIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 1), T11FabricIndex())
if mibBuilder.loadTexts: t11FspfFabricIndex.setStatus('current')
t11FspfMinLsArrival = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1000)).setUnits('milliSeconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FspfMinLsArrival.setStatus('current')
t11FspfMinLsInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5000)).setUnits('milliSeconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FspfMinLsInterval.setStatus('current')
t11FspfLsRefreshTime = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 4), Unsigned32().clone(30)).setUnits('Minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLsRefreshTime.setStatus('current')
t11FspfMaxAge = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 5), Unsigned32().clone(60)).setUnits('Minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfMaxAge.setStatus('current')
t11FspfMaxAgeDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfMaxAgeDiscards.setStatus('current')
t11FspfPathComputations = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfPathComputations.setStatus('current')
t11FspfChecksumErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfChecksumErrors.setStatus('current')
t11FspfLsrs = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLsrs.setStatus('current')
t11FspfCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 10), T11FspfLastCreationTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfCreateTime.setStatus('current')
t11FspfAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FspfAdminStatus.setStatus('current')
t11FspfOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfOperStatus.setStatus('current')
t11FspfNbrStateChangNotifyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FspfNbrStateChangNotifyEnable.setStatus('current')
t11FspfSetToDefault = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FspfSetToDefault.setStatus('current')
t11FspfStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 1, 1, 15), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FspfStorageType.setStatus('current')
t11FspfIfTable = MibTable((1, 3, 6, 1, 2, 1, 143, 1, 1, 2), )
if mibBuilder.loadTexts: t11FspfIfTable.setStatus('current')
t11FspfIfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FSPF-MIB", "t11FspfFabricIndex"), (0, "T11-FC-FSPF-MIB", "t11FspfIfIndex"))
if mibBuilder.loadTexts: t11FspfIfEntry.setStatus('current')
t11FspfIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: t11FspfIfIndex.setStatus('current')
t11FspfIfHelloInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(20)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FspfIfHelloInterval.setStatus('current')
t11FspfIfDeadInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 65535)).clone(80)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FspfIfDeadInterval.setStatus('current')
t11FspfIfRetransmitInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FspfIfRetransmitInterval.setStatus('current')
t11FspfIfInLsuPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfInLsuPkts.setStatus('current')
t11FspfIfInLsaPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfInLsaPkts.setStatus('current')
t11FspfIfOutLsuPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfOutLsuPkts.setStatus('current')
t11FspfIfOutLsaPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfOutLsaPkts.setStatus('current')
t11FspfIfOutHelloPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfOutHelloPkts.setStatus('current')
t11FspfIfInHelloPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfInHelloPkts.setStatus('current')
t11FspfIfRetransmittedLsuPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfRetransmittedLsuPkts.setStatus('current')
t11FspfIfInErrorPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfInErrorPkts.setStatus('current')
t11FspfIfNbrState = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 13), T11FspfInterfaceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfNbrState.setStatus('current')
t11FspfIfNbrDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 14), FcDomainIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfNbrDomainId.setStatus('current')
t11FspfIfNbrPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfNbrPortIndex.setStatus('current')
t11FspfIfAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FspfIfAdminStatus.setStatus('current')
t11FspfIfCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 17), T11FspfLastCreationTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfIfCreateTime.setStatus('current')
t11FspfIfSetToDefault = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("noOp", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FspfIfSetToDefault.setStatus('current')
t11FspfIfLinkCostFactor = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FspfIfLinkCostFactor.setStatus('current')
t11FspfIfStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 20), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FspfIfStorageType.setStatus('current')
t11FspfIfRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 1, 2, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FspfIfRowStatus.setStatus('current')
t11FspfLsrTable = MibTable((1, 3, 6, 1, 2, 1, 143, 1, 2, 1), )
if mibBuilder.loadTexts: t11FspfLsrTable.setStatus('current')
t11FspfLsrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FSPF-MIB", "t11FspfFabricIndex"), (0, "T11-FC-FSPF-MIB", "t11FspfLsrDomainId"), (0, "T11-FC-FSPF-MIB", "t11FspfLsrType"))
if mibBuilder.loadTexts: t11FspfLsrEntry.setStatus('current')
t11FspfLsrDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 1), FcDomainIdOrZero())
if mibBuilder.loadTexts: t11FspfLsrDomainId.setStatus('current')
t11FspfLsrType = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 2), T11FspfLsrType())
if mibBuilder.loadTexts: t11FspfLsrType.setStatus('current')
t11FspfLsrAdvDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 3), FcDomainIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLsrAdvDomainId.setStatus('current')
t11FspfLsrAge = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLsrAge.setStatus('current')
t11FspfLsrIncarnationNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLsrIncarnationNumber.setStatus('current')
t11FspfLsrCheckSum = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLsrCheckSum.setStatus('current')
t11FspfLsrLinks = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65355))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLsrLinks.setStatus('current')
t11FspfLinkNumber = MibScalar((1, 3, 6, 1, 2, 1, 143, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLinkNumber.setStatus('current')
t11FspfLinkTable = MibTable((1, 3, 6, 1, 2, 1, 143, 1, 2, 4), )
if mibBuilder.loadTexts: t11FspfLinkTable.setStatus('current')
t11FspfLinkEntry = MibTableRow((1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FSPF-MIB", "t11FspfFabricIndex"), (0, "T11-FC-FSPF-MIB", "t11FspfLsrDomainId"), (0, "T11-FC-FSPF-MIB", "t11FspfLsrType"), (0, "T11-FC-FSPF-MIB", "t11FspfLinkIndex"))
if mibBuilder.loadTexts: t11FspfLinkEntry.setStatus('current')
t11FspfLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FspfLinkIndex.setStatus('current')
t11FspfLinkNbrDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 2), FcDomainIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLinkNbrDomainId.setStatus('current')
t11FspfLinkPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLinkPortIndex.setStatus('current')
t11FspfLinkNbrPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLinkNbrPortIndex.setStatus('current')
t11FspfLinkType = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 5), T11FspfLinkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLinkType.setStatus('current')
t11FspfLinkCost = MibTableColumn((1, 3, 6, 1, 2, 1, 143, 1, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FspfLinkCost.setStatus('current')
t11FspfIfPrevNbrState = MibScalar((1, 3, 6, 1, 2, 1, 143, 1, 1, 3), T11FspfInterfaceState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: t11FspfIfPrevNbrState.setStatus('current')
t11FspfNbrStateChangNotify = NotificationType((1, 3, 6, 1, 2, 1, 143, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamConfigDomainId"), ("T11-FC-FSPF-MIB", "t11FspfIfNbrDomainId"), ("T11-FC-FSPF-MIB", "t11FspfIfNbrState"), ("T11-FC-FSPF-MIB", "t11FspfIfPrevNbrState"))
if mibBuilder.loadTexts: t11FspfNbrStateChangNotify.setStatus('current')
t11FspfMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 143, 2, 1))
t11FspfMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 143, 2, 2))
t11FspfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 143, 2, 1, 1)).setObjects(("T11-FC-FSPF-MIB", "t11FspfGeneralGroup"), ("T11-FC-FSPF-MIB", "t11FspfIfGroup"), ("T11-FC-FSPF-MIB", "t11FspfDatabaseGroup"), ("T11-FC-FSPF-MIB", "t11FspfNotificationGroup"), ("T11-FC-FSPF-MIB", "t11FspfIfCounterGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FspfMIBCompliance = t11FspfMIBCompliance.setStatus('current')
t11FspfGeneralGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 143, 2, 2, 1)).setObjects(("T11-FC-FSPF-MIB", "t11FspfMinLsArrival"), ("T11-FC-FSPF-MIB", "t11FspfMinLsInterval"), ("T11-FC-FSPF-MIB", "t11FspfLsRefreshTime"), ("T11-FC-FSPF-MIB", "t11FspfMaxAge"), ("T11-FC-FSPF-MIB", "t11FspfMaxAgeDiscards"), ("T11-FC-FSPF-MIB", "t11FspfPathComputations"), ("T11-FC-FSPF-MIB", "t11FspfChecksumErrors"), ("T11-FC-FSPF-MIB", "t11FspfLsrs"), ("T11-FC-FSPF-MIB", "t11FspfCreateTime"), ("T11-FC-FSPF-MIB", "t11FspfAdminStatus"), ("T11-FC-FSPF-MIB", "t11FspfOperStatus"), ("T11-FC-FSPF-MIB", "t11FspfNbrStateChangNotifyEnable"), ("T11-FC-FSPF-MIB", "t11FspfSetToDefault"), ("T11-FC-FSPF-MIB", "t11FspfStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FspfGeneralGroup = t11FspfGeneralGroup.setStatus('current')
t11FspfIfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 143, 2, 2, 2)).setObjects(("T11-FC-FSPF-MIB", "t11FspfIfHelloInterval"), ("T11-FC-FSPF-MIB", "t11FspfIfDeadInterval"), ("T11-FC-FSPF-MIB", "t11FspfIfRetransmitInterval"), ("T11-FC-FSPF-MIB", "t11FspfIfNbrState"), ("T11-FC-FSPF-MIB", "t11FspfIfNbrDomainId"), ("T11-FC-FSPF-MIB", "t11FspfIfNbrPortIndex"), ("T11-FC-FSPF-MIB", "t11FspfIfAdminStatus"), ("T11-FC-FSPF-MIB", "t11FspfIfCreateTime"), ("T11-FC-FSPF-MIB", "t11FspfIfSetToDefault"), ("T11-FC-FSPF-MIB", "t11FspfIfLinkCostFactor"), ("T11-FC-FSPF-MIB", "t11FspfIfRowStatus"), ("T11-FC-FSPF-MIB", "t11FspfIfStorageType"), ("T11-FC-FSPF-MIB", "t11FspfIfPrevNbrState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FspfIfGroup = t11FspfIfGroup.setStatus('current')
t11FspfIfCounterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 143, 2, 2, 3)).setObjects(("T11-FC-FSPF-MIB", "t11FspfIfInLsuPkts"), ("T11-FC-FSPF-MIB", "t11FspfIfInLsaPkts"), ("T11-FC-FSPF-MIB", "t11FspfIfOutLsuPkts"), ("T11-FC-FSPF-MIB", "t11FspfIfOutLsaPkts"), ("T11-FC-FSPF-MIB", "t11FspfIfOutHelloPkts"), ("T11-FC-FSPF-MIB", "t11FspfIfInHelloPkts"), ("T11-FC-FSPF-MIB", "t11FspfIfRetransmittedLsuPkts"), ("T11-FC-FSPF-MIB", "t11FspfIfInErrorPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FspfIfCounterGroup = t11FspfIfCounterGroup.setStatus('current')
t11FspfDatabaseGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 143, 2, 2, 4)).setObjects(("T11-FC-FSPF-MIB", "t11FspfLsrAdvDomainId"), ("T11-FC-FSPF-MIB", "t11FspfLsrAge"), ("T11-FC-FSPF-MIB", "t11FspfLsrIncarnationNumber"), ("T11-FC-FSPF-MIB", "t11FspfLsrCheckSum"), ("T11-FC-FSPF-MIB", "t11FspfLsrLinks"), ("T11-FC-FSPF-MIB", "t11FspfLinkNbrDomainId"), ("T11-FC-FSPF-MIB", "t11FspfLinkPortIndex"), ("T11-FC-FSPF-MIB", "t11FspfLinkNbrPortIndex"), ("T11-FC-FSPF-MIB", "t11FspfLinkType"), ("T11-FC-FSPF-MIB", "t11FspfLinkCost"), ("T11-FC-FSPF-MIB", "t11FspfLinkNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FspfDatabaseGroup = t11FspfDatabaseGroup.setStatus('current')
t11FspfNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 143, 2, 2, 5)).setObjects(("T11-FC-FSPF-MIB", "t11FspfNbrStateChangNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FspfNotificationGroup = t11FspfNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("T11-FC-FSPF-MIB", t11FspfLinkNbrPortIndex=t11FspfLinkNbrPortIndex, t11FspfGeneralGroup=t11FspfGeneralGroup, t11FspfLsRefreshTime=t11FspfLsRefreshTime, t11FspfIfTable=t11FspfIfTable, t11FspfLsrLinks=t11FspfLsrLinks, t11FspfLinkTable=t11FspfLinkTable, t11FspfOperStatus=t11FspfOperStatus, t11FspfSetToDefault=t11FspfSetToDefault, t11FspfIfStorageType=t11FspfIfStorageType, t11FspfFabricIndex=t11FspfFabricIndex, t11FspfIfLinkCostFactor=t11FspfIfLinkCostFactor, t11FspfLsrTable=t11FspfLsrTable, t11FspfIfSetToDefault=t11FspfIfSetToDefault, T11FspfLinkType=T11FspfLinkType, t11FspfObjects=t11FspfObjects, t11FspfAdminStatus=t11FspfAdminStatus, t11FspfIfOutHelloPkts=t11FspfIfOutHelloPkts, T11FspfLsrType=T11FspfLsrType, PYSNMP_MODULE_ID=t11FcFspfMIB, t11FspfMinLsInterval=t11FspfMinLsInterval, t11FspfChecksumErrors=t11FspfChecksumErrors, t11FspfTable=t11FspfTable, t11FspfLsrIncarnationNumber=t11FspfLsrIncarnationNumber, t11FspfIfRowStatus=t11FspfIfRowStatus, t11FspfIfHelloInterval=t11FspfIfHelloInterval, t11FspfStorageType=t11FspfStorageType, t11FspfIfInHelloPkts=t11FspfIfInHelloPkts, t11FspfMinLsArrival=t11FspfMinLsArrival, t11FspfLsrCheckSum=t11FspfLsrCheckSum, t11FspfMaxAge=t11FspfMaxAge, t11FspfIfRetransmitInterval=t11FspfIfRetransmitInterval, t11FspfIfIndex=t11FspfIfIndex, t11FspfIfOutLsuPkts=t11FspfIfOutLsuPkts, t11FspfPathComputations=t11FspfPathComputations, t11FspfIfNbrPortIndex=t11FspfIfNbrPortIndex, t11FspfMIBCompliance=t11FspfMIBCompliance, t11FspfMIBGroups=t11FspfMIBGroups, t11FspfEntry=t11FspfEntry, T11FspfLastCreationTime=T11FspfLastCreationTime, t11FspfLsrEntry=t11FspfLsrEntry, t11FspfCreateTime=t11FspfCreateTime, t11FspfLsrs=t11FspfLsrs, t11FspfIfEntry=t11FspfIfEntry, t11FcFspfMIB=t11FcFspfMIB, t11FspfIfNbrDomainId=t11FspfIfNbrDomainId, t11FspfIfInLsaPkts=t11FspfIfInLsaPkts, t11FspfDatabaseGroup=t11FspfDatabaseGroup, t11FspfIfNbrState=t11FspfIfNbrState, t11FspfLsrDomainId=t11FspfLsrDomainId, t11FspfConformance=t11FspfConformance, t11FspfIfDeadInterval=t11FspfIfDeadInterval, t11FspfIfPrevNbrState=t11FspfIfPrevNbrState, t11FspfConfiguration=t11FspfConfiguration, t11FspfIfCounterGroup=t11FspfIfCounterGroup, t11FspfDatabase=t11FspfDatabase, t11FspfLinkType=t11FspfLinkType, t11FspfLinkCost=t11FspfLinkCost, t11FspfLinkPortIndex=t11FspfLinkPortIndex, t11FspfIfAdminStatus=t11FspfIfAdminStatus, t11FspfIfRetransmittedLsuPkts=t11FspfIfRetransmittedLsuPkts, t11FspfMaxAgeDiscards=t11FspfMaxAgeDiscards, t11FspfNbrStateChangNotify=t11FspfNbrStateChangNotify, t11FspfIfOutLsaPkts=t11FspfIfOutLsaPkts, t11FspfLsrAge=t11FspfLsrAge, T11FspfInterfaceState=T11FspfInterfaceState, t11FspfNbrStateChangNotifyEnable=t11FspfNbrStateChangNotifyEnable, t11FspfLinkIndex=t11FspfLinkIndex, t11FspfLsrType=t11FspfLsrType, t11FspfLsrAdvDomainId=t11FspfLsrAdvDomainId, t11FspfLinkNumber=t11FspfLinkNumber, t11FspfNotificationGroup=t11FspfNotificationGroup, t11FspfMIBCompliances=t11FspfMIBCompliances, t11FspfNotifications=t11FspfNotifications, t11FspfIfGroup=t11FspfIfGroup, t11FspfIfInErrorPkts=t11FspfIfInErrorPkts, t11FspfLinkEntry=t11FspfLinkEntry, t11FspfIfCreateTime=t11FspfIfCreateTime, t11FspfLinkNbrDomainId=t11FspfLinkNbrDomainId, t11FspfIfInLsuPkts=t11FspfIfInLsuPkts)
