#
# PySNMP MIB module Juniper-IP-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-IP-TUNNEL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:52:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniNextIfIndex, JuniName = mibBuilder.importSymbols("Juniper-TC", "JuniNextIfIndex", "JuniName")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, Gauge32, ModuleIdentity, NotificationType, Counter64, TimeTicks, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, Integer32, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "ModuleIdentity", "NotificationType", "Counter64", "TimeTicks", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "Integer32", "MibIdentifier", "Bits")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
juniIpTunnelMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51))
juniIpTunnelMIB.setRevisions(('2003-09-29 17:29', '2002-09-16 21:44', '2002-01-14 18:16', '2001-07-23 20:57',))
if mibBuilder.loadTexts: juniIpTunnelMIB.setLastUpdated('200309291729Z')
if mibBuilder.loadTexts: juniIpTunnelMIB.setOrganization('Juniper Networks, Inc.')
juniIpTunnelInterfaceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1))
juniIpTunnelNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 1), JuniNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniIpTunnelNextIfIndex.setStatus('current')
juniIpTunnelInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2), )
if mibBuilder.loadTexts: juniIpTunnelInterfaceTable.setStatus('current')
juniIpTunnelInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1), ).setIndexNames((0, "Juniper-IP-TUNNEL-MIB", "juniIpTunnelIfIndex"))
if mibBuilder.loadTexts: juniIpTunnelInterfaceEntry.setStatus('current')
juniIpTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: juniIpTunnelIfIndex.setStatus('current')
juniIpTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpTunnelName.setStatus('current')
juniIpTunnelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ipTunnelModeGre", 0), ("ipTunnelModeDvmrp", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpTunnelMode.setStatus('current')
juniIpTunnelVirtualRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 4), JuniName().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpTunnelVirtualRouter.setStatus('current')
juniIpTunnelChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpTunnelChecksum.setStatus('current')
juniIpTunnelMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 10240)).clone(10240)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpTunnelMtu.setStatus('current')
juniIpTunnelDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpTunnelDestination.setStatus('current')
juniIpTunnelSource = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpTunnelSource.setStatus('current')
juniIpTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpTunnelRowStatus.setStatus('current')
juniIpTunnelSequenceNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 1, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniIpTunnelSequenceNumbers.setStatus('current')
juniIpTunnelConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 2))
juniIpTunnelCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 2, 1))
juniIpTunnelGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 2, 2))
juniIpTunnnelCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 2, 1, 1)).setObjects(("Juniper-IP-TUNNEL-MIB", "juniIpTunnelInterfaceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpTunnnelCompliance = juniIpTunnnelCompliance.setStatus('obsolete')
juniIpTunnnelCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 2, 1, 2)).setObjects(("Juniper-IP-TUNNEL-MIB", "juniIpTunnelInterfaceGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpTunnnelCompliance2 = juniIpTunnnelCompliance2.setStatus('current')
juniIpTunnelInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 2, 2, 1)).setObjects(("Juniper-IP-TUNNEL-MIB", "juniIpTunnelNextIfIndex"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelName"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelMode"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelVirtualRouter"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelChecksum"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelMtu"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelSource"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelDestination"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpTunnelInterfaceGroup = juniIpTunnelInterfaceGroup.setStatus('obsolete')
juniIpTunnelInterfaceGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 51, 2, 2, 2)).setObjects(("Juniper-IP-TUNNEL-MIB", "juniIpTunnelNextIfIndex"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelName"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelMode"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelVirtualRouter"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelChecksum"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelMtu"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelSource"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelDestination"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelRowStatus"), ("Juniper-IP-TUNNEL-MIB", "juniIpTunnelSequenceNumbers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpTunnelInterfaceGroup2 = juniIpTunnelInterfaceGroup2.setStatus('current')
mibBuilder.exportSymbols("Juniper-IP-TUNNEL-MIB", juniIpTunnelConformance=juniIpTunnelConformance, juniIpTunnnelCompliance2=juniIpTunnnelCompliance2, juniIpTunnelNextIfIndex=juniIpTunnelNextIfIndex, juniIpTunnnelCompliance=juniIpTunnnelCompliance, juniIpTunnelInterfaceGroup2=juniIpTunnelInterfaceGroup2, juniIpTunnelIfIndex=juniIpTunnelIfIndex, juniIpTunnelMIB=juniIpTunnelMIB, PYSNMP_MODULE_ID=juniIpTunnelMIB, juniIpTunnelRowStatus=juniIpTunnelRowStatus, juniIpTunnelInterfaceTable=juniIpTunnelInterfaceTable, juniIpTunnelInterfaceObjects=juniIpTunnelInterfaceObjects, juniIpTunnelName=juniIpTunnelName, juniIpTunnelMode=juniIpTunnelMode, juniIpTunnelGroups=juniIpTunnelGroups, juniIpTunnelMtu=juniIpTunnelMtu, juniIpTunnelCompliances=juniIpTunnelCompliances, juniIpTunnelVirtualRouter=juniIpTunnelVirtualRouter, juniIpTunnelInterfaceEntry=juniIpTunnelInterfaceEntry, juniIpTunnelSequenceNumbers=juniIpTunnelSequenceNumbers, juniIpTunnelInterfaceGroup=juniIpTunnelInterfaceGroup, juniIpTunnelSource=juniIpTunnelSource, juniIpTunnelChecksum=juniIpTunnelChecksum, juniIpTunnelDestination=juniIpTunnelDestination)
