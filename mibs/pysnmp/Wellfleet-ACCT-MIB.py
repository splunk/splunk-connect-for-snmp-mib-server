#
# PySNMP MIB module Wellfleet-ACCT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-ACCT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ModuleIdentity, iso, NotificationType, MibIdentifier, Bits, Counter32, Counter64, Integer32, Gauge32, IpAddress, ObjectIdentity, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "iso", "NotificationType", "MibIdentifier", "Bits", "Counter32", "Counter64", "Integer32", "Gauge32", "IpAddress", "ObjectIdentity", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfAcctGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfAcctGroup")
class RtrTimeStamp(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

wfAcct = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1))
wfAcctCreate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctCreate.setStatus('mandatory')
wfAcctEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctEnable.setStatus('mandatory')
wfAcctOperState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctOperState.setStatus('mandatory')
wfAcctLogLevel = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2031616, 65536, 131072, 262144, 524288, 1048576, 917504))).clone(namedValues=NamedValues(("all", 2031616), ("debug", 65536), ("info", 131072), ("warning", 262144), ("fault", 524288), ("trace", 1048576), ("infofaultwarning", 917504))).clone('infofaultwarning')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctLogLevel.setStatus('mandatory')
wfAcctCircularSnapshotFlag = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctCircularSnapshotFlag.setStatus('mandatory')
wfAcctCollectDuration = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctCollectDuration.setStatus('mandatory')
wfAcctUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 360)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctUpdateInterval.setStatus('mandatory')
wfAcctFlushOnRetrieval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctFlushOnRetrieval.setStatus('mandatory')
wfAcctFlushData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctFlushData.setStatus('mandatory')
wfAcctLastUpdateTimeStampHigh = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 10), RtrTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctLastUpdateTimeStampHigh.setStatus('mandatory')
wfAcctLastUpdateTimeStampLow = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 11), RtrTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctLastUpdateTimeStampLow.setStatus('mandatory')
wfAcctLastFlushTimeStampHigh = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 12), RtrTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctLastFlushTimeStampHigh.setStatus('mandatory')
wfAcctLastFlushTimeStampLow = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 13), RtrTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctLastFlushTimeStampLow.setStatus('mandatory')
wfAcctRuleNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctRuleNumEntries.setStatus('mandatory')
wfAcctCtrlNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctCtrlNumEntries.setStatus('mandatory')
wfAcctDataNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctDataNumEntries.setStatus('mandatory')
wfAcctRuleTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 2), )
if mibBuilder.loadTexts: wfAcctRuleTable.setStatus('mandatory')
wfAcctRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 2, 1), ).setIndexNames((0, "Wellfleet-ACCT-MIB", "wfAcctRuleNumber"))
if mibBuilder.loadTexts: wfAcctRuleEntry.setStatus('mandatory')
wfAcctRuleCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctRuleCreate.setStatus('mandatory')
wfAcctRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctRuleNumber.setStatus('mandatory')
wfAcctRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctRuleName.setStatus('mandatory')
wfAcctRuleStatDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("in", 2), ("out", 3), ("both", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctRuleStatDirection.setStatus('mandatory')
wfAcctRuleStatCollect = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("octets", 1), ("packets", 2), ("all", 3))).clone('octets')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAcctRuleStatCollect.setStatus('mandatory')
wfAcctCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 3), )
if mibBuilder.loadTexts: wfAcctCtrlTable.setStatus('mandatory')
wfAcctCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 3, 1), ).setIndexNames((0, "Wellfleet-ACCT-MIB", "wfAcctCtrlCctNum"), (0, "Wellfleet-ACCT-MIB", "wfAcctCtrlServicePkg"), (0, "Wellfleet-ACCT-MIB", "wfAcctCtrlQueueIndex"))
if mibBuilder.loadTexts: wfAcctCtrlEntry.setStatus('mandatory')
wfAcctCtrlCctNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctCtrlCctNum.setStatus('mandatory')
wfAcctCtrlServicePkg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctCtrlServicePkg.setStatus('mandatory')
wfAcctCtrlQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctCtrlQueueIndex.setStatus('mandatory')
wfAcctCtrlRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctCtrlRuleNumber.setStatus('mandatory')
wfAcctDataTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4), )
if mibBuilder.loadTexts: wfAcctDataTable.setStatus('mandatory')
wfAcctDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1), ).setIndexNames((0, "Wellfleet-ACCT-MIB", "wfAcctDataCctNum"), (0, "Wellfleet-ACCT-MIB", "wfAcctDataServicePkg"), (0, "Wellfleet-ACCT-MIB", "wfAcctDataQueueIndex"), (0, "Wellfleet-ACCT-MIB", "wfAcctDataTimeStampHigh"), (0, "Wellfleet-ACCT-MIB", "wfAcctDataTimeStampLow"))
if mibBuilder.loadTexts: wfAcctDataEntry.setStatus('mandatory')
wfAcctDataCctNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctDataCctNum.setStatus('mandatory')
wfAcctDataServicePkg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctDataServicePkg.setStatus('mandatory')
wfAcctDataQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctDataQueueIndex.setStatus('mandatory')
wfAcctDataTimeStampHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 4), RtrTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctDataTimeStampHigh.setStatus('mandatory')
wfAcctDataTimeStampLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 5), RtrTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctDataTimeStampLow.setStatus('mandatory')
wfAcctDataBitmask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctDataBitmask.setStatus('mandatory')
wfAcctInBelowCirOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctInBelowCirOctets.setStatus('mandatory')
wfAcctInAboveCirOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctInAboveCirOctets.setStatus('mandatory')
wfAcctInAboveBrOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctInAboveBrOctets.setStatus('mandatory')
wfAcctInBelowCirPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctInBelowCirPkts.setStatus('mandatory')
wfAcctInAboveCirPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctInAboveCirPkts.setStatus('mandatory')
wfAcctInAboveBrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctInAboveBrPkts.setStatus('mandatory')
wfAcctOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctOutOctets.setStatus('mandatory')
wfAcctOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAcctOutPkts.setStatus('mandatory')
wfAcctBufferFull = NotificationType((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 23, 2) + (0,1))
mibBuilder.exportSymbols("Wellfleet-ACCT-MIB", wfAcctDataServicePkg=wfAcctDataServicePkg, wfAcctInAboveBrPkts=wfAcctInAboveBrPkts, wfAcctDataBitmask=wfAcctDataBitmask, wfAcctLastUpdateTimeStampHigh=wfAcctLastUpdateTimeStampHigh, wfAcctCtrlCctNum=wfAcctCtrlCctNum, wfAcctCtrlRuleNumber=wfAcctCtrlRuleNumber, wfAcctDataTable=wfAcctDataTable, wfAcctCreate=wfAcctCreate, wfAcctInBelowCirPkts=wfAcctInBelowCirPkts, wfAcctOutPkts=wfAcctOutPkts, wfAcctLastUpdateTimeStampLow=wfAcctLastUpdateTimeStampLow, wfAcctRuleStatCollect=wfAcctRuleStatCollect, wfAcctInAboveBrOctets=wfAcctInAboveBrOctets, wfAcctLogLevel=wfAcctLogLevel, wfAcctFlushData=wfAcctFlushData, wfAcctCtrlEntry=wfAcctCtrlEntry, wfAcctDataTimeStampHigh=wfAcctDataTimeStampHigh, wfAcctFlushOnRetrieval=wfAcctFlushOnRetrieval, wfAcctRuleCreate=wfAcctRuleCreate, wfAcctRuleName=wfAcctRuleName, wfAcctDataEntry=wfAcctDataEntry, wfAcctInBelowCirOctets=wfAcctInBelowCirOctets, wfAcctRuleNumber=wfAcctRuleNumber, wfAcct=wfAcct, wfAcctLastFlushTimeStampHigh=wfAcctLastFlushTimeStampHigh, wfAcctCtrlServicePkg=wfAcctCtrlServicePkg, wfAcctDataNumEntries=wfAcctDataNumEntries, wfAcctBufferFull=wfAcctBufferFull, wfAcctUpdateInterval=wfAcctUpdateInterval, wfAcctEnable=wfAcctEnable, wfAcctRuleTable=wfAcctRuleTable, wfAcctCtrlNumEntries=wfAcctCtrlNumEntries, wfAcctOperState=wfAcctOperState, wfAcctDataQueueIndex=wfAcctDataQueueIndex, wfAcctDataCctNum=wfAcctDataCctNum, wfAcctRuleEntry=wfAcctRuleEntry, wfAcctOutOctets=wfAcctOutOctets, wfAcctCollectDuration=wfAcctCollectDuration, wfAcctInAboveCirPkts=wfAcctInAboveCirPkts, wfAcctRuleNumEntries=wfAcctRuleNumEntries, wfAcctCtrlTable=wfAcctCtrlTable, wfAcctRuleStatDirection=wfAcctRuleStatDirection, wfAcctCircularSnapshotFlag=wfAcctCircularSnapshotFlag, wfAcctLastFlushTimeStampLow=wfAcctLastFlushTimeStampLow, wfAcctInAboveCirOctets=wfAcctInAboveCirOctets, wfAcctDataTimeStampLow=wfAcctDataTimeStampLow, RtrTimeStamp=RtrTimeStamp, wfAcctCtrlQueueIndex=wfAcctCtrlQueueIndex)
