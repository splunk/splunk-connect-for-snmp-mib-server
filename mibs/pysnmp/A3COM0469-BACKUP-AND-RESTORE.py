#
# PySNMP MIB module A3COM0469-BACKUP-AND-RESTORE (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM0469-BACKUP-AND-RESTORE
# Produced by pysmi-0.3.4 at Mon Apr 29 16:54:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
a3ComBackup_mib, = mibBuilder.importSymbols("A3COM0004-GENERIC", "a3ComBackup-mib")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
snmp, = mibBuilder.importSymbols("SNMPv2-MIB", "snmp")
enterprises, Integer32, IpAddress, Gauge32, Unsigned32, MibIdentifier, iso, Counter64, TimeTicks, ModuleIdentity, NotificationType, ObjectIdentity, Bits, Counter32, NotificationType, mgmt, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Integer32", "IpAddress", "Gauge32", "Unsigned32", "MibIdentifier", "iso", "Counter64", "TimeTicks", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Bits", "Counter32", "NotificationType", "mgmt", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, TruthValue, PhysAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "PhysAddress", "DisplayString")
class BackupStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))
    namedValues = NamedValues(("backupTftpFileNotFound", 1), ("backupTftpAccessViolation", 2), ("backupTftpDiskFull", 3), ("backupTftpIllegalOperation", 4), ("backupTftpUnknownTransferId", 5), ("backupTftpFileExists", 6), ("backupTftpNoSuchUser", 7), ("backupNoResponse", 8), ("backupNoResource", 9), ("backupRecordLengthMismatch", 10), ("backupBadRecordType", 11), ("backupChecksumError", 12), ("backupWrongHardwareType", 13), ("backupWrongHardwareVersion", 14), ("backupHeaderMissing", 15), ("backupByteCountIncorrect", 16), ("backupAddressIncorrect", 17), ("backupErasureFailed", 18), ("backupFlashProgramFailed", 19), ("backupWaitingToStart", 20), ("backupOperationInProgress", 21), ("backupOperationSucceeded", 22), ("backupAbortedByUser", 23), ("backupNotRequired", 24), ("backupUnknownFailure", 25), ("backupAbortedAutomatically", 26), ("backupFileValid", 27), ("backupBadCommand", 28), ("backupCommandFailed", 29), ("backupFilenameInvalid", 30), ("backupTftpServerInvalid", 31))

a3ComBackupNecessary = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComBackupNecessary.setStatus('mandatory')
a3ComBackupTftpServer = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComBackupTftpServer.setStatus('mandatory')
a3ComBackupFilename = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComBackupFilename.setStatus('mandatory')
a3ComBackupAgentComment = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComBackupAgentComment.setStatus('mandatory')
a3ComBackupUserComment = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComBackupUserComment.setStatus('mandatory')
a3ComBackupAction = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("notActive", 1), ("abortAction", 2), ("cliSave", 3), ("cliVerify", 4), ("binarySave", 5), ("binaryVerify", 6), ("restoreConfig", 7), ("restoreIgnoringErrors", 8), ("loadDescriptionOnly", 9), ("takeSnapshot", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComBackupAction.setStatus('mandatory')
a3ComBackupStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 7), BackupStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComBackupStatus.setStatus('mandatory')
a3ComBackupBytes = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComBackupBytes.setStatus('mandatory')
a3ComBackupFailedCommand = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComBackupFailedCommand.setStatus('mandatory')
a3ComBackupFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComBackupFailureReason.setStatus('mandatory')
a3ComBackupResetNecessary = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComBackupResetNecessary.setStatus('mandatory')
a3ComBackupLastAction = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 43, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("noCommandIssued", 1), ("cliSave", 3), ("cliVerify", 4), ("binarySave", 5), ("binaryVerify", 6), ("restoreConfig", 7), ("restoreIgnoringErrors", 8), ("loadDescriptionOnly", 9), ("takeSnapshot", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComBackupLastAction.setStatus('mandatory')
mibBuilder.exportSymbols("A3COM0469-BACKUP-AND-RESTORE", a3ComBackupBytes=a3ComBackupBytes, a3ComBackupAction=a3ComBackupAction, a3ComBackupAgentComment=a3ComBackupAgentComment, BackupStatus=BackupStatus, a3ComBackupFailedCommand=a3ComBackupFailedCommand, a3ComBackupFailureReason=a3ComBackupFailureReason, a3ComBackupLastAction=a3ComBackupLastAction, a3ComBackupStatus=a3ComBackupStatus, a3ComBackupFilename=a3ComBackupFilename, a3ComBackupUserComment=a3ComBackupUserComment, a3ComBackupNecessary=a3ComBackupNecessary, a3ComBackupResetNecessary=a3ComBackupResetNecessary, a3ComBackupTftpServer=a3ComBackupTftpServer)
