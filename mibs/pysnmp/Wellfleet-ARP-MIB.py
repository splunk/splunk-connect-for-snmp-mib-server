#
# PySNMP MIB module Wellfleet-ARP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-ARP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, Integer32, Gauge32, ObjectIdentity, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, MibIdentifier, TimeTicks, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "Integer32", "Gauge32", "ObjectIdentity", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "MibIdentifier", "TimeTicks", "Bits", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfArpGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfArpGroup")
wfArpBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1))
wfArpBaseCreate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpBaseCreate.setStatus('mandatory')
wfArpBaseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpBaseEnable.setStatus('mandatory')
wfArpBaseForwarding = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("notforwarding", 2))).clone('forwarding')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpBaseForwarding.setStatus('mandatory')
wfArpBaseNonlocalSrc = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("log", 1), ("drop", 2))).clone('drop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpBaseNonlocalSrc.setStatus('mandatory')
wfArpBaseNonlocalDest = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("accept", 2))).clone('drop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpBaseNonlocalDest.setStatus('mandatory')
wfArpIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2), )
if mibBuilder.loadTexts: wfArpIntfTable.setStatus('mandatory')
wfArpIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2, 1), ).setIndexNames((0, "Wellfleet-ARP-MIB", "wfArpCctno"))
if mibBuilder.loadTexts: wfArpIntfEntry.setStatus('mandatory')
wfArpCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpCreate.setStatus('mandatory')
wfArpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpEnable.setStatus('mandatory')
wfArpCctno = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfArpCctno.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-ARP-MIB", wfArpBaseNonlocalDest=wfArpBaseNonlocalDest, wfArpBaseEnable=wfArpBaseEnable, wfArpBaseNonlocalSrc=wfArpBaseNonlocalSrc, wfArpEnable=wfArpEnable, wfArpCreate=wfArpCreate, wfArpCctno=wfArpCctno, wfArpIntfEntry=wfArpIntfEntry, wfArpBaseCreate=wfArpBaseCreate, wfArpBase=wfArpBase, wfArpBaseForwarding=wfArpBaseForwarding, wfArpIntfTable=wfArpIntfTable)
