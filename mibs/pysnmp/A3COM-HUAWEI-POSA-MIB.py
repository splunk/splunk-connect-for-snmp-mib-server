#
# PySNMP MIB module A3COM-HUAWEI-POSA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-POSA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:51:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, TimeTicks, iso, Bits, MibIdentifier, ObjectIdentity, Unsigned32, IpAddress, Counter64, Gauge32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "iso", "Bits", "MibIdentifier", "ObjectIdentity", "Unsigned32", "IpAddress", "Counter64", "Gauge32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32")
DisplayString, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "TextualConvention")
h3cPosa = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92))
h3cPosa.setRevisions(('2008-03-12 09:33',))
if mibBuilder.loadTexts: h3cPosa.setLastUpdated('201004090000Z')
if mibBuilder.loadTexts: h3cPosa.setOrganization('H3C Technologies Co., Ltd.')
class H3cAppServiceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("tcp", 1), ("flow", 2))

class H3cAppMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("normal", 1), ("temporary", 2))

class H3cPeerState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("notset", 1), ("down", 2), ("up", 3), ("kept", 4), ("linking", 5), ("linked", 6), ("multilink", 7), ("blocked", 8))

class H3cTerminalAccessType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("fcm", 1), ("flow", 2), ("tcp", 3))

class H3cTpduChangeStrategy(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("changeTpduSrc", 1), ("changeTpduDest", 2))

h3cPosaControl = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1))
h3cPosaServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaServerEnable.setStatus('current')
h3cPosaFcmAnswerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(500, 2000)).clone(2000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmAnswerTimeout.setStatus('current')
h3cPosaFcmTradeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30000, 12000000)).clone(12000000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmTradeTimeout.setStatus('current')
h3cPosaFcmIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12000)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmIdleTimeout.setStatus('current')
h3cPosaSrvStateChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaSrvStateChangeTrapEnable.setStatus('current')
h3cPosaAppStateChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaAppStateChangeTrapEnable.setStatus('current')
h3cPosaTerminalHangUpTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaTerminalHangUpTrapEnable.setStatus('current')
h3cPosaFcmLnkNegoFailTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmLnkNegoFailTrapEnable.setStatus('current')
h3cPosaFcmPhyNegoFailTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmPhyNegoFailTrapEnable.setStatus('current')
h3cPosaTables = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2))
h3cPosaAppTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1), )
if mibBuilder.loadTexts: h3cPosaAppTable.setStatus('current')
h3cPosaAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-POSA-MIB", "h3cPosaAppID"))
if mibBuilder.loadTexts: h3cPosaAppEntry.setStatus('current')
h3cPosaAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPosaAppID.setStatus('current')
h3cPosaAppServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 2), H3cAppServiceType().clone('tcp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppServiceType.setStatus('current')
h3cPosaAppIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppIfIndex.setStatus('current')
h3cPosaAppMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 4), H3cAppMode().clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppMode.setStatus('current')
h3cPosaAppHostIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppHostIPType.setStatus('current')
h3cPosaAppHostIP = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppHostIP.setStatus('current')
h3cPosaAppHostPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppHostPort.setStatus('current')
h3cPosaAppRouterIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 8), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppRouterIPType.setStatus('current')
h3cPosaAppRouterIP = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 9), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppRouterIP.setStatus('current')
h3cPosaAppKeepAliveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7200)).clone(2)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppKeepAliveInterval.setStatus('current')
h3cPosaAppKeepAliveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 100)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppKeepAliveCount.setStatus('current')
h3cPosaAppConnectTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(20)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppConnectTimeout.setStatus('current')
h3cPosaAppState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 13), H3cPeerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaAppState.setStatus('current')
h3cPosaAppRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppRowStatus.setStatus('current')
h3cPosaAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppName.setStatus('current')
h3cPosaCallerIDTransEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaCallerIDTransEnable.setStatus('current')
h3cPosaTpduChangeStrategy = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 17), H3cTpduChangeStrategy().clone('changeTpduSrc')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTpduChangeStrategy.setStatus('current')
h3cPosaBackupAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaBackupAppID.setStatus('current')
h3cPosaQuietTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaQuietTimeOut.setStatus('current')
h3cPosaAppHello = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 20), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppHello.setStatus('current')
h3cPosaAppHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppHelloInterval.setStatus('current')
h3cPosaAppRouterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaAppRouterPort.setStatus('current')
h3cPosaTerminalTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2), )
if mibBuilder.loadTexts: h3cPosaTerminalTable.setStatus('current')
h3cPosaTerminalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-POSA-MIB", "h3cPosaTerminalID"))
if mibBuilder.loadTexts: h3cPosaTerminalEntry.setStatus('current')
h3cPosaTerminalID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: h3cPosaTerminalID.setStatus('current')
h3cPosaTerminalAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1, 2), H3cTerminalAccessType().clone('fcm')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTerminalAccessType.setStatus('current')
h3cPosaTerminalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTerminalIfIndex.setStatus('current')
h3cPosaTerminalTransAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTerminalTransAppID.setStatus('current')
h3cPosaTerminalListenPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTerminalListenPort.setStatus('current')
h3cPosaTerminalState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1, 6), H3cPeerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTerminalState.setStatus('current')
h3cPosaTerminalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTerminalRowStatus.setStatus('current')
h3cPosaTerminalName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTerminalName.setStatus('current')
h3cPosaTerminalCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTerminalCfgIfIndex.setStatus('current')
h3cPosaMapTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 3), )
if mibBuilder.loadTexts: h3cPosaMapTable.setStatus('current')
h3cPosaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-POSA-MIB", "h3cPosaMapSrcCode"), (0, "A3COM-HUAWEI-POSA-MIB", "h3cPosaMapDestCode"))
if mibBuilder.loadTexts: h3cPosaMapEntry.setStatus('current')
h3cPosaMapDestCode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 7)))
if mibBuilder.loadTexts: h3cPosaMapDestCode.setStatus('current')
h3cPosaMapAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaMapAppID.setStatus('current')
h3cPosaMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaMapRowStatus.setStatus('current')
h3cPosaMapSrcCode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 7)))
if mibBuilder.loadTexts: h3cPosaMapSrcCode.setStatus('current')
h3cPosaFcmStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 4), )
if mibBuilder.loadTexts: h3cPosaFcmStatTable.setStatus('current')
h3cPosaFcmStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-POSA-MIB", "h3cPosaFcmStatIfIndex"))
if mibBuilder.loadTexts: h3cPosaFcmStatEntry.setStatus('current')
h3cPosaFcmStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: h3cPosaFcmStatIfIndex.setStatus('current')
h3cPosaFcmStatTimeoutCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaFcmStatTimeoutCnts.setStatus('current')
h3cPosaFcmStatConnectFailCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaFcmStatConnectFailCnts.setStatus('current')
h3cPosaFcmStatTransCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaFcmStatTransCnts.setStatus('current')
h3cPosaFcmStatTransSuccessCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaFcmStatTransSuccessCnts.setStatus('current')
h3cPosaFcmStatTransCntsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 4, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmStatTransCntsClear.setStatus('current')
h3cPosaAppStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 5), )
if mibBuilder.loadTexts: h3cPosaAppStatTable.setStatus('current')
h3cPosaAppStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-POSA-MIB", "h3cPosaAppID"))
if mibBuilder.loadTexts: h3cPosaAppStatEntry.setStatus('current')
h3cPosaAppRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaAppRecvPkts.setStatus('current')
h3cPosaAppSendPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaAppSendPkts.setStatus('current')
h3cPosaAppErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaAppErrPkts.setStatus('current')
h3cPosaAppDistributeErrCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaAppDistributeErrCnts.setStatus('current')
h3cPosaAppInDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaAppInDiscardedPkts.setStatus('current')
h3cPosaAppOutDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaAppOutDiscardedPkts.setStatus('current')
h3cPosaTerminalStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 6), )
if mibBuilder.loadTexts: h3cPosaTerminalStatTable.setStatus('current')
h3cPosaTerminalStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-POSA-MIB", "h3cPosaTerminalID"))
if mibBuilder.loadTexts: h3cPosaTerminalStatEntry.setStatus('current')
h3cPosaTerminalRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTerminalRecvPkts.setStatus('current')
h3cPosaTerminalSendPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTerminalSendPkts.setStatus('current')
h3cPosaTerminalErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTerminalErrPkts.setStatus('current')
h3cPosaTerminalMapErrCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTerminalMapErrCnts.setStatus('current')
h3cPosaTerminalInDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTerminalInDiscardedPkts.setStatus('current')
h3cPosaTerminalOutDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTerminalOutDiscardedPkts.setStatus('current')
h3cPosaBatchTerminalTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 7), )
if mibBuilder.loadTexts: h3cPosaBatchTerminalTable.setStatus('current')
h3cPosaBatchTerminalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cPosaBatchTerminalEntry.setStatus('current')
h3cPosaBatchTerminalFirstID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaBatchTerminalFirstID.setStatus('current')
h3cPosaBatchTerminalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaBatchTerminalRowStatus.setStatus('current')
h3cPosaTcpTermStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8), )
if mibBuilder.loadTexts: h3cPosaTcpTermStatTable.setStatus('current')
h3cPosaTcpTermStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-POSA-MIB", "h3cPosaTcpTermStatIndex"))
if mibBuilder.loadTexts: h3cPosaTcpTermStatEntry.setStatus('current')
h3cPosaTcpTermStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: h3cPosaTcpTermStatIndex.setStatus('current')
h3cPosaTcpTermStatIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTcpTermStatIPType.setStatus('current')
h3cPosaTcpTermStatIP = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTcpTermStatIP.setStatus('current')
h3cPosaTcpTermStatIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTcpTermStatIPMask.setStatus('current')
h3cPosaTcpTermRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTcpTermRecvPkts.setStatus('current')
h3cPosaTcpTermSendPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTcpTermSendPkts.setStatus('current')
h3cPosaTcpTermErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTcpTermErrPkts.setStatus('current')
h3cPosaTcpTermMapErrCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTcpTermMapErrCnts.setStatus('current')
h3cPosaTcpTermInDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTcpTermInDiscardedPkts.setStatus('current')
h3cPosaTcpTermOutDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaTcpTermOutDiscardedPkts.setStatus('current')
h3cPosaTcpTermStatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 8, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaTcpTermStatRowStatus.setStatus('current')
h3cPosaFcmConfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9), )
if mibBuilder.loadTexts: h3cPosaFcmConfTable.setStatus('current')
h3cPosaFcmConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cPosaFcmConfEntry.setStatus('current')
h3cPosaFcmNegoHookOff = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 6000)).clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmNegoHookOff.setStatus('current')
h3cPosaFcmNegoSilence = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmNegoSilence.setStatus('current')
h3cPosaFcmNegoScrmbBinary1 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1500)).clone(250)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmNegoScrmbBinary1.setStatus('current')
h3cPosaFcmNegoUnscrmbBinary1 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1500)).clone(400)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmNegoUnscrmbBinary1.setStatus('current')
h3cPosaFcmThresholdRlsdOff = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 75)).clone(48)).setUnits('-dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmThresholdRlsdOff.setStatus('current')
h3cPosaFcmThresholdRlsdOn = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 75)).clone(43)).setUnits('-dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmThresholdRlsdOn.setStatus('current')
h3cPosaFcmThresholdTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 42)).clone(10)).setUnits('-dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmThresholdTxPower.setStatus('current')
h3cPosaFcmThresholdAnswerTone = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 42)).clone(9)).setUnits('-dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPosaFcmThresholdAnswerTone.setStatus('current')
h3cPosaCallerStatTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10), )
if mibBuilder.loadTexts: h3cPosaCallerStatTable.setStatus('current')
h3cPosaCallerStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10, 1), ).setIndexNames((0, "A3COM-HUAWEI-POSA-MIB", "h3cPosaCallerStatCallerID"))
if mibBuilder.loadTexts: h3cPosaCallerStatEntry.setStatus('current')
h3cPosaCallerStatCallerID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: h3cPosaCallerStatCallerID.setStatus('current')
h3cPosaCallerRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaCallerRecvPkts.setStatus('current')
h3cPosaCallerSendPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaCallerSendPkts.setStatus('current')
h3cPosaCallerErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaCallerErrPkts.setStatus('current')
h3cPosaCallerMapErrCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaCallerMapErrCnts.setStatus('current')
h3cPosaCallerInDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaCallerInDiscardedPkts.setStatus('current')
h3cPosaCallerOutDiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPosaCallerOutDiscardedPkts.setStatus('current')
h3cPosaCallerStatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 2, 10, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cPosaCallerStatRowStatus.setStatus('current')
h3cPosaTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 3))
h3cPosaTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 3, 0))
h3cPosaServerStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 3, 0, 1)).setObjects(("A3COM-HUAWEI-POSA-MIB", "h3cPosaServerEnable"))
if mibBuilder.loadTexts: h3cPosaServerStatusChange.setStatus('current')
h3cPosaAppStateChange = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 3, 0, 2)).setObjects(("A3COM-HUAWEI-POSA-MIB", "h3cPosaAppID"), ("A3COM-HUAWEI-POSA-MIB", "h3cPosaAppStateChangeObject"))
if mibBuilder.loadTexts: h3cPosaAppStateChange.setStatus('current')
h3cPosaTerminalHangUp = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 3, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: h3cPosaTerminalHangUp.setStatus('current')
h3cPosaFcmLinkNegoFailed = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 3, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: h3cPosaFcmLinkNegoFailed.setStatus('current')
h3cPosaFcmPhyNegoFailed = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 3, 0, 5)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: h3cPosaFcmPhyNegoFailed.setStatus('current')
h3cPosaTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 3, 1))
h3cPosaAppStateChangeObject = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 92, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("unavailable", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPosaAppStateChangeObject.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-POSA-MIB", h3cPosaFcmConfEntry=h3cPosaFcmConfEntry, h3cPosaTcpTermStatIP=h3cPosaTcpTermStatIP, h3cPosaAppHelloInterval=h3cPosaAppHelloInterval, h3cPosaAppKeepAliveInterval=h3cPosaAppKeepAliveInterval, h3cPosaFcmThresholdAnswerTone=h3cPosaFcmThresholdAnswerTone, h3cPosaCallerStatEntry=h3cPosaCallerStatEntry, h3cPosaMapDestCode=h3cPosaMapDestCode, h3cPosaCallerStatCallerID=h3cPosaCallerStatCallerID, h3cPosaServerStatusChange=h3cPosaServerStatusChange, h3cPosaAppHello=h3cPosaAppHello, h3cPosaCallerSendPkts=h3cPosaCallerSendPkts, h3cPosaMapEntry=h3cPosaMapEntry, h3cPosaAppName=h3cPosaAppName, h3cPosaFcmNegoHookOff=h3cPosaFcmNegoHookOff, h3cPosaTcpTermStatIPType=h3cPosaTcpTermStatIPType, h3cPosaFcmNegoScrmbBinary1=h3cPosaFcmNegoScrmbBinary1, h3cPosaTerminalListenPort=h3cPosaTerminalListenPort, H3cAppMode=H3cAppMode, H3cAppServiceType=H3cAppServiceType, h3cPosaAppHostPort=h3cPosaAppHostPort, h3cPosaTcpTermOutDiscardedPkts=h3cPosaTcpTermOutDiscardedPkts, h3cPosaTerminalSendPkts=h3cPosaTerminalSendPkts, h3cPosaAppState=h3cPosaAppState, h3cPosaAppID=h3cPosaAppID, h3cPosaAppHostIPType=h3cPosaAppHostIPType, h3cPosaFcmPhyNegoFailTrapEnable=h3cPosaFcmPhyNegoFailTrapEnable, h3cPosaFcmStatTransCnts=h3cPosaFcmStatTransCnts, h3cPosaTerminalHangUp=h3cPosaTerminalHangUp, h3cPosaTerminalCfgIfIndex=h3cPosaTerminalCfgIfIndex, h3cPosaTerminalName=h3cPosaTerminalName, h3cPosaAppDistributeErrCnts=h3cPosaAppDistributeErrCnts, h3cPosaCallerInDiscardedPkts=h3cPosaCallerInDiscardedPkts, h3cPosaAppEntry=h3cPosaAppEntry, h3cPosaTerminalOutDiscardedPkts=h3cPosaTerminalOutDiscardedPkts, h3cPosaFcmStatIfIndex=h3cPosaFcmStatIfIndex, h3cPosaTcpTermRecvPkts=h3cPosaTcpTermRecvPkts, h3cPosaBatchTerminalFirstID=h3cPosaBatchTerminalFirstID, h3cPosaBatchTerminalEntry=h3cPosaBatchTerminalEntry, H3cTerminalAccessType=H3cTerminalAccessType, h3cPosaTrapObjects=h3cPosaTrapObjects, H3cTpduChangeStrategy=H3cTpduChangeStrategy, h3cPosaTerminalTransAppID=h3cPosaTerminalTransAppID, h3cPosa=h3cPosa, h3cPosaTcpTermStatTable=h3cPosaTcpTermStatTable, h3cPosaTerminalMapErrCnts=h3cPosaTerminalMapErrCnts, h3cPosaMapAppID=h3cPosaMapAppID, h3cPosaFcmLinkNegoFailed=h3cPosaFcmLinkNegoFailed, h3cPosaFcmTradeTimeout=h3cPosaFcmTradeTimeout, h3cPosaAppMode=h3cPosaAppMode, h3cPosaServerEnable=h3cPosaServerEnable, h3cPosaTrap=h3cPosaTrap, h3cPosaTerminalRecvPkts=h3cPosaTerminalRecvPkts, h3cPosaFcmThresholdRlsdOff=h3cPosaFcmThresholdRlsdOff, h3cPosaFcmThresholdTxPower=h3cPosaFcmThresholdTxPower, h3cPosaFcmThresholdRlsdOn=h3cPosaFcmThresholdRlsdOn, h3cPosaBatchTerminalRowStatus=h3cPosaBatchTerminalRowStatus, h3cPosaQuietTimeOut=h3cPosaQuietTimeOut, h3cPosaAppRouterIP=h3cPosaAppRouterIP, h3cPosaFcmNegoSilence=h3cPosaFcmNegoSilence, h3cPosaTerminalState=h3cPosaTerminalState, h3cPosaTables=h3cPosaTables, h3cPosaTpduChangeStrategy=h3cPosaTpduChangeStrategy, h3cPosaFcmLnkNegoFailTrapEnable=h3cPosaFcmLnkNegoFailTrapEnable, h3cPosaAppStatTable=h3cPosaAppStatTable, h3cPosaFcmStatEntry=h3cPosaFcmStatEntry, h3cPosaBatchTerminalTable=h3cPosaBatchTerminalTable, h3cPosaFcmPhyNegoFailed=h3cPosaFcmPhyNegoFailed, h3cPosaAppRowStatus=h3cPosaAppRowStatus, h3cPosaAppInDiscardedPkts=h3cPosaAppInDiscardedPkts, h3cPosaFcmStatTable=h3cPosaFcmStatTable, h3cPosaAppRecvPkts=h3cPosaAppRecvPkts, PYSNMP_MODULE_ID=h3cPosa, h3cPosaFcmNegoUnscrmbBinary1=h3cPosaFcmNegoUnscrmbBinary1, h3cPosaFcmStatConnectFailCnts=h3cPosaFcmStatConnectFailCnts, h3cPosaTerminalInDiscardedPkts=h3cPosaTerminalInDiscardedPkts, h3cPosaCallerErrPkts=h3cPosaCallerErrPkts, h3cPosaAppServiceType=h3cPosaAppServiceType, h3cPosaTcpTermErrPkts=h3cPosaTcpTermErrPkts, h3cPosaSrvStateChangeTrapEnable=h3cPosaSrvStateChangeTrapEnable, h3cPosaFcmStatTransSuccessCnts=h3cPosaFcmStatTransSuccessCnts, h3cPosaMapSrcCode=h3cPosaMapSrcCode, h3cPosaCallerStatTable=h3cPosaCallerStatTable, h3cPosaMapRowStatus=h3cPosaMapRowStatus, h3cPosaTerminalErrPkts=h3cPosaTerminalErrPkts, h3cPosaTcpTermStatIndex=h3cPosaTcpTermStatIndex, H3cPeerState=H3cPeerState, h3cPosaAppErrPkts=h3cPosaAppErrPkts, h3cPosaBackupAppID=h3cPosaBackupAppID, h3cPosaTcpTermStatEntry=h3cPosaTcpTermStatEntry, h3cPosaCallerRecvPkts=h3cPosaCallerRecvPkts, h3cPosaFcmStatTimeoutCnts=h3cPosaFcmStatTimeoutCnts, h3cPosaAppOutDiscardedPkts=h3cPosaAppOutDiscardedPkts, h3cPosaCallerOutDiscardedPkts=h3cPosaCallerOutDiscardedPkts, h3cPosaCallerStatRowStatus=h3cPosaCallerStatRowStatus, h3cPosaTerminalRowStatus=h3cPosaTerminalRowStatus, h3cPosaCallerIDTransEnable=h3cPosaCallerIDTransEnable, h3cPosaAppStatEntry=h3cPosaAppStatEntry, h3cPosaMapTable=h3cPosaMapTable, h3cPosaCallerMapErrCnts=h3cPosaCallerMapErrCnts, h3cPosaTerminalStatEntry=h3cPosaTerminalStatEntry, h3cPosaControl=h3cPosaControl, h3cPosaTcpTermStatIPMask=h3cPosaTcpTermStatIPMask, h3cPosaTerminalStatTable=h3cPosaTerminalStatTable, h3cPosaTcpTermInDiscardedPkts=h3cPosaTcpTermInDiscardedPkts, h3cPosaAppRouterIPType=h3cPosaAppRouterIPType, h3cPosaAppStateChange=h3cPosaAppStateChange, h3cPosaAppStateChangeObject=h3cPosaAppStateChangeObject, h3cPosaTerminalIfIndex=h3cPosaTerminalIfIndex, h3cPosaAppIfIndex=h3cPosaAppIfIndex, h3cPosaAppConnectTimeout=h3cPosaAppConnectTimeout, h3cPosaFcmStatTransCntsClear=h3cPosaFcmStatTransCntsClear, h3cPosaAppHostIP=h3cPosaAppHostIP, h3cPosaAppSendPkts=h3cPosaAppSendPkts, h3cPosaTcpTermSendPkts=h3cPosaTcpTermSendPkts, h3cPosaTrapPrex=h3cPosaTrapPrex, h3cPosaTerminalEntry=h3cPosaTerminalEntry, h3cPosaTcpTermMapErrCnts=h3cPosaTcpTermMapErrCnts, h3cPosaTcpTermStatRowStatus=h3cPosaTcpTermStatRowStatus, h3cPosaTerminalTable=h3cPosaTerminalTable, h3cPosaTerminalHangUpTrapEnable=h3cPosaTerminalHangUpTrapEnable, h3cPosaFcmIdleTimeout=h3cPosaFcmIdleTimeout, h3cPosaTerminalAccessType=h3cPosaTerminalAccessType, h3cPosaAppKeepAliveCount=h3cPosaAppKeepAliveCount, h3cPosaAppTable=h3cPosaAppTable, h3cPosaTerminalID=h3cPosaTerminalID, h3cPosaAppStateChangeTrapEnable=h3cPosaAppStateChangeTrapEnable, h3cPosaAppRouterPort=h3cPosaAppRouterPort, h3cPosaFcmAnswerTimeout=h3cPosaFcmAnswerTimeout, h3cPosaFcmConfTable=h3cPosaFcmConfTable)
