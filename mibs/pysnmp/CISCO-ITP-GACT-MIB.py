#
# PySNMP MIB module CISCO-ITP-GACT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ITP-GACT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:46:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
cgspInstNetwork, = mibBuilder.importSymbols("CISCO-ITP-GSP-MIB", "cgspInstNetwork")
CItpTcInstanceNumber, CItpTcServiceIndicator, CItpTcLinksetId, CItpTcGlobalTitleSelectorName, CItpTcGtaLongAddr, CItpTcPointCode = mibBuilder.importSymbols("CISCO-ITP-TC-MIB", "CItpTcInstanceNumber", "CItpTcServiceIndicator", "CItpTcLinksetId", "CItpTcGlobalTitleSelectorName", "CItpTcGtaLongAddr", "CItpTcPointCode")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Unsigned32, Bits, ObjectIdentity, iso, NotificationType, MibIdentifier, Integer32, Counter64, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "ObjectIdentity", "iso", "NotificationType", "MibIdentifier", "Integer32", "Counter64", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoGactMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 333))
ciscoGactMIB.setRevisions(('2003-10-01 00:00', '2003-03-03 00:00',))
if mibBuilder.loadTexts: ciscoGactMIB.setLastUpdated('200310010000Z')
if mibBuilder.loadTexts: ciscoGactMIB.setOrganization('Cisco Systems, Inc.')
cgactMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 0))
cgactMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 1))
cgactMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 2))
cgactMtp3 = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1))
cgactGtt = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2))
cgactMtp3Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1), )
if mibBuilder.loadTexts: cgactMtp3Table.setStatus('current')
cgactMtp3TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3TableId"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3LinksetName"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3Dpc"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3Opc"), (0, "CISCO-ITP-GACT-MIB", "cgactMtp3SI"))
if mibBuilder.loadTexts: cgactMtp3TableEntry.setStatus('current')
cgactMtp3TableId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("passed", 1), ("violation", 2), ("unroutable", 3))))
if mibBuilder.loadTexts: cgactMtp3TableId.setStatus('current')
cgactMtp3LinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 2), CItpTcLinksetId())
if mibBuilder.loadTexts: cgactMtp3LinksetName.setStatus('current')
cgactMtp3Dpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 3), CItpTcPointCode())
if mibBuilder.loadTexts: cgactMtp3Dpc.setStatus('current')
cgactMtp3Opc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 4), CItpTcPointCode())
if mibBuilder.loadTexts: cgactMtp3Opc.setStatus('current')
cgactMtp3SI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 5), CItpTcServiceIndicator())
if mibBuilder.loadTexts: cgactMtp3SI.setStatus('current')
cgactMtp3InPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactMtp3InPackets.setStatus('current')
cgactMtp3OutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactMtp3OutPackets.setStatus('current')
cgactMtp3InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 8), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactMtp3InOctets.setStatus('current')
cgactMtp3OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 1, 1, 1, 9), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactMtp3OutOctets.setStatus('current')
cgactGttTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1), )
if mibBuilder.loadTexts: cgactGttTable.setStatus('deprecated')
cgactGttTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GACT-MIB", "cgactGttLinksetName"), (0, "CISCO-ITP-GACT-MIB", "cgactGttSelectorName"), (0, "CISCO-ITP-GACT-MIB", "cgactGttGta"), (0, "CISCO-ITP-GACT-MIB", "cgactGttTranslatedPc"))
if mibBuilder.loadTexts: cgactGttTableEntry.setStatus('deprecated')
cgactGttLinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 1), CItpTcLinksetId())
if mibBuilder.loadTexts: cgactGttLinksetName.setStatus('deprecated')
cgactGttSelectorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 2), CItpTcGlobalTitleSelectorName())
if mibBuilder.loadTexts: cgactGttSelectorName.setStatus('deprecated')
cgactGttGta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 3), CItpTcGtaLongAddr())
if mibBuilder.loadTexts: cgactGttGta.setStatus('deprecated')
cgactGttTranslatedPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 4), CItpTcPointCode())
if mibBuilder.loadTexts: cgactGttTranslatedPc.setStatus('deprecated')
cgactGttPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactGttPackets.setStatus('deprecated')
cgactGttOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 1, 1, 6), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactGttOctets.setStatus('deprecated')
cgactGtt2Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2), )
if mibBuilder.loadTexts: cgactGtt2Table.setStatus('current')
cgactGtt2TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2LinksetName"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2SelectorName"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2Gta"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2TranslatedInstNumber"), (0, "CISCO-ITP-GACT-MIB", "cgactGtt2TranslatedPc"))
if mibBuilder.loadTexts: cgactGtt2TableEntry.setStatus('current')
cgactGtt2LinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 1), CItpTcLinksetId())
if mibBuilder.loadTexts: cgactGtt2LinksetName.setStatus('current')
cgactGtt2SelectorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 2), CItpTcGlobalTitleSelectorName())
if mibBuilder.loadTexts: cgactGtt2SelectorName.setStatus('current')
cgactGtt2Gta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 3), CItpTcGtaLongAddr())
if mibBuilder.loadTexts: cgactGtt2Gta.setStatus('current')
cgactGtt2TranslatedInstNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 4), CItpTcInstanceNumber())
if mibBuilder.loadTexts: cgactGtt2TranslatedInstNumber.setStatus('current')
cgactGtt2TranslatedPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 5), CItpTcPointCode())
if mibBuilder.loadTexts: cgactGtt2TranslatedPc.setStatus('current')
cgactGtt2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactGtt2Packets.setStatus('current')
cgactGtt2Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 333, 1, 2, 2, 1, 7), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgactGtt2Octets.setStatus('current')
ciscoGactMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 1))
ciscoGactMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 2))
ciscoGactMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 1, 1)).setObjects(("CISCO-ITP-GACT-MIB", "ciscoGactMtp3Group"), ("CISCO-ITP-GACT-MIB", "ciscoGactGttGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactMIBCompliance = ciscoGactMIBCompliance.setStatus('deprecated')
ciscoGactMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 1, 2)).setObjects(("CISCO-ITP-GACT-MIB", "ciscoGactMtp3Group"), ("CISCO-ITP-GACT-MIB", "ciscoGactGttGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactMIBComplianceRev1 = ciscoGactMIBComplianceRev1.setStatus('current')
ciscoGactMtp3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 2, 1)).setObjects(("CISCO-ITP-GACT-MIB", "cgactMtp3InPackets"), ("CISCO-ITP-GACT-MIB", "cgactMtp3OutPackets"), ("CISCO-ITP-GACT-MIB", "cgactMtp3InOctets"), ("CISCO-ITP-GACT-MIB", "cgactMtp3OutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactMtp3Group = ciscoGactMtp3Group.setStatus('current')
ciscoGactGttGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 2, 2)).setObjects(("CISCO-ITP-GACT-MIB", "cgactGttPackets"), ("CISCO-ITP-GACT-MIB", "cgactGttOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactGttGroup = ciscoGactGttGroup.setStatus('deprecated')
ciscoGactGttGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 333, 2, 2, 3)).setObjects(("CISCO-ITP-GACT-MIB", "cgactGtt2Packets"), ("CISCO-ITP-GACT-MIB", "cgactGtt2Octets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGactGttGroupRev1 = ciscoGactGttGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-ITP-GACT-MIB", ciscoGactMIB=ciscoGactMIB, ciscoGactMtp3Group=ciscoGactMtp3Group, cgactMtp3Opc=cgactMtp3Opc, cgactGttPackets=cgactGttPackets, PYSNMP_MODULE_ID=ciscoGactMIB, cgactGttOctets=cgactGttOctets, cgactGttTable=cgactGttTable, cgactGtt2Table=cgactGtt2Table, ciscoGactMIBGroups=ciscoGactMIBGroups, cgactMIBConform=cgactMIBConform, cgactGttSelectorName=cgactGttSelectorName, cgactMtp3OutOctets=cgactMtp3OutOctets, cgactGttLinksetName=cgactGttLinksetName, cgactGtt=cgactGtt, cgactMtp3Table=cgactMtp3Table, cgactMtp3InOctets=cgactMtp3InOctets, cgactMtp3Dpc=cgactMtp3Dpc, cgactMtp3LinksetName=cgactMtp3LinksetName, cgactGtt2TranslatedPc=cgactGtt2TranslatedPc, cgactGtt2Octets=cgactGtt2Octets, cgactGtt2Packets=cgactGtt2Packets, cgactMtp3=cgactMtp3, cgactGtt2TableEntry=cgactGtt2TableEntry, ciscoGactMIBCompliance=ciscoGactMIBCompliance, ciscoGactMIBCompliances=ciscoGactMIBCompliances, cgactMIBNotifs=cgactMIBNotifs, cgactGttGta=cgactGttGta, cgactGtt2Gta=cgactGtt2Gta, cgactMIBObjects=cgactMIBObjects, ciscoGactGttGroup=ciscoGactGttGroup, cgactMtp3TableEntry=cgactMtp3TableEntry, cgactMtp3SI=cgactMtp3SI, cgactMtp3InPackets=cgactMtp3InPackets, ciscoGactGttGroupRev1=ciscoGactGttGroupRev1, cgactGttTranslatedPc=cgactGttTranslatedPc, cgactGttTableEntry=cgactGttTableEntry, cgactGtt2TranslatedInstNumber=cgactGtt2TranslatedInstNumber, ciscoGactMIBComplianceRev1=ciscoGactMIBComplianceRev1, cgactMtp3OutPackets=cgactMtp3OutPackets, cgactMtp3TableId=cgactMtp3TableId, cgactGtt2SelectorName=cgactGtt2SelectorName, cgactGtt2LinksetName=cgactGtt2LinksetName)
