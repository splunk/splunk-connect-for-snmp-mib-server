#
# PySNMP MIB module Wellfleet-FR2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-FR2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Bits, ObjectIdentity, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, ModuleIdentity, IpAddress, Integer32, Unsigned32, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "ObjectIdentity", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "ModuleIdentity", "IpAddress", "Integer32", "Unsigned32", "iso", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfFrameRelay2Group, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfFrameRelay2Group")
wfFrIfDlcmiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1), )
if mibBuilder.loadTexts: wfFrIfDlcmiTable.setStatus('mandatory')
wfFrIfDlcmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrDlcmiLineNumber"), (0, "Wellfleet-FR2-MIB", "wfFrDlcmiLLIndex"))
if mibBuilder.loadTexts: wfFrIfDlcmiEntry.setStatus('mandatory')
wfFrDlcmiDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiDelete.setStatus('mandatory')
wfFrDlcmiDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiDisable.setStatus('mandatory')
wfFrDlcmiLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiLineNumber.setStatus('mandatory')
wfFrDlcmiLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiLLIndex.setStatus('mandatory')
wfFrDlcmiCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiCircuit.setStatus('mandatory')
wfFrDlcmiManagementType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("lmi", 2), ("t1617d", 3), ("t1617b", 4), ("annexa", 5), ("lmiswitch", 6), ("annexdswitch", 7), ("annexaswitch", 8))).clone('t1617d')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiManagementType.setStatus('mandatory')
wfFrDlcmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("running", 1), ("fault", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiStatus.setStatus('mandatory')
wfFrDlcmiAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("q921", 1), ("q922march90", 2), ("q922november90", 3), ("q922", 4))).clone('q922')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiAddress.setStatus('mandatory')
wfFrDlcmiAddressLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("twobyte", 2), ("threebyte", 3), ("fourbyte", 4))).clone('twobyte')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiAddressLen.setStatus('mandatory')
wfFrDlcmiPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiPollingInterval.setStatus('mandatory')
wfFrDlcmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiFullEnquiryInterval.setStatus('mandatory')
wfFrDlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5000)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiErrorThreshold.setStatus('mandatory')
wfFrDlcmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5000)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiMonitoredEvents.setStatus('mandatory')
wfFrDlcmiMaxSupportedVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiMaxSupportedVCs.setStatus('mandatory')
wfFrDlcmiVCsConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiVCsConfigured.setStatus('mandatory')
wfFrDlcmiMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiMulticast.setStatus('mandatory')
wfFrDlcmiSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiSeqCount.setStatus('mandatory')
wfFrDlcmiLastReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiLastReceived.setStatus('mandatory')
wfFrDlcmiPassiveSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiPassiveSeqCount.setStatus('mandatory')
wfFrDlcmiPassiveReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiPassiveReceived.setStatus('mandatory')
wfFrDlcmiPolls = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiPolls.setStatus('mandatory')
wfFrDlcmiCongestionDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiCongestionDisable.setStatus('mandatory')
wfFrDlcmiCongestionTmr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("half", 1), ("one", 2), ("oneandhalf", 3), ("two", 4), ("twoandhalf", 5), ("three", 6), ("threeandhalf", 7), ("four", 8), ("fourandhalf", 9), ("five", 10))).clone('one')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiCongestionTmr.setStatus('mandatory')
wfFrDlcmiCongestionCtr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiCongestionCtr.setStatus('mandatory')
wfFrErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("unknown", 1), ("short", 2), ("long", 3), ("illegaldlci", 4), ("unknowndlci", 5), ("protoerr", 6), ("unknownie", 7), ("sequenceerr", 8), ("unknownrpt", 9), ("reset", 10), ("cntrl", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrType.setStatus('mandatory')
wfFrErrData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 26), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrData.setStatus('mandatory')
wfFrErrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 27), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrTime.setStatus('mandatory')
wfFrErrDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrDiscards.setStatus('mandatory')
wfFrErrDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrDrops.setStatus('mandatory')
wfFrErrFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrFaults.setStatus('mandatory')
wfFrErrFaultTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 31), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrFaultTime.setStatus('mandatory')
wfFrDlcmiDialFailureDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiDialFailureDisable.setStatus('mandatory')
wfFrDlcmiInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("primary", 2), ("backup", 3), ("backupDup", 4), ("demand", 5))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiInterfaceType.setStatus('mandatory')
wfFrDlcmiBackupFilterCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiBackupFilterCct.setStatus('mandatory')
wfFrDlcmiDebugLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiDebugLevel.setStatus('mandatory')
wfFrDlcmiTraceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiTraceLevel.setStatus('mandatory')
wfFrDlcmiCongestionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("shutdown", 1), ("throttle", 2), ("throttleThenShutdown", 3))).clone('shutdown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiCongestionMethod.setStatus('mandatory')
wfFrDlcmiShapingTmr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8196)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiShapingTmr.setStatus('mandatory')
wfFrDlcmiShapingHiQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiShapingHiQueueLimit.setStatus('mandatory')
wfFrDlcmiShapingNormalQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiShapingNormalQueueLimit.setStatus('mandatory')
wfFrDlcmiShapingLoQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiShapingLoQueueLimit.setStatus('mandatory')
wfFrDlcmiXoffDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiXoffDisable.setStatus('mandatory')
wfFrDlcmiMissingPolls = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiMissingPolls.setStatus('mandatory')
wfFrDlcmiName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiName.setStatus('mandatory')
wfFrDlcmiEnableSinglePVCUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiEnableSinglePVCUpdate.setStatus('mandatory')
wfFrDlcmiAnnexSwEnq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiAnnexSwEnq.setStatus('mandatory')
wfFrDlcmiAnnexSwEnqTmr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiAnnexSwEnqTmr.setStatus('mandatory')
wfFrDlcmiExtraStatusInfoEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiExtraStatusInfoEnable.setStatus('mandatory')
wfFrVCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2), )
if mibBuilder.loadTexts: wfFrVCircuitTable.setStatus('mandatory')
wfFrVCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrCircuitLineNumber"), (0, "Wellfleet-FR2-MIB", "wfFrCircuitLLIndex"), (0, "Wellfleet-FR2-MIB", "wfFrCircuitDlci"))
if mibBuilder.loadTexts: wfFrVCircuitEntry.setStatus('mandatory')
wfFrCircuitDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitDelete.setStatus('mandatory')
wfFrCircuitLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitLineNumber.setStatus('mandatory')
wfFrCircuitLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitLLIndex.setStatus('mandatory')
wfFrCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitNumber.setStatus('mandatory')
wfFrCircuitDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1007, 1024, 64511, 131072, 8257535))).clone(namedValues=NamedValues(("twobyteminimum", 16), ("twobytemaximum", 1007), ("threebyteminimum", 1024), ("threebytemaximum", 64511), ("fourbyteminimum", 131072), ("fourbytemaximum", 8257535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitDlci.setStatus('mandatory')
wfFrCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3), ("xoff", 4), ("control", 5), ("starting", 6), ("disabled", 7))).clone('invalid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitState.setStatus('mandatory')
wfFrCircuitStateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 7))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3), ("disabled", 7))).clone('invalid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitStateSet.setStatus('mandatory')
wfFrCircuitReceivedFECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitReceivedFECNs.setStatus('mandatory')
wfFrCircuitReceivedBECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitReceivedBECNs.setStatus('mandatory')
wfFrCircuitSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitSentFrames.setStatus('mandatory')
wfFrCircuitSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitSentOctets.setStatus('mandatory')
wfFrCircuitReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitReceivedFrames.setStatus('mandatory')
wfFrCircuitReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitReceivedOctets.setStatus('mandatory')
wfFrCircuitCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitCreationTime.setStatus('mandatory')
wfFrCircuitLastTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitLastTimeChange.setStatus('mandatory')
wfFrCircuitCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitCommittedBurst.setStatus('mandatory')
wfFrCircuitExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitExcessBurst.setStatus('mandatory')
wfFrCircuitThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitThroughput.setStatus('mandatory')
wfFrCircuitMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unicast", 1), ("multicast", 2))).clone('unicast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitMulticast.setStatus('mandatory')
wfFrCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("dynamicsvc", 3))).clone('static')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitType.setStatus('mandatory')
wfFrCircuitDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitDiscards.setStatus('mandatory')
wfFrCircuitDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitDrops.setStatus('mandatory')
wfFrCircuitSubCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitSubCct.setStatus('mandatory')
wfFrCircuitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("group", 1), ("hybrid", 2), ("direct", 3))).clone('group')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitMode.setStatus('mandatory')
wfFrCircuitCongestionDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("inherit", 3))).clone('inherit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitCongestionDisable.setStatus('mandatory')
wfFrCircuitCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forwarding", 1), ("congested", 2), ("throttling", 3))).clone('forwarding')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitCongestionState.setStatus('mandatory')
wfFrCircuitCongestionTmr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("half", 1), ("one", 2), ("oneandhalf", 3), ("two", 4), ("twoandhalf", 5), ("three", 6), ("threeandhalf", 7), ("four", 8), ("fourandhalf", 9), ("five", 10))).clone('one')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitCongestionTmr.setStatus('mandatory')
wfFrCircuitCongestionCtr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitCongestionCtr.setStatus('mandatory')
wfFrCircuitWcpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitWcpEnable.setStatus('mandatory')
wfFrCircuitPrimaryHoldTmr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 30), Integer32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitPrimaryHoldTmr.setStatus('mandatory')
wfFrCircuitInactivityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitInactivityTimer.setStatus('mandatory')
wfFrCircuitInactivityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bothdirections", 1), ("transmitonly", 2), ("receiveonly", 3), ("eitherdirection", 4))).clone('bothdirections')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitInactivityMode.setStatus('mandatory')
wfFrCircuitCongestionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("shutdown", 1), ("throttle", 2), ("throttleThenShutdown", 3), ("inherit", 4))).clone('inherit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitCongestionMethod.setStatus('mandatory')
wfFrCircuitShapedHiXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedHiXmits.setStatus('mandatory')
wfFrCircuitShapedNormalXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedNormalXmits.setStatus('mandatory')
wfFrCircuitShapedLoXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedLoXmits.setStatus('mandatory')
wfFrCircuitShapedHiClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedHiClippedPkts.setStatus('mandatory')
wfFrCircuitShapedNormalClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedNormalClippedPkts.setStatus('mandatory')
wfFrCircuitShapedLoClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedLoClippedPkts.setStatus('mandatory')
wfFrCircuitShapedHiQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedHiQHighWaterPkts.setStatus('mandatory')
wfFrCircuitShapedNormalQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedNormalQHighWaterPkts.setStatus('mandatory')
wfFrCircuitShapedLoQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedLoQHighWaterPkts.setStatus('mandatory')
wfFrCircuitShapedDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedDroppedPkts.setStatus('mandatory')
wfFrCircuitShapedLargePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedLargePkts.setStatus('mandatory')
wfFrCircuitShapedHiTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedHiTotalOctets.setStatus('mandatory')
wfFrCircuitShapedNormalTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedNormalTotalOctets.setStatus('mandatory')
wfFrCircuitShapedLoTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedLoTotalOctets.setStatus('mandatory')
wfFrCircuitShapedPktsNotQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapedPktsNotQueued.setStatus('mandatory')
wfFrCircuitShapedHighWaterPktsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitShapedHighWaterPktsClear.setStatus('mandatory')
wfFrCircuitShapedHiQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitShapedHiQueueLimit.setStatus('mandatory')
wfFrCircuitShapedNormalQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitShapedNormalQueueLimit.setStatus('mandatory')
wfFrCircuitShapedLoQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitShapedLoQueueLimit.setStatus('mandatory')
wfFrCircuitStartupDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 53), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitStartupDelay.setStatus('mandatory')
wfFrCircuitCurHiQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitCurHiQueueLimit.setStatus('mandatory')
wfFrCircuitCurNormalQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitCurNormalQueueLimit.setStatus('mandatory')
wfFrCircuitCurLoQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitCurLoQueueLimit.setStatus('mandatory')
wfFrCircuitShapingState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("invalid", 2), ("committed-shaping", 3), ("excess-shaping", 4), ("zero-cir", 5))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitShapingState.setStatus('mandatory')
wfFrCircuitBwThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 58), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitBwThreshold.setStatus('mandatory')
wfFrCircuitReceivedDEs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitReceivedDEs.setStatus('mandatory')
wfFrCircuitSentDEs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 2, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitSentDEs.setStatus('mandatory')
wfFrCctErrorTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 4), )
if mibBuilder.loadTexts: wfFrCctErrorTable.setStatus('mandatory')
wfFrCctErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 4, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrCctErrorCct"))
if mibBuilder.loadTexts: wfFrCctErrorEntry.setStatus('mandatory')
wfFrCctErrorCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCctErrorCct.setStatus('mandatory')
wfFrCctErrorDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCctErrorDrops.setStatus('mandatory')
wfFrCctErrorDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCctErrorDiscards.setStatus('mandatory')
wfFrServiceRecordTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5), )
if mibBuilder.loadTexts: wfFrServiceRecordTable.setStatus('mandatory')
wfFrServiceRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrServiceRecordLineNumber"), (0, "Wellfleet-FR2-MIB", "wfFrServiceRecordLLIndex"), (0, "Wellfleet-FR2-MIB", "wfFrServiceRecordCircuitNumber"))
if mibBuilder.loadTexts: wfFrServiceRecordEntry.setStatus('mandatory')
wfFrServiceRecordDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordDelete.setStatus('mandatory')
wfFrServiceRecordLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordLineNumber.setStatus('mandatory')
wfFrServiceRecordLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordLLIndex.setStatus('mandatory')
wfFrServiceRecordCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordCircuitNumber.setStatus('mandatory')
wfFrServiceRecordDefaultFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordDefaultFlag.setStatus('mandatory')
wfFrServiceRecordNumberVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordNumberVCs.setStatus('mandatory')
wfFrServiceRecordName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordName.setStatus('mandatory')
wfFrServiceRecordState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("invalid", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordState.setStatus('mandatory')
wfFrServiceRecordPreMultiCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordPreMultiCircuit.setStatus('mandatory')
wfFrServiceRecordBackupFilterCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordBackupFilterCct.setStatus('mandatory')
wfFrServiceRecordBackupLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordBackupLineNumber.setStatus('mandatory')
wfFrServiceRecordBackupLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordBackupLLIndex.setStatus('mandatory')
wfFrServiceRecordBackupMainCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordBackupMainCct.setStatus('mandatory')
wfFrServiceRecordPrimaryLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordPrimaryLineNumber.setStatus('mandatory')
wfFrServiceRecordPrimaryLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordPrimaryLLIndex.setStatus('mandatory')
wfFrServiceRecordPrimaryMainCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordPrimaryMainCct.setStatus('mandatory')
wfFrServiceRecordSVCDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCDisable.setStatus('mandatory')
wfFrServiceRecordSVCLocNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCLocNum.setStatus('mandatory')
wfFrServiceRecordSVCLocSubAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCLocSubAdr.setStatus('mandatory')
wfFrServiceRecordSVCLocPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("e164", 1), ("x121", 3))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCLocPlan.setStatus('mandatory')
wfFrServiceRecordSVCLocTypeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("international", 2))).clone('international')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCLocTypeNum.setStatus('mandatory')
wfFrServiceRecordSVCCallBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("inbound", 2), ("outbound", 3), ("all", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCCallBlock.setStatus('mandatory')
wfFrServiceRecordSVCInScrnDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCInScrnDisable.setStatus('mandatory')
wfFrServiceRecordSVCInScrnUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2))).clone('include')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCInScrnUsage.setStatus('mandatory')
wfFrServiceRecordSVCInactTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCInactTimer.setStatus('mandatory')
wfFrServiceRecordSVCInactMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bothdirections", 1), ("transmitonly", 2), ("receiveonly", 3), ("eitherdirection", 4))).clone('bothdirections')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrServiceRecordSVCInactMode.setStatus('mandatory')
wfFrServiceRecordNumberStaticVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordNumberStaticVCs.setStatus('mandatory')
wfFrServiceRecordNumberDynamicVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordNumberDynamicVCs.setStatus('mandatory')
wfFrServiceRecordNumberSVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordNumberSVCs.setStatus('mandatory')
wfFrServiceRecordNumberActiveVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordNumberActiveVCs.setStatus('mandatory')
wfFrServiceRecordifLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 31), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordifLastChange.setStatus('mandatory')
wfFrServiceRecordifInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordifInOctets.setStatus('mandatory')
wfFrServiceRecordifInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordifInDiscards.setStatus('mandatory')
wfFrServiceRecordifOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordifOutOctets.setStatus('mandatory')
wfFrServiceRecordifOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordifOutDiscards.setStatus('mandatory')
wfFrServiceRecordifOutCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordifOutCtrlPkts.setStatus('mandatory')
wfFrServiceRecordifInCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 5, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrServiceRecordifInCtrlPkts.setStatus('mandatory')
wfFrSigTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6), )
if mibBuilder.loadTexts: wfFrSigTable.setStatus('mandatory')
wfFrSigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrSigLineNumber"), (0, "Wellfleet-FR2-MIB", "wfFrSigLLIndex"))
if mibBuilder.loadTexts: wfFrSigEntry.setStatus('mandatory')
wfFrSigDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigDelete.setStatus('mandatory')
wfFrSigDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigDisable.setStatus('mandatory')
wfFrSigLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSigLineNumber.setStatus('mandatory')
wfFrSigLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSigLLIndex.setStatus('mandatory')
wfFrSigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("running", 1), ("fault", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSigStatus.setStatus('mandatory')
wfFrSigCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigCircuit.setStatus('mandatory')
wfFrSigConformance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("frf4", 1), ("priority", 2), ("q933", 3), ("t1617", 4))).clone('frf4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigConformance.setStatus('mandatory')
wfFrSigSvcIdleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10, 360, 14400))).clone(namedValues=NamedValues(("min", 10), ("default", 360), ("max", 14400))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigSvcIdleTimer.setStatus('mandatory')
wfFrSigMaxSvcs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 1024))).clone(namedValues=NamedValues(("min", 1), ("default", 16), ("max", 1024))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigMaxSvcs.setStatus('mandatory')
wfFrSigSvcDeletePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("always", 1), ("use", 2), ("never", 3))).clone('always')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigSvcDeletePolicy.setStatus('mandatory')
wfFrSigSvcReplacePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("always", 1), ("idle", 2), ("never", 3))).clone('always')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigSvcReplacePolicy.setStatus('mandatory')
wfFrSigT303 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 120))).clone(namedValues=NamedValues(("min", 1), ("default", 4), ("max", 120))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigT303.setStatus('mandatory')
wfFrSigT305 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 30, 120))).clone(namedValues=NamedValues(("min", 1), ("default", 30), ("max", 120))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigT305.setStatus('mandatory')
wfFrSigT308 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 120))).clone(namedValues=NamedValues(("min", 1), ("default", 4), ("max", 120))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigT308.setStatus('mandatory')
wfFrSigT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 30, 120))).clone(namedValues=NamedValues(("min", 1), ("default", 30), ("max", 120))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigT310.setStatus('mandatory')
wfFrSigT322 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 120))).clone(namedValues=NamedValues(("min", 1), ("default", 4), ("max", 120))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigT322.setStatus('mandatory')
wfFrSigN322 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 100))).clone(namedValues=NamedValues(("min", 1), ("max", 100))).clone('min')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSigN322.setStatus('mandatory')
wfFrSigNumMaxSVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSigNumMaxSVCs.setStatus('mandatory')
wfFrSigNumConnRej = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSigNumConnRej.setStatus('mandatory')
wfFrSigNumSvcRej = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSigNumSvcRej.setStatus('mandatory')
wfFrSigNumSvcFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSigNumSvcFailed.setStatus('mandatory')
wfFrLapfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7), )
if mibBuilder.loadTexts: wfFrLapfTable.setStatus('mandatory')
wfFrLapfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfLapfLineNumber"), (0, "Wellfleet-FR2-MIB", "wfLapfLLIndex"))
if mibBuilder.loadTexts: wfFrLapfEntry.setStatus('mandatory')
wfLapfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLapfDelete.setStatus('mandatory')
wfLapfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLapfDisable.setStatus('mandatory')
wfLapfLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfLineNumber.setStatus('mandatory')
wfLapfLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfLLIndex.setStatus('mandatory')
wfLapfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("running", 1), ("fault", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfStatus.setStatus('mandatory')
wfLapfStationType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("networkside", 1), ("userside", 2))).clone('networkside')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLapfStationType.setStatus('mandatory')
wfLapfActionInitiate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLapfActionInitiate.setStatus('mandatory')
wfLapfT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1200)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLapfT200.setStatus('mandatory')
wfLapfT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLapfT203.setStatus('mandatory')
wfLapfN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLapfN200.setStatus('mandatory')
wfLapfN201 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(260, 2052)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLapfN201.setStatus('mandatory')
wfLapfK = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLapfK.setStatus('mandatory')
wfLapfRxWin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfRxWin.setStatus('mandatory')
wfLapfTxWin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfTxWin.setStatus('mandatory')
wfLapfSABMESent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfSABMESent.setStatus('mandatory')
wfLapfSABMERcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfSABMERcvd.setStatus('mandatory')
wfLapfUASent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfUASent.setStatus('mandatory')
wfLapfUARcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfUARcvd.setStatus('mandatory')
wfLapfDISCSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfDISCSent.setStatus('mandatory')
wfLapfDISCRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfDISCRcvd.setStatus('mandatory')
wfLapfDMSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfDMSent.setStatus('mandatory')
wfLapfDMRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfDMRcvd.setStatus('mandatory')
wfLapfFRMRSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfFRMRSent.setStatus('mandatory')
wfLapfFRMRRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfFRMRRcvd.setStatus('mandatory')
wfLapfRNRsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfRNRsSent.setStatus('mandatory')
wfLapfRNRsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfRNRsRcvd.setStatus('mandatory')
wfLapfREJsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfREJsSent.setStatus('mandatory')
wfLapfREJsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfREJsRcvd.setStatus('mandatory')
wfLapfIFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfIFramesSent.setStatus('mandatory')
wfLapfIFramesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfIFramesRcvd.setStatus('mandatory')
wfLapfUISent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfUISent.setStatus('mandatory')
wfLapfUIRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfUIRcvd.setStatus('mandatory')
wfLapfRRsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfRRsSent.setStatus('mandatory')
wfLapfRRsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfRRsRcvd.setStatus('mandatory')
wfLapfXIDSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfXIDSent.setStatus('mandatory')
wfLapfXIDRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfXIDRcvd.setStatus('mandatory')
wfLapfT200Timeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfT200Timeouts.setStatus('mandatory')
wfLapfT203Timeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfT203Timeouts.setStatus('mandatory')
wfLapfN200Exceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfN200Exceeded.setStatus('mandatory')
wfLapfN201Error = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 7, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfLapfN201Error.setStatus('mandatory')
wfFrFRF4SigTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9), )
if mibBuilder.loadTexts: wfFrFRF4SigTable.setStatus('mandatory')
wfFrFRF4SigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrFRF4SigLineNumber"), (0, "Wellfleet-FR2-MIB", "wfFrFRF4SigLLIndex"))
if mibBuilder.loadTexts: wfFrFRF4SigEntry.setStatus('mandatory')
wfFrFRF4SigDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrFRF4SigDelete.setStatus('mandatory')
wfFrFRF4SigDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrFRF4SigDisable.setStatus('mandatory')
wfFrFRF4SigLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigLineNumber.setStatus('mandatory')
wfFrFRF4SigLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigLLIndex.setStatus('mandatory')
wfFrFRF4SigMaxSvcs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrFRF4SigMaxSvcs.setStatus('mandatory')
wfFrFRF4SigT303 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 90)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrFRF4SigT303.setStatus('mandatory')
wfFrFRF4SigT305 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 90)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrFRF4SigT305.setStatus('mandatory')
wfFrFRF4SigT308 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 90)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrFRF4SigT308.setStatus('mandatory')
wfFrFRF4SigT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 90)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrFRF4SigT310.setStatus('mandatory')
wfFrFRF4SigT322 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 90)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrFRF4SigT322.setStatus('mandatory')
wfFrFRF4SigN322 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrFRF4SigN322.setStatus('mandatory')
wfFrFRF4SigFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigFramesSent.setStatus('mandatory')
wfFrFRF4SigOctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigOctetsSent.setStatus('mandatory')
wfFrFRF4SigFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigFramesReceived.setStatus('mandatory')
wfFrFRF4SigOctetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigOctetsReceived.setStatus('mandatory')
wfFrFRF4SigFramesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigFramesDropped.setStatus('mandatory')
wfFrFRF4SigFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigFramesDiscarded.setStatus('mandatory')
wfFrFRF4SigSetupRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigSetupRx.setStatus('mandatory')
wfFrFRF4SigCallProcRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigCallProcRx.setStatus('mandatory')
wfFrFRF4SigConnectRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigConnectRx.setStatus('mandatory')
wfFrFRF4SigDisconnectRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigDisconnectRx.setStatus('mandatory')
wfFrFRF4SigReleaseRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigReleaseRx.setStatus('mandatory')
wfFrFRF4SigReleaseCompleteRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigReleaseCompleteRx.setStatus('mandatory')
wfFrFRF4SigStatusRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigStatusRx.setStatus('mandatory')
wfFrFRF4SigStatusEnquiryRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigStatusEnquiryRx.setStatus('mandatory')
wfFrFRF4SigSetupTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigSetupTx.setStatus('mandatory')
wfFrFRF4SigCallProcTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigCallProcTx.setStatus('mandatory')
wfFrFRF4SigConnectTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigConnectTx.setStatus('mandatory')
wfFrFRF4SigDisconnectTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigDisconnectTx.setStatus('mandatory')
wfFrFRF4SigReleaseTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigReleaseTx.setStatus('mandatory')
wfFrFRF4SigReleaseCompleteTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigReleaseCompleteTx.setStatus('mandatory')
wfFrFRF4SigStatusTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigStatusTx.setStatus('mandatory')
wfFrFRF4SigStatusEnquiryTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 9, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrFRF4SigStatusEnquiryTx.setStatus('mandatory')
wfFrSVCOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10), )
if mibBuilder.loadTexts: wfFrSVCOptionsTable.setStatus('mandatory')
wfFrSVCOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrSVCOptionsLineNumber"), (0, "Wellfleet-FR2-MIB", "wfFrSVCOptionsLLIndex"), (0, "Wellfleet-FR2-MIB", "wfFrSVCOptionsCircuitNumber"), (0, "Wellfleet-FR2-MIB", "wfFrSVCOptionsInstanceIndex"))
if mibBuilder.loadTexts: wfFrSVCOptionsEntry.setStatus('mandatory')
wfFrSVCOptionsDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsDelete.setStatus('mandatory')
wfFrSVCOptionsDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsDisable.setStatus('mandatory')
wfFrSVCOptionsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCOptionsLineNumber.setStatus('mandatory')
wfFrSVCOptionsLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCOptionsLLIndex.setStatus('mandatory')
wfFrSVCOptionsCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCOptionsCircuitNumber.setStatus('mandatory')
wfFrSVCOptionsInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCOptionsInstanceIndex.setStatus('mandatory')
wfFrSVCOptionsRemNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsRemNum.setStatus('mandatory')
wfFrSVCOptionsRemSubAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsRemSubAdr.setStatus('mandatory')
wfFrSVCOptionsRemPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("e164", 1), ("x121", 3))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsRemPlan.setStatus('mandatory')
wfFrSVCOptionsRemTypeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("international", 2))).clone('international')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsRemTypeNum.setStatus('mandatory')
wfFrSVCOptionsBroadcastDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsBroadcastDisable.setStatus('mandatory')
wfFrSVCOptionsInactTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsInactTimer.setStatus('mandatory')
wfFrSVCOptionsInactMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bothdirections", 1), ("transmitonly", 2), ("receiveonly", 3), ("eitherdirection", 4))).clone('bothdirections')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsInactMode.setStatus('mandatory')
wfFrSVCOptionsX213DataPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsX213DataPriority.setStatus('mandatory')
wfFrSVCOptionsX213DataLQAPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsX213DataLQAPriority.setStatus('mandatory')
wfFrSVCOptionsX213GainPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsX213GainPriority.setStatus('mandatory')
wfFrSVCOptionsX213GainLQAPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsX213GainLQAPriority.setStatus('mandatory')
wfFrSVCOptionsX213KeepPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsX213KeepPriority.setStatus('mandatory')
wfFrSVCOptionsX213KeepLQAPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsX213KeepLQAPriority.setStatus('mandatory')
wfFrSVCOptionsLLCoreOutThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsLLCoreOutThroughput.setStatus('mandatory')
wfFrSVCOptionsLLCoreInThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsLLCoreInThroughput.setStatus('mandatory')
wfFrSVCOptionsLLCoreMinOutThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsLLCoreMinOutThroughput.setStatus('mandatory')
wfFrSVCOptionsLLCoreMinInThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsLLCoreMinInThroughput.setStatus('mandatory')
wfFrSVCOptionsLLCoreOutBc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsLLCoreOutBc.setStatus('mandatory')
wfFrSVCOptionsLLCoreInBc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsLLCoreInBc.setStatus('mandatory')
wfFrSVCOptionsLLCoreOutBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsLLCoreOutBe.setStatus('mandatory')
wfFrSVCOptionsLLCoreInBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsLLCoreInBe.setStatus('mandatory')
wfFrSVCOptionsCongestionDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("inherit", 3))).clone('inherit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsCongestionDisable.setStatus('mandatory')
wfFrSVCOptionsCongestionTmr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("half", 1), ("one", 2), ("oneandhalf", 3), ("two", 4), ("twoandhalf", 5), ("three", 6), ("threeandhalf", 7), ("four", 8), ("fourandhalf", 9), ("five", 10))).clone('one')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsCongestionTmr.setStatus('mandatory')
wfFrSVCOptionsCongestionCtr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsCongestionCtr.setStatus('mandatory')
wfFrSVCOptionsCongestionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("shutdown", 1), ("throttle", 2), ("throttlethenshutdown", 3), ("inherit", 4))).clone('inherit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsCongestionMethod.setStatus('mandatory')
wfFrSVCOptionsTrafficShapingDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsTrafficShapingDisable.setStatus('mandatory')
wfFrSVCOptionsWcpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsWcpEnable.setStatus('mandatory')
wfFrSVCOptionsName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 10, 1, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCOptionsName.setStatus('mandatory')
wfFrSVCActiveCallTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11), )
if mibBuilder.loadTexts: wfFrSVCActiveCallTable.setStatus('mandatory')
wfFrSVCActiveCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrSVCActiveCallLineNumber"), (0, "Wellfleet-FR2-MIB", "wfFrSVCActiveCallLLIndex"), (0, "Wellfleet-FR2-MIB", "wfFrSVCActiveCallDLCI"))
if mibBuilder.loadTexts: wfFrSVCActiveCallEntry.setStatus('mandatory')
wfFrSVCActiveCallDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSVCActiveCallDelete.setStatus('mandatory')
wfFrSVCActiveCallLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLineNumber.setStatus('mandatory')
wfFrSVCActiveCallLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLLIndex.setStatus('mandatory')
wfFrSVCActiveCallDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallDLCI.setStatus('mandatory')
wfFrSVCActiveCallDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallDirection.setStatus('mandatory')
wfFrSVCActiveCallCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallCircuitNumber.setStatus('mandatory')
wfFrSVCActiveCallCalledNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallCalledNum.setStatus('mandatory')
wfFrSVCActiveCallCalledSubAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallCalledSubAdr.setStatus('mandatory')
wfFrSVCActiveCallCalledPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallCalledPlan.setStatus('mandatory')
wfFrSVCActiveCallCalledTypeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallCalledTypeNum.setStatus('mandatory')
wfFrSVCActiveCallCallingNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallCallingNum.setStatus('mandatory')
wfFrSVCActiveCallCallingSubAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallCallingSubAdr.setStatus('mandatory')
wfFrSVCActiveCallCallingPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallCallingPlan.setStatus('mandatory')
wfFrSVCActiveCallCallingTypeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallCallingTypeNum.setStatus('mandatory')
wfFrSVCActiveCallX213DataPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallX213DataPriority.setStatus('mandatory')
wfFrSVCActiveCallX213DataLQAPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallX213DataLQAPriority.setStatus('mandatory')
wfFrSVCActiveCallX213GainPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallX213GainPriority.setStatus('mandatory')
wfFrSVCActiveCallX213GainLQAPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallX213GainLQAPriority.setStatus('mandatory')
wfFrSVCActiveCallX213KeepPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallX213KeepPriority.setStatus('mandatory')
wfFrSVCActiveCallX213KeepLQAPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallX213KeepLQAPriority.setStatus('mandatory')
wfFrSVCActiveCallLLCoreOutThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLLCoreOutThroughput.setStatus('mandatory')
wfFrSVCActiveCallLLCoreInThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLLCoreInThroughput.setStatus('mandatory')
wfFrSVCActiveCallLLCoreMinOutThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLLCoreMinOutThroughput.setStatus('mandatory')
wfFrSVCActiveCallLLCoreMinInThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLLCoreMinInThroughput.setStatus('mandatory')
wfFrSVCActiveCallLLCoreOutBc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLLCoreOutBc.setStatus('mandatory')
wfFrSVCActiveCallLLCoreInBc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLLCoreInBc.setStatus('mandatory')
wfFrSVCActiveCallLLCoreOutBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLLCoreOutBe.setStatus('mandatory')
wfFrSVCActiveCallLLCoreInBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallLLCoreInBe.setStatus('mandatory')
wfFrSVCActiveCallConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 11, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSVCActiveCallConnectTime.setStatus('mandatory')
wfFrPtIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12), )
if mibBuilder.loadTexts: wfFrPtIntfTable.setStatus('mandatory')
wfFrPtIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrPtIntfCct"), (0, "Wellfleet-FR2-MIB", "wfFrPtIntfDlci"))
if mibBuilder.loadTexts: wfFrPtIntfEntry.setStatus('mandatory')
wfFrPtIntfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrPtIntfDelete.setStatus('mandatory')
wfFrPtIntfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrPtIntfDisable.setStatus('mandatory')
wfFrPtIntfCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtIntfCct.setStatus('mandatory')
wfFrPtIntfDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtIntfDlci.setStatus('mandatory')
wfFrPtIntfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("invalid", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtIntfState.setStatus('mandatory')
wfFrPtIntfRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtIntfRxFrames.setStatus('mandatory')
wfFrPtIntfTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtIntfTxFrames.setStatus('mandatory')
wfFrPtIntfDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtIntfDiscards.setStatus('mandatory')
wfFrPtIntfDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtIntfDrops.setStatus('mandatory')
wfFrPtMappingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 13), )
if mibBuilder.loadTexts: wfFrPtMappingTable.setStatus('mandatory')
wfFrPtMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 13, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrPtMappingCctA"), (0, "Wellfleet-FR2-MIB", "wfFrPtMappingDlciA"), (0, "Wellfleet-FR2-MIB", "wfFrPtMappingCctB"), (0, "Wellfleet-FR2-MIB", "wfFrPtMappingDlciB"))
if mibBuilder.loadTexts: wfFrPtMappingEntry.setStatus('mandatory')
wfFrPtMappingDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrPtMappingDelete.setStatus('mandatory')
wfFrPtMappingDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrPtMappingDisable.setStatus('mandatory')
wfFrPtMappingCctA = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtMappingCctA.setStatus('mandatory')
wfFrPtMappingDlciA = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtMappingDlciA.setStatus('mandatory')
wfFrPtMappingCctB = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtMappingCctB.setStatus('mandatory')
wfFrPtMappingDlciB = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 13, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtMappingDlciB.setStatus('mandatory')
wfFrPtMappingState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("invalid", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrPtMappingState.setStatus('mandatory')
wfFrMlTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14), )
if mibBuilder.loadTexts: wfFrMlTable.setStatus('mandatory')
wfFrMlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrMlCircuitNumber"))
if mibBuilder.loadTexts: wfFrMlEntry.setStatus('mandatory')
wfFrMlDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlDelete.setStatus('mandatory')
wfFrMlCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlCircuitNumber.setStatus('mandatory')
wfFrMlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dtedte", 1), ("uni", 2))).clone('dtedte')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlMode.setStatus('mandatory')
wfFrMlFragPermEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlFragPermEnable.setStatus('mandatory')
wfFrMlCircuitMaxBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlCircuitMaxBuffers.setStatus('mandatory')
wfFrMlFragTriggerSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 6), Integer32().clone(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlFragTriggerSize.setStatus('mandatory')
wfFrMlFragStrict = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlFragStrict.setStatus('mandatory')
wfFrMlAggVCStatusMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("anyactive", 1), ("allactive", 2), ("other", 3))).clone('anyactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlAggVCStatusMode.setStatus('mandatory')
wfFrMlCompressionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlCompressionEnable.setStatus('mandatory')
wfFrMlHomeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlHomeSlot.setStatus('mandatory')
wfFrMlStatsLineCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsLineCnt.setStatus('mandatory')
wfFrMlStatsBundleSpd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsBundleSpd.setStatus('mandatory')
wfFrMlStatsTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsTxOctets.setStatus('mandatory')
wfFrMlStatsTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsTxPkts.setStatus('mandatory')
wfFrMlStatsAvgTxListLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsAvgTxListLen.setStatus('mandatory')
wfFrMlStatsRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsRxOctets.setStatus('mandatory')
wfFrMlStatsRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsRxPkts.setStatus('mandatory')
wfFrMlStatsReasmFails = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsReasmFails.setStatus('mandatory')
wfFrMlStatsSeqNumberLost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsSeqNumberLost.setStatus('mandatory')
wfFrMlStatsSeqNumberArrivedLate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsSeqNumberArrivedLate.setStatus('mandatory')
wfFrMlStatsReSeqBufferCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsReSeqBufferCnt.setStatus('mandatory')
wfFrMlStatsReSeqBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsReSeqBufferMax.setStatus('mandatory')
wfFrMlStatsExceededBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsExceededBufferMax.setStatus('mandatory')
wfFrMlStatsLinkIdleEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsLinkIdleEvents.setStatus('mandatory')
wfFrMlStatsCalcPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlStatsCalcPercent.setStatus('mandatory')
wfFrMlStatsDebug = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlStatsDebug.setStatus('mandatory')
wfFrMlStatsReassmBufferCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsReassmBufferCnt.setStatus('mandatory')
wfFrMlStatsReassmBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsReassmBufferMax.setStatus('mandatory')
wfFrMlStatsNumPktsFragmented = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsNumPktsFragmented.setStatus('mandatory')
wfFrMlStatsPQHiXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQHiXmits.setStatus('mandatory')
wfFrMlStatsPQNormalXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQNormalXmits.setStatus('mandatory')
wfFrMlStatsPQLoXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQLoXmits.setStatus('mandatory')
wfFrMlStatsPQHiClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQHiClippedPkts.setStatus('mandatory')
wfFrMlStatsPQNormalClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQNormalClippedPkts.setStatus('mandatory')
wfFrMlStatsPQLoClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQLoClippedPkts.setStatus('mandatory')
wfFrMlStatsPQIntrQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQIntrQHighWaterPkts.setStatus('mandatory')
wfFrMlStatsPQHiQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQHiQHighWaterPkts.setStatus('mandatory')
wfFrMlStatsPQNormalQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQNormalQHighWaterPkts.setStatus('mandatory')
wfFrMlStatsPQLoQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQLoQHighWaterPkts.setStatus('mandatory')
wfFrMlStatsPQHighWaterPktsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlStatsPQHighWaterPktsClear.setStatus('mandatory')
wfFrMlStatsPQDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQDroppedPkts.setStatus('mandatory')
wfFrMlStatsPQLargePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQLargePkts.setStatus('mandatory')
wfFrMlStatsPQHiTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQHiTotalOctets.setStatus('mandatory')
wfFrMlStatsPQNormalTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQNormalTotalOctets.setStatus('mandatory')
wfFrMlStatsPQLoTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQLoTotalOctets.setStatus('mandatory')
wfFrMlStatsPQPktsNotQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 14, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlStatsPQPktsNotQueued.setStatus('mandatory')
wfFrMlVCTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15), )
if mibBuilder.loadTexts: wfFrMlVCTable.setStatus('mandatory')
wfFrMlVCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrMlVCCircuitNumber"), (0, "Wellfleet-FR2-MIB", "wfFrMlVCDlci"))
if mibBuilder.loadTexts: wfFrMlVCEntry.setStatus('mandatory')
wfFrMlVCDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlVCDelete.setStatus('mandatory')
wfFrMlVCCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCCircuitNumber.setStatus('mandatory')
wfFrMlVCDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCDlci.setStatus('mandatory')
wfFrMlVCAggState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlVCAggState.setStatus('mandatory')
wfFrMlVCAggNumberVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlVCAggNumberVCs.setStatus('mandatory')
wfFrMlVCAggNumberVCsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlVCAggNumberVCsActive.setStatus('mandatory')
wfFrMlVCStatsLineCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsLineCnt.setStatus('mandatory')
wfFrMlVCStatsBundleSpd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsBundleSpd.setStatus('mandatory')
wfFrMlVCStatsTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsTxOctets.setStatus('mandatory')
wfFrMlVCStatsTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsTxPkts.setStatus('mandatory')
wfFrMlVCStatsAvgTxListLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsAvgTxListLen.setStatus('mandatory')
wfFrMlVCStatsRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsRxOctets.setStatus('mandatory')
wfFrMlVCStatsRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsRxPkts.setStatus('mandatory')
wfFrMlVCStatsReasmFails = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsReasmFails.setStatus('mandatory')
wfFrMlVCStatsSeqNumberLost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsSeqNumberLost.setStatus('mandatory')
wfFrMlVCStatsSeqNumberArrivedLate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsSeqNumberArrivedLate.setStatus('mandatory')
wfFrMlVCStatsReSeqBufferCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsReSeqBufferCnt.setStatus('mandatory')
wfFrMlVCStatsReSeqBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsReSeqBufferMax.setStatus('mandatory')
wfFrMlVCStatsExceededBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsExceededBufferMax.setStatus('mandatory')
wfFrMlVCStatsLinkIdleEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsLinkIdleEvents.setStatus('mandatory')
wfFrMlVCStatsCalcPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlVCStatsCalcPercent.setStatus('mandatory')
wfFrMlVCStatsDebug = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrMlVCStatsDebug.setStatus('mandatory')
wfFrMlVCStatsReassmBufferCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsReassmBufferCnt.setStatus('mandatory')
wfFrMlVCStatsReassmBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsReassmBufferMax.setStatus('mandatory')
wfFrMlVCStatsNumPktsFragmented = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 15, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMlVCStatsNumPktsFragmented.setStatus('mandatory')
wfFrMapDlcmiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16), )
if mibBuilder.loadTexts: wfFrMapDlcmiTable.setStatus('mandatory')
wfFrMapDlcmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrMapDlcmiIfIndex"))
if mibBuilder.loadTexts: wfFrMapDlcmiEntry.setStatus('mandatory')
wfFrMapDlcmiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiIfIndex.setStatus('mandatory')
wfFrMapDlcmiState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noLmiConfigured", 1), ("lmiRev1", 2), ("ansiT1617D", 3), ("ansiT1617B", 4), ("itut933A", 5), ("ansiT1617D1994", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiState.setStatus('mandatory')
wfFrMapDlcmiAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("q921", 1), ("q922March90", 2), ("q922November90", 3), ("q922", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiAddress.setStatus('mandatory')
wfFrMapDlcmiAddressLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("twoOctets", 2), ("threeOctets", 3), ("fourOctets", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiAddressLen.setStatus('mandatory')
wfFrMapDlcmiPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiPollingInterval.setStatus('mandatory')
wfFrMapDlcmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiFullEnquiryInterval.setStatus('mandatory')
wfFrMapDlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiErrorThreshold.setStatus('mandatory')
wfFrMapDlcmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiMonitoredEvents.setStatus('mandatory')
wfFrMapDlcmiMaxSupportedVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiMaxSupportedVCs.setStatus('mandatory')
wfFrMapDlcmiMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonBroadcast", 1), ("broadcast", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiMulticast.setStatus('mandatory')
wfFrMapDlcmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("fault", 2), ("initializing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiStatus.setStatus('mandatory')
wfFrMapDlcmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiRowStatus.setStatus('mandatory')
wfFrMapDlcmiLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiLineNumber.setStatus('mandatory')
wfFrMapDlcmiLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 16, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapDlcmiLLIndex.setStatus('mandatory')
wfFrMapCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17), )
if mibBuilder.loadTexts: wfFrMapCircuitTable.setStatus('mandatory')
wfFrMapCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrMapCircuitIfIndex"), (0, "Wellfleet-FR2-MIB", "wfFrMapCircuitDlci"))
if mibBuilder.loadTexts: wfFrMapCircuitEntry.setStatus('mandatory')
wfFrMapCircuitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitIfIndex.setStatus('mandatory')
wfFrMapCircuitDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitDlci.setStatus('mandatory')
wfFrMapCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitState.setStatus('mandatory')
wfFrMapCircuitReceivedFECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitReceivedFECNs.setStatus('mandatory')
wfFrMapCircuitReceivedBECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitReceivedBECNs.setStatus('mandatory')
wfFrMapCircuitSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitSentFrames.setStatus('mandatory')
wfFrMapCircuitSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitSentOctets.setStatus('mandatory')
wfFrMapCircuitReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitReceivedFrames.setStatus('mandatory')
wfFrMapCircuitReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitReceivedOctets.setStatus('mandatory')
wfFrMapCircuitCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitCreationTime.setStatus('mandatory')
wfFrMapCircuitLastTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitLastTimeChange.setStatus('mandatory')
wfFrMapCircuitCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitCommittedBurst.setStatus('mandatory')
wfFrMapCircuitExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitExcessBurst.setStatus('mandatory')
wfFrMapCircuitThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitThroughput.setStatus('mandatory')
wfFrMapCircuitMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unicast", 1), ("oneWay", 2), ("twoWay", 3), ("nWay", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitMulticast.setStatus('mandatory')
wfFrMapCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitType.setStatus('mandatory')
wfFrMapCircuitDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitDiscards.setStatus('mandatory')
wfFrMapCircuitReceivedDEs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitReceivedDEs.setStatus('mandatory')
wfFrMapCircuitSentDEs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitSentDEs.setStatus('mandatory')
wfFrMapCircuitLogicalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitLogicalIfIndex.setStatus('mandatory')
wfFrMapCircuitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitRowStatus.setStatus('mandatory')
wfFrMapCircuitLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitLineNumber.setStatus('mandatory')
wfFrMapCircuitLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 17, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapCircuitLLIndex.setStatus('mandatory')
wfFrMapErrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18), )
if mibBuilder.loadTexts: wfFrMapErrTable.setStatus('mandatory')
wfFrMapErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18, 1), ).setIndexNames((0, "Wellfleet-FR2-MIB", "wfFrMapErrIfIndex"))
if mibBuilder.loadTexts: wfFrMapErrEntry.setStatus('mandatory')
wfFrMapErrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapErrIfIndex.setStatus('mandatory')
wfFrMapErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unknownError", 1), ("receiveShort", 2), ("receiveLong", 3), ("illegalAddress", 4), ("unknownAddress", 5), ("dlcmiProtoErr", 6), ("dlcmiUnknownIE", 7), ("dlcmiSequenceErr", 8), ("dlcmiUnknownRpt", 9), ("noErrorSinceReset", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapErrType.setStatus('mandatory')
wfFrMapErrData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapErrData.setStatus('mandatory')
wfFrMapErrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapErrTime.setStatus('mandatory')
wfFrMapErrFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapErrFaults.setStatus('mandatory')
wfFrMapErrFaultTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapErrFaultTime.setStatus('mandatory')
wfFrMapErrLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapErrLineNumber.setStatus('mandatory')
wfFrMapErrLLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 9, 18, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrMapErrLLIndex.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-FR2-MIB", wfFrCircuitShapedHiClippedPkts=wfFrCircuitShapedHiClippedPkts, wfFrServiceRecordNumberActiveVCs=wfFrServiceRecordNumberActiveVCs, wfFrSigN322=wfFrSigN322, wfFrSVCActiveCallDirection=wfFrSVCActiveCallDirection, wfFrMlAggVCStatusMode=wfFrMlAggVCStatusMode, wfFrDlcmiMulticast=wfFrDlcmiMulticast, wfFrCircuitShapedLoClippedPkts=wfFrCircuitShapedLoClippedPkts, wfFrSVCOptionsCongestionTmr=wfFrSVCOptionsCongestionTmr, wfFrMlStatsPQPktsNotQueued=wfFrMlStatsPQPktsNotQueued, wfFrDlcmiSeqCount=wfFrDlcmiSeqCount, wfFrMapCircuitCreationTime=wfFrMapCircuitCreationTime, wfLapfStationType=wfLapfStationType, wfFrCircuitShapedNormalClippedPkts=wfFrCircuitShapedNormalClippedPkts, wfLapfT200Timeouts=wfLapfT200Timeouts, wfFrPtMappingEntry=wfFrPtMappingEntry, wfFrPtIntfRxFrames=wfFrPtIntfRxFrames, wfFrServiceRecordifOutOctets=wfFrServiceRecordifOutOctets, wfFrMlStatsReSeqBufferMax=wfFrMlStatsReSeqBufferMax, wfLapfStatus=wfLapfStatus, wfLapfSABMESent=wfLapfSABMESent, wfFrMlStatsPQHighWaterPktsClear=wfFrMlStatsPQHighWaterPktsClear, wfFrFRF4SigMaxSvcs=wfFrFRF4SigMaxSvcs, wfFrFRF4SigOctetsReceived=wfFrFRF4SigOctetsReceived, wfLapfDISCSent=wfLapfDISCSent, wfFrDlcmiMaxSupportedVCs=wfFrDlcmiMaxSupportedVCs, wfFrDlcmiCircuit=wfFrDlcmiCircuit, wfFrFRF4SigSetupTx=wfFrFRF4SigSetupTx, wfFrMlEntry=wfFrMlEntry, wfFrMlCircuitMaxBuffers=wfFrMlCircuitMaxBuffers, wfFrCircuitLastTimeChange=wfFrCircuitLastTimeChange, wfFrServiceRecordSVCInactMode=wfFrServiceRecordSVCInactMode, wfFrMapDlcmiEntry=wfFrMapDlcmiEntry, wfFrSVCOptionsRemSubAdr=wfFrSVCOptionsRemSubAdr, wfFrMapCircuitCommittedBurst=wfFrMapCircuitCommittedBurst, wfLapfUARcvd=wfLapfUARcvd, wfFrFRF4SigReleaseCompleteRx=wfFrFRF4SigReleaseCompleteRx, wfFrCircuitCreationTime=wfFrCircuitCreationTime, wfFrMapErrData=wfFrMapErrData, wfFrFRF4SigStatusEnquiryRx=wfFrFRF4SigStatusEnquiryRx, wfLapfUIRcvd=wfLapfUIRcvd, wfFrSVCOptionsX213KeepLQAPriority=wfFrSVCOptionsX213KeepLQAPriority, wfFrSVCOptionsName=wfFrSVCOptionsName, wfFrServiceRecordSVCInactTimer=wfFrServiceRecordSVCInactTimer, wfFrDlcmiLastReceived=wfFrDlcmiLastReceived, wfFrCircuitCurHiQueueLimit=wfFrCircuitCurHiQueueLimit, wfFrServiceRecordState=wfFrServiceRecordState, wfFrMapCircuitState=wfFrMapCircuitState, wfFrSigNumSvcFailed=wfFrSigNumSvcFailed, wfFrCircuitShapedNormalQHighWaterPkts=wfFrCircuitShapedNormalQHighWaterPkts, wfLapfDMRcvd=wfLapfDMRcvd, wfFrCircuitState=wfFrCircuitState, wfFrMapCircuitReceivedFECNs=wfFrMapCircuitReceivedFECNs, wfFrDlcmiPolls=wfFrDlcmiPolls, wfFrServiceRecordSVCLocTypeNum=wfFrServiceRecordSVCLocTypeNum, wfFrDlcmiStatus=wfFrDlcmiStatus, wfFrMapCircuitLogicalIfIndex=wfFrMapCircuitLogicalIfIndex, wfFrMlVCStatsBundleSpd=wfFrMlVCStatsBundleSpd, wfFrSigEntry=wfFrSigEntry, wfFrMlVCStatsReassmBufferMax=wfFrMlVCStatsReassmBufferMax, wfFrDlcmiErrorThreshold=wfFrDlcmiErrorThreshold, wfFrMapErrType=wfFrMapErrType, wfFrSVCOptionsLLCoreMinOutThroughput=wfFrSVCOptionsLLCoreMinOutThroughput, wfFrCircuitShapedLoXmits=wfFrCircuitShapedLoXmits, wfFrMapDlcmiLLIndex=wfFrMapDlcmiLLIndex, wfFrFRF4SigReleaseCompleteTx=wfFrFRF4SigReleaseCompleteTx, wfFrCircuitShapingState=wfFrCircuitShapingState, wfFrSigT310=wfFrSigT310, wfFrSVCActiveCallDLCI=wfFrSVCActiveCallDLCI, wfFrSVCOptionsInstanceIndex=wfFrSVCOptionsInstanceIndex, wfFrDlcmiInterfaceType=wfFrDlcmiInterfaceType, wfLapfSABMERcvd=wfLapfSABMERcvd, wfFrMlStatsPQNormalXmits=wfFrMlStatsPQNormalXmits, wfFrMapCircuitTable=wfFrMapCircuitTable, wfFrMapErrFaultTime=wfFrMapErrFaultTime, wfFrSigDisable=wfFrSigDisable, wfFrFRF4SigSetupRx=wfFrFRF4SigSetupRx, wfFrCircuitCongestionTmr=wfFrCircuitCongestionTmr, wfFrCircuitLineNumber=wfFrCircuitLineNumber, wfFrFRF4SigConnectTx=wfFrFRF4SigConnectTx, wfFrSVCOptionsLLIndex=wfFrSVCOptionsLLIndex, wfFrMlVCStatsRxPkts=wfFrMlVCStatsRxPkts, wfFrDlcmiBackupFilterCct=wfFrDlcmiBackupFilterCct, wfFrMapCircuitLLIndex=wfFrMapCircuitLLIndex, wfFrDlcmiCongestionDisable=wfFrDlcmiCongestionDisable, wfFrCircuitDiscards=wfFrCircuitDiscards, wfFrServiceRecordPrimaryMainCct=wfFrServiceRecordPrimaryMainCct, wfFrIfDlcmiEntry=wfFrIfDlcmiEntry, wfFrDlcmiDelete=wfFrDlcmiDelete, wfFrMlStatsTxPkts=wfFrMlStatsTxPkts, wfFrMapErrIfIndex=wfFrMapErrIfIndex, wfFrServiceRecordifLastChange=wfFrServiceRecordifLastChange, wfFrMlVCStatsLinkIdleEvents=wfFrMlVCStatsLinkIdleEvents, wfFrMlVCStatsNumPktsFragmented=wfFrMlVCStatsNumPktsFragmented, wfFrMlStatsPQNormalClippedPkts=wfFrMlStatsPQNormalClippedPkts, wfFrSVCOptionsX213GainLQAPriority=wfFrSVCOptionsX213GainLQAPriority, wfFrSVCActiveCallLLCoreInBc=wfFrSVCActiveCallLLCoreInBc, wfFrDlcmiFullEnquiryInterval=wfFrDlcmiFullEnquiryInterval, wfLapfDelete=wfLapfDelete, wfLapfIFramesSent=wfLapfIFramesSent, wfLapfUASent=wfLapfUASent, wfFrCircuitSentFrames=wfFrCircuitSentFrames, wfFrFRF4SigDelete=wfFrFRF4SigDelete, wfFrMapErrFaults=wfFrMapErrFaults, wfFrServiceRecordLLIndex=wfFrServiceRecordLLIndex, wfLapfN200Exceeded=wfLapfN200Exceeded, wfFrFRF4SigLLIndex=wfFrFRF4SigLLIndex, wfFrPtIntfEntry=wfFrPtIntfEntry, wfFrMapDlcmiMulticast=wfFrMapDlcmiMulticast, wfFrMapCircuitReceivedBECNs=wfFrMapCircuitReceivedBECNs, wfFrServiceRecordNumberDynamicVCs=wfFrServiceRecordNumberDynamicVCs, wfFrCircuitPrimaryHoldTmr=wfFrCircuitPrimaryHoldTmr, wfFrPtMappingDisable=wfFrPtMappingDisable, wfFrCircuitExcessBurst=wfFrCircuitExcessBurst, wfFrMlVCStatsRxOctets=wfFrMlVCStatsRxOctets, wfFrServiceRecordifInCtrlPkts=wfFrServiceRecordifInCtrlPkts, wfFrMapCircuitEntry=wfFrMapCircuitEntry, wfFrSVCOptionsLineNumber=wfFrSVCOptionsLineNumber, wfFrSVCActiveCallX213DataLQAPriority=wfFrSVCActiveCallX213DataLQAPriority, wfLapfDISCRcvd=wfLapfDISCRcvd, wfFrMapDlcmiMonitoredEvents=wfFrMapDlcmiMonitoredEvents, wfFrServiceRecordPreMultiCircuit=wfFrServiceRecordPreMultiCircuit, wfFrMlStatsPQLoQHighWaterPkts=wfFrMlStatsPQLoQHighWaterPkts, wfFrSVCOptionsTrafficShapingDisable=wfFrSVCOptionsTrafficShapingDisable, wfFrFRF4SigDisconnectTx=wfFrFRF4SigDisconnectTx, wfFrMlStatsPQLoTotalOctets=wfFrMlStatsPQLoTotalOctets, wfFrSVCOptionsTable=wfFrSVCOptionsTable, wfFrDlcmiAnnexSwEnq=wfFrDlcmiAnnexSwEnq, wfFrMlVCCircuitNumber=wfFrMlVCCircuitNumber, wfFrMapDlcmiPollingInterval=wfFrMapDlcmiPollingInterval, wfFrFRF4SigOctetsSent=wfFrFRF4SigOctetsSent, wfLapfIFramesRcvd=wfLapfIFramesRcvd, wfFrSVCOptionsRemPlan=wfFrSVCOptionsRemPlan, wfFrMlStatsPQLargePkts=wfFrMlStatsPQLargePkts, wfFrFRF4SigFramesReceived=wfFrFRF4SigFramesReceived, wfFrDlcmiDisable=wfFrDlcmiDisable, wfLapfDisable=wfLapfDisable, wfFrMapCircuitIfIndex=wfFrMapCircuitIfIndex, wfLapfXIDRcvd=wfLapfXIDRcvd, wfFrDlcmiName=wfFrDlcmiName, wfFrMlVCStatsReasmFails=wfFrMlVCStatsReasmFails, wfFrPtIntfDisable=wfFrPtIntfDisable, wfFrCctErrorEntry=wfFrCctErrorEntry, wfFrIfDlcmiTable=wfFrIfDlcmiTable, wfFrSigSvcDeletePolicy=wfFrSigSvcDeletePolicy, wfFrFRF4SigFramesDiscarded=wfFrFRF4SigFramesDiscarded, wfFrDlcmiMonitoredEvents=wfFrDlcmiMonitoredEvents, wfFrDlcmiShapingTmr=wfFrDlcmiShapingTmr, wfFrFRF4SigCallProcTx=wfFrFRF4SigCallProcTx, wfFrMapErrLLIndex=wfFrMapErrLLIndex, wfFrCircuitBwThreshold=wfFrCircuitBwThreshold, wfFrSVCOptionsCongestionDisable=wfFrSVCOptionsCongestionDisable, wfLapfXIDSent=wfLapfXIDSent, wfFrCircuitInactivityMode=wfFrCircuitInactivityMode, wfFrMlStatsRxPkts=wfFrMlStatsRxPkts, wfFrSigCircuit=wfFrSigCircuit, wfFrSVCActiveCallEntry=wfFrSVCActiveCallEntry, wfFrMlCompressionEnable=wfFrMlCompressionEnable, wfFrMlVCStatsExceededBufferMax=wfFrMlVCStatsExceededBufferMax, wfFrMlVCStatsDebug=wfFrMlVCStatsDebug, wfFrFRF4SigDisable=wfFrFRF4SigDisable, wfLapfREJsRcvd=wfLapfREJsRcvd, wfFrVCircuitEntry=wfFrVCircuitEntry, wfFrServiceRecordifOutDiscards=wfFrServiceRecordifOutDiscards, wfFrDlcmiShapingHiQueueLimit=wfFrDlcmiShapingHiQueueLimit, wfLapfLineNumber=wfLapfLineNumber, wfFrMapCircuitLastTimeChange=wfFrMapCircuitLastTimeChange, wfFrMlFragTriggerSize=wfFrMlFragTriggerSize, wfFrMlStatsPQHiClippedPkts=wfFrMlStatsPQHiClippedPkts, wfFrSVCOptionsX213GainPriority=wfFrSVCOptionsX213GainPriority, wfFrSigNumMaxSVCs=wfFrSigNumMaxSVCs, wfFrFRF4SigStatusRx=wfFrFRF4SigStatusRx, wfFrPtMappingCctB=wfFrPtMappingCctB, wfFrSVCActiveCallLLCoreMinInThroughput=wfFrSVCActiveCallLLCoreMinInThroughput, wfFrMapCircuitSentFrames=wfFrMapCircuitSentFrames, wfFrSVCOptionsLLCoreInBc=wfFrSVCOptionsLLCoreInBc, wfFrMlStatsAvgTxListLen=wfFrMlStatsAvgTxListLen, wfFrCircuitStateSet=wfFrCircuitStateSet, wfFrDlcmiCongestionMethod=wfFrDlcmiCongestionMethod, wfFrCircuitStartupDelay=wfFrCircuitStartupDelay, wfFrSVCActiveCallLLCoreOutThroughput=wfFrSVCActiveCallLLCoreOutThroughput, wfFrSVCOptionsRemTypeNum=wfFrSVCOptionsRemTypeNum, wfFrDlcmiShapingNormalQueueLimit=wfFrDlcmiShapingNormalQueueLimit, wfFrFRF4SigT322=wfFrFRF4SigT322, wfFrCctErrorDiscards=wfFrCctErrorDiscards, wfFrErrDrops=wfFrErrDrops, wfLapfK=wfLapfK, wfFrMlStatsPQHiQHighWaterPkts=wfFrMlStatsPQHiQHighWaterPkts, wfFrCircuitReceivedFECNs=wfFrCircuitReceivedFECNs, wfFrPtIntfTxFrames=wfFrPtIntfTxFrames, wfFrServiceRecordNumberSVCs=wfFrServiceRecordNumberSVCs, wfFrFRF4SigT310=wfFrFRF4SigT310, wfFrCircuitShapedPktsNotQueued=wfFrCircuitShapedPktsNotQueued, wfFrMlStatsCalcPercent=wfFrMlStatsCalcPercent, wfFrSVCOptionsLLCoreOutBe=wfFrSVCOptionsLLCoreOutBe, wfFrMapCircuitSentOctets=wfFrMapCircuitSentOctets, wfFrServiceRecordifOutCtrlPkts=wfFrServiceRecordifOutCtrlPkts, wfFrErrData=wfFrErrData, wfFrMlVCDlci=wfFrMlVCDlci, wfFrServiceRecordSVCDisable=wfFrServiceRecordSVCDisable, wfFrMapDlcmiIfIndex=wfFrMapDlcmiIfIndex, wfFrMlVCStatsTxPkts=wfFrMlVCStatsTxPkts, wfFrCircuitShapedNormalXmits=wfFrCircuitShapedNormalXmits, wfFrCircuitMulticast=wfFrCircuitMulticast, wfFrMlFragStrict=wfFrMlFragStrict, wfFrMapDlcmiTable=wfFrMapDlcmiTable, wfFrPtIntfState=wfFrPtIntfState, wfFrDlcmiLineNumber=wfFrDlcmiLineNumber, wfFrMlCircuitNumber=wfFrMlCircuitNumber, wfFrCircuitSubCct=wfFrCircuitSubCct, wfFrCircuitShapedLoQueueLimit=wfFrCircuitShapedLoQueueLimit, wfFrCircuitReceivedDEs=wfFrCircuitReceivedDEs, wfFrCircuitShapedNormalQueueLimit=wfFrCircuitShapedNormalQueueLimit, wfFrSVCOptionsLLCoreInThroughput=wfFrSVCOptionsLLCoreInThroughput, wfFrCircuitShapedNormalTotalOctets=wfFrCircuitShapedNormalTotalOctets, wfFrCircuitShapedLargePkts=wfFrCircuitShapedLargePkts, wfFrSVCOptionsDelete=wfFrSVCOptionsDelete, wfFrMlStatsPQIntrQHighWaterPkts=wfFrMlStatsPQIntrQHighWaterPkts, wfLapfN201Error=wfLapfN201Error, wfFrMlStatsPQLoXmits=wfFrMlStatsPQLoXmits, wfFrDlcmiEnableSinglePVCUpdate=wfFrDlcmiEnableSinglePVCUpdate, wfLapfRxWin=wfLapfRxWin, wfFrCctErrorDrops=wfFrCctErrorDrops, wfFrServiceRecordName=wfFrServiceRecordName, wfFrPtMappingTable=wfFrPtMappingTable, wfFrFRF4SigConnectRx=wfFrFRF4SigConnectRx, wfFrFRF4SigN322=wfFrFRF4SigN322, wfFrServiceRecordSVCLocPlan=wfFrServiceRecordSVCLocPlan, wfFrSVCActiveCallX213GainLQAPriority=wfFrSVCActiveCallX213GainLQAPriority, wfFrSVCActiveCallLLIndex=wfFrSVCActiveCallLLIndex, wfFrDlcmiCongestionTmr=wfFrDlcmiCongestionTmr, wfFrMapCircuitRowStatus=wfFrMapCircuitRowStatus, wfFrSigNumSvcRej=wfFrSigNumSvcRej, wfFrServiceRecordCircuitNumber=wfFrServiceRecordCircuitNumber, wfFrPtIntfDlci=wfFrPtIntfDlci, wfFrDlcmiXoffDisable=wfFrDlcmiXoffDisable, wfFrLapfEntry=wfFrLapfEntry, wfFrMlStatsPQNormalTotalOctets=wfFrMlStatsPQNormalTotalOctets, wfFrFRF4SigT303=wfFrFRF4SigT303, wfFrSVCOptionsWcpEnable=wfFrSVCOptionsWcpEnable, wfFrServiceRecordSVCInScrnUsage=wfFrServiceRecordSVCInScrnUsage, wfLapfREJsSent=wfLapfREJsSent, wfFrErrTime=wfFrErrTime, wfFrSVCActiveCallCallingSubAdr=wfFrSVCActiveCallCallingSubAdr, wfFrMlStatsRxOctets=wfFrMlStatsRxOctets, wfLapfDMSent=wfLapfDMSent, wfFrCircuitNumber=wfFrCircuitNumber, wfFrFRF4SigStatusEnquiryTx=wfFrFRF4SigStatusEnquiryTx, wfFrServiceRecordPrimaryLineNumber=wfFrServiceRecordPrimaryLineNumber, wfFrMlStatsLinkIdleEvents=wfFrMlStatsLinkIdleEvents, wfFrVCircuitTable=wfFrVCircuitTable, wfFrMapCircuitReceivedFrames=wfFrMapCircuitReceivedFrames, wfFrServiceRecordDefaultFlag=wfFrServiceRecordDefaultFlag, wfFrCircuitDlci=wfFrCircuitDlci, wfLapfFRMRSent=wfLapfFRMRSent)
mibBuilder.exportSymbols("Wellfleet-FR2-MIB", wfFrSVCOptionsInactMode=wfFrSVCOptionsInactMode, wfFrSVCOptionsBroadcastDisable=wfFrSVCOptionsBroadcastDisable, wfLapfRNRsSent=wfLapfRNRsSent, wfFrMlTable=wfFrMlTable, wfFrSVCOptionsX213DataLQAPriority=wfFrSVCOptionsX213DataLQAPriority, wfFrDlcmiAnnexSwEnqTmr=wfFrDlcmiAnnexSwEnqTmr, wfFrErrDiscards=wfFrErrDiscards, wfFrSVCActiveCallDelete=wfFrSVCActiveCallDelete, wfFrPtIntfDrops=wfFrPtIntfDrops, wfFrDlcmiExtraStatusInfoEnable=wfFrDlcmiExtraStatusInfoEnable, wfFrCircuitSentOctets=wfFrCircuitSentOctets, wfFrPtMappingDelete=wfFrPtMappingDelete, wfFrSVCOptionsLLCoreOutThroughput=wfFrSVCOptionsLLCoreOutThroughput, wfFrSigMaxSvcs=wfFrSigMaxSvcs, wfFrCircuitSentDEs=wfFrCircuitSentDEs, wfFrCircuitDrops=wfFrCircuitDrops, wfFrMlVCEntry=wfFrMlVCEntry, wfFrMapCircuitReceivedOctets=wfFrMapCircuitReceivedOctets, wfFrSigSvcIdleTimer=wfFrSigSvcIdleTimer, wfFrCircuitShapedDroppedPkts=wfFrCircuitShapedDroppedPkts, wfFrDlcmiVCsConfigured=wfFrDlcmiVCsConfigured, wfFrMapDlcmiMaxSupportedVCs=wfFrMapDlcmiMaxSupportedVCs, wfFrServiceRecordPrimaryLLIndex=wfFrServiceRecordPrimaryLLIndex, wfFrCircuitReceivedFrames=wfFrCircuitReceivedFrames, wfFrMapDlcmiAddressLen=wfFrMapDlcmiAddressLen, wfFrMapDlcmiErrorThreshold=wfFrMapDlcmiErrorThreshold, wfFrServiceRecordDelete=wfFrServiceRecordDelete, wfFrPtIntfCct=wfFrPtIntfCct, wfFrMlVCAggNumberVCs=wfFrMlVCAggNumberVCs, wfFrSigT305=wfFrSigT305, wfFrServiceRecordBackupFilterCct=wfFrServiceRecordBackupFilterCct, wfFrSVCOptionsCircuitNumber=wfFrSVCOptionsCircuitNumber, wfFrServiceRecordSVCLocSubAdr=wfFrServiceRecordSVCLocSubAdr, wfFrSVCActiveCallCalledSubAdr=wfFrSVCActiveCallCalledSubAdr, wfFrSigSvcReplacePolicy=wfFrSigSvcReplacePolicy, wfFrMapCircuitDiscards=wfFrMapCircuitDiscards, wfFrCircuitShapedHighWaterPktsClear=wfFrCircuitShapedHighWaterPktsClear, wfFrCircuitShapedHiQueueLimit=wfFrCircuitShapedHiQueueLimit, wfFrSVCActiveCallX213KeepPriority=wfFrSVCActiveCallX213KeepPriority, wfFrSVCOptionsLLCoreMinInThroughput=wfFrSVCOptionsLLCoreMinInThroughput, wfLapfRNRsRcvd=wfLapfRNRsRcvd, wfFrDlcmiAddressLen=wfFrDlcmiAddressLen, wfFrMlStatsNumPktsFragmented=wfFrMlStatsNumPktsFragmented, wfFrSVCOptionsInactTimer=wfFrSVCOptionsInactTimer, wfFrMlVCTable=wfFrMlVCTable, wfLapfRRsRcvd=wfLapfRRsRcvd, wfFrFRF4SigLineNumber=wfFrFRF4SigLineNumber, wfFrSVCActiveCallX213DataPriority=wfFrSVCActiveCallX213DataPriority, wfFrDlcmiPassiveSeqCount=wfFrDlcmiPassiveSeqCount, wfFrDlcmiPollingInterval=wfFrDlcmiPollingInterval, wfFrMlVCStatsSeqNumberArrivedLate=wfFrMlVCStatsSeqNumberArrivedLate, wfFrSVCActiveCallCallingNum=wfFrSVCActiveCallCallingNum, wfFrMlVCStatsCalcPercent=wfFrMlVCStatsCalcPercent, wfFrServiceRecordSVCCallBlock=wfFrServiceRecordSVCCallBlock, wfFrSVCOptionsRemNum=wfFrSVCOptionsRemNum, wfFrMapDlcmiState=wfFrMapDlcmiState, wfFrMapDlcmiAddress=wfFrMapDlcmiAddress, wfFrPtMappingState=wfFrPtMappingState, wfFrMlStatsBundleSpd=wfFrMlStatsBundleSpd, wfLapfRRsSent=wfLapfRRsSent, wfFrDlcmiDebugLevel=wfFrDlcmiDebugLevel, wfLapfN200=wfLapfN200, wfFrMlMode=wfFrMlMode, wfFrCircuitDelete=wfFrCircuitDelete, wfFrCctErrorTable=wfFrCctErrorTable, wfFrMapErrTable=wfFrMapErrTable, wfFrCircuitShapedHiXmits=wfFrCircuitShapedHiXmits, wfFrErrType=wfFrErrType, wfFrMlVCStatsSeqNumberLost=wfFrMlVCStatsSeqNumberLost, wfFrSVCOptionsCongestionCtr=wfFrSVCOptionsCongestionCtr, wfFrSVCActiveCallX213KeepLQAPriority=wfFrSVCActiveCallX213KeepLQAPriority, wfFrErrFaults=wfFrErrFaults, wfFrMlVCDelete=wfFrMlVCDelete, wfFrSVCOptionsX213KeepPriority=wfFrSVCOptionsX213KeepPriority, wfFrMapErrLineNumber=wfFrMapErrLineNumber, wfFrMlStatsReassmBufferMax=wfFrMlStatsReassmBufferMax, wfFrSigTable=wfFrSigTable, wfLapfFRMRRcvd=wfLapfFRMRRcvd, wfFrPtMappingDlciA=wfFrPtMappingDlciA, wfFrPtIntfDelete=wfFrPtIntfDelete, wfFrCircuitCommittedBurst=wfFrCircuitCommittedBurst, wfFrFRF4SigReleaseTx=wfFrFRF4SigReleaseTx, wfFrMlStatsLineCnt=wfFrMlStatsLineCnt, wfFrMlFragPermEnable=wfFrMlFragPermEnable, wfLapfT200=wfLapfT200, wfFrServiceRecordLineNumber=wfFrServiceRecordLineNumber, wfFrErrFaultTime=wfFrErrFaultTime, wfLapfT203Timeouts=wfLapfT203Timeouts, wfLapfT203=wfLapfT203, wfFrSVCOptionsLLCoreOutBc=wfFrSVCOptionsLLCoreOutBc, wfFrMapDlcmiStatus=wfFrMapDlcmiStatus, wfFrCctErrorCct=wfFrCctErrorCct, wfFrServiceRecordifInDiscards=wfFrServiceRecordifInDiscards, wfFrCircuitCongestionMethod=wfFrCircuitCongestionMethod, wfFrSVCActiveCallLLCoreInThroughput=wfFrSVCActiveCallLLCoreInThroughput, wfFrSigT308=wfFrSigT308, wfFrCircuitWcpEnable=wfFrCircuitWcpEnable, wfFrServiceRecordEntry=wfFrServiceRecordEntry, wfFrSVCActiveCallLLCoreInBe=wfFrSVCActiveCallLLCoreInBe, wfFrMapDlcmiLineNumber=wfFrMapDlcmiLineNumber, wfFrCircuitShapedHiTotalOctets=wfFrCircuitShapedHiTotalOctets, wfFrMlVCStatsReSeqBufferCnt=wfFrMlVCStatsReSeqBufferCnt, wfFrMlStatsExceededBufferMax=wfFrMlStatsExceededBufferMax, wfFrMlStatsPQNormalQHighWaterPkts=wfFrMlStatsPQNormalQHighWaterPkts, wfFrCircuitReceivedOctets=wfFrCircuitReceivedOctets, wfFrCircuitShapedLoTotalOctets=wfFrCircuitShapedLoTotalOctets, wfFrServiceRecordBackupLineNumber=wfFrServiceRecordBackupLineNumber, wfFrMlStatsPQHiTotalOctets=wfFrMlStatsPQHiTotalOctets, wfFrCircuitReceivedBECNs=wfFrCircuitReceivedBECNs, wfFrSigT303=wfFrSigT303, wfFrDlcmiPassiveReceived=wfFrDlcmiPassiveReceived, wfFrSVCActiveCallTable=wfFrSVCActiveCallTable, wfFrMlVCStatsAvgTxListLen=wfFrMlVCStatsAvgTxListLen, wfFrCircuitCongestionDisable=wfFrCircuitCongestionDisable, wfFrPtIntfDiscards=wfFrPtIntfDiscards, wfLapfLLIndex=wfLapfLLIndex, wfFrCircuitThroughput=wfFrCircuitThroughput, wfFrSigT322=wfFrSigT322, wfFrDlcmiShapingLoQueueLimit=wfFrDlcmiShapingLoQueueLimit, wfFrSigStatus=wfFrSigStatus, wfFrSVCOptionsDisable=wfFrSVCOptionsDisable, wfFrMlVCAggState=wfFrMlVCAggState, wfFrDlcmiTraceLevel=wfFrDlcmiTraceLevel, wfLapfN201=wfLapfN201, wfFrSVCOptionsLLCoreInBe=wfFrSVCOptionsLLCoreInBe, wfFrSigLLIndex=wfFrSigLLIndex, wfFrDlcmiDialFailureDisable=wfFrDlcmiDialFailureDisable, wfFrServiceRecordSVCInScrnDisable=wfFrServiceRecordSVCInScrnDisable, wfLapfUISent=wfLapfUISent, wfFrMapCircuitLineNumber=wfFrMapCircuitLineNumber, wfFrMlStatsReassmBufferCnt=wfFrMlStatsReassmBufferCnt, wfFrServiceRecordNumberVCs=wfFrServiceRecordNumberVCs, wfFrCircuitCurLoQueueLimit=wfFrCircuitCurLoQueueLimit, wfFrSigNumConnRej=wfFrSigNumConnRej, wfFrServiceRecordSVCLocNum=wfFrServiceRecordSVCLocNum, wfFrFRF4SigEntry=wfFrFRF4SigEntry, wfFrMlHomeSlot=wfFrMlHomeSlot, wfFrServiceRecordBackupMainCct=wfFrServiceRecordBackupMainCct, wfFrFRF4SigFramesSent=wfFrFRF4SigFramesSent, wfFrSigConformance=wfFrSigConformance, wfFrSVCOptionsX213DataPriority=wfFrSVCOptionsX213DataPriority, wfFrMapCircuitType=wfFrMapCircuitType, wfFrMapErrTime=wfFrMapErrTime, wfFrSVCActiveCallX213GainPriority=wfFrSVCActiveCallX213GainPriority, wfFrFRF4SigCallProcRx=wfFrFRF4SigCallProcRx, wfFrSVCActiveCallCallingTypeNum=wfFrSVCActiveCallCallingTypeNum, wfFrLapfTable=wfFrLapfTable, wfFrSVCActiveCallCircuitNumber=wfFrSVCActiveCallCircuitNumber, wfFrMlStatsReSeqBufferCnt=wfFrMlStatsReSeqBufferCnt, wfFrFRF4SigT305=wfFrFRF4SigT305, wfFrPtIntfTable=wfFrPtIntfTable, wfFrDlcmiMissingPolls=wfFrDlcmiMissingPolls, wfFrDlcmiLLIndex=wfFrDlcmiLLIndex, wfFrSVCActiveCallCalledNum=wfFrSVCActiveCallCalledNum, wfFrDlcmiManagementType=wfFrDlcmiManagementType, wfFrMlVCStatsLineCnt=wfFrMlVCStatsLineCnt, wfFrSVCActiveCallLLCoreOutBe=wfFrSVCActiveCallLLCoreOutBe, wfFrFRF4SigT308=wfFrFRF4SigT308, wfFrCircuitCurNormalQueueLimit=wfFrCircuitCurNormalQueueLimit, wfFrMapErrEntry=wfFrMapErrEntry, wfFrSVCActiveCallCalledPlan=wfFrSVCActiveCallCalledPlan, wfFrCircuitCongestionCtr=wfFrCircuitCongestionCtr, wfFrServiceRecordBackupLLIndex=wfFrServiceRecordBackupLLIndex, wfFrServiceRecordTable=wfFrServiceRecordTable, wfFrMlVCAggNumberVCsActive=wfFrMlVCAggNumberVCsActive, wfFrSVCActiveCallLLCoreMinOutThroughput=wfFrSVCActiveCallLLCoreMinOutThroughput, wfFrMlVCStatsTxOctets=wfFrMlVCStatsTxOctets, wfFrCircuitMode=wfFrCircuitMode, wfFrMlStatsPQDroppedPkts=wfFrMlStatsPQDroppedPkts, wfFrCircuitType=wfFrCircuitType, wfFrSigLineNumber=wfFrSigLineNumber, wfFrMapCircuitMulticast=wfFrMapCircuitMulticast, wfFrSVCActiveCallCalledTypeNum=wfFrSVCActiveCallCalledTypeNum, wfFrSigDelete=wfFrSigDelete, wfFrMlStatsDebug=wfFrMlStatsDebug, wfFrMapDlcmiRowStatus=wfFrMapDlcmiRowStatus, wfFrDlcmiAddress=wfFrDlcmiAddress, wfFrCircuitLLIndex=wfFrCircuitLLIndex, wfFrSVCActiveCallLineNumber=wfFrSVCActiveCallLineNumber, wfFrMapCircuitSentDEs=wfFrMapCircuitSentDEs, wfFrMlStatsPQLoClippedPkts=wfFrMlStatsPQLoClippedPkts, wfFrMapCircuitReceivedDEs=wfFrMapCircuitReceivedDEs, wfFrMlStatsSeqNumberArrivedLate=wfFrMlStatsSeqNumberArrivedLate, wfFrSVCActiveCallCallingPlan=wfFrSVCActiveCallCallingPlan, wfFrMlStatsSeqNumberLost=wfFrMlStatsSeqNumberLost, wfFrFRF4SigFramesDropped=wfFrFRF4SigFramesDropped, wfFrCircuitShapedLoQHighWaterPkts=wfFrCircuitShapedLoQHighWaterPkts, wfFrSVCOptionsEntry=wfFrSVCOptionsEntry, wfFrFRF4SigReleaseRx=wfFrFRF4SigReleaseRx, wfFrFRF4SigStatusTx=wfFrFRF4SigStatusTx, wfFrMlStatsTxOctets=wfFrMlStatsTxOctets, wfLapfTxWin=wfLapfTxWin, wfFrServiceRecordNumberStaticVCs=wfFrServiceRecordNumberStaticVCs, wfFrDlcmiCongestionCtr=wfFrDlcmiCongestionCtr, wfFrSVCActiveCallLLCoreOutBc=wfFrSVCActiveCallLLCoreOutBc, wfFrFRF4SigTable=wfFrFRF4SigTable, wfFrMapCircuitExcessBurst=wfFrMapCircuitExcessBurst, wfFrSVCActiveCallConnectTime=wfFrSVCActiveCallConnectTime, wfFrMapCircuitDlci=wfFrMapCircuitDlci, wfFrFRF4SigDisconnectRx=wfFrFRF4SigDisconnectRx, wfFrCircuitShapedHiQHighWaterPkts=wfFrCircuitShapedHiQHighWaterPkts, wfLapfActionInitiate=wfLapfActionInitiate, wfFrMlVCStatsReSeqBufferMax=wfFrMlVCStatsReSeqBufferMax, wfFrCircuitCongestionState=wfFrCircuitCongestionState, wfFrPtMappingCctA=wfFrPtMappingCctA, wfFrMlStatsReasmFails=wfFrMlStatsReasmFails, wfFrPtMappingDlciB=wfFrPtMappingDlciB, wfFrMapCircuitThroughput=wfFrMapCircuitThroughput, wfFrMlDelete=wfFrMlDelete, wfFrMlStatsPQHiXmits=wfFrMlStatsPQHiXmits, wfFrSVCOptionsCongestionMethod=wfFrSVCOptionsCongestionMethod, wfFrServiceRecordifInOctets=wfFrServiceRecordifInOctets, wfFrMlVCStatsReassmBufferCnt=wfFrMlVCStatsReassmBufferCnt, wfFrCircuitInactivityTimer=wfFrCircuitInactivityTimer, wfFrMapDlcmiFullEnquiryInterval=wfFrMapDlcmiFullEnquiryInterval)
