#
# PySNMP MIB module Wellfleet-Series7-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-Series7-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Counter32, Integer32, Opaque, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, enterprises, TimeTicks, Counter64, NotificationType, ModuleIdentity, IpAddress, Gauge32, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "Integer32", "Opaque", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "enterprises", "TimeTicks", "Counter64", "NotificationType", "ModuleIdentity", "IpAddress", "Gauge32", "Bits", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wellfleet = MibIdentifier((1, 3, 6, 1, 4, 1, 18))
wfSwSeries7 = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3))
wfHardwareConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 1))
wfSoftwareConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 2))
wfSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3))
wfServices = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 2))
wfGameGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5))
wfLine = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4))
wfHwFGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 6))
wfDs1Group = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 12))
wfDs3Group = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 13))
wfSipGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 14))
wfSipPlcpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2))
wfFddiGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15))
wfFddiSmtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1))
wfFddiMacGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2))
wfFddiPathGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3))
wfFddiPortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4))
wfApplication = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5))
wfDataLink = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1))
wfBridgeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1))
wfBrLearning = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1))
wfBrSourceRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2))
wfSpanningTree = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2))
wfIfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3))
wfCircuitOptsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4))
wfDecGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 2))
wfInternet = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3))
wfArpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1))
wfIpRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2))
wfIpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1))
wfRipGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2))
wfOspfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3))
wfEgpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 4))
wfBgpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 5))
wfTcpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 3))
wfUdpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 4))
wfSnmpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5))
wfTelnetGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 7))
wfBootpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 8))
wfAppletalkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 4))
wfIpxGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 5))
wfOsiGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 6))
wfVinesGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 8))
wfWanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 9))
wfFrameRelayGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1))
wfPppGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 2))
wfX25Group = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 4))
wfAtmGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 5))
wfXnsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 10))
wfTestGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 11))
wfAppleBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1))
wfAppleBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseDelete.setStatus('mandatory')
wfAppleBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseDisable.setStatus('mandatory')
wfAppleBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleBaseState.setStatus('mandatory')
wfAppleBaseDebugLevel = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseDebugLevel.setStatus('mandatory')
wfAppleBaseDdpQueLen = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(20))).clone(namedValues=NamedValues(("default", 20))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseDdpQueLen.setStatus('mandatory')
wfAppleBaseHomedPort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseHomedPort.setStatus('mandatory')
wfAppleBaseTotalNets = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleBaseTotalNets.setStatus('mandatory')
wfAppleBaseTotalZones = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleBaseTotalZones.setStatus('mandatory')
wfAppleRtmpTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2), )
if mibBuilder.loadTexts: wfAppleRtmpTable.setStatus('mandatory')
wfAppleRtmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfAppleRtmpNetStart"), (0, "Wellfleet-Series7-MIB", "wfAppleRtmpNetEnd"))
if mibBuilder.loadTexts: wfAppleRtmpEntry.setStatus('mandatory')
wfAppleRtmpNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpNetStart.setStatus('mandatory')
wfAppleRtmpNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpNetEnd.setStatus('mandatory')
wfAppleRtmpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpPort.setStatus('mandatory')
wfAppleRtmpHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpHops.setStatus('mandatory')
wfAppleRtmpNextHopNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpNextHopNet.setStatus('mandatory')
wfAppleRtmpNextHopNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpNextHopNode.setStatus('mandatory')
wfAppleRtmpState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("good", 1), ("suspect", 2), ("goingbad", 3), ("bad", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleRtmpState.setStatus('mandatory')
wfApplePortTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3), )
if mibBuilder.loadTexts: wfApplePortTable.setStatus('mandatory')
wfApplePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfApplePortCircuit"))
if mibBuilder.loadTexts: wfApplePortEntry.setStatus('mandatory')
wfApplePortDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortDelete.setStatus('mandatory')
wfApplePortDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortDisable.setStatus('mandatory')
wfApplePortCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCircuit.setStatus('mandatory')
wfApplePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortState.setStatus('mandatory')
wfApplePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortType.setStatus('mandatory')
wfApplePortCksumDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortCksumDisable.setStatus('mandatory')
wfApplePortTrEndStation = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortTrEndStation.setStatus('mandatory')
wfApplePortGniForever = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortGniForever.setStatus('mandatory')
wfApplePortAarpFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpFlush.setStatus('mandatory')
wfApplePortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortMacAddress.setStatus('mandatory')
wfApplePortNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortNodeId.setStatus('mandatory')
wfApplePortNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortNetwork.setStatus('mandatory')
wfApplePortNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortNetStart.setStatus('mandatory')
wfApplePortNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortNetEnd.setStatus('mandatory')
wfApplePortDfltZone = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortDfltZone.setStatus('mandatory')
wfApplePortCurMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurMacAddress.setStatus('mandatory')
wfApplePortCurNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurNodeId.setStatus('mandatory')
wfApplePortCurNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurNetwork.setStatus('mandatory')
wfApplePortCurNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurNetStart.setStatus('mandatory')
wfApplePortCurNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurNetEnd.setStatus('mandatory')
wfApplePortCurDfltZone = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurDfltZone.setStatus('mandatory')
wfApplePortAarpProbeRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpProbeRxs.setStatus('mandatory')
wfApplePortAarpProbeTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpProbeTxs.setStatus('mandatory')
wfApplePortAarpReqRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpReqRxs.setStatus('mandatory')
wfApplePortAarpReqTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpReqTxs.setStatus('mandatory')
wfApplePortAarpRspRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpRspRxs.setStatus('mandatory')
wfApplePortAarpRspTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpRspTxs.setStatus('mandatory')
wfApplePortDdpOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpOutRequests.setStatus('mandatory')
wfApplePortDdpInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpInReceives.setStatus('mandatory')
wfApplePortDdpInLocalDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpInLocalDatagrams.setStatus('mandatory')
wfApplePortDdpNoProtocolHandlers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpNoProtocolHandlers.setStatus('mandatory')
wfApplePortDdpTooShortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpTooShortErrors.setStatus('mandatory')
wfApplePortDdpTooLongErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpTooLongErrors.setStatus('mandatory')
wfApplePortDdpChecksumErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpChecksumErrors.setStatus('mandatory')
wfApplePortDdpForwRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpForwRequests.setStatus('mandatory')
wfApplePortDdpOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpOutNoRoutes.setStatus('mandatory')
wfApplePortDdpBroadcastErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpBroadcastErrors.setStatus('mandatory')
wfApplePortDdpHopCountErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpHopCountErrors.setStatus('mandatory')
wfApplePortRtmpInDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpInDataPkts.setStatus('mandatory')
wfApplePortRtmpOutDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpOutDataPkts.setStatus('mandatory')
wfApplePortRtmpInRequestPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpInRequestPkts.setStatus('mandatory')
wfApplePortRtmpNextIREqualChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpNextIREqualChanges.setStatus('mandatory')
wfApplePortRtmpNextIRLessChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpNextIRLessChanges.setStatus('mandatory')
wfApplePortRtmpRouteDeletes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpRouteDeletes.setStatus('mandatory')
wfApplePortRtmpNetworkMismatchErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpNetworkMismatchErrors.setStatus('mandatory')
wfApplePortRtmpRoutingTableOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpRoutingTableOverflows.setStatus('mandatory')
wfApplePortZipInZipQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInZipQueries.setStatus('mandatory')
wfApplePortZipInZipReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInZipReplies.setStatus('mandatory')
wfApplePortZipOutZipReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutZipReplies.setStatus('mandatory')
wfApplePortZipInZipExtendedReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInZipExtendedReplies.setStatus('mandatory')
wfApplePortZipOutZipExtendedReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutZipExtendedReplies.setStatus('mandatory')
wfApplePortZipInGetZoneLists = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetZoneLists.setStatus('mandatory')
wfApplePortZipOutGetZoneListReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetZoneListReplies.setStatus('mandatory')
wfApplePortZipInGetLocalZones = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetLocalZones.setStatus('mandatory')
wfApplePortZipOutGetLocalZoneReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetLocalZoneReplies.setStatus('mandatory')
wfApplePortZipInGetMyZones = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetMyZones.setStatus('mandatory')
wfApplePortZipOutGetMyZoneReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetMyZoneReplies.setStatus('mandatory')
wfApplePortZipZoneConflictErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipZoneConflictErrors.setStatus('mandatory')
wfApplePortZipInGetNetInfos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetNetInfos.setStatus('mandatory')
wfApplePortZipOutGetNetInfoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetNetInfoReplies.setStatus('mandatory')
wfApplePortZipZoneOutInvalids = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipZoneOutInvalids.setStatus('mandatory')
wfApplePortZipAddressInvalids = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipAddressInvalids.setStatus('mandatory')
wfApplePortZipOutGetNetInfos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetNetInfos.setStatus('mandatory')
wfApplePortZipInGetNetInfoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetNetInfoReplies.setStatus('mandatory')
wfApplePortZipOutZipQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutZipQueries.setStatus('mandatory')
wfApplePortZipInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInErrors.setStatus('mandatory')
wfApplePortNbpInLookUpRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInLookUpRequests.setStatus('mandatory')
wfApplePortNbpInLookUpReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInLookUpReplies.setStatus('mandatory')
wfApplePortNbpInBroadcastRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInBroadcastRequests.setStatus('mandatory')
wfApplePortNbpInForwardRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInForwardRequests.setStatus('mandatory')
wfApplePortNbpOutLookUpRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpOutLookUpRequests.setStatus('mandatory')
wfApplePortNbpOutLookUpReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpOutLookUpReplies.setStatus('mandatory')
wfApplePortNbpOutBroadcastRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpOutBroadcastRequests.setStatus('mandatory')
wfApplePortNbpOutForwardRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpOutForwardRequests.setStatus('mandatory')
wfApplePortNbpRegistrationFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpRegistrationFailures.setStatus('mandatory')
wfApplePortNbpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInErrors.setStatus('mandatory')
wfApplePortEchoRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortEchoRequests.setStatus('mandatory')
wfApplePortEchoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortEchoReplies.setStatus('mandatory')
wfAppleLclZoneTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4), )
if mibBuilder.loadTexts: wfAppleLclZoneTable.setStatus('mandatory')
wfAppleLclZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfAppleLclZonePortCircuit"), (0, "Wellfleet-Series7-MIB", "wfAppleLclZoneIndex"))
if mibBuilder.loadTexts: wfAppleLclZoneEntry.setStatus('mandatory')
wfAppleLclZoneDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleLclZoneDelete.setStatus('mandatory')
wfAppleLclZonePortCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleLclZonePortCircuit.setStatus('mandatory')
wfAppleLclZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleLclZoneIndex.setStatus('mandatory')
wfAppleLclZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleLclZoneName.setStatus('mandatory')
wfAppleAarpTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5), )
if mibBuilder.loadTexts: wfAppleAarpTable.setStatus('mandatory')
wfAppleAarpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfAppleAarpNet"), (0, "Wellfleet-Series7-MIB", "wfAppleAarpNode"), (0, "Wellfleet-Series7-MIB", "wfAppleAarpIfIndex"))
if mibBuilder.loadTexts: wfAppleAarpEntry.setStatus('mandatory')
wfAppleAarpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAarpIfIndex.setStatus('mandatory')
wfAppleAarpNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAarpNet.setStatus('mandatory')
wfAppleAarpNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAarpNode.setStatus('mandatory')
wfAppleAarpPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAarpPhysAddress.setStatus('mandatory')
wfAppleZipTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6), )
if mibBuilder.loadTexts: wfAppleZipTable.setStatus('mandatory')
wfAppleZipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfAppleZipZoneNetStart"), (0, "Wellfleet-Series7-MIB", "wfAppleZipIndex"))
if mibBuilder.loadTexts: wfAppleZipEntry.setStatus('mandatory')
wfAppleZipZoneNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipZoneNetStart.setStatus('mandatory')
wfAppleZipZoneNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipZoneNetEnd.setStatus('mandatory')
wfAppleZipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipIndex.setStatus('mandatory')
wfAppleZipZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipZoneName.setStatus('mandatory')
wfAppleZipZoneState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipZoneState.setStatus('mandatory')
wfBrTp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1))
wfBrTpBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpBaseDelete.setStatus('mandatory')
wfBrTpBaseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpBaseEnable.setStatus('mandatory')
wfBrTpBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("pres", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseState.setStatus('mandatory')
wfBrTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2), )
if mibBuilder.loadTexts: wfBrTpFdbTable.setStatus('mandatory')
wfBrTpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrTpBaseFdbAddress"))
if mibBuilder.loadTexts: wfBrTpFdbEntry.setStatus('mandatory')
wfBrTpBaseFdbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseFdbAddress.setStatus('mandatory')
wfBrTpBaseFdbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseFdbPort.setStatus('mandatory')
wfBrTpBaseFdbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("learned", 3))).clone('learned')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseFdbStatus.setStatus('mandatory')
wfBrTpInterface = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3), )
if mibBuilder.loadTexts: wfBrTpInterface.setStatus('mandatory')
wfBrTpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrTpInterfaceCircuit"))
if mibBuilder.loadTexts: wfBrTpInterfaceEntry.setStatus('mandatory')
wfBrTpInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpInterfaceDelete.setStatus('mandatory')
wfBrTpInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpInterfaceEnable.setStatus('mandatory')
wfBrTpInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("pres", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceState.setStatus('mandatory')
wfBrTpInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceCircuit.setStatus('mandatory')
wfBrTpInterfaceMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceMaxInfo.setStatus('mandatory')
wfBrTpInterfaceInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceInFrames.setStatus('mandatory')
wfBrTpInterfaceOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceOutFrames.setStatus('mandatory')
wfBrTpInterfaceInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceInDiscards.setStatus('mandatory')
wfBrTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4), )
if mibBuilder.loadTexts: wfBrTrafficFilterTable.setStatus('mandatory')
wfBrTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrTrafficFilterCircuit"), (0, "Wellfleet-Series7-MIB", "wfBrTrafficFilterRuleNumber"), (0, "Wellfleet-Series7-MIB", "wfBrTrafficFilterFragment"))
if mibBuilder.loadTexts: wfBrTrafficFilterEntry.setStatus('mandatory')
wfBrTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTrafficFilterCreate.setStatus('mandatory')
wfBrTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTrafficFilterEnable.setStatus('mandatory')
wfBrTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterStatus.setStatus('mandatory')
wfBrTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterCounter.setStatus('mandatory')
wfBrTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTrafficFilterDefinition.setStatus('mandatory')
wfBrTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 6), Integer32())
if mibBuilder.loadTexts: wfBrTrafficFilterReserved.setStatus('mandatory')
wfBrTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterCircuit.setStatus('mandatory')
wfBrTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterRuleNumber.setStatus('mandatory')
wfBrTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterFragment.setStatus('mandatory')
wfCctOptsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1), )
if mibBuilder.loadTexts: wfCctOptsTable.setStatus('mandatory')
wfCctOptsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfCctOptsCct"))
if mibBuilder.loadTexts: wfCctOptsEntry.setStatus('mandatory')
wfCctOptsDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsDelete.setStatus('mandatory')
wfCctOptsPriorityQueueingDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsPriorityQueueingDisable.setStatus('mandatory')
wfCctOptsCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCct.setStatus('mandatory')
wfCctOptsHighPriorityQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(20))).clone(namedValues=NamedValues(("default", 20))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsHighPriorityQueueLimit.setStatus('mandatory')
wfCctOptsNormalPriorityQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(20))).clone(namedValues=NamedValues(("default", 20))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsNormalPriorityQueueLimit.setStatus('mandatory')
wfCctOptsLowPriorityQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(20))).clone(namedValues=NamedValues(("default", 20))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLowPriorityQueueLimit.setStatus('mandatory')
wfCctOptsMaxInterruptQueueLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100, 2500, 5000))).clone(namedValues=NamedValues(("minimum", 100), ("default", 2500), ("maximum", 5000))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsMaxInterruptQueueLatency.setStatus('mandatory')
wfCctOptsMaxHighPriorityQueueLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100, 250, 5000))).clone(namedValues=NamedValues(("minimum", 100), ("default", 250), ("maximum", 5000))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsMaxHighPriorityQueueLatency.setStatus('mandatory')
wfCctOptsHiXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsHiXmits.setStatus('mandatory')
wfCctOptsNormalXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsNormalXmits.setStatus('mandatory')
wfCctOptsLoXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLoXmits.setStatus('mandatory')
wfCctOptsHiClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsHiClippedPkts.setStatus('mandatory')
wfCctOptsNormalClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsNormalClippedPkts.setStatus('mandatory')
wfCctOptsLoClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLoClippedPkts.setStatus('mandatory')
wfCctOptsIntrQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIntrQHighWaterPkts.setStatus('mandatory')
wfCctOptsHiQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsHiQHighWaterPkts.setStatus('mandatory')
wfCctOptsNormalQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsNormalQHighWaterPkts.setStatus('mandatory')
wfCctOptsLoQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLoQHighWaterPkts.setStatus('mandatory')
wfCctOptsHighWaterPktsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsHighWaterPktsClear.setStatus('mandatory')
wfCctOptsDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsDroppedPkts.setStatus('mandatory')
wfCctOptsLargePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLargePkts.setStatus('mandatory')
wfCctOptsRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsRxPkts.setStatus('mandatory')
wfCctOptsBrFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2), )
if mibBuilder.loadTexts: wfCctOptsBrFilterTable.setStatus('mandatory')
wfCctOptsBrFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfCctOptsBrFilterCct"), (0, "Wellfleet-Series7-MIB", "wfCctOptsBrFilterRuleNumber"), (0, "Wellfleet-Series7-MIB", "wfCctOptsBrFilterFragment"))
if mibBuilder.loadTexts: wfCctOptsBrFilterEntry.setStatus('mandatory')
wfCctOptsBrFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrFilterCreate.setStatus('mandatory')
wfCctOptsBrFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrFilterEnable.setStatus('mandatory')
wfCctOptsBrFilterState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterState.setStatus('mandatory')
wfCctOptsBrFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterCounter.setStatus('mandatory')
wfCctOptsBrFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrFilterDefinition.setStatus('mandatory')
wfCctOptsBrFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 6), Integer32())
if mibBuilder.loadTexts: wfCctOptsBrFilterReserved.setStatus('mandatory')
wfCctOptsBrFilterCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterCct.setStatus('mandatory')
wfCctOptsBrFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterRuleNumber.setStatus('mandatory')
wfCctOptsBrFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterFragment.setStatus('mandatory')
wfCctOptsIpFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3), )
if mibBuilder.loadTexts: wfCctOptsIpFilterTable.setStatus('mandatory')
wfCctOptsIpFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfCctOptsIpFilterCct"), (0, "Wellfleet-Series7-MIB", "wfCctOptsIpFilterRuleNumber"), (0, "Wellfleet-Series7-MIB", "wfCctOptsIpFilterFragment"))
if mibBuilder.loadTexts: wfCctOptsIpFilterEntry.setStatus('mandatory')
wfCctOptsIpFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpFilterCreate.setStatus('mandatory')
wfCctOptsIpFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpFilterEnable.setStatus('mandatory')
wfCctOptsIpFilterState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterState.setStatus('mandatory')
wfCctOptsIpFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterCounter.setStatus('mandatory')
wfCctOptsIpFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpFilterDefinition.setStatus('mandatory')
wfCctOptsIpFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 6), Integer32())
if mibBuilder.loadTexts: wfCctOptsIpFilterReserved.setStatus('mandatory')
wfCctOptsIpFilterCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterCct.setStatus('mandatory')
wfCctOptsIpFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterRuleNumber.setStatus('mandatory')
wfCctOptsIpFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterFragment.setStatus('mandatory')
wfCctOptsLengthBasedTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4), )
if mibBuilder.loadTexts: wfCctOptsLengthBasedTable.setStatus('mandatory')
wfCctOptsLengthBasedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfCctOptsLengthBasedCct"), (0, "Wellfleet-Series7-MIB", "wfCctOptsLengthBasedMux"), (0, "Wellfleet-Series7-MIB", "wfCctOptsLengthBasedData"))
if mibBuilder.loadTexts: wfCctOptsLengthBasedEntry.setStatus('mandatory')
wfCctOptsLengthBasedDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedDelete.setStatus('mandatory')
wfCctOptsLengthBasedDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedDisable.setStatus('mandatory')
wfCctOptsLengthBasedState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLengthBasedState.setStatus('mandatory')
wfCctOptsLengthBasedCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLengthBasedCct.setStatus('mandatory')
wfCctOptsLengthBasedMux = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("etype", 1), ("lsap", 2), ("snap", 3))).clone('etype')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLengthBasedMux.setStatus('mandatory')
wfCctOptsLengthBasedData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLengthBasedData.setStatus('mandatory')
wfCctOptsLengthBasedLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedLength.setStatus('mandatory')
wfCctOptsLengthBasedLessThanQ = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1))).clone(namedValues=NamedValues(("hi", 3), ("normal", 2), ("lo", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedLessThanQ.setStatus('mandatory')
wfCctOptsLengthBasedGreaterThanQ = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1))).clone(namedValues=NamedValues(("hi", 3), ("normal", 2), ("lo", 1))).clone('lo')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedGreaterThanQ.setStatus('mandatory')
wfCircuitNameTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 3), )
if mibBuilder.loadTexts: wfCircuitNameTable.setStatus('mandatory')
wfCircuitNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfCircuitNumber"))
if mibBuilder.loadTexts: wfCircuitNameEntry.setStatus('mandatory')
wfCircuitNameDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCircuitNameDelete.setStatus('mandatory')
wfCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCircuitNumber.setStatus('mandatory')
wfCircuitName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCircuitName.setStatus('mandatory')
wfCircuitIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10, 20, 30, 40, 50, 60, 70))).clone(namedValues=NamedValues(("csmacd", 10), ("sync", 20), ("t1", 30), ("e1", 40), ("token", 50), ("fddi", 60), ("hssi", 70)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCircuitIfType.setStatus('mandatory')
wfCircuitProtoMap = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 3, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCircuitProtoMap.setStatus('mandatory')
wfConsole = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1))
wfBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 1), Integer32().clone(9600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBaudRate.setStatus('mandatory')
wfDataBits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 2), Integer32().clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDataBits.setStatus('mandatory')
wfParity = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfParity.setStatus('mandatory')
wfStopBits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("s1bit", 1), ("s15bit", 2), ("s2bit", 3))).clone('s1bit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStopBits.setStatus('mandatory')
wfModemEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModemEnable.setStatus('mandatory')
wfLinesPerScreen = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 6), Integer32().clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLinesPerScreen.setStatus('mandatory')
wfMoreEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMoreEnable.setStatus('mandatory')
wfPrompt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPrompt.setStatus('mandatory')
wfLoginTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 99, 1))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 99), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLoginTimeOut.setStatus('mandatory')
wfPasswordTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 99, 1))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 99), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPasswordTimeOut.setStatus('mandatory')
wfCommandTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 99, 15))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 99), ("default", 15))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCommandTimeOut.setStatus('mandatory')
wfLoginRetries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 99, 3))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 99), ("default", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLoginRetries.setStatus('mandatory')
wfTotalLogins = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTotalLogins.setStatus('mandatory')
wfUserLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfUserLoginErrors.setStatus('mandatory')
wfManagerLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfManagerLoginErrors.setStatus('mandatory')
wfOtherLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOtherLoginErrors.setStatus('mandatory')
wfTtyFrameErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTtyFrameErrors.setStatus('mandatory')
wfTtyOverrunErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTtyOverrunErrors.setStatus('mandatory')
wfTtyParityErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTtyParityErrors.setStatus('mandatory')
wfTtyInfifoErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTtyInfifoErrors.setStatus('mandatory')
wfCSMACDTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 1), )
if mibBuilder.loadTexts: wfCSMACDTable.setStatus('mandatory')
wfCSMACDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfCSMACDSlot"), (0, "Wellfleet-Series7-MIB", "wfCSMACDConnector"))
if mibBuilder.loadTexts: wfCSMACDEntry.setStatus('mandatory')
wfCSMACDDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCSMACDDelete.setStatus('mandatory')
wfCSMACDEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCSMACDEnable.setStatus('mandatory')
wfCSMACDState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDState.setStatus('mandatory')
wfCSMACDSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 14))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDSlot.setStatus('mandatory')
wfCSMACDConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDConnector.setStatus('mandatory')
wfCSMACDCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1023))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1023)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCSMACDCct.setStatus('mandatory')
wfCSMACDBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCSMACDBofl.setStatus('mandatory')
wfCSMACDBoflTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 60, 5))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 60), ("default", 5))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCSMACDBoflTmo.setStatus('mandatory')
wfCSMACDMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1518))).clone(namedValues=NamedValues(("default", 1518))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDMtu.setStatus('mandatory')
wfCSMACDMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDMadr.setStatus('mandatory')
wfCSMACDOctetsRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDOctetsRxOk.setStatus('mandatory')
wfCSMACDFramesRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDFramesRxOk.setStatus('mandatory')
wfCSMACDOctetsTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDOctetsTxOk.setStatus('mandatory')
wfCSMACDFramesTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDFramesTxOk.setStatus('mandatory')
wfCSMACDDeferredTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDDeferredTx.setStatus('mandatory')
wfCSMACDLateCollnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDLateCollnTx.setStatus('mandatory')
wfCSMACDExcessvCollnTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDExcessvCollnTx.setStatus('mandatory')
wfCSMACDBablErrorTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDBablErrorTx.setStatus('mandatory')
wfCSMACDBufErrorTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDBufErrorTx.setStatus('mandatory')
wfCSMACDLcarTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDLcarTx.setStatus('mandatory')
wfCSMACDUfloTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDUfloTx.setStatus('mandatory')
wfCSMACDFcsErrorRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDFcsErrorRx.setStatus('mandatory')
wfCSMACDAlignErrorRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDAlignErrorRx.setStatus('mandatory')
wfCSMACDLackRescErrorRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDLackRescErrorRx.setStatus('mandatory')
wfCSMACDTooLongErrorRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDTooLongErrorRx.setStatus('mandatory')
wfCSMACDOfloRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDOfloRx.setStatus('mandatory')
wfCSMACDMerr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDMerr.setStatus('mandatory')
wfCSMACDCerr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDCerr.setStatus('mandatory')
wfCSMACDHardwareFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCSMACDHardwareFilter.setStatus('mandatory')
wfCSMACDTxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255, 32))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255), ("default", 32))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCSMACDTxQueueLength.setStatus('mandatory')
wfCSMACDRxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255, 32))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255), ("default", 32))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCSMACDRxQueueLength.setStatus('mandatory')
wfCSMACDTxClipFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDTxClipFrames.setStatus('mandatory')
wfCSMACDRxReplenMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCSMACDRxReplenMisses.setStatus('mandatory')
wfivRouteGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1))
wfivRouteCreateDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteCreateDelete.setStatus('mandatory')
wfivRouteEnableDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteEnableDisable.setStatus('mandatory')
wfivRouteState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 3, 2, 1))).clone(namedValues=NamedValues(("notpresent", 4), ("initializing", 3), ("down", 2), ("up", 1))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivRouteState.setStatus('mandatory')
wfivRouteBroadcastRouteTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 180, 65535))).clone(namedValues=NamedValues(("routetimermin", 1), ("routetimerdflt", 180), ("routetimermax", 65535))).clone('routetimerdflt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteBroadcastRouteTimer.setStatus('mandatory')
wfivRouteRoutingVers = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivRouteRoutingVers.setStatus('mandatory')
wfivRouteMaxAddr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1023))).clone(namedValues=NamedValues(("minaddr", 1), ("maxaddr", 1023))).clone('maxaddr')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxAddr.setStatus('mandatory')
wfivRouteMaxBdcastNonRouters = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(64, 1023))).clone(namedValues=NamedValues(("nonroutersdflt", 64), ("nonroutersmax", 1023))).clone('nonroutersdflt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxBdcastNonRouters.setStatus('mandatory')
wfivRouteMaxBdcastRouters = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(32, 1023))).clone(namedValues=NamedValues(("routersdflt", 32), ("routersdmax", 1023))).clone('routersdflt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxBdcastRouters.setStatus('mandatory')
wfivRouteMaxCircuits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 1024, 65535))).clone(namedValues=NamedValues(("circuitsmin", 1), ("circuitsdflt", 16), ("circuitswfmax", 1024), ("circuitsmax", 65535))).clone('circuitswfmax')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxCircuits.setStatus('mandatory')
wfivRouteMaxCost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1022))).clone(namedValues=NamedValues(("mincost", 1), ("maxcost", 1022))).clone('maxcost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxCost.setStatus('mandatory')
wfivRouteMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 30))).clone(namedValues=NamedValues(("minhops", 1), ("maxhops", 30))).clone('maxhops')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxHops.setStatus('mandatory')
wfivRouteMaxVisits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(63))).clone(namedValues=NamedValues(("maxvisits", 63))).clone('maxvisits')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxVisits.setStatus('mandatory')
wfivRouteAreaMaxCost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1022))).clone(namedValues=NamedValues(("amincost", 1), ("amaxcost", 1022))).clone('amaxcost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteAreaMaxCost.setStatus('mandatory')
wfivRouteAreaMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 30))).clone(namedValues=NamedValues(("aminhops", 1), ("amaxhops", 30))).clone('amaxhops')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteAreaMaxHops.setStatus('mandatory')
wfivRouteMaxArea = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 63))).clone(namedValues=NamedValues(("minarea", 1), ("maxarea", 63))).clone('maxarea')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxArea.setStatus('mandatory')
wfivRouteType = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5))).clone(namedValues=NamedValues(("area", 3), ("routingiv", 4), ("nonroutingiv", 5))).clone('area')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivRouteType.setStatus('mandatory')
wfivCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2), )
if mibBuilder.loadTexts: wfivCircuitTable.setStatus('mandatory')
wfivCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfivCircuitID"))
if mibBuilder.loadTexts: wfivCircuitEntry.setStatus('mandatory')
wfivCircuitCreateDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitCreateDelete.setStatus('mandatory')
wfivCircuitEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitEnableDisable.setStatus('mandatory')
wfivCircuitCommonState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 3, 2, 1))).clone(namedValues=NamedValues(("notpresent", 4), ("initializing", 3), ("down", 2), ("up", 1))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCommonState.setStatus('mandatory')
wfivCircuitArea = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1, 63))).clone(namedValues=NamedValues(("minarea", 1), ("defarea", 1), ("maxarea", 63))).clone('defarea')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitArea.setStatus('mandatory')
wfivCircuitNodeid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1, 1023))).clone(namedValues=NamedValues(("minnodeid", 1), ("defnodeid", 1), ("maxnodeid", 1023))).clone('defnodeid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitNodeid.setStatus('mandatory')
wfivCircuitNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitNodeAddr.setStatus('mandatory')
wfivCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitID.setStatus('mandatory')
wfivCircuitCommonType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6, 15, 100, 101))).clone(namedValues=NamedValues(("sync", 1), ("x25", 4), ("ethernet", 6), ("fddi", 15), ("smds", 100), ("fr", 101)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCommonType.setStatus('mandatory')
wfivCircuitExecCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 10, 63))).clone(namedValues=NamedValues(("mincost", 1), ("defcost", 10), ("maxcost", 63))).clone('defcost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitExecCost.setStatus('mandatory')
wfivCircuitExecHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 15, 8191))).clone(namedValues=NamedValues(("hellomin", 1), ("hellodef", 15), ("hellomax", 8191))).clone('hellodef')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitExecHelloTimer.setStatus('mandatory')
wfivCircuitDesigRouterNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitDesigRouterNodeAddr.setStatus('mandatory')
wfivCircuitMaxRouters = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(33, 33))).clone(namedValues=NamedValues(("maxroutersdef", 33), ("maxroutersmax", 33))).clone('maxroutersdef')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitMaxRouters.setStatus('mandatory')
wfivCircuitRouterPri = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(64, 127))).clone(namedValues=NamedValues(("routerpridef", 64), ("routerprimax", 127))).clone('routerpridef')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitRouterPri.setStatus('mandatory')
wfivCircuitCountAgedPktLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountAgedPktLoss.setStatus('mandatory')
wfivCircuitCountNodeUnrPktLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountNodeUnrPktLoss.setStatus('mandatory')
wfivCircuitCountOutRngePktLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountOutRngePktLoss.setStatus('mandatory')
wfivCircuitCountOverSzePktLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountOverSzePktLoss.setStatus('mandatory')
wfivCircuitCountPacketFmtErr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountPacketFmtErr.setStatus('mandatory')
wfivCircuitCountPtlRteUpdtLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountPtlRteUpdtLoss.setStatus('mandatory')
wfivCircuitCountTransitPksRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountTransitPksRecd.setStatus('mandatory')
wfivCircuitCountTransitPkSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountTransitPkSent.setStatus('mandatory')
wfivCircuitCountRtHelloSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountRtHelloSent.setStatus('mandatory')
wfivCircuitCountRtHelloRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountRtHelloRcvd.setStatus('mandatory')
wfivCircuitCountHelloSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountHelloSent.setStatus('mandatory')
wfivCircuitCountHelloRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountHelloRcvd.setStatus('mandatory')
wfivCircuitCountL1UpdSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountL1UpdSent.setStatus('mandatory')
wfivCircuitCountL1UpdRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountL1UpdRcvd.setStatus('mandatory')
wfivCircuitCountAreaUpdSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountAreaUpdSent.setStatus('mandatory')
wfivCircuitCountAreaUpdRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountAreaUpdRcvd.setStatus('mandatory')
wfivCircuitCountDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountDropped.setStatus('mandatory')
wfivCircuitAllEndnodesMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 31), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitAllEndnodesMac.setStatus('mandatory')
wfivCircuitAllRoutersMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 32), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitAllRoutersMac.setStatus('mandatory')
wfivCircuitAllAreaRoutersMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 33), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitAllAreaRoutersMac.setStatus('mandatory')
wfivCircuitHelloEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitHelloEnableDisable.setStatus('mandatory')
wfivCircuitRtHelloEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitRtHelloEnableDisable.setStatus('mandatory')
wfivCircuitL1UpdateEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitL1UpdateEnableDisable.setStatus('mandatory')
wfivLevel1RouteTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3), )
if mibBuilder.loadTexts: wfivLevel1RouteTable.setStatus('mandatory')
wfivLevel1RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfivLevel1AreaId"), (0, "Wellfleet-Series7-MIB", "wfivLevel1NodeId"))
if mibBuilder.loadTexts: wfivLevel1RouteEntry.setStatus('mandatory')
wfivLevel1AreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1AreaId.setStatus('mandatory')
wfivLevel1NodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1NodeId.setStatus('mandatory')
wfivLevel1RouteNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteNodeAddr.setStatus('mandatory')
wfivLevel1RouteCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteCircuitID.setStatus('mandatory')
wfivLevel1RouteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteCost.setStatus('mandatory')
wfivLevel1RouteHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteHops.setStatus('mandatory')
wfivLevel1RouteNextNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteNextNode.setStatus('mandatory')
wfivAreaTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4), )
if mibBuilder.loadTexts: wfivAreaTable.setStatus('mandatory')
wfivAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfivAreaNum"))
if mibBuilder.loadTexts: wfivAreaEntry.setStatus('mandatory')
wfivAreaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaNum.setStatus('mandatory')
wfivAreaState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5))).clone(namedValues=NamedValues(("reachable", 4), ("unreachable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaState.setStatus('mandatory')
wfivAreaCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaCost.setStatus('mandatory')
wfivAreaHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaHops.setStatus('mandatory')
wfivAreaCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaCircuitID.setStatus('mandatory')
wfivAreaNextNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaNextNode.setStatus('mandatory')
wfivAdjTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5), )
if mibBuilder.loadTexts: wfivAdjTable.setStatus('mandatory')
wfivAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfivAdjIndex"))
if mibBuilder.loadTexts: wfivAdjEntry.setStatus('mandatory')
wfivAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjIndex.setStatus('mandatory')
wfivAdjNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjNodeAddr.setStatus('mandatory')
wfivAdjBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjBlockSize.setStatus('mandatory')
wfivAdjListenTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjListenTimer.setStatus('mandatory')
wfivAdjCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjCircuitID.setStatus('mandatory')
wfivAdjType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjType.setStatus('mandatory')
wfivAdjState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("init", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjState.setStatus('mandatory')
wfivAdjPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjPriority.setStatus('mandatory')
wfivAdjClass = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjClass.setStatus('mandatory')
wfivTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6), )
if mibBuilder.loadTexts: wfivTrafficFilterTable.setStatus('mandatory')
wfivTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfivTrafficFilterCircuit"), (0, "Wellfleet-Series7-MIB", "wfivTrafficFilterRuleNumber"), (0, "Wellfleet-Series7-MIB", "wfivTrafficFilterFragment"))
if mibBuilder.loadTexts: wfivTrafficFilterEntry.setStatus('mandatory')
wfivTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivTrafficFilterCreate.setStatus('mandatory')
wfivTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivTrafficFilterEnable.setStatus('mandatory')
wfivTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterStatus.setStatus('mandatory')
wfivTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterCounter.setStatus('mandatory')
wfivTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivTrafficFilterDefinition.setStatus('mandatory')
wfivTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 6), Integer32())
if mibBuilder.loadTexts: wfivTrafficFilterReserved.setStatus('mandatory')
wfivTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterCircuit.setStatus('mandatory')
wfivTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterRuleNumber.setStatus('mandatory')
wfivTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterFragment.setStatus('mandatory')
wfivStaticAdjTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7), )
if mibBuilder.loadTexts: wfivStaticAdjTable.setStatus('mandatory')
wfivStaticAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfivStaticAdjCircuitID"), (0, "Wellfleet-Series7-MIB", "wfivStaticAdjArea"), (0, "Wellfleet-Series7-MIB", "wfivStaticAdjNodeid"))
if mibBuilder.loadTexts: wfivStaticAdjEntry.setStatus('mandatory')
wfivStaticAdjCreateDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjCreateDelete.setStatus('mandatory')
wfivStaticAdjEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjEnableDisable.setStatus('mandatory')
wfivStaticAdjArea = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticAdjArea.setStatus('mandatory')
wfivStaticAdjNodeid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticAdjNodeid.setStatus('mandatory')
wfivStaticAdjCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticAdjCircuitID.setStatus('mandatory')
wfivStaticAdjNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticAdjNodeAddr.setStatus('mandatory')
wfivStaticAdjType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5))).clone(namedValues=NamedValues(("area", 3), ("routingiv", 4), ("nonroutingiv", 5))).clone('area')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjType.setStatus('mandatory')
wfivStaticAdjPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjPriority.setStatus('mandatory')
wfivStaticAdjDestMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjDestMACAddr.setStatus('mandatory')
wfDs1Config = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1), )
if mibBuilder.loadTexts: wfDs1Config.setStatus('mandatory')
wfDs1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs1LineIndex"))
if mibBuilder.loadTexts: wfDs1ConfigEntry.setStatus('mandatory')
wfDs1LineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1LineIndex.setStatus('mandatory')
wfDs1TimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1TimeElapsed.setStatus('mandatory')
wfDs1ValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1ValidIntervals.setStatus('mandatory')
wfDs1LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4))).clone(namedValues=NamedValues(("ds1ansi-esf", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1LineType.setStatus('mandatory')
wfDs1ZeroCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 5))).clone(namedValues=NamedValues(("ds1b8zs", 2), ("ds1zbtsi", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1ZeroCoding.setStatus('mandatory')
wfDs1SendCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("ds1sendnocode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1SendCode.setStatus('mandatory')
wfDs1CircuitIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1CircuitIdentifier.setStatus('mandatory')
wfDs1LoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ds1noloop", 1), ("ds1mgrpayloadloop", 2), ("ds1mgrlineloop", 3), ("ds1netreqpayloadloop", 4), ("ds1netreqlineloop", 5), ("ds1otherloop", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1LoopbackConfig.setStatus('mandatory')
wfDs1LineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("ds1noalarm", 1), ("ds1farendalarm", 2), ("ds1alarmindicationsignal", 4), ("ds1lossofframe", 8), ("ds1lossofsignal", 16), ("ds1loopbackstate", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1LineStatus.setStatus('mandatory')
wfDs1Current = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 2), )
if mibBuilder.loadTexts: wfDs1Current.setStatus('mandatory')
wfDs1CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs1CurrentIndex"))
if mibBuilder.loadTexts: wfDs1CurrentEntry.setStatus('mandatory')
wfDs1CurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1CurrentIndex.setStatus('mandatory')
wfDs1CurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1CurrentESs.setStatus('mandatory')
wfDs1CurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1CurrentSESs.setStatus('mandatory')
wfDs1CurrentSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1CurrentSEFs.setStatus('mandatory')
wfDs1CurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1CurrentUASs.setStatus('mandatory')
wfDs1CurrentBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1CurrentBPVs.setStatus('mandatory')
wfDs1CurrentCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1CurrentCVs.setStatus('mandatory')
wfDs1Interval = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3), )
if mibBuilder.loadTexts: wfDs1Interval.setStatus('mandatory')
wfDs1IntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs1IntervalIndex"), (0, "Wellfleet-Series7-MIB", "wfDs1IntervalNumber"))
if mibBuilder.loadTexts: wfDs1IntervalEntry.setStatus('mandatory')
wfDs1IntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1IntervalIndex.setStatus('mandatory')
wfDs1IntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 96))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 96)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1IntervalNumber.setStatus('mandatory')
wfDs1IntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1IntervalESs.setStatus('mandatory')
wfDs1IntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1IntervalSESs.setStatus('mandatory')
wfDs1IntervalSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1IntervalSEFs.setStatus('mandatory')
wfDs1IntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1IntervalUASs.setStatus('mandatory')
wfDs1IntervalBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1IntervalBPVs.setStatus('mandatory')
wfDs1IntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1IntervalCVs.setStatus('mandatory')
wfDs1Total = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 4), )
if mibBuilder.loadTexts: wfDs1Total.setStatus('mandatory')
wfDs1TotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs1TotalIndex"))
if mibBuilder.loadTexts: wfDs1TotalEntry.setStatus('mandatory')
wfDs1TotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1TotalIndex.setStatus('mandatory')
wfDs1TotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1TotalESs.setStatus('mandatory')
wfDs1TotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1TotalSESs.setStatus('mandatory')
wfDs1TotalSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1TotalSEFs.setStatus('mandatory')
wfDs1TotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1TotalUASs.setStatus('mandatory')
wfDs1TotalBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1TotalBPVs.setStatus('mandatory')
wfDs1TotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1TotalCVs.setStatus('mandatory')
wfDs1FeCurrent = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 5), )
if mibBuilder.loadTexts: wfDs1FeCurrent.setStatus('mandatory')
wfDs1FeCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs1FeCurrentIndex"))
if mibBuilder.loadTexts: wfDs1FeCurrentEntry.setStatus('mandatory')
wfDs1FeCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeCurrentIndex.setStatus('mandatory')
wfDs1FeCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeCurrentESs.setStatus('mandatory')
wfDs1FeCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeCurrentSESs.setStatus('mandatory')
wfDs1FeCurrentSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeCurrentSEFs.setStatus('mandatory')
wfDs1FeCurrentBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeCurrentBPVs.setStatus('mandatory')
wfDs1FeCurrentCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeCurrentCVs.setStatus('mandatory')
wfDs1FeInterval = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 6), )
if mibBuilder.loadTexts: wfDs1FeInterval.setStatus('mandatory')
wfDs1FeIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs1FeIntervalIndex"), (0, "Wellfleet-Series7-MIB", "wfDs1FeIntervalNumber"))
if mibBuilder.loadTexts: wfDs1FeIntervalEntry.setStatus('mandatory')
wfDs1FeIntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeIntervalIndex.setStatus('mandatory')
wfDs1FeIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 96))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 96)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeIntervalNumber.setStatus('mandatory')
wfDs1FeIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeIntervalESs.setStatus('mandatory')
wfDs1FeIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 6, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeIntervalSESs.setStatus('mandatory')
wfDs1FeIntervalSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 6, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeIntervalSEFs.setStatus('mandatory')
wfDs1FeIntervalBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeIntervalBPVs.setStatus('mandatory')
wfDs1FeIntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 6, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeIntervalCVs.setStatus('mandatory')
wfDs1FeTotal = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 7), )
if mibBuilder.loadTexts: wfDs1FeTotal.setStatus('mandatory')
wfDs1FeTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 7, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs1FeTotalIndex"))
if mibBuilder.loadTexts: wfDs1FeTotalEntry.setStatus('mandatory')
wfDs1FeTotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeTotalIndex.setStatus('mandatory')
wfDs1FeTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeTotalESs.setStatus('mandatory')
wfDs1FeTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeTotalSESs.setStatus('mandatory')
wfDs1FeTotalSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeTotalSEFs.setStatus('mandatory')
wfDs1FeTotalBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeTotalBPVs.setStatus('mandatory')
wfDs1FeTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 12, 7, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs1FeTotalCVs.setStatus('mandatory')
wfDs3Config = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1), )
if mibBuilder.loadTexts: wfDs3Config.setStatus('mandatory')
wfDs3ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs3LineIndex"))
if mibBuilder.loadTexts: wfDs3ConfigEntry.setStatus('mandatory')
wfDs3LineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3LineIndex.setStatus('mandatory')
wfDs3TimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TimeElapsed.setStatus('mandatory')
wfDs3ValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3ValidIntervals.setStatus('mandatory')
wfDs3LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("ds3cbitparity", 4), ("ds3clearchannel", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3LineType.setStatus('mandatory')
wfDs3ZeroCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("ds3b3zs", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3ZeroCoding.setStatus('mandatory')
wfDs3SendCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("ds3sendnocode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3SendCode.setStatus('mandatory')
wfDs3CircuitIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CircuitIdentifier.setStatus('mandatory')
wfDs3LoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ds3noloop", 1), ("ds3mgrpayloadloop", 2), ("ds3mgrlineloop", 3), ("ds3netreqpayloadloop", 4), ("ds3netreqlineloop", 5), ("ds3otherloop", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3LoopbackConfig.setStatus('mandatory')
wfDs3LineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("ds3noalarm", 1), ("ds3farendalarm", 2), ("ds3alarmindicationsignal", 4), ("ds3lossofframe", 8), ("ds3lossofsignal", 16), ("ds3loopbackstate", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3LineStatus.setStatus('mandatory')
wfDs3Current = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2), )
if mibBuilder.loadTexts: wfDs3Current.setStatus('mandatory')
wfDs3CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs3CurrentIndex"))
if mibBuilder.loadTexts: wfDs3CurrentEntry.setStatus('mandatory')
wfDs3CurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentIndex.setStatus('mandatory')
wfDs3CurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentESs.setStatus('mandatory')
wfDs3CurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentSESs.setStatus('mandatory')
wfDs3CurrentSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentSEFs.setStatus('mandatory')
wfDs3CurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentUASs.setStatus('mandatory')
wfDs3CurrentBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentBPVs.setStatus('mandatory')
wfDs3CurrentCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3CurrentCVs.setStatus('mandatory')
wfDs3Interval = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3), )
if mibBuilder.loadTexts: wfDs3Interval.setStatus('mandatory')
wfDs3IntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs3IntervalIndex"), (0, "Wellfleet-Series7-MIB", "wfDs3IntervalNumber"))
if mibBuilder.loadTexts: wfDs3IntervalEntry.setStatus('mandatory')
wfDs3IntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalIndex.setStatus('mandatory')
wfDs3IntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 96))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 96)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalNumber.setStatus('mandatory')
wfDs3IntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalESs.setStatus('mandatory')
wfDs3IntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalSESs.setStatus('mandatory')
wfDs3IntervalSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalSEFs.setStatus('mandatory')
wfDs3IntervalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalUASs.setStatus('mandatory')
wfDs3IntervalBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalBPVs.setStatus('mandatory')
wfDs3IntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3IntervalCVs.setStatus('mandatory')
wfDs3Total = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4), )
if mibBuilder.loadTexts: wfDs3Total.setStatus('mandatory')
wfDs3TotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs3TotalIndex"))
if mibBuilder.loadTexts: wfDs3TotalEntry.setStatus('mandatory')
wfDs3TotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalIndex.setStatus('mandatory')
wfDs3TotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalESs.setStatus('mandatory')
wfDs3TotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalSESs.setStatus('mandatory')
wfDs3TotalSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalSEFs.setStatus('mandatory')
wfDs3TotalUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalUASs.setStatus('mandatory')
wfDs3TotalBPVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalBPVs.setStatus('mandatory')
wfDs3TotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3TotalCVs.setStatus('mandatory')
wfDs3FeConfig = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5), )
if mibBuilder.loadTexts: wfDs3FeConfig.setStatus('mandatory')
wfDs3FeConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs3FeConfigIndex"))
if mibBuilder.loadTexts: wfDs3FeConfigEntry.setStatus('mandatory')
wfDs3FeConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeConfigIndex.setStatus('mandatory')
wfDs3FarEndEquipCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndEquipCode.setStatus('mandatory')
wfDs3FarEndLocationIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndLocationIDCode.setStatus('mandatory')
wfDs3FarEndFrameIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndFrameIDCode.setStatus('mandatory')
wfDs3FarEndUnitCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndUnitCode.setStatus('mandatory')
wfDs3FarEndFacilityIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDs3FarEndFacilityIDCode.setStatus('mandatory')
wfDs3FeCurrent = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6), )
if mibBuilder.loadTexts: wfDs3FeCurrent.setStatus('mandatory')
wfDs3FeCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs3FeCurrentIndex"))
if mibBuilder.loadTexts: wfDs3FeCurrentEntry.setStatus('mandatory')
wfDs3FeCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeCurrentIndex.setStatus('mandatory')
wfDs3FeCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeCurrentESs.setStatus('mandatory')
wfDs3FeCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeCurrentSESs.setStatus('mandatory')
wfDs3FeCurrentCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeCurrentCVs.setStatus('mandatory')
wfDs3FeInterval = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7), )
if mibBuilder.loadTexts: wfDs3FeInterval.setStatus('mandatory')
wfDs3FeIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs3FeIntervalIndex"), (0, "Wellfleet-Series7-MIB", "wfDs3FeIntervalNumber"))
if mibBuilder.loadTexts: wfDs3FeIntervalEntry.setStatus('mandatory')
wfDs3FeIntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalIndex.setStatus('mandatory')
wfDs3FeIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 96))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 96)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalNumber.setStatus('mandatory')
wfDs3FeIntervalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalESs.setStatus('mandatory')
wfDs3FeIntervalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalSESs.setStatus('mandatory')
wfDs3FeIntervalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeIntervalCVs.setStatus('mandatory')
wfDs3FeTotal = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8), )
if mibBuilder.loadTexts: wfDs3FeTotal.setStatus('mandatory')
wfDs3FeTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfDs3FeTotalIndex"))
if mibBuilder.loadTexts: wfDs3FeTotalEntry.setStatus('mandatory')
wfDs3FeTotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeTotalIndex.setStatus('mandatory')
wfDs3FeTotalESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeTotalESs.setStatus('mandatory')
wfDs3FeTotalSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeTotalSESs.setStatus('mandatory')
wfDs3FeTotalCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 13, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDs3FeTotalCVs.setStatus('mandatory')
wfE1Table = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 11), )
if mibBuilder.loadTexts: wfE1Table.setStatus('mandatory')
wfE1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfE1Slot"), (0, "Wellfleet-Series7-MIB", "wfE1Connector"))
if mibBuilder.loadTexts: wfE1Entry.setStatus('mandatory')
wfE1Delete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfE1Delete.setStatus('mandatory')
wfE1Disable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfE1Disable.setStatus('mandatory')
wfE1State = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1State.setStatus('mandatory')
wfE1Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 14))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1Slot.setStatus('mandatory')
wfE1Connector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one", 1), ("two", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1Connector.setStatus('mandatory')
wfE1Madr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1Madr.setStatus('mandatory')
wfE1HDB3Support = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfE1HDB3Support.setStatus('mandatory')
wfE1ClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 1))).clone(namedValues=NamedValues(("internal", 1), ("slave", 2), ("manual", 4), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfE1ClockMode.setStatus('mandatory')
wfE1MiniDacs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfE1MiniDacs.setStatus('mandatory')
wfE1BipolarVios = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1BipolarVios.setStatus('mandatory')
wfE1FrameErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1FrameErrs.setStatus('mandatory')
wfE1RcvRemAlms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1RcvRemAlms.setStatus('mandatory')
wfE1RcvMfmAlms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1RcvMfmAlms.setStatus('mandatory')
wfE1MfsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1MfsErrs.setStatus('mandatory')
wfE1SyncLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1SyncLoss.setStatus('mandatory')
wfE1RcvSig1s = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1RcvSig1s.setStatus('mandatory')
wfE1RcvUnfrm1s = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 11, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfE1RcvUnfrm1s.setStatus('mandatory')
wfFakeEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 4))
wfFakeEventString = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 4, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFakeEventString.setStatus('optional')
wfFddiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 4), )
if mibBuilder.loadTexts: wfFddiTable.setStatus('mandatory')
wfFddiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfFDDISlot"), (0, "Wellfleet-Series7-MIB", "wfFDDINode"))
if mibBuilder.loadTexts: wfFddiEntry.setStatus('mandatory')
wfFDDIDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIDelete.setStatus('mandatory')
wfFDDIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIEnable.setStatus('mandatory')
wfFDDIState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIState.setStatus('mandatory')
wfFDDISlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 14))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDISlot.setStatus('mandatory')
wfFDDINode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one", 1), ("two", 2))).clone('one')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDINode.setStatus('mandatory')
wfFDDICct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1023))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1023)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDICct.setStatus('mandatory')
wfFDDIBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIBofl.setStatus('mandatory')
wfFDDIBoflTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 60, 5))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 60), ("default", 5))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIBoflTmo.setStatus('mandatory')
wfFDDIMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4495))).clone(namedValues=NamedValues(("default", 4495))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMtu.setStatus('mandatory')
wfFDDIMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMadr.setStatus('mandatory')
wfFDDIOctetsRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIOctetsRxOk.setStatus('mandatory')
wfFDDIFramesRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIFramesRxOk.setStatus('mandatory')
wfFDDIOctetsTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIOctetsTxOk.setStatus('mandatory')
wfFDDIFramesTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIFramesTxOk.setStatus('mandatory')
wfFDDICrcErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDICrcErrRx.setStatus('mandatory')
wfFDDIOverrunRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIOverrunRx.setStatus('mandatory')
wfFDDIParityErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIParityErrRx.setStatus('mandatory')
wfFDDIMacErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMacErrRx.setStatus('mandatory')
wfFDDIRingErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRingErrRx.setStatus('mandatory')
wfFDDISmtRingErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDISmtRingErrRx.setStatus('mandatory')
wfFDDIRingOverrunRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRingOverrunRx.setStatus('mandatory')
wfFDDISmtRingOverrunRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDISmtRingOverrunRx.setStatus('mandatory')
wfFDDIAbortTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIAbortTx.setStatus('mandatory')
wfFDDIUnderrunTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIUnderrunTx.setStatus('mandatory')
wfFDDIParityErrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIParityErrTx.setStatus('mandatory')
wfFDDIRingErrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRingErrTx.setStatus('mandatory')
wfFDDIPortOpErr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIPortOpErr.setStatus('mandatory')
wfFDDIInternOpErr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIInternOpErr.setStatus('mandatory')
wfFDDIHostErr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIHostErr.setStatus('mandatory')
wfFDDISmtConnectionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(65381))).clone(namedValues=NamedValues(("default", 65381))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDISmtConnectionPolicy.setStatus('mandatory')
wfFDDISmtTNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 22, 30))).clone(namedValues=NamedValues(("min", 2), ("default", 22), ("max", 30))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDISmtTNotify.setStatus('mandatory')
wfFDDIMacTReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2062500))).clone(namedValues=NamedValues(("default", 2062500))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIMacTReq.setStatus('mandatory')
wfFDDIMacTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2097152))).clone(namedValues=NamedValues(("default", 2097152))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMacTMax.setStatus('mandatory')
wfFDDIMacTvxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(32768))).clone(namedValues=NamedValues(("default", 32768))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMacTvxValue.setStatus('mandatory')
wfFDDIMacTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(50000))).clone(namedValues=NamedValues(("default", 50000))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMacTMin.setStatus('mandatory')
wfFDDIHardwareFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIHardwareFilter.setStatus('mandatory')
wfFDDISmtEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDISmtEnable.setStatus('mandatory')
wfFDDITxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255, 127))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255), ("default", 127))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDITxQueueLength.setStatus('mandatory')
wfFDDIRxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255, 64))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255), ("default", 64))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIRxQueueLength.setStatus('mandatory')
wfFDDITxClipFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDITxClipFrames.setStatus('mandatory')
wfFDDIRxReplenMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxReplenMisses.setStatus('mandatory')
wfFddiSmtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2), )
if mibBuilder.loadTexts: wfFddiSmtTable.setStatus('mandatory')
wfFddiSmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfFddiSmtSlot"), (0, "Wellfleet-Series7-MIB", "wfFddiSmtNode"))
if mibBuilder.loadTexts: wfFddiSmtEntry.setStatus('mandatory')
wfFddiSmtSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtSlot.setStatus('mandatory')
wfFddiSmtNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtNode.setStatus('mandatory')
wfFddiSmtCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtCct.setStatus('mandatory')
wfFddiSmtStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtStationId.setStatus('mandatory')
wfFddiSmtOpVersionId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtOpVersionId.setStatus('mandatory')
wfFddiSmtMacCt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtMacCt.setStatus('mandatory')
wfFddiSmtNonMasterCt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtNonMasterCt.setStatus('mandatory')
wfFddiSmtEcmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("out", 1), ("in", 2), ("trace", 3), ("leave", 4), ("pathtest", 5), ("insert", 6), ("check", 7), ("deinsert", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtEcmState.setStatus('mandatory')
wfFddiSmtCfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("isolated", 1), ("wraps", 2), ("wrapa", 3), ("wrapb", 4), ("wrapab", 5), ("thru", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtCfState.setStatus('mandatory')
wfFddiMacTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2), )
if mibBuilder.loadTexts: wfFddiMacTable.setStatus('mandatory')
wfFddiMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfFddiMacSlot"), (0, "Wellfleet-Series7-MIB", "wfFddiMacNode"))
if mibBuilder.loadTexts: wfFddiMacEntry.setStatus('mandatory')
wfFddiMacSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacSlot.setStatus('mandatory')
wfFddiMacNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacNode.setStatus('mandatory')
wfFddiMacCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacCct.setStatus('mandatory')
wfFddiMacUpstreamNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacUpstreamNbr.setStatus('mandatory')
wfFddiMacDownstreamNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacDownstreamNbr.setStatus('mandatory')
wfFddiMacSmtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacSmtAddress.setStatus('mandatory')
wfFddiMacTNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacTNeg.setStatus('mandatory')
wfFddiMacRmtState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("isolated", 1), ("nonop", 2), ("ringop", 4), ("detect", 8), ("nonopdup", 16), ("ringopdup", 32), ("directed", 64), ("trace", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacRmtState.setStatus('mandatory')
wfFddiPortTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2), )
if mibBuilder.loadTexts: wfFddiPortTable.setStatus('mandatory')
wfFddiPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfFddiPortSlot"), (0, "Wellfleet-Series7-MIB", "wfFddiPortNode"), (0, "Wellfleet-Series7-MIB", "wfFddiPortIndex"))
if mibBuilder.loadTexts: wfFddiPortEntry.setStatus('mandatory')
wfFddiPortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortSlot.setStatus('mandatory')
wfFddiPortNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortNode.setStatus('mandatory')
wfFddiPortCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortCct.setStatus('mandatory')
wfFddiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortIndex.setStatus('mandatory')
wfFddiPortPcType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("a", 1), ("b", 2), ("s", 3), ("m", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortPcType.setStatus('mandatory')
wfFddiPortPcNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("a", 1), ("b", 2), ("s", 3), ("m", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortPcNeighbor.setStatus('mandatory')
wfFddiPortPcmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("off", 1), ("break", 2), ("trace", 3), ("connect", 4), ("next", 5), ("signal", 6), ("join", 7), ("verify", 8), ("active", 9), ("maint", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortPcmState.setStatus('mandatory')
wfFrDlcmiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1), )
if mibBuilder.loadTexts: wfFrDlcmiTable.setStatus('mandatory')
wfFrDlcmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfFrDlcmiCircuit"))
if mibBuilder.loadTexts: wfFrDlcmiEntry.setStatus('mandatory')
wfFrDlcmiDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiDelete.setStatus('mandatory')
wfFrDlcmiDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiDisable.setStatus('mandatory')
wfFrDlcmiState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiState.setStatus('mandatory')
wfFrDlcmiCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiCircuit.setStatus('mandatory')
wfFrDlcmiManagementType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("lmi", 2), ("t1617d", 3), ("t1617b", 4), ("annexa", 5), ("lmiswitch", 6), ("annexdswitch", 7), ("annexaswitch", 8))).clone('t1617d')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiManagementType.setStatus('mandatory')
wfFrDlcmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("start", 1), ("running", 2), ("fault", 3), ("recovered", 4))).clone('start')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiStatus.setStatus('mandatory')
wfFrDlcmiAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("q921", 1), ("q922march90", 2), ("q922november90", 3), ("q922", 4))).clone('q922')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiAddress.setStatus('mandatory')
wfFrDlcmiAddressLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("twobyte", 2), ("threebyte", 3), ("fourbyte", 4))).clone('twobyte')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiAddressLen.setStatus('mandatory')
wfFrDlcmiPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 10, 30))).clone(namedValues=NamedValues(("minimum", 5), ("default", 10), ("maximum", 30))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiPollingInterval.setStatus('mandatory')
wfFrDlcmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 255))).clone(namedValues=NamedValues(("minimum", 1), ("default", 6), ("maximum", 255))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiFullEnquiryInterval.setStatus('mandatory')
wfFrDlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 11), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiErrorThreshold.setStatus('mandatory')
wfFrDlcmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 12), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiMonitoredEvents.setStatus('mandatory')
wfFrDlcmiMaxSupportedVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiMaxSupportedVCs.setStatus('mandatory')
wfFrDlcmiMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrDlcmiMulticast.setStatus('mandatory')
wfFrDlcmiSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255))).clone('minimum')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiSeqCount.setStatus('mandatory')
wfFrDlcmiLastReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255))).clone('minimum')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiLastReceived.setStatus('mandatory')
wfFrDlcmiPassiveSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255))).clone('minimum')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiPassiveSeqCount.setStatus('mandatory')
wfFrDlcmiPassiveReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255))).clone('minimum')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiPassiveReceived.setStatus('mandatory')
wfFrDlcmiPolls = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiPolls.setStatus('mandatory')
wfFrDlcmiAlarmTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrDlcmiAlarmTimer.setStatus('mandatory')
wfFrErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("unknown", 1), ("short", 2), ("long", 3), ("illegaldlci", 4), ("unknowndlci", 5), ("protoerr", 6), ("unknownie", 7), ("sequenceerr", 8), ("unknownrpt", 9), ("reset", 10), ("cntrl", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrType.setStatus('mandatory')
wfFrErrData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 22), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrData.setStatus('mandatory')
wfFrErrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 23), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrTime.setStatus('mandatory')
wfFrErrDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrDiscards.setStatus('mandatory')
wfFrErrDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrErrDrops.setStatus('mandatory')
wfFrCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2), )
if mibBuilder.loadTexts: wfFrCircuitTable.setStatus('mandatory')
wfFrCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfFrCircuitNumber"), (0, "Wellfleet-Series7-MIB", "wfFrCircuitDlci"))
if mibBuilder.loadTexts: wfFrCircuitEntry.setStatus('mandatory')
wfFrCircuitDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2), ("system", 3))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitDelete.setStatus('mandatory')
wfFrCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitNumber.setStatus('mandatory')
wfFrCircuitDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1007, 1024, 64511, 131072, 8257535))).clone(namedValues=NamedValues(("twobyteminimum", 16), ("twobytemaximum", 1007), ("threebyteminimum", 1024), ("threebytemaximum", 64511), ("fourbyteminimum", 131072), ("fourbytemaximum", 8257535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitDlci.setStatus('mandatory')
wfFrCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3), ("xoff", 4), ("control", 5))).clone('invalid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitState.setStatus('mandatory')
wfFrCircuitStateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3))).clone('invalid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitStateSet.setStatus('mandatory')
wfFrCircuitReceivedFECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitReceivedFECNs.setStatus('mandatory')
wfFrCircuitReceivedBECNs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitReceivedBECNs.setStatus('mandatory')
wfFrCircuitSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitSentFrames.setStatus('mandatory')
wfFrCircuitSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitSentOctets.setStatus('mandatory')
wfFrCircuitReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitReceivedFrames.setStatus('mandatory')
wfFrCircuitReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitReceivedOctets.setStatus('mandatory')
wfFrCircuitCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitCreationTime.setStatus('mandatory')
wfFrCircuitLastTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitLastTimeChange.setStatus('mandatory')
wfFrCircuitCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitCommittedBurst.setStatus('mandatory')
wfFrCircuitExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitExcessBurst.setStatus('mandatory')
wfFrCircuitThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitThroughput.setStatus('mandatory')
wfFrCircuitMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("multicast", 1), ("unicast", 2))).clone('unicast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitMulticast.setStatus('mandatory')
wfFrCircuitDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitDiscards.setStatus('mandatory')
wfFrCircuitDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrCircuitDrops.setStatus('mandatory')
wfFrCircuitSubCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitSubCct.setStatus('mandatory')
wfFrCircuitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("group", 1), ("hybrid", 2), ("direct", 3))).clone('group')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrCircuitMode.setStatus('mandatory')
wfKernelTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1), )
if mibBuilder.loadTexts: wfKernelTable.setStatus('mandatory')
wfKernelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfKernelSlot"))
if mibBuilder.loadTexts: wfKernelEntry.setStatus('mandatory')
wfKernelSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelSlot.setStatus('mandatory')
wfKernelMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemorySize.setStatus('mandatory')
wfKernelMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemoryFree.setStatus('mandatory')
wfKernelMemorySegsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemorySegsTotal.setStatus('mandatory')
wfKernelMemorySegsFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemorySegsFree.setStatus('mandatory')
wfKernelMemoryMaxSegFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemoryMaxSegFree.setStatus('mandatory')
wfKernelBuffersTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBuffersTotal.setStatus('mandatory')
wfKernelBuffersFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBuffersFree.setStatus('mandatory')
wfKernelTasksTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelTasksTotal.setStatus('mandatory')
wfKernelTasksInQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelTasksInQueue.setStatus('mandatory')
wfKernelTimersTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelTimersTotal.setStatus('mandatory')
wfKernelTimersActive = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelTimersActive.setStatus('mandatory')
wfKernelBufOwnerTask1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask1.setStatus('mandatory')
wfKernelBufOwnerTask1Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask1Bufs.setStatus('mandatory')
wfKernelBufOwnerTask2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask2.setStatus('mandatory')
wfKernelBufOwnerTask2Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask2Bufs.setStatus('mandatory')
wfKernelBufOwnerTask3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask3.setStatus('mandatory')
wfKernelBufOwnerTask3Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask3Bufs.setStatus('mandatory')
wfKernelBufOwnerTask4 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask4.setStatus('mandatory')
wfKernelBufOwnerTask4Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask4Bufs.setStatus('mandatory')
wfKernelBufOwnerTask5 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask5.setStatus('mandatory')
wfKernelBufOwnerTask5Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask5Bufs.setStatus('mandatory')
wfKernelBufOwnerTask6 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask6.setStatus('mandatory')
wfKernelBufOwnerTask6Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask6Bufs.setStatus('mandatory')
wfKernelBufOwnerTask7 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask7.setStatus('mandatory')
wfKernelBufOwnerTask7Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask7Bufs.setStatus('mandatory')
wfKernelBufOwnerTask8 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask8.setStatus('mandatory')
wfKernelBufOwnerTask8Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask8Bufs.setStatus('mandatory')
wfKernelBufOwnerTask9 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask9.setStatus('mandatory')
wfKernelBufOwnerTask9Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask9Bufs.setStatus('mandatory')
wfKernelBufOwnerTask10 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask10.setStatus('mandatory')
wfKernelBufOwnerTask10Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask10Bufs.setStatus('mandatory')
wfKernelMemOwnerTask1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask1.setStatus('mandatory')
wfKernelMemOwnerTask1Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask1Size.setStatus('mandatory')
wfKernelMemOwnerTask2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask2.setStatus('mandatory')
wfKernelMemOwnerTask2Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask2Size.setStatus('mandatory')
wfKernelMemOwnerTask3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask3.setStatus('mandatory')
wfKernelMemOwnerTask3Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask3Size.setStatus('mandatory')
wfKernelMemOwnerTask4 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask4.setStatus('mandatory')
wfKernelMemOwnerTask4Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask4Size.setStatus('mandatory')
wfKernelMemOwnerTask5 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask5.setStatus('mandatory')
wfKernelMemOwnerTask5Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask5Size.setStatus('mandatory')
wfKernelMemOwnerTask6 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask6.setStatus('mandatory')
wfKernelMemOwnerTask6Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask6Size.setStatus('mandatory')
wfKernelMemOwnerTask7 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask7.setStatus('mandatory')
wfKernelMemOwnerTask7Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask7Size.setStatus('mandatory')
wfKernelMemOwnerTask8 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 47), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask8.setStatus('mandatory')
wfKernelMemOwnerTask8Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask8Size.setStatus('mandatory')
wfKernelMemOwnerTask9 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask9.setStatus('mandatory')
wfKernelMemOwnerTask9Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask9Size.setStatus('mandatory')
wfKernelMemOwnerTask10 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 51), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask10.setStatus('mandatory')
wfKernelMemOwnerTask10Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask10Size.setStatus('mandatory')
wfHwBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 1, 1))
wfHwBpIdOpt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 16640, 16896))).clone(namedValues=NamedValues(("acefn", 1), ("aceln", 2), ("acecn", 3), ("fns", 4), ("in", 5), ("freln", 16640), ("frecn", 16896)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwBpIdOpt.setStatus('mandatory')
wfHwBpRev = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwBpRev.setStatus('mandatory')
wfHwBpSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwBpSerialNumber.setStatus('mandatory')
wfBCNPwrSupply1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("fail", 2), ("notpresent", 3))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBCNPwrSupply1.setStatus('mandatory')
wfBCNPwrSupply2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("fail", 2), ("notpresent", 3))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBCNPwrSupply2.setStatus('mandatory')
wfBCNPwrSupply3 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("fail", 2), ("notpresent", 3))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBCNPwrSupply3.setStatus('mandatory')
wfBCNPwrSupply4 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("fail", 2), ("notpresent", 3))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBCNPwrSupply4.setStatus('mandatory')
wfBCNFanStatus = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("fail", 2), ("notpresent", 3))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBCNFanStatus.setStatus('mandatory')
wfBCNTemperature = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("caution", 2), ("notpresent", 3))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBCNTemperature.setStatus('mandatory')
wfHwTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 1, 2), )
if mibBuilder.loadTexts: wfHwTable.setStatus('mandatory')
wfHwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfHwSlot"))
if mibBuilder.loadTexts: wfHwEntry.setStatus('mandatory')
wfHwSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwSlot.setStatus('mandatory')
wfHwModIdOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 16, 17, 24, 32, 33, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 88, 89, 104, 112, 113, 114, 116, 117, 118, 119, 120, 132, 156, 160, 161, 162, 164, 165, 168, 176, 184, 192, 193, 194, 195, 196, 197, 198, 199, 208, 216, 217, 224, 225, 8448))).clone(namedValues=NamedValues(("enet1", 1), ("enet2", 8), ("sync1", 16), ("sync1a", 17), ("t11", 24), ("dse1", 32), ("dse1a", 33), ("dst416", 40), ("sst416a", 41), ("dst4", 42), ("sst4a", 43), ("sst416", 44), ("stok416", 45), ("sst4", 46), ("stok4", 47), ("floppy", 48), ("t12", 56), ("t12a", 57), ("st1", 58), ("t156k", 60), ("e1", 61), ("st156k", 62), ("se1", 63), ("t12n", 64), ("st1n", 65), ("t156kn", 66), ("st156kn", 67), ("e1n", 68), ("se1n", 69), ("sync", 80), ("sync2a", 81), ("cmcfddi", 88), ("iphfddi", 89), ("dt", 104), ("dsde1", 112), ("dsde1a", 113), ("enet", 114), ("dse2", 116), ("dse2a", 117), ("sse", 118), ("ssea", 119), ("dsde10bt", 120), ("enet3", 132), ("dsde2", 156), ("oldqenf", 160), ("denf", 161), ("qenf", 162), ("qef", 164), ("def", 165), ("mct1", 168), ("dtok", 176), ("mce1", 184), ("wffddi2m", 192), ("wffddi1m", 193), ("wffddi2s", 194), ("wffddi1s", 195), ("wffddi2mf", 196), ("wffddi1mf", 197), ("wffddi2sf", 198), ("wffddi1sf", 199), ("fnsdse", 208), ("fnsdsdt", 216), ("fnsdst", 217), ("dhssi", 224), ("shssi", 225), ("srml", 8448)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwModIdOpt.setStatus('mandatory')
wfHwModRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwModRev.setStatus('mandatory')
wfHwModSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwModSerialNumber.setStatus('mandatory')
wfHwMotherBdIdOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 256, 8704))).clone(namedValues=NamedValues(("sysctrl", 1), ("ace12", 2), ("ace25", 3), ("ace32", 4), ("fns", 5), ("in", 6), ("fre", 256), ("srmf", 8704)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwMotherBdIdOpt.setStatus('mandatory')
wfHwMotherBdRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwMotherBdRev.setStatus('mandatory')
wfHwMotherBdSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwMotherBdSerialNumber.setStatus('mandatory')
wfHwDaughterBdIdOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 4352, 4608))).clone(namedValues=NamedValues(("sysctrl", 1), ("ace68020mhz12", 2), ("ace68020mhz25", 3), ("ace68030mhz32", 4), ("fre68040mhz25", 4352), ("fre68040mhz33", 4608)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwDaughterBdIdOpt.setStatus('mandatory')
wfHwDaughterBdRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwDaughterBdRev.setStatus('mandatory')
wfHwDaughterBdSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwDaughterBdSerialNumber.setStatus('mandatory')
wfHwBabyBdIdOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwBabyBdIdOpt.setStatus('mandatory')
wfHwBabyBdRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwBabyBdRev.setStatus('mandatory')
wfHwBabyBdSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwBabyBdSerialNumber.setStatus('mandatory')
wfHwDiagPromRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwDiagPromRev.setStatus('mandatory')
wfHwDiagPromDate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwDiagPromDate.setStatus('mandatory')
wfHwDiagPromSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwDiagPromSource.setStatus('mandatory')
wfHwBootPromRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwBootPromRev.setStatus('mandatory')
wfHwBootPromDate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwBootPromDate.setStatus('mandatory')
wfHwBootPromSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwBootPromSource.setStatus('mandatory')
wfHwSparePromRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwSparePromRev.setStatus('mandatory')
wfHwSparePromDate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwSparePromDate.setStatus('mandatory')
wfHwSparePromSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwSparePromSource.setStatus('mandatory')
wfHwFileSysPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("filesys", 1), ("nofilesys", 2))).clone('nofilesys')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwFileSysPresent.setStatus('mandatory')
wfHssiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 7), )
if mibBuilder.loadTexts: wfHssiTable.setStatus('mandatory')
wfHssiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfHssiSlot"), (0, "Wellfleet-Series7-MIB", "wfHssiConnector"))
if mibBuilder.loadTexts: wfHssiEntry.setStatus('mandatory')
wfHssiDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiDelete.setStatus('mandatory')
wfHssiDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiDisable.setStatus('mandatory')
wfHssiState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("up", 1), ("lmiwait", 2), ("boflwait", 3), ("cawait", 4), ("init", 5), ("notpresent", 6))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiState.setStatus('mandatory')
wfHssiSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 14))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiSlot.setStatus('mandatory')
wfHssiConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiConnector.setStatus('mandatory')
wfHssiCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1023))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1023)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiCct.setStatus('mandatory')
wfHssiBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiBofl.setStatus('mandatory')
wfHssiBoflTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 60, 1))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 60), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiBoflTmo.setStatus('mandatory')
wfHssiMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4500, 4495))).clone(namedValues=NamedValues(("minimum", 3), ("maximum", 4500), ("default", 4495))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiMtu.setStatus('mandatory')
wfHssiMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiMadr.setStatus('mandatory')
wfHssiService = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transparent", 1), ("undefined", 2))).clone('transparent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiService.setStatus('mandatory')
wfHssiWanProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("standard", 1), ("passthru", 2), ("ppp", 3), ("smds", 4), ("framerelay", 5))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiWanProtocol.setStatus('mandatory')
wfHssiTransmissionInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("dsone", 1), ("dsthree", 3))).clone('dsthree')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiTransmissionInterface.setStatus('mandatory')
wfHssiExternalClkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(307200, 52638515, 46359642))).clone(namedValues=NamedValues(("minimum", 307200), ("maximum", 52638515), ("default", 46359642))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiExternalClkSpeed.setStatus('mandatory')
wfHssiCrcSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc16bit", 1), ("crc32bit", 2))).clone('crc32bit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiCrcSize.setStatus('mandatory')
wfHssiInternalClkTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiInternalClkTestMode.setStatus('mandatory')
wfHssiRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxOctets.setStatus('mandatory')
wfHssiRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxFrames.setStatus('mandatory')
wfHssiTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxOctets.setStatus('mandatory')
wfHssiTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxFrames.setStatus('mandatory')
wfHssiInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiInDiscards.setStatus('mandatory')
wfHssiInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiInErrors.setStatus('mandatory')
wfHssiOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiOutDiscards.setStatus('mandatory')
wfHssiOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiOutErrors.setStatus('mandatory')
wfHssiRxLongFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxLongFrames.setStatus('mandatory')
wfHssiTxClipFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxClipFrames.setStatus('mandatory')
wfHssiRxReplenMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxReplenMisses.setStatus('mandatory')
wfHssiLastRxErrorCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiLastRxErrorCtrl.setStatus('mandatory')
wfHssiRxCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxCrcErrors.setStatus('mandatory')
wfHssiRxOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxOverruns.setStatus('mandatory')
wfHssiRxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxAborts.setStatus('mandatory')
wfHssiLastTxErrorCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiLastTxErrorCtrl.setStatus('mandatory')
wfHssiTxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxAborts.setStatus('mandatory')
wfHssiTxUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxUnderruns.setStatus('mandatory')
wfHssiRxRingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxRingErrors.setStatus('mandatory')
wfHssiLastRxRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiLastRxRingState.setStatus('mandatory')
wfHssiRxRingOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxRingOverruns.setStatus('mandatory')
wfHssiTxRingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxRingErrors.setStatus('mandatory')
wfHssiLastTxRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiLastTxRingState.setStatus('mandatory')
wfHssiPortOpErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiPortOpErrors.setStatus('mandatory')
wfHssiInternOpErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiInternOpErrors.setStatus('mandatory')
wfHssiHostErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiHostErrors.setStatus('mandatory')
wfHssiRxProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxProcessings.setStatus('mandatory')
wfHssiTxProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxProcessings.setStatus('mandatory')
wfHssiTxCmplProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxCmplProcessings.setStatus('mandatory')
wfHssiIntrProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiIntrProcessings.setStatus('mandatory')
wfHssiBoflNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 127, 5))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 127), ("default", 5))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiBoflNum.setStatus('mandatory')
wfHssiBoflLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(22, 4450, 100))).clone(namedValues=NamedValues(("minimum", 22), ("maximum", 4450), ("default", 100))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiBoflLen.setStatus('mandatory')
wfHssiRxBufferLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(64, 128))).clone(namedValues=NamedValues(("length4k", 64), ("length8k", 128))).clone('length4k')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiRxBufferLength.setStatus('mandatory')
wfHssiMemPageLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("length32", 1), ("length256", 3))).clone('length32')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiMemPageLength.setStatus('mandatory')
wfHssiRxRingLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255, 64))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255), ("default", 64))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiRxRingLength.setStatus('mandatory')
wfHssiTxRingLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255, 127))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255), ("default", 127))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiTxRingLength.setStatus('mandatory')
wfHssiRxFifoWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 255, 2))).clone(namedValues=NamedValues(("minimum", 2), ("maximum", 255), ("default", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiRxFifoWatermark.setStatus('mandatory')
wfHssiTxFifoWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 255, 16))).clone(namedValues=NamedValues(("minimum", 2), ("maximum", 255), ("default", 16))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiTxFifoWatermark.setStatus('mandatory')
wfHssiMaxRxMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255, 1))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 255), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiMaxRxMemory.setStatus('mandatory')
wfHssiLinkInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("ace25", 2), ("ace32", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiLinkInterface.setStatus('mandatory')
wfHssiTurboBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiTurboBofl.setStatus('mandatory')
wfHwfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1), )
if mibBuilder.loadTexts: wfHwfTable.setStatus('mandatory')
wfHwfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfHwfSlot"))
if mibBuilder.loadTexts: wfHwfEntry.setStatus('mandatory')
wfHwfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHwfDelete.setStatus('mandatory')
wfHwfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHwfEnable.setStatus('mandatory')
wfHwfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfState.setStatus('mandatory')
wfHwfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 14))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfSlot.setStatus('mandatory')
wfHwfAvailableLines = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfAvailableLines.setStatus('mandatory')
wfHwfLineTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2), )
if mibBuilder.loadTexts: wfHwfLineTable.setStatus('mandatory')
wfHwfLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfHwfLineSlot"), (0, "Wellfleet-Series7-MIB", "wfHwfLineNumber"))
if mibBuilder.loadTexts: wfHwfLineEntry.setStatus('mandatory')
wfHwfLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("disabled", 2), ("full", 3))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineState.setStatus('mandatory')
wfHwfLineSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineSlot.setStatus('mandatory')
wfHwfLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineNumber.setStatus('mandatory')
wfHwfLineCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineCct.setStatus('mandatory')
wfHwfLineCapableMaxTblSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineCapableMaxTblSize.setStatus('mandatory')
wfHwfLineCurrentTblSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineCurrentTblSize.setStatus('mandatory')
wfHwfLineCurrentUsedEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineCurrentUsedEntries.setStatus('mandatory')
wfHwfLineDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 6, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHwfLineDroppedFrames.setStatus('mandatory')
wfMod = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 1, 3))
wfModState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("init", 1))))
if mibBuilder.loadTexts: wfModState.setStatus('mandatory')
wfModSlot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 2), Integer32())
if mibBuilder.loadTexts: wfModSlot.setStatus('mandatory')
wfModIdOpt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 3), Integer32())
if mibBuilder.loadTexts: wfModIdOpt.setStatus('mandatory')
wfModRev = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 4), Integer32())
if mibBuilder.loadTexts: wfModRev.setStatus('mandatory')
wfModProm = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 5), Integer32())
if mibBuilder.loadTexts: wfModProm.setStatus('mandatory')
wfModMidr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 6), Integer32())
if mibBuilder.loadTexts: wfModMidr.setStatus('mandatory')
wfModMled = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 7), Integer32())
if mibBuilder.loadTexts: wfModMled.setStatus('mandatory')
wfModMisr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 8), Integer32())
if mibBuilder.loadTexts: wfModMisr.setStatus('mandatory')
wfModSnprom = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 9), Integer32())
if mibBuilder.loadTexts: wfModSnprom.setStatus('mandatory')
wfModMadr1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 10), OctetString())
if mibBuilder.loadTexts: wfModMadr1.setStatus('mandatory')
wfModMadr2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 11), OctetString())
if mibBuilder.loadTexts: wfModMadr2.setStatus('mandatory')
wfModMadr3 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 12), OctetString())
if mibBuilder.loadTexts: wfModMadr3.setStatus('mandatory')
wfModMadr4 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 13), OctetString())
if mibBuilder.loadTexts: wfModMadr4.setStatus('mandatory')
wfModLance1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 14), Integer32())
if mibBuilder.loadTexts: wfModLance1.setStatus('mandatory')
wfModLance2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 15), Integer32())
if mibBuilder.loadTexts: wfModLance2.setStatus('mandatory')
wfModMk50251 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 16), Integer32())
if mibBuilder.loadTexts: wfModMk50251.setStatus('mandatory')
wfModMk50252 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 17), Integer32())
if mibBuilder.loadTexts: wfModMk50252.setStatus('mandatory')
wfModMk50253 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 18), Integer32())
if mibBuilder.loadTexts: wfModMk50253.setStatus('mandatory')
wfModMk50254 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 19), Integer32())
if mibBuilder.loadTexts: wfModMk50254.setStatus('mandatory')
wfModSicr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 20), Integer32())
if mibBuilder.loadTexts: wfModSicr.setStatus('mandatory')
wfModSbrr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 21), Integer32())
if mibBuilder.loadTexts: wfModSbrr.setStatus('mandatory')
wfMod8530 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 22), Integer32())
if mibBuilder.loadTexts: wfMod8530.setStatus('mandatory')
wfModCar = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 23), Integer32())
if mibBuilder.loadTexts: wfModCar.setStatus('mandatory')
wfModDefaA = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 24), Integer32())
if mibBuilder.loadTexts: wfModDefaA.setStatus('mandatory')
wfModCamALock = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 25), Integer32())
if mibBuilder.loadTexts: wfModCamALock.setStatus('mandatory')
wfModCamAUnlock = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 26), Integer32())
if mibBuilder.loadTexts: wfModCamAUnlock.setStatus('mandatory')
wfModDefaB = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 27), Integer32())
if mibBuilder.loadTexts: wfModDefaB.setStatus('mandatory')
wfModCamBLock = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 28), Integer32())
if mibBuilder.loadTexts: wfModCamBLock.setStatus('mandatory')
wfModCamBUnlock = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 29), Integer32())
if mibBuilder.loadTexts: wfModCamBUnlock.setStatus('mandatory')
wfModIlacc1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 30), Integer32())
if mibBuilder.loadTexts: wfModIlacc1.setStatus('mandatory')
wfModIlacc2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 31), Integer32())
if mibBuilder.loadTexts: wfModIlacc2.setStatus('mandatory')
wfModIlacc3 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 32), Integer32())
if mibBuilder.loadTexts: wfModIlacc3.setStatus('mandatory')
wfModIlacc4 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 33), Integer32())
if mibBuilder.loadTexts: wfModIlacc4.setStatus('mandatory')
wfModTms3801 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 34), Integer32())
if mibBuilder.loadTexts: wfModTms3801.setStatus('mandatory')
wfModTms3802 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 35), Integer32())
if mibBuilder.loadTexts: wfModTms3802.setStatus('mandatory')
wfModTocr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 36), Integer32())
if mibBuilder.loadTexts: wfModTocr.setStatus('mandatory')
wfModTsra = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 37), Integer32())
if mibBuilder.loadTexts: wfModTsra.setStatus('mandatory')
wfModMuxram1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 38), Integer32())
if mibBuilder.loadTexts: wfModMuxram1.setStatus('mandatory')
wfModMuxram2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 39), Integer32())
if mibBuilder.loadTexts: wfModMuxram2.setStatus('mandatory')
wfModTicr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 40), Integer32())
if mibBuilder.loadTexts: wfModTicr.setStatus('mandatory')
wfModFramer1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 41), Integer32())
if mibBuilder.loadTexts: wfModFramer1.setStatus('mandatory')
wfModFramer2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 42), Integer32())
if mibBuilder.loadTexts: wfModFramer2.setStatus('mandatory')
wfModFsi1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 43), Integer32())
if mibBuilder.loadTexts: wfModFsi1.setStatus('mandatory')
wfModMac1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 44), Integer32())
if mibBuilder.loadTexts: wfModMac1.setStatus('mandatory')
wfModElmA1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 45), Integer32())
if mibBuilder.loadTexts: wfModElmA1.setStatus('mandatory')
wfModElmB1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 46), Integer32())
if mibBuilder.loadTexts: wfModElmB1.setStatus('mandatory')
wfModMcr1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 47), Integer32())
if mibBuilder.loadTexts: wfModMcr1.setStatus('mandatory')
wfModHssiFsi1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 48), Integer32())
if mibBuilder.loadTexts: wfModHssiFsi1.setStatus('mandatory')
wfModHssiFsi2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 49), Integer32())
if mibBuilder.loadTexts: wfModHssiFsi2.setStatus('mandatory')
wfModHssiUga1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 50), Integer32())
if mibBuilder.loadTexts: wfModHssiUga1.setStatus('mandatory')
wfModHssiUga2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 51), Integer32())
if mibBuilder.loadTexts: wfModHssiUga2.setStatus('mandatory')
wfModHicr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 52), Integer32())
if mibBuilder.loadTexts: wfModHicr.setStatus('mandatory')
wfModHicrData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 53), Integer32())
if mibBuilder.loadTexts: wfModHicrData.setStatus('mandatory')
wfModHlsr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 54), Integer32())
if mibBuilder.loadTexts: wfModHlsr.setStatus('mandatory')
wfModHlsrData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 1, 3, 55), Integer32())
if mibBuilder.loadTexts: wfModHlsrData.setStatus('mandatory')
wfIf = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 1))
wfIfNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfNumber.setStatus('mandatory')
wfIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2), )
if mibBuilder.loadTexts: wfIfTable.setStatus('mandatory')
wfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIfIndex"))
if mibBuilder.loadTexts: wfIfEntry.setStatus('mandatory')
wfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfIndex.setStatus('mandatory')
wfIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfDescr.setStatus('mandatory')
wfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfType.setStatus('mandatory')
wfIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfMtu.setStatus('mandatory')
wfIfSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfSpeed.setStatus('mandatory')
wfIfPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfPhysAddress.setStatus('mandatory')
wfIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfAdminStatus.setStatus('mandatory')
wfIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfOperStatus.setStatus('mandatory')
wfIfLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfLastChange.setStatus('mandatory')
wfIfInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfInOctets.setStatus('mandatory')
wfIfInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfInUcastPkts.setStatus('mandatory')
wfIfInNUCastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfInNUCastPkts.setStatus('mandatory')
wfIfInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfInDiscards.setStatus('mandatory')
wfIfInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfInErrors.setStatus('mandatory')
wfIfInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfInUnknownProtos.setStatus('mandatory')
wfIfOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfOutOctets.setStatus('mandatory')
wfIfOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfOutUcastPkts.setStatus('mandatory')
wfIfOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfOutNUcastPkts.setStatus('mandatory')
wfIfOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfOutDiscards.setStatus('mandatory')
wfIfOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfOutErrors.setStatus('mandatory')
wfIfOutQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfOutQLen.setStatus('mandatory')
wfIfSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 3, 2, 1, 22), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIfSpecific.setStatus('mandatory')
wfIpBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 1))
wfIpBaseCreate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBaseCreate.setStatus('mandatory')
wfIpBaseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBaseEnable.setStatus('mandatory')
wfIpBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseState.setStatus('mandatory')
wfIpBaseForwarding = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("notforwarding", 2))).clone('forwarding')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBaseForwarding.setStatus('mandatory')
wfIpBaseDefaultTTL = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(30, 255))).clone(namedValues=NamedValues(("default", 30), ("ttlmax", 255))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBaseDefaultTTL.setStatus('mandatory')
wfIpBaseRipDiameter = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15, 15))).clone(namedValues=NamedValues(("dflt", 15), ("maximum", 15))).clone('dflt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBaseRipDiameter.setStatus('mandatory')
wfIpBaseRtEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2), )
if mibBuilder.loadTexts: wfIpBaseRtEntryTable.setStatus('mandatory')
wfIpBaseRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpBaseRouteDest"))
if mibBuilder.loadTexts: wfIpBaseRtEntry.setStatus('mandatory')
wfIpBaseRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteDest.setStatus('mandatory')
wfIpBaseRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteIfIndex.setStatus('mandatory')
wfIpBaseRouteMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteMetric1.setStatus('mandatory')
wfIpBaseRouteMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteMetric2.setStatus('mandatory')
wfIpBaseRouteMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteMetric3.setStatus('mandatory')
wfIpBaseRouteMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteMetric4.setStatus('mandatory')
wfIpBaseRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteNextHop.setStatus('mandatory')
wfIpBaseRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("indirect", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteType.setStatus('mandatory')
wfIpBaseRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("is", 9), ("ospf", 13), ("bgp", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteProto.setStatus('mandatory')
wfIpBaseRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteAge.setStatus('mandatory')
wfIpBaseRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteMask.setStatus('mandatory')
wfIpBaseRouteMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteMetric5.setStatus('mandatory')
wfIpBaseRouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 2, 1, 13), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseRouteInfo.setStatus('mandatory')
wfIpBaseHostEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 3), )
if mibBuilder.loadTexts: wfIpBaseHostEntryTable.setStatus('mandatory')
wfIpBaseHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpBaseNetToMediaNetAddress"))
if mibBuilder.loadTexts: wfIpBaseHostEntry.setStatus('mandatory')
wfIpBaseNetToMediaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseNetToMediaIfIndex.setStatus('mandatory')
wfIpBaseNetToMediaPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseNetToMediaPhysAddress.setStatus('mandatory')
wfIpBaseNetToMediaNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpBaseNetToMediaNetAddress.setStatus('mandatory')
wfIpBaseNetToMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpBaseNetToMediaType.setStatus('mandatory')
wfIpInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4), )
if mibBuilder.loadTexts: wfIpInterfaceTable.setStatus('mandatory')
wfIpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpInterfaceAddr"), (0, "Wellfleet-Series7-MIB", "wfIpInterfaceCircuit"))
if mibBuilder.loadTexts: wfIpInterfaceEntry.setStatus('mandatory')
wfIpInterfaceCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceCreate.setStatus('mandatory')
wfIpInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceEnable.setStatus('mandatory')
wfIpInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("invalid", 4), ("notpres", 5))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceState.setStatus('mandatory')
wfIpInterfaceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceAddr.setStatus('mandatory')
wfIpInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceCircuit.setStatus('mandatory')
wfIpInterfaceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceMask.setStatus('mandatory')
wfIpInterfaceCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 7), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceCost.setStatus('mandatory')
wfIpInterfaceCfgBcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceCfgBcastAddr.setStatus('mandatory')
wfIpInterfaceBcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceBcastAddr.setStatus('mandatory')
wfIpInterfaceMTUDiscovery = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceMTUDiscovery.setStatus('mandatory')
wfIpInterfaceAMR = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceAMR.setStatus('mandatory')
wfIpInterfaceASB = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceASB.setStatus('mandatory')
wfIpInterfaceAddressResolutionType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("arp", 1), ("probe", 2), ("ddn", 3), ("pdn", 4), ("inarp", 5), ("arpinarp", 6))).clone('arp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceAddressResolutionType.setStatus('mandatory')
wfIpInterfaceProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceProxy.setStatus('mandatory')
wfIpInterfaceHostCache = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 120, 180, 240, 300, 600, 900, 1200))).clone(namedValues=NamedValues(("cacheoff", 1), ("cache120", 120), ("cache180", 180), ("cache240", 240), ("cache300", 300), ("cache600", 600), ("cache900", 900), ("cache1200", 1200))).clone('cacheoff')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceHostCache.setStatus('mandatory')
wfIpInterfaceUdpXsumOn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceUdpXsumOn.setStatus('mandatory')
wfIpInterfaceCfgMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceCfgMacAddress.setStatus('mandatory')
wfIpInterfaceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceMacAddress.setStatus('mandatory')
wfIpInterfaceReasmMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceReasmMaxSize.setStatus('mandatory')
wfIpInterfaceMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceMaxInfo.setStatus('mandatory')
wfIpInterfaceInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceInReceives.setStatus('mandatory')
wfIpInterfaceInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceInHdrErrors.setStatus('mandatory')
wfIpInterfaceInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceInAddrErrors.setStatus('mandatory')
wfIpInterfaceForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceForwDatagrams.setStatus('mandatory')
wfIpInterfaceInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceInUnknownProtos.setStatus('mandatory')
wfIpInterfaceInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceInDiscards.setStatus('mandatory')
wfIpInterfaceInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceInDelivers.setStatus('mandatory')
wfIpInterfaceOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceOutRequests.setStatus('mandatory')
wfIpInterfaceOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceOutDiscards.setStatus('mandatory')
wfIpInterfaceOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceOutNoRoutes.setStatus('mandatory')
wfIpInterfaceReasmTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceReasmTimeout.setStatus('mandatory')
wfIpInterfaceReasmReqds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceReasmReqds.setStatus('mandatory')
wfIpInterfaceReasmOKs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceReasmOKs.setStatus('mandatory')
wfIpInterfaceReasmFails = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceReasmFails.setStatus('mandatory')
wfIpInterfaceFragOKs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceFragOKs.setStatus('mandatory')
wfIpInterfaceFragFails = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceFragFails.setStatus('mandatory')
wfIpInterfaceFragCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceFragCreates.setStatus('mandatory')
wfIpInterfaceIcmpInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInMsgs.setStatus('mandatory')
wfIpInterfaceIcmpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInErrors.setStatus('mandatory')
wfIpInterfaceIcmpInDestUnreachs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInDestUnreachs.setStatus('mandatory')
wfIpInterfaceIcmpInTimeExcds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInTimeExcds.setStatus('mandatory')
wfIpInterfaceIcmpInParmProbs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInParmProbs.setStatus('mandatory')
wfIpInterfaceIcmpInSrcQuenchs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInSrcQuenchs.setStatus('mandatory')
wfIpInterfaceIcmpInRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInRedirects.setStatus('mandatory')
wfIpInterfaceIcmpInEchos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInEchos.setStatus('mandatory')
wfIpInterfaceIcmpInEchoReps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInEchoReps.setStatus('mandatory')
wfIpInterfaceIcmpInTimestamps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInTimestamps.setStatus('mandatory')
wfIpInterfaceIcmpInTimestampReps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInTimestampReps.setStatus('mandatory')
wfIpInterfaceIcmpInAddrMasks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInAddrMasks.setStatus('mandatory')
wfIpInterfaceIcmpInAddrMaskReps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpInAddrMaskReps.setStatus('mandatory')
wfIpInterfaceIcmpOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutMsgs.setStatus('mandatory')
wfIpInterfaceIcmpOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutErrors.setStatus('mandatory')
wfIpInterfaceIcmpOutDestUnreachs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutDestUnreachs.setStatus('mandatory')
wfIpInterfaceIcmpOutTimeExcds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutTimeExcds.setStatus('mandatory')
wfIpInterfaceIcmpOutParmProbs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutParmProbs.setStatus('mandatory')
wfIpInterfaceIcmpOutSrcQuenchs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutSrcQuenchs.setStatus('mandatory')
wfIpInterfaceIcmpOutRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutRedirects.setStatus('mandatory')
wfIpInterfaceIcmpOutEchos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutEchos.setStatus('mandatory')
wfIpInterfaceIcmpOutEchoReps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutEchoReps.setStatus('mandatory')
wfIpInterfaceIcmpOutTimestamps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutTimestamps.setStatus('mandatory')
wfIpInterfaceIcmpOutTimestampReps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutTimestampReps.setStatus('mandatory')
wfIpInterfaceIcmpOutAddrMasks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutAddrMasks.setStatus('mandatory')
wfIpInterfaceIcmpOutAddrMaskReps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpInterfaceIcmpOutAddrMaskReps.setStatus('mandatory')
wfIpInterfaceTrEndStation = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceTrEndStation.setStatus('mandatory')
wfIpInterfaceSMDSGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 65), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceSMDSGroupAddress.setStatus('mandatory')
wfIpInterfaceSMDSArpReqAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 66), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceSMDSArpReqAddress.setStatus('mandatory')
wfIpInterfaceFRBcastDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 67), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceFRBcastDlci.setStatus('mandatory')
wfIpInterfaceFRMcast1Dlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 68), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceFRMcast1Dlci.setStatus('mandatory')
wfIpInterfaceFRMcast2Dlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 69), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceFRMcast2Dlci.setStatus('mandatory')
wfIpInterfaceRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceRedirect.setStatus('mandatory')
wfIpInterfaceEnetArpEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 4, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enet", 1), ("snap", 2), ("both", 3))).clone('enet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpInterfaceEnetArpEncaps.setStatus('mandatory')
wfIpStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5), )
if mibBuilder.loadTexts: wfIpStaticRouteTable.setStatus('mandatory')
wfIpStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpSrIpAddress"), (0, "Wellfleet-Series7-MIB", "wfIpSrIpNetMask"), (0, "Wellfleet-Series7-MIB", "wfIpSrIpAddressRt"))
if mibBuilder.loadTexts: wfIpStaticRouteEntry.setStatus('mandatory')
wfIpSrCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpSrCreate.setStatus('mandatory')
wfIpSrEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpSrEnable.setStatus('mandatory')
wfIpSrIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpSrIpAddress.setStatus('mandatory')
wfIpSrIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpSrIpNetMask.setStatus('mandatory')
wfIpSrCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("cost", 1))).clone('cost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpSrCost.setStatus('mandatory')
wfIpSrNextHopAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpSrNextHopAddr.setStatus('mandatory')
wfIpSrNextHopMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpSrNextHopMask.setStatus('mandatory')
wfIpSrPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16))).clone(namedValues=NamedValues(("pref", 16))).clone('pref')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpSrPreference.setStatus('mandatory')
wfIpSrIpAddressRt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpSrIpAddressRt.setStatus('mandatory')
wfIpSrValid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpSrValid.setStatus('mandatory')
wfIpAdjacentHostTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6), )
if mibBuilder.loadTexts: wfIpAdjacentHostTable.setStatus('mandatory')
wfIpAdjacentHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpAdjHostIpAddress"))
if mibBuilder.loadTexts: wfIpAdjacentHostEntry.setStatus('mandatory')
wfIpAdjHostCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpAdjHostCreate.setStatus('mandatory')
wfIpAdjHostEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpAdjHostEnable.setStatus('mandatory')
wfIpAdjHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpAdjHostIpAddress.setStatus('mandatory')
wfIpAdjHostIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpAdjHostIntf.setStatus('mandatory')
wfIpAdjHostIntfMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpAdjHostIntfMask.setStatus('mandatory')
wfIpAdjHostMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpAdjHostMacAddr.setStatus('mandatory')
wfIpAdjHostEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enet", 1), ("snap", 2))).clone('enet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpAdjHostEncaps.setStatus('mandatory')
wfIpAdjHostValid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2))).clone('valid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpAdjHostValid.setStatus('mandatory')
wfIpTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7), )
if mibBuilder.loadTexts: wfIpTrafficFilterTable.setStatus('mandatory')
wfIpTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpTrafficFilterInterface"), (0, "Wellfleet-Series7-MIB", "wfIpTrafficFilterCircuit"), (0, "Wellfleet-Series7-MIB", "wfIpTrafficFilterRuleNumber"), (0, "Wellfleet-Series7-MIB", "wfIpTrafficFilterFragment"))
if mibBuilder.loadTexts: wfIpTrafficFilterEntry.setStatus('mandatory')
wfIpTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpTrafficFilterCreate.setStatus('mandatory')
wfIpTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpTrafficFilterEnable.setStatus('mandatory')
wfIpTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpTrafficFilterStatus.setStatus('mandatory')
wfIpTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpTrafficFilterCounter.setStatus('mandatory')
wfIpTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpTrafficFilterDefinition.setStatus('mandatory')
wfIpTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 6), Integer32())
if mibBuilder.loadTexts: wfIpTrafficFilterReserved.setStatus('mandatory')
wfIpTrafficFilterInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpTrafficFilterInterface.setStatus('mandatory')
wfIpTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpTrafficFilterCircuit.setStatus('mandatory')
wfIpTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpTrafficFilterRuleNumber.setStatus('mandatory')
wfIpTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpTrafficFilterFragment.setStatus('mandatory')
wfRipIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1), )
if mibBuilder.loadTexts: wfRipIntfTable.setStatus('mandatory')
wfRipIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfRipInterfaceIndex"))
if mibBuilder.loadTexts: wfRipIntfEntry.setStatus('mandatory')
wfRipInterfaceCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipInterfaceCreate.setStatus('mandatory')
wfRipInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipInterfaceEnable.setStatus('mandatory')
wfRipInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipInterfaceState.setStatus('mandatory')
wfRipInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipInterfaceIndex.setStatus('mandatory')
wfRipInterfaceSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipInterfaceSupply.setStatus('mandatory')
wfRipInterfaceListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipInterfaceListen.setStatus('mandatory')
wfRipInterfaceDefaultRouteSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipInterfaceDefaultRouteSupply.setStatus('mandatory')
wfRipInterfaceDefaultRouteListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipInterfaceDefaultRouteListen.setStatus('mandatory')
wfRipInterfacePoisonedReversed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("poisoned", 1), ("actual", 2), ("split", 3))).clone('poisoned')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipInterfacePoisonedReversed.setStatus('mandatory')
wfArpBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1))
wfArpBaseCreate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpBaseCreate.setStatus('mandatory')
wfArpBaseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpBaseEnable.setStatus('mandatory')
wfArpBaseForwarding = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("notforwarding", 2))).clone('forwarding')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpBaseForwarding.setStatus('mandatory')
wfArpIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2), )
if mibBuilder.loadTexts: wfArpIntfTable.setStatus('mandatory')
wfArpIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfArpCctno"))
if mibBuilder.loadTexts: wfArpIntfEntry.setStatus('mandatory')
wfArpCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpCreate.setStatus('mandatory')
wfArpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfArpEnable.setStatus('mandatory')
wfArpCctno = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfArpCctno.setStatus('mandatory')
wfIpxBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1))
wfIpxBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBaseDelete.setStatus('mandatory')
wfIpxBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBaseDisable.setStatus('mandatory')
wfIpxBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("in", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseState.setStatus('mandatory')
wfIpxBaseCfgHostNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBaseCfgHostNumber.setStatus('mandatory')
wfIpxBaseActiveHostNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseActiveHostNumber.setStatus('mandatory')
wfIpxBaseNetCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseNetCount.setStatus('mandatory')
wfIpxBaseServiceCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseServiceCount.setStatus('mandatory')
wfIpxBaseLogFilter = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 16, 3, 17, 18, 19))).clone(namedValues=NamedValues(("debug", 1), ("info", 2), ("trace", 16), ("debuginfo", 3), ("debugtrace", 17), ("infotrace", 18), ("debuginfotrace", 19))).clone('trace')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBaseLogFilter.setStatus('mandatory')
wfIpxBaseNetTblSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(250))).clone(namedValues=NamedValues(("size", 250))).clone('size')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBaseNetTblSize.setStatus('mandatory')
wfIpxBaseRtEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2), )
if mibBuilder.loadTexts: wfIpxBaseRtEntryTable.setStatus('mandatory')
wfIpxBaseRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxBaseRouteDest"))
if mibBuilder.loadTexts: wfIpxBaseRtEntry.setStatus('mandatory')
wfIpxBaseRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseRouteDest.setStatus('mandatory')
wfIpxBaseRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseRouteIfIndex.setStatus('mandatory')
wfIpxBaseRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseRouteMetric.setStatus('mandatory')
wfIpxBaseRouteNextHopNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseRouteNextHopNetwork.setStatus('mandatory')
wfIpxBaseRouteNextHopHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseRouteNextHopHost.setStatus('mandatory')
wfIpxBaseRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("indirect", 4), ("static", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseRouteType.setStatus('mandatory')
wfIpxBaseRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("rip", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseRouteProto.setStatus('mandatory')
wfIpxBaseRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseRouteAge.setStatus('mandatory')
wfIpxBaseRouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 2, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseRouteInfo.setStatus('mandatory')
wfIpxBaseSapEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3), )
if mibBuilder.loadTexts: wfIpxBaseSapEntryTable.setStatus('mandatory')
wfIpxBaseSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxBaseSapIndex"))
if mibBuilder.loadTexts: wfIpxBaseSapEntry.setStatus('mandatory')
wfIpxBaseSapType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseSapType.setStatus('mandatory')
wfIpxBaseSapNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseSapNetwork.setStatus('mandatory')
wfIpxBaseSapHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseSapHost.setStatus('mandatory')
wfIpxBaseSapSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseSapSocket.setStatus('mandatory')
wfIpxBaseSapName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseSapName.setStatus('mandatory')
wfIpxBaseSapAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseSapAge.setStatus('mandatory')
wfIpxBaseSapHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseSapHops.setStatus('mandatory')
wfIpxBaseSapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseSapIndex.setStatus('mandatory')
wfIpxBaseSapIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 3, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBaseSapIntf.setStatus('mandatory')
wfIpxInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4), )
if mibBuilder.loadTexts: wfIpxInterfaceTable.setStatus('mandatory')
wfIpxInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxInterfaceNetworkNumber"), (0, "Wellfleet-Series7-MIB", "wfIpxInterfaceCircuit"))
if mibBuilder.loadTexts: wfIpxInterfaceEntry.setStatus('mandatory')
wfIpxInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceIndex.setStatus('mandatory')
wfIpxInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceDelete.setStatus('mandatory')
wfIpxInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceDisable.setStatus('mandatory')
wfIpxInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceState.setStatus('mandatory')
wfIpxInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceCircuit.setStatus('mandatory')
wfIpxInterfaceNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceNetworkNumber.setStatus('mandatory')
wfIpxInterfaceCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("cost", 1))).clone('cost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceCost.setStatus('mandatory')
wfIpxInterfaceXsumOn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceXsumOn.setStatus('mandatory')
wfIpxInterfaceCfgEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernet", 1), ("lsap", 2), ("novell", 3), ("snap", 4))).clone('ethernet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceCfgEncaps.setStatus('mandatory')
wfIpxInterfaceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceMacAddress.setStatus('mandatory')
wfIpxInterfaceSMDSGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceSMDSGroupAddress.setStatus('mandatory')
wfIpxInterfaceMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceMaxInfo.setStatus('mandatory')
wfIpxInterfaceInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceInReceives.setStatus('mandatory')
wfIpxInterfaceInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceInHdrErrors.setStatus('mandatory')
wfIpxInterfaceInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceInAddrErrors.setStatus('mandatory')
wfIpxInterfaceForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceForwDatagrams.setStatus('mandatory')
wfIpxInterfaceInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceInUnknownProtos.setStatus('mandatory')
wfIpxInterfaceInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceInDiscards.setStatus('mandatory')
wfIpxInterfaceInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceInDelivers.setStatus('mandatory')
wfIpxInterfaceOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceOutRequests.setStatus('mandatory')
wfIpxInterfaceOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceOutDiscards.setStatus('mandatory')
wfIpxInterfaceOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceOutNoRoutes.setStatus('mandatory')
wfIpxInterfaceTrEndStation = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceTrEndStation.setStatus('mandatory')
wfIpxInterfaceNetbiosAccept = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceNetbiosAccept.setStatus('mandatory')
wfIpxInterfaceNetbiosDeliver = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceNetbiosDeliver.setStatus('mandatory')
wfIpxInterfaceWanSapPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceWanSapPeriod.setStatus('mandatory')
wfIpxInterfaceFRBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 27), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceFRBcast.setStatus('mandatory')
wfIpxInterfaceFRMcast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 28), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceFRMcast.setStatus('mandatory')
wfIpxInterfaceEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernet", 1), ("lsap", 2), ("novell", 3), ("snap", 4))).clone('ethernet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceEncaps.setStatus('mandatory')
wfIpxInterfaceSplit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxInterfaceSplit.setStatus('mandatory')
wfIpxInterfaceCacheHit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 4, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxInterfaceCacheHit.setStatus('mandatory')
wfIpxRipIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 5), )
if mibBuilder.loadTexts: wfIpxRipIntfTable.setStatus('mandatory')
wfIpxRipIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxRipInterfaceIndex"))
if mibBuilder.loadTexts: wfIpxRipIntfEntry.setStatus('mandatory')
wfIpxRipInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipInterfaceDelete.setStatus('mandatory')
wfIpxRipInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipInterfaceDisable.setStatus('mandatory')
wfIpxRipInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRipInterfaceState.setStatus('mandatory')
wfIpxRipInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRipInterfaceIndex.setStatus('mandatory')
wfIpxRipInterfaceSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipInterfaceSupply.setStatus('mandatory')
wfIpxRipInterfaceListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipInterfaceListen.setStatus('mandatory')
wfIpxAdjacentHostTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 6), )
if mibBuilder.loadTexts: wfIpxAdjacentHostTable.setStatus('mandatory')
wfIpxAdjacentHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxAhTargHostNetwork"), (0, "Wellfleet-Series7-MIB", "wfIpxAhTargHostId"))
if mibBuilder.loadTexts: wfIpxAdjacentHostEntry.setStatus('mandatory')
wfIpxAhDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAhDelete.setStatus('mandatory')
wfIpxAhDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAhDisable.setStatus('mandatory')
wfIpxAhTargHostNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 6, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAhTargHostNetwork.setStatus('mandatory')
wfIpxAhTargHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 6, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAhTargHostId.setStatus('mandatory')
wfIpxAhNextHopIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 6, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAhNextHopIntf.setStatus('mandatory')
wfIpxAhDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 6, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAhDlci.setStatus('mandatory')
wfIpxStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 7), )
if mibBuilder.loadTexts: wfIpxStaticRouteTable.setStatus('mandatory')
wfIpxStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 7, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxSrTargNetwork"), (0, "Wellfleet-Series7-MIB", "wfIpxSrNextHopNetwork"))
if mibBuilder.loadTexts: wfIpxStaticRouteEntry.setStatus('mandatory')
wfIpxSrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSrDelete.setStatus('mandatory')
wfIpxSrDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSrDisable.setStatus('mandatory')
wfIpxSrTargNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 7, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSrTargNetwork.setStatus('mandatory')
wfIpxSrCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 7, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSrCost.setStatus('mandatory')
wfIpxSrNextHopNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 7, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSrNextHopNetwork.setStatus('mandatory')
wfIpxSrNextHopHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 7, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSrNextHopHost.setStatus('mandatory')
wfIpxSrTargNetworkRt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSrTargNetworkRt.setStatus('mandatory')
wfIpxNetBiosStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 8), )
if mibBuilder.loadTexts: wfIpxNetBiosStaticRouteTable.setStatus('mandatory')
wfIpxNetBiosStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 8, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxNetBiosSrTargNetwork"), (0, "Wellfleet-Series7-MIB", "wfIpxNetBiosSrIntf"))
if mibBuilder.loadTexts: wfIpxNetBiosStaticRouteEntry.setStatus('mandatory')
wfIpxNetBiosSrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxNetBiosSrDelete.setStatus('mandatory')
wfIpxNetBiosSrDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxNetBiosSrDisable.setStatus('mandatory')
wfIpxNetBiosSrTargNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 8, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxNetBiosSrTargNetwork.setStatus('mandatory')
wfIpxNetBiosSrName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 8, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxNetBiosSrName.setStatus('mandatory')
wfIpxNetBiosSrIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 8, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxNetBiosSrIntf.setStatus('mandatory')
wfIpxNetBiosSrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxNetBiosSrIndex.setStatus('mandatory')
wfIpxSapNetLvlFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 9), )
if mibBuilder.loadTexts: wfIpxSapNetLvlFilterTable.setStatus('mandatory')
wfIpxSapNetLvlFilter = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 9, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxSapNetLvlIntf"), (0, "Wellfleet-Series7-MIB", "wfIpxSapNetLvlIndex"))
if mibBuilder.loadTexts: wfIpxSapNetLvlFilter.setStatus('mandatory')
wfIpxSapNetLvlDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapNetLvlDelete.setStatus('mandatory')
wfIpxSapNetLvlDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapNetLvlDisable.setStatus('mandatory')
wfIpxSapNetLvlTargNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 9, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapNetLvlTargNetwork.setStatus('mandatory')
wfIpxSapNetLvlType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 9, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapNetLvlType.setStatus('mandatory')
wfIpxSapNetLvlAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapNetLvlAction.setStatus('mandatory')
wfIpxSapNetLvlIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 9, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapNetLvlIntf.setStatus('mandatory')
wfIpxSapNetLvlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapNetLvlIndex.setStatus('mandatory')
wfIpxSapServtLvlFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 10), )
if mibBuilder.loadTexts: wfIpxSapServtLvlFilterTable.setStatus('mandatory')
wfIpxSapServLvlFilter = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 10, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxSapServLvlIntf"), (0, "Wellfleet-Series7-MIB", "wfIpxSapServLvlIndex"))
if mibBuilder.loadTexts: wfIpxSapServLvlFilter.setStatus('mandatory')
wfIpxSapServLvlDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapServLvlDelete.setStatus('mandatory')
wfIpxSapServLvlDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapServLvlDisable.setStatus('mandatory')
wfIpxSapServLvlTargServer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 10, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapServLvlTargServer.setStatus('mandatory')
wfIpxSapServLvlType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 10, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapServLvlType.setStatus('mandatory')
wfIpxSapServLvlAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapServLvlAction.setStatus('mandatory')
wfIpxSapServLvlIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 10, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapServLvlIntf.setStatus('mandatory')
wfIpxSapServLvlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapServLvlIndex.setStatus('mandatory')
wfIpxTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11), )
if mibBuilder.loadTexts: wfIpxTrafficFilterTable.setStatus('mandatory')
wfIpxTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpxTrafficFilterInterface"), (0, "Wellfleet-Series7-MIB", "wfIpxTrafficFilterCircuit"), (0, "Wellfleet-Series7-MIB", "wfIpxTrafficFilterRuleNumber"), (0, "Wellfleet-Series7-MIB", "wfIpxTrafficFilterFragment"))
if mibBuilder.loadTexts: wfIpxTrafficFilterEntry.setStatus('mandatory')
wfIpxTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxTrafficFilterCreate.setStatus('mandatory')
wfIpxTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxTrafficFilterEnable.setStatus('mandatory')
wfIpxTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilterStatus.setStatus('mandatory')
wfIpxTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilterCounter.setStatus('mandatory')
wfIpxTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxTrafficFilterDefinition.setStatus('mandatory')
wfIpxTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 6), Integer32())
if mibBuilder.loadTexts: wfIpxTrafficFilterReserved.setStatus('mandatory')
wfIpxTrafficFilterInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilterInterface.setStatus('mandatory')
wfIpxTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilterCircuit.setStatus('mandatory')
wfIpxTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilterRuleNumber.setStatus('mandatory')
wfIpxTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 11, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilterFragment.setStatus('mandatory')
wfProtocols = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 2, 1))
wfIPROTOLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIPROTOLoad.setStatus('mandatory')
wfDECNETLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDECNETLoad.setStatus('mandatory')
wfATLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfATLoad.setStatus('mandatory')
wfXNSLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXNSLoad.setStatus('mandatory')
wfIPXLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIPXLoad.setStatus('mandatory')
wfOSILoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOSILoad.setStatus('mandatory')
wfX25DTELoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfX25DTELoad.setStatus('mandatory')
wfX25DCELoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfX25DCELoad.setStatus('mandatory')
wfVINESLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVINESLoad.setStatus('mandatory')
wfLinkModules = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 2, 2))
wfENETIILoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfENETIILoad.setStatus('mandatory')
wfQENETLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfQENETLoad.setStatus('mandatory')
wfFDDILoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDILoad.setStatus('mandatory')
wfDSDELoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDSDELoad.setStatus('mandatory')
wfDSDEIILoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDSDEIILoad.setStatus('mandatory')
wfQSYNCLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfQSYNCLoad.setStatus('mandatory')
wfDTLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDTLoad.setStatus('mandatory')
wfDSTLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDSTLoad.setStatus('mandatory')
wfT1IILoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1IILoad.setStatus('mandatory')
wfE1IILoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfE1IILoad.setStatus('mandatory')
wfHSSILoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHSSILoad.setStatus('mandatory')
wfFNSDSELoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFNSDSELoad.setStatus('mandatory')
wfFNSDSDTLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 2, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFNSDSDTLoad.setStatus('mandatory')
wfDrivers = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 2, 3))
wfLANCELoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLANCELoad.setStatus('mandatory')
wfILACCLoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfILACCLoad.setStatus('mandatory')
wfFSILoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFSILoad.setStatus('mandatory')
wfTMS380Load = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTMS380Load.setStatus('mandatory')
wfMK5025Load = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMK5025Load.setStatus('mandatory')
wfDS2180Load = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDS2180Load.setStatus('mandatory')
wfDS2181Load = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDS2181Load.setStatus('mandatory')
wfDEFALoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDEFALoad.setStatus('mandatory')
wfAMZ8530Load = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAMZ8530Load.setStatus('mandatory')
wfHSSIFSILoad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 2, 3, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHSSIFSILoad.setStatus('mandatory')
wfOspfGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1))
wfOspfGeneralDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfGeneralDelete.setStatus('mandatory')
wfOspfGeneralDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfGeneralDisable.setStatus('mandatory')
wfOspfGeneralState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfGeneralState.setStatus('mandatory')
wfOspfRouterId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfRouterId.setStatus('mandatory')
wfOspfVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVersionNumber.setStatus('mandatory')
wfOspfAreaBdrRtrStatus = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaBdrRtrStatus.setStatus('mandatory')
wfOspfASBdrRtrStatus = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfASBdrRtrStatus.setStatus('mandatory')
wfOspfTOSSupport = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfTOSSupport.setStatus('mandatory')
wfOspfSpfHoldDown = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 10))).clone(namedValues=NamedValues(("defval", 1), ("maximum", 10))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfSpfHoldDown.setStatus('mandatory')
wfOspfSlotMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16383))).clone(namedValues=NamedValues(("slotmask", 16383))).clone('slotmask')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfSlotMask.setStatus('mandatory')
wfOspfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2), )
if mibBuilder.loadTexts: wfOspfAreaTable.setStatus('mandatory')
wfOspfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfOspfAreaId"))
if mibBuilder.loadTexts: wfOspfAreaEntry.setStatus('mandatory')
wfOspfAreaDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaDelete.setStatus('mandatory')
wfOspfAreaDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaDisable.setStatus('mandatory')
wfOspfAreaState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaState.setStatus('mandatory')
wfOspfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaId.setStatus('mandatory')
wfOspfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nopassword", 1), ("simplepassword", 2))).clone('nopassword')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAuthType.setStatus('mandatory')
wfOspfImportASExtern = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfImportASExtern.setStatus('mandatory')
wfOspfStubMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16777215))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 16777215))).clone('minimum')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfStubMetric.setStatus('mandatory')
wfOspfImportSum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfImportSum.setStatus('mandatory')
wfOspfLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3), )
if mibBuilder.loadTexts: wfOspfLsdbTable.setStatus('mandatory')
wfOspfLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfOspfLsdbAreaId"), (0, "Wellfleet-Series7-MIB", "wfOspfLsdbType"), (0, "Wellfleet-Series7-MIB", "wfOspfLsdbLSID"), (0, "Wellfleet-Series7-MIB", "wfOspfLsdbRouterId"))
if mibBuilder.loadTexts: wfOspfLsdbEntry.setStatus('mandatory')
wfOspfLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAreaId.setStatus('mandatory')
wfOspfLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("routerlink", 1), ("networklink", 2), ("summarylink", 3), ("assummarylink", 4), ("asexternallink", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbType.setStatus('mandatory')
wfOspfLsdbLSID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbLSID.setStatus('mandatory')
wfOspfLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbRouterId.setStatus('mandatory')
wfOspfLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbSequence.setStatus('mandatory')
wfOspfLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3600))).clone(namedValues=NamedValues(("lsdbmaxage", 3600)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAge.setStatus('mandatory')
wfOspfLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbChecksum.setStatus('mandatory')
wfOspfLsdbAdvLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAdvLen.setStatus('mandatory')
wfOspfAreaRangeTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4), )
if mibBuilder.loadTexts: wfOspfAreaRangeTable.setStatus('mandatory')
wfOspfAreaRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfOspfAreaRangeAreaID"), (0, "Wellfleet-Series7-MIB", "wfOspfAreaRangeNet"))
if mibBuilder.loadTexts: wfOspfAreaRangeEntry.setStatus('mandatory')
wfOspfAreaRangeDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaRangeDelete.setStatus('mandatory')
wfOspfAreaRangeDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaRangeDisable.setStatus('mandatory')
wfOspfAreaRangeState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaRangeState.setStatus('mandatory')
wfOspfAreaRangeAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaRangeAreaID.setStatus('mandatory')
wfOspfAreaRangeNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaRangeNet.setStatus('mandatory')
wfOspfAreaRangeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaRangeMask.setStatus('mandatory')
wfOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5), )
if mibBuilder.loadTexts: wfOspfIfTable.setStatus('mandatory')
wfOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfOspfIfIpAddress"), (0, "Wellfleet-Series7-MIB", "wfOspfAddressLessIf"))
if mibBuilder.loadTexts: wfOspfIfEntry.setStatus('mandatory')
wfOspfIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfDelete.setStatus('mandatory')
wfOspfIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfDisable.setStatus('mandatory')
wfOspfIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("pointtopoint", 4), ("designatedrouter", 5), ("backupdesignatedrouter", 6), ("otherdesignatedrouter", 7))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfState.setStatus('mandatory')
wfOspfIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfIpAddress.setStatus('mandatory')
wfOspfAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAddressLessIf.setStatus('mandatory')
wfOspfIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfAreaId.setStatus('mandatory')
wfOspfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("nbma", 2), ("pointtopoint", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfType.setStatus('mandatory')
wfOspfIfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("defval", 1), ("maximum", 255))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfRtrPriority.setStatus('mandatory')
wfOspfIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1, 3600))).clone(namedValues=NamedValues(("minimum", 1), ("defval", 1), ("maximum", 3600))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfTransitDelay.setStatus('mandatory')
wfOspfIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 5, 3600))).clone(namedValues=NamedValues(("minimum", 1), ("defval", 5), ("maximum", 3600))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfRetransInterval.setStatus('mandatory')
wfOspfIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 10, 65535))).clone(namedValues=NamedValues(("minimum", 1), ("defval", 10), ("maximum", 65535))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfHelloInterval.setStatus('mandatory')
wfOspfIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 40, 2147483647))).clone(namedValues=NamedValues(("minimum", 1), ("defval", 40), ("maximum", 2147483647))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfRtrDeadInterval.setStatus('mandatory')
wfOspfIfPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 120, 2147483647))).clone(namedValues=NamedValues(("minimum", 1), ("defval", 120), ("maximum", 2147483647))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfPollInterval.setStatus('mandatory')
wfOspfIfDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfDesignatedRouter.setStatus('mandatory')
wfOspfIfBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfBackupDesignatedRouter.setStatus('mandatory')
wfOspfIfMetricCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 65535))).clone('minimum')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfMetricCost.setStatus('mandatory')
wfOspfIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfAuthKey.setStatus('mandatory')
wfOspfIfTxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxHellos.setStatus('mandatory')
wfOspfIfTxDBDescripts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxDBDescripts.setStatus('mandatory')
wfOspfIfTxLinkStateReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxLinkStateReqs.setStatus('mandatory')
wfOspfIfTxLinkStateUpds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxLinkStateUpds.setStatus('mandatory')
wfOspfIfTxLinkStateAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxLinkStateAcks.setStatus('mandatory')
wfOspfIfRxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxHellos.setStatus('mandatory')
wfOspfIfRxDBDescripts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxDBDescripts.setStatus('mandatory')
wfOspfIfRxLinkStateReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxLinkStateReqs.setStatus('mandatory')
wfOspfIfRxLinkStateUpds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxLinkStateUpds.setStatus('mandatory')
wfOspfIfRxLinkStateAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxLinkStateAcks.setStatus('mandatory')
wfOspfIfDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfDrops.setStatus('mandatory')
wfOspfVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6), )
if mibBuilder.loadTexts: wfOspfVirtIfTable.setStatus('mandatory')
wfOspfVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfOspfVirtIfAreaID"), (0, "Wellfleet-Series7-MIB", "wfOspfVirtIfNeighbor"))
if mibBuilder.loadTexts: wfOspfVirtIfEntry.setStatus('mandatory')
wfOspfVirtIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfDelete.setStatus('mandatory')
wfOspfVirtIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfDisable.setStatus('mandatory')
wfOspfVirtIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointtopoint", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfState.setStatus('mandatory')
wfOspfVirtIfAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfAreaID.setStatus('mandatory')
wfOspfVirtIfNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfNeighbor.setStatus('mandatory')
wfOspfVirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1, 3600))).clone(namedValues=NamedValues(("minimum", 1), ("defval", 1), ("maximum", 3600))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfTransitDelay.setStatus('mandatory')
wfOspfVirtIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 5, 3600))).clone(namedValues=NamedValues(("minimum", 1), ("defval", 5), ("maximum", 3600))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfRetransInterval.setStatus('mandatory')
wfOspfVirtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 15, 65535))).clone(namedValues=NamedValues(("minimum", 1), ("defval", 15), ("maximum", 65535))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfHelloInterval.setStatus('mandatory')
wfOspfVirtIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 60, 2147483647))).clone(namedValues=NamedValues(("minimum", 1), ("defval", 60), ("maximum", 2147483647))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfRtrDeadInterval.setStatus('mandatory')
wfOspfVirtIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfAuthKey.setStatus('mandatory')
wfOspfVirtIfTxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxHellos.setStatus('mandatory')
wfOspfVirtIfTxDBDescripts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxDBDescripts.setStatus('mandatory')
wfOspfVirtIfTxLinkStateReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxLinkStateReqs.setStatus('mandatory')
wfOspfVirtIfTxLinkStateUpds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxLinkStateUpds.setStatus('mandatory')
wfOspfVirtIfTxLinkStateAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxLinkStateAcks.setStatus('mandatory')
wfOspfVirtIfRxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxHellos.setStatus('mandatory')
wfOspfVirtIfRxDBDescripts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxDBDescripts.setStatus('mandatory')
wfOspfVirtIfRxLinkStateReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxLinkStateReqs.setStatus('mandatory')
wfOspfVirtIfRxLinkStateUpds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxLinkStateUpds.setStatus('mandatory')
wfOspfVirtIfRxLinkStateAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxLinkStateAcks.setStatus('mandatory')
wfOspfVirtIfDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfDrops.setStatus('mandatory')
wfOspfNbrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7), )
if mibBuilder.loadTexts: wfOspfNbrTable.setStatus('mandatory')
wfOspfNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfOspfNbrIpAddr"), (0, "Wellfleet-Series7-MIB", "wfOspfNbrAddressLessIndex"))
if mibBuilder.loadTexts: wfOspfNbrEntry.setStatus('mandatory')
wfOspfNbrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNbrDelete.setStatus('mandatory')
wfOspfNbrDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNbrDisable.setStatus('mandatory')
wfOspfNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoway", 4), ("exchangstart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrState.setStatus('mandatory')
wfOspfNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrIpAddr.setStatus('mandatory')
wfOspfNbrIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNbrIfAddr.setStatus('mandatory')
wfOspfNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrAddressLessIndex.setStatus('mandatory')
wfOspfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrRtrId.setStatus('mandatory')
wfOspfNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrOptions.setStatus('mandatory')
wfOspfNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("defval", 1), ("maximum", 255))).clone('defval')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNbrPriority.setStatus('mandatory')
wfOspfNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrEvents.setStatus('mandatory')
wfOspfNbrLSRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrLSRetransQLen.setStatus('mandatory')
wfOspfVirtNbrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8), )
if mibBuilder.loadTexts: wfOspfVirtNbrTable.setStatus('mandatory')
wfOspfVirtNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfOspfVirtNbrArea"), (0, "Wellfleet-Series7-MIB", "wfOspfVirtNbrRtrId"))
if mibBuilder.loadTexts: wfOspfVirtNbrEntry.setStatus('mandatory')
wfOspfVirtNbrArea = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrArea.setStatus('mandatory')
wfOspfVirtNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrRtrId.setStatus('mandatory')
wfOspfVirtNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrIpAddr.setStatus('mandatory')
wfOspfVirtNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrOptions.setStatus('mandatory')
wfOspfVirtNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoway", 4), ("exchangstart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrState.setStatus('mandatory')
wfOspfVirtNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrEvents.setStatus('mandatory')
wfOspfVirtNbrLSRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrLSRetransQLen.setStatus('mandatory')
wfOspfDynNbrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9), )
if mibBuilder.loadTexts: wfOspfDynNbrTable.setStatus('mandatory')
wfOspfDynNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfOspfDynNbrIpAddr"), (0, "Wellfleet-Series7-MIB", "wfOspfDynNbrAddressLessIndex"))
if mibBuilder.loadTexts: wfOspfDynNbrEntry.setStatus('mandatory')
wfOspfDynNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoway", 4), ("exchangstart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrState.setStatus('mandatory')
wfOspfDynNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrIpAddr.setStatus('mandatory')
wfOspfDynNbrIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrIfAddr.setStatus('mandatory')
wfOspfDynNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrAddressLessIndex.setStatus('mandatory')
wfOspfDynNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrRtrId.setStatus('mandatory')
wfOspfDynNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrOptions.setStatus('mandatory')
wfOspfDynNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrPriority.setStatus('mandatory')
wfOspfDynNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrEvents.setStatus('mandatory')
wfOspfDynNbrLSRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrLSRetransQLen.setStatus('mandatory')
wfIpRfRipImportTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8), )
if mibBuilder.loadTexts: wfIpRfRipImportTable.setStatus('mandatory')
wfIpRfRipImportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpRfRipImportAddress"), (0, "Wellfleet-Series7-MIB", "wfIpRfRipImportMask"), (0, "Wellfleet-Series7-MIB", "wfIpRfRipImportRipGateway"), (0, "Wellfleet-Series7-MIB", "wfIpRfRipImportRipInterface"))
if mibBuilder.loadTexts: wfIpRfRipImportEntry.setStatus('mandatory')
wfIpRfRipImportCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfRipImportCreate.setStatus('mandatory')
wfIpRfRipImportEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfRipImportEnable.setStatus('mandatory')
wfIpRfRipImportAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfRipImportAddress.setStatus('mandatory')
wfIpRfRipImportMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfRipImportMask.setStatus('mandatory')
wfIpRfRipImportAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfRipImportAction.setStatus('mandatory')
wfIpRfRipImportPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16))).clone(namedValues=NamedValues(("maximum", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfRipImportPreference.setStatus('mandatory')
wfIpRfRipImportRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfRipImportRipGateway.setStatus('mandatory')
wfIpRfRipImportRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 8, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfRipImportRipInterface.setStatus('mandatory')
wfIpRfRipExportTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9), )
if mibBuilder.loadTexts: wfIpRfRipExportTable.setStatus('mandatory')
wfIpRfRipExportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpRfRipExportAddress"), (0, "Wellfleet-Series7-MIB", "wfIpRfRipExportMask"), (0, "Wellfleet-Series7-MIB", "wfIpRfRipExportFromProtocol"), (0, "Wellfleet-Series7-MIB", "wfIpRfRipExportInterface"))
if mibBuilder.loadTexts: wfIpRfRipExportEntry.setStatus('mandatory')
wfIpRfRipExportCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfRipExportCreate.setStatus('mandatory')
wfIpRfRipExportEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfRipExportEnable.setStatus('mandatory')
wfIpRfRipExportAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfRipExportAddress.setStatus('mandatory')
wfIpRfRipExportMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfRipExportMask.setStatus('mandatory')
wfIpRfRipExportFromProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("rip", 1), ("ospf", 3), ("direct", 4), ("static", 5))).clone('rip')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfRipExportFromProtocol.setStatus('mandatory')
wfIpRfRipExportAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("propa", 2), ("ignore", 3))).clone('propa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfRipExportAction.setStatus('mandatory')
wfIpRfRipExportInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfRipExportInterface.setStatus('mandatory')
wfIpRfRipExportRipMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15))).clone(namedValues=NamedValues(("maximum", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfRipExportRipMetric.setStatus('mandatory')
wfIpRfOspfImportTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10), )
if mibBuilder.loadTexts: wfIpRfOspfImportTable.setStatus('mandatory')
wfIpRfOspfImportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpRfOspfImportAddress"), (0, "Wellfleet-Series7-MIB", "wfIpRfOspfImportMask"), (0, "Wellfleet-Series7-MIB", "wfIpRfOspfImportType"), (0, "Wellfleet-Series7-MIB", "wfIpRfOspfImportTag"))
if mibBuilder.loadTexts: wfIpRfOspfImportEntry.setStatus('mandatory')
wfIpRfOspfImportCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfOspfImportCreate.setStatus('mandatory')
wfIpRfOspfImportEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfOspfImportEnable.setStatus('mandatory')
wfIpRfOspfImportAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfOspfImportAddress.setStatus('mandatory')
wfIpRfOspfImportMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfOspfImportMask.setStatus('mandatory')
wfIpRfOspfImportAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfOspfImportAction.setStatus('mandatory')
wfIpRfOspfImportPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16))).clone(namedValues=NamedValues(("maximum", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfOspfImportPreference.setStatus('mandatory')
wfIpRfOspfImportType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfOspfImportType.setStatus('mandatory')
wfIpRfOspfImportTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfOspfImportTag.setStatus('mandatory')
wfIpRfOspfExportTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11), )
if mibBuilder.loadTexts: wfIpRfOspfExportTable.setStatus('mandatory')
wfIpRfOspfExportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfIpRfOspfExportAddress"), (0, "Wellfleet-Series7-MIB", "wfIpRfOspfExportMask"), (0, "Wellfleet-Series7-MIB", "wfIpRfOspfExportFromProtocol"))
if mibBuilder.loadTexts: wfIpRfOspfExportEntry.setStatus('mandatory')
wfIpRfOspfExportCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfOspfExportCreate.setStatus('mandatory')
wfIpRfOspfExportEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfOspfExportEnable.setStatus('mandatory')
wfIpRfOspfExportAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfOspfExportAddress.setStatus('mandatory')
wfIpRfOspfExportMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfOspfExportMask.setStatus('mandatory')
wfIpRfOspfExportFromProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("rip", 1), ("ospf", 3), ("direct", 4), ("static", 5))).clone('rip')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpRfOspfExportFromProtocol.setStatus('mandatory')
wfIpRfOspfExportAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("propa", 2), ("ignore", 3))).clone('propa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfOspfExportAction.setStatus('mandatory')
wfIpRfOspfExportType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2))).clone('type1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfOspfExportType.setStatus('mandatory')
wfIpRfOspfExportTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 1, 11, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpRfOspfExportTag.setStatus('mandatory')
wfSipL2 = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1), )
if mibBuilder.loadTexts: wfSipL2.setStatus('mandatory')
wfSipL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfSipL2Index"))
if mibBuilder.loadTexts: wfSipL2Entry.setStatus('mandatory')
wfSipL2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipL2Index.setStatus('mandatory')
wfSipL2ReceivedCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipL2ReceivedCounts.setStatus('mandatory')
wfSipL2SentCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipL2SentCounts.setStatus('mandatory')
wfSipHcsOrCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipHcsOrCRCErrors.setStatus('mandatory')
wfSipL2PayloadLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipL2PayloadLengthErrors.setStatus('mandatory')
wfSipL2SequenceNumberErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipL2SequenceNumberErrors.setStatus('mandatory')
wfSipL2MidCurrentlyActiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipL2MidCurrentlyActiveErrors.setStatus('mandatory')
wfSipL2BomOrSSMsMIDErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipL2BomOrSSMsMIDErrors.setStatus('mandatory')
wfSipL2EomsMIDErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipL2EomsMIDErrors.setStatus('mandatory')
wfSipDs1Plcp = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 1), )
if mibBuilder.loadTexts: wfSipDs1Plcp.setStatus('mandatory')
wfSipDs1PlcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 1, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfSipDs1PlcpIndex"))
if mibBuilder.loadTexts: wfSipDs1PlcpEntry.setStatus('mandatory')
wfSipDs1PlcpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipDs1PlcpIndex.setStatus('mandatory')
wfSipDs1PlcpSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipDs1PlcpSEFs.setStatus('mandatory')
wfSipDs1PlcpAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noalarm", 1), ("receivedfarendalarm", 2), ("incominglof", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipDs1PlcpAlarmState.setStatus('mandatory')
wfSipDs1PlcpUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipDs1PlcpUASs.setStatus('mandatory')
wfSipDs3Plcp = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 2), )
if mibBuilder.loadTexts: wfSipDs3Plcp.setStatus('mandatory')
wfSipDs3PlcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfSipDs3PlcpIndex"))
if mibBuilder.loadTexts: wfSipDs3PlcpEntry.setStatus('mandatory')
wfSipDs3PlcpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1024))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1024)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipDs3PlcpIndex.setStatus('mandatory')
wfSipDs3PlcpSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipDs3PlcpSEFs.setStatus('mandatory')
wfSipDs3PlcpAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noalarm", 1), ("receivedfarendalarm", 2), ("incominglof", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipDs3PlcpAlarmState.setStatus('mandatory')
wfSipDs3PlcpUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 14, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSipDs3PlcpUASs.setStatus('mandatory')
wfSmdsCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3), )
if mibBuilder.loadTexts: wfSmdsCircuitTable.setStatus('mandatory')
wfSmdsCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfSmdsCircuitID"))
if mibBuilder.loadTexts: wfSmdsCircuitEntry.setStatus('mandatory')
wfSmdsCircuitDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitDelete.setStatus('mandatory')
wfSmdsCircuitDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitDisable.setStatus('mandatory')
wfSmdsCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitState.setStatus('mandatory')
wfSmdsCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1023))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1023)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitID.setStatus('mandatory')
wfSmdsCircuitIndivAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitIndivAddr.setStatus('mandatory')
wfSmdsCircuitGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitGroupAddr.setStatus('mandatory')
wfSmdsCircuitArpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitArpAddr.setStatus('mandatory')
wfSmdsCircuitDisableHrtbtPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitDisableHrtbtPoll.setStatus('mandatory')
wfSmdsCircuitHrtbtPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 10))).clone(namedValues=NamedValues(("minimum", 6), ("default", 10))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitHrtbtPollInterval.setStatus('mandatory')
wfSmdsCircuitHrtbtPollDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("minimum", 1), ("default", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitHrtbtPollDownCount.setStatus('mandatory')
wfSmdsCircuitDisableNetMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitDisableNetMgmt.setStatus('mandatory')
wfSmdsCircuitSipL3ReceivedIndividualDAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3ReceivedIndividualDAs.setStatus('mandatory')
wfSmdsCircuitSipL3ReceivedGAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3ReceivedGAs.setStatus('mandatory')
wfSmdsCircuitSipL3SentIndividualDAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3SentIndividualDAs.setStatus('mandatory')
wfSmdsCircuitSipL3SentGAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3SentGAs.setStatus('mandatory')
wfSmdsCircuitSipL3VersionSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("version", 1))).clone('version')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3VersionSupport.setStatus('mandatory')
wfSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1))
wfSnmpDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpDisable.setStatus('mandatory')
wfSnmpUseLock = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpUseLock.setStatus('mandatory')
wfSnmpLockAddress = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpLockAddress.setStatus('mandatory')
wfSnmpLockTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 60))).clone(namedValues=NamedValues(("default", 2), ("minimum", 1), ("maximum", 60))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpLockTimeOut.setStatus('mandatory')
wfSnmpAuth = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trivial", 1), ("party", 2))).clone('trivial')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpAuth.setStatus('mandatory')
wfSnmpInPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInPkts.setStatus('mandatory')
wfSnmpOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutPkts.setStatus('mandatory')
wfSnmpInBadVersions = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInBadVersions.setStatus('mandatory')
wfSnmpInBadCommunityNames = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInBadCommunityNames.setStatus('mandatory')
wfSnmpInBadCommunityUses = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInBadCommunityUses.setStatus('mandatory')
wfSnmpInASNParseErrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInASNParseErrs.setStatus('mandatory')
wfSnmpInBadTypes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInBadTypes.setStatus('mandatory')
wfSnmpInTooBigs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInTooBigs.setStatus('mandatory')
wfSnmpInNoSuchNames = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInNoSuchNames.setStatus('mandatory')
wfSnmpInBadValues = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInBadValues.setStatus('mandatory')
wfSnmpInReadOnlys = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInReadOnlys.setStatus('mandatory')
wfSnmpInGenErrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInGenErrs.setStatus('mandatory')
wfSnmpInTotalReqVars = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInTotalReqVars.setStatus('mandatory')
wfSnmpInTotalSetVars = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInTotalSetVars.setStatus('mandatory')
wfSnmpInGetRequests = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInGetRequests.setStatus('mandatory')
wfSnmpInGetNexts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInGetNexts.setStatus('mandatory')
wfSnmpInSetRequests = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInSetRequests.setStatus('mandatory')
wfSnmpInGetResponses = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInGetResponses.setStatus('mandatory')
wfSnmpInTraps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpInTraps.setStatus('mandatory')
wfSnmpOutTooBigs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutTooBigs.setStatus('mandatory')
wfSnmpOutNoSuchNames = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutNoSuchNames.setStatus('mandatory')
wfSnmpOutBadValues = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutBadValues.setStatus('mandatory')
wfSnmpOutReadOnlys = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutReadOnlys.setStatus('mandatory')
wfSnmpOutGenErrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutGenErrs.setStatus('mandatory')
wfSnmpOutGetRequests = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutGetRequests.setStatus('mandatory')
wfSnmpOutGetNexts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutGetNexts.setStatus('mandatory')
wfSnmpOutSetRequests = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutSetRequests.setStatus('mandatory')
wfSnmpOutGetResponses = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutGetResponses.setStatus('mandatory')
wfSnmpOutTraps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpOutTraps.setStatus('mandatory')
wfSnmpEnableAuthTraps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpEnableAuthTraps.setStatus('mandatory')
wfSnmpTrapDebug = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpTrapDebug.setStatus('mandatory')
wfSnmpTrapTrace = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpTrapTrace.setStatus('mandatory')
wfSnmpTrapInfo = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpTrapInfo.setStatus('mandatory')
wfSnmpTrapWarn = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpTrapWarn.setStatus('mandatory')
wfSnmpTrapFault = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpTrapFault.setStatus('mandatory')
wfSnmpCommTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 2), )
if mibBuilder.loadTexts: wfSnmpCommTable.setStatus('mandatory')
wfSnmpCommEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfSnmpCommIndex"))
if mibBuilder.loadTexts: wfSnmpCommEntry.setStatus('mandatory')
wfSnmpCommDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpCommDelete.setStatus('mandatory')
wfSnmpCommIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpCommIndex.setStatus('mandatory')
wfSnmpCommName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpCommName.setStatus('mandatory')
wfSnmpCommAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readonly", 1), ("readwrite", 2))).clone('readonly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpCommAccess.setStatus('mandatory')
wfSnmpMgrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 3), )
if mibBuilder.loadTexts: wfSnmpMgrTable.setStatus('mandatory')
wfSnmpMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfSnmpMgrCommIndex"), (0, "Wellfleet-Series7-MIB", "wfSnmpMgrAddress"))
if mibBuilder.loadTexts: wfSnmpMgrEntry.setStatus('mandatory')
wfSnmpMgrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpMgrDelete.setStatus('mandatory')
wfSnmpMgrCommIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpMgrCommIndex.setStatus('mandatory')
wfSnmpMgrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSnmpMgrAddress.setStatus('mandatory')
wfSnmpMgrName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpMgrName.setStatus('mandatory')
wfSnmpMgrTrapPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 3, 1, 5), Integer32().clone(162)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpMgrTrapPort.setStatus('mandatory')
wfSnmpMgrTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 5, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 7))).clone(namedValues=NamedValues(("none", 1), ("generic", 2), ("specific", 4), ("all", 7))).clone('generic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSnmpMgrTraps.setStatus('mandatory')
wfBrStp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1))
wfBrStpBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpBaseDelete.setStatus('mandatory')
wfBrStpBaseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpBaseEnable.setStatus('mandatory')
wfBrStpBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("pres", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpBaseState.setStatus('mandatory')
wfBrStpProtocolSpecification = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("declb100", 2), ("ieee8021d", 3))).clone('ieee8021d')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpProtocolSpecification.setStatus('mandatory')
wfBrStpBridgeID = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpBridgeID.setStatus('mandatory')
wfBrStpTimeSinceTopologyChange = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpTimeSinceTopologyChange.setStatus('mandatory')
wfBrStpTopChanges = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpTopChanges.setStatus('mandatory')
wfBrStpDesignatedRoot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpDesignatedRoot.setStatus('mandatory')
wfBrStpRootCost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpRootCost.setStatus('mandatory')
wfBrStpRootPort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpRootPort.setStatus('mandatory')
wfBrStpMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpMaxAge.setStatus('mandatory')
wfBrStpHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpHelloTime.setStatus('mandatory')
wfBrStpHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100))).clone(namedValues=NamedValues(("time", 100))).clone('time')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpHoldTime.setStatus('mandatory')
wfBrStpForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpForwardDelay.setStatus('mandatory')
wfBrStpBridgeMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(600, 2000, 4000))).clone(namedValues=NamedValues(("minimum", 600), ("default", 2000), ("maximum", 4000))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpBridgeMaxAge.setStatus('mandatory')
wfBrStpBridgeHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100, 200, 1000))).clone(namedValues=NamedValues(("minimum", 100), ("default", 200), ("maximum", 1000))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpBridgeHelloTime.setStatus('mandatory')
wfBrStpBridgeForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(400, 1500, 3000))).clone(namedValues=NamedValues(("minimum", 400), ("default", 1500), ("maximum", 3000))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpBridgeForwardDelay.setStatus('mandatory')
wfBrStpInterface = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2), )
if mibBuilder.loadTexts: wfBrStpInterface.setStatus('mandatory')
wfBrStpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrStpInterfaceCircuit"))
if mibBuilder.loadTexts: wfBrStpInterfaceEntry.setStatus('mandatory')
wfBrStpInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpInterfaceDelete.setStatus('mandatory')
wfBrStpInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpInterfaceEnable.setStatus('mandatory')
wfBrStpInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfaceCircuit.setStatus('mandatory')
wfBrStpInterfacePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 255))).clone(namedValues=NamedValues(("default", 128), ("maximum", 255))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpInterfacePriority.setStatus('mandatory')
wfBrStpInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfaceState.setStatus('mandatory')
wfBrStpInterfaceMultiCastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfaceMultiCastAddr.setStatus('mandatory')
wfBrStpInterfacePathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 65535))).clone('minimum')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrStpInterfacePathCost.setStatus('mandatory')
wfBrStpInterfaceDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfaceDesignatedRoot.setStatus('mandatory')
wfBrStpInterfaceDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfaceDesignatedCost.setStatus('mandatory')
wfBrStpInterfaceDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfaceDesignatedBridge.setStatus('mandatory')
wfBrStpInterfaceDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfaceDesignatedPort.setStatus('mandatory')
wfBrStpInterfaceForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfaceForwardTransitions.setStatus('mandatory')
wfBrStpInterfacePktsXmitd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfacePktsXmitd.setStatus('mandatory')
wfBrStpInterfacePktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrStpInterfacePktsRcvd.setStatus('mandatory')
wfBrSr = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1))
wfBrSrBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseDelete.setStatus('mandatory')
wfBrSrBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseDisable.setStatus('mandatory')
wfBrSrBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseState.setStatus('mandatory')
wfBrSrBaseInternalLanId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseInternalLanId.setStatus('mandatory')
wfBrSrBaseBridgeId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseBridgeId.setStatus('mandatory')
wfBrSrBaseGroupLanId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 6), Integer32().clone(4095)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseGroupLanId.setStatus('mandatory')
wfBrSrBaseIpEncapsDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseIpEncapsDisable.setStatus('mandatory')
wfBrSrBaseIpNetworkRingId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseIpNetworkRingId.setStatus('mandatory')
wfBrSrBaseIpInReceives = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseIpInReceives.setStatus('mandatory')
wfBrSrBaseIpSeqErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBaseIpSeqErrors.setStatus('mandatory')
wfBrSrBaseIpMtuSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 1, 11), Integer32().clone(4562)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBaseIpMtuSize.setStatus('mandatory')
wfBrSrInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2), )
if mibBuilder.loadTexts: wfBrSrInterfaceTable.setStatus('mandatory')
wfBrSrInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrSrInterfaceCircuit"))
if mibBuilder.loadTexts: wfBrSrInterfaceEntry.setStatus('mandatory')
wfBrSrInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceDelete.setStatus('mandatory')
wfBrSrInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceDisable.setStatus('mandatory')
wfBrSrInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceState.setStatus('mandatory')
wfBrSrInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceCircuit.setStatus('mandatory')
wfBrSrInterfaceMaxRds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 5), Integer32().clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceMaxRds.setStatus('mandatory')
wfBrSrInterfaceRing = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceRing.setStatus('mandatory')
wfBrSrInterfaceBlockOutSte = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("accept", 2))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceBlockOutSte.setStatus('mandatory')
wfBrSrInterfaceBlockInSte = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("accept", 2))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceBlockInSte.setStatus('mandatory')
wfBrSrInterfaceBlockIp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("accept", 2))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceBlockIp.setStatus('mandatory')
wfBrSrInterfaceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrInterfaceIpAddress.setStatus('mandatory')
wfBrSrInterfaceInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceInFrames.setStatus('mandatory')
wfBrSrInterfaceOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceOutFrames.setStatus('mandatory')
wfBrSrInterfaceOutIpFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceOutIpFrames.setStatus('mandatory')
wfBrSrInterfaceDropInvalidRcs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceDropInvalidRcs.setStatus('mandatory')
wfBrSrInterfaceDropInvalidRings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceDropInvalidRings.setStatus('mandatory')
wfBrSrInterfaceDropSrfs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrInterfaceDropSrfs.setStatus('mandatory')
wfBrSrBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 3), )
if mibBuilder.loadTexts: wfBrSrBridgeTable.setStatus('mandatory')
wfBrSrBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrSrBridgeId"))
if mibBuilder.loadTexts: wfBrSrBridgeEntry.setStatus('mandatory')
wfBrSrBridgeDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrBridgeDelete.setStatus('mandatory')
wfBrSrBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrBridgeId.setStatus('mandatory')
wfBrSrIpExplorerTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 4), )
if mibBuilder.loadTexts: wfBrSrIpExplorerTable.setStatus('mandatory')
wfBrSrIpExplorerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrSrIpExplorerAddr"))
if mibBuilder.loadTexts: wfBrSrIpExplorerEntry.setStatus('mandatory')
wfBrSrIpExplorerDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrIpExplorerDelete.setStatus('mandatory')
wfBrSrIpExplorerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpExplorerAddr.setStatus('mandatory')
wfBrSrIpEncapsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5), )
if mibBuilder.loadTexts: wfBrSrIpEncapsTable.setStatus('mandatory')
wfBrSrIpEncapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrSrIpEncapsRing"))
if mibBuilder.loadTexts: wfBrSrIpEncapsEntry.setStatus('mandatory')
wfBrSrIpEncapsRing = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsRing.setStatus('mandatory')
wfBrSrIpEncapsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsIpAddress.setStatus('mandatory')
wfBrSrIpEncapsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("learned", 3))).clone('learned')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrIpEncapsStatus.setStatus('mandatory')
wfBrSrTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6), )
if mibBuilder.loadTexts: wfBrSrTrafficFilterTable.setStatus('mandatory')
wfBrSrTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrSrTrafficFilterCircuit"), (0, "Wellfleet-Series7-MIB", "wfBrSrTrafficFilterRuleNumber"), (0, "Wellfleet-Series7-MIB", "wfBrSrTrafficFilterFragment"))
if mibBuilder.loadTexts: wfBrSrTrafficFilterEntry.setStatus('mandatory')
wfBrSrTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrTrafficFilterCreate.setStatus('mandatory')
wfBrSrTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrTrafficFilterEnable.setStatus('mandatory')
wfBrSrTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterStatus.setStatus('mandatory')
wfBrSrTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterCounter.setStatus('mandatory')
wfBrSrTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrSrTrafficFilterDefinition.setStatus('mandatory')
wfBrSrTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 6), Integer32())
if mibBuilder.loadTexts: wfBrSrTrafficFilterReserved.setStatus('mandatory')
wfBrSrTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterCircuit.setStatus('mandatory')
wfBrSrTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterRuleNumber.setStatus('mandatory')
wfBrSrTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrTrafficFilterFragment.setStatus('mandatory')
wfBrSrEsRifTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7), )
if mibBuilder.loadTexts: wfBrSrEsRifTable.setStatus('mandatory')
wfBrSrEsRifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfBrSrEsRifCircuit"), (0, "Wellfleet-Series7-MIB", "wfBrSrEsRifProtocol"), (0, "Wellfleet-Series7-MIB", "wfBrSrEsRifMacAddr"))
if mibBuilder.loadTexts: wfBrSrEsRifEntry.setStatus('mandatory')
wfBrSrEsRifCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrEsRifCircuit.setStatus('mandatory')
wfBrSrEsRifProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrEsRifProtocol.setStatus('mandatory')
wfBrSrEsRifMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrEsRifMacAddr.setStatus('mandatory')
wfBrSrEsRifRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 2, 7, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrSrEsRifRoute.setStatus('mandatory')
wfSyncTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 5), )
if mibBuilder.loadTexts: wfSyncTable.setStatus('mandatory')
wfSyncEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfSyncSlot"), (0, "Wellfleet-Series7-MIB", "wfSyncConnector"))
if mibBuilder.loadTexts: wfSyncEntry.setStatus('mandatory')
wfSyncDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncDelete.setStatus('mandatory')
wfSyncDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncDisable.setStatus('mandatory')
wfSyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("wait", 4), ("notpresent", 5))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncState.setStatus('mandatory')
wfSyncSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 14))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncSlot.setStatus('mandatory')
wfSyncConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncConnector.setStatus('mandatory')
wfSyncCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1023))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1023)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncCct.setStatus('mandatory')
wfSyncBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncBofl.setStatus('mandatory')
wfSyncBoflTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 60, 5))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 60), ("default", 5))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncBoflTmo.setStatus('mandatory')
wfSyncMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4500, 1600))).clone(namedValues=NamedValues(("minimum", 3), ("maximum", 4500), ("default", 1600))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncMtu.setStatus('mandatory')
wfSyncMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncMadr.setStatus('mandatory')
wfSyncPromiscuous = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncPromiscuous.setStatus('mandatory')
wfSyncXid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncXid.setStatus('mandatory')
wfSyncClkSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2))).clone('external')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncClkSource.setStatus('mandatory')
wfSyncClkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1200, 2401, 4807, 7204, 9615, 19230, 32051, 38461, 56818, 64102, 125000, 227272, 416666, 625000, 833333, 1250000, 2500000, 5000000))).clone(namedValues=NamedValues(("clk1200b", 1200), ("clk2400b", 2401), ("clk4800b", 4807), ("clk7200b", 7204), ("clk9600b", 9615), ("clk19200b", 19230), ("clk32000b", 32051), ("clk38400b", 38461), ("clk56k", 56818), ("clk64k", 64102), ("clk125k", 125000), ("clk230k", 227272), ("clk420k", 416666), ("clk625k", 625000), ("clk833k", 833333), ("clk1mb", 1250000), ("clk2mb", 2500000), ("clk5mb", 5000000))).clone('clk64k')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncClkSpeed.setStatus('mandatory')
wfSyncSignalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("balanced", 1), ("unbalanced", 2))).clone('balanced')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncSignalMode.setStatus('mandatory')
wfSyncRtsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncRtsEnable.setStatus('mandatory')
wfSyncBurstCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncBurstCount.setStatus('mandatory')
wfSyncService = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("transparent", 1), ("llc1", 2), ("llc2", 3))).clone('llc1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncService.setStatus('mandatory')
wfSyncRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 64, 16))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 64), ("default", 16))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncRetryCount.setStatus('mandatory')
wfSyncLinkIdleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 9999, 3))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 9999), ("default", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncLinkIdleTimer.setStatus('mandatory')
wfSyncRetryTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 9999, 3))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 9999), ("default", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncRetryTimer.setStatus('mandatory')
wfSyncExtendedAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncExtendedAddress.setStatus('mandatory')
wfSyncExtendedAddressForce = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncExtendedAddressForce.setStatus('mandatory')
wfSyncExtendedControl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncExtendedControl.setStatus('mandatory')
wfSyncExtendedControlForce = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncExtendedControlForce.setStatus('mandatory')
wfSyncConnectAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 9999, 10))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 9999), ("default", 10))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncConnectAttempts.setStatus('mandatory')
wfSyncWindowSizeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 7, 1))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 7), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncWindowSizeTx.setStatus('mandatory')
wfSyncWindowSizeTxExtc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 7, 1))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 7), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncWindowSizeTxExtc.setStatus('mandatory')
wfSyncMinFrameSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 32, 1))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 32), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncMinFrameSpace.setStatus('mandatory')
wfSyncLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 7))).clone(namedValues=NamedValues(("addressdte", 1), ("addressdce", 3), ("addressexplicit", 7))).clone('addressexplicit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncLocalAddress.setStatus('mandatory')
wfSyncRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 7))).clone(namedValues=NamedValues(("addressdte", 1), ("addressdce", 3), ("addressexplicit", 7))).clone('addressexplicit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncRemoteAddress.setStatus('mandatory')
wfSyncPassThruLocalMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 32), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncPassThruLocalMadr.setStatus('mandatory')
wfSyncPassThruRemoteMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 33), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncPassThruRemoteMadr.setStatus('mandatory')
wfSyncWanProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("standard", 1), ("passthru", 2), ("ppp", 3), ("smds", 4), ("framerelay", 5))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncWanProtocol.setStatus('mandatory')
wfSyncCrcSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc16bit", 1), ("crc32bit", 2))).clone('crc16bit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncCrcSize.setStatus('mandatory')
wfSyncRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncRxOctets.setStatus('mandatory')
wfSyncRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncRxFrames.setStatus('mandatory')
wfSyncTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncTxOctets.setStatus('mandatory')
wfSyncTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncTxFrames.setStatus('mandatory')
wfSyncRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncRxErrors.setStatus('mandatory')
wfSyncTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncTxErrors.setStatus('mandatory')
wfSyncLackRescRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncLackRescRx.setStatus('mandatory')
wfSyncLackRescTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncLackRescTx.setStatus('mandatory')
wfSyncUnderFlowTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncUnderFlowTx.setStatus('mandatory')
wfSyncRejectsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncRejectsTx.setStatus('mandatory')
wfSyncRejectsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncRejectsRx.setStatus('mandatory')
wfSyncOverFlowRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncOverFlowRx.setStatus('mandatory')
wfSyncFramesIncompRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncFramesIncompRx.setStatus('mandatory')
wfSyncBadFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncBadFramesRx.setStatus('mandatory')
wfSyncFrameRejectsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncFrameRejectsRx.setStatus('mandatory')
wfSyncRuntsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncRuntsRx.setStatus('mandatory')
wfSyncT1Timeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncT1Timeouts.setStatus('mandatory')
wfSyncMemoryErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSyncMemoryErrors.setStatus('mandatory')
wfSyncMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 5, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("t1", 2), ("e1", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSyncMediaType.setStatus('mandatory')
wfSys = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 1))
wfSysDescr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSysDescr.setStatus('mandatory')
wfSysObjectID = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSysObjectID.setStatus('mandatory')
wfSysUpTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSysUpTime.setStatus('mandatory')
wfSysContact = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSysContact.setStatus('mandatory')
wfSysName = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSysName.setStatus('mandatory')
wfSysLocation = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSysLocation.setStatus('mandatory')
wfSysServices = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 1, 7), Integer32().clone(78)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSysServices.setStatus('mandatory')
wfSysGmtOffset = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSysGmtOffset.setStatus('mandatory')
wfSysMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSysMibVersion.setStatus('mandatory')
wfT1Table = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 10), )
if mibBuilder.loadTexts: wfT1Table.setStatus('mandatory')
wfT1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfT1Slot"), (0, "Wellfleet-Series7-MIB", "wfT1Connector"))
if mibBuilder.loadTexts: wfT1Entry.setStatus('mandatory')
wfT1Delete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1Delete.setStatus('mandatory')
wfT1Disable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1Disable.setStatus('mandatory')
wfT1State = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1State.setStatus('mandatory')
wfT1Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 14))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1Slot.setStatus('mandatory')
wfT1Connector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one", 1), ("two", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1Connector.setStatus('mandatory')
wfT1Madr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1Madr.setStatus('mandatory')
wfT1FrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("d4", 1), ("esf", 2))).clone('esf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1FrameType.setStatus('mandatory')
wfT1LineBuildout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 655, 1))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 655), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1LineBuildout.setStatus('mandatory')
wfT1B8ZSSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1B8ZSSupport.setStatus('mandatory')
wfT1ClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 1))).clone(namedValues=NamedValues(("internal", 1), ("slave", 2), ("manual", 4), ("default", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1ClockMode.setStatus('mandatory')
wfT1MiniDacs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfT1MiniDacs.setStatus('mandatory')
wfT1BipolarVios = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1BipolarVios.setStatus('mandatory')
wfT1FrameBitErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1FrameBitErrs.setStatus('mandatory')
wfT1OutOfFrameErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1OutOfFrameErrs.setStatus('mandatory')
wfT1SuperFrameErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1SuperFrameErrs.setStatus('mandatory')
wfT1RcvYelAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1RcvYelAlarms.setStatus('mandatory')
wfT1RcvCarrierLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1RcvCarrierLoss.setStatus('mandatory')
wfT1RcvRedAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 10, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfT1RcvRedAlarms.setStatus('mandatory')
wfTftp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6))
wfTftpDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTftpDisable.setStatus('mandatory')
wfTftpDefaultVolume = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 2, 14))).clone(namedValues=NamedValues(("minimum", 2), ("default", 2), ("maximum", 14))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTftpDefaultVolume.setStatus('mandatory')
wfTftpXfers = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpXfers.setStatus('mandatory')
wfTftpTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 4), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTftpTimeOut.setStatus('mandatory')
wfTftpCloseTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 5), Integer32().clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTftpCloseTimeOut.setStatus('mandatory')
wfTftpRexmit = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 6), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTftpRexmit.setStatus('mandatory')
wfTftpInFiles = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpInFiles.setStatus('mandatory')
wfTftpOutFiles = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpOutFiles.setStatus('mandatory')
wfTftpInWRQ = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpInWRQ.setStatus('mandatory')
wfTftpOutWRQ = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpOutWRQ.setStatus('mandatory')
wfTftpInRRQ = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpInRRQ.setStatus('mandatory')
wfTftpOutRRQ = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpOutRRQ.setStatus('mandatory')
wfTftpRexmitPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpRexmitPkts.setStatus('mandatory')
wfTftpInErr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpInErr.setStatus('mandatory')
wfTftpOutErr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpOutErr.setStatus('mandatory')
wfTftpAborts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 6, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTftpAborts.setStatus('mandatory')
wfTiRui = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 2))
wfTiRuiState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTiRuiState.setStatus('optional')
wfTiRuiAction = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTiRuiAction.setStatus('optional')
wfTiRuiResult = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTiRuiResult.setStatus('optional')
wfTiRuiInReqs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTiRuiInReqs.setStatus('optional')
wfTiRuiOutResults = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTiRuiOutResults.setStatus('optional')
wfTiRuiOutResultsErr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTiRuiOutResultsErr.setStatus('optional')
wfTokenRingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 2), )
if mibBuilder.loadTexts: wfTokenRingTable.setStatus('mandatory')
wfTokenRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfTokenRingSlot"), (0, "Wellfleet-Series7-MIB", "wfTokenRingConnector"))
if mibBuilder.loadTexts: wfTokenRingEntry.setStatus('mandatory')
wfTokenRingDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTokenRingDelete.setStatus('mandatory')
wfTokenRingDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTokenRingDisable.setStatus('mandatory')
wfTokenRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingState.setStatus('mandatory')
wfTokenRingSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 14))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingSlot.setStatus('mandatory')
wfTokenRingConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one", 1), ("two", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingConnector.setStatus('mandatory')
wfTokenRingCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 1023))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 1023)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTokenRingCct.setStatus('mandatory')
wfTokenRingMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4568))).clone(namedValues=NamedValues(("default", 4568))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingMtu.setStatus('mandatory')
wfTokenRingMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingMadr.setStatus('mandatory')
wfTokenRingCfgMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTokenRingCfgMadr.setStatus('mandatory')
wfTokenRingMadrSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("boxwide", 1), ("prom", 2), ("cnfg", 3))).clone('boxwide')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTokenRingMadrSelect.setStatus('mandatory')
wfTokenRingSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4194304, 16777216))).clone(namedValues=NamedValues(("mbps4", 4194304), ("mbps16", 16777216))).clone('mbps16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTokenRingSpeed.setStatus('mandatory')
wfTokenRingEarlyTokenRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfTokenRingEarlyTokenRelease.setStatus('mandatory')
wfTokenRingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingStatus.setStatus('mandatory')
wfTokenRingOpenState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("opened", 1), ("opening", 2), ("closing", 3), ("openfailure", 4), ("ringfailure", 5), ("closed", 6))).clone('closed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingOpenState.setStatus('mandatory')
wfTokenRingOpenStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("open", 1), ("badparam", 2), ("lobefailed", 3), ("signalloss", 4), ("insertiontimeout", 5), ("ringfailed", 6), ("beaconing", 7), ("duplicatemac", 8), ("requestfailed", 9), ("removereceived", 10), ("unkerror", 11), ("noopen", 12))).clone('noopen')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingOpenStatus.setStatus('mandatory')
wfTokenRingUpStream = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingUpStream.setStatus('mandatory')
wfTokenRingRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRxOctets.setStatus('mandatory')
wfTokenRingRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRxFrames.setStatus('mandatory')
wfTokenRingTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingTxOctets.setStatus('mandatory')
wfTokenRingTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingTxFrames.setStatus('mandatory')
wfTokenRingInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingInDiscards.setStatus('mandatory')
wfTokenRingInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingInErrors.setStatus('mandatory')
wfTokenRingOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingOutDiscards.setStatus('mandatory')
wfTokenRingOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingOutErrors.setStatus('mandatory')
wfTokenRingTxClipFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingTxClipFrames.setStatus('mandatory')
wfTokenRingRxReplenMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRxReplenMisses.setStatus('mandatory')
wfTokenRingSignalLosses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingSignalLosses.setStatus('mandatory')
wfTokenRingHardErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingHardErrors.setStatus('mandatory')
wfTokenRingSoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingSoftErrors.setStatus('mandatory')
wfTokenRingTransmitBeacons = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingTransmitBeacons.setStatus('mandatory')
wfTokenRingLobeWireFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingLobeWireFaults.setStatus('mandatory')
wfTokenRingAutoRemovalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingAutoRemovalErrors.setStatus('mandatory')
wfTokenRingRequestRemoves = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRequestRemoves.setStatus('mandatory')
wfTokenRingCounterOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingCounterOverflows.setStatus('mandatory')
wfTokenRingSingleStations = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingSingleStations.setStatus('mandatory')
wfTokenRingRingRecoveries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRingRecoveries.setStatus('mandatory')
wfTokenRingAdapterChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingAdapterChecks.setStatus('mandatory')
wfTokenRingFirstAdapterCheckCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingFirstAdapterCheckCode.setStatus('mandatory')
wfTokenRingLastAdapterCheckCode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingLastAdapterCheckCode.setStatus('mandatory')
wfTokenRingLineErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingLineErrors.setStatus('mandatory')
wfTokenRingBurstErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingBurstErrors.setStatus('mandatory')
wfTokenRingAriFciErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingAriFciErrors.setStatus('mandatory')
wfTokenRingLostFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingLostFrameErrors.setStatus('mandatory')
wfTokenRingRxCongestionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRxCongestionErrors.setStatus('mandatory')
wfTokenRingFrameCopiedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingFrameCopiedErrors.setStatus('mandatory')
wfTokenRingTokenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingTokenErrors.setStatus('mandatory')
wfTokenRingDmaBusErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingDmaBusErrors.setStatus('mandatory')
wfTokenRingDmaParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingDmaParityErrors.setStatus('mandatory')
wfTokenRingSrbNotFreeCmdAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingSrbNotFreeCmdAborts.setStatus('mandatory')
wfTokenRingRxProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRxProcessings.setStatus('mandatory')
wfTokenRingTxProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingTxProcessings.setStatus('mandatory')
wfTokenRingTxCmplProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingTxCmplProcessings.setStatus('mandatory')
wfTokenRingRxTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRxTimeouts.setStatus('mandatory')
wfTokenRingCmdTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingCmdTimeouts.setStatus('mandatory')
wfTokenRingRxHostIntErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRxHostIntErrors.setStatus('mandatory')
wfTokenRingRxTxBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 2, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTokenRingRxTxBufferSize.setStatus('mandatory')
wfVinesBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 1))
wfVinesBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesBaseDelete.setStatus('mandatory')
wfVinesBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesBaseDisable.setStatus('mandatory')
wfVinesBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesBaseState.setStatus('mandatory')
wfVinesBaseUserNetid = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2097151))).clone(namedValues=NamedValues(("minimum", 1), ("maximum", 2097151)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesBaseUserNetid.setStatus('mandatory')
wfVinesBaseRouterNetid = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesBaseRouterNetid.setStatus('mandatory')
wfVinesBaseBcastClass = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("bcast", 1), ("chrg", 2), ("cost", 3), ("lans", 4), ("srvr", 5), ("nochrg", 6), ("locost", 7), ("alllans", 8))).clone('bcast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesBaseBcastClass.setStatus('mandatory')
wfVinesIp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2))
wfVinesIpTotIn = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpTotIn.setStatus('mandatory')
wfVinesIpTotOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpTotOut.setStatus('mandatory')
wfVinesIpBad = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpBad.setStatus('mandatory')
wfVinesIpRouted = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpRouted.setStatus('mandatory')
wfVinesIpRoutedHWM = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpRoutedHWM.setStatus('mandatory')
wfVinesIpBcast = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpBcast.setStatus('mandatory')
wfVinesIpBcastHWM = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpBcastHWM.setStatus('mandatory')
wfVinesIpReass = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpReass.setStatus('mandatory')
wfVinesIpFrags = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpFrags.setStatus('mandatory')
wfVinesIpToDodIP = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpToDodIP.setStatus('mandatory')
wfVinesIpFromDodIP = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIpFromDodIP.setStatus('mandatory')
wfVinesRtpNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 3))
wfVinesRtpNbrNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrNumber.setStatus('mandatory')
wfVinesRtpNbrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4), )
if mibBuilder.loadTexts: wfVinesRtpNbrTable.setStatus('mandatory')
wfVinesRtpNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfVinesRtpNbrNetId"))
if mibBuilder.loadTexts: wfVinesRtpNbrEntry.setStatus('mandatory')
wfVinesRtpNbrNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrNetId.setStatus('mandatory')
wfVinesRtpNbrSubNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrSubNetId.setStatus('mandatory')
wfVinesRtpNbrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("workst", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrType.setStatus('mandatory')
wfVinesRtpNbrIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("enet", 1), ("tr4k", 2), ("tr16k", 3), ("hdlc1200", 4), ("hdlc4800", 5), ("hdlc9600", 6), ("hdlc56000", 7), ("async1200", 8), ("async4800", 9), ("async9600", 10), ("async56000", 11), ("x251200", 12), ("x254800", 13), ("x259600", 14), ("x2556000", 15), ("t145k", 16), ("t1128k", 17), ("t1192k", 18), ("t1256k", 19), ("t1320k", 20), ("t1384k", 21), ("t1448k", 22), ("t1512k", 23), ("t1576k", 24), ("t1640k", 25), ("t1704k", 26), ("t1896k", 27), ("t11088k", 28), ("t11344k", 29), ("tunnel", 30), ("fddi", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrIfType.setStatus('mandatory')
wfVinesRtpNbrRemAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrRemAdr.setStatus('mandatory')
wfVinesRtpNbrLocAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrLocAdr.setStatus('mandatory')
wfVinesRtpNbrLocSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrLocSlot.setStatus('mandatory')
wfVinesRtpNbrLocLine = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrLocLine.setStatus('mandatory')
wfVinesRtpNbrSvrName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrSvrName.setStatus('mandatory')
wfVinesRtpNbrCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpNbrCost.setStatus('mandatory')
wfVinesRtpRt = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 5))
wfVinesRtpRtNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpRtNumber.setStatus('mandatory')
wfVinesRtpRtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 6), )
if mibBuilder.loadTexts: wfVinesRtpRtTable.setStatus('mandatory')
wfVinesRtpRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfVinesRtpRtNetid"))
if mibBuilder.loadTexts: wfVinesRtpRtEntry.setStatus('mandatory')
wfVinesRtpRtNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpRtNetid.setStatus('mandatory')
wfVinesRtpRtMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpRtMetric.setStatus('mandatory')
wfVinesRtpRtIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpRtIdle.setStatus('mandatory')
wfVinesRtpRtGateNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpRtGateNetid.setStatus('mandatory')
wfVinesRtpRtSvrName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 6, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpRtSvrName.setStatus('mandatory')
wfVinesRtpRtGateSvrName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 6, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesRtpRtGateSvrName.setStatus('mandatory')
wfVinesIf = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 7))
wfVinesIfNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfNumber.setStatus('mandatory')
wfVinesIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8), )
if mibBuilder.loadTexts: wfVinesIfTable.setStatus('mandatory')
wfVinesIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfVinesIfCct"))
if mibBuilder.loadTexts: wfVinesIfEntry.setStatus('mandatory')
wfVinesIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesIfDelete.setStatus('mandatory')
wfVinesIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesIfDisable.setStatus('mandatory')
wfVinesIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfState.setStatus('mandatory')
wfVinesIfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfSlot.setStatus('mandatory')
wfVinesIfLine = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfLine.setStatus('mandatory')
wfVinesIfCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfCct.setStatus('mandatory')
wfVinesIfSession = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfSession.setStatus('mandatory')
wfVinesIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("enet", 1), ("tr4k", 2), ("tr16k", 3), ("hdlc1200", 4), ("hdlc4800", 5), ("hdlc9600", 6), ("hdlc56000", 7), ("async1200", 8), ("async4800", 9), ("async9600", 10), ("async56000", 11), ("x251200", 12), ("x254800", 13), ("x259600", 14), ("x2556000", 15), ("t145k", 16), ("t1128k", 17), ("t1192k", 18), ("t1256k", 19), ("t1320k", 20), ("t1384k", 21), ("t1448k", 22), ("t1512k", 23), ("t1576k", 24), ("t1640k", 25), ("t1704k", 26), ("t1896k", 27), ("t11088k", 28), ("t11344k", 29), ("tunnel", 30), ("fddi", 31))).clone('enet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesIfType.setStatus('mandatory')
wfVinesIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfDescr.setStatus('mandatory')
wfVinesIfAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfAdr.setStatus('mandatory')
wfVinesIfDodIpDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesIfDodIpDisable.setStatus('mandatory')
wfVinesIfArpDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesIfArpDisable.setStatus('mandatory')
wfVinesIfTrEndStation = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesIfTrEndStation.setStatus('mandatory')
wfVinesIfInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfInPkts.setStatus('mandatory')
wfVinesIfInErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfInErrs.setStatus('mandatory')
wfVinesIfOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfOutPkts.setStatus('mandatory')
wfVinesIfOutErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfOutErrs.setStatus('mandatory')
wfVinesIfInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfInMsgs.setStatus('mandatory')
wfVinesIfMux = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enet", 1), ("snap", 2))).clone('enet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesIfMux.setStatus('mandatory')
wfVinesIfFwdDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfFwdDrops.setStatus('mandatory')
wfVinesIfZeroHopDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfZeroHopDrops.setStatus('mandatory')
wfVinesIfIcpInErrorNotifs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfIcpInErrorNotifs.setStatus('mandatory')
wfVinesIfIcpInMetricNotifs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfIcpInMetricNotifs.setStatus('mandatory')
wfVinesIfIcpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfIcpInErrors.setStatus('mandatory')
wfVinesIfIcpOutErrorNotifs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfIcpOutErrorNotifs.setStatus('mandatory')
wfVinesIfIcpOutMetricNotifs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfIcpOutMetricNotifs.setStatus('mandatory')
wfVinesIfArpInQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfArpInQueries.setStatus('mandatory')
wfVinesIfArpInAssgReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfArpInAssgReqs.setStatus('mandatory')
wfVinesIfArpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfArpInErrors.setStatus('mandatory')
wfVinesIfArpOutServRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfArpOutServRsps.setStatus('mandatory')
wfVinesIfArpOutAssgRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfArpOutAssgRsps.setStatus('mandatory')
wfVinesIfInRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfInRedirects.setStatus('mandatory')
wfVinesIfOutRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfOutRedirects.setStatus('mandatory')
wfVinesIfEchoInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfEchoInPkts.setStatus('mandatory')
wfVinesIfEchoOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfEchoOutPkts.setStatus('mandatory')
wfVinesIfReassFails = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfReassFails.setStatus('mandatory')
wfVinesIfRemClientPrivDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 8, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesIfRemClientPrivDisable.setStatus('mandatory')
wfVinesIfX25VC = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 9))
wfVinesIfX25VCNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCNumber.setStatus('mandatory')
wfVinesIfX25VCTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10), )
if mibBuilder.loadTexts: wfVinesIfX25VCTable.setStatus('mandatory')
wfVinesIfX25VCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfVinesIfX25VCCct"))
if mibBuilder.loadTexts: wfVinesIfX25VCEntry.setStatus('mandatory')
wfVinesIfX25VCSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCSlot.setStatus('mandatory')
wfVinesIfX25VCLine = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCLine.setStatus('mandatory')
wfVinesIfX25VCCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCCct.setStatus('mandatory')
wfVinesIfX25VCSession = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCSession.setStatus('mandatory')
wfVinesIfX25VCTotIn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCTotIn.setStatus('mandatory')
wfVinesIfX25VCTotOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCTotOut.setStatus('mandatory')
wfVinesIfX25VCInErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCInErrs.setStatus('mandatory')
wfVinesIfX25VCOutErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCOutErrs.setStatus('mandatory')
wfVinesIfX25VCPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCPktsOut.setStatus('mandatory')
wfVinesIfX25VCPktsAwaitAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCPktsAwaitAck.setStatus('mandatory')
wfVinesIfX25VCBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCBytesOut.setStatus('mandatory')
wfVinesIfX25VCBytesAwaitAck = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCBytesAwaitAck.setStatus('mandatory')
wfVinesIfX25VCPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCPktsIn.setStatus('mandatory')
wfVinesIfX25VCBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCBytesIn.setStatus('mandatory')
wfVinesIfX25VCResetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCResetsIn.setStatus('mandatory')
wfVinesIfX25VCResetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 10, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesIfX25VCResetsOut.setStatus('mandatory')
wfVinesTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11), )
if mibBuilder.loadTexts: wfVinesTrafficFilterTable.setStatus('mandatory')
wfVinesTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfVinesTrafficFilterCircuit"), (0, "Wellfleet-Series7-MIB", "wfVinesTrafficFilterRuleNumber"), (0, "Wellfleet-Series7-MIB", "wfVinesTrafficFilterFragment"))
if mibBuilder.loadTexts: wfVinesTrafficFilterEntry.setStatus('mandatory')
wfVinesTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesTrafficFilterCreate.setStatus('mandatory')
wfVinesTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesTrafficFilterEnable.setStatus('mandatory')
wfVinesTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesTrafficFilterStatus.setStatus('mandatory')
wfVinesTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesTrafficFilterCounter.setStatus('mandatory')
wfVinesTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesTrafficFilterDefinition.setStatus('mandatory')
wfVinesTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1, 6), Integer32())
if mibBuilder.loadTexts: wfVinesTrafficFilterReserved.setStatus('mandatory')
wfVinesTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesTrafficFilterCircuit.setStatus('mandatory')
wfVinesTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesTrafficFilterRuleNumber.setStatus('mandatory')
wfVinesTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 11, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesTrafficFilterFragment.setStatus('mandatory')
wfVinesNameTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 12), )
if mibBuilder.loadTexts: wfVinesNameTable.setStatus('mandatory')
wfVinesNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 12, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfVinesNameNetid"))
if mibBuilder.loadTexts: wfVinesNameEntry.setStatus('mandatory')
wfVinesNameDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesNameDelete.setStatus('mandatory')
wfVinesNameDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesNameDisable.setStatus('mandatory')
wfVinesNameNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 12, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesNameNetid.setStatus('mandatory')
wfVinesNameHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 12, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesNameHost.setStatus('mandatory')
wfVinesNameSubNetid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 12, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesNameSubNetid.setStatus('mandatory')
wfVinesArp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 13))
wfVinesArpDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesArpDelete.setStatus('mandatory')
wfVinesArpDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesArpDisable.setStatus('mandatory')
wfVinesArpState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesArpState.setStatus('mandatory')
wfVinesArpSubnetid = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 13, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesArpSubnetid.setStatus('mandatory')
wfVinesArpSubnetBlock = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 32))).clone(namedValues=NamedValues(("minimum", 1), ("default", 2), ("maximum", 32))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVinesArpSubnetBlock.setStatus('mandatory')
wfVinesArpAssignDeniedPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 8, 13, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVinesArpAssignDeniedPkts.setStatus('mandatory')
wfXnsBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1))
wfXnsBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsBaseDelete.setStatus('mandatory')
wfXnsBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsBaseDisable.setStatus('mandatory')
wfXnsBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseState.setStatus('mandatory')
wfXnsBaseHostNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsBaseHostNumber.setStatus('mandatory')
wfXnsBaseRtEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2), )
if mibBuilder.loadTexts: wfXnsBaseRtEntryTable.setStatus('mandatory')
wfXnsBaseRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfXnsBaseRouteDest"))
if mibBuilder.loadTexts: wfXnsBaseRtEntry.setStatus('mandatory')
wfXnsBaseRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteDest.setStatus('mandatory')
wfXnsBaseRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteIfIndex.setStatus('mandatory')
wfXnsBaseRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteMetric.setStatus('mandatory')
wfXnsBaseRouteNextHopNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteNextHopNetwork.setStatus('mandatory')
wfXnsBaseRouteNextHopHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteNextHopHost.setStatus('mandatory')
wfXnsBaseRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("indirect", 4), ("static", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteType.setStatus('mandatory')
wfXnsBaseRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("rip", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteProto.setStatus('mandatory')
wfXnsBaseRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteAge.setStatus('mandatory')
wfXnsBaseRouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 2, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsBaseRouteInfo.setStatus('mandatory')
wfXnsInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3), )
if mibBuilder.loadTexts: wfXnsInterfaceTable.setStatus('mandatory')
wfXnsInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfXnsInterfaceNetworkNumber"), (0, "Wellfleet-Series7-MIB", "wfXnsInterfaceCircuit"))
if mibBuilder.loadTexts: wfXnsInterfaceEntry.setStatus('mandatory')
wfXnsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceIndex.setStatus('mandatory')
wfXnsInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceDelete.setStatus('mandatory')
wfXnsInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceDisable.setStatus('mandatory')
wfXnsInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceState.setStatus('mandatory')
wfXnsInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceCircuit.setStatus('mandatory')
wfXnsInterfaceNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceNetworkNumber.setStatus('mandatory')
wfXnsInterfaceCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceCost.setStatus('mandatory')
wfXnsInterfaceXsumOn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceXsumOn.setStatus('mandatory')
wfXnsInterfaceEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("snap", 2))).clone('ethernet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceEncaps.setStatus('mandatory')
wfXnsInterfaceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceMacAddress.setStatus('mandatory')
wfXnsInterfaceSMDSGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceSMDSGroupAddress.setStatus('mandatory')
wfXnsInterfaceMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceMaxInfo.setStatus('mandatory')
wfXnsInterfaceExtServer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExtServer.setStatus('mandatory')
wfXnsInterfaceExServNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 14), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExServNetwork.setStatus('mandatory')
wfXnsInterfaceExServHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExServHostId.setStatus('mandatory')
wfXnsInterfaceExServPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExServPktType.setStatus('mandatory')
wfXnsInterfaceExServSockNm = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceExServSockNm.setStatus('mandatory')
wfXnsInterfaceInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInReceives.setStatus('mandatory')
wfXnsInterfaceInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInHdrErrors.setStatus('mandatory')
wfXnsInterfaceInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInAddrErrors.setStatus('mandatory')
wfXnsInterfaceForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceForwDatagrams.setStatus('mandatory')
wfXnsInterfaceInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInUnknownProtos.setStatus('mandatory')
wfXnsInterfaceInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInDiscards.setStatus('mandatory')
wfXnsInterfaceInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceInDelivers.setStatus('mandatory')
wfXnsInterfaceOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceOutRequests.setStatus('mandatory')
wfXnsInterfaceOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceOutDiscards.setStatus('mandatory')
wfXnsInterfaceOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsInterfaceOutNoRoutes.setStatus('mandatory')
wfXnsInterfaceFRBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 28), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceFRBcast.setStatus('mandatory')
wfXnsInterfaceFRMcast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 3, 1, 29), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsInterfaceFRMcast.setStatus('mandatory')
wfXnsRipIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4), )
if mibBuilder.loadTexts: wfXnsRipIntfTable.setStatus('mandatory')
wfXnsRipIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfXnsRipInterfaceIndex"))
if mibBuilder.loadTexts: wfXnsRipIntfEntry.setStatus('mandatory')
wfXnsRipInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsRipInterfaceDelete.setStatus('mandatory')
wfXnsRipInterfaceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsRipInterfaceDisable.setStatus('mandatory')
wfXnsRipInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsRipInterfaceState.setStatus('mandatory')
wfXnsRipInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsRipInterfaceIndex.setStatus('mandatory')
wfXnsRipInterfaceSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsRipInterfaceSupply.setStatus('mandatory')
wfXnsRipInterfaceListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsRipInterfaceListen.setStatus('mandatory')
wfXnsAdjacentHostTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5), )
if mibBuilder.loadTexts: wfXnsAdjacentHostTable.setStatus('mandatory')
wfXnsAdjacentHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfXnsAhTargHostNetwork"), (0, "Wellfleet-Series7-MIB", "wfXnsAhTargHostId"))
if mibBuilder.loadTexts: wfXnsAdjacentHostEntry.setStatus('mandatory')
wfXnsAhDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsAhDelete.setStatus('mandatory')
wfXnsAhDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsAhDisable.setStatus('mandatory')
wfXnsAhTargHostNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAhTargHostNetwork.setStatus('mandatory')
wfXnsAhTargHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsAhTargHostId.setStatus('mandatory')
wfXnsAhNextHopIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsAhNextHopIntf.setStatus('mandatory')
wfXnsAhDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 5, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsAhDlci.setStatus('mandatory')
wfXnsStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6), )
if mibBuilder.loadTexts: wfXnsStaticRouteTable.setStatus('mandatory')
wfXnsStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfXnsSrTargNetwork"), (0, "Wellfleet-Series7-MIB", "wfXnsSrNextHopNetwork"))
if mibBuilder.loadTexts: wfXnsStaticRouteEntry.setStatus('mandatory')
wfXnsSrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsSrDelete.setStatus('mandatory')
wfXnsSrDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsSrDisable.setStatus('mandatory')
wfXnsSrTargNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsSrTargNetwork.setStatus('mandatory')
wfXnsSrCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsSrCost.setStatus('mandatory')
wfXnsSrNextHopNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsSrNextHopNetwork.setStatus('mandatory')
wfXnsSrNextHopHost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsSrNextHopHost.setStatus('mandatory')
wfXnsSrTargNetworkRt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsSrTargNetworkRt.setStatus('mandatory')
wfXnsTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7), )
if mibBuilder.loadTexts: wfXnsTrafficFilterTable.setStatus('mandatory')
wfXnsTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1), ).setIndexNames((0, "Wellfleet-Series7-MIB", "wfXnsTrafficFilterInterface"), (0, "Wellfleet-Series7-MIB", "wfXnsTrafficFilterCircuit"), (0, "Wellfleet-Series7-MIB", "wfXnsTrafficFilterRuleNumber"), (0, "Wellfleet-Series7-MIB", "wfXnsTrafficFilterFragment"))
if mibBuilder.loadTexts: wfXnsTrafficFilterEntry.setStatus('mandatory')
wfXnsTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsTrafficFilterCreate.setStatus('mandatory')
wfXnsTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsTrafficFilterEnable.setStatus('mandatory')
wfXnsTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterStatus.setStatus('mandatory')
wfXnsTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterCounter.setStatus('mandatory')
wfXnsTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfXnsTrafficFilterDefinition.setStatus('mandatory')
wfXnsTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 6), Integer32())
if mibBuilder.loadTexts: wfXnsTrafficFilterReserved.setStatus('mandatory')
wfXnsTrafficFilterInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterInterface.setStatus('mandatory')
wfXnsTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterCircuit.setStatus('mandatory')
wfXnsTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterRuleNumber.setStatus('mandatory')
wfXnsTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 10, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfXnsTrafficFilterFragment.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-Series7-MIB", wfFddiMacNode=wfFddiMacNode, wfOspfVirtNbrRtrId=wfOspfVirtNbrRtrId, wfTftpInErr=wfTftpInErr, wfCSMACDMerr=wfCSMACDMerr, wfVinesRtpRtTable=wfVinesRtpRtTable, wfHssiTxAborts=wfHssiTxAborts, wfXnsRipIntfEntry=wfXnsRipIntfEntry, wfDs1TotalESs=wfDs1TotalESs, wfivCircuitCommonState=wfivCircuitCommonState, wfApplePortRtmpNextIREqualChanges=wfApplePortRtmpNextIREqualChanges, wfFDDISmtConnectionPolicy=wfFDDISmtConnectionPolicy, wfHwfLineCurrentUsedEntries=wfHwfLineCurrentUsedEntries, wfModMk50252=wfModMk50252, wfivCircuitAllRoutersMac=wfivCircuitAllRoutersMac, wfIpBaseRouteProto=wfIpBaseRouteProto, wfBrStpInterfaceDesignatedBridge=wfBrStpInterfaceDesignatedBridge, wfOspfIfMetricCost=wfOspfIfMetricCost, wfSnmpTrapFault=wfSnmpTrapFault, wfAppleLclZoneName=wfAppleLclZoneName, wfBrTrafficFilterStatus=wfBrTrafficFilterStatus, wfHwfState=wfHwfState, wfFrDlcmiPolls=wfFrDlcmiPolls, wfXnsTrafficFilterFragment=wfXnsTrafficFilterFragment, wfIpRfOspfExportFromProtocol=wfIpRfOspfExportFromProtocol, wfXnsSrDelete=wfXnsSrDelete, wfTftpInFiles=wfTftpInFiles, wfivTrafficFilterRuleNumber=wfivTrafficFilterRuleNumber, wfIfTable=wfIfTable, wfModIlacc3=wfModIlacc3, wfIpInterfaceIcmpOutParmProbs=wfIpInterfaceIcmpOutParmProbs, wfVinesIfAdr=wfVinesIfAdr, wfApplePortEntry=wfApplePortEntry, wfLinesPerScreen=wfLinesPerScreen, wfDs1ConfigEntry=wfDs1ConfigEntry, wfVinesArpSubnetid=wfVinesArpSubnetid, wfDs3IntervalCVs=wfDs3IntervalCVs, wfAppleRtmpPort=wfAppleRtmpPort, wfArpGroup=wfArpGroup, wfHwEntry=wfHwEntry, wfOspfVirtIfDelete=wfOspfVirtIfDelete, wfFddiSmtGroup=wfFddiSmtGroup, wfIpGroup=wfIpGroup, wfIpAdjHostCreate=wfIpAdjHostCreate, wfBrSrBaseIpSeqErrors=wfBrSrBaseIpSeqErrors, wfivStaticAdjEntry=wfivStaticAdjEntry, wfHwfTable=wfHwfTable, wfOspfIfPollInterval=wfOspfIfPollInterval, wfKernelMemOwnerTask5=wfKernelMemOwnerTask5, wfivAdjPriority=wfivAdjPriority, wfIpInterfaceMask=wfIpInterfaceMask, wfIpBaseRipDiameter=wfIpBaseRipDiameter, wfHssiRxRingErrors=wfHssiRxRingErrors, wfBrStpInterfaceState=wfBrStpInterfaceState, wfAppleBaseDisable=wfAppleBaseDisable, wfDs1FeCurrentIndex=wfDs1FeCurrentIndex, wfIpxInterfaceInUnknownProtos=wfIpxInterfaceInUnknownProtos, wfSyncMediaType=wfSyncMediaType, wfIpxInterfaceCfgEncaps=wfIpxInterfaceCfgEncaps, wfivRouteMaxArea=wfivRouteMaxArea, wfIpInterfaceInDiscards=wfIpInterfaceInDiscards, wfIpxBaseCfgHostNumber=wfIpxBaseCfgHostNumber, wfOspfNbrOptions=wfOspfNbrOptions, wfOspfLsdbRouterId=wfOspfLsdbRouterId, wfIpxBaseNetCount=wfIpxBaseNetCount, wfivLevel1RouteTable=wfivLevel1RouteTable, wfSoftwareConfig=wfSoftwareConfig, wfIfDescr=wfIfDescr, wfOspfVirtIfTransitDelay=wfOspfVirtIfTransitDelay, wfVinesIfX25VCPktsAwaitAck=wfVinesIfX25VCPktsAwaitAck, wfBrSrInterfaceBlockOutSte=wfBrSrInterfaceBlockOutSte, wfApplePortZipInZipExtendedReplies=wfApplePortZipInZipExtendedReplies, wfXnsBaseRouteNextHopNetwork=wfXnsBaseRouteNextHopNetwork, wfKernelBufOwnerTask2=wfKernelBufOwnerTask2, wfFddiPortPcNeighbor=wfFddiPortPcNeighbor, wfFDDIInternOpErr=wfFDDIInternOpErr, wfFNSDSDTLoad=wfFNSDSDTLoad, wfTotalLogins=wfTotalLogins, wfTftpCloseTimeOut=wfTftpCloseTimeOut, wfCctOptsLengthBasedCct=wfCctOptsLengthBasedCct, wfApplePortAarpRspTxs=wfApplePortAarpRspTxs, wfIpSrNextHopAddr=wfIpSrNextHopAddr, wfIpxTrafficFilterReserved=wfIpxTrafficFilterReserved, wfSyncLackRescRx=wfSyncLackRescRx, wfVinesIfX25VCPktsIn=wfVinesIfX25VCPktsIn, wfDs1ValidIntervals=wfDs1ValidIntervals, wfSyncCct=wfSyncCct, wfBrTpInterfaceEnable=wfBrTpInterfaceEnable, wfArpBaseCreate=wfArpBaseCreate, wfivCircuitCountOverSzePktLoss=wfivCircuitCountOverSzePktLoss, wfIpInterfaceTrEndStation=wfIpInterfaceTrEndStation, wfHwModIdOpt=wfHwModIdOpt, wfBrSrInterfaceTable=wfBrSrInterfaceTable, wfApplePortNetEnd=wfApplePortNetEnd, wfSnmpCommDelete=wfSnmpCommDelete, wfOspfNbrIpAddr=wfOspfNbrIpAddr, wfHwBpSerialNumber=wfHwBpSerialNumber, wfXnsAhDlci=wfXnsAhDlci, wfIpxTrafficFilterStatus=wfIpxTrafficFilterStatus, wfSnmp=wfSnmp, wfIpxSrTargNetworkRt=wfIpxSrTargNetworkRt, wfCctOptsLengthBasedGreaterThanQ=wfCctOptsLengthBasedGreaterThanQ, wfModHlsrData=wfModHlsrData, wfOspfIfTxDBDescripts=wfOspfIfTxDBDescripts, wfIpBaseRouteAge=wfIpBaseRouteAge, wfBrSrEsRifRoute=wfBrSrEsRifRoute, wfTokenRingTxFrames=wfTokenRingTxFrames, wfIpxSapNetLvlAction=wfIpxSapNetLvlAction, wfApplePortRtmpNetworkMismatchErrors=wfApplePortRtmpNetworkMismatchErrors, wfIPROTOLoad=wfIPROTOLoad, wfSnmpCommIndex=wfSnmpCommIndex, wfIpxRipIntfEntry=wfIpxRipIntfEntry, wfVinesIfX25VCEntry=wfVinesIfX25VCEntry, wfT1Entry=wfT1Entry, wfApplePortDdpInLocalDatagrams=wfApplePortDdpInLocalDatagrams, wfSnmpOutGenErrs=wfSnmpOutGenErrs, wfIpxInterfaceCost=wfIpxInterfaceCost, wfKernelBufOwnerTask1Bufs=wfKernelBufOwnerTask1Bufs, wfIpTrafficFilterStatus=wfIpTrafficFilterStatus, wfBrSrTrafficFilterTable=wfBrSrTrafficFilterTable, wfVinesTrafficFilterStatus=wfVinesTrafficFilterStatus, wfSnmpOutTooBigs=wfSnmpOutTooBigs, wfArpBase=wfArpBase, wfIpxBaseSapNetwork=wfIpxBaseSapNetwork, wfDs3IntervalUASs=wfDs3IntervalUASs, wfOspfSlotMask=wfOspfSlotMask, wfIpRfRipExportAddress=wfIpRfRipExportAddress, wfIfOutQLen=wfIfOutQLen, wfModState=wfModState, wfVinesIfArpInQueries=wfVinesIfArpInQueries, wfXnsBaseRouteDest=wfXnsBaseRouteDest, wfHssiRxFifoWatermark=wfHssiRxFifoWatermark, wfKernelBufOwnerTask1=wfKernelBufOwnerTask1, wfFDDISlot=wfFDDISlot, wfE1RcvRemAlms=wfE1RcvRemAlms, wfIpBaseDefaultTTL=wfIpBaseDefaultTTL, wfIpInterfaceUdpXsumOn=wfIpInterfaceUdpXsumOn, wfIpBaseEnable=wfIpBaseEnable, wfIpInterfaceReasmFails=wfIpInterfaceReasmFails, wfSyncMadr=wfSyncMadr, wfIpInterfaceOutRequests=wfIpInterfaceOutRequests, wfOspfDynNbrPriority=wfOspfDynNbrPriority, wfVinesNameDisable=wfVinesNameDisable, wfBCNPwrSupply4=wfBCNPwrSupply4, wfVinesTrafficFilterFragment=wfVinesTrafficFilterFragment, wfBrTpBaseFdbStatus=wfBrTpBaseFdbStatus, wfIpxRipInterfaceListen=wfIpxRipInterfaceListen, wfCctOptsIpFilterEnable=wfCctOptsIpFilterEnable, wfDataBits=wfDataBits, wfDs1Config=wfDs1Config, wfT1B8ZSSupport=wfT1B8ZSSupport, wfOspfAreaRangeAreaID=wfOspfAreaRangeAreaID, wfFddiMacUpstreamNbr=wfFddiMacUpstreamNbr, wfIpxInterfaceSMDSGroupAddress=wfIpxInterfaceSMDSGroupAddress, wfKernelBufOwnerTask3=wfKernelBufOwnerTask3, wfRipInterfaceDefaultRouteSupply=wfRipInterfaceDefaultRouteSupply, wfIpAdjHostIpAddress=wfIpAdjHostIpAddress, wfT1MiniDacs=wfT1MiniDacs, wfOspfNbrState=wfOspfNbrState, wfModMisr=wfModMisr, wfDs3IntervalNumber=wfDs3IntervalNumber, wfDs3FeTotal=wfDs3FeTotal, wfTokenRingLineErrors=wfTokenRingLineErrors, wfCctOptsDelete=wfCctOptsDelete, wfTokenRingOutErrors=wfTokenRingOutErrors, wfKernelMemOwnerTask1Size=wfKernelMemOwnerTask1Size, wfXnsBaseRouteProto=wfXnsBaseRouteProto, wfXnsTrafficFilterStatus=wfXnsTrafficFilterStatus, wfDs1TotalIndex=wfDs1TotalIndex, wfVinesIfIcpInErrors=wfVinesIfIcpInErrors, wfIpxSapServtLvlFilterTable=wfIpxSapServtLvlFilterTable, wfCSMACDRxQueueLength=wfCSMACDRxQueueLength, wfOspfVirtNbrEvents=wfOspfVirtNbrEvents, wfIpRfOspfExportEntry=wfIpRfOspfExportEntry, wfModLance1=wfModLance1, wfBrSrIpEncapsTable=wfBrSrIpEncapsTable, wfXnsInterfaceSMDSGroupAddress=wfXnsInterfaceSMDSGroupAddress, wfVinesArpState=wfVinesArpState, wfIpInterfaceCreate=wfIpInterfaceCreate, wfTtyParityErrors=wfTtyParityErrors, wfOspfDynNbrRtrId=wfOspfDynNbrRtrId, wfSyncRxFrames=wfSyncRxFrames, wfFDDIPortOpErr=wfFDDIPortOpErr, wfFDDIRxReplenMisses=wfFDDIRxReplenMisses, wfXnsInterfaceDelete=wfXnsInterfaceDelete, wfIpBase=wfIpBase, wfT1BipolarVios=wfT1BipolarVios, wfApplePortRtmpRouteDeletes=wfApplePortRtmpRouteDeletes, wfIfOutOctets=wfIfOutOctets, wfArpIntfEntry=wfArpIntfEntry, wfIpxSapServLvlAction=wfIpxSapServLvlAction, wfivCircuitNodeAddr=wfivCircuitNodeAddr, wfFDDIEnable=wfFDDIEnable, wfIpRfRipExportTable=wfIpRfRipExportTable, wfHssiMtu=wfHssiMtu, wfIpInterfaceEnable=wfIpInterfaceEnable, wfOspfImportASExtern=wfOspfImportASExtern, wfBrStpInterfacePktsRcvd=wfBrStpInterfacePktsRcvd, wfDs1FeCurrentESs=wfDs1FeCurrentESs, wfModDefaB=wfModDefaB, wfDs1CurrentSESs=wfDs1CurrentSESs, wfSmdsCircuitDisableHrtbtPoll=wfSmdsCircuitDisableHrtbtPoll, wfAppleBaseTotalZones=wfAppleBaseTotalZones, wfCctOptsRxPkts=wfCctOptsRxPkts, wfFddiSmtEcmState=wfFddiSmtEcmState, wfIpRfRipExportAction=wfIpRfRipExportAction, wfivStaticAdjArea=wfivStaticAdjArea, wfFrDlcmiSeqCount=wfFrDlcmiSeqCount, wfT1RcvCarrierLoss=wfT1RcvCarrierLoss, wfKernelMemOwnerTask9=wfKernelMemOwnerTask9, wfivCircuitExecHelloTimer=wfivCircuitExecHelloTimer, wfCctOptsHiClippedPkts=wfCctOptsHiClippedPkts, wfOspfVirtIfTxLinkStateAcks=wfOspfVirtIfTxLinkStateAcks, wfIpxRipIntfTable=wfIpxRipIntfTable, wfTokenRingDisable=wfTokenRingDisable, wfivCircuitExecCost=wfivCircuitExecCost, wfFDDIUnderrunTx=wfFDDIUnderrunTx, wfHssiPortOpErrors=wfHssiPortOpErrors, wfE1Slot=wfE1Slot, wfIpRfRipImportPreference=wfIpRfRipImportPreference, wfSysServices=wfSysServices, wfFrCircuitSentFrames=wfFrCircuitSentFrames, wfAppleAarpPhysAddress=wfAppleAarpPhysAddress, wfVinesIpBcast=wfVinesIpBcast, wfT1Slot=wfT1Slot, wfSipDs1Plcp=wfSipDs1Plcp, wfApplePortCurNodeId=wfApplePortCurNodeId, wfDs3FeCurrentSESs=wfDs3FeCurrentSESs, wfModFramer2=wfModFramer2, wfIpxSrDisable=wfIpxSrDisable, wfSmdsCircuitHrtbtPollInterval=wfSmdsCircuitHrtbtPollInterval, wfMod=wfMod, wfIpSrIpNetMask=wfIpSrIpNetMask, wfBrSrIpExplorerAddr=wfBrSrIpExplorerAddr, wfOspfIfTxLinkStateReqs=wfOspfIfTxLinkStateReqs, wfXnsBaseRouteIfIndex=wfXnsBaseRouteIfIndex, wfSmdsCircuitEntry=wfSmdsCircuitEntry, wfBrStpMaxAge=wfBrStpMaxAge, wfDs1FeTotalESs=wfDs1FeTotalESs, wfIpAdjHostMacAddr=wfIpAdjHostMacAddr, wfIpInterfaceMTUDiscovery=wfIpInterfaceMTUDiscovery, wfIpxSapServLvlTargServer=wfIpxSapServLvlTargServer, wfFddiMacSmtAddress=wfFddiMacSmtAddress, wfivLevel1RouteHops=wfivLevel1RouteHops, wfIpxNetBiosSrIndex=wfIpxNetBiosSrIndex, wfIpxInterfaceInDelivers=wfIpxInterfaceInDelivers, wfKernelMemOwnerTask2Size=wfKernelMemOwnerTask2Size, wfIpxSapNetLvlFilter=wfIpxSapNetLvlFilter, wfCctOptsCct=wfCctOptsCct, wfXnsInterfaceOutRequests=wfXnsInterfaceOutRequests, wfOspfVirtIfRxLinkStateUpds=wfOspfVirtIfRxLinkStateUpds, wfRipInterfaceIndex=wfRipInterfaceIndex, wfAppletalkGroup=wfAppletalkGroup, wfApplePortZipInZipQueries=wfApplePortZipInZipQueries, wfSyncRxErrors=wfSyncRxErrors)
mibBuilder.exportSymbols("Wellfleet-Series7-MIB", wfIpxSapNetLvlFilterTable=wfIpxSapNetLvlFilterTable, wfSnmpMgrName=wfSnmpMgrName, wfHssiRxReplenMisses=wfHssiRxReplenMisses, wfBrStpProtocolSpecification=wfBrStpProtocolSpecification, wfIpStaticRouteTable=wfIpStaticRouteTable, wfDs1FeIntervalESs=wfDs1FeIntervalESs, wfKernelTimersActive=wfKernelTimersActive, wfivCircuitDesigRouterNodeAddr=wfivCircuitDesigRouterNodeAddr, wfHwBootPromSource=wfHwBootPromSource, wfFddiPortIndex=wfFddiPortIndex, wfApplePortZipOutGetNetInfoReplies=wfApplePortZipOutGetNetInfoReplies, wfCctOptsIpFilterEntry=wfCctOptsIpFilterEntry, wfTokenRingDmaParityErrors=wfTokenRingDmaParityErrors, wfKernelMemoryFree=wfKernelMemoryFree, wfVinesIfX25VCTotOut=wfVinesIfX25VCTotOut, wfivRouteBroadcastRouteTimer=wfivRouteBroadcastRouteTimer, wfIpxInterfaceWanSapPeriod=wfIpxInterfaceWanSapPeriod, wfBrStpInterfaceEnable=wfBrStpInterfaceEnable, wfRipInterfacePoisonedReversed=wfRipInterfacePoisonedReversed, wfOspfAreaDelete=wfOspfAreaDelete, wfSyncRetryTimer=wfSyncRetryTimer, wfIpInterfaceInUnknownProtos=wfIpInterfaceInUnknownProtos, wfIpInterfaceIcmpOutDestUnreachs=wfIpInterfaceIcmpOutDestUnreachs, wfVinesIp=wfVinesIp, wfBrStpInterfaceMultiCastAddr=wfBrStpInterfaceMultiCastAddr, wfIpInterfaceMacAddress=wfIpInterfaceMacAddress, wfDs1IntervalIndex=wfDs1IntervalIndex, wfAppleAarpNode=wfAppleAarpNode, wfBrSrInterfaceRing=wfBrSrInterfaceRing, wfivLevel1RouteEntry=wfivLevel1RouteEntry, wfivTrafficFilterCircuit=wfivTrafficFilterCircuit, wfIpxAhDlci=wfIpxAhDlci, wfFrDlcmiMulticast=wfFrDlcmiMulticast, wfTokenRingLastAdapterCheckCode=wfTokenRingLastAdapterCheckCode, wfFddiMacRmtState=wfFddiMacRmtState, wfKernelBuffersFree=wfKernelBuffersFree, wfFDDIMacErrRx=wfFDDIMacErrRx, wfXnsInterfaceEntry=wfXnsInterfaceEntry, wfIfInErrors=wfIfInErrors, wfDs1Current=wfDs1Current, wfIpxBase=wfIpxBase, wfIpxSapServLvlFilter=wfIpxSapServLvlFilter, wfVinesIfEntry=wfVinesIfEntry, wfX25Group=wfX25Group, wfT1ClockMode=wfT1ClockMode, wfIpInterfaceAMR=wfIpInterfaceAMR, wfVinesArpSubnetBlock=wfVinesArpSubnetBlock, wfBrTrafficFilterFragment=wfBrTrafficFilterFragment, wfSyncUnderFlowTx=wfSyncUnderFlowTx, wfIpInterfaceFRMcast1Dlci=wfIpInterfaceFRMcast1Dlci, wfIpInterfaceIcmpOutTimeExcds=wfIpInterfaceIcmpOutTimeExcds, wfVinesRtpNbrCost=wfVinesRtpNbrCost, wfFrDlcmiMaxSupportedVCs=wfFrDlcmiMaxSupportedVCs, wfCctOptsIpFilterReserved=wfCctOptsIpFilterReserved, wfVinesRtpNbr=wfVinesRtpNbr, wfivAreaCircuitID=wfivAreaCircuitID, wfDs1FeTotalSEFs=wfDs1FeTotalSEFs, wfIpxInterfaceNetbiosAccept=wfIpxInterfaceNetbiosAccept, wfHssiRxOverruns=wfHssiRxOverruns, wfHwBabyBdRev=wfHwBabyBdRev, wfBrTpFdbEntry=wfBrTpFdbEntry, wfOspfVirtNbrLSRetransQLen=wfOspfVirtNbrLSRetransQLen, wfIpRfRipImportRipGateway=wfIpRfRipImportRipGateway, wfOspfAreaRangeMask=wfOspfAreaRangeMask, wfDs1SendCode=wfDs1SendCode, wfCctOptsLengthBasedState=wfCctOptsLengthBasedState, wfVinesIfIcpInMetricNotifs=wfVinesIfIcpInMetricNotifs, wfFrErrDiscards=wfFrErrDiscards, wfBrSrBridgeDelete=wfBrSrBridgeDelete, wfApplePortRtmpInRequestPkts=wfApplePortRtmpInRequestPkts, wfVinesRtpRtGateSvrName=wfVinesRtpRtGateSvrName, wfModMled=wfModMled, wfXnsInterfaceInDelivers=wfXnsInterfaceInDelivers, wfVinesBaseDelete=wfVinesBaseDelete, wfCSMACDMadr=wfCSMACDMadr, wfivCircuitCountRtHelloRcvd=wfivCircuitCountRtHelloRcvd, wfHwfDelete=wfHwfDelete, wfSysGmtOffset=wfSysGmtOffset, wfBrTpInterfaceOutFrames=wfBrTpInterfaceOutFrames, wfivCircuitHelloEnableDisable=wfivCircuitHelloEnableDisable, wfivAdjState=wfivAdjState, wfBrStpHoldTime=wfBrStpHoldTime, wfSyncTxFrames=wfSyncTxFrames, wfHssiRxLongFrames=wfHssiRxLongFrames, wfVinesRtpRt=wfVinesRtpRt, wfDs1CurrentESs=wfDs1CurrentESs, wfKernelBufOwnerTask8Bufs=wfKernelBufOwnerTask8Bufs, wfDs1FeTotalEntry=wfDs1FeTotalEntry, wfModFramer1=wfModFramer1, wfVinesIpFromDodIP=wfVinesIpFromDodIP, wfKernelTasksInQueue=wfKernelTasksInQueue, wfIpxBaseRouteType=wfIpxBaseRouteType, wfBrTpInterface=wfBrTpInterface, wfOspfDynNbrOptions=wfOspfDynNbrOptions, wfFDDIMacTMin=wfFDDIMacTMin, wfivCircuitCountHelloRcvd=wfivCircuitCountHelloRcvd, wfKernelMemOwnerTask6Size=wfKernelMemOwnerTask6Size, wfE1Connector=wfE1Connector, wfSnmpInGenErrs=wfSnmpInGenErrs, wfOspfGeneralDisable=wfOspfGeneralDisable, wfSyncWanProtocol=wfSyncWanProtocol, wfXnsBaseRouteMetric=wfXnsBaseRouteMetric, wfModIdOpt=wfModIdOpt, wfVinesRtpNbrIfType=wfVinesRtpNbrIfType, wfBrSrEsRifEntry=wfBrSrEsRifEntry, wfVinesNameDelete=wfVinesNameDelete, wfSysMibVersion=wfSysMibVersion, wfXnsAhNextHopIntf=wfXnsAhNextHopIntf, wfOspfIfType=wfOspfIfType, wfVinesRtpNbrSubNetId=wfVinesRtpNbrSubNetId, wfRipInterfaceSupply=wfRipInterfaceSupply, wfOspfNbrRtrId=wfOspfNbrRtrId, wfTokenRingTxCmplProcessings=wfTokenRingTxCmplProcessings, wfIpInterfaceIcmpInAddrMasks=wfIpInterfaceIcmpInAddrMasks, wfATLoad=wfATLoad, wfIpTrafficFilterTable=wfIpTrafficFilterTable, wfAppleBaseDelete=wfAppleBaseDelete, wfHwBpRev=wfHwBpRev, wfApplePortDdpOutNoRoutes=wfApplePortDdpOutNoRoutes, wfBrTrafficFilterReserved=wfBrTrafficFilterReserved, wfIpxNetBiosStaticRouteEntry=wfIpxNetBiosStaticRouteEntry, wfCctOptsBrFilterEntry=wfCctOptsBrFilterEntry, wfSyncRtsEnable=wfSyncRtsEnable, wfHssiMadr=wfHssiMadr, wfDSDEIILoad=wfDSDEIILoad, wfSipL2SequenceNumberErrors=wfSipL2SequenceNumberErrors, wfIpRfRipExportFromProtocol=wfIpRfRipExportFromProtocol, wfFrCircuitDiscards=wfFrCircuitDiscards, wfTokenRingOpenState=wfTokenRingOpenState, wfIpxStaticRouteTable=wfIpxStaticRouteTable, wfDs1IntervalCVs=wfDs1IntervalCVs, wfHwfSlot=wfHwfSlot, wfHssiTxFifoWatermark=wfHssiTxFifoWatermark, wfIpRfOspfImportTag=wfIpRfOspfImportTag, wfSnmpMgrCommIndex=wfSnmpMgrCommIndex, wfIpxInterfaceSplit=wfIpxInterfaceSplit, wfSipL2SentCounts=wfSipL2SentCounts, wfBrSrBaseIpInReceives=wfBrSrBaseIpInReceives, wfivCircuitRtHelloEnableDisable=wfivCircuitRtHelloEnableDisable, wfDs3Config=wfDs3Config, wfPppGroup=wfPppGroup, wfivLevel1RouteNextNode=wfivLevel1RouteNextNode, wfVinesRtpNbrNetId=wfVinesRtpNbrNetId, wfApplePortDdpBroadcastErrors=wfApplePortDdpBroadcastErrors, wfIpInterfaceTable=wfIpInterfaceTable, wfIpRfOspfImportEnable=wfIpRfOspfImportEnable, wfVinesRtpRtGateNetid=wfVinesRtpRtGateNetid, wfIpxBaseRouteMetric=wfIpxBaseRouteMetric, wfIpBaseRouteMetric3=wfIpBaseRouteMetric3, wfXnsAhTargHostId=wfXnsAhTargHostId, wfFrCircuitReceivedOctets=wfFrCircuitReceivedOctets, wfIpxStaticRouteEntry=wfIpxStaticRouteEntry, wfBrSrIpExplorerDelete=wfBrSrIpExplorerDelete, wfSmdsCircuitState=wfSmdsCircuitState, wfE1MiniDacs=wfE1MiniDacs, wfTftpOutWRQ=wfTftpOutWRQ, wfBrStpTimeSinceTopologyChange=wfBrStpTimeSinceTopologyChange, wfivCircuitCountNodeUnrPktLoss=wfivCircuitCountNodeUnrPktLoss, wfOspfDynNbrLSRetransQLen=wfOspfDynNbrLSRetransQLen, wfVinesIfState=wfVinesIfState, wfApplePortAarpReqRxs=wfApplePortAarpReqRxs, wfivRouteMaxBdcastRouters=wfivRouteMaxBdcastRouters, wfSnmpInBadVersions=wfSnmpInBadVersions, wfivCircuitCommonType=wfivCircuitCommonType, wfIpInterfaceIcmpOutAddrMasks=wfIpInterfaceIcmpOutAddrMasks, wfVinesBaseState=wfVinesBaseState, wfFDDISmtTNotify=wfFDDISmtTNotify, wfOspfLsdbAdvLen=wfOspfLsdbAdvLen, wfHwBabyBdSerialNumber=wfHwBabyBdSerialNumber, wfivCircuitCountRtHelloSent=wfivCircuitCountRtHelloSent, wfTokenRingMadrSelect=wfTokenRingMadrSelect, wfPasswordTimeOut=wfPasswordTimeOut, wfVinesIfCct=wfVinesIfCct, wfAppleZipZoneName=wfAppleZipZoneName, wfXnsBaseHostNumber=wfXnsBaseHostNumber, wfFDDIDelete=wfFDDIDelete, wfCctOptsLowPriorityQueueLimit=wfCctOptsLowPriorityQueueLimit, wfCSMACDHardwareFilter=wfCSMACDHardwareFilter, wfBrTrafficFilterEnable=wfBrTrafficFilterEnable, wfIpInterfaceAddressResolutionType=wfIpInterfaceAddressResolutionType, wfXnsInterfaceFRBcast=wfXnsInterfaceFRBcast, wfX25DCELoad=wfX25DCELoad, wfBrTrafficFilterCounter=wfBrTrafficFilterCounter, wfApplePortCircuit=wfApplePortCircuit, wfIpTrafficFilterRuleNumber=wfIpTrafficFilterRuleNumber, wfXnsBaseRouteType=wfXnsBaseRouteType, wfIpSrNextHopMask=wfIpSrNextHopMask, wfVinesNameEntry=wfVinesNameEntry, wfTftpAborts=wfTftpAborts, wfCctOptsPriorityQueueingDisable=wfCctOptsPriorityQueueingDisable, wfVinesIfX25VCOutErrs=wfVinesIfX25VCOutErrs, wfDs3FeIntervalNumber=wfDs3FeIntervalNumber, wfIpxInterfaceState=wfIpxInterfaceState, wfOspfDynNbrEntry=wfOspfDynNbrEntry, wfCommandTimeOut=wfCommandTimeOut, wfApplePortDdpInReceives=wfApplePortDdpInReceives, wfCctOptsBrFilterFragment=wfCctOptsBrFilterFragment, wfHssiTxUnderruns=wfHssiTxUnderruns, wfFSILoad=wfFSILoad, wfXnsBaseRouteAge=wfXnsBaseRouteAge, wfIpxBaseSapIndex=wfIpxBaseSapIndex, wfIpxSrNextHopHost=wfIpxSrNextHopHost, wfTokenRingAutoRemovalErrors=wfTokenRingAutoRemovalErrors, wfivTrafficFilterReserved=wfivTrafficFilterReserved, wfIpBaseNetToMediaIfIndex=wfIpBaseNetToMediaIfIndex, wfRipInterfaceListen=wfRipInterfaceListen, wfXnsTrafficFilterCircuit=wfXnsTrafficFilterCircuit, wfAppleRtmpHops=wfAppleRtmpHops, wfFddiPortSlot=wfFddiPortSlot, wfHssiTxRingErrors=wfHssiTxRingErrors, wfApplePortNbpInLookUpReplies=wfApplePortNbpInLookUpReplies, wfAppleLclZoneEntry=wfAppleLclZoneEntry, wfModIlacc2=wfModIlacc2, wfIpInterfaceOutDiscards=wfIpInterfaceOutDiscards, wfFddiPortPcType=wfFddiPortPcType, wfOspfAuthType=wfOspfAuthType, wfApplePortMacAddress=wfApplePortMacAddress, wfCctOptsLengthBasedData=wfCctOptsLengthBasedData, wfDs3FeConfig=wfDs3FeConfig, wfFrCircuitLastTimeChange=wfFrCircuitLastTimeChange, wfRipInterfaceCreate=wfRipInterfaceCreate, wfIpTrafficFilterCounter=wfIpTrafficFilterCounter, wfIpAdjHostValid=wfIpAdjHostValid, wfivLevel1RouteCost=wfivLevel1RouteCost, wfSnmpLockTimeOut=wfSnmpLockTimeOut, wfDs1TotalBPVs=wfDs1TotalBPVs, wfIfMtu=wfIfMtu, wfDs3FeConfigEntry=wfDs3FeConfigEntry, wfBrStpBridgeID=wfBrStpBridgeID, wfOspfAreaRangeState=wfOspfAreaRangeState, wfX25DTELoad=wfX25DTELoad, wfSyncFramesIncompRx=wfSyncFramesIncompRx, wfivAdjTable=wfivAdjTable, wfDs3FeInterval=wfDs3FeInterval, wfSnmpInGetNexts=wfSnmpInGetNexts, wfHssiRxRingLength=wfHssiRxRingLength, wfHssiRxAborts=wfHssiRxAborts, wfIpxSapNetLvlType=wfIpxSapNetLvlType, wfivRouteEnableDisable=wfivRouteEnableDisable, wfCctOptsMaxHighPriorityQueueLatency=wfCctOptsMaxHighPriorityQueueLatency, wfOspfLsdbAreaId=wfOspfLsdbAreaId, wfBrSrBaseBridgeId=wfBrSrBaseBridgeId, wfivRouteCreateDelete=wfivRouteCreateDelete, wfBrStpBridgeForwardDelay=wfBrStpBridgeForwardDelay, wfTokenRingTokenErrors=wfTokenRingTokenErrors, wfIfSpecific=wfIfSpecific, wfivCircuitNodeid=wfivCircuitNodeid, wfModTsra=wfModTsra, wfIpInterfaceState=wfIpInterfaceState, wfSyncTable=wfSyncTable, wfSyncCrcSize=wfSyncCrcSize, wfOspfAreaEntry=wfOspfAreaEntry, wfKernelBufOwnerTask5Bufs=wfKernelBufOwnerTask5Bufs, wfHssiRxBufferLength=wfHssiRxBufferLength)
mibBuilder.exportSymbols("Wellfleet-Series7-MIB", wfSipL2BomOrSSMsMIDErrors=wfSipL2BomOrSSMsMIDErrors, wfXnsTrafficFilterRuleNumber=wfXnsTrafficFilterRuleNumber, wfE1BipolarVios=wfE1BipolarVios, wfTokenRingDmaBusErrors=wfTokenRingDmaBusErrors, wfModMuxram2=wfModMuxram2, wfVinesRtpNbrEntry=wfVinesRtpNbrEntry, wfBridgeGroup=wfBridgeGroup, wfSnmpCommAccess=wfSnmpCommAccess, wfDECNETLoad=wfDECNETLoad, wfTokenRingCmdTimeouts=wfTokenRingCmdTimeouts, wfSmdsCircuitArpAddr=wfSmdsCircuitArpAddr, wfKernelMemOwnerTask4Size=wfKernelMemOwnerTask4Size, wfVinesRtpNbrLocLine=wfVinesRtpNbrLocLine, wfCctOptsNormalPriorityQueueLimit=wfCctOptsNormalPriorityQueueLimit, wfVinesIfSession=wfVinesIfSession, wfRipInterfaceEnable=wfRipInterfaceEnable, wfXnsAdjacentHostEntry=wfXnsAdjacentHostEntry, wfModFsi1=wfModFsi1, wfIpAdjHostIntf=wfIpAdjHostIntf, wfE1FrameErrs=wfE1FrameErrs, wfOspfAreaRangeNet=wfOspfAreaRangeNet, wfXnsInterfaceInAddrErrors=wfXnsInterfaceInAddrErrors, wfSipPlcpGroup=wfSipPlcpGroup, wfCSMACDLateCollnTx=wfCSMACDLateCollnTx, wfSnmpInGetRequests=wfSnmpInGetRequests, wfDs3TotalUASs=wfDs3TotalUASs, wfBrStpInterfaceEntry=wfBrStpInterfaceEntry, wfDs3Group=wfDs3Group, wfVinesIfInPkts=wfVinesIfInPkts, wfIfOutErrors=wfIfOutErrors, wfOspfNbrLSRetransQLen=wfOspfNbrLSRetransQLen, wfApplePortTable=wfApplePortTable, wfivStaticAdjDestMACAddr=wfivStaticAdjDestMACAddr, wfOspfVirtIfRxLinkStateAcks=wfOspfVirtIfRxLinkStateAcks, wfRipGroup=wfRipGroup, wfIpInterfaceIcmpInAddrMaskReps=wfIpInterfaceIcmpInAddrMaskReps, wfSyncState=wfSyncState, wfVinesRtpRtNumber=wfVinesRtpRtNumber, wfApplePortAarpProbeRxs=wfApplePortAarpProbeRxs, wfDs3IntervalSEFs=wfDs3IntervalSEFs, wfFddiMacSlot=wfFddiMacSlot, wfKernelBufOwnerTask4=wfKernelBufOwnerTask4, wfIpxBaseSapName=wfIpxBaseSapName, wfIpTrafficFilterCircuit=wfIpTrafficFilterCircuit, wfRipInterfaceState=wfRipInterfaceState, wfFrCircuitReceivedFECNs=wfFrCircuitReceivedFECNs, wfSnmpAuth=wfSnmpAuth, wfOspfTOSSupport=wfOspfTOSSupport, wfModMk50251=wfModMk50251, wfDs1FeInterval=wfDs1FeInterval, wfFrCircuitDelete=wfFrCircuitDelete, wfCSMACDTable=wfCSMACDTable, wfFrErrTime=wfFrErrTime, wfSipDs1PlcpUASs=wfSipDs1PlcpUASs, wfXnsAhDisable=wfXnsAhDisable, wfCircuitNameTable=wfCircuitNameTable, wfDEFALoad=wfDEFALoad, wfBrSrInterfaceDropSrfs=wfBrSrInterfaceDropSrfs, wfApplePortCksumDisable=wfApplePortCksumDisable, wfIfInDiscards=wfIfInDiscards, wfXnsTrafficFilterDefinition=wfXnsTrafficFilterDefinition, wfOspfVirtIfTable=wfOspfVirtIfTable, wfCctOptsIpFilterDefinition=wfCctOptsIpFilterDefinition, wfIpxInterfaceForwDatagrams=wfIpxInterfaceForwDatagrams, wfSnmpInBadValues=wfSnmpInBadValues, wfTokenRingInErrors=wfTokenRingInErrors, wfIpxRipInterfaceState=wfIpxRipInterfaceState, wfSipDs3PlcpUASs=wfSipDs3PlcpUASs, wfHssiTxRingLength=wfHssiTxRingLength, wfXnsInterfaceIndex=wfXnsInterfaceIndex, wfFrDlcmiErrorThreshold=wfFrDlcmiErrorThreshold, wfSmdsCircuitHrtbtPollDownCount=wfSmdsCircuitHrtbtPollDownCount, wfVinesTrafficFilterEntry=wfVinesTrafficFilterEntry, wfIpInterfaceInAddrErrors=wfIpInterfaceInAddrErrors, wfOspfLsdbEntry=wfOspfLsdbEntry, wfE1MfsErrs=wfE1MfsErrs, wfHssiBofl=wfHssiBofl, wfivStaticAdjEnableDisable=wfivStaticAdjEnableDisable, wfModCamBUnlock=wfModCamBUnlock, wfOspfVirtIfAuthKey=wfOspfVirtIfAuthKey, wfBrStpInterface=wfBrStpInterface, wfSysContact=wfSysContact, wfCSMACDLackRescErrorRx=wfCSMACDLackRescErrorRx, wfIpBaseCreate=wfIpBaseCreate, wfTokenRingSlot=wfTokenRingSlot, wfAppleZipIndex=wfAppleZipIndex, wfIpTrafficFilterCreate=wfIpTrafficFilterCreate, wfDs1TotalSESs=wfDs1TotalSESs, wfDs3CurrentEntry=wfDs3CurrentEntry, wfOspfVirtNbrEntry=wfOspfVirtNbrEntry, wfProtocols=wfProtocols, wfIpInterfaceForwDatagrams=wfIpInterfaceForwDatagrams, wfHwFGroup=wfHwFGroup, wfHssiTxFrames=wfHssiTxFrames, wfHssiBoflNum=wfHssiBoflNum, wfVinesIpRouted=wfVinesIpRouted, wfModHssiFsi2=wfModHssiFsi2, wfOspfVirtIfAreaID=wfOspfVirtIfAreaID, wfVinesIfIcpInErrorNotifs=wfVinesIfIcpInErrorNotifs, wfXnsTrafficFilterInterface=wfXnsTrafficFilterInterface, wfVinesIfX25VCInErrs=wfVinesIfX25VCInErrs, wfIpBaseRouteNextHop=wfIpBaseRouteNextHop, wfTiRuiInReqs=wfTiRuiInReqs, wfModSlot=wfModSlot, wfBrTrafficFilterDefinition=wfBrTrafficFilterDefinition, wfVinesIfX25VCSlot=wfVinesIfX25VCSlot, wfivStaticAdjTable=wfivStaticAdjTable, wfIpInterfaceIcmpInTimestampReps=wfIpInterfaceIcmpInTimestampReps, wfHwfLineState=wfHwfLineState, wfIpRfOspfExportTag=wfIpRfOspfExportTag, wfTftpOutErr=wfTftpOutErr, wfivCircuitCountTransitPkSent=wfivCircuitCountTransitPkSent, wfCctOptsBrFilterCct=wfCctOptsBrFilterCct, wfOspfVirtIfHelloInterval=wfOspfVirtIfHelloInterval, wfOspfVirtNbrTable=wfOspfVirtNbrTable, wfSyncLackRescTx=wfSyncLackRescTx, wfAtmGroup=wfAtmGroup, wfFrDlcmiState=wfFrDlcmiState, wfSnmpMgrEntry=wfSnmpMgrEntry, wfivRouteMaxVisits=wfivRouteMaxVisits, wfXnsInterfaceOutDiscards=wfXnsInterfaceOutDiscards, wfAppleAarpNet=wfAppleAarpNet, wfivAreaTable=wfivAreaTable, wfHwfLineCct=wfHwfLineCct, wfSyncBurstCount=wfSyncBurstCount, wfT1RcvRedAlarms=wfT1RcvRedAlarms, wfFrDlcmiPassiveReceived=wfFrDlcmiPassiveReceived, wfModHssiUga1=wfModHssiUga1, wfHssiDisable=wfHssiDisable, wfIpxInterfaceOutRequests=wfIpxInterfaceOutRequests, wfBrSr=wfBrSr, wfXnsRipInterfaceIndex=wfXnsRipInterfaceIndex, wfSnmpTrapTrace=wfSnmpTrapTrace, wfKernelBufOwnerTask9=wfKernelBufOwnerTask9, wfSnmpEnableAuthTraps=wfSnmpEnableAuthTraps, wfSmdsCircuitID=wfSmdsCircuitID, wfIpInterfaceIcmpInEchoReps=wfIpInterfaceIcmpInEchoReps, wfMK5025Load=wfMK5025Load, wfivRouteType=wfivRouteType, wfKernelSlot=wfKernelSlot, wfVinesRtpNbrLocAdr=wfVinesRtpNbrLocAdr, wfTestGroup=wfTestGroup, wfArpCctno=wfArpCctno, wfBCNPwrSupply2=wfBCNPwrSupply2, wfSyncDelete=wfSyncDelete, wfSmdsCircuitSipL3VersionSupport=wfSmdsCircuitSipL3VersionSupport, wfCctOptsIpFilterFragment=wfCctOptsIpFilterFragment, wfVinesRtpRtSvrName=wfVinesRtpRtSvrName, wfIfLastChange=wfIfLastChange, wfXnsAhTargHostNetwork=wfXnsAhTargHostNetwork, wfKernelMemOwnerTask7Size=wfKernelMemOwnerTask7Size, wfAppleLclZoneIndex=wfAppleLclZoneIndex, wfVinesIfX25VCCct=wfVinesIfX25VCCct, wfBrTpBaseFdbPort=wfBrTpBaseFdbPort, wfHwfLineSlot=wfHwfLineSlot, wfIpInterfaceCircuit=wfIpInterfaceCircuit, wfTokenRingTransmitBeacons=wfTokenRingTransmitBeacons, wfOspfVirtIfDisable=wfOspfVirtIfDisable, wfApplePortDdpTooLongErrors=wfApplePortDdpTooLongErrors, wfOsiGroup=wfOsiGroup, wfIpxInterfaceDelete=wfIpxInterfaceDelete, wfivAdjType=wfivAdjType, wfDs1FeCurrentBPVs=wfDs1FeCurrentBPVs, wfCctOptsNormalQHighWaterPkts=wfCctOptsNormalQHighWaterPkts, wfCSMACDBufErrorTx=wfCSMACDBufErrorTx, wfOspfIfTransitDelay=wfOspfIfTransitDelay, wfIpxBaseSapSocket=wfIpxBaseSapSocket, wfBrSrTrafficFilterCounter=wfBrSrTrafficFilterCounter, wfHssiService=wfHssiService, wfDSDELoad=wfDSDELoad, wfVinesIpToDodIP=wfVinesIpToDodIP, wfivAreaCost=wfivAreaCost, wfDSTLoad=wfDSTLoad, wfE1Table=wfE1Table, wfFrDlcmiTable=wfFrDlcmiTable, wfIpxSapNetLvlDisable=wfIpxSapNetLvlDisable, wfOspfImportSum=wfOspfImportSum, wfT1SuperFrameErrs=wfT1SuperFrameErrs, wfIpxAhDelete=wfIpxAhDelete, wfOspfNbrAddressLessIndex=wfOspfNbrAddressLessIndex, wfivRouteMaxHops=wfivRouteMaxHops, wfDs3LineIndex=wfDs3LineIndex, wfModHssiUga2=wfModHssiUga2, wfFrCircuitNumber=wfFrCircuitNumber, wfBrStpInterfaceDesignatedRoot=wfBrStpInterfaceDesignatedRoot, wfivTrafficFilterStatus=wfivTrafficFilterStatus, wfCSMACDState=wfCSMACDState, wfBrStpInterfaceCircuit=wfBrStpInterfaceCircuit, wfIpInterfaceIcmpOutErrors=wfIpInterfaceIcmpOutErrors, wfTokenRingSpeed=wfTokenRingSpeed, wfOspfVirtIfTxDBDescripts=wfOspfVirtIfTxDBDescripts, wfBrTpInterfaceCircuit=wfBrTpInterfaceCircuit, wfRipIntfEntry=wfRipIntfEntry, wfIpxNetBiosSrTargNetwork=wfIpxNetBiosSrTargNetwork, wfBrStpTopChanges=wfBrStpTopChanges, wfXnsInterfaceInHdrErrors=wfXnsInterfaceInHdrErrors, wfCctOptsTable=wfCctOptsTable, wfDs1CurrentSEFs=wfDs1CurrentSEFs, wfFddiSmtNode=wfFddiSmtNode, wfFrDlcmiStatus=wfFrDlcmiStatus, wfIpRfRipImportEnable=wfIpRfRipImportEnable, wfXnsInterfaceOutNoRoutes=wfXnsInterfaceOutNoRoutes, wfCSMACDFcsErrorRx=wfCSMACDFcsErrorRx, wfSyncClkSource=wfSyncClkSource, wfT1Table=wfT1Table, wfVinesIfArpOutServRsps=wfVinesIfArpOutServRsps, wfFNSDSELoad=wfFNSDSELoad, wfDS2180Load=wfDS2180Load, wfCircuitNameDelete=wfCircuitNameDelete, wfivCircuitCountL1UpdRcvd=wfivCircuitCountL1UpdRcvd, wfSipGroup=wfSipGroup, wfCSMACDCct=wfCSMACDCct, wfDs3FeIntervalESs=wfDs3FeIntervalESs, wfKernelBufOwnerTask3Bufs=wfKernelBufOwnerTask3Bufs, wfSyncService=wfSyncService, wfT1Delete=wfT1Delete, wfBrTpBaseDelete=wfBrTpBaseDelete, wfIpxInterfaceInReceives=wfIpxInterfaceInReceives, wfCctOptsLengthBasedDisable=wfCctOptsLengthBasedDisable, wfVinesRtpNbrLocSlot=wfVinesRtpNbrLocSlot, wfServices=wfServices, wfSyncBoflTmo=wfSyncBoflTmo, wfCSMACDDelete=wfCSMACDDelete, wfIpxBaseActiveHostNumber=wfIpxBaseActiveHostNumber, wfVinesGroup=wfVinesGroup, wfT1IILoad=wfT1IILoad, wfSyncPromiscuous=wfSyncPromiscuous, wfHssiLastRxErrorCtrl=wfHssiLastRxErrorCtrl, wfFDDILoad=wfFDDILoad, wfFDDIMacTMax=wfFDDIMacTMax, wfCircuitOptsGroup=wfCircuitOptsGroup, wfXnsBaseRouteInfo=wfXnsBaseRouteInfo, wfIpInterfaceIcmpOutTimestampReps=wfIpInterfaceIcmpOutTimestampReps, wfDs1IntervalSEFs=wfDs1IntervalSEFs, wfKernelBufOwnerTask2Bufs=wfKernelBufOwnerTask2Bufs, wfApplePortZipInGetLocalZones=wfApplePortZipInGetLocalZones, wfArpBaseEnable=wfArpBaseEnable, wfSnmpInTotalReqVars=wfSnmpInTotalReqVars, wfVinesIfX25VCTotIn=wfVinesIfX25VCTotIn, wfivRouteAreaMaxCost=wfivRouteAreaMaxCost, wfVinesIfIcpOutMetricNotifs=wfVinesIfIcpOutMetricNotifs, wfDs1FeIntervalEntry=wfDs1FeIntervalEntry, wfOspfAreaTable=wfOspfAreaTable, wfIpxGroup=wfIpxGroup, wfIpxTrafficFilterEntry=wfIpxTrafficFilterEntry, wfHssiLinkInterface=wfHssiLinkInterface, wfSnmpMgrTable=wfSnmpMgrTable, wfIpxBaseRouteAge=wfIpxBaseRouteAge, wfFDDIFramesRxOk=wfFDDIFramesRxOk, wfOspfVirtIfRxLinkStateReqs=wfOspfVirtIfRxLinkStateReqs, wfBrSrIpEncapsEntry=wfBrSrIpEncapsEntry, wfXnsInterfaceInDiscards=wfXnsInterfaceInDiscards, wfOspfLsdbAge=wfOspfLsdbAge, wfCctOptsLengthBasedLength=wfCctOptsLengthBasedLength)
mibBuilder.exportSymbols("Wellfleet-Series7-MIB", wfTtyInfifoErrors=wfTtyInfifoErrors, wfOspfVirtIfEntry=wfOspfVirtIfEntry, wfApplePortNbpInLookUpRequests=wfApplePortNbpInLookUpRequests, wfOspfLsdbType=wfOspfLsdbType, wfTiRuiResult=wfTiRuiResult, wfSmdsCircuitSipL3SentIndividualDAs=wfSmdsCircuitSipL3SentIndividualDAs, wfIpRfRipImportCreate=wfIpRfRipImportCreate, wfVinesNameNetid=wfVinesNameNetid, wfE1RcvSig1s=wfE1RcvSig1s, wfFddiSmtCfState=wfFddiSmtCfState, wfIpxNetBiosSrName=wfIpxNetBiosSrName, wfHSSIFSILoad=wfHSSIFSILoad, wfXnsTrafficFilterEnable=wfXnsTrafficFilterEnable, wfIpInterfaceIcmpInParmProbs=wfIpInterfaceIcmpInParmProbs, wfSipL2EomsMIDErrors=wfSipL2EomsMIDErrors, wfDs1FeIntervalCVs=wfDs1FeIntervalCVs, wfIpxSapServLvlDisable=wfIpxSapServLvlDisable, wfTftpOutFiles=wfTftpOutFiles, wfKernelBufOwnerTask7Bufs=wfKernelBufOwnerTask7Bufs, wfIpBaseState=wfIpBaseState, wfivAreaState=wfivAreaState, wfOspfIfRxLinkStateUpds=wfOspfIfRxLinkStateUpds, wfXnsSrTargNetworkRt=wfXnsSrTargNetworkRt, wfXnsTrafficFilterEntry=wfXnsTrafficFilterEntry, wfLoginTimeOut=wfLoginTimeOut, wfLinkModules=wfLinkModules, wfParity=wfParity, wfVinesRtpRtIdle=wfVinesRtpRtIdle, wfSnmpInReadOnlys=wfSnmpInReadOnlys, wfIpInterfaceIcmpOutRedirects=wfIpInterfaceIcmpOutRedirects, wfXnsInterfaceEncaps=wfXnsInterfaceEncaps, wfBrSrBaseGroupLanId=wfBrSrBaseGroupLanId, wfIpAdjHostEncaps=wfIpAdjHostEncaps, wfKernelBufOwnerTask6=wfKernelBufOwnerTask6, wfIpxBaseDisable=wfIpxBaseDisable, wfTokenRingSignalLosses=wfTokenRingSignalLosses, wfApplePortDisable=wfApplePortDisable, wfSyncMtu=wfSyncMtu, wfOspfDynNbrIfAddr=wfOspfDynNbrIfAddr, wfFDDIOverrunRx=wfFDDIOverrunRx, wfFDDIParityErrRx=wfFDDIParityErrRx, wfOspfIfRxDBDescripts=wfOspfIfRxDBDescripts, wfFddiSmtOpVersionId=wfFddiSmtOpVersionId, wfOspfLsdbChecksum=wfOspfLsdbChecksum, wfDs1CurrentIndex=wfDs1CurrentIndex, wfIpInterfaceIcmpInMsgs=wfIpInterfaceIcmpInMsgs, wfIpSrValid=wfIpSrValid, wfBootpGroup=wfBootpGroup, wfDs3TotalSEFs=wfDs3TotalSEFs, wfIpInterfaceFragCreates=wfIpInterfaceFragCreates, wfSnmpInBadCommunityUses=wfSnmpInBadCommunityUses, wfHwfLineCapableMaxTblSize=wfHwfLineCapableMaxTblSize, wfCSMACDFramesTxOk=wfCSMACDFramesTxOk, wfTokenRingInDiscards=wfTokenRingInDiscards, wfBrSrTrafficFilterCircuit=wfBrSrTrafficFilterCircuit, wfBrTpBaseState=wfBrTpBaseState, wfKernelMemOwnerTask10=wfKernelMemOwnerTask10, wfModSbrr=wfModSbrr, wfOspfAreaId=wfOspfAreaId, wfSnmpOutBadValues=wfSnmpOutBadValues, wfivCircuitAllEndnodesMac=wfivCircuitAllEndnodesMac, wfAppleAarpEntry=wfAppleAarpEntry, wfIpInterfaceInHdrErrors=wfIpInterfaceInHdrErrors, wfBrSrInterfaceMaxRds=wfBrSrInterfaceMaxRds, wfApplePortDdpNoProtocolHandlers=wfApplePortDdpNoProtocolHandlers, wfIpRfOspfImportType=wfIpRfOspfImportType, wfBrStpBridgeHelloTime=wfBrStpBridgeHelloTime, wfApplePortZipInGetNetInfos=wfApplePortZipInGetNetInfos, wfIpRfOspfExportEnable=wfIpRfOspfExportEnable, wfFDDIRxQueueLength=wfFDDIRxQueueLength, wfIpxNetBiosSrIntf=wfIpxNetBiosSrIntf, wfFrDlcmiPollingInterval=wfFrDlcmiPollingInterval, wfOspfIfTable=wfOspfIfTable, wfApplePortEchoReplies=wfApplePortEchoReplies, wfFrCircuitReceivedBECNs=wfFrCircuitReceivedBECNs, wfIfInUnknownProtos=wfIfInUnknownProtos, wfXNSLoad=wfXNSLoad, wfVinesIpBcastHWM=wfVinesIpBcastHWM, wfXnsStaticRouteEntry=wfXnsStaticRouteEntry, wfSyncSlot=wfSyncSlot, wfHwDaughterBdRev=wfHwDaughterBdRev, wfBrSrBaseState=wfBrSrBaseState, wfHssiInDiscards=wfHssiInDiscards, wfBrSrBridgeId=wfBrSrBridgeId, wfivTrafficFilterTable=wfivTrafficFilterTable, wfIpRfOspfImportPreference=wfIpRfOspfImportPreference, wfFddiPortNode=wfFddiPortNode, wfBrSrTrafficFilterRuleNumber=wfBrSrTrafficFilterRuleNumber, wfivTrafficFilterDefinition=wfivTrafficFilterDefinition, wfHssiRxOctets=wfHssiRxOctets, wfSyncPassThruLocalMadr=wfSyncPassThruLocalMadr, wfDs3FeCurrentEntry=wfDs3FeCurrentEntry, wfVinesRtpNbrTable=wfVinesRtpNbrTable, wfE1Disable=wfE1Disable, wfDs1FeCurrentCVs=wfDs1FeCurrentCVs, wfAppleRtmpNextHopNode=wfAppleRtmpNextHopNode, wfIpInterfaceSMDSArpReqAddress=wfIpInterfaceSMDSArpReqAddress, wfUdpGroup=wfUdpGroup, wfIpxTrafficFilterInterface=wfIpxTrafficFilterInterface, wfAppleBaseDdpQueLen=wfAppleBaseDdpQueLen, wfTftpRexmitPkts=wfTftpRexmitPkts, wfIpxTrafficFilterRuleNumber=wfIpxTrafficFilterRuleNumber, wfFrCircuitDrops=wfFrCircuitDrops, wfDs1CurrentCVs=wfDs1CurrentCVs, wfBrStpInterfacePathCost=wfBrStpInterfacePathCost, wfFrDlcmiDisable=wfFrDlcmiDisable, wfApplePortNbpInErrors=wfApplePortNbpInErrors, wfSyncXid=wfSyncXid, wfVinesIfArpOutAssgRsps=wfVinesIfArpOutAssgRsps, wfOspfIfRxHellos=wfOspfIfRxHellos, wfTokenRingAriFciErrors=wfTokenRingAriFciErrors, wfSyncDisable=wfSyncDisable, wfVinesIfInRedirects=wfVinesIfInRedirects, wfIpxBaseServiceCount=wfIpxBaseServiceCount, wfVinesRtpRtEntry=wfVinesRtpRtEntry, wfCSMACDDeferredTx=wfCSMACDDeferredTx, wfHssiRxFrames=wfHssiRxFrames, wfOspfIfRtrPriority=wfOspfIfRtrPriority, wfIpInterfaceIcmpInEchos=wfIpInterfaceIcmpInEchos, wfVinesIfX25VCSession=wfVinesIfX25VCSession, wfIfType=wfIfType, wfDs3IntervalBPVs=wfDs3IntervalBPVs, wfBCNPwrSupply3=wfBCNPwrSupply3, wfXnsBaseRtEntry=wfXnsBaseRtEntry, wfVinesIfX25VCLine=wfVinesIfX25VCLine, wfKernelBufOwnerTask9Bufs=wfKernelBufOwnerTask9Bufs, wfOspfDynNbrIpAddr=wfOspfDynNbrIpAddr, wfSpanningTree=wfSpanningTree, wfFrErrDrops=wfFrErrDrops, wfIpRfRipImportRipInterface=wfIpRfRipImportRipInterface, wfTokenRingSingleStations=wfTokenRingSingleStations, wfTiRuiState=wfTiRuiState, wfApplePortDdpTooShortErrors=wfApplePortDdpTooShortErrors, wfBrSrEsRifCircuit=wfBrSrEsRifCircuit, wfTokenRingTxClipFrames=wfTokenRingTxClipFrames, wfApplePortZipInZipReplies=wfApplePortZipInZipReplies, wfXnsTrafficFilterReserved=wfXnsTrafficFilterReserved, wfVinesIfOutErrs=wfVinesIfOutErrs, wfFDDIMacTvxValue=wfFDDIMacTvxValue, wfVinesIfX25VC=wfVinesIfX25VC, wfivCircuitCountAreaUpdRcvd=wfivCircuitCountAreaUpdRcvd, wfAppleLclZoneDelete=wfAppleLclZoneDelete, wfIpxRipInterfaceDisable=wfIpxRipInterfaceDisable, wfTiRuiAction=wfTiRuiAction, wfDs3Total=wfDs3Total, wfDs3TotalBPVs=wfDs3TotalBPVs, wfDs1FeCurrent=wfDs1FeCurrent, wfHssiInternOpErrors=wfHssiInternOpErrors, wfKernelMemOwnerTask7=wfKernelMemOwnerTask7, wfMod8530=wfMod8530, wfBrStpDesignatedRoot=wfBrStpDesignatedRoot, wfModIlacc1=wfModIlacc1, wfCSMACDTxClipFrames=wfCSMACDTxClipFrames, wfFddiMacDownstreamNbr=wfFddiMacDownstreamNbr, wfEgpGroup=wfEgpGroup, wfIpxInterfaceTrEndStation=wfIpxInterfaceTrEndStation, wfIpInterfaceIcmpInSrcQuenchs=wfIpInterfaceIcmpInSrcQuenchs, wfIpxSrTargNetwork=wfIpxSrTargNetwork, wfivCircuitCountTransitPksRecd=wfivCircuitCountTransitPksRecd, wfFDDIOctetsTxOk=wfFDDIOctetsTxOk, wfBaudRate=wfBaudRate, wfApplePortRtmpRoutingTableOverflows=wfApplePortRtmpRoutingTableOverflows, wfVinesArpDisable=wfVinesArpDisable, wfDs3FeCurrentIndex=wfDs3FeCurrentIndex, wfBrSrBridgeTable=wfBrSrBridgeTable, wfKernelMemorySize=wfKernelMemorySize, wfXnsRipInterfaceDisable=wfXnsRipInterfaceDisable, wfCSMACDTxQueueLength=wfCSMACDTxQueueLength, wfHssiTxProcessings=wfHssiTxProcessings, wfIpRfRipImportTable=wfIpRfRipImportTable, wfBrStp=wfBrStp, wfCctOptsIpFilterState=wfCctOptsIpFilterState, wfXnsInterfaceExtServer=wfXnsInterfaceExtServer, wfKernelMemOwnerTask9Size=wfKernelMemOwnerTask9Size, wfApplePortAarpRspRxs=wfApplePortAarpRspRxs, wfApplePortZipOutZipExtendedReplies=wfApplePortZipOutZipExtendedReplies, wfIpxTrafficFilterTable=wfIpxTrafficFilterTable, wfAppleZipEntry=wfAppleZipEntry, wfOspfIfRxLinkStateReqs=wfOspfIfRxLinkStateReqs, wfXnsBaseDisable=wfXnsBaseDisable, wfHwfEntry=wfHwfEntry, wfVinesArpDelete=wfVinesArpDelete, wfModMadr1=wfModMadr1, wfOspfGeneralDelete=wfOspfGeneralDelete, wfIfSpeed=wfIfSpeed, wfAppleAarpIfIndex=wfAppleAarpIfIndex, wfDs1LineType=wfDs1LineType, wfDs3FarEndFacilityIDCode=wfDs3FarEndFacilityIDCode, wfSyncRejectsTx=wfSyncRejectsTx, wfOspfNbrIfAddr=wfOspfNbrIfAddr, wfDs3CurrentCVs=wfDs3CurrentCVs, wfIpBaseNetToMediaPhysAddress=wfIpBaseNetToMediaPhysAddress, wfCctOptsIpFilterTable=wfCctOptsIpFilterTable, wfModDefaA=wfModDefaA, wfBrTrafficFilterRuleNumber=wfBrTrafficFilterRuleNumber, wfIPXLoad=wfIPXLoad, wfKernelMemOwnerTask8Size=wfKernelMemOwnerTask8Size, wfBrSrInterfaceIpAddress=wfBrSrInterfaceIpAddress, wfIpxInterfaceInHdrErrors=wfIpxInterfaceInHdrErrors, wfIpRfRipImportAction=wfIpRfRipImportAction, wfE1State=wfE1State, wfIpInterfaceMaxInfo=wfIpInterfaceMaxInfo, wfApplePortNodeId=wfApplePortNodeId, wfXnsInterfaceCost=wfXnsInterfaceCost, wfFddiPortTable=wfFddiPortTable, wfivCircuitL1UpdateEnableDisable=wfivCircuitL1UpdateEnableDisable, wfSyncConnector=wfSyncConnector, wfFrDlcmiDelete=wfFrDlcmiDelete, wfDs1FeIntervalNumber=wfDs1FeIntervalNumber, wfDs3CircuitIdentifier=wfDs3CircuitIdentifier, wfApplePortRtmpInDataPkts=wfApplePortRtmpInDataPkts, wfTiRui=wfTiRui, wfVinesIfOutRedirects=wfVinesIfOutRedirects, wfApplePortDdpChecksumErrors=wfApplePortDdpChecksumErrors, wfHssiHostErrors=wfHssiHostErrors, wfIpRfRipExportInterface=wfIpRfRipExportInterface, wfConsole=wfConsole, wfCctOptsLengthBasedTable=wfCctOptsLengthBasedTable, wfHssiRxProcessings=wfHssiRxProcessings, wfDs1TotalSEFs=wfDs1TotalSEFs, wfDs3SendCode=wfDs3SendCode, wfFddiMacEntry=wfFddiMacEntry, wfIpBaseRouteIfIndex=wfIpBaseRouteIfIndex, wfBrSrTrafficFilterDefinition=wfBrSrTrafficFilterDefinition, wfHwSparePromDate=wfHwSparePromDate, wfCctOptsLengthBasedLessThanQ=wfCctOptsLengthBasedLessThanQ, wfOspfLsdbTable=wfOspfLsdbTable, wfIpInterfaceHostCache=wfIpInterfaceHostCache, wfApplePortCurNetwork=wfApplePortCurNetwork, wfXnsInterfaceInReceives=wfXnsInterfaceInReceives, wfFddiSmtStationId=wfFddiSmtStationId, wfDs3FarEndUnitCode=wfDs3FarEndUnitCode, wfApplePortEchoRequests=wfApplePortEchoRequests, wfDs1Group=wfDs1Group, wfCircuitNumber=wfCircuitNumber, wfDs1CircuitIdentifier=wfDs1CircuitIdentifier, wfIpxInterfaceMaxInfo=wfIpxInterfaceMaxInfo, wfCctOptsBrFilterReserved=wfCctOptsBrFilterReserved, wfIpAdjacentHostTable=wfIpAdjacentHostTable, wfOspfAreaRangeDelete=wfOspfAreaRangeDelete, wfIpxInterfaceInDiscards=wfIpxInterfaceInDiscards, wfCctOptsLoQHighWaterPkts=wfCctOptsLoQHighWaterPkts, wfIfInUcastPkts=wfIfInUcastPkts, wfSnmpOutSetRequests=wfSnmpOutSetRequests, wfTftpInWRQ=wfTftpInWRQ, wfIpxSapServLvlDelete=wfIpxSapServLvlDelete, wfHssiMemPageLength=wfHssiMemPageLength, wfModHssiFsi1=wfModHssiFsi1, wfVinesRtpRtNetid=wfVinesRtpRtNetid, wfIpBaseRtEntry=wfIpBaseRtEntry, wfQENETLoad=wfQENETLoad, wfFrDlcmiFullEnquiryInterval=wfFrDlcmiFullEnquiryInterval, wfivCircuitRouterPri=wfivCircuitRouterPri, wfIpxInterfaceXsumOn=wfIpxInterfaceXsumOn)
mibBuilder.exportSymbols("Wellfleet-Series7-MIB", wfXnsInterfaceMacAddress=wfXnsInterfaceMacAddress, wfModMk50254=wfModMk50254, wfSyncClkSpeed=wfSyncClkSpeed, wfVinesIpTotIn=wfVinesIpTotIn, wfVinesRtpNbrNumber=wfVinesRtpNbrNumber, wfXnsTrafficFilterCounter=wfXnsTrafficFilterCounter, wfSyncEntry=wfSyncEntry, wfDs3FarEndLocationIDCode=wfDs3FarEndLocationIDCode, wfIpxSapNetLvlIndex=wfIpxSapNetLvlIndex, wfModTicr=wfModTicr, wfE1ClockMode=wfE1ClockMode, wfOspfIfTxLinkStateAcks=wfOspfIfTxLinkStateAcks, wfIpInterfaceSMDSGroupAddress=wfIpInterfaceSMDSGroupAddress, wfIpxInterfaceNetbiosDeliver=wfIpxInterfaceNetbiosDeliver, wfCSMACDMtu=wfCSMACDMtu, wfKernelTable=wfKernelTable, wfOspfIfHelloInterval=wfOspfIfHelloInterval, wfivTrafficFilterCreate=wfivTrafficFilterCreate, wfBrSrBridgeEntry=wfBrSrBridgeEntry, wfDs3CurrentUASs=wfDs3CurrentUASs, wfivTrafficFilterFragment=wfivTrafficFilterFragment, wfVinesTrafficFilterDefinition=wfVinesTrafficFilterDefinition, wfIpInterfaceCost=wfIpInterfaceCost, wfBrSrIpEncapsIpAddress=wfBrSrIpEncapsIpAddress, wfVinesIfOutPkts=wfVinesIfOutPkts, wfFDDITxQueueLength=wfFDDITxQueueLength, wfKernelMemOwnerTask4=wfKernelMemOwnerTask4, wfHssiIntrProcessings=wfHssiIntrProcessings, wfVinesIfInMsgs=wfVinesIfInMsgs, wfTokenRingUpStream=wfTokenRingUpStream, wfHssiTxCmplProcessings=wfHssiTxCmplProcessings, wfDs3TotalEntry=wfDs3TotalEntry, wfOspfASBdrRtrStatus=wfOspfASBdrRtrStatus, wfOspfVirtNbrState=wfOspfVirtNbrState, wfAppleRtmpTable=wfAppleRtmpTable, wfBCNFanStatus=wfBCNFanStatus, wfXnsStaticRouteTable=wfXnsStaticRouteTable, wfivCircuitEnableDisable=wfivCircuitEnableDisable, wfSnmpOutTraps=wfSnmpOutTraps, wfENETIILoad=wfENETIILoad, wfVinesTrafficFilterTable=wfVinesTrafficFilterTable, wfDs3FeConfigIndex=wfDs3FeConfigIndex, wfDs3FeTotalCVs=wfDs3FeTotalCVs, wfVinesIf=wfVinesIf, wfKernelMemOwnerTask5Size=wfKernelMemOwnerTask5Size, wfCctOptsDroppedPkts=wfCctOptsDroppedPkts, wfFddiMacCct=wfFddiMacCct, wfTokenRingLostFrameErrors=wfTokenRingLostFrameErrors, wfVinesRtpNbrRemAdr=wfVinesRtpNbrRemAdr, wfIpBaseRtEntryTable=wfIpBaseRtEntryTable, wfApplePortDdpForwRequests=wfApplePortDdpForwRequests, wfDs1CurrentUASs=wfDs1CurrentUASs, wfXnsInterfaceState=wfXnsInterfaceState, wfCctOptsIpFilterCounter=wfCctOptsIpFilterCounter, wfCctOptsBrFilterDefinition=wfCctOptsBrFilterDefinition, wfVinesIfType=wfVinesIfType, wfHwDaughterBdSerialNumber=wfHwDaughterBdSerialNumber, wfDs1CurrentBPVs=wfDs1CurrentBPVs, wfCctOptsNormalClippedPkts=wfCctOptsNormalClippedPkts, wfAppleLclZonePortCircuit=wfAppleLclZonePortCircuit, wfHwDiagPromDate=wfHwDiagPromDate, wfFDDICct=wfFDDICct, wfFDDIRingOverrunRx=wfFDDIRingOverrunRx, wfBrStpInterfaceDelete=wfBrStpInterfaceDelete, wfTtyFrameErrors=wfTtyFrameErrors, wfFrCircuitThroughput=wfFrCircuitThroughput, wfXnsBaseDelete=wfXnsBaseDelete, wfXnsRipInterfaceListen=wfXnsRipInterfaceListen, wfSyncRetryCount=wfSyncRetryCount, wfVinesIfTrEndStation=wfVinesIfTrEndStation, wfVinesIfMux=wfVinesIfMux, wfivAdjEntry=wfivAdjEntry, wfFrCircuitDlci=wfFrCircuitDlci, wfIpTrafficFilterEnable=wfIpTrafficFilterEnable, wfBCNTemperature=wfBCNTemperature, wfivStaticAdjType=wfivStaticAdjType, wfIpxSapNetLvlTargNetwork=wfIpxSapNetLvlTargNetwork, wfTokenRingRequestRemoves=wfTokenRingRequestRemoves, wfLANCELoad=wfLANCELoad, wfBrSrIpEncapsStatus=wfBrSrIpEncapsStatus, wfT1Connector=wfT1Connector, wfT1RcvYelAlarms=wfT1RcvYelAlarms, wfDs3IntervalESs=wfDs3IntervalESs, wfVinesTrafficFilterCreate=wfVinesTrafficFilterCreate, wfTftpInRRQ=wfTftpInRRQ, wfDs3LineType=wfDs3LineType, wfApplePortZipZoneConflictErrors=wfApplePortZipZoneConflictErrors, wfTokenRingTxOctets=wfTokenRingTxOctets, wfivTrafficFilterEnable=wfivTrafficFilterEnable, wfIpInterfaceIcmpOutAddrMaskReps=wfIpInterfaceIcmpOutAddrMaskReps, wfIpSrCreate=wfIpSrCreate, wfivStaticAdjNodeAddr=wfivStaticAdjNodeAddr, wfApplePortAarpFlush=wfApplePortAarpFlush, wfSnmpInASNParseErrs=wfSnmpInASNParseErrs, wfModMadr2=wfModMadr2, wfIpRfOspfImportCreate=wfIpRfOspfImportCreate, wfCctOptsNormalXmits=wfCctOptsNormalXmits, wfSysDescr=wfSysDescr, wfBrStpInterfacePktsXmitd=wfBrStpInterfacePktsXmitd, wfHssiConnector=wfHssiConnector, wfXnsInterfaceForwDatagrams=wfXnsInterfaceForwDatagrams, wfivCircuitID=wfivCircuitID, wfHwDiagPromSource=wfHwDiagPromSource, wfHssiTxOctets=wfHssiTxOctets, wfOspfVirtIfRxDBDescripts=wfOspfVirtIfRxDBDescripts, wfIpxSapServLvlIndex=wfIpxSapServLvlIndex, wfTcpGroup=wfTcpGroup, wfFrCircuitCommittedBurst=wfFrCircuitCommittedBurst, wfIfOperStatus=wfIfOperStatus, wfIpRfRipExportRipMetric=wfIpRfRipExportRipMetric, wfIpxBaseSapHost=wfIpxBaseSapHost, wfSysLocation=wfSysLocation, wfVinesIfX25VCResetsOut=wfVinesIfX25VCResetsOut, wfXnsInterfaceExServNetwork=wfXnsInterfaceExServNetwork, wfVinesTrafficFilterReserved=wfVinesTrafficFilterReserved, wfHwMotherBdIdOpt=wfHwMotherBdIdOpt, wfIpxRipInterfaceDelete=wfIpxRipInterfaceDelete, wfIpRfOspfExportAction=wfIpRfOspfExportAction, wfApplePortAarpReqTxs=wfApplePortAarpReqTxs, wfivCircuitArea=wfivCircuitArea, wfDs3FeCurrent=wfDs3FeCurrent, wfivAdjCircuitID=wfivAdjCircuitID, wfIpBaseRouteMetric4=wfIpBaseRouteMetric4, wfFrCircuitSentOctets=wfFrCircuitSentOctets, wfCircuitProtoMap=wfCircuitProtoMap, wfSnmpInBadCommunityNames=wfSnmpInBadCommunityNames, wfSnmpInSetRequests=wfSnmpInSetRequests, wfivStaticAdjPriority=wfivStaticAdjPriority, wfDs1IntervalSESs=wfDs1IntervalSESs, wfT1Disable=wfT1Disable, wfTokenRingRxCongestionErrors=wfTokenRingRxCongestionErrors, wfDs1FeTotalSESs=wfDs1FeTotalSESs, wfivAdjNodeAddr=wfivAdjNodeAddr, wfIpxAdjacentHostTable=wfIpxAdjacentHostTable, wfSyncExtendedAddress=wfSyncExtendedAddress, wfIpInterfaceCfgMacAddress=wfIpInterfaceCfgMacAddress, wfIpRfRipExportEnable=wfIpRfRipExportEnable, wfIpxInterfaceNetworkNumber=wfIpxInterfaceNetworkNumber, wfTokenRingBurstErrors=wfTokenRingBurstErrors, wfXnsInterfaceCircuit=wfXnsInterfaceCircuit, wfDs1Total=wfDs1Total, wfSyncExtendedControlForce=wfSyncExtendedControlForce, wfSnmpTrapDebug=wfSnmpTrapDebug, wfIpxTrafficFilterCounter=wfIpxTrafficFilterCounter, wfVinesIfX25VCBytesAwaitAck=wfVinesIfX25VCBytesAwaitAck, wfOspfLsdbLSID=wfOspfLsdbLSID, wfBrSourceRouting=wfBrSourceRouting, wfHardwareConfig=wfHardwareConfig, wfXnsInterfaceNetworkNumber=wfXnsInterfaceNetworkNumber, wfHssiLastTxErrorCtrl=wfHssiLastTxErrorCtrl, wfApplePortZipZoneOutInvalids=wfApplePortZipZoneOutInvalids, wfXnsTrafficFilterCreate=wfXnsTrafficFilterCreate, wfSwSeries7=wfSwSeries7, wfVinesIfX25VCNumber=wfVinesIfX25VCNumber, wfIpxTrafficFilterDefinition=wfIpxTrafficFilterDefinition, wfDs3FeIntervalIndex=wfDs3FeIntervalIndex, wfSysObjectID=wfSysObjectID, wfArpCreate=wfArpCreate, wfIfEntry=wfIfEntry, wfE1HDB3Support=wfE1HDB3Support, wfKernelBufOwnerTask10Bufs=wfKernelBufOwnerTask10Bufs, wfBrLearning=wfBrLearning, wfHwfLineCurrentTblSize=wfHwfLineCurrentTblSize, wfivCircuitCountOutRngePktLoss=wfivCircuitCountOutRngePktLoss, wfDs3FeIntervalEntry=wfDs3FeIntervalEntry, wfSyncTxOctets=wfSyncTxOctets, wfIpxSrNextHopNetwork=wfIpxSrNextHopNetwork, wfivCircuitCountAreaUpdSent=wfivCircuitCountAreaUpdSent, wfSnmpDisable=wfSnmpDisable, wfIfInOctets=wfIfInOctets, wfOspfVirtIfTxLinkStateReqs=wfOspfVirtIfTxLinkStateReqs, wfCSMACDRxReplenMisses=wfCSMACDRxReplenMisses, wfBrTpInterfaceDelete=wfBrTpInterfaceDelete, wfDs3TotalSESs=wfDs3TotalSESs, wfHssiInternalClkTestMode=wfHssiInternalClkTestMode, wfIpxInterfaceOutNoRoutes=wfIpxInterfaceOutNoRoutes, wfDs1IntervalUASs=wfDs1IntervalUASs, wfIpRfOspfExportType=wfIpRfOspfExportType, wfPrompt=wfPrompt, wfKernelMemOwnerTask3Size=wfKernelMemOwnerTask3Size, wfIpInterfaceIcmpInDestUnreachs=wfIpInterfaceIcmpInDestUnreachs, wfVinesIpTotOut=wfVinesIpTotOut, wfCSMACDOfloRx=wfCSMACDOfloRx, wfSnmpOutGetRequests=wfSnmpOutGetRequests, wfSnmpCommName=wfSnmpCommName, wfKernelTimersTotal=wfKernelTimersTotal, wfVinesIfReassFails=wfVinesIfReassFails, wfModHicr=wfModHicr, wfApplePortNbpOutBroadcastRequests=wfApplePortNbpOutBroadcastRequests, wfIpRfOspfImportMask=wfIpRfOspfImportMask, wfDs3FarEndFrameIDCode=wfDs3FarEndFrameIDCode, wfDataLink=wfDataLink, wfApplePortDfltZone=wfApplePortDfltZone, wfAppleAarpTable=wfAppleAarpTable, wfIpxAhDisable=wfIpxAhDisable, wfDs3ZeroCoding=wfDs3ZeroCoding, wfAppleRtmpNextHopNet=wfAppleRtmpNextHopNet, wfIpRfRipImportAddress=wfIpRfRipImportAddress, wfBrSrInterfaceOutFrames=wfBrSrInterfaceOutFrames, wfXnsBaseRouteNextHopHost=wfXnsBaseRouteNextHopHost, wfIpAdjacentHostEntry=wfIpAdjacentHostEntry, wfAppleZipZoneNetStart=wfAppleZipZoneNetStart, wfOspfStubMetric=wfOspfStubMetric, wfIpInterfaceReasmMaxSize=wfIpInterfaceReasmMaxSize, wfVinesIpBad=wfVinesIpBad, wfCctOptsHighPriorityQueueLimit=wfCctOptsHighPriorityQueueLimit, wfTftpTimeOut=wfTftpTimeOut, wfFDDIFramesTxOk=wfFDDIFramesTxOk, wfSyncPassThruRemoteMadr=wfSyncPassThruRemoteMadr, wfIpAdjHostEnable=wfIpAdjHostEnable, wfIfOutUcastPkts=wfIfOutUcastPkts, wfSyncLocalAddress=wfSyncLocalAddress, wfApplePortCurNetEnd=wfApplePortCurNetEnd, wfVinesRtpNbrSvrName=wfVinesRtpNbrSvrName, wfDs1FeIntervalSEFs=wfDs1FeIntervalSEFs, wfHwMotherBdRev=wfHwMotherBdRev, wfModCar=wfModCar, wfOspfVirtNbrOptions=wfOspfVirtNbrOptions, wfInternet=wfInternet, wfKernelBufOwnerTask6Bufs=wfKernelBufOwnerTask6Bufs, wfModLance2=wfModLance2, wfOspfAreaRangeTable=wfOspfAreaRangeTable, wfOspfLsdbSequence=wfOspfLsdbSequence, wfDs1IntervalEntry=wfDs1IntervalEntry, wfOspfNbrDelete=wfOspfNbrDelete, wfFddiSmtMacCt=wfFddiSmtMacCt, wfXnsInterfaceMaxInfo=wfXnsInterfaceMaxInfo, wfDs3IntervalIndex=wfDs3IntervalIndex, wfApplePortState=wfApplePortState, wfFDDIAbortTx=wfFDDIAbortTx, wfBrSrBaseIpMtuSize=wfBrSrBaseIpMtuSize, wfTokenRingStatus=wfTokenRingStatus, wfTokenRingRxOctets=wfTokenRingRxOctets, wfCSMACDCerr=wfCSMACDCerr, wfCctOptsLargePkts=wfCctOptsLargePkts, wfT1OutOfFrameErrs=wfT1OutOfFrameErrs, wfIpInterfaceIcmpInTimeExcds=wfIpInterfaceIcmpInTimeExcds, wfivCircuitMaxRouters=wfivCircuitMaxRouters, wfOspfIfDrops=wfOspfIfDrops, wfXnsInterfaceInUnknownProtos=wfXnsInterfaceInUnknownProtos, wfDs3ConfigEntry=wfDs3ConfigEntry, wfFrDlcmiPassiveSeqCount=wfFrDlcmiPassiveSeqCount, wfVinesIfSlot=wfVinesIfSlot, wfVinesTrafficFilterEnable=wfVinesTrafficFilterEnable, wfApplePortZipInGetNetInfoReplies=wfApplePortZipInGetNetInfoReplies, wfModIlacc4=wfModIlacc4, wfModElmA1=wfModElmA1, wfVinesIfDodIpDisable=wfVinesIfDodIpDisable, wfAppleLclZoneTable=wfAppleLclZoneTable, wfBrSrEsRifTable=wfBrSrEsRifTable, wfFDDISmtRingOverrunRx=wfFDDISmtRingOverrunRx, wfUserLoginErrors=wfUserLoginErrors, wfAppleBaseTotalNets=wfAppleBaseTotalNets, wfAppleBaseHomedPort=wfAppleBaseHomedPort)
mibBuilder.exportSymbols("Wellfleet-Series7-MIB", wfIfInNUCastPkts=wfIfInNUCastPkts, wfDs1LoopbackConfig=wfDs1LoopbackConfig, wfVinesIfDelete=wfVinesIfDelete, wfTftp=wfTftp, wfBrStpBaseState=wfBrStpBaseState, wfApplePortNbpOutLookUpRequests=wfApplePortNbpOutLookUpRequests, wfFddiSmtNonMasterCt=wfFddiSmtNonMasterCt, wfTokenRingCfgMadr=wfTokenRingCfgMadr, wfHssiTable=wfHssiTable, wfHwfLineNumber=wfHwfLineNumber, wfBrStpInterfaceForwardTransitions=wfBrStpInterfaceForwardTransitions, wfCctOptsLengthBasedEntry=wfCctOptsLengthBasedEntry, wfT1State=wfT1State, wfFddiPortGroup=wfFddiPortGroup, wfBrStpRootPort=wfBrStpRootPort, wfTftpOutRRQ=wfTftpOutRRQ, wfIpBaseHostEntry=wfIpBaseHostEntry, wfVinesBaseBcastClass=wfVinesBaseBcastClass, wfCSMACDAlignErrorRx=wfCSMACDAlignErrorRx, wfHwfAvailableLines=wfHwfAvailableLines, wfSyncRuntsRx=wfSyncRuntsRx, wfIfOutDiscards=wfIfOutDiscards, wfTiRuiOutResults=wfTiRuiOutResults, wfIpxBaseSapEntryTable=wfIpxBaseSapEntryTable, wfXnsBaseRtEntryTable=wfXnsBaseRtEntryTable, wfOspfIfState=wfOspfIfState, wfOspfIfIpAddress=wfOspfIfIpAddress, wfDs3Current=wfDs3Current, wfDs1CurrentEntry=wfDs1CurrentEntry, wfFDDIState=wfFDDIState, wfFrCircuitSubCct=wfFrCircuitSubCct, wfIpInterfaceReasmReqds=wfIpInterfaceReasmReqds, wfSyncSignalMode=wfSyncSignalMode, wfIpInterfaceEnetArpEncaps=wfIpInterfaceEnetArpEncaps, wfKernelBufOwnerTask10=wfKernelBufOwnerTask10, wfSipDs1PlcpSEFs=wfSipDs1PlcpSEFs, wfBrSrTrafficFilterEntry=wfBrSrTrafficFilterEntry, wfBrSrIpExplorerEntry=wfBrSrIpExplorerEntry, wfModTms3801=wfModTms3801, wfSipDs3PlcpEntry=wfSipDs3PlcpEntry, wfT1Madr=wfT1Madr, wfOspfIfRtrDeadInterval=wfOspfIfRtrDeadInterval, wfSnmpMgrDelete=wfSnmpMgrDelete, wfBrSrInterfaceOutIpFrames=wfBrSrInterfaceOutIpFrames, wfIpxSapNetLvlDelete=wfIpxSapNetLvlDelete, wfIpInterfaceOutNoRoutes=wfIpInterfaceOutNoRoutes, wfFrDlcmiLastReceived=wfFrDlcmiLastReceived, wfivRouteMaxCircuits=wfivRouteMaxCircuits, wfIpBaseRouteMetric1=wfIpBaseRouteMetric1, wfivRouteMaxCost=wfivRouteMaxCost, wfIf=wfIf, wfCSMACDEnable=wfCSMACDEnable, wfBrTpFdbTable=wfBrTpFdbTable, wfIpxBaseRtEntry=wfIpxBaseRtEntry, wfIpxInterfaceIndex=wfIpxInterfaceIndex, wfDs1Interval=wfDs1Interval, wfHssiLastRxRingState=wfHssiLastRxRingState, wfSnmpGroup=wfSnmpGroup, wfXnsInterfaceXsumOn=wfXnsInterfaceXsumOn, wfHssiWanProtocol=wfHssiWanProtocol, wfTokenRingLobeWireFaults=wfTokenRingLobeWireFaults, wfivCircuitEntry=wfivCircuitEntry, wfVinesIfArpInErrors=wfVinesIfArpInErrors, wfXnsBase=wfXnsBase, wfVinesIfDisable=wfVinesIfDisable, wfivCircuitAllAreaRoutersMac=wfivCircuitAllAreaRoutersMac, wfSnmpCommEntry=wfSnmpCommEntry, wfApplication=wfApplication, wfIpRfRipExportMask=wfIpRfRipExportMask, wfTokenRingEarlyTokenRelease=wfTokenRingEarlyTokenRelease, wfIpInterfaceFragFails=wfIpInterfaceFragFails, wfAppleZipZoneNetEnd=wfAppleZipZoneNetEnd, wfApplePortZipOutGetZoneListReplies=wfApplePortZipOutGetZoneListReplies, wfHwModSerialNumber=wfHwModSerialNumber, wfOspfNbrDisable=wfOspfNbrDisable, wfDs3ValidIntervals=wfDs3ValidIntervals, wfBrStpInterfaceDesignatedCost=wfBrStpInterfaceDesignatedCost, wfDs1FeTotalBPVs=wfDs1FeTotalBPVs, wfCircuitNameEntry=wfCircuitNameEntry, wfIpxBaseNetTblSize=wfIpxBaseNetTblSize, wfIpxBaseSapAge=wfIpxBaseSapAge, wfCctOptsMaxInterruptQueueLatency=wfCctOptsMaxInterruptQueueLatency, wfOspfVirtNbrIpAddr=wfOspfVirtNbrIpAddr, wfIpxNetBiosStaticRouteTable=wfIpxNetBiosStaticRouteTable, wfVinesIfX25VCPktsOut=wfVinesIfX25VCPktsOut, wfManagerLoginErrors=wfManagerLoginErrors, wfModMadr4=wfModMadr4, wfApplePortZipOutGetMyZoneReplies=wfApplePortZipOutGetMyZoneReplies, wfFDDIMacTReq=wfFDDIMacTReq, wfKernelBufOwnerTask4Bufs=wfKernelBufOwnerTask4Bufs, wfSipL2MidCurrentlyActiveErrors=wfSipL2MidCurrentlyActiveErrors, wfIpInterfaceFragOKs=wfIpInterfaceFragOKs, wfFrDlcmiAddress=wfFrDlcmiAddress, wfIpxBaseRouteProto=wfIpxBaseRouteProto, wfMoreEnable=wfMoreEnable, wfModRev=wfModRev, wfivLevel1RouteCircuitID=wfivLevel1RouteCircuitID, wfTokenRingCounterOverflows=wfTokenRingCounterOverflows, wfBrSrInterfaceCircuit=wfBrSrInterfaceCircuit, wfVinesIfTable=wfVinesIfTable, wfivLevel1RouteNodeAddr=wfivLevel1RouteNodeAddr, wfivCircuitCreateDelete=wfivCircuitCreateDelete, wfSyncExtendedControl=wfSyncExtendedControl, wfOspfDynNbrState=wfOspfDynNbrState, wfApplePortZipOutZipQueries=wfApplePortZipOutZipQueries, wfOspfVirtIfDrops=wfOspfVirtIfDrops, wfIpxAhNextHopIntf=wfIpxAhNextHopIntf, wfIpxBaseDelete=wfIpxBaseDelete, wfDs3FeTotalSESs=wfDs3FeTotalSESs, wfOspfAreaState=wfOspfAreaState, wfDs3FeTotalESs=wfDs3FeTotalESs, wfSyncOverFlowRx=wfSyncOverFlowRx, wfSnmpInGetResponses=wfSnmpInGetResponses, wfModTocr=wfModTocr, wfSnmpTrapInfo=wfSnmpTrapInfo, wfModMidr=wfModMidr, wfIpxBaseRouteNextHopNetwork=wfIpxBaseRouteNextHopNetwork, wfIpRfOspfExportAddress=wfIpRfOspfExportAddress, wfCctOptsIpFilterRuleNumber=wfCctOptsIpFilterRuleNumber, wfFrDlcmiMonitoredEvents=wfFrDlcmiMonitoredEvents, wfDs1FeCurrentEntry=wfDs1FeCurrentEntry, wfTokenRingMtu=wfTokenRingMtu, wfVinesIpRoutedHWM=wfVinesIpRoutedHWM, wfDs1FeIntervalSESs=wfDs1FeIntervalSESs, wfTokenRingRxReplenMisses=wfTokenRingRxReplenMisses, wfivRouteRoutingVers=wfivRouteRoutingVers, wfXnsRipInterfaceSupply=wfXnsRipInterfaceSupply, wfVinesArpAssignDeniedPkts=wfVinesArpAssignDeniedPkts, wfIpRfOspfImportAddress=wfIpRfOspfImportAddress, wfFrErrType=wfFrErrType, wfAppleRtmpNetEnd=wfAppleRtmpNetEnd, wfSyncRxOctets=wfSyncRxOctets, wfFDDIRingErrRx=wfFDDIRingErrRx, wfFddiPortPcmState=wfFddiPortPcmState, wfDs1FeTotalCVs=wfDs1FeTotalCVs, wfBrStpInterfacePriority=wfBrStpInterfacePriority, wfArpIntfTable=wfArpIntfTable, wfKernelBufOwnerTask7=wfKernelBufOwnerTask7, wfSnmpUseLock=wfSnmpUseLock, wfivStaticAdjNodeid=wfivStaticAdjNodeid, wfHwSparePromSource=wfHwSparePromSource, wfBrTpInterfaceInDiscards=wfBrTpInterfaceInDiscards, wfDs1FeCurrentSEFs=wfDs1FeCurrentSEFs, wfApplePortZipOutGetNetInfos=wfApplePortZipOutGetNetInfos, wfBrSrBaseInternalLanId=wfBrSrBaseInternalLanId, wfVinesIfX25VCBytesIn=wfVinesIfX25VCBytesIn, wfIpxInterfaceDisable=wfIpxInterfaceDisable, wfIpSrIpAddress=wfIpSrIpAddress, wellfleet=wellfleet, wfFrCircuitCreationTime=wfFrCircuitCreationTime, wfivAreaEntry=wfivAreaEntry, wfApplePortZipOutZipReplies=wfApplePortZipOutZipReplies, wfOspfAddressLessIf=wfOspfAddressLessIf, wfAppleZipZoneState=wfAppleZipZoneState, wfBrTrafficFilterEntry=wfBrTrafficFilterEntry, wfOspfVirtIfRtrDeadInterval=wfOspfVirtIfRtrDeadInterval, wfHssiDelete=wfHssiDelete, wfOspfNbrPriority=wfOspfNbrPriority, wfCctOptsHighWaterPktsClear=wfCctOptsHighWaterPktsClear, wfSyncRejectsRx=wfSyncRejectsRx, wfDs1IntervalESs=wfDs1IntervalESs, wfivCircuitCountL1UpdSent=wfivCircuitCountL1UpdSent, wfFrCircuitState=wfFrCircuitState, wfHwBpIdOpt=wfHwBpIdOpt, wfivCircuitCountHelloSent=wfivCircuitCountHelloSent, wfTokenRingEntry=wfTokenRingEntry, wfCctOptsIpFilterCreate=wfCctOptsIpFilterCreate, wfIpInterfaceASB=wfIpInterfaceASB, wfIpxInterfaceCacheHit=wfIpxInterfaceCacheHit, wfFDDIHardwareFilter=wfFDDIHardwareFilter, wfBrStpBridgeMaxAge=wfBrStpBridgeMaxAge, wfOspfIfAreaId=wfOspfIfAreaId, wfAppleRtmpEntry=wfAppleRtmpEntry, wfFrCircuitTable=wfFrCircuitTable, wfVinesTrafficFilterCounter=wfVinesTrafficFilterCounter, wfVinesIfDescr=wfVinesIfDescr, wfCctOptsEntry=wfCctOptsEntry, wfIpxTrafficFilterCircuit=wfIpxTrafficFilterCircuit, wfVinesIfX25VCBytesOut=wfVinesIfX25VCBytesOut, wfIpBaseForwarding=wfIpBaseForwarding, wfFddiMacTNeg=wfFddiMacTNeg, wfApplePortDdpOutRequests=wfApplePortDdpOutRequests, wfHwMotherBdSerialNumber=wfHwMotherBdSerialNumber, wfBrSrTrafficFilterCreate=wfBrSrTrafficFilterCreate, wfXnsTrafficFilterTable=wfXnsTrafficFilterTable, wfivRouteGroup=wfivRouteGroup, wfIfNumber=wfIfNumber, wfSmdsCircuitDisableNetMgmt=wfSmdsCircuitDisableNetMgmt, wfHssiSlot=wfHssiSlot, wfFddiSmtSlot=wfFddiSmtSlot, wfArpEnable=wfArpEnable, wfHSSILoad=wfHSSILoad, wfHssiTxClipFrames=wfHssiTxClipFrames, wfTokenRingRxTimeouts=wfTokenRingRxTimeouts, wfCircuitName=wfCircuitName, wfHssiBoflTmo=wfHssiBoflTmo, wfSyncLinkIdleTimer=wfSyncLinkIdleTimer, wfCSMACDLcarTx=wfCSMACDLcarTx, wfHwDaughterBdIdOpt=wfHwDaughterBdIdOpt, wfFDDIMtu=wfFDDIMtu, wfDs3CurrentESs=wfDs3CurrentESs, wfOspfIfDelete=wfOspfIfDelete, wfApplePortTrEndStation=wfApplePortTrEndStation, wfTokenRingRxHostIntErrors=wfTokenRingRxHostIntErrors, wfCctOptsBrFilterCounter=wfCctOptsBrFilterCounter, wfIpRfOspfExportTable=wfIpRfOspfExportTable, wfDs3FeCurrentCVs=wfDs3FeCurrentCVs, wfSnmpInNoSuchNames=wfSnmpInNoSuchNames, wfAppleRtmpNetStart=wfAppleRtmpNetStart, wfBrSrInterfaceDelete=wfBrSrInterfaceDelete, wfOspfVirtIfTxHellos=wfOspfVirtIfTxHellos, wfivRouteMaxBdcastNonRouters=wfivRouteMaxBdcastNonRouters, wfSipDs1PlcpAlarmState=wfSipDs1PlcpAlarmState, wfIpxInterfaceOutDiscards=wfIpxInterfaceOutDiscards, wfOspfGeneralGroup=wfOspfGeneralGroup, wfIpTrafficFilterFragment=wfIpTrafficFilterFragment, wfRipIntfTable=wfRipIntfTable, wfIpInterfaceIcmpOutMsgs=wfIpInterfaceIcmpOutMsgs, wfCSMACDOctetsTxOk=wfCSMACDOctetsTxOk, wfIpInterfaceFRMcast2Dlci=wfIpInterfaceFRMcast2Dlci, wfFddiGroup=wfFddiGroup, wfTelnetGroup=wfTelnetGroup, wfXnsInterfaceTable=wfXnsInterfaceTable, wfivAdjClass=wfivAdjClass, wfSmdsCircuitSipL3ReceivedIndividualDAs=wfSmdsCircuitSipL3ReceivedIndividualDAs, wfFDDINode=wfFDDINode, wfBrSrInterfaceEntry=wfBrSrInterfaceEntry, wfFDDIMadr=wfFDDIMadr, wfFrCircuitMode=wfFrCircuitMode, wfKernelMemOwnerTask2=wfKernelMemOwnerTask2, wfIpBaseNetToMediaType=wfIpBaseNetToMediaType, wfIpInterfaceCfgBcastAddr=wfIpInterfaceCfgBcastAddr, wfApplePortZipOutGetLocalZoneReplies=wfApplePortZipOutGetLocalZoneReplies, wfBgpGroup=wfBgpGroup, wfCctOptsBrFilterState=wfCctOptsBrFilterState, wfHwSlot=wfHwSlot, wfKernelMemOwnerTask1=wfKernelMemOwnerTask1, wfSyncMinFrameSpace=wfSyncMinFrameSpace, wfSnmpOutGetResponses=wfSnmpOutGetResponses, wfivTrafficFilterCounter=wfivTrafficFilterCounter, wfApplePortCurDfltZone=wfApplePortCurDfltZone, wfModHlsr=wfModHlsr, wfApplePortCurMacAddress=wfApplePortCurMacAddress, wfVinesBase=wfVinesBase, wfE1Madr=wfE1Madr, wfHssiEntry=wfHssiEntry, wfDS2181Load=wfDS2181Load, wfVinesTrafficFilterCircuit=wfVinesTrafficFilterCircuit, wfApplePortNetwork=wfApplePortNetwork, wfDs1TotalUASs=wfDs1TotalUASs, wfOspfSpfHoldDown=wfOspfSpfHoldDown, wfBrSrTrafficFilterReserved=wfBrSrTrafficFilterReserved, wfFDDITxClipFrames=wfFDDITxClipFrames, wfModProm=wfModProm)
mibBuilder.exportSymbols("Wellfleet-Series7-MIB", wfApplePortZipInGetZoneLists=wfApplePortZipInGetZoneLists, wfIpxBaseRouteIfIndex=wfIpxBaseRouteIfIndex, wfVinesIfArpDisable=wfVinesIfArpDisable, wfVinesIfArpInAssgReqs=wfVinesIfArpInAssgReqs, wfKernelBuffersTotal=wfKernelBuffersTotal, wfIpInterfaceInReceives=wfIpInterfaceInReceives, wfT1LineBuildout=wfT1LineBuildout, wfApplePortNetStart=wfApplePortNetStart, wfDs3IntervalEntry=wfDs3IntervalEntry, wfIpxInterfaceFRMcast=wfIpxInterfaceFRMcast, wfTokenRingOpenStatus=wfTokenRingOpenStatus, wfFrCircuitStateSet=wfFrCircuitStateSet, wfHssiInErrors=wfHssiInErrors, wfIpInterfaceIcmpInTimestamps=wfIpInterfaceIcmpInTimestamps, wfSipL2ReceivedCounts=wfSipL2ReceivedCounts, wfIpInterfaceIcmpOutSrcQuenchs=wfIpInterfaceIcmpOutSrcQuenchs, wfOspfVirtIfState=wfOspfVirtIfState, wfSnmpOutPkts=wfSnmpOutPkts, wfOspfGeneralState=wfOspfGeneralState, wfVinesIfEchoOutPkts=wfVinesIfEchoOutPkts, wfIpInterfaceAddr=wfIpInterfaceAddr, wfXnsInterfaceDisable=wfXnsInterfaceDisable, wfDTLoad=wfDTLoad, wfIpBaseRouteMetric2=wfIpBaseRouteMetric2, wfSipHcsOrCRCErrors=wfSipHcsOrCRCErrors, wfFrCircuitExcessBurst=wfFrCircuitExcessBurst, wfIpxSrDelete=wfIpxSrDelete, wfXnsSrTargNetwork=wfXnsSrTargNetwork, wfFrDlcmiAddressLen=wfFrDlcmiAddressLen, wfIpTrafficFilterInterface=wfIpTrafficFilterInterface, wfSipDs3PlcpIndex=wfSipDs3PlcpIndex, wfVinesNameTable=wfVinesNameTable, wfXnsGroup=wfXnsGroup, wfIpBaseRouteType=wfIpBaseRouteType, wfXnsAdjacentHostTable=wfXnsAdjacentHostTable, wfTtyOverrunErrors=wfTtyOverrunErrors, wfLoginRetries=wfLoginRetries, wfivLevel1AreaId=wfivLevel1AreaId, wfIpRfOspfExportCreate=wfIpRfOspfExportCreate, wfSmdsCircuitDelete=wfSmdsCircuitDelete, wfVinesIpFrags=wfVinesIpFrags, wfOspfVirtIfRetransInterval=wfOspfVirtIfRetransInterval, wfBrSrTrafficFilterStatus=wfBrSrTrafficFilterStatus, wfXnsAhDelete=wfXnsAhDelete, wfTokenRingRxFrames=wfTokenRingRxFrames, wfFddiSmtTable=wfFddiSmtTable, wfOspfIfBackupDesignatedRouter=wfOspfIfBackupDesignatedRouter, wfTokenRingOutDiscards=wfTokenRingOutDiscards, wfFrCircuitEntry=wfFrCircuitEntry, wfTftpRexmit=wfTftpRexmit, wfivCircuitTable=wfivCircuitTable, wfIpxSapNetLvlIntf=wfIpxSapNetLvlIntf, wfHssiRxRingOverruns=wfHssiRxRingOverruns, wfCctOptsLoClippedPkts=wfCctOptsLoClippedPkts, wfOspfVirtIfTxLinkStateUpds=wfOspfVirtIfTxLinkStateUpds, wfBCNPwrSupply1=wfBCNPwrSupply1, wfIpSrEnable=wfIpSrEnable, wfVinesArp=wfVinesArp, wfFddiMacGroup=wfFddiMacGroup, wfFrCircuitMulticast=wfFrCircuitMulticast, wfDs3LoopbackConfig=wfDs3LoopbackConfig, wfivAdjListenTimer=wfivAdjListenTimer, wfVinesNameSubNetid=wfVinesNameSubNetid, wfSyncConnectAttempts=wfSyncConnectAttempts, wfIpInterfaceIcmpInErrors=wfIpInterfaceIcmpInErrors, wfDs3FeCurrentESs=wfDs3FeCurrentESs, wfOspfVersionNumber=wfOspfVersionNumber, wfBrSrBaseIpEncapsDisable=wfBrSrBaseIpEncapsDisable, wfSipDs3PlcpAlarmState=wfSipDs3PlcpAlarmState, wfIpInterfaceIcmpOutTimestamps=wfIpInterfaceIcmpOutTimestamps, wfSnmpLockAddress=wfSnmpLockAddress, wfSnmpInTotalSetVars=wfSnmpInTotalSetVars, wfDs3LineStatus=wfDs3LineStatus, wfApplePortGniForever=wfApplePortGniForever, wfModElmB1=wfModElmB1, wfOspfVirtIfNeighbor=wfOspfVirtIfNeighbor, wfTftpXfers=wfTftpXfers, wfVinesIfIcpOutErrorNotifs=wfVinesIfIcpOutErrorNotifs, wfVinesIfX25VCTable=wfVinesIfX25VCTable, wfHwfEnable=wfHwfEnable, wfFrErrData=wfFrErrData, wfIpxSapServLvlType=wfIpxSapServLvlType, wfHssiMaxRxMemory=wfHssiMaxRxMemory, wfTftpDefaultVolume=wfTftpDefaultVolume, wfCctOptsBrFilterCreate=wfCctOptsBrFilterCreate, wfOspfAreaRangeEntry=wfOspfAreaRangeEntry, wfDs3TotalCVs=wfDs3TotalCVs, wfDs1IntervalNumber=wfDs1IntervalNumber, wfHssiCct=wfHssiCct, wfXnsRipInterfaceState=wfXnsRipInterfaceState, wfivStaticAdjCreateDelete=wfivStaticAdjCreateDelete, wfArpBaseForwarding=wfArpBaseForwarding, wfSyncBadFramesRx=wfSyncBadFramesRx, wfApplePortRtmpNextIRLessChanges=wfApplePortRtmpNextIRLessChanges, wfBrSrBaseDelete=wfBrSrBaseDelete, wfivAdjBlockSize=wfivAdjBlockSize, wfHssiState=wfHssiState, wfOspfIfTxHellos=wfOspfIfTxHellos, wfDs1TotalEntry=wfDs1TotalEntry, wfDs1TimeElapsed=wfDs1TimeElapsed, wfIpxAdjacentHostEntry=wfIpxAdjacentHostEntry, wfHssiExternalClkSpeed=wfHssiExternalClkSpeed, wfCircuitIfType=wfCircuitIfType, wfHssiOutErrors=wfHssiOutErrors, wfHwSparePromRev=wfHwSparePromRev, wfBrTp=wfBrTp, wfCSMACDSlot=wfCSMACDSlot, wfSipDs1PlcpIndex=wfSipDs1PlcpIndex, wfCctOptsLengthBasedDelete=wfCctOptsLengthBasedDelete, wfModemEnable=wfModemEnable, wfTokenRingFirstAdapterCheckCode=wfTokenRingFirstAdapterCheckCode, wfBrSrInterfaceBlockInSte=wfBrSrInterfaceBlockInSte, wfFDDIBofl=wfFDDIBofl, wfModSicr=wfModSicr, wfModCamAUnlock=wfModCamAUnlock, wfBrTpInterfaceInFrames=wfBrTpInterfaceInFrames, wfIfAdminStatus=wfIfAdminStatus, wfSmdsCircuitDisable=wfSmdsCircuitDisable, wfT1FrameBitErrs=wfT1FrameBitErrs, wfIpInterfaceReasmTimeout=wfIpInterfaceReasmTimeout, wfOSILoad=wfOSILoad, wfDs1FeCurrentSESs=wfDs1FeCurrentSESs, wfOspfIfDisable=wfOspfIfDisable, wfTokenRingSrbNotFreeCmdAborts=wfTokenRingSrbNotFreeCmdAborts, wfGameGroup=wfGameGroup, wfXnsSrNextHopNetwork=wfXnsSrNextHopNetwork, wfHwTable=wfHwTable, wfHwBootPromDate=wfHwBootPromDate, wfIpxBaseRouteInfo=wfIpxBaseRouteInfo, wfHwBase=wfHwBase, wfBrStpHelloTime=wfBrStpHelloTime, wfCSMACDExcessvCollnTx=wfCSMACDExcessvCollnTx, wfXnsBaseState=wfXnsBaseState, wfBrSrIpExplorerTable=wfBrSrIpExplorerTable, wfDs3FarEndEquipCode=wfDs3FarEndEquipCode, wfApplePortZipInErrors=wfApplePortZipInErrors, wfModCamALock=wfModCamALock, wfAppleBaseDebugLevel=wfAppleBaseDebugLevel, wfBrStpBaseEnable=wfBrStpBaseEnable, wfFDDISmtRingErrRx=wfFDDISmtRingErrRx, wfHssiOutDiscards=wfHssiOutDiscards, wfIpSrIpAddressRt=wfIpSrIpAddressRt, wfOspfDynNbrAddressLessIndex=wfOspfDynNbrAddressLessIndex, wfE1RcvUnfrm1s=wfE1RcvUnfrm1s, wfHwModRev=wfHwModRev, wfOspfAreaRangeDisable=wfOspfAreaRangeDisable, wfivLevel1NodeId=wfivLevel1NodeId, wfVinesNameHost=wfVinesNameHost, wfivRouteState=wfivRouteState, wfSyncBofl=wfSyncBofl, wfVINESLoad=wfVINESLoad, wfVinesRtpNbrType=wfVinesRtpNbrType, wfXnsInterfaceExServPktType=wfXnsInterfaceExServPktType, wfDs1FeTotal=wfDs1FeTotal, wfivAdjIndex=wfivAdjIndex, wfivAreaNextNode=wfivAreaNextNode, wfFDDIOctetsRxOk=wfFDDIOctetsRxOk, wfIpxTrafficFilterFragment=wfIpxTrafficFilterFragment, wfBrStpInterfaceDesignatedPort=wfBrStpInterfaceDesignatedPort, wfApplePortNbpOutForwardRequests=wfApplePortNbpOutForwardRequests, wfIpBaseHostEntryTable=wfIpBaseHostEntryTable, wfCSMACDConnector=wfCSMACDConnector, wfDs1LineStatus=wfDs1LineStatus, wfFakeEvent=wfFakeEvent, wfIpxSapServLvlIntf=wfIpxSapServLvlIntf, wfFDDIBoflTmo=wfFDDIBoflTmo, wfCSMACDBofl=wfCSMACDBofl, wfFDDISmtEnable=wfFDDISmtEnable, wfOspfGroup=wfOspfGroup, wfApplePortAarpProbeTxs=wfApplePortAarpProbeTxs, wfIpxInterfaceTable=wfIpxInterfaceTable, wfBrStpRootCost=wfBrStpRootCost, wfSnmpMgrAddress=wfSnmpMgrAddress, wfCSMACDEntry=wfCSMACDEntry, wfSnmpCommTable=wfSnmpCommTable, wfBrSrInterfaceInFrames=wfBrSrInterfaceInFrames, wfXnsRipIntfTable=wfXnsRipIntfTable, wfModHicrData=wfModHicrData, wfModMac1=wfModMac1, wfIfIndex=wfIfIndex, wfivTrafficFilterEntry=wfivTrafficFilterEntry, wfFrCircuitReceivedFrames=wfFrCircuitReceivedFrames, wfKernelBufOwnerTask5=wfKernelBufOwnerTask5, wfDs1IntervalBPVs=wfDs1IntervalBPVs, wfSnmpMgrTraps=wfSnmpMgrTraps, wfCctOptsBrFilterTable=wfCctOptsBrFilterTable, wfSysName=wfSysName, wfDs3FeTotalEntry=wfDs3FeTotalEntry, wfTokenRingState=wfTokenRingState, wfKernelMemOwnerTask8=wfKernelMemOwnerTask8, wfXnsSrDisable=wfXnsSrDisable, wfIpxBaseRouteDest=wfIpxBaseRouteDest, wfDs3CurrentSESs=wfDs3CurrentSESs, wfDs3CurrentSEFs=wfDs3CurrentSEFs, wfTftpDisable=wfTftpDisable, wfCSMACDTooLongErrorRx=wfCSMACDTooLongErrorRx, wfOspfVirtIfRxHellos=wfOspfVirtIfRxHellos, wfHwfLineTable=wfHwfLineTable, wfWanGroup=wfWanGroup, wfCctOptsLoXmits=wfCctOptsLoXmits, wfivRouteAreaMaxHops=wfivRouteAreaMaxHops, wfIpBaseRouteInfo=wfIpBaseRouteInfo, wfHssiCrcSize=wfHssiCrcSize, wfSipDs3Plcp=wfSipDs3Plcp, wfE1IILoad=wfE1IILoad, wfCSMACDBablErrorTx=wfCSMACDBablErrorTx, wfIpxTrafficFilterCreate=wfIpxTrafficFilterCreate, wfCctOptsBrFilterRuleNumber=wfCctOptsBrFilterRuleNumber, wfBrSrInterfaceDropInvalidRcs=wfBrSrInterfaceDropInvalidRcs, wfivRouteMaxAddr=wfivRouteMaxAddr, wfIpxRipInterfaceIndex=wfIpxRipInterfaceIndex, wfOspfNbrEntry=wfOspfNbrEntry, wfIpxInterfaceInAddrErrors=wfIpxInterfaceInAddrErrors, wfHssiLastTxRingState=wfHssiLastTxRingState, wfIpSrPreference=wfIpSrPreference, wfOspfDynNbrEvents=wfOspfDynNbrEvents, wfSipDs1PlcpEntry=wfSipDs1PlcpEntry, wfIfPhysAddress=wfIfPhysAddress, wfBrSrBaseDisable=wfBrSrBaseDisable, wfBrTpBaseFdbAddress=wfBrTpBaseFdbAddress, wfIpRfRipExportEntry=wfIpRfRipExportEntry, wfTokenRingTable=wfTokenRingTable, wfIpInterfaceIcmpInRedirects=wfIpInterfaceIcmpInRedirects, wfDs1FeIntervalIndex=wfDs1FeIntervalIndex, wfOspfIfDesignatedRouter=wfOspfIfDesignatedRouter, wfVinesIfNumber=wfVinesIfNumber, wfTokenRingAdapterChecks=wfTokenRingAdapterChecks, wfApplePortDelete=wfApplePortDelete, wfDs1FeIntervalBPVs=wfDs1FeIntervalBPVs, wfApplePortNbpInBroadcastRequests=wfApplePortNbpInBroadcastRequests, wfKernelMemorySegsFree=wfKernelMemorySegsFree, wfIpxInterfaceEncaps=wfIpxInterfaceEncaps, wfSmdsCircuitGroupAddr=wfSmdsCircuitGroupAddr, wfBrTrafficFilterCircuit=wfBrTrafficFilterCircuit, wfBrTrafficFilterTable=wfBrTrafficFilterTable, wfIpxInterfaceFRBcast=wfIpxInterfaceFRBcast, wfSnmpInBadTypes=wfSnmpInBadTypes, wfTokenRingMadr=wfTokenRingMadr, wfOspfIfAuthKey=wfOspfIfAuthKey, wfFrameRelayGroup=wfFrameRelayGroup, wfSyncWindowSizeTx=wfSyncWindowSizeTx, wfSipL2=wfSipL2, wfIpxAhTargHostId=wfIpxAhTargHostId, wfKernelTasksTotal=wfKernelTasksTotal, wfBrSrInterfaceDisable=wfBrSrInterfaceDisable, wfivAreaHops=wfivAreaHops, wfIpRouting=wfIpRouting, wfIpInterfaceProxy=wfIpInterfaceProxy, wfBrTpInterfaceState=wfBrTpInterfaceState, wfVinesTrafficFilterRuleNumber=wfVinesTrafficFilterRuleNumber, wfDs3FeIntervalCVs=wfDs3FeIntervalCVs, wfIpBaseNetToMediaNetAddress=wfIpBaseNetToMediaNetAddress, wfDs3Interval=wfDs3Interval, wfFDDIHostErr=wfFDDIHostErr)
mibBuilder.exportSymbols("Wellfleet-Series7-MIB", wfIfGroup=wfIfGroup, wfVinesIpReass=wfVinesIpReass, wfIpxSrCost=wfIpxSrCost, wfApplePortNbpOutLookUpReplies=wfApplePortNbpOutLookUpReplies, wfIpInterfaceIcmpOutEchos=wfIpInterfaceIcmpOutEchos, wfIpxBaseLogFilter=wfIpxBaseLogFilter, wfBrSrInterfaceState=wfBrSrInterfaceState, wfIpTrafficFilterEntry=wfIpTrafficFilterEntry, wfXnsSrCost=wfXnsSrCost, wfSnmpOutReadOnlys=wfSnmpOutReadOnlys, wfFddiPathGroup=wfFddiPathGroup, wfFddiSmtCct=wfFddiSmtCct, wfHwBabyBdIdOpt=wfHwBabyBdIdOpt, wfIpTrafficFilterReserved=wfIpTrafficFilterReserved, wfFDDICrcErrRx=wfFDDICrcErrRx, wfBrTpBaseEnable=wfBrTpBaseEnable, wfIpxBaseSapIntf=wfIpxBaseSapIntf, wfSmdsCircuitSipL3SentGAs=wfSmdsCircuitSipL3SentGAs, wfTokenRingHardErrors=wfTokenRingHardErrors, wfVinesIfLine=wfVinesIfLine, wfDs1FeTotalIndex=wfDs1FeTotalIndex, wfXnsSrNextHopHost=wfXnsSrNextHopHost, wfLine=wfLine, wfIpInterfaceRedirect=wfIpInterfaceRedirect, wfE1RcvMfmAlms=wfE1RcvMfmAlms, wfRipInterfaceDefaultRouteListen=wfRipInterfaceDefaultRouteListen, wfApplePortType=wfApplePortType, wfHssiTransmissionInterface=wfHssiTransmissionInterface, wfSnmpTrapWarn=wfSnmpTrapWarn, wfOspfIfRetransInterval=wfOspfIfRetransInterval, wfDs1ZeroCoding=wfDs1ZeroCoding, wfVinesBaseRouterNetid=wfVinesBaseRouterNetid, wfCctOptsBrFilterEnable=wfCctOptsBrFilterEnable, wfIpxInterfaceEntry=wfIpxInterfaceEntry, wfXnsRipInterfaceDelete=wfXnsRipInterfaceDelete, wfTokenRingFrameCopiedErrors=wfTokenRingFrameCopiedErrors, wfSnmpInTraps=wfSnmpInTraps, wfFddiPortCct=wfFddiPortCct, wfIpInterfaceIcmpOutEchoReps=wfIpInterfaceIcmpOutEchoReps, wfTokenRingRingRecoveries=wfTokenRingRingRecoveries, wfSnmpOutNoSuchNames=wfSnmpOutNoSuchNames, wfTokenRingSoftErrors=wfTokenRingSoftErrors, wfModMuxram1=wfModMuxram1, wfIpTrafficFilterDefinition=wfIpTrafficFilterDefinition, wfE1Delete=wfE1Delete, wfBrStpBaseDelete=wfBrStpBaseDelete, wfE1SyncLoss=wfE1SyncLoss, wfDs3IntervalSESs=wfDs3IntervalSESs, wfCSMACDFramesRxOk=wfCSMACDFramesRxOk, wfDs3CurrentBPVs=wfDs3CurrentBPVs, wfSystem=wfSystem, wfFddiTable=wfFddiTable, wfTokenRingConnector=wfTokenRingConnector, wfOtherLoginErrors=wfOtherLoginErrors, wfVinesIfRemClientPrivDisable=wfVinesIfRemClientPrivDisable, wfOspfRouterId=wfOspfRouterId, wfCSMACDUfloTx=wfCSMACDUfloTx, wfIpInterfaceReasmOKs=wfIpInterfaceReasmOKs, wfDs3TimeElapsed=wfDs3TimeElapsed, wfIpRfOspfExportMask=wfIpRfOspfExportMask, wfHssiRxCrcErrors=wfHssiRxCrcErrors, wfSyncExtendedAddressForce=wfSyncExtendedAddressForce, wfVinesIfX25VCResetsIn=wfVinesIfX25VCResetsIn, wfIpRfOspfImportAction=wfIpRfOspfImportAction, wfAppleRtmpState=wfAppleRtmpState, wfKernelBufOwnerTask8=wfKernelBufOwnerTask8, wfHwBootPromRev=wfHwBootPromRev, wfivCircuitCountPacketFmtErr=wfivCircuitCountPacketFmtErr, wfSipL2PayloadLengthErrors=wfSipL2PayloadLengthErrors, wfBrSrInterfaceDropInvalidRings=wfBrSrInterfaceDropInvalidRings, wfSyncFrameRejectsRx=wfSyncFrameRejectsRx, wfIpRfOspfImportEntry=wfIpRfOspfImportEntry, wfSyncWindowSizeTxExtc=wfSyncWindowSizeTxExtc, wfSyncT1Timeouts=wfSyncT1Timeouts, wfE1Entry=wfE1Entry, wfApplePortZipInGetMyZones=wfApplePortZipInGetMyZones, wfIpxAhTargHostNetwork=wfIpxAhTargHostNetwork, wfModCamBLock=wfModCamBLock, wfIpxBaseState=wfIpxBaseState, wfFDDIParityErrTx=wfFDDIParityErrTx, wfOspfIfEntry=wfOspfIfEntry, wfOspfNbrTable=wfOspfNbrTable, wfBrSrEsRifProtocol=wfBrSrEsRifProtocol, wfivStaticAdjCircuitID=wfivStaticAdjCircuitID, wfIpSrCost=wfIpSrCost, wfDs3FeIntervalSESs=wfDs3FeIntervalSESs, wfDs1LineIndex=wfDs1LineIndex, wfVinesBaseDisable=wfVinesBaseDisable, wfOspfIfRxLinkStateAcks=wfOspfIfRxLinkStateAcks, wfTiRuiOutResultsErr=wfTiRuiOutResultsErr, wfSipDs3PlcpSEFs=wfSipDs3PlcpSEFs, wfFddiMacTable=wfFddiMacTable, wfHssiTurboBofl=wfHssiTurboBofl, wfBrSrEsRifMacAddr=wfBrSrEsRifMacAddr, wfCSMACDOctetsRxOk=wfCSMACDOctetsRxOk, wfBrSrInterfaceBlockIp=wfBrSrInterfaceBlockIp, wfCctOptsIntrQHighWaterPkts=wfCctOptsIntrQHighWaterPkts, wfOspfIfTxLinkStateUpds=wfOspfIfTxLinkStateUpds, wfStopBits=wfStopBits, wfVinesRtpRtMetric=wfVinesRtpRtMetric, wfSnmpMgrTrapPort=wfSnmpMgrTrapPort, wfVinesIfEchoInPkts=wfVinesIfEchoInPkts, wfAppleBase=wfAppleBase, wfAppleBaseState=wfAppleBaseState, wfOspfNbrEvents=wfOspfNbrEvents, wfCSMACDBoflTmo=wfCSMACDBoflTmo, wfSys=wfSys, wfSipL2Entry=wfSipL2Entry, wfVinesIfInErrs=wfVinesIfInErrs, wfIpxBaseRtEntryTable=wfIpxBaseRtEntryTable, wfModSnprom=wfModSnprom, wfBrSrBaseIpNetworkRingId=wfBrSrBaseIpNetworkRingId, wfXnsInterfaceExServSockNm=wfXnsInterfaceExServSockNm, wfApplePortDdpHopCountErrors=wfApplePortDdpHopCountErrors, wfivCircuitCountPtlRteUpdtLoss=wfivCircuitCountPtlRteUpdtLoss, wfKernelMemorySegsTotal=wfKernelMemorySegsTotal, wfIpxNetBiosSrDelete=wfIpxNetBiosSrDelete, wfSmdsCircuitSipL3ReceivedGAs=wfSmdsCircuitSipL3ReceivedGAs, wfIpxBaseSapEntry=wfIpxBaseSapEntry, wfIpBaseRouteMask=wfIpBaseRouteMask, wfDs1TotalCVs=wfDs1TotalCVs, wfOspfVirtNbrArea=wfOspfVirtNbrArea, wfILACCLoad=wfILACCLoad, wfIpRfRipExportCreate=wfIpRfRipExportCreate, wfSysUpTime=wfSysUpTime, wfIpxRipInterfaceSupply=wfIpxRipInterfaceSupply, wfTokenRingRxProcessings=wfTokenRingRxProcessings, wfCctOptsHiQHighWaterPkts=wfCctOptsHiQHighWaterPkts, wfBrSrTrafficFilterFragment=wfBrSrTrafficFilterFragment, wfKernelMemOwnerTask6=wfKernelMemOwnerTask6, wfApplePortNbpRegistrationFailures=wfApplePortNbpRegistrationFailures, wfFddiSmtEntry=wfFddiSmtEntry, wfFrDlcmiManagementType=wfFrDlcmiManagementType, wfFddiPortEntry=wfFddiPortEntry, wfKernelMemOwnerTask10Size=wfKernelMemOwnerTask10Size, wfIpRfRipImportEntry=wfIpRfRipImportEntry, wfSnmpInTooBigs=wfSnmpInTooBigs, wfCctOptsHiXmits=wfCctOptsHiXmits, wfSnmpInPkts=wfSnmpInPkts, wfIpxBaseSapHops=wfIpxBaseSapHops, wfVinesIfZeroHopDrops=wfVinesIfZeroHopDrops, wfFakeEventString=wfFakeEventString, wfFrDlcmiAlarmTimer=wfFrDlcmiAlarmTimer, wfSipL2Index=wfSipL2Index, wfBrStpForwardDelay=wfBrStpForwardDelay, wfTokenRingTxProcessings=wfTokenRingTxProcessings, wfTokenRingCct=wfTokenRingCct, wfModMadr3=wfModMadr3, wfFrDlcmiEntry=wfFrDlcmiEntry, wfDrivers=wfDrivers, wfivCircuitCountAgedPktLoss=wfivCircuitCountAgedPktLoss, wfivCircuitCountDropped=wfivCircuitCountDropped, wfSyncMemoryErrors=wfSyncMemoryErrors, wfSnmpOutGetNexts=wfSnmpOutGetNexts, wfHwfLineDroppedFrames=wfHwfLineDroppedFrames, wfQSYNCLoad=wfQSYNCLoad, wfIpInterfaceBcastAddr=wfIpInterfaceBcastAddr, wfTokenRingRxTxBufferSize=wfTokenRingRxTxBufferSize, wfIpRfOspfImportTable=wfIpRfOspfImportTable, wfSmdsCircuitTable=wfSmdsCircuitTable, wfFddiEntry=wfFddiEntry, wfApplePortCurNetStart=wfApplePortCurNetStart, wfCctOptsLengthBasedMux=wfCctOptsLengthBasedMux, wfApplePortZipAddressInvalids=wfApplePortZipAddressInvalids, wfKernelMemoryMaxSegFree=wfKernelMemoryMaxSegFree, wfBrTpInterfaceEntry=wfBrTpInterfaceEntry, wfIpxTrafficFilterEnable=wfIpxTrafficFilterEnable, wfXnsInterfaceFRMcast=wfXnsInterfaceFRMcast, wfIpxInterfaceCircuit=wfIpxInterfaceCircuit, wfIpInterfaceEntry=wfIpInterfaceEntry, wfKernelMemOwnerTask3=wfKernelMemOwnerTask3, wfIpAdjHostIntfMask=wfIpAdjHostIntfMask, wfIpxBaseSapType=wfIpxBaseSapType, wfModTms3802=wfModTms3802, wfSmdsCircuitIndivAddr=wfSmdsCircuitIndivAddr, wfBrSrTrafficFilterEnable=wfBrSrTrafficFilterEnable, wfApplePortNbpInForwardRequests=wfApplePortNbpInForwardRequests, wfIpInterfaceInDelivers=wfIpInterfaceInDelivers, wfXnsInterfaceExServHostId=wfXnsInterfaceExServHostId, wfDs3CurrentIndex=wfDs3CurrentIndex, wfAMZ8530Load=wfAMZ8530Load, wfHwFileSysPresent=wfHwFileSysPresent, wfIpInterfaceFRBcastDlci=wfIpInterfaceFRBcastDlci, wfBrSrIpEncapsRing=wfBrSrIpEncapsRing, wfDs3TotalESs=wfDs3TotalESs, wfTMS380Load=wfTMS380Load, wfSyncTxErrors=wfSyncTxErrors, wfHwDiagPromRev=wfHwDiagPromRev, wfT1FrameType=wfT1FrameType, wfHssiBoflLen=wfHssiBoflLen, wfIpxBaseRouteNextHopHost=wfIpxBaseRouteNextHopHost, wfModMk50253=wfModMk50253, wfOspfAreaDisable=wfOspfAreaDisable, wfSyncRemoteAddress=wfSyncRemoteAddress, wfOspfDynNbrTable=wfOspfDynNbrTable, wfTokenRingDelete=wfTokenRingDelete, wfIfOutNUcastPkts=wfIfOutNUcastPkts, wfModMcr1=wfModMcr1, wfDs3FeTotalIndex=wfDs3FeTotalIndex, wfBrTrafficFilterCreate=wfBrTrafficFilterCreate, wfApplePortRtmpOutDataPkts=wfApplePortRtmpOutDataPkts, wfIpxInterfaceMacAddress=wfIpxInterfaceMacAddress, wfivAreaNum=wfivAreaNum, wfFrDlcmiCircuit=wfFrDlcmiCircuit, wfDecGroup=wfDecGroup, wfIpRfRipImportMask=wfIpRfRipImportMask, wfOspfAreaBdrRtrStatus=wfOspfAreaBdrRtrStatus, wfFDDIRingErrTx=wfFDDIRingErrTx, wfCctOptsIpFilterCct=wfCctOptsIpFilterCct, wfAppleZipTable=wfAppleZipTable, wfIpxNetBiosSrDisable=wfIpxNetBiosSrDisable, wfBrTpInterfaceMaxInfo=wfBrTpInterfaceMaxInfo, wfKernelEntry=wfKernelEntry, wfHwfLineEntry=wfHwfLineEntry, wfDs3TotalIndex=wfDs3TotalIndex, wfIpStaticRouteEntry=wfIpStaticRouteEntry, wfIpBaseRouteMetric5=wfIpBaseRouteMetric5, wfVinesIfFwdDrops=wfVinesIfFwdDrops, wfIpBaseRouteDest=wfIpBaseRouteDest, wfVinesBaseUserNetid=wfVinesBaseUserNetid)
