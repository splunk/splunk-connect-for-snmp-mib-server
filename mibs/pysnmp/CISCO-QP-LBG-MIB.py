#
# PySNMP MIB module CISCO-QP-LBG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-QP-LBG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:53:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
ifDescr, = mibBuilder.importSymbols("IF-MIB", "ifDescr")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, Counter32, Unsigned32, ObjectIdentity, MibIdentifier, TimeTicks, iso, Counter64, Gauge32, Bits, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "Counter32", "Unsigned32", "ObjectIdentity", "MibIdentifier", "TimeTicks", "iso", "Counter64", "Gauge32", "Bits", "ModuleIdentity", "IpAddress")
TextualConvention, DisplayString, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "MacAddress")
ciscoQpLbgMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 824))
ciscoQpLbgMIB.setRevisions(('2015-09-21 00:00', '2014-08-27 00:00',))
if mibBuilder.loadTexts: ciscoQpLbgMIB.setLastUpdated('201509210000Z')
if mibBuilder.loadTexts: ciscoQpLbgMIB.setOrganization('Cisco Systems, Inc.')
ciscoQpLbgNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 824, 0))
ciscoQpLbgObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 824, 1))
ciscoQpLbgConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 824, 2))
cqlQpStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 824, 0, 1)).setObjects(("CISCO-QP-LBG-MIB", "cqlqpState"))
if mibBuilder.loadTexts: cqlQpStateChange.setStatus('current')
cqlQamAdd = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 824, 0, 2)).setObjects(("CISCO-QP-LBG-MIB", "cqlqpId"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: cqlQamAdd.setStatus('current')
cqlQamDelete = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 824, 0, 3)).setObjects(("CISCO-QP-LBG-MIB", "cqlqpId"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: cqlQamDelete.setStatus('current')
cqlLbgRouteAdd = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 824, 0, 4)).setObjects(("CISCO-QP-LBG-MIB", "cqlqpRouteDetails"))
if mibBuilder.loadTexts: cqlLbgRouteAdd.setStatus('current')
cqlLbgRouteDelete = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 824, 0, 5)).setObjects(("CISCO-QP-LBG-MIB", "cqlqpRouteDetails"))
if mibBuilder.loadTexts: cqlLbgRouteDelete.setStatus('current')
cqlQamOverSubscribedAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 824, 0, 6)).setObjects(("IF-MIB", "ifDescr"), ("CISCO-QP-LBG-MIB", "cqlqpQamOversubscribedStatus"))
if mibBuilder.loadTexts: cqlQamOverSubscribedAlert.setStatus('current')
cqlqamPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1), )
if mibBuilder.loadTexts: cqlqamPartitionTable.setStatus('current')
cqlqamPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1), ).setIndexNames((0, "CISCO-QP-LBG-MIB", "cqlqpIndex"))
if mibBuilder.loadTexts: cqlqamPartitionEntry.setStatus('current')
cqlqpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cqlqpIndex.setStatus('current')
cqlqpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpId.setStatus('current')
cqlqpMgmtIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpMgmtIpAddrType.setStatus('current')
cqlqpMgmtIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpMgmtIp.setStatus('current')
cqlqpServerIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpServerIpAddrType.setStatus('current')
cqlqpServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpServerIp.setStatus('current')
cqlqpState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("init", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpState.setStatus('current')
cqlqpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("gqi", 1), ("ermi", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpProtocol.setStatus('current')
cqlqpKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpKeepAliveTime.setStatus('current')
cqlqpServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disconnected", 1), ("connected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpServerState.setStatus('current')
cqlqpGqiMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpGqiMacAddr.setStatus('current')
cqlqpGqiResetInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 12), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpGqiResetInterval.setStatus('current')
cqlqpNumQams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpNumQams.setStatus('current')
cqlqpQamCarrrierList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpQamCarrrierList.setStatus('current')
cqlqpNumRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpNumRoutes.setStatus('current')
cqlqpRouteDetails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpRouteDetails.setStatus('current')
cqlqpErmiErrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpErmiErrpComponentName.setStatus('current')
cqlqpErmiErrpStreamingZone = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpErmiErrpStreamingZone.setStatus('current')
cqlqpErmiErrpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 19), Unsigned32().clone(90)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpErmiErrpHoldTime.setStatus('current')
cqlqpErmiErrpConnnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 20), Unsigned32().clone(10)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpErmiErrpConnnectTime.setStatus('current')
cqlqpErmiErrpConnectRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 21), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpErmiErrpConnectRetry.setStatus('current')
cqlqpErmiRtspConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 22), Unsigned32().clone(200)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpErmiRtspConnectTime.setStatus('current')
cqlqpErmiRtspConnectRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 23), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpErmiRtspConnectRetry.setStatus('current')
cqlqpErmiRtspKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 24), Unsigned32().clone(300)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpErmiRtspKeepAliveTime.setStatus('current')
cqlqpErmiRtspSessionTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 25), Unsigned32().clone(10800)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpErmiRtspSessionTimeout.setStatus('current')
cqlqpQamOversubscribedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 26), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpQamOversubscribedStatus.setStatus('current')
cqlqpServerIpList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 1, 1, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqlqpServerIpList.setStatus('current')
cqlloadBalanceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 2), )
if mibBuilder.loadTexts: cqlloadBalanceGroupTable.setStatus('current')
cqlloadBalanceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-QP-LBG-MIB", "cqllbgIndex"))
if mibBuilder.loadTexts: cqlloadBalanceGroupEntry.setStatus('current')
cqllbgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cqllbgIndex.setStatus('current')
cqllbgTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 2, 1, 2), Unsigned32()).setUnits('Kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgTotalBandwidth.setStatus('current')
cqllbgQamRsvBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 2, 1, 3), Unsigned32()).setUnits('Kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgQamRsvBandwidth.setStatus('current')
cqllbgIpRsvBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 2, 1, 4), Unsigned32()).setUnits('Kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgIpRsvBandwidth.setStatus('current')
cqllbgAvailableBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 2, 1, 5), Unsigned32()).setUnits('Kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgAvailableBandwidth.setStatus('current')
cqllbgrouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3), )
if mibBuilder.loadTexts: cqllbgrouteTable.setStatus('current')
cqllbgrouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-QP-LBG-MIB", "cqllbgRouteIndex"))
if mibBuilder.loadTexts: cqllbgrouteEntry.setStatus('current')
cqllbgRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cqllbgRouteIndex.setStatus('current')
cqllbgQpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgQpId.setStatus('current')
cqllbgDstIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgDstIpAddrType.setStatus('current')
cqllbgDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgDstIpAddr.setStatus('current')
cqllbgUdpPortRangeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgUdpPortRangeMin.setStatus('current')
cqllbgUdpPortRangeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgUdpPortRangeMax.setStatus('current')
cqllbgGqiIngressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgGqiIngressPort.setStatus('current')
cqllbgRsvBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 8), Unsigned32()).setUnits('Kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgRsvBandwidth.setStatus('current')
cqllbgAllocatedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 9), Unsigned32()).setUnits('Kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgAllocatedBandwidth.setStatus('current')
cqllbgNumFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cqllbgNumFlows.setStatus('current')
cqlQpNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cqlQpNotifyEnable.setStatus('current')
cqlQamNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cqlQamNotifyEnable.setStatus('current')
cqlRouteNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cqlRouteNotifyEnable.setStatus('current')
cqlQamOverSubscribedEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 824, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cqlQamOverSubscribedEnable.setStatus('current')
ciscoQpLbgCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 1))
ciscoQpLbgGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2))
cqlciscoQpLbgCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 1, 1)).setObjects(("CISCO-QP-LBG-MIB", "cqlciscoLbgRouteObjectGroup"), ("CISCO-QP-LBG-MIB", "cqlciscoQpNotifsGroup"), ("CISCO-QP-LBG-MIB", "cqlciscoQpObjectGroup"), ("CISCO-QP-LBG-MIB", "cqlciscoQpLbgNotifsControlGroup"), ("CISCO-QP-LBG-MIB", "cqlciscoLbgNotifsGroup"), ("CISCO-QP-LBG-MIB", "cqlciscoLbgObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoQpLbgCompliance = cqlciscoQpLbgCompliance.setStatus('deprecated')
cqlciscoQpLbgCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 1, 2)).setObjects(("CISCO-QP-LBG-MIB", "cqlciscoLbgRouteObjectGroup"), ("CISCO-QP-LBG-MIB", "cqlciscoLbgNotifsGroup"), ("CISCO-QP-LBG-MIB", "cqlciscoLbgObjectGroup"), ("CISCO-QP-LBG-MIB", "cqlciscoQpNotifsGroup1"), ("CISCO-QP-LBG-MIB", "cqlciscoQpObjectGroup1"), ("CISCO-QP-LBG-MIB", "cqlciscoQpLbgNotifsControlGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoQpLbgCompliance1 = cqlciscoQpLbgCompliance1.setStatus('current')
cqlciscoQpNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2, 1)).setObjects(("CISCO-QP-LBG-MIB", "cqlQpStateChange"), ("CISCO-QP-LBG-MIB", "cqlQamAdd"), ("CISCO-QP-LBG-MIB", "cqlQamDelete"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoQpNotifsGroup = cqlciscoQpNotifsGroup.setStatus('deprecated')
cqlciscoLbgNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2, 2)).setObjects(("CISCO-QP-LBG-MIB", "cqlLbgRouteAdd"), ("CISCO-QP-LBG-MIB", "cqlLbgRouteDelete"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoLbgNotifsGroup = cqlciscoLbgNotifsGroup.setStatus('current')
cqlciscoQpObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2, 3)).setObjects(("CISCO-QP-LBG-MIB", "cqlqpId"), ("CISCO-QP-LBG-MIB", "cqlqpMgmtIp"), ("CISCO-QP-LBG-MIB", "cqlqpState"), ("CISCO-QP-LBG-MIB", "cqlqpProtocol"), ("CISCO-QP-LBG-MIB", "cqlqpKeepAliveTime"), ("CISCO-QP-LBG-MIB", "cqlqpGqiResetInterval"), ("CISCO-QP-LBG-MIB", "cqlqpServerIp"), ("CISCO-QP-LBG-MIB", "cqlqpServerState"), ("CISCO-QP-LBG-MIB", "cqlqpGqiMacAddr"), ("CISCO-QP-LBG-MIB", "cqlqpNumQams"), ("CISCO-QP-LBG-MIB", "cqlqpQamCarrrierList"), ("CISCO-QP-LBG-MIB", "cqlqpNumRoutes"), ("CISCO-QP-LBG-MIB", "cqlqpRouteDetails"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpComponentName"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpStreamingZone"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpConnectRetry"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpConnnectTime"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpHoldTime"), ("CISCO-QP-LBG-MIB", "cqlqpErmiRtspConnectRetry"), ("CISCO-QP-LBG-MIB", "cqlqpErmiRtspConnectTime"), ("CISCO-QP-LBG-MIB", "cqlqpErmiRtspKeepAliveTime"), ("CISCO-QP-LBG-MIB", "cqlqpErmiRtspSessionTimeout"), ("CISCO-QP-LBG-MIB", "cqlqpMgmtIpAddrType"), ("CISCO-QP-LBG-MIB", "cqlqpServerIpAddrType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoQpObjectGroup = cqlciscoQpObjectGroup.setStatus('deprecated')
cqlciscoLbgObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2, 4)).setObjects(("CISCO-QP-LBG-MIB", "cqllbgTotalBandwidth"), ("CISCO-QP-LBG-MIB", "cqllbgQamRsvBandwidth"), ("CISCO-QP-LBG-MIB", "cqllbgIpRsvBandwidth"), ("CISCO-QP-LBG-MIB", "cqllbgAvailableBandwidth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoLbgObjectGroup = cqlciscoLbgObjectGroup.setStatus('current')
cqlciscoLbgRouteObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2, 5)).setObjects(("CISCO-QP-LBG-MIB", "cqllbgQpId"), ("CISCO-QP-LBG-MIB", "cqllbgDstIpAddr"), ("CISCO-QP-LBG-MIB", "cqllbgUdpPortRangeMin"), ("CISCO-QP-LBG-MIB", "cqllbgUdpPortRangeMax"), ("CISCO-QP-LBG-MIB", "cqllbgGqiIngressPort"), ("CISCO-QP-LBG-MIB", "cqllbgAllocatedBandwidth"), ("CISCO-QP-LBG-MIB", "cqllbgRsvBandwidth"), ("CISCO-QP-LBG-MIB", "cqllbgNumFlows"), ("CISCO-QP-LBG-MIB", "cqllbgDstIpAddrType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoLbgRouteObjectGroup = cqlciscoLbgRouteObjectGroup.setStatus('current')
cqlciscoQpLbgNotifsControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2, 6)).setObjects(("CISCO-QP-LBG-MIB", "cqlQpNotifyEnable"), ("CISCO-QP-LBG-MIB", "cqlQamNotifyEnable"), ("CISCO-QP-LBG-MIB", "cqlRouteNotifyEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoQpLbgNotifsControlGroup = cqlciscoQpLbgNotifsControlGroup.setStatus('deprecated')
cqlciscoQpNotifsGroup1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2, 7)).setObjects(("CISCO-QP-LBG-MIB", "cqlQpStateChange"), ("CISCO-QP-LBG-MIB", "cqlQamAdd"), ("CISCO-QP-LBG-MIB", "cqlQamDelete"), ("CISCO-QP-LBG-MIB", "cqlQamOverSubscribedAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoQpNotifsGroup1 = cqlciscoQpNotifsGroup1.setStatus('current')
cqlciscoQpObjectGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2, 8)).setObjects(("CISCO-QP-LBG-MIB", "cqlqpId"), ("CISCO-QP-LBG-MIB", "cqlqpMgmtIpAddrType"), ("CISCO-QP-LBG-MIB", "cqlqpMgmtIp"), ("CISCO-QP-LBG-MIB", "cqlqpServerIpAddrType"), ("CISCO-QP-LBG-MIB", "cqlqpServerIp"), ("CISCO-QP-LBG-MIB", "cqlqpState"), ("CISCO-QP-LBG-MIB", "cqlqpProtocol"), ("CISCO-QP-LBG-MIB", "cqlqpKeepAliveTime"), ("CISCO-QP-LBG-MIB", "cqlqpServerState"), ("CISCO-QP-LBG-MIB", "cqlqpGqiMacAddr"), ("CISCO-QP-LBG-MIB", "cqlqpGqiResetInterval"), ("CISCO-QP-LBG-MIB", "cqlqpNumQams"), ("CISCO-QP-LBG-MIB", "cqlqpQamCarrrierList"), ("CISCO-QP-LBG-MIB", "cqlqpNumRoutes"), ("CISCO-QP-LBG-MIB", "cqlqpRouteDetails"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpComponentName"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpStreamingZone"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpHoldTime"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpConnnectTime"), ("CISCO-QP-LBG-MIB", "cqlqpErmiErrpConnectRetry"), ("CISCO-QP-LBG-MIB", "cqlqpErmiRtspConnectTime"), ("CISCO-QP-LBG-MIB", "cqlqpErmiRtspConnectRetry"), ("CISCO-QP-LBG-MIB", "cqlqpErmiRtspKeepAliveTime"), ("CISCO-QP-LBG-MIB", "cqlqpErmiRtspSessionTimeout"), ("CISCO-QP-LBG-MIB", "cqlqpQamOversubscribedStatus"), ("CISCO-QP-LBG-MIB", "cqlqpServerIpList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoQpObjectGroup1 = cqlciscoQpObjectGroup1.setStatus('current')
cqlciscoQpLbgNotifsControlGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 824, 2, 2, 9)).setObjects(("CISCO-QP-LBG-MIB", "cqlQpNotifyEnable"), ("CISCO-QP-LBG-MIB", "cqlQamNotifyEnable"), ("CISCO-QP-LBG-MIB", "cqlRouteNotifyEnable"), ("CISCO-QP-LBG-MIB", "cqlQamOverSubscribedEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cqlciscoQpLbgNotifsControlGroup1 = cqlciscoQpLbgNotifsControlGroup1.setStatus('current')
mibBuilder.exportSymbols("CISCO-QP-LBG-MIB", cqlqamPartitionEntry=cqlqamPartitionEntry, cqlqamPartitionTable=cqlqamPartitionTable, cqlqpErmiErrpStreamingZone=cqlqpErmiErrpStreamingZone, cqllbgIndex=cqllbgIndex, cqlqpGqiResetInterval=cqlqpGqiResetInterval, cqlciscoQpNotifsGroup=cqlciscoQpNotifsGroup, ciscoQpLbgConform=ciscoQpLbgConform, cqllbgQpId=cqllbgQpId, cqllbgGqiIngressPort=cqllbgGqiIngressPort, cqlciscoLbgRouteObjectGroup=cqlciscoLbgRouteObjectGroup, cqllbgDstIpAddr=cqllbgDstIpAddr, cqllbgAllocatedBandwidth=cqllbgAllocatedBandwidth, ciscoQpLbgGroups=ciscoQpLbgGroups, cqlqpErmiErrpComponentName=cqlqpErmiErrpComponentName, cqlLbgRouteDelete=cqlLbgRouteDelete, cqlqpServerIpList=cqlqpServerIpList, cqlqpErmiRtspConnectTime=cqlqpErmiRtspConnectTime, cqlciscoQpLbgCompliance1=cqlciscoQpLbgCompliance1, cqlqpGqiMacAddr=cqlqpGqiMacAddr, cqlqpNumRoutes=cqlqpNumRoutes, cqlqpErmiRtspKeepAliveTime=cqlqpErmiRtspKeepAliveTime, cqlQamOverSubscribedEnable=cqlQamOverSubscribedEnable, cqlciscoLbgNotifsGroup=cqlciscoLbgNotifsGroup, cqlciscoQpObjectGroup1=cqlciscoQpObjectGroup1, cqllbgDstIpAddrType=cqllbgDstIpAddrType, cqlQamOverSubscribedAlert=cqlQamOverSubscribedAlert, cqllbgUdpPortRangeMax=cqllbgUdpPortRangeMax, ciscoQpLbgMIB=ciscoQpLbgMIB, cqlqpQamOversubscribedStatus=cqlqpQamOversubscribedStatus, cqlloadBalanceGroupEntry=cqlloadBalanceGroupEntry, cqlQpStateChange=cqlQpStateChange, cqlQpNotifyEnable=cqlQpNotifyEnable, cqlqpKeepAliveTime=cqlqpKeepAliveTime, cqlqpNumQams=cqlqpNumQams, cqlciscoLbgObjectGroup=cqlciscoLbgObjectGroup, cqlciscoQpNotifsGroup1=cqlciscoQpNotifsGroup1, cqllbgrouteTable=cqllbgrouteTable, cqlqpProtocol=cqlqpProtocol, cqllbgRsvBandwidth=cqllbgRsvBandwidth, cqlciscoQpLbgNotifsControlGroup=cqlciscoQpLbgNotifsControlGroup, ciscoQpLbgObjects=ciscoQpLbgObjects, cqlqpMgmtIpAddrType=cqlqpMgmtIpAddrType, cqlqpMgmtIp=cqlqpMgmtIp, cqlqpErmiErrpConnectRetry=cqlqpErmiErrpConnectRetry, cqlqpErmiErrpHoldTime=cqlqpErmiErrpHoldTime, cqlQamAdd=cqlQamAdd, cqlqpQamCarrrierList=cqlqpQamCarrrierList, cqlqpErmiRtspConnectRetry=cqlqpErmiRtspConnectRetry, cqlciscoQpLbgNotifsControlGroup1=cqlciscoQpLbgNotifsControlGroup1, cqlRouteNotifyEnable=cqlRouteNotifyEnable, cqlqpServerState=cqlqpServerState, cqlQamDelete=cqlQamDelete, cqlloadBalanceGroupTable=cqlloadBalanceGroupTable, cqllbgrouteEntry=cqllbgrouteEntry, cqlqpServerIpAddrType=cqlqpServerIpAddrType, cqlqpServerIp=cqlqpServerIp, cqllbgIpRsvBandwidth=cqllbgIpRsvBandwidth, PYSNMP_MODULE_ID=ciscoQpLbgMIB, cqllbgUdpPortRangeMin=cqllbgUdpPortRangeMin, cqllbgNumFlows=cqllbgNumFlows, cqlQamNotifyEnable=cqlQamNotifyEnable, ciscoQpLbgCompliances=ciscoQpLbgCompliances, cqlciscoQpObjectGroup=cqlciscoQpObjectGroup, cqlqpState=cqlqpState, cqlqpRouteDetails=cqlqpRouteDetails, cqllbgAvailableBandwidth=cqllbgAvailableBandwidth, cqlqpErmiErrpConnnectTime=cqlqpErmiErrpConnnectTime, cqlqpErmiRtspSessionTimeout=cqlqpErmiRtspSessionTimeout, cqlLbgRouteAdd=cqlLbgRouteAdd, cqllbgTotalBandwidth=cqllbgTotalBandwidth, cqllbgQamRsvBandwidth=cqllbgQamRsvBandwidth, ciscoQpLbgNotifs=ciscoQpLbgNotifs, cqllbgRouteIndex=cqllbgRouteIndex, cqlqpIndex=cqlqpIndex, cqlciscoQpLbgCompliance=cqlciscoQpLbgCompliance, cqlqpId=cqlqpId)
