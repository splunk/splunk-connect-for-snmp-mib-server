#
# PySNMP MIB module EATON-EPDU-PU-SW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EATON-EPDU-PU-SW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:44:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, Gauge32, Unsigned32, MibIdentifier, IpAddress, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, TimeTicks, iso, Counter64, NotificationType, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "Unsigned32", "MibIdentifier", "IpAddress", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "TimeTicks", "iso", "Counter64", "NotificationType", "Counter32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pulizzi = ModuleIdentity((1, 3, 6, 1, 4, 1, 20677))
pulizzi.setRevisions(('2009-10-16 12:00', '2008-12-22 12:00', '2008-02-13 12:00', '2006-05-01 12:00',))
if mibBuilder.loadTexts: pulizzi.setLastUpdated('200910161200Z')
if mibBuilder.loadTexts: pulizzi.setOrganization('Eaton Corporation')
ipv3600 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2))
unitConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 1))
networkSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 2))
logManagerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 3))
serialSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 4))
telnetSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 5))
outletMngt = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6))
outletConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1))
outlet1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 1))
outlet2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 2))
outlet3 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 3))
outlet4 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 4))
outlet5 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 5))
outlet6 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 6))
outlet7 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 7))
outlet8 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 8))
outlet9 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 9))
outlet10 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 10))
outlet11 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 11))
outlet12 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 12))
outlet13 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 13))
outlet14 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 14))
outlet15 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 15))
outlet16 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 16))
outlet17 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 17))
outlet18 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 18))
outlet19 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 19))
outlet20 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 20))
outlet21 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 21))
outlet22 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 22))
outlet23 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 23))
outlet24 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 24))
outlet25 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 25))
outlet26 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 26))
outlet27 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 27))
outlet28 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 28))
outlet29 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 29))
outlet30 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 30))
outlet31 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 31))
outlet32 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 32))
outlet33 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 33))
outlet34 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 34))
outlet35 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 35))
outlet36 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 36))
outletControl = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2))
outletStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3))
snmpSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 7))
snmpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8))
environmentalSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8))
temperatureSensorConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1))
tempSensor1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 1))
tempSensor2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 2))
humiditySensorConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 2))
humSensor1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 2, 1))
contactClosureConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3))
contactClosure1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 1))
contactClosure2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 2))
contactClosure3 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 3))
outletSectionConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4))
outletSection1Config = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 1))
outletSection2Config = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 2))
outletSection3Config = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 3))
outletSection4Config = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 4))
outletSection5Config = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 5))
outletSection6Config = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 6))
currentSensorValues = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 5))
currentOutletSectionValues = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6))
outletSection1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 1))
outletSection2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 2))
outletSection3 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 3))
total = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 4))
outletSection4 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 5))
outletSection5 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 6))
outletSection6 = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 7))
events = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 9))
eventInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 10))
conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 25))
groups = MibIdentifier((1, 3, 6, 1, 4, 1, 20677, 2, 25, 5))
unitName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unitName.setStatus('current')
strappingId = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: strappingId.setStatus('current')
unitTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unitTime.setStatus('current')
unitDate = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unitDate.setStatus('current')
unitDayOfWeek = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: unitDayOfWeek.setStatus('current')
vaLoggingInterval = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("fiveminutes", 1), ("fifteenminutes", 2), ("hourly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vaLoggingInterval.setStatus('current')
loginTimeout = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loginTimeout.setStatus('current')
invertDisplay = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("inverted", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: invertDisplay.setStatus('current')
fahrenheitOrCelsius = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fahrenheit", 0), ("celsius", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fahrenheitOrCelsius.setStatus('current')
unitIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 2, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unitIPAddress.setStatus('current')
subnetMask = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 2, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subnetMask.setStatus('current')
defaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 2, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: defaultGateway.setStatus('current')
webPort = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webPort.setStatus('current')
webEnabled = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webEnabled.setStatus('current')
macAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macAddress.setStatus('current')
enablePing = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enablePing.setStatus('current')
pingInterval = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pingInterval.setStatus('current')
mailServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mailServerIPAddress.setStatus('current')
sendLogFrom = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendLogFrom.setStatus('current')
sendLogToUser1Address = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendLogToUser1Address.setStatus('current')
sendLogToUser2Address = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendLogToUser2Address.setStatus('current')
sendAlertsToUser1Address = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendAlertsToUser1Address.setStatus('current')
sendAlertsToUser2Address = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendAlertsToUser2Address.setStatus('current')
sendLogFrequency = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("weeklyOnSunday", 1), ("weeklyOnMonday", 2), ("weeklyOnTuesday", 3), ("weeklyOnWednesday", 4), ("weeklyOnThursday", 5), ("weeklyOnFriday", 6), ("weeklyOnSaturday", 7), ("daily", 8), ("whenFull", 9), ("never", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendLogFrequency.setStatus('current')
sendLogTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendLogTime.setStatus('current')
userLogInLogOut = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("sendToLog", 2), ("sendAlert", 3), ("sendtoLogAndAlert", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userLogInLogOut.setStatus('current')
userLogInLogOutFailed = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("sendToLog", 2), ("sendAlert", 3), ("sendtoLogAndAlert", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userLogInLogOutFailed.setStatus('current')
outletActivity = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("sendToLog", 2), ("sendAlert", 3), ("sendtoLogAndAlert", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletActivity.setStatus('current')
systemOnOff = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("sendToLog", 2), ("sendAlert", 3), ("sendtoLogAndAlert", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemOnOff.setStatus('current')
outletSection1Alert = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("sendAlert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection1Alert.setStatus('current')
outletSection2Alert = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("sendAlert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection2Alert.setStatus('current')
outletSection3Alert = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("sendAlert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection3Alert.setStatus('current')
tempSensor1Alert = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("sendAlert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor1Alert.setStatus('current')
tempSensor2Alert = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("sendAlert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor2Alert.setStatus('current')
humSensor1Alert = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("sendAlert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humSensor1Alert.setStatus('current')
contactClosure1Alert = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("sendAlert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure1Alert.setStatus('current')
contactClosure2Alert = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("sendAlert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure2Alert.setStatus('current')
contactClosure3Alert = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 3, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("sendAlert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure3Alert.setStatus('current')
baudRate = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("baud9600", 0), ("baud19200", 1), ("baud38400", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: baudRate.setStatus('current')
telnetPort = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telnetPort.setStatus('current')
telnetEnabled = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telnetEnabled.setStatus('current')
outlet1Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet1Name.setStatus('current')
outlet1PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet1PingIpAddress.setStatus('current')
outlet1Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet1Link.setStatus('current')
outlet1SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet1SequenceTime.setStatus('current')
outlet1RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet1RebootTime.setStatus('current')
outlet2Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet2Name.setStatus('current')
outlet2PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet2PingIpAddress.setStatus('current')
outlet2Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 2, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet2Link.setStatus('current')
outlet2SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet2SequenceTime.setStatus('current')
outlet2RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet2RebootTime.setStatus('current')
outlet3Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet3Name.setStatus('current')
outlet3PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet3PingIpAddress.setStatus('current')
outlet3Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 3, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet3Link.setStatus('current')
outlet3SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet3SequenceTime.setStatus('current')
outlet3RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet3RebootTime.setStatus('current')
outlet4Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 4, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet4Name.setStatus('current')
outlet4PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 4, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet4PingIpAddress.setStatus('current')
outlet4Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 4, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet4Link.setStatus('current')
outlet4SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet4SequenceTime.setStatus('current')
outlet4RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet4RebootTime.setStatus('current')
outlet5Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 5, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet5Name.setStatus('current')
outlet5PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 5, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet5PingIpAddress.setStatus('current')
outlet5Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 5, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet5Link.setStatus('current')
outlet5SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet5SequenceTime.setStatus('current')
outlet5RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet5RebootTime.setStatus('current')
outlet6Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 6, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet6Name.setStatus('current')
outlet6PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet6PingIpAddress.setStatus('current')
outlet6Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 6, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet6Link.setStatus('current')
outlet6SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet6SequenceTime.setStatus('current')
outlet6RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 6, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet6RebootTime.setStatus('current')
outlet7Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 7, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet7Name.setStatus('current')
outlet7PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 7, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet7PingIpAddress.setStatus('current')
outlet7Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 7, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet7Link.setStatus('current')
outlet7SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 7, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet7SequenceTime.setStatus('current')
outlet7RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 7, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet7RebootTime.setStatus('current')
outlet8Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 8, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet8Name.setStatus('current')
outlet8PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 8, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet8PingIpAddress.setStatus('current')
outlet8Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 8, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet8Link.setStatus('current')
outlet8SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 8, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet8SequenceTime.setStatus('current')
outlet8RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 8, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet8RebootTime.setStatus('current')
outlet9Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 9, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet9Name.setStatus('current')
outlet9PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 9, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet9PingIpAddress.setStatus('current')
outlet9Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 9, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet9Link.setStatus('current')
outlet9SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 9, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet9SequenceTime.setStatus('current')
outlet9RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 9, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet9RebootTime.setStatus('current')
outlet10Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 10, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet10Name.setStatus('current')
outlet10PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 10, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet10PingIpAddress.setStatus('current')
outlet10Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 10, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet10Link.setStatus('current')
outlet10SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 10, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet10SequenceTime.setStatus('current')
outlet10RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 10, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet10RebootTime.setStatus('current')
outlet11Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 11, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet11Name.setStatus('current')
outlet11PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 11, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet11PingIpAddress.setStatus('current')
outlet11Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 11, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet11Link.setStatus('current')
outlet11SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 11, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet11SequenceTime.setStatus('current')
outlet11RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 11, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet11RebootTime.setStatus('current')
outlet12Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 12, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet12Name.setStatus('current')
outlet12PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 12, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet12PingIpAddress.setStatus('current')
outlet12Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 12, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet12Link.setStatus('current')
outlet12SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 12, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet12SequenceTime.setStatus('current')
outlet12RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 12, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet12RebootTime.setStatus('current')
outlet13Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 13, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet13Name.setStatus('current')
outlet13PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 13, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet13PingIpAddress.setStatus('current')
outlet13Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 13, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet13Link.setStatus('current')
outlet13SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 13, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet13SequenceTime.setStatus('current')
outlet13RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 13, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet13RebootTime.setStatus('current')
outlet14Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 14, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet14Name.setStatus('current')
outlet14PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 14, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet14PingIpAddress.setStatus('current')
outlet14Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 14, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet14Link.setStatus('current')
outlet14SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 14, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet14SequenceTime.setStatus('current')
outlet14RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 14, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet14RebootTime.setStatus('current')
outlet15Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 15, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet15Name.setStatus('current')
outlet15PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 15, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet15PingIpAddress.setStatus('current')
outlet15Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 15, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet15Link.setStatus('current')
outlet15SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 15, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet15SequenceTime.setStatus('current')
outlet15RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 15, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet15RebootTime.setStatus('current')
outlet16Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 16, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet16Name.setStatus('current')
outlet16PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 16, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet16PingIpAddress.setStatus('current')
outlet16Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 16, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet16Link.setStatus('current')
outlet16SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 16, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet16SequenceTime.setStatus('current')
outlet16RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 16, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet16RebootTime.setStatus('current')
outlet17Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 17, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet17Name.setStatus('current')
outlet17PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 17, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet17PingIpAddress.setStatus('current')
outlet17Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 17, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet17Link.setStatus('current')
outlet17SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 17, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet17SequenceTime.setStatus('current')
outlet17RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 17, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet17RebootTime.setStatus('current')
outlet18Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 18, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet18Name.setStatus('current')
outlet18PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 18, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet18PingIpAddress.setStatus('current')
outlet18Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 18, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet18Link.setStatus('current')
outlet18SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 18, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet18SequenceTime.setStatus('current')
outlet18RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 18, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet18RebootTime.setStatus('current')
outlet19Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 19, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet19Name.setStatus('current')
outlet19PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 19, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet19PingIpAddress.setStatus('current')
outlet19Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 19, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet19Link.setStatus('current')
outlet19SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 19, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet19SequenceTime.setStatus('current')
outlet19RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 19, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet19RebootTime.setStatus('current')
outlet20Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 20, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet20Name.setStatus('current')
outlet20PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 20, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet20PingIpAddress.setStatus('current')
outlet20Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 20, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet20Link.setStatus('current')
outlet20SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 20, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet20SequenceTime.setStatus('current')
outlet20RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 20, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet20RebootTime.setStatus('current')
outlet21Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 21, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet21Name.setStatus('current')
outlet21PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 21, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet21PingIpAddress.setStatus('current')
outlet21Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 21, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet21Link.setStatus('current')
outlet21SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 21, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet21SequenceTime.setStatus('current')
outlet21RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 21, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet21RebootTime.setStatus('current')
outlet22Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 22, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet22Name.setStatus('current')
outlet22PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 22, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet22PingIpAddress.setStatus('current')
outlet22Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 22, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet22Link.setStatus('current')
outlet22SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 22, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet22SequenceTime.setStatus('current')
outlet22RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 22, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet22RebootTime.setStatus('current')
outlet23Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 23, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet23Name.setStatus('current')
outlet23PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 23, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet23PingIpAddress.setStatus('current')
outlet23Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 23, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet23Link.setStatus('current')
outlet23SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 23, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet23SequenceTime.setStatus('current')
outlet23RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 23, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet23RebootTime.setStatus('current')
outlet24Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 24, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet24Name.setStatus('current')
outlet24PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 24, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet24PingIpAddress.setStatus('current')
outlet24Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 24, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet24Link.setStatus('current')
outlet24SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 24, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet24SequenceTime.setStatus('current')
outlet24RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 24, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet24RebootTime.setStatus('current')
outlet25Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 25, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet25Name.setStatus('current')
outlet25PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 25, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet25PingIpAddress.setStatus('current')
outlet25Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 25, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet25Link.setStatus('current')
outlet25SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 25, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet25SequenceTime.setStatus('current')
outlet25RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 25, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet25RebootTime.setStatus('current')
outlet26Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 26, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet26Name.setStatus('current')
outlet26PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 26, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet26PingIpAddress.setStatus('current')
outlet26Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 26, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet26Link.setStatus('current')
outlet26SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 26, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet26SequenceTime.setStatus('current')
outlet26RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 26, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet26RebootTime.setStatus('current')
outlet27Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 27, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet27Name.setStatus('current')
outlet27PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 27, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet27PingIpAddress.setStatus('current')
outlet27Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 27, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet27Link.setStatus('current')
outlet27SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 27, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet27SequenceTime.setStatus('current')
outlet27RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 27, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet27RebootTime.setStatus('current')
outlet28Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 28, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet28Name.setStatus('current')
outlet28PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 28, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet28PingIpAddress.setStatus('current')
outlet28Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 28, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet28Link.setStatus('current')
outlet28SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 28, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet28SequenceTime.setStatus('current')
outlet28RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 28, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet28RebootTime.setStatus('current')
outlet29Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 29, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet29Name.setStatus('current')
outlet29PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 29, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet29PingIpAddress.setStatus('current')
outlet29Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 29, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet29Link.setStatus('current')
outlet29SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 29, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet29SequenceTime.setStatus('current')
outlet29RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 29, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet29RebootTime.setStatus('current')
outlet30Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 30, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet30Name.setStatus('current')
outlet30PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 30, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet30PingIpAddress.setStatus('current')
outlet30Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 30, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet30Link.setStatus('current')
outlet30SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 30, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet30SequenceTime.setStatus('current')
outlet30RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 30, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet30RebootTime.setStatus('current')
outlet31Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 31, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet31Name.setStatus('current')
outlet31PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 31, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet31PingIpAddress.setStatus('current')
outlet31Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 31, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet31Link.setStatus('current')
outlet31SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 31, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet31SequenceTime.setStatus('current')
outlet31RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 31, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet31RebootTime.setStatus('current')
outlet32Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 32, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet32Name.setStatus('current')
outlet32PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 32, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet32PingIpAddress.setStatus('current')
outlet32Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 32, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet32Link.setStatus('current')
outlet32SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 32, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet32SequenceTime.setStatus('current')
outlet32RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 32, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet32RebootTime.setStatus('current')
outlet33Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 33, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet33Name.setStatus('current')
outlet33PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 33, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet33PingIpAddress.setStatus('current')
outlet33Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 33, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet33Link.setStatus('current')
outlet33SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 33, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet33SequenceTime.setStatus('current')
outlet33RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 33, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet33RebootTime.setStatus('current')
outlet34Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 34, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet34Name.setStatus('current')
outlet34PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 34, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet34PingIpAddress.setStatus('current')
outlet34Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 34, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet34Link.setStatus('current')
outlet34SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 34, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet34SequenceTime.setStatus('current')
outlet34RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 34, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet34RebootTime.setStatus('current')
outlet35Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 35, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet35Name.setStatus('current')
outlet35PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 35, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet35PingIpAddress.setStatus('current')
outlet35Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 35, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet35Link.setStatus('current')
outlet35SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 35, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet35SequenceTime.setStatus('current')
outlet35RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 35, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet35RebootTime.setStatus('current')
outlet36Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 36, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet36Name.setStatus('current')
outlet36PingIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 36, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet36PingIpAddress.setStatus('current')
outlet36Link = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 36, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet36Link.setStatus('current')
outlet36SequenceTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 36, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet36SequenceTime.setStatus('current')
outlet36RebootTime = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 1, 36, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet36RebootTime.setStatus('current')
globalCommand = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("nochange", 0), ("globalOn", 1), ("globalOff", 2), ("sequenceOn", 3), ("sequenceOff", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalCommand.setStatus('current')
outlet1Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet1Command.setStatus('current')
outlet2Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet2Command.setStatus('current')
outlet3Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet3Command.setStatus('current')
outlet4Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet4Command.setStatus('current')
outlet5Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet5Command.setStatus('current')
outlet6Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet6Command.setStatus('current')
outlet7Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet7Command.setStatus('current')
outlet8Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet8Command.setStatus('current')
outlet9Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet9Command.setStatus('current')
outlet10Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet10Command.setStatus('current')
outlet11Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet11Command.setStatus('current')
outlet12Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("noChange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet12Command.setStatus('current')
outlet13Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet13Command.setStatus('current')
outlet14Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet14Command.setStatus('current')
outlet15Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet15Command.setStatus('current')
outlet16Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet16Command.setStatus('current')
outlet17Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet17Command.setStatus('current')
outlet18Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet18Command.setStatus('current')
outlet19Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet19Command.setStatus('current')
outlet20Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet20Command.setStatus('current')
outlet21Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet21Command.setStatus('current')
outlet22Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet22Command.setStatus('current')
outlet23Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet23Command.setStatus('current')
outlet24Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet24Command.setStatus('current')
outlet25Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet25Command.setStatus('current')
outlet26Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet26Command.setStatus('current')
outlet27Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet27Command.setStatus('current')
outlet28Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet28Command.setStatus('current')
outlet29Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet29Command.setStatus('current')
outlet30Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet30Command.setStatus('current')
outlet31Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet31Command.setStatus('current')
outlet32Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet32Command.setStatus('current')
outlet33Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet33Command.setStatus('current')
outlet34Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet34Command.setStatus('current')
outlet35Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet35Command.setStatus('current')
outlet36Command = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 2, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("immediateOn", 1), ("immediateOff", 2), ("reboot", 3), ("nochange", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outlet36Command.setStatus('current')
outlet1Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet1Status.setStatus('current')
outlet2Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet2Status.setStatus('current')
outlet3Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet3Status.setStatus('current')
outlet4Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet4Status.setStatus('current')
outlet5Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet5Status.setStatus('current')
outlet6Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet6Status.setStatus('current')
outlet7Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet7Status.setStatus('current')
outlet8Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet8Status.setStatus('current')
outlet9Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet9Status.setStatus('current')
outlet10Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet10Status.setStatus('current')
outlet11Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet11Status.setStatus('current')
outlet12Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet12Status.setStatus('current')
outlet13Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet13Status.setStatus('current')
outlet14Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet14Status.setStatus('current')
outlet15Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet15Status.setStatus('current')
outlet16Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet16Status.setStatus('current')
outlet17Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet17Status.setStatus('current')
outlet18Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet18Status.setStatus('current')
outlet19Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet19Status.setStatus('current')
outlet20Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet20Status.setStatus('current')
outlet21Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet21Status.setStatus('current')
outlet22Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet22Status.setStatus('current')
outlet23Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet23Status.setStatus('current')
outlet24Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet24Status.setStatus('current')
outlet25Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet25Status.setStatus('current')
outlet26Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet26Status.setStatus('current')
outlet27Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet27Status.setStatus('current')
outlet28Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet28Status.setStatus('current')
outlet29Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet29Status.setStatus('current')
outlet30Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet30Status.setStatus('current')
outlet31Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet31Status.setStatus('current')
outlet32Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet32Status.setStatus('current')
outlet33Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet33Status.setStatus('current')
outlet34Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet34Status.setStatus('current')
outlet35Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet35Status.setStatus('current')
outlet36Status = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 6, 3, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outlet36Status.setStatus('current')
publicCommunityName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: publicCommunityName.setStatus('obsolete')
privateCommunityName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: privateCommunityName.setStatus('obsolete')
trapCommunityName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: trapCommunityName.setStatus('obsolete')
publicCommunityPassword = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: publicCommunityPassword.setStatus('obsolete')
privateCommunityPassword = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: privateCommunityPassword.setStatus('obsolete')
trapIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIpAddress.setStatus('current')
snmpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))))
if mibBuilder.loadTexts: snmpEnabled.setStatus('obsolete')
trapUserLoginLogout = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapUserLoginLogout.setStatus('current')
trapFailedLogin = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapFailedLogin.setStatus('current')
trapOutletActivity = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapOutletActivity.setStatus('current')
trapSystemOnOff = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapSystemOnOff.setStatus('current')
trapOutletSection1Threshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapOutletSection1Threshold.setStatus('current')
trapOutletSection2Threshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapOutletSection2Threshold.setStatus('current')
trapOutletSection3Threshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapOutletSection3Threshold.setStatus('current')
trapTemperatureSensor1Threshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapTemperatureSensor1Threshold.setStatus('current')
trapTemperatureSensor2Threshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapTemperatureSensor2Threshold.setStatus('current')
trapHumiditySensorThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapHumiditySensorThreshold.setStatus('current')
trapContactClosure1Threshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapContactClosure1Threshold.setStatus('current')
trapContactClosure2Threshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapContactClosure2Threshold.setStatus('current')
trapContactClosure3Threshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 7, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapContactClosure3Threshold.setStatus('current')
tempSensor1Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor1Name.setStatus('current')
tempSensor1Enable = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor1Enable.setStatus('current')
tempSensor1HighThresh = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor1HighThresh.setStatus('current')
tempSensor1LowThresh = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor1LowThresh.setStatus('current')
tempSensor1ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor1ControlOutlet.setStatus('current')
tempSensor1OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor1OutletName.setStatus('current')
tempSensor1OutletState = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("turnOutletOn", 0), ("turnOutletOff", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor1OutletState.setStatus('current')
tempSensor2Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor2Name.setStatus('current')
tempSensor2Enable = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor2Enable.setStatus('current')
tempSensor2HighThresh = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor2HighThresh.setStatus('current')
tempSensor2LowThresh = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor2LowThresh.setStatus('current')
tempSensor2ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor2ControlOutlet.setStatus('current')
tempSensor2OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor2OutletName.setStatus('current')
tempSensor2OutletState = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("turnOutletOn", 0), ("turnOutletOff", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempSensor2OutletState.setStatus('current')
humSensor1Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humSensor1Name.setStatus('current')
humSensor1Enable = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humSensor1Enable.setStatus('current')
humSensor1HighThresh = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humSensor1HighThresh.setStatus('current')
humSensor1LowThresh = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humSensor1LowThresh.setStatus('current')
humSensor1ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humSensor1ControlOutlet.setStatus('current')
humSensor1OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humSensor1OutletName.setStatus('current')
humSensor1OutletState = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("turnOutletOn", 0), ("turnOutletOff", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humSensor1OutletState.setStatus('current')
contactClosure1Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure1Name.setStatus('current')
contactClosure1Enable = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure1Enable.setStatus('current')
contactClosure1ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure1ControlOutlet.setStatus('current')
contactClosure1OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure1OutletName.setStatus('current')
contactClosure1OutletState = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("turnOutletOn", 0), ("turnOutletOff", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure1OutletState.setStatus('current')
contactClosure2Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure2Name.setStatus('current')
contactClosure2Enable = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure2Enable.setStatus('current')
contactClosure2ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure2ControlOutlet.setStatus('current')
contactClosure2OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure2OutletName.setStatus('current')
contactClosure2OutletState = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("turnOutletOn", 0), ("turnOutletOff", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure2OutletState.setStatus('current')
contactClosure3Name = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure3Name.setStatus('current')
contactClosure3Enable = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure3Enable.setStatus('current')
contactClosure3ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure3ControlOutlet.setStatus('current')
contactClosure3OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 3, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure3OutletName.setStatus('current')
contactClosure3OutletState = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 3, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("turnOutletOn", 0), ("turnOutletOff", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contactClosure3OutletState.setStatus('current')
outletSection1VoltageHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection1VoltageHighThreshold.setStatus('current')
outletSection1VoltageLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection1VoltageLowThreshold.setStatus('current')
outletSection1CurrentHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection1CurrentHighThreshold.setStatus('current')
outletSection1CurrentLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection1CurrentLowThreshold.setStatus('current')
outletSection1ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection1ControlOutlet.setStatus('current')
outletSection1OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection1OutletName.setStatus('current')
outletSection2VoltageHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection2VoltageHighThreshold.setStatus('current')
outletSection2VoltageLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection2VoltageLowThreshold.setStatus('current')
outletSection2CurrentHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection2CurrentHighThreshold.setStatus('current')
outletSection2CurrentLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection2CurrentLowThreshold.setStatus('current')
outletSection2ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection2ControlOutlet.setStatus('current')
outletSection2OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection2OutletName.setStatus('current')
outletSection3VoltageHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection3VoltageHighThreshold.setStatus('current')
outletSection3VoltageLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection3VoltageLowThreshold.setStatus('current')
outletSection3CurrentHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection3CurrentHighThreshold.setStatus('current')
outletSection3CurrentLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection3CurrentLowThreshold.setStatus('current')
outletSection3ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection3ControlOutlet.setStatus('current')
outletSection3OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 3, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection3OutletName.setStatus('current')
outletSection4VoltageHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection4VoltageHighThreshold.setStatus('current')
outletSection4VoltageLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection4VoltageLowThreshold.setStatus('current')
outletSection4CurrentHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection4CurrentHighThreshold.setStatus('current')
outletSection4CurrentLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection4CurrentLowThreshold.setStatus('current')
outletSection4ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection4ControlOutlet.setStatus('current')
outletSection4OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 4, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection4OutletName.setStatus('current')
outletSection5VoltageHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection5VoltageHighThreshold.setStatus('current')
outletSection5VoltageLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection5VoltageLowThreshold.setStatus('current')
outletSection5CurrentHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection5CurrentHighThreshold.setStatus('current')
outletSection5CurrentLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection5CurrentLowThreshold.setStatus('current')
outletSection5ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection5ControlOutlet.setStatus('current')
outletSection5OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 5, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection5OutletName.setStatus('current')
outletSection6VoltageHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection6VoltageHighThreshold.setStatus('current')
outletSection6VoltageLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection6VoltageLowThreshold.setStatus('current')
outletSection6CurrentHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection6CurrentHighThreshold.setStatus('current')
outletSection6CurrentLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection6CurrentLowThreshold.setStatus('current')
outletSection6ControlOutlet = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection6ControlOutlet.setStatus('current')
outletSection6OutletName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 4, 6, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletSection6OutletName.setStatus('current')
tempSensor1Temp = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensor1Temp.setStatus('current')
tempSensor2Temp = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensor2Temp.setStatus('current')
humSensor1Humidity = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humSensor1Humidity.setStatus('current')
contactClosure1State = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("contactOpen", 0), ("contactClosed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: contactClosure1State.setStatus('current')
contactClosure2State = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("contactOpen", 0), ("contactClosed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: contactClosure2State.setStatus('current')
contactClosure3State = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("contactOpen", 0), ("contactClosed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: contactClosure3State.setStatus('current')
outletSection1Voltage = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection1Voltage.setStatus('current')
outletSection1Current = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection1Current.setStatus('current')
outletSection1Va = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection1Va.setStatus('current')
outletSection2Voltage = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection2Voltage.setStatus('current')
outletSection2Current = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection2Current.setStatus('current')
outletSection2Va = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection2Va.setStatus('current')
outletSection3Voltage = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection3Voltage.setStatus('current')
outletSection3Current = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection3Current.setStatus('current')
outletSection3Va = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection3Va.setStatus('current')
totalVoltage = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalVoltage.setStatus('obsolete')
totalCurrent = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalCurrent.setStatus('current')
totalVa = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalVa.setStatus('current')
outletSection4Voltage = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection4Voltage.setStatus('current')
outletSection4Current = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection4Current.setStatus('current')
outletSection4Va = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection4Va.setStatus('current')
outletSection5Voltage = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection5Voltage.setStatus('current')
outletSection5Current = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection5Current.setStatus('current')
outletSection5Va = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection5Va.setStatus('current')
outletSection6Voltage = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection6Voltage.setStatus('current')
outletSection6Current = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection6Current.setStatus('current')
outletSection6Va = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 8, 6, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletSection6Va.setStatus('current')
notifyOutletState = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 1)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoItemIdx"), ("EATON-EPDU-PU-SW-MIB", "infoItemName"), ("EATON-EPDU-PU-SW-MIB", "infoOutletState"))
if mibBuilder.loadTexts: notifyOutletState.setStatus('current')
notifyCurrentThreshold = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 2)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoItemIdx"), ("EATON-EPDU-PU-SW-MIB", "infoItemName"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdState"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdValue"), ("EATON-EPDU-PU-SW-MIB", "infoMeasuredValue"))
if mibBuilder.loadTexts: notifyCurrentThreshold.setStatus('current')
notifyVoltageThreshold = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 3)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoItemIdx"), ("EATON-EPDU-PU-SW-MIB", "infoItemName"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdState"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdValue"), ("EATON-EPDU-PU-SW-MIB", "infoMeasuredValue"))
if mibBuilder.loadTexts: notifyVoltageThreshold.setStatus('current')
notifyTempSensorThreshold = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 4)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoItemIdx"), ("EATON-EPDU-PU-SW-MIB", "infoItemName"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdState"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdValue"), ("EATON-EPDU-PU-SW-MIB", "infoMeasuredValue"), ("EATON-EPDU-PU-SW-MIB", "fahrenheitOrCelsius"))
if mibBuilder.loadTexts: notifyTempSensorThreshold.setStatus('current')
notifyHumidSensorThreshold = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 5)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoItemIdx"), ("EATON-EPDU-PU-SW-MIB", "infoItemName"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdState"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdValue"), ("EATON-EPDU-PU-SW-MIB", "infoMeasuredValue"))
if mibBuilder.loadTexts: notifyHumidSensorThreshold.setStatus('current')
notifyContactSensorThreshold = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 6)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoItemIdx"), ("EATON-EPDU-PU-SW-MIB", "infoItemName"), ("EATON-EPDU-PU-SW-MIB", "infoContactState"))
if mibBuilder.loadTexts: notifyContactSensorThreshold.setStatus('current')
notifyUserLogin = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 7)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoUserName"))
if mibBuilder.loadTexts: notifyUserLogin.setStatus('current')
notifyUserLogout = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 8)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoUserName"))
if mibBuilder.loadTexts: notifyUserLogout.setStatus('current')
notifyFailedLogin = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 9)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoUserName"))
if mibBuilder.loadTexts: notifyFailedLogin.setStatus('current')
notifyOutletWatchdogFailed = NotificationType((1, 3, 6, 1, 4, 1, 20677, 2, 9, 10)).setObjects(("EATON-EPDU-PU-SW-MIB", "infoItemIdx"), ("EATON-EPDU-PU-SW-MIB", "infoItemName"))
if mibBuilder.loadTexts: notifyOutletWatchdogFailed.setStatus('current')
infoItemIdx = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 10, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: infoItemIdx.setStatus('current')
infoItemName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 10, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: infoItemName.setStatus('current')
infoOutletState = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: infoOutletState.setStatus('current')
infoThresholdState = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("good", 0), ("lowWarning", 1), ("highWarning", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: infoThresholdState.setStatus('current')
infoThresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 10, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 300))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: infoThresholdValue.setStatus('current')
infoMeasuredValue = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 10, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 300))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: infoMeasuredValue.setStatus('current')
infoContactState = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 10, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("contactOpen", 0), ("contactClosed", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: infoContactState.setStatus('current')
infoUserName = MibScalar((1, 3, 6, 1, 4, 1, 20677, 2, 10, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: infoUserName.setStatus('current')
compliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 20677, 2, 25, 1)).setObjects(("EATON-EPDU-PU-SW-MIB", "allObjects"), ("EATON-EPDU-PU-SW-MIB", "allNotifications"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    compliances = compliances.setStatus('current')
oldCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 20677, 2, 25, 2)).setObjects(("EATON-EPDU-PU-SW-MIB", "oldObjects"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oldCompliances = oldCompliances.setStatus('deprecated')
obsoleteCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 20677, 2, 25, 3)).setObjects(("EATON-EPDU-PU-SW-MIB", "obsoleteObjects"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    obsoleteCompliances = obsoleteCompliances.setStatus('obsolete')
allObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 20677, 2, 25, 5, 1))
for _allObjects_obj in [[("EATON-EPDU-PU-SW-MIB", "baudRate"), ("EATON-EPDU-PU-SW-MIB", "contactClosure1Alert"), ("EATON-EPDU-PU-SW-MIB", "contactClosure1ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "contactClosure1Enable"), ("EATON-EPDU-PU-SW-MIB", "contactClosure1Name"), ("EATON-EPDU-PU-SW-MIB", "contactClosure1OutletName"), ("EATON-EPDU-PU-SW-MIB", "contactClosure1OutletState"), ("EATON-EPDU-PU-SW-MIB", "contactClosure1State"), ("EATON-EPDU-PU-SW-MIB", "contactClosure2Alert"), ("EATON-EPDU-PU-SW-MIB", "contactClosure2ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "contactClosure2Enable"), ("EATON-EPDU-PU-SW-MIB", "contactClosure2Name"), ("EATON-EPDU-PU-SW-MIB", "contactClosure2OutletName"), ("EATON-EPDU-PU-SW-MIB", "contactClosure2OutletState"), ("EATON-EPDU-PU-SW-MIB", "contactClosure2State"), ("EATON-EPDU-PU-SW-MIB", "contactClosure3Alert"), ("EATON-EPDU-PU-SW-MIB", "contactClosure3ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "contactClosure3Enable"), ("EATON-EPDU-PU-SW-MIB", "contactClosure3Name"), ("EATON-EPDU-PU-SW-MIB", "contactClosure3OutletName"), ("EATON-EPDU-PU-SW-MIB", "contactClosure3OutletState"), ("EATON-EPDU-PU-SW-MIB", "contactClosure3State"), ("EATON-EPDU-PU-SW-MIB", "defaultGateway"), ("EATON-EPDU-PU-SW-MIB", "enablePing"), ("EATON-EPDU-PU-SW-MIB", "fahrenheitOrCelsius"), ("EATON-EPDU-PU-SW-MIB", "globalCommand"), ("EATON-EPDU-PU-SW-MIB", "humSensor1Alert"), ("EATON-EPDU-PU-SW-MIB", "humSensor1ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "humSensor1Enable"), ("EATON-EPDU-PU-SW-MIB", "humSensor1HighThresh"), ("EATON-EPDU-PU-SW-MIB", "humSensor1Humidity"), ("EATON-EPDU-PU-SW-MIB", "humSensor1LowThresh"), ("EATON-EPDU-PU-SW-MIB", "humSensor1Name"), ("EATON-EPDU-PU-SW-MIB", "humSensor1OutletName"), ("EATON-EPDU-PU-SW-MIB", "humSensor1OutletState"), ("EATON-EPDU-PU-SW-MIB", "infoContactState"), ("EATON-EPDU-PU-SW-MIB", "infoItemIdx"), ("EATON-EPDU-PU-SW-MIB", "infoItemName"), ("EATON-EPDU-PU-SW-MIB", "infoMeasuredValue"), ("EATON-EPDU-PU-SW-MIB", "infoOutletState"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdState"), ("EATON-EPDU-PU-SW-MIB", "infoThresholdValue"), ("EATON-EPDU-PU-SW-MIB", "infoUserName"), ("EATON-EPDU-PU-SW-MIB", "invertDisplay"), ("EATON-EPDU-PU-SW-MIB", "loginTimeout"), ("EATON-EPDU-PU-SW-MIB", "macAddress"), ("EATON-EPDU-PU-SW-MIB", "mailServerIPAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet10Command"), ("EATON-EPDU-PU-SW-MIB", "outlet10Link"), ("EATON-EPDU-PU-SW-MIB", "outlet10Name"), ("EATON-EPDU-PU-SW-MIB", "outlet10PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet10RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet10SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet10Status"), ("EATON-EPDU-PU-SW-MIB", "outlet11Command"), ("EATON-EPDU-PU-SW-MIB", "outlet11Link"), ("EATON-EPDU-PU-SW-MIB", "outlet11Name"), ("EATON-EPDU-PU-SW-MIB", "outlet11PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet11RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet11SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet11Status"), ("EATON-EPDU-PU-SW-MIB", "outlet12Command"), ("EATON-EPDU-PU-SW-MIB", "outlet12Link"), ("EATON-EPDU-PU-SW-MIB", "outlet12Name"), ("EATON-EPDU-PU-SW-MIB", "outlet12PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet12RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet12SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet12Status"), ("EATON-EPDU-PU-SW-MIB", "outlet13Command"), ("EATON-EPDU-PU-SW-MIB", "outlet13Link"), ("EATON-EPDU-PU-SW-MIB", "outlet13Name"), ("EATON-EPDU-PU-SW-MIB", "outlet13PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet13RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet13SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet13Status"), ("EATON-EPDU-PU-SW-MIB", "outlet14Command"), ("EATON-EPDU-PU-SW-MIB", "outlet14Link"), ("EATON-EPDU-PU-SW-MIB", "outlet14Name"), ("EATON-EPDU-PU-SW-MIB", "outlet14PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet14RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet14SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet14Status"), ("EATON-EPDU-PU-SW-MIB", "outlet15Command"), ("EATON-EPDU-PU-SW-MIB", "outlet15Link"), ("EATON-EPDU-PU-SW-MIB", "outlet15Name"), ("EATON-EPDU-PU-SW-MIB", "outlet15PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet15RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet15SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet15Status"), ("EATON-EPDU-PU-SW-MIB", "outlet16Command"), ("EATON-EPDU-PU-SW-MIB", "outlet16Link"), ("EATON-EPDU-PU-SW-MIB", "outlet16Name"), ("EATON-EPDU-PU-SW-MIB", "outlet16PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet16RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet16SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet16Status"), ("EATON-EPDU-PU-SW-MIB", "outlet17Command"), ("EATON-EPDU-PU-SW-MIB", "outlet17Link"), ("EATON-EPDU-PU-SW-MIB", "outlet17Name"), ("EATON-EPDU-PU-SW-MIB", "outlet17PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet17RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet17SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet17Status"), ("EATON-EPDU-PU-SW-MIB", "outlet18Command"), ("EATON-EPDU-PU-SW-MIB", "outlet18Link"), ("EATON-EPDU-PU-SW-MIB", "outlet18Name"), ("EATON-EPDU-PU-SW-MIB", "outlet18PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet18RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet18SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet18Status"), ("EATON-EPDU-PU-SW-MIB", "outlet19Command"), ("EATON-EPDU-PU-SW-MIB", "outlet19Link"), ("EATON-EPDU-PU-SW-MIB", "outlet19Name"), ("EATON-EPDU-PU-SW-MIB", "outlet19PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet19RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet19SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet19Status"), ("EATON-EPDU-PU-SW-MIB", "outlet1Command"), ("EATON-EPDU-PU-SW-MIB", "outlet1Link"), ("EATON-EPDU-PU-SW-MIB", "outlet1Name"), ("EATON-EPDU-PU-SW-MIB", "outlet1PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet1RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet1SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet1Status"), ("EATON-EPDU-PU-SW-MIB", "outlet20Command"), ("EATON-EPDU-PU-SW-MIB", "outlet20Link"), ("EATON-EPDU-PU-SW-MIB", "outlet20Name"), ("EATON-EPDU-PU-SW-MIB", "outlet20PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet20RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet20SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet20Status"), ("EATON-EPDU-PU-SW-MIB", "outlet21Command"), ("EATON-EPDU-PU-SW-MIB", "outlet21Link"), ("EATON-EPDU-PU-SW-MIB", "outlet21Name"), ("EATON-EPDU-PU-SW-MIB", "outlet21PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet21RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet21SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet21Status"), ("EATON-EPDU-PU-SW-MIB", "outlet22Command"), ("EATON-EPDU-PU-SW-MIB", "outlet22Link"), ("EATON-EPDU-PU-SW-MIB", "outlet22Name"), ("EATON-EPDU-PU-SW-MIB", "outlet22PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet22RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet22SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet22Status"), ("EATON-EPDU-PU-SW-MIB", "outlet23Command"), ("EATON-EPDU-PU-SW-MIB", "outlet23Link"), ("EATON-EPDU-PU-SW-MIB", "outlet23Name"), ("EATON-EPDU-PU-SW-MIB", "outlet23PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet23RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet23SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet23Status"), ("EATON-EPDU-PU-SW-MIB", "outlet24Command"), ("EATON-EPDU-PU-SW-MIB", "outlet24Link"), ("EATON-EPDU-PU-SW-MIB", "outlet24Name"), ("EATON-EPDU-PU-SW-MIB", "outlet24PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet24RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet24SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet24Status"), ("EATON-EPDU-PU-SW-MIB", "outlet25Command"), ("EATON-EPDU-PU-SW-MIB", "outlet25Link"), ("EATON-EPDU-PU-SW-MIB", "outlet25Name"), ("EATON-EPDU-PU-SW-MIB", "outlet25PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet25RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet25SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet25Status"), ("EATON-EPDU-PU-SW-MIB", "outlet26Command"), ("EATON-EPDU-PU-SW-MIB", "outlet26Link"), ("EATON-EPDU-PU-SW-MIB", "outlet26Name"), ("EATON-EPDU-PU-SW-MIB", "outlet26PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet26RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet26SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet26Status"), ("EATON-EPDU-PU-SW-MIB", "outlet27Command"), ("EATON-EPDU-PU-SW-MIB", "outlet27Link"), ("EATON-EPDU-PU-SW-MIB", "outlet27Name"), ("EATON-EPDU-PU-SW-MIB", "outlet27PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet27RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet27SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet27Status"), ("EATON-EPDU-PU-SW-MIB", "outlet28Command"), ("EATON-EPDU-PU-SW-MIB", "outlet28Link"), ("EATON-EPDU-PU-SW-MIB", "outlet28Name"), ("EATON-EPDU-PU-SW-MIB", "outlet28PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet28RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet28SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet28Status"), ("EATON-EPDU-PU-SW-MIB", "outlet29Command"), ("EATON-EPDU-PU-SW-MIB", "outlet29Link"), ("EATON-EPDU-PU-SW-MIB", "outlet29Name"), ("EATON-EPDU-PU-SW-MIB", "outlet29PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet29RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet29SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet29Status"), ("EATON-EPDU-PU-SW-MIB", "outlet2Command"), ("EATON-EPDU-PU-SW-MIB", "outlet2Link"), ("EATON-EPDU-PU-SW-MIB", "outlet2Name"), ("EATON-EPDU-PU-SW-MIB", "outlet2PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet2RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet2SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet2Status"), ("EATON-EPDU-PU-SW-MIB", "outlet30Command"), ("EATON-EPDU-PU-SW-MIB", "outlet30Link"), ("EATON-EPDU-PU-SW-MIB", "outlet30Name"), ("EATON-EPDU-PU-SW-MIB", "outlet30PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet30RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet30SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet30Status"), ("EATON-EPDU-PU-SW-MIB", "outlet31Command"), ("EATON-EPDU-PU-SW-MIB", "outlet31Link"), ("EATON-EPDU-PU-SW-MIB", "outlet31Name"), ("EATON-EPDU-PU-SW-MIB", "outlet31PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet31RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet31SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet31Status"), ("EATON-EPDU-PU-SW-MIB", "outlet32Command"), ("EATON-EPDU-PU-SW-MIB", "outlet32Link"), ("EATON-EPDU-PU-SW-MIB", "outlet32Name"), ("EATON-EPDU-PU-SW-MIB", "outlet32PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet32RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet32SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet32Status"), ("EATON-EPDU-PU-SW-MIB", "outlet33Command"), ("EATON-EPDU-PU-SW-MIB", "outlet33Link"), ("EATON-EPDU-PU-SW-MIB", "outlet33Name"), ("EATON-EPDU-PU-SW-MIB", "outlet33PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet33RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet33SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet33Status"), ("EATON-EPDU-PU-SW-MIB", "outlet34Command"), ("EATON-EPDU-PU-SW-MIB", "outlet34Link"), ("EATON-EPDU-PU-SW-MIB", "outlet34Name"), ("EATON-EPDU-PU-SW-MIB", "outlet34PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet34RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet34SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet34Status"), ("EATON-EPDU-PU-SW-MIB", "outlet35Command"), ("EATON-EPDU-PU-SW-MIB", "outlet35Link"), ("EATON-EPDU-PU-SW-MIB", "outlet35Name"), ("EATON-EPDU-PU-SW-MIB", "outlet35PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet35RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet35SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet35Status"), ("EATON-EPDU-PU-SW-MIB", "outlet36Command"), ("EATON-EPDU-PU-SW-MIB", "outlet36Link"), ("EATON-EPDU-PU-SW-MIB", "outlet36Name"), ("EATON-EPDU-PU-SW-MIB", "outlet36PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet36RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet36SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet36Status"), ("EATON-EPDU-PU-SW-MIB", "outlet3Command"), ("EATON-EPDU-PU-SW-MIB", "outlet3Link"), ("EATON-EPDU-PU-SW-MIB", "outlet3Name"), ("EATON-EPDU-PU-SW-MIB", "outlet3PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet3RebootTime")], [("EATON-EPDU-PU-SW-MIB", "outlet3SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet3Status"), ("EATON-EPDU-PU-SW-MIB", "outlet4Command"), ("EATON-EPDU-PU-SW-MIB", "outlet4Link"), ("EATON-EPDU-PU-SW-MIB", "outlet4Name"), ("EATON-EPDU-PU-SW-MIB", "outlet4PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet4RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet4SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet4Status"), ("EATON-EPDU-PU-SW-MIB", "outlet5Command"), ("EATON-EPDU-PU-SW-MIB", "outlet5Link"), ("EATON-EPDU-PU-SW-MIB", "outlet5Name"), ("EATON-EPDU-PU-SW-MIB", "outlet5PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet5RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet5SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet5Status"), ("EATON-EPDU-PU-SW-MIB", "outlet6Command"), ("EATON-EPDU-PU-SW-MIB", "outlet6Link"), ("EATON-EPDU-PU-SW-MIB", "outlet6Name"), ("EATON-EPDU-PU-SW-MIB", "outlet6PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet6RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet6SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet6Status"), ("EATON-EPDU-PU-SW-MIB", "outlet7Command"), ("EATON-EPDU-PU-SW-MIB", "outlet7Link"), ("EATON-EPDU-PU-SW-MIB", "outlet7Name"), ("EATON-EPDU-PU-SW-MIB", "outlet7PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet7RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet7SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet7Status"), ("EATON-EPDU-PU-SW-MIB", "outlet8Command"), ("EATON-EPDU-PU-SW-MIB", "outlet8Link"), ("EATON-EPDU-PU-SW-MIB", "outlet8Name"), ("EATON-EPDU-PU-SW-MIB", "outlet8PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet8RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet8SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet8Status"), ("EATON-EPDU-PU-SW-MIB", "outlet9Command"), ("EATON-EPDU-PU-SW-MIB", "outlet9Link"), ("EATON-EPDU-PU-SW-MIB", "outlet9Name"), ("EATON-EPDU-PU-SW-MIB", "outlet9PingIpAddress"), ("EATON-EPDU-PU-SW-MIB", "outlet9RebootTime"), ("EATON-EPDU-PU-SW-MIB", "outlet9SequenceTime"), ("EATON-EPDU-PU-SW-MIB", "outlet9Status"), ("EATON-EPDU-PU-SW-MIB", "outletActivity"), ("EATON-EPDU-PU-SW-MIB", "outletSection1Alert"), ("EATON-EPDU-PU-SW-MIB", "outletSection1Current"), ("EATON-EPDU-PU-SW-MIB", "outletSection1CurrentHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection1CurrentLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection1Va"), ("EATON-EPDU-PU-SW-MIB", "outletSection1Voltage"), ("EATON-EPDU-PU-SW-MIB", "outletSection1VoltageHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection1VoltageLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection2Alert"), ("EATON-EPDU-PU-SW-MIB", "outletSection2Current"), ("EATON-EPDU-PU-SW-MIB", "outletSection2CurrentHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection2CurrentLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection2Va"), ("EATON-EPDU-PU-SW-MIB", "outletSection2Voltage"), ("EATON-EPDU-PU-SW-MIB", "outletSection2VoltageHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection2VoltageLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection3Alert"), ("EATON-EPDU-PU-SW-MIB", "outletSection3Current"), ("EATON-EPDU-PU-SW-MIB", "outletSection3CurrentHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection3CurrentLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection3Va"), ("EATON-EPDU-PU-SW-MIB", "outletSection3Voltage"), ("EATON-EPDU-PU-SW-MIB", "outletSection3VoltageHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection3VoltageLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection4Current"), ("EATON-EPDU-PU-SW-MIB", "outletSection4CurrentHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection4CurrentLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection4Va"), ("EATON-EPDU-PU-SW-MIB", "outletSection4Voltage"), ("EATON-EPDU-PU-SW-MIB", "outletSection4VoltageHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection4VoltageLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection5Current"), ("EATON-EPDU-PU-SW-MIB", "outletSection5CurrentHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection5CurrentLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection5Va"), ("EATON-EPDU-PU-SW-MIB", "outletSection5Voltage"), ("EATON-EPDU-PU-SW-MIB", "outletSection5VoltageHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection5VoltageLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection6Current"), ("EATON-EPDU-PU-SW-MIB", "outletSection6CurrentHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection6CurrentLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection6Va"), ("EATON-EPDU-PU-SW-MIB", "outletSection6Voltage"), ("EATON-EPDU-PU-SW-MIB", "outletSection6VoltageHighThreshold"), ("EATON-EPDU-PU-SW-MIB", "outletSection6VoltageLowThreshold"), ("EATON-EPDU-PU-SW-MIB", "pingInterval"), ("EATON-EPDU-PU-SW-MIB", "sendAlertsToUser1Address"), ("EATON-EPDU-PU-SW-MIB", "sendAlertsToUser2Address"), ("EATON-EPDU-PU-SW-MIB", "sendLogFrequency"), ("EATON-EPDU-PU-SW-MIB", "sendLogFrom"), ("EATON-EPDU-PU-SW-MIB", "sendLogTime"), ("EATON-EPDU-PU-SW-MIB", "sendLogToUser1Address"), ("EATON-EPDU-PU-SW-MIB", "sendLogToUser2Address"), ("EATON-EPDU-PU-SW-MIB", "strappingId"), ("EATON-EPDU-PU-SW-MIB", "subnetMask"), ("EATON-EPDU-PU-SW-MIB", "systemOnOff"), ("EATON-EPDU-PU-SW-MIB", "telnetEnabled"), ("EATON-EPDU-PU-SW-MIB", "telnetPort"), ("EATON-EPDU-PU-SW-MIB", "tempSensor1Alert"), ("EATON-EPDU-PU-SW-MIB", "tempSensor1ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "tempSensor1Enable"), ("EATON-EPDU-PU-SW-MIB", "tempSensor1HighThresh"), ("EATON-EPDU-PU-SW-MIB", "tempSensor1LowThresh"), ("EATON-EPDU-PU-SW-MIB", "tempSensor1Name"), ("EATON-EPDU-PU-SW-MIB", "tempSensor1OutletName"), ("EATON-EPDU-PU-SW-MIB", "tempSensor1OutletState"), ("EATON-EPDU-PU-SW-MIB", "tempSensor1Temp"), ("EATON-EPDU-PU-SW-MIB", "tempSensor2Alert"), ("EATON-EPDU-PU-SW-MIB", "tempSensor2ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "tempSensor2Enable"), ("EATON-EPDU-PU-SW-MIB", "tempSensor2HighThresh"), ("EATON-EPDU-PU-SW-MIB", "tempSensor2LowThresh"), ("EATON-EPDU-PU-SW-MIB", "tempSensor2Name"), ("EATON-EPDU-PU-SW-MIB", "tempSensor2OutletName"), ("EATON-EPDU-PU-SW-MIB", "tempSensor2OutletState"), ("EATON-EPDU-PU-SW-MIB", "tempSensor2Temp"), ("EATON-EPDU-PU-SW-MIB", "totalCurrent"), ("EATON-EPDU-PU-SW-MIB", "totalVa"), ("EATON-EPDU-PU-SW-MIB", "trapContactClosure1Threshold"), ("EATON-EPDU-PU-SW-MIB", "trapContactClosure2Threshold"), ("EATON-EPDU-PU-SW-MIB", "trapContactClosure3Threshold"), ("EATON-EPDU-PU-SW-MIB", "trapFailedLogin"), ("EATON-EPDU-PU-SW-MIB", "trapHumiditySensorThreshold"), ("EATON-EPDU-PU-SW-MIB", "trapIpAddress"), ("EATON-EPDU-PU-SW-MIB", "trapOutletActivity"), ("EATON-EPDU-PU-SW-MIB", "trapOutletSection1Threshold"), ("EATON-EPDU-PU-SW-MIB", "trapOutletSection2Threshold"), ("EATON-EPDU-PU-SW-MIB", "trapOutletSection3Threshold"), ("EATON-EPDU-PU-SW-MIB", "trapSystemOnOff"), ("EATON-EPDU-PU-SW-MIB", "trapTemperatureSensor1Threshold"), ("EATON-EPDU-PU-SW-MIB", "trapTemperatureSensor2Threshold"), ("EATON-EPDU-PU-SW-MIB", "trapUserLoginLogout"), ("EATON-EPDU-PU-SW-MIB", "unitDate"), ("EATON-EPDU-PU-SW-MIB", "unitDayOfWeek"), ("EATON-EPDU-PU-SW-MIB", "unitIPAddress"), ("EATON-EPDU-PU-SW-MIB", "unitName"), ("EATON-EPDU-PU-SW-MIB", "unitTime"), ("EATON-EPDU-PU-SW-MIB", "userLogInLogOut"), ("EATON-EPDU-PU-SW-MIB", "userLogInLogOutFailed"), ("EATON-EPDU-PU-SW-MIB", "vaLoggingInterval"), ("EATON-EPDU-PU-SW-MIB", "webEnabled"), ("EATON-EPDU-PU-SW-MIB", "webPort")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        allObjects = allObjects.setObjects(*_allObjects_obj)
    else:
        allObjects = allObjects.setObjects(*_allObjects_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    allObjects = allObjects.setStatus('current')
oldObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 20677, 2, 25, 5, 2)).setObjects(("EATON-EPDU-PU-SW-MIB", "outletSection1ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "outletSection1OutletName"), ("EATON-EPDU-PU-SW-MIB", "outletSection2ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "outletSection2OutletName"), ("EATON-EPDU-PU-SW-MIB", "outletSection3ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "outletSection3OutletName"), ("EATON-EPDU-PU-SW-MIB", "outletSection4ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "outletSection4OutletName"), ("EATON-EPDU-PU-SW-MIB", "outletSection5ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "outletSection5OutletName"), ("EATON-EPDU-PU-SW-MIB", "outletSection6ControlOutlet"), ("EATON-EPDU-PU-SW-MIB", "outletSection6OutletName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oldObjects = oldObjects.setStatus('deprecated')
obsoleteObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 20677, 2, 25, 5, 3)).setObjects(("EATON-EPDU-PU-SW-MIB", "totalVoltage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    obsoleteObjects = obsoleteObjects.setStatus('obsolete')
allNotifications = NotificationGroup((1, 3, 6, 1, 4, 1, 20677, 2, 25, 5, 4)).setObjects(("EATON-EPDU-PU-SW-MIB", "notifyContactSensorThreshold"), ("EATON-EPDU-PU-SW-MIB", "notifyCurrentThreshold"), ("EATON-EPDU-PU-SW-MIB", "notifyFailedLogin"), ("EATON-EPDU-PU-SW-MIB", "notifyHumidSensorThreshold"), ("EATON-EPDU-PU-SW-MIB", "notifyOutletState"), ("EATON-EPDU-PU-SW-MIB", "notifyOutletWatchdogFailed"), ("EATON-EPDU-PU-SW-MIB", "notifyTempSensorThreshold"), ("EATON-EPDU-PU-SW-MIB", "notifyUserLogin"), ("EATON-EPDU-PU-SW-MIB", "notifyUserLogout"), ("EATON-EPDU-PU-SW-MIB", "notifyVoltageThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    allNotifications = allNotifications.setStatus('current')
mibBuilder.exportSymbols("EATON-EPDU-PU-SW-MIB", outlet15Command=outlet15Command, outlet25Status=outlet25Status, outlet1Link=outlet1Link, infoItemIdx=infoItemIdx, contactClosure2Name=contactClosure2Name, outlet32SequenceTime=outlet32SequenceTime, telnetEnabled=telnetEnabled, tempSensor1Name=tempSensor1Name, fahrenheitOrCelsius=fahrenheitOrCelsius, outlet11Link=outlet11Link, outlet26Name=outlet26Name, webEnabled=webEnabled, outlet25Link=outlet25Link, enablePing=enablePing, outlet25SequenceTime=outlet25SequenceTime, contactClosure3OutletState=contactClosure3OutletState, outletSection3=outletSection3, outlet23RebootTime=outlet23RebootTime, outlet9=outlet9, contactClosure1=contactClosure1, notifyHumidSensorThreshold=notifyHumidSensorThreshold, outlet6Command=outlet6Command, outlet9PingIpAddress=outlet9PingIpAddress, outlet27Status=outlet27Status, outlet17Status=outlet17Status, contactClosure3State=contactClosure3State, outlet36RebootTime=outlet36RebootTime, outlet10Command=outlet10Command, outlet28RebootTime=outlet28RebootTime, outlet14SequenceTime=outlet14SequenceTime, contactClosure2Alert=contactClosure2Alert, notifyOutletState=notifyOutletState, outlet13Status=outlet13Status, outlet20Name=outlet20Name, outlet26SequenceTime=outlet26SequenceTime, outlet4Status=outlet4Status, outlet22SequenceTime=outlet22SequenceTime, outletSection3Alert=outletSection3Alert, outlet28PingIpAddress=outlet28PingIpAddress, outlet29Status=outlet29Status, outlet24RebootTime=outlet24RebootTime, outlet36PingIpAddress=outlet36PingIpAddress, outlet14PingIpAddress=outlet14PingIpAddress, outlet36Link=outlet36Link, outlet21SequenceTime=outlet21SequenceTime, trapOutletSection1Threshold=trapOutletSection1Threshold, outletSection3VoltageHighThreshold=outletSection3VoltageHighThreshold, outlet27Link=outlet27Link, outlet10Link=outlet10Link, outlet4Command=outlet4Command, contactClosure2OutletState=contactClosure2OutletState, outletSection6Va=outletSection6Va, outlet4=outlet4, outlet20RebootTime=outlet20RebootTime, outlet18PingIpAddress=outlet18PingIpAddress, tempSensor2LowThresh=tempSensor2LowThresh, outlet6Link=outlet6Link, outletSection2VoltageHighThreshold=outletSection2VoltageHighThreshold, snmpSettings=snmpSettings, outlet31Command=outlet31Command, outletSection5CurrentHighThreshold=outletSection5CurrentHighThreshold, environmentalSettings=environmentalSettings, outlet35PingIpAddress=outlet35PingIpAddress, outlet17Name=outlet17Name, outlet30Command=outlet30Command, outlet24PingIpAddress=outlet24PingIpAddress, outlet4SequenceTime=outlet4SequenceTime, outlet28SequenceTime=outlet28SequenceTime, tempSensor1OutletName=tempSensor1OutletName, outletSection6VoltageLowThreshold=outletSection6VoltageLowThreshold, outlet23SequenceTime=outlet23SequenceTime, tempSensor2OutletName=tempSensor2OutletName, outlet3SequenceTime=outlet3SequenceTime, outlet3Name=outlet3Name, outlet10Name=outlet10Name, pulizzi=pulizzi, outlet18Name=outlet18Name, outlet22PingIpAddress=outlet22PingIpAddress, outlet24Name=outlet24Name, tempSensor1ControlOutlet=tempSensor1ControlOutlet, tempSensor2ControlOutlet=tempSensor2ControlOutlet, humSensor1Name=humSensor1Name, outletSection1VoltageLowThreshold=outletSection1VoltageLowThreshold, outletSection1Va=outletSection1Va, outlet23=outlet23, contactClosure3Alert=contactClosure3Alert, trapOutletSection2Threshold=trapOutletSection2Threshold, contactClosure3ControlOutlet=contactClosure3ControlOutlet, tempSensor2Alert=tempSensor2Alert, PYSNMP_MODULE_ID=pulizzi, trapContactClosure3Threshold=trapContactClosure3Threshold, outlet34Status=outlet34Status, contactClosure2=contactClosure2, outlet19Status=outlet19Status, outletSection4VoltageLowThreshold=outletSection4VoltageLowThreshold, contactClosure3Name=contactClosure3Name, outletSection5Voltage=outletSection5Voltage, outletSection2Config=outletSection2Config, outletSection5=outletSection5, outlet2Name=outlet2Name, outlet22Command=outlet22Command, outlet9Status=outlet9Status, outlet11RebootTime=outlet11RebootTime, outletSection2OutletName=outletSection2OutletName, outlet2SequenceTime=outlet2SequenceTime, outletSection6VoltageHighThreshold=outletSection6VoltageHighThreshold, contactClosure1Name=contactClosure1Name, outlet13RebootTime=outlet13RebootTime, outlet34Name=outlet34Name, outlet26Status=outlet26Status, outlet9Name=outlet9Name, outlet34Link=outlet34Link, trapUserLoginLogout=trapUserLoginLogout, outlet22Link=outlet22Link, unitTime=unitTime, outlet15=outlet15, outletSection1Alert=outletSection1Alert, outlet1=outlet1, outletSection3OutletName=outletSection3OutletName, outlet18Link=outlet18Link, outlet17Link=outlet17Link, outlet32Link=outlet32Link, outlet33PingIpAddress=outlet33PingIpAddress, outlet34SequenceTime=outlet34SequenceTime, trapContactClosure1Threshold=trapContactClosure1Threshold, sendLogTime=sendLogTime, outletSection6Config=outletSection6Config, outlet36Name=outlet36Name, tempSensor2=tempSensor2, outlet5RebootTime=outlet5RebootTime, outlet6SequenceTime=outlet6SequenceTime, outlet27Name=outlet27Name, outlet27SequenceTime=outlet27SequenceTime, invertDisplay=invertDisplay, outlet28=outlet28, outlet31Link=outlet31Link, humSensor1OutletState=humSensor1OutletState, outlet35RebootTime=outlet35RebootTime, outlet4RebootTime=outlet4RebootTime, outlet8PingIpAddress=outlet8PingIpAddress, outlet18Command=outlet18Command, contactClosure2State=contactClosure2State, serialSettings=serialSettings, outlet23Status=outlet23Status, infoThresholdState=infoThresholdState, outlet15RebootTime=outlet15RebootTime, outlet17PingIpAddress=outlet17PingIpAddress, loginTimeout=loginTimeout, outletSectionConfig=outletSectionConfig, outlet23PingIpAddress=outlet23PingIpAddress, outletSection3VoltageLowThreshold=outletSection3VoltageLowThreshold, outlet36Command=outlet36Command, outletSection4CurrentLowThreshold=outletSection4CurrentLowThreshold, outlet4Name=outlet4Name, outlet14Command=outlet14Command, totalVa=totalVa, outlet13Link=outlet13Link, baudRate=baudRate, outlet14Name=outlet14Name, outlet20Status=outlet20Status, outletSection1CurrentLowThreshold=outletSection1CurrentLowThreshold, outlet6RebootTime=outlet6RebootTime, outlet10RebootTime=outlet10RebootTime, pingInterval=pingInterval, privateCommunityPassword=privateCommunityPassword, outlet17RebootTime=outlet17RebootTime, outletSection2Alert=outletSection2Alert, outlet15Name=outlet15Name, trapTemperatureSensor1Threshold=trapTemperatureSensor1Threshold, userLogInLogOutFailed=userLogInLogOutFailed, tempSensor1Alert=tempSensor1Alert, outlet8Status=outlet8Status, outletSection4=outletSection4, outlet35SequenceTime=outlet35SequenceTime, outlet35Command=outlet35Command, outlet26PingIpAddress=outlet26PingIpAddress, outlet35Status=outlet35Status, trapOutletActivity=trapOutletActivity, outletSection3Va=outletSection3Va, outletSection6=outletSection6, outletSection4Voltage=outletSection4Voltage, outlet8RebootTime=outlet8RebootTime, outlet14Link=outlet14Link, outlet31SequenceTime=outlet31SequenceTime, publicCommunityPassword=publicCommunityPassword, compliances=compliances, outlet21Status=outlet21Status, outletConfig=outletConfig, outletSection1OutletName=outletSection1OutletName, outlet30RebootTime=outlet30RebootTime, webPort=webPort, outletControl=outletControl, outlet2Link=outlet2Link, outlet17Command=outlet17Command, outlet28Link=outlet28Link, outlet1PingIpAddress=outlet1PingIpAddress, outlet25RebootTime=outlet25RebootTime, outlet22Name=outlet22Name, outlet15Status=outlet15Status, outlet30Name=outlet30Name, outlet7Status=outlet7Status, trapFailedLogin=trapFailedLogin, outlet5Name=outlet5Name, outlet22RebootTime=outlet22RebootTime, outlet10=outlet10, outlet4Link=outlet4Link, outlet33SequenceTime=outlet33SequenceTime, outlet25Command=outlet25Command, outlet1Name=outlet1Name, outlet31PingIpAddress=outlet31PingIpAddress, notifyVoltageThreshold=notifyVoltageThreshold, outlet20Link=outlet20Link, outlet2RebootTime=outlet2RebootTime, unitIPAddress=unitIPAddress, currentSensorValues=currentSensorValues, outletSection1Current=outletSection1Current, outlet33=outlet33, outlet12=outlet12, outlet14RebootTime=outlet14RebootTime, outlet13Command=outlet13Command, outletSection6Voltage=outletSection6Voltage, outletSection4VoltageHighThreshold=outletSection4VoltageHighThreshold, outlet3PingIpAddress=outlet3PingIpAddress, contactClosure1Alert=contactClosure1Alert, outlet27=outlet27, outlet27Command=outlet27Command, outlet1Status=outlet1Status, outlet7Command=outlet7Command, outlet9Link=outlet9Link, outletSection3CurrentHighThreshold=outletSection3CurrentHighThreshold, strappingId=strappingId, outlet29RebootTime=outlet29RebootTime, outlet13PingIpAddress=outlet13PingIpAddress, humSensor1Alert=humSensor1Alert, outlet1RebootTime=outlet1RebootTime, outletSection4Config=outletSection4Config, outlet13=outlet13, outlet18=outlet18, outlet19Link=outlet19Link, outlet14Status=outlet14Status, unitDayOfWeek=unitDayOfWeek, humSensor1Enable=humSensor1Enable, contactClosure1ControlOutlet=contactClosure1ControlOutlet, outlet10Status=outlet10Status, contactClosure1Enable=contactClosure1Enable, outletMngt=outletMngt, outlet6=outlet6, humSensor1LowThresh=humSensor1LowThresh, outlet7Link=outlet7Link, outlet18Status=outlet18Status, outlet15Link=outlet15Link, outlet36Status=outlet36Status, outletSection2Current=outletSection2Current, outlet2Status=outlet2Status)
mibBuilder.exportSymbols("EATON-EPDU-PU-SW-MIB", defaultGateway=defaultGateway, outletSection6CurrentHighThreshold=outletSection6CurrentHighThreshold, outlet9RebootTime=outlet9RebootTime, outlet19RebootTime=outlet19RebootTime, snmpTraps=snmpTraps, telnetSettings=telnetSettings, outlet26RebootTime=outlet26RebootTime, tempSensor1Enable=tempSensor1Enable, notifyContactSensorThreshold=notifyContactSensorThreshold, outlet20Command=outlet20Command, unitDate=unitDate, sendLogToUser1Address=sendLogToUser1Address, outletSection5VoltageLowThreshold=outletSection5VoltageLowThreshold, outlet19Command=outlet19Command, outletSection5Current=outletSection5Current, outlet11PingIpAddress=outlet11PingIpAddress, outlet12SequenceTime=outlet12SequenceTime, outlet7Name=outlet7Name, outletSection5Va=outletSection5Va, outlet20SequenceTime=outlet20SequenceTime, outlet32PingIpAddress=outlet32PingIpAddress, eventInfo=eventInfo, outlet21PingIpAddress=outlet21PingIpAddress, outlet5SequenceTime=outlet5SequenceTime, outletSection2Va=outletSection2Va, outlet30PingIpAddress=outlet30PingIpAddress, outletSection2VoltageLowThreshold=outletSection2VoltageLowThreshold, outlet17SequenceTime=outlet17SequenceTime, events=events, outletSection4Current=outletSection4Current, outlet11Name=outlet11Name, temperatureSensorConfig=temperatureSensorConfig, outlet21Name=outlet21Name, contactClosure2OutletName=contactClosure2OutletName, systemOnOff=systemOnOff, outlet12Link=outlet12Link, outletSection2CurrentLowThreshold=outletSection2CurrentLowThreshold, outlet33Name=outlet33Name, outlet3Status=outlet3Status, outletSection5Config=outletSection5Config, outlet8Command=outlet8Command, outletSection4CurrentHighThreshold=outletSection4CurrentHighThreshold, outletSection2ControlOutlet=outletSection2ControlOutlet, outlet19SequenceTime=outlet19SequenceTime, outlet34PingIpAddress=outlet34PingIpAddress, outlet31RebootTime=outlet31RebootTime, contactClosure2Enable=contactClosure2Enable, outletActivity=outletActivity, outlet8=outlet8, outlet21RebootTime=outlet21RebootTime, outletSection6ControlOutlet=outletSection6ControlOutlet, outlet16Status=outlet16Status, outlet6Status=outlet6Status, outlet2PingIpAddress=outlet2PingIpAddress, outletSection6Current=outletSection6Current, networkSettings=networkSettings, outletSection5CurrentLowThreshold=outletSection5CurrentLowThreshold, outlet11=outlet11, trapHumiditySensorThreshold=trapHumiditySensorThreshold, outlet12PingIpAddress=outlet12PingIpAddress, notifyUserLogout=notifyUserLogout, outlet20=outlet20, sendAlertsToUser2Address=sendAlertsToUser2Address, trapTemperatureSensor2Threshold=trapTemperatureSensor2Threshold, outlet12RebootTime=outlet12RebootTime, outlet21Link=outlet21Link, outletSection4Va=outletSection4Va, infoContactState=infoContactState, outlet31=outlet31, telnetPort=telnetPort, outlet34=outlet34, outlet5PingIpAddress=outlet5PingIpAddress, notifyUserLogin=notifyUserLogin, outlet16Command=outlet16Command, unitName=unitName, unitConfig=unitConfig, outlet11Command=outlet11Command, outletSection2Voltage=outletSection2Voltage, outlet29Name=outlet29Name, outlet11SequenceTime=outlet11SequenceTime, outlet17=outlet17, globalCommand=globalCommand, notifyFailedLogin=notifyFailedLogin, outlet29Command=outlet29Command, outletSection3Current=outletSection3Current, outlet13Name=outlet13Name, humSensor1Humidity=humSensor1Humidity, outletStatus=outletStatus, conformance=conformance, outlet36=outlet36, outlet34RebootTime=outlet34RebootTime, outlet1Command=outlet1Command, outlet14=outlet14, tempSensor1Temp=tempSensor1Temp, outlet24SequenceTime=outlet24SequenceTime, oldCompliances=oldCompliances, outlet22Status=outlet22Status, outletSection2CurrentHighThreshold=outletSection2CurrentHighThreshold, mailServerIPAddress=mailServerIPAddress, subnetMask=subnetMask, outlet29Link=outlet29Link, outlet24Status=outlet24Status, infoThresholdValue=infoThresholdValue, outlet5Status=outlet5Status, tempSensor2Temp=tempSensor2Temp, outlet7=outlet7, outlet26=outlet26, obsoleteCompliances=obsoleteCompliances, outlet36SequenceTime=outlet36SequenceTime, outletSection3CurrentLowThreshold=outletSection3CurrentLowThreshold, tempSensor2Name=tempSensor2Name, outlet24=outlet24, outlet29=outlet29, outlet35Link=outlet35Link, totalVoltage=totalVoltage, outlet2Command=outlet2Command, publicCommunityName=publicCommunityName, humSensor1ControlOutlet=humSensor1ControlOutlet, currentOutletSectionValues=currentOutletSectionValues, outletSection1=outletSection1, outlet9SequenceTime=outlet9SequenceTime, sendLogFrom=sendLogFrom, outlet5Link=outlet5Link, outlet16SequenceTime=outlet16SequenceTime, tempSensor1LowThresh=tempSensor1LowThresh, tempSensor2OutletState=tempSensor2OutletState, outlet15PingIpAddress=outlet15PingIpAddress, outlet23Link=outlet23Link, notifyTempSensorThreshold=notifyTempSensorThreshold, outlet7PingIpAddress=outlet7PingIpAddress, allNotifications=allNotifications, humSensor1OutletName=humSensor1OutletName, notifyOutletWatchdogFailed=notifyOutletWatchdogFailed, outlet25Name=outlet25Name, outlet19Name=outlet19Name, outlet3Command=outlet3Command, infoOutletState=infoOutletState, outlet15SequenceTime=outlet15SequenceTime, outlet27RebootTime=outlet27RebootTime, outletSection1VoltageHighThreshold=outletSection1VoltageHighThreshold, outlet12Name=outlet12Name, contactClosure1OutletState=contactClosure1OutletState, contactClosure1OutletName=contactClosure1OutletName, outletSection1ControlOutlet=outletSection1ControlOutlet, outlet5Command=outlet5Command, outlet30SequenceTime=outlet30SequenceTime, humSensor1=humSensor1, outlet32Status=outlet32Status, outlet3=outlet3, oldObjects=oldObjects, infoMeasuredValue=infoMeasuredValue, outlet32Name=outlet32Name, outlet9Command=outlet9Command, outlet25=outlet25, allObjects=allObjects, outlet29SequenceTime=outlet29SequenceTime, outlet22=outlet22, trapSystemOnOff=trapSystemOnOff, outlet33RebootTime=outlet33RebootTime, obsoleteObjects=obsoleteObjects, tempSensor1HighThresh=tempSensor1HighThresh, outlet21Command=outlet21Command, outlet32RebootTime=outlet32RebootTime, outlet32=outlet32, outlet8Link=outlet8Link, outletSection1Config=outletSection1Config, outlet33Link=outlet33Link, sendLogFrequency=sendLogFrequency, total=total, outletSection1Voltage=outletSection1Voltage, outletSection1CurrentHighThreshold=outletSection1CurrentHighThreshold, outlet33Status=outlet33Status, outletSection5ControlOutlet=outletSection5ControlOutlet, tempSensor1OutletState=tempSensor1OutletState, tempSensor2HighThresh=tempSensor2HighThresh, outlet11Status=outlet11Status, infoItemName=infoItemName, outlet19=outlet19, outlet7RebootTime=outlet7RebootTime, outlet23Command=outlet23Command, outlet2=outlet2, tempSensor1=tempSensor1, outlet24Link=outlet24Link, outlet6PingIpAddress=outlet6PingIpAddress, sendLogToUser2Address=sendLogToUser2Address, outletSection5OutletName=outletSection5OutletName, outlet16=outlet16, outlet16PingIpAddress=outlet16PingIpAddress, outlet35Name=outlet35Name, trapIpAddress=trapIpAddress, outlet16Link=outlet16Link, contactClosureConfig=contactClosureConfig, outlet28Command=outlet28Command, ipv3600=ipv3600, notifyCurrentThreshold=notifyCurrentThreshold, outlet26Link=outlet26Link, outlet16Name=outlet16Name, outlet3RebootTime=outlet3RebootTime, totalCurrent=totalCurrent, contactClosure1State=contactClosure1State, contactClosure2ControlOutlet=contactClosure2ControlOutlet, outlet13SequenceTime=outlet13SequenceTime, outlet35=outlet35, contactClosure3OutletName=contactClosure3OutletName, trapContactClosure2Threshold=trapContactClosure2Threshold, outletSection6OutletName=outletSection6OutletName, outlet4PingIpAddress=outlet4PingIpAddress, outletSection3Voltage=outletSection3Voltage, outlet20PingIpAddress=outlet20PingIpAddress, outlet16RebootTime=outlet16RebootTime, outlet31Name=outlet31Name, contactClosure3=contactClosure3, outlet32Command=outlet32Command, logManagerConfig=logManagerConfig, outlet34Command=outlet34Command, privateCommunityName=privateCommunityName, outletSection3Config=outletSection3Config, outlet10SequenceTime=outlet10SequenceTime, outlet33Command=outlet33Command, outlet12Command=outlet12Command, outlet30Link=outlet30Link, outlet19PingIpAddress=outlet19PingIpAddress, outletSection4ControlOutlet=outletSection4ControlOutlet, trapCommunityName=trapCommunityName, groups=groups, outlet18SequenceTime=outlet18SequenceTime, outlet1SequenceTime=outlet1SequenceTime, outlet30=outlet30, macAddress=macAddress, outlet29PingIpAddress=outlet29PingIpAddress, outlet10PingIpAddress=outlet10PingIpAddress, tempSensor2Enable=tempSensor2Enable, outlet25PingIpAddress=outlet25PingIpAddress, humiditySensorConfig=humiditySensorConfig, outlet30Status=outlet30Status, outlet3Link=outlet3Link, outlet21=outlet21, outlet5=outlet5, vaLoggingInterval=vaLoggingInterval, infoUserName=infoUserName, outletSection5VoltageHighThreshold=outletSection5VoltageHighThreshold, outlet24Command=outlet24Command, humSensor1HighThresh=humSensor1HighThresh, outlet26Command=outlet26Command, outlet28Name=outlet28Name, trapOutletSection3Threshold=trapOutletSection3Threshold, outletSection6CurrentLowThreshold=outletSection6CurrentLowThreshold, sendAlertsToUser1Address=sendAlertsToUser1Address, outlet31Status=outlet31Status, outlet8SequenceTime=outlet8SequenceTime, outletSection2=outletSection2, outletSection3ControlOutlet=outletSection3ControlOutlet, outlet23Name=outlet23Name, outlet6Name=outlet6Name)
mibBuilder.exportSymbols("EATON-EPDU-PU-SW-MIB", outlet7SequenceTime=outlet7SequenceTime, outlet27PingIpAddress=outlet27PingIpAddress, snmpEnabled=snmpEnabled, outletSection4OutletName=outletSection4OutletName, userLogInLogOut=userLogInLogOut, outlet18RebootTime=outlet18RebootTime, outlet28Status=outlet28Status, outlet12Status=outlet12Status, outlet8Name=outlet8Name, contactClosure3Enable=contactClosure3Enable)
