#
# PySNMP MIB module CISCO-VMPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VMPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:02:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, iso, Unsigned32, ModuleIdentity, TimeTicks, Integer32, Bits, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "Unsigned32", "ModuleIdentity", "TimeTicks", "Integer32", "Bits", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "Gauge32", "NotificationType")
TimeStamp, TextualConvention, MacAddress, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "MacAddress", "RowStatus", "TruthValue", "DisplayString")
ciscoVmpsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 53))
ciscoVmpsMIB.setRevisions(('2004-01-20 00:00', '2003-10-16 10:00', '2002-06-19 10:00', '2002-04-04 10:00', '2001-01-30 13:04',))
if mibBuilder.loadTexts: ciscoVmpsMIB.setLastUpdated('200401200000Z')
if mibBuilder.loadTexts: ciscoVmpsMIB.setOrganization('Cisco System Inc. ')
ciscoVlanMemberPolicyServerMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 53, 1))
vmpsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1))
vmpsDatabase = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2))
vmpsGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 3))
class VlanName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

vmpsConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1), )
if mibBuilder.loadTexts: vmpsConfigTable.setStatus('current')
vmpsConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-VMPS-MIB", "vmpsIndex"))
if mibBuilder.loadTexts: vmpsConfigEntry.setStatus('current')
vmpsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vmpsIndex.setStatus('current')
vmpsAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsAdminStatus.setStatus('current')
vmpsDownloadServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsDownloadServerAddress.setStatus('current')
vmpsConfigFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 4), DisplayString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsConfigFileName.setStatus('current')
vmpsTriggerDownload = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noOperation", 1), ("loadDatabase", 2), ("loadRcpDataBase", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsTriggerDownload.setStatus('current')
vmpsFallbackVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 6), VlanName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsFallbackVlan.setStatus('current')
vmpsSecureMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("secure", 1), ("open", 2))).clone('open')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsSecureMode.setStatus('current')
vmpsManagementDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsManagementDomain.setStatus('current')
vmpsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsRowStatus.setStatus('current')
vmpsRcpRemoteUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsRcpRemoteUserName.setStatus('deprecated')
vmpsRcpRemoteUserName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 1, 1, 11), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsRcpRemoteUserName2.setStatus('current')
vmpsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2), )
if mibBuilder.loadTexts: vmpsStatsTable.setStatus('current')
vmpsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1), )
vmpsConfigEntry.registerAugmentions(("CISCO-VMPS-MIB", "vmpsStatsEntry"))
vmpsStatsEntry.setIndexNames(*vmpsConfigEntry.getIndexNames())
if mibBuilder.loadTexts: vmpsStatsEntry.setStatus('current')
vmpsLastRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsLastRestart.setStatus('current')
vmpsInConfigReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsInConfigReqs.setStatus('current')
vmpsInConfigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsInConfigErrors.setStatus('current')
vmpsOutConfigFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsOutConfigFails.setStatus('current')
vmpsLastFailClient = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsLastFailClient.setStatus('current')
vmpsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("loading", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsOperStatus.setStatus('current')
vmpsAutoBackupEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmpsAutoBackupEnable.setStatus('current')
vmpsAutoBackupFileName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 3, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmpsAutoBackupFileName.setStatus('current')
vmpsMacConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1), )
if mibBuilder.loadTexts: vmpsMacConfigTable.setStatus('current')
vmpsMacConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-VMPS-MIB", "vmpsIndex"), (0, "CISCO-VMPS-MIB", "vmpsMacConfigAddress"))
if mibBuilder.loadTexts: vmpsMacConfigEntry.setStatus('current')
vmpsMacConfigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: vmpsMacConfigAddress.setStatus('current')
vmpsMacConfigVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 2), VlanName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsMacConfigVlan.setStatus('current')
vmpsMacConfigLastAccessed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsMacConfigLastAccessed.setStatus('current')
vmpsMacConfigLastRequestor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsMacConfigLastRequestor.setStatus('current')
vmpsMacConfigLastRequestPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsMacConfigLastRequestPortId.setStatus('current')
vmpsMacConfigLastResponseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("success", 1), ("versionNotSupported", 2), ("insufficientResources", 3), ("accessDenied", 4), ("portShutdown", 5), ("unknownManagementDomain", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmpsMacConfigLastResponseStatus.setStatus('current')
vmpsMacConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsMacConfigStatus.setStatus('current')
vmpsVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2), )
if mibBuilder.loadTexts: vmpsVlanConfigTable.setStatus('current')
vmpsVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-VMPS-MIB", "vmpsIndex"), (0, "CISCO-VMPS-MIB", "vmpsVlanName"), (0, "CISCO-VMPS-MIB", "vmpsDeviceId"), (0, "CISCO-VMPS-MIB", "vmpsPortName"))
if mibBuilder.loadTexts: vmpsVlanConfigEntry.setStatus('current')
vmpsVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1, 1), VlanName())
if mibBuilder.loadTexts: vmpsVlanName.setStatus('current')
vmpsDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: vmpsDeviceId.setStatus('current')
vmpsPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1, 3), DisplayString())
if mibBuilder.loadTexts: vmpsPortName.setStatus('current')
vmpsVlanConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 53, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vmpsVlanConfigStatus.setStatus('current')
ciscoVlanMemberPolicyServerMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 53, 2))
ciscoVlanMemberPolicyServerMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 53, 3))
ciscoVlanMemberPolicyServerMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 1))
ciscoVlanMemberPolicyServerMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 2))
ciscoVlanMemberPolicyServerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 1, 1)).setObjects(("CISCO-VMPS-MIB", "ciscoVlanMemberPolicyServerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVlanMemberPolicyServerMIBCompliance = ciscoVlanMemberPolicyServerMIBCompliance.setStatus('deprecated')
ciscoVmpsMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 1, 2)).setObjects(("CISCO-VMPS-MIB", "ciscoVlanMemberPolicyServerGroup"), ("CISCO-VMPS-MIB", "ciscoVlanMemberPolicyServerRcpGroup"), ("CISCO-VMPS-MIB", "ciscoVmpsAutoBackupGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVmpsMIBCompliance2 = ciscoVmpsMIBCompliance2.setStatus('deprecated')
ciscoVmpsMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 1, 3)).setObjects(("CISCO-VMPS-MIB", "ciscoVlanMemberPolicyServerGroup"), ("CISCO-VMPS-MIB", "ciscoVmpsAutoBackupGroup"), ("CISCO-VMPS-MIB", "ciscoVlanMemberPolicyServerRcpGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVmpsMIBCompliance3 = ciscoVmpsMIBCompliance3.setStatus('current')
ciscoVlanMemberPolicyServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 2, 1)).setObjects(("CISCO-VMPS-MIB", "vmpsLastRestart"), ("CISCO-VMPS-MIB", "vmpsInConfigReqs"), ("CISCO-VMPS-MIB", "vmpsInConfigErrors"), ("CISCO-VMPS-MIB", "vmpsOutConfigFails"), ("CISCO-VMPS-MIB", "vmpsLastFailClient"), ("CISCO-VMPS-MIB", "vmpsOperStatus"), ("CISCO-VMPS-MIB", "vmpsAdminStatus"), ("CISCO-VMPS-MIB", "vmpsDownloadServerAddress"), ("CISCO-VMPS-MIB", "vmpsConfigFileName"), ("CISCO-VMPS-MIB", "vmpsTriggerDownload"), ("CISCO-VMPS-MIB", "vmpsFallbackVlan"), ("CISCO-VMPS-MIB", "vmpsSecureMode"), ("CISCO-VMPS-MIB", "vmpsManagementDomain"), ("CISCO-VMPS-MIB", "vmpsRowStatus"), ("CISCO-VMPS-MIB", "vmpsMacConfigVlan"), ("CISCO-VMPS-MIB", "vmpsMacConfigLastAccessed"), ("CISCO-VMPS-MIB", "vmpsMacConfigLastRequestor"), ("CISCO-VMPS-MIB", "vmpsMacConfigLastRequestPortId"), ("CISCO-VMPS-MIB", "vmpsMacConfigLastResponseStatus"), ("CISCO-VMPS-MIB", "vmpsMacConfigStatus"), ("CISCO-VMPS-MIB", "vmpsVlanConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVlanMemberPolicyServerGroup = ciscoVlanMemberPolicyServerGroup.setStatus('current')
ciscoVlanMemberPolicyServerRcpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 2, 2)).setObjects(("CISCO-VMPS-MIB", "vmpsRcpRemoteUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVlanMemberPolicyServerRcpGroup = ciscoVlanMemberPolicyServerRcpGroup.setStatus('deprecated')
ciscoVmpsAutoBackupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 2, 3)).setObjects(("CISCO-VMPS-MIB", "vmpsAutoBackupEnable"), ("CISCO-VMPS-MIB", "vmpsAutoBackupFileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVmpsAutoBackupGroup = ciscoVmpsAutoBackupGroup.setStatus('current')
ciscoVlanMemberPolicyServerRcpGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 53, 3, 2, 4)).setObjects(("CISCO-VMPS-MIB", "vmpsRcpRemoteUserName2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVlanMemberPolicyServerRcpGroup2 = ciscoVlanMemberPolicyServerRcpGroup2.setStatus('current')
mibBuilder.exportSymbols("CISCO-VMPS-MIB", vmpsAutoBackupEnable=vmpsAutoBackupEnable, vmpsStatsTable=vmpsStatsTable, vmpsMacConfigLastRequestPortId=vmpsMacConfigLastRequestPortId, vmpsMacConfigStatus=vmpsMacConfigStatus, ciscoVlanMemberPolicyServerMIBConformance=ciscoVlanMemberPolicyServerMIBConformance, vmpsVlanConfigEntry=vmpsVlanConfigEntry, vmpsLastRestart=vmpsLastRestart, vmpsRowStatus=vmpsRowStatus, vmpsMacConfigEntry=vmpsMacConfigEntry, PYSNMP_MODULE_ID=ciscoVmpsMIB, ciscoVlanMemberPolicyServerGroup=ciscoVlanMemberPolicyServerGroup, ciscoVmpsMIBCompliance2=ciscoVmpsMIBCompliance2, vmpsFallbackVlan=vmpsFallbackVlan, ciscoVmpsAutoBackupGroup=ciscoVmpsAutoBackupGroup, ciscoVlanMemberPolicyServerRcpGroup2=ciscoVlanMemberPolicyServerRcpGroup2, vmpsDeviceId=vmpsDeviceId, vmpsManagementDomain=vmpsManagementDomain, ciscoVmpsMIBCompliance3=ciscoVmpsMIBCompliance3, vmpsTriggerDownload=vmpsTriggerDownload, vmpsConfigTable=vmpsConfigTable, vmpsLastFailClient=vmpsLastFailClient, ciscoVmpsMIB=ciscoVmpsMIB, vmpsRcpRemoteUserName2=vmpsRcpRemoteUserName2, vmpsInfo=vmpsInfo, vmpsDatabase=vmpsDatabase, vmpsMacConfigTable=vmpsMacConfigTable, vmpsVlanName=vmpsVlanName, vmpsMacConfigVlan=vmpsMacConfigVlan, vmpsMacConfigAddress=vmpsMacConfigAddress, vmpsOutConfigFails=vmpsOutConfigFails, VlanName=VlanName, ciscoVlanMemberPolicyServerMIBGroups=ciscoVlanMemberPolicyServerMIBGroups, vmpsAdminStatus=vmpsAdminStatus, vmpsConfigFileName=vmpsConfigFileName, vmpsVlanConfigTable=vmpsVlanConfigTable, vmpsOperStatus=vmpsOperStatus, vmpsInConfigErrors=vmpsInConfigErrors, ciscoVlanMemberPolicyServerRcpGroup=ciscoVlanMemberPolicyServerRcpGroup, vmpsGlobalConfig=vmpsGlobalConfig, vmpsMacConfigLastRequestor=vmpsMacConfigLastRequestor, vmpsDownloadServerAddress=vmpsDownloadServerAddress, vmpsInConfigReqs=vmpsInConfigReqs, vmpsRcpRemoteUserName=vmpsRcpRemoteUserName, vmpsPortName=vmpsPortName, vmpsIndex=vmpsIndex, ciscoVlanMemberPolicyServerMIBCompliance=ciscoVlanMemberPolicyServerMIBCompliance, ciscoVlanMemberPolicyServerMIBObjects=ciscoVlanMemberPolicyServerMIBObjects, vmpsMacConfigLastResponseStatus=vmpsMacConfigLastResponseStatus, vmpsStatsEntry=vmpsStatsEntry, vmpsVlanConfigStatus=vmpsVlanConfigStatus, ciscoVlanMemberPolicyServerMIBNotifications=ciscoVlanMemberPolicyServerMIBNotifications, vmpsConfigEntry=vmpsConfigEntry, vmpsSecureMode=vmpsSecureMode, vmpsAutoBackupFileName=vmpsAutoBackupFileName, ciscoVlanMemberPolicyServerMIBCompliances=ciscoVlanMemberPolicyServerMIBCompliances, vmpsMacConfigLastAccessed=vmpsMacConfigLastAccessed)
