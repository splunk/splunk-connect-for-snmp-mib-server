#
# PySNMP MIB module H3C-NS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-NS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:10:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Gauge32, Integer32, TimeTicks, MibIdentifier, ObjectIdentity, iso, ModuleIdentity, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "Integer32", "TimeTicks", "MibIdentifier", "ObjectIdentity", "iso", "ModuleIdentity", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "IpAddress")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
h3cNS = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20))
h3cNS.setRevisions(('2004-09-21 14:15',))
if mibBuilder.loadTexts: h3cNS.setLastUpdated('200411071353Z')
if mibBuilder.loadTexts: h3cNS.setOrganization('Huawei-3Com Technologies Co.,Ltd.')
h3cNSMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1))
h3cNSMibScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 1))
h3cNSActiveTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSActiveTime.setStatus('current')
h3cNSInactiveTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSInactiveTime.setStatus('current')
h3cNSVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(9, 9), )).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSVersion.setStatus('current')
h3cNSAsType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("peerAs", 1), ("originAs", 2))).clone('peerAs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSAsType.setStatus('current')
h3cNSTemplateRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSTemplateRefreshRate.setStatus('current')
h3cNSTemplateTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSTemplateTimeout.setStatus('current')
h3cNSExportVlanOrIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("vlanId", 1), ("interfaceIndex", 2))).clone('vlanId')).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSExportVlanOrIfIndex.setStatus('current')
h3cNSProcessSlotTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 2), )
if mibBuilder.loadTexts: h3cNSProcessSlotTable.setStatus('current')
h3cNSProcessSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 2, 1), ).setIndexNames((0, "H3C-NS-MIB", "h3cNSProcessSlot"))
if mibBuilder.loadTexts: h3cNSProcessSlotEntry.setStatus('current')
h3cNSProcessSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSProcessSlot.setStatus('current')
h3cNSExportConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 3), )
if mibBuilder.loadTexts: h3cNSExportConfigTable.setStatus('current')
h3cNSExportConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 3, 1), ).setIndexNames((0, "H3C-NS-MIB", "h3cNSAggregationType"))
if mibBuilder.loadTexts: h3cNSExportConfigEntry.setStatus('current')
h3cNSAggregationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("v5Statistics", 1), ("as", 2), ("destinationPrefix", 3), ("sourcePrefix", 4), ("protocolPort", 5), ("prefix", 6), ("tosAs", 7), ("tosDestinationPrefix", 8), ("tosSourcePrefix", 9), ("tosProtocolPort", 10), ("tosPrefix", 11), ("prefixPort", 12))))
if mibBuilder.loadTexts: h3cNSAggregationType.setStatus('current')
h3cNSHostIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSHostIPAddr.setStatus('current')
h3cNSHostPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSHostPort.setStatus('current')
h3cNSSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSSrcIpAddr.setStatus('current')
h3cNSState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cNSState.setStatus('current')
h3cNSExportInformationTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 4), )
if mibBuilder.loadTexts: h3cNSExportInformationTable.setStatus('current')
h3cNSExportInformationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 4, 1), ).setIndexNames((0, "H3C-NS-MIB", "h3cNSExportType"), (0, "H3C-NS-MIB", "h3cNSExportSlot"))
if mibBuilder.loadTexts: h3cNSExportInformationEntry.setStatus('current')
h3cNSExportType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: h3cNSExportType.setStatus('current')
h3cNSExportSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cNSExportSlot.setStatus('current')
h3cNSExportStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSExportStream.setStatus('current')
h3cNSExportNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSExportNum.setStatus('current')
h3cNSExportFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSExportFail.setStatus('current')
h3cNSConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5), )
if mibBuilder.loadTexts: h3cNSConfigTable.setStatus('current')
h3cNSConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5, 1), ).setIndexNames((0, "H3C-NS-MIB", "h3cNSSourceSlot"), (0, "H3C-NS-MIB", "h3cNSSourceIfIndex"), (0, "H3C-NS-MIB", "h3cNSDestSlot"))
if mibBuilder.loadTexts: h3cNSConfigEntry.setStatus('current')
h3cNSSourceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: h3cNSSourceSlot.setStatus('current')
h3cNSSourceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cNSSourceIfIndex.setStatus('current')
h3cNSDestSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5, 1, 3), Integer32())
if mibBuilder.loadTexts: h3cNSDestSlot.setStatus('current')
h3cNSDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))).clone('inbound')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNSDirect.setStatus('current')
h3cNSACLNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNSACLNumber.setStatus('current')
h3cNSACLName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5, 1, 6), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNSACLName.setStatus('current')
h3cNSACLRule = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNSACLRule.setStatus('current')
h3cNSConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 5, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNSConfigRowStatus.setStatus('current')
h3cNSStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6), )
if mibBuilder.loadTexts: h3cNSStatusTable.setStatus('current')
h3cNSStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1), ).setIndexNames((0, "H3C-NS-MIB", "h3cNSSlot"))
if mibBuilder.loadTexts: h3cNSStatusEntry.setStatus('current')
h3cNSSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cNSSlot.setStatus('current')
h3cNSActiveStreamNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSActiveStreamNumber.setStatus('current')
h3cNSTotalStreamNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSTotalStreamNumber.setStatus('current')
h3cNSTotalPacketNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSTotalPacketNumber.setStatus('current')
h3cNSTotalOctetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSTotalOctetNumber.setStatus('current')
h3cNSMPLSActiveStreamNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSMPLSActiveStreamNumber.setStatus('current')
h3cNSMPLSTotalStreamNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSMPLSTotalStreamNumber.setStatus('current')
h3cNSMPLSTotalPacketNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSMPLSTotalPacketNumber.setStatus('current')
h3cNSMPLSTotalOctetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSMPLSTotalOctetNumber.setStatus('current')
h3cNSResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cNSResetFlag.setStatus('current')
h3cNSResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 20, 1, 6, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cNSResetTime.setStatus('current')
mibBuilder.exportSymbols("H3C-NS-MIB", h3cNSSrcIpAddr=h3cNSSrcIpAddr, h3cNSExportConfigTable=h3cNSExportConfigTable, h3cNSStatusEntry=h3cNSStatusEntry, h3cNSConfigTable=h3cNSConfigTable, h3cNSTotalPacketNumber=h3cNSTotalPacketNumber, h3cNSInactiveTime=h3cNSInactiveTime, h3cNSState=h3cNSState, h3cNSExportNum=h3cNSExportNum, PYSNMP_MODULE_ID=h3cNS, h3cNSExportSlot=h3cNSExportSlot, h3cNSResetTime=h3cNSResetTime, h3cNSHostPort=h3cNSHostPort, h3cNSExportVlanOrIfIndex=h3cNSExportVlanOrIfIndex, h3cNSProcessSlotTable=h3cNSProcessSlotTable, h3cNSAsType=h3cNSAsType, h3cNSTemplateTimeout=h3cNSTemplateTimeout, h3cNSConfigEntry=h3cNSConfigEntry, h3cNSDirect=h3cNSDirect, h3cNSACLName=h3cNSACLName, h3cNSACLRule=h3cNSACLRule, h3cNSStatusTable=h3cNSStatusTable, h3cNSMibObjects=h3cNSMibObjects, h3cNSMPLSActiveStreamNumber=h3cNSMPLSActiveStreamNumber, h3cNSMPLSTotalOctetNumber=h3cNSMPLSTotalOctetNumber, h3cNSMibScalarObjects=h3cNSMibScalarObjects, h3cNSActiveStreamNumber=h3cNSActiveStreamNumber, h3cNSExportStream=h3cNSExportStream, h3cNSTemplateRefreshRate=h3cNSTemplateRefreshRate, h3cNSExportInformationTable=h3cNSExportInformationTable, h3cNSMPLSTotalStreamNumber=h3cNSMPLSTotalStreamNumber, h3cNSActiveTime=h3cNSActiveTime, h3cNSTotalStreamNumber=h3cNSTotalStreamNumber, h3cNSSourceIfIndex=h3cNSSourceIfIndex, h3cNSResetFlag=h3cNSResetFlag, h3cNSExportConfigEntry=h3cNSExportConfigEntry, h3cNSExportInformationEntry=h3cNSExportInformationEntry, h3cNSTotalOctetNumber=h3cNSTotalOctetNumber, h3cNSDestSlot=h3cNSDestSlot, h3cNSExportType=h3cNSExportType, h3cNSHostIPAddr=h3cNSHostIPAddr, h3cNSAggregationType=h3cNSAggregationType, h3cNSVersion=h3cNSVersion, h3cNSProcessSlot=h3cNSProcessSlot, h3cNSACLNumber=h3cNSACLNumber, h3cNSProcessSlotEntry=h3cNSProcessSlotEntry, h3cNSMPLSTotalPacketNumber=h3cNSMPLSTotalPacketNumber, h3cNSSlot=h3cNSSlot, h3cNSConfigRowStatus=h3cNSConfigRowStatus, h3cNSSourceSlot=h3cNSSourceSlot, h3cNS=h3cNS, h3cNSExportFail=h3cNSExportFail)
