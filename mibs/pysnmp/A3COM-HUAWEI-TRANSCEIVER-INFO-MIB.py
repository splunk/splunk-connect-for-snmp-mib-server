#
# PySNMP MIB module A3COM-HUAWEI-TRANSCEIVER-INFO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-TRANSCEIVER-INFO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:52:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ifIndex, ifEntry = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifEntry")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, ObjectIdentity, MibIdentifier, Unsigned32, Integer32, iso, Bits, NotificationType, Counter32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "ObjectIdentity", "MibIdentifier", "Unsigned32", "Integer32", "iso", "Bits", "NotificationType", "Counter32", "IpAddress", "TimeTicks")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
h3cTransceiver = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70))
h3cTransceiver.setRevisions(('2009-12-29 16:50',))
if mibBuilder.loadTexts: h3cTransceiver.setLastUpdated('200912291650Z')
if mibBuilder.loadTexts: h3cTransceiver.setOrganization('H3C Technologies Co., Ltd.')
h3cTransceiverInfoAdm = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1))
h3cTransceiverInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1), )
if mibBuilder.loadTexts: h3cTransceiverInfoTable.setStatus('current')
h3cTransceiverInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cTransceiverInfoEntry.setStatus('current')
h3cTransceiverHardwareType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverHardwareType.setStatus('current')
h3cTransceiverType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverType.setStatus('current')
h3cTransceiverWaveLength = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverWaveLength.setStatus('current')
h3cTransceiverVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverVendorName.setStatus('current')
h3cTransceiverSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverSerialNumber.setStatus('current')
h3cTransceiverFiberDiameterType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 65535))).clone(namedValues=NamedValues(("fiber9", 1), ("fiber50", 2), ("fiber625", 3), ("copper", 4), ("unknown", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverFiberDiameterType.setStatus('current')
h3cTransceiverTransferDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverTransferDistance.setStatus('current')
h3cTransceiverDiagnostic = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverDiagnostic.setStatus('current')
h3cTransceiverCurTXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverCurTXPower.setStatus('current')
h3cTransceiverMaxTXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverMaxTXPower.setStatus('current')
h3cTransceiverMinTXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverMinTXPower.setStatus('current')
h3cTransceiverCurRXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverCurRXPower.setStatus('current')
h3cTransceiverMaxRXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverMaxRXPower.setStatus('current')
h3cTransceiverMinRXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverMinRXPower.setStatus('current')
h3cTransceiverTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverTemperature.setStatus('current')
h3cTransceiverVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverVoltage.setStatus('current')
h3cTransceiverBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 70, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTransceiverBiasCurrent.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-TRANSCEIVER-INFO-MIB", h3cTransceiverMinTXPower=h3cTransceiverMinTXPower, h3cTransceiverInfoEntry=h3cTransceiverInfoEntry, h3cTransceiverFiberDiameterType=h3cTransceiverFiberDiameterType, h3cTransceiverCurTXPower=h3cTransceiverCurTXPower, h3cTransceiverMaxTXPower=h3cTransceiverMaxTXPower, h3cTransceiverMaxRXPower=h3cTransceiverMaxRXPower, h3cTransceiverSerialNumber=h3cTransceiverSerialNumber, h3cTransceiver=h3cTransceiver, h3cTransceiverInfoAdm=h3cTransceiverInfoAdm, h3cTransceiverVendorName=h3cTransceiverVendorName, h3cTransceiverTransferDistance=h3cTransceiverTransferDistance, h3cTransceiverTemperature=h3cTransceiverTemperature, h3cTransceiverCurRXPower=h3cTransceiverCurRXPower, h3cTransceiverType=h3cTransceiverType, h3cTransceiverWaveLength=h3cTransceiverWaveLength, h3cTransceiverBiasCurrent=h3cTransceiverBiasCurrent, h3cTransceiverHardwareType=h3cTransceiverHardwareType, h3cTransceiverMinRXPower=h3cTransceiverMinRXPower, h3cTransceiverInfoTable=h3cTransceiverInfoTable, h3cTransceiverDiagnostic=h3cTransceiverDiagnostic, h3cTransceiverVoltage=h3cTransceiverVoltage, PYSNMP_MODULE_ID=h3cTransceiver)
