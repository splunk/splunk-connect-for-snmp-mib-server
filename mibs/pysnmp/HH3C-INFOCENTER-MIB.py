#
# PySNMP MIB module HH3C-INFOCENTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-INFOCENTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:14:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter32, Integer32, NotificationType, ObjectIdentity, IpAddress, TimeTicks, Counter64, Bits, iso, Gauge32, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "Integer32", "NotificationType", "ObjectIdentity", "IpAddress", "TimeTicks", "Counter64", "Bits", "iso", "Gauge32", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, DisplayString, TextualConvention, TruthValue, TAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "TruthValue", "TAddress")
hh3cInfoCenter = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 119))
hh3cInfoCenter.setRevisions(('2012-03-07 19:00',))
if mibBuilder.loadTexts: hh3cInfoCenter.setLastUpdated('201203071900Z')
if mibBuilder.loadTexts: hh3cInfoCenter.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class ICMessageLevelType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("informational", 6), ("debug", 7), ("invalid", 8))

class ICFacilityType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))
    namedValues = NamedValues(("kernel", 0), ("userLevel", 1), ("mailSystem", 2), ("systemDaemons", 3), ("securityAuthorization", 4), ("internallyMessages", 5), ("linePrinter", 6), ("networkNews", 7), ("uucp", 8), ("clockDaemon", 9), ("securityAuthorization2", 10), ("ftpDaemon", 11), ("ntp", 12), ("logAudit", 13), ("logAlert", 14), ("clockDaemon2", 15), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23))

class ICTimeStampType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("date", 0), ("boot", 1), ("iso", 2), ("dateWithoutYear", 3), ("none", 4))

hh3cICLogbuffer = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1))
hh3cICLogbufferObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 1))
hh3cICMaxLogbufferSize = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cICMaxLogbufferSize.setStatus('current')
hh3cICLogbufferSize = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 1, 2), Unsigned32().clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cICLogbufferSize.setStatus('current')
hh3cICLogbufferCurrentMessages = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cICLogbufferCurrentMessages.setStatus('current')
hh3cICLogbufferOverwrittenMessages = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cICLogbufferOverwrittenMessages.setStatus('current')
hh3cICLogbufferDroppedMessages = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cICLogbufferDroppedMessages.setStatus('current')
hh3cICLogbufferContTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 2), )
if mibBuilder.loadTexts: hh3cICLogbufferContTable.setStatus('current')
hh3cICLogbufferContEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 2, 1), ).setIndexNames((0, "HH3C-INFOCENTER-MIB", "hh3cICLogbufferContIndex"))
if mibBuilder.loadTexts: hh3cICLogbufferContEntry.setStatus('current')
hh3cICLogbufferContIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cICLogbufferContIndex.setStatus('current')
hh3cICLogbufferContDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cICLogbufferContDescription.setStatus('current')
hh3cICLoghost = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2))
hh3cICLoghostObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 1))
hh3cICMaxLoghost = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cICMaxLoghost.setStatus('current')
hh3cICLoghostSourceInterface = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cICLoghostSourceInterface.setStatus('current')
hh3cICLoghostTimestampType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 1, 3), ICTimeStampType().clone('date')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cICLoghostTimestampType.setStatus('current')
hh3cICLoghostTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2), )
if mibBuilder.loadTexts: hh3cICLoghostTable.setStatus('current')
hh3cICLoghostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2, 1), ).setIndexNames((0, "HH3C-INFOCENTER-MIB", "hh3cICLoghostIndex"))
if mibBuilder.loadTexts: hh3cICLoghostEntry.setStatus('current')
hh3cICLoghostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cICLoghostIndex.setStatus('current')
hh3cICLoghostIpaddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cICLoghostIpaddressType.setStatus('current')
hh3cICLoghostIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cICLoghostIpaddress.setStatus('current')
hh3cICLoghostVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cICLoghostVPNName.setStatus('current')
hh3cICLoghostFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2, 1, 5), ICFacilityType().clone('local7')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cICLoghostFacility.setStatus('current')
hh3cICLoghostOperateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cICLoghostOperateRowStatus.setStatus('current')
hh3cICLoghostIpaddressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(514)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cICLoghostIpaddressPort.setStatus('current')
hh3cICLoghostTAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 2, 2, 1, 8), TAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cICLoghostTAddress.setStatus('current')
hh3cICDirection = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 119, 3))
hh3cICDirectionTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 119, 3, 1), )
if mibBuilder.loadTexts: hh3cICDirectionTable.setStatus('current')
hh3cICDirectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 119, 3, 1, 1), ).setIndexNames((0, "HH3C-INFOCENTER-MIB", "hh3cICDirectionIndex"))
if mibBuilder.loadTexts: hh3cICDirectionEntry.setStatus('current')
hh3cICDirectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cICDirectionIndex.setStatus('current')
hh3cICDirectionName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cICDirectionName.setStatus('current')
hh3cICDirectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 3, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cICDirectionState.setStatus('current')
hh3cICModule = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 119, 4))
hh3cICModuleTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 119, 4, 1), )
if mibBuilder.loadTexts: hh3cICModuleTable.setStatus('current')
hh3cICModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 119, 4, 1, 1), ).setIndexNames((1, "HH3C-INFOCENTER-MIB", "hh3cICModuleName"))
if mibBuilder.loadTexts: hh3cICModuleEntry.setStatus('current')
hh3cICModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 4, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cICModuleName.setStatus('current')
hh3cICLog = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 119, 5))
hh3cICLogObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 119, 5, 1))
hh3cICLogGlobalState = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 5, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cICLogGlobalState.setStatus('current')
hh3cICLogTimestampType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 119, 5, 1, 2), ICTimeStampType().clone('date')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cICLogTimestampType.setStatus('current')
hh3cICLogTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 119, 5, 2), )
if mibBuilder.loadTexts: hh3cICLogTable.setStatus('current')
hh3cICLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 119, 5, 2, 1), ).setIndexNames((0, "HH3C-INFOCENTER-MIB", "hh3cICDirectionIndex"), (1, "HH3C-INFOCENTER-MIB", "hh3cICModuleName"))
if mibBuilder.loadTexts: hh3cICLogEntry.setStatus('current')
hh3cICLogLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 5, 2, 1, 1), ICMessageLevelType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cICLogLevel.setStatus('current')
hh3cICLogRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 119, 5, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cICLogRowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-INFOCENTER-MIB", hh3cICDirectionName=hh3cICDirectionName, hh3cICLoghostIpaddressType=hh3cICLoghostIpaddressType, hh3cICLoghostIpaddress=hh3cICLoghostIpaddress, hh3cICLogbuffer=hh3cICLogbuffer, hh3cICLogRowStatus=hh3cICLogRowStatus, ICTimeStampType=ICTimeStampType, hh3cICLogbufferOverwrittenMessages=hh3cICLogbufferOverwrittenMessages, hh3cICLogbufferContEntry=hh3cICLogbufferContEntry, hh3cICLogLevel=hh3cICLogLevel, hh3cICLogbufferDroppedMessages=hh3cICLogbufferDroppedMessages, hh3cICLogbufferContTable=hh3cICLogbufferContTable, hh3cICDirection=hh3cICDirection, hh3cICLoghostOperateRowStatus=hh3cICLoghostOperateRowStatus, hh3cICLogbufferCurrentMessages=hh3cICLogbufferCurrentMessages, hh3cICLogObjects=hh3cICLogObjects, hh3cICLoghostTable=hh3cICLoghostTable, hh3cICMaxLoghost=hh3cICMaxLoghost, PYSNMP_MODULE_ID=hh3cInfoCenter, hh3cICModule=hh3cICModule, hh3cICLogTable=hh3cICLogTable, ICMessageLevelType=ICMessageLevelType, hh3cICLoghost=hh3cICLoghost, hh3cICLogGlobalState=hh3cICLogGlobalState, hh3cICLoghostObjects=hh3cICLoghostObjects, hh3cICDirectionIndex=hh3cICDirectionIndex, hh3cICLogbufferSize=hh3cICLogbufferSize, hh3cICLoghostTimestampType=hh3cICLoghostTimestampType, hh3cICDirectionTable=hh3cICDirectionTable, hh3cICLoghostVPNName=hh3cICLoghostVPNName, hh3cICDirectionState=hh3cICDirectionState, hh3cICLogEntry=hh3cICLogEntry, hh3cICLogbufferContIndex=hh3cICLogbufferContIndex, hh3cICLogTimestampType=hh3cICLogTimestampType, ICFacilityType=ICFacilityType, hh3cInfoCenter=hh3cInfoCenter, hh3cICDirectionEntry=hh3cICDirectionEntry, hh3cICModuleEntry=hh3cICModuleEntry, hh3cICModuleName=hh3cICModuleName, hh3cICLog=hh3cICLog, hh3cICLogbufferContDescription=hh3cICLogbufferContDescription, hh3cICLoghostIndex=hh3cICLoghostIndex, hh3cICLoghostEntry=hh3cICLoghostEntry, hh3cICLoghostSourceInterface=hh3cICLoghostSourceInterface, hh3cICLoghostTAddress=hh3cICLoghostTAddress, hh3cICLoghostIpaddressPort=hh3cICLoghostIpaddressPort, hh3cICLogbufferObjects=hh3cICLogbufferObjects, hh3cICMaxLogbufferSize=hh3cICMaxLogbufferSize, hh3cICLoghostFacility=hh3cICLoghostFacility, hh3cICModuleTable=hh3cICModuleTable)
