#
# PySNMP MIB module A3Com-RIP-IPextns-r4-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-RIP-IPEXTNS-R4-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:53:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, Bits, enterprises, IpAddress, ObjectIdentity, Unsigned32, TimeTicks, iso, Integer32, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "Bits", "enterprises", "IpAddress", "ObjectIdentity", "Unsigned32", "TimeTicks", "iso", "Integer32", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
brouterMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2))
a3ComRipIp = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 8))
class RowStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))

a3RipIpUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 5400)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpUpdateTime.setStatus('mandatory')
a3RipIpCtlTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 8, 2), )
if mibBuilder.loadTexts: a3RipIpCtlTable.setStatus('mandatory')
a3RipIpCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1), ).setIndexNames((0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpPortIndex"))
if mibBuilder.loadTexts: a3RipIpCtlEntry.setStatus('mandatory')
a3RipIpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpPortIndex.setStatus('mandatory')
a3RipIpTalkCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("talk", 1), ("noTalk", 2))).clone('noTalk')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpTalkCtl.setStatus('mandatory')
a3RipIpListenCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("listen", 1), ("noListen", 2))).clone('noListen')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpListenCtl.setStatus('mandatory')
a3RipIpTrustedNbrCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpTrustedNbrCtl.setStatus('mandatory')
a3RipIpPoisonCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("poison", 1), ("noPoison", 2))).clone('poison')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpPoisonCtl.setStatus('mandatory')
a3RipIpTriggerCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trigger", 1), ("noTrigger", 2))).clone('trigger')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpTriggerCtl.setStatus('mandatory')
a3RipIpDefMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpDefMetric.setStatus('mandatory')
a3RipIpExtPolCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("none", 2), ("include", 3), ("exclude", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpExtPolCtl.setStatus('mandatory')
a3RipIpIntPolCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("none", 2), ("include", 3), ("exclude", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpIntPolCtl.setStatus('mandatory')
a3RipIpNetPolCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("none", 2), ("include", 3), ("exclude", 4))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpNetPolCtl.setStatus('mandatory')
a3RipIpRcvPolCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("none", 2), ("include", 3), ("exclude", 4))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpRcvPolCtl.setStatus('mandatory')
a3RipIpStaPolCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("none", 2), ("include", 3), ("exclude", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpStaPolCtl.setStatus('mandatory')
a3RipIpUnnAdvCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("subnetAdvUnn", 1), ("netAdvUnn", 2))).clone('subnetAdvUnn')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpUnnAdvCtl.setStatus('mandatory')
a3RipIpBcastCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("subnetBcast", 1), ("all1sBcast", 2))).clone('subnetBcast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpBcastCtl.setStatus('mandatory')
a3RipIpExtPolAllMet = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpExtPolAllMet.setStatus('mandatory')
a3RipIpIntPolAllMet = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpIntPolAllMet.setStatus('mandatory')
a3RipIpNetPolAllMet = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpNetPolAllMet.setStatus('mandatory')
a3RipIpRcvPolAllMet = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpRcvPolAllMet.setStatus('mandatory')
a3RipIpStaPolAllMet = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpStaPolAllMet.setStatus('mandatory')
a3RipIpDynNbrCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamicNbr", 1), ("noDynamicNbr", 2))).clone('noDynamicNbr')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpDynNbrCtl.setStatus('mandatory')
a3RipIpAggregateCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aggregate", 1), ("noAggregate", 2))).clone('noAggregate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpAggregateCtl.setStatus('mandatory')
a3RipIpDeAggregateCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deAggregate", 1), ("noDeAggregate", 2))).clone('noDeAggregate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpDeAggregateCtl.setStatus('mandatory')
a3RipIpNBMAmodeCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fullMesh", 1), ("nonMesh", 2))).clone('nonMesh')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpNBMAmodeCtl.setStatus('mandatory')
a3RipIpExtPolTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 8, 3), )
if mibBuilder.loadTexts: a3RipIpExtPolTable.setStatus('mandatory')
a3RipIpExtPolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 8, 3, 1), ).setIndexNames((0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpExtPolPort"), (0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpExtPolAddr"))
if mibBuilder.loadTexts: a3RipIpExtPolEntry.setStatus('mandatory')
a3RipIpExtPolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpExtPolPort.setStatus('mandatory')
a3RipIpExtPolAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpExtPolAddr.setStatus('mandatory')
a3RipIpExtPolMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpExtPolMetric.setStatus('mandatory')
a3RipIpExtPolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 3, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpExtPolStatus.setStatus('mandatory')
a3RipIpIntPolTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 8, 4), )
if mibBuilder.loadTexts: a3RipIpIntPolTable.setStatus('mandatory')
a3RipIpIntPolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 8, 4, 1), ).setIndexNames((0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpIntPolPort"), (0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpIntPolAddr"))
if mibBuilder.loadTexts: a3RipIpIntPolEntry.setStatus('mandatory')
a3RipIpIntPolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpIntPolPort.setStatus('mandatory')
a3RipIpIntPolAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpIntPolAddr.setStatus('mandatory')
a3RipIpIntPolMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpIntPolMetric.setStatus('mandatory')
a3RipIpIntPolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 4, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpIntPolStatus.setStatus('mandatory')
a3RipIpNetPolTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 8, 5), )
if mibBuilder.loadTexts: a3RipIpNetPolTable.setStatus('mandatory')
a3RipIpNetPolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 8, 5, 1), ).setIndexNames((0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpNetPolPort"), (0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpNetPolAddr"))
if mibBuilder.loadTexts: a3RipIpNetPolEntry.setStatus('mandatory')
a3RipIpNetPolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpNetPolPort.setStatus('mandatory')
a3RipIpNetPolAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpNetPolAddr.setStatus('mandatory')
a3RipIpNetPolMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpNetPolMetric.setStatus('mandatory')
a3RipIpNetPolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 5, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpNetPolStatus.setStatus('mandatory')
a3RipIpRcvPolTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 8, 6), )
if mibBuilder.loadTexts: a3RipIpRcvPolTable.setStatus('mandatory')
a3RipIpRcvPolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 8, 6, 1), ).setIndexNames((0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpRcvPolPort"), (0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpRcvPolAddr"))
if mibBuilder.loadTexts: a3RipIpRcvPolEntry.setStatus('mandatory')
a3RipIpRcvPolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpRcvPolPort.setStatus('mandatory')
a3RipIpRcvPolAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpRcvPolAddr.setStatus('mandatory')
a3RipIpRcvPolMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpRcvPolMetric.setStatus('mandatory')
a3RipIpRcvPolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 6, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpRcvPolStatus.setStatus('mandatory')
a3RipIpStaPolTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 8, 7), )
if mibBuilder.loadTexts: a3RipIpStaPolTable.setStatus('mandatory')
a3RipIpStaPolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 8, 7, 1), ).setIndexNames((0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpStaPolPort"), (0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpStaPolAddr"))
if mibBuilder.loadTexts: a3RipIpStaPolEntry.setStatus('mandatory')
a3RipIpStaPolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpStaPolPort.setStatus('mandatory')
a3RipIpStaPolAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpStaPolAddr.setStatus('mandatory')
a3RipIpStaPolMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpStaPolMetric.setStatus('mandatory')
a3RipIpStaPolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 7, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpStaPolStatus.setStatus('mandatory')
a3RipIpNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 8, 8), )
if mibBuilder.loadTexts: a3RipIpNeighborTable.setStatus('mandatory')
a3RipIpNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 8, 8, 1), ).setIndexNames((0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpNeighborPort"), (0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpNeighborAddr"))
if mibBuilder.loadTexts: a3RipIpNeighborEntry.setStatus('mandatory')
a3RipIpNeighborPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpNeighborPort.setStatus('mandatory')
a3RipIpNeighborAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpNeighborAddr.setStatus('mandatory')
a3RipIpNeighborStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 8, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpNeighborStatus.setStatus('mandatory')
a3RipIpTrustedNbrTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 8, 9), )
if mibBuilder.loadTexts: a3RipIpTrustedNbrTable.setStatus('mandatory')
a3RipIpTrustedNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 8, 9, 1), ).setIndexNames((0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpTrustedNbrPort"), (0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpTrustedNbrAddr"))
if mibBuilder.loadTexts: a3RipIpTrustedNbrEntry.setStatus('mandatory')
a3RipIpTrustedNbrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpTrustedNbrPort.setStatus('mandatory')
a3RipIpTrustedNbrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpTrustedNbrAddr.setStatus('mandatory')
a3RipIpTrustedNbrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 9, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpTrustedNbrStatus.setStatus('mandatory')
a3RipIpImpMetTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 8, 10), )
if mibBuilder.loadTexts: a3RipIpImpMetTable.setStatus('mandatory')
a3RipIpImpMetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 8, 10, 1), ).setIndexNames((0, "A3Com-RIP-IPextns-r4-MIB", "a3RipIpImpMetProtocol"))
if mibBuilder.loadTexts: a3RipIpImpMetEntry.setStatus('mandatory')
a3RipIpImpMetProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ospf", 1), ("iisis", 2), ("egp", 3), ("bgp", 4), ("static", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3RipIpImpMetProtocol.setStatus('mandatory')
a3RipIpImpMetOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("multiply", 1), ("divide", 2))).clone('divide')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpImpMetOperation.setStatus('mandatory')
a3RipIpImpMetOperand = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 8, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1073741823))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3RipIpImpMetOperand.setStatus('mandatory')
mibBuilder.exportSymbols("A3Com-RIP-IPextns-r4-MIB", a3RipIpTrustedNbrTable=a3RipIpTrustedNbrTable, a3RipIpDefMetric=a3RipIpDefMetric, a3RipIpDynNbrCtl=a3RipIpDynNbrCtl, a3RipIpExtPolEntry=a3RipIpExtPolEntry, a3RipIpExtPolStatus=a3RipIpExtPolStatus, a3RipIpIntPolAddr=a3RipIpIntPolAddr, a3RipIpIntPolEntry=a3RipIpIntPolEntry, a3RipIpTrustedNbrCtl=a3RipIpTrustedNbrCtl, a3RipIpAggregateCtl=a3RipIpAggregateCtl, a3RipIpUnnAdvCtl=a3RipIpUnnAdvCtl, a3ComRipIp=a3ComRipIp, brouterMIB=brouterMIB, a3RipIpRcvPolEntry=a3RipIpRcvPolEntry, a3RipIpStaPolTable=a3RipIpStaPolTable, a3RipIpNeighborPort=a3RipIpNeighborPort, a3RipIpRcvPolAddr=a3RipIpRcvPolAddr, a3RipIpNetPolTable=a3RipIpNetPolTable, a3RipIpNeighborAddr=a3RipIpNeighborAddr, a3RipIpRcvPolPort=a3RipIpRcvPolPort, a3RipIpPoisonCtl=a3RipIpPoisonCtl, a3RipIpStaPolPort=a3RipIpStaPolPort, a3RipIpImpMetOperation=a3RipIpImpMetOperation, a3RipIpTalkCtl=a3RipIpTalkCtl, a3RipIpNeighborStatus=a3RipIpNeighborStatus, a3RipIpExtPolPort=a3RipIpExtPolPort, a3RipIpIntPolTable=a3RipIpIntPolTable, a3RipIpRcvPolAllMet=a3RipIpRcvPolAllMet, a3RipIpImpMetOperand=a3RipIpImpMetOperand, a3RipIpIntPolMetric=a3RipIpIntPolMetric, a3RipIpStaPolAddr=a3RipIpStaPolAddr, a3RipIpImpMetEntry=a3RipIpImpMetEntry, a3RipIpNeighborTable=a3RipIpNeighborTable, a3Com=a3Com, RowStatus=RowStatus, a3RipIpCtlTable=a3RipIpCtlTable, a3RipIpUpdateTime=a3RipIpUpdateTime, a3RipIpExtPolAllMet=a3RipIpExtPolAllMet, a3RipIpNetPolAllMet=a3RipIpNetPolAllMet, a3RipIpExtPolTable=a3RipIpExtPolTable, a3RipIpRcvPolTable=a3RipIpRcvPolTable, a3RipIpNeighborEntry=a3RipIpNeighborEntry, a3RipIpIntPolAllMet=a3RipIpIntPolAllMet, a3RipIpImpMetTable=a3RipIpImpMetTable, a3RipIpNetPolAddr=a3RipIpNetPolAddr, a3RipIpStaPolMetric=a3RipIpStaPolMetric, a3RipIpRcvPolMetric=a3RipIpRcvPolMetric, a3RipIpImpMetProtocol=a3RipIpImpMetProtocol, a3RipIpTriggerCtl=a3RipIpTriggerCtl, a3RipIpIntPolPort=a3RipIpIntPolPort, a3RipIpCtlEntry=a3RipIpCtlEntry, a3RipIpStaPolStatus=a3RipIpStaPolStatus, a3RipIpTrustedNbrStatus=a3RipIpTrustedNbrStatus, a3RipIpExtPolMetric=a3RipIpExtPolMetric, a3RipIpRcvPolCtl=a3RipIpRcvPolCtl, a3RipIpListenCtl=a3RipIpListenCtl, a3RipIpStaPolCtl=a3RipIpStaPolCtl, a3RipIpNetPolMetric=a3RipIpNetPolMetric, a3RipIpNetPolEntry=a3RipIpNetPolEntry, a3RipIpPortIndex=a3RipIpPortIndex, a3RipIpIntPolCtl=a3RipIpIntPolCtl, a3RipIpRcvPolStatus=a3RipIpRcvPolStatus, a3RipIpNBMAmodeCtl=a3RipIpNBMAmodeCtl, a3RipIpNetPolStatus=a3RipIpNetPolStatus, a3RipIpDeAggregateCtl=a3RipIpDeAggregateCtl, a3RipIpTrustedNbrEntry=a3RipIpTrustedNbrEntry, a3RipIpIntPolStatus=a3RipIpIntPolStatus, a3RipIpNetPolCtl=a3RipIpNetPolCtl, a3RipIpBcastCtl=a3RipIpBcastCtl, a3RipIpExtPolAddr=a3RipIpExtPolAddr, a3RipIpNetPolPort=a3RipIpNetPolPort, a3RipIpExtPolCtl=a3RipIpExtPolCtl, a3RipIpTrustedNbrPort=a3RipIpTrustedNbrPort, a3RipIpStaPolEntry=a3RipIpStaPolEntry, a3RipIpStaPolAllMet=a3RipIpStaPolAllMet, a3RipIpTrustedNbrAddr=a3RipIpTrustedNbrAddr)
