#
# PySNMP MIB module BAS-PBRF-OSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAS-PBRF-OSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:17:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
BasInterfaceId, BasSlotId, basPbrfOSPF, BasLogicalPortId, BasChassisId = mibBuilder.importSymbols("BAS-MIB", "BasInterfaceId", "BasSlotId", "basPbrfOSPF", "BasLogicalPortId", "BasChassisId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, NotificationType, TimeTicks, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, Bits, ModuleIdentity, Counter32, Counter64, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "TimeTicks", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "Bits", "ModuleIdentity", "Counter32", "Counter64", "MibIdentifier", "Unsigned32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
basPbrfOSPFMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1))
if mibBuilder.loadTexts: basPbrfOSPFMIB.setLastUpdated('9812220800Z')
if mibBuilder.loadTexts: basPbrfOSPFMIB.setOrganization('Broadband Access Systems, Inc.')
basPbrfOSPFImport = MibIdentifier((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1))
basPbrfOSPFExport = MibIdentifier((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2))
basPbrfOSPFImportTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1), )
if mibBuilder.loadTexts: basPbrfOSPFImportTable.setStatus('current')
basPbrfOSPFImportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1, 1), ).setIndexNames((0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportChassis"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportSlot"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportIf"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportLPort"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportIndex"))
if mibBuilder.loadTexts: basPbrfOSPFImportEntry.setStatus('current')
basPbrfOSPFImportChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1, 1, 1), BasChassisId())
if mibBuilder.loadTexts: basPbrfOSPFImportChassis.setStatus('current')
basPbrfOSPFImportSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1, 1, 2), BasSlotId())
if mibBuilder.loadTexts: basPbrfOSPFImportSlot.setStatus('current')
basPbrfOSPFImportIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1, 1, 3), BasInterfaceId())
if mibBuilder.loadTexts: basPbrfOSPFImportIf.setStatus('current')
basPbrfOSPFImportLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1, 1, 4), BasLogicalPortId())
if mibBuilder.loadTexts: basPbrfOSPFImportLPort.setStatus('current')
basPbrfOSPFImportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1, 1, 5), Integer32())
if mibBuilder.loadTexts: basPbrfOSPFImportIndex.setStatus('current')
basPbrfOSPFImportTemplateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateCount.setStatus('current')
basPbrfOSPFImportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportRowStatus.setStatus('current')
basPbrfOSPFImportDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportDescr.setStatus('current')
basPbrfOSPFImportFilterTempTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2), )
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempTable.setStatus('current')
basPbrfOSPFImportFilterTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2, 1), ).setIndexNames((0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportFilterTempChassis"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportFilterTempSlot"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportFilterTempIf"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportFilterTempLPort"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportFilterTempIndex"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportFilterTempTemplate"))
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempEntry.setStatus('current')
basPbrfOSPFImportFilterTempChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2, 1, 1), BasChassisId())
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempChassis.setStatus('current')
basPbrfOSPFImportFilterTempSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2, 1, 2), BasSlotId())
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempSlot.setStatus('current')
basPbrfOSPFImportFilterTempIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2, 1, 3), BasInterfaceId())
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempIf.setStatus('current')
basPbrfOSPFImportFilterTempLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2, 1, 4), BasLogicalPortId())
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempLPort.setStatus('current')
basPbrfOSPFImportFilterTempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2, 1, 5), Integer32())
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempIndex.setStatus('current')
basPbrfOSPFImportFilterTempTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2, 1, 6), Integer32())
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempTemplate.setStatus('current')
basPbrfOSPFImportFilterTempOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempOrder.setStatus('current')
basPbrfOSPFImportFilterTempRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportFilterTempRowStatus.setStatus('current')
basPbrfOSPFImportTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3), )
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateTable.setStatus('current')
basPbrfOSPFImportTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1), ).setIndexNames((0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportTemplateChassis"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportTemplateSlot"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportTemplateIf"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportTemplateLPort"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFImportTemplateIndex"))
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateEntry.setStatus('current')
basPbrfOSPFImportTemplateChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 1), BasChassisId())
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateChassis.setStatus('current')
basPbrfOSPFImportTemplateSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 2), BasSlotId())
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateSlot.setStatus('current')
basPbrfOSPFImportTemplateIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 3), BasInterfaceId())
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateIf.setStatus('current')
basPbrfOSPFImportTemplateLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 4), BasLogicalPortId())
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateLPort.setStatus('current')
basPbrfOSPFImportTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 5), Integer32())
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateIndex.setStatus('current')
basPbrfOSPFImportTemplateRouteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateRouteAddr.setStatus('current')
basPbrfOSPFImportTemplateRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateRouteMask.setStatus('current')
basPbrfOSPFImportTemplatePeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplatePeerAddr.setStatus('current')
basPbrfOSPFImportTemplatePeerMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplatePeerMask.setStatus('current')
basPbrfOSPFImportTemplateTag = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateTag.setStatus('current')
basPbrfOSPFImportTemplateKeyBits = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateKeyBits.setStatus('current')
basPbrfOSPFImportTemplatePref = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplatePref.setStatus('current')
basPbrfOSPFImportTemplateFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateFlags.setStatus('current')
basPbrfOSPFImportTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateRowStatus.setStatus('current')
basPbrfOSPFImportTemplateDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 1, 3, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFImportTemplateDescr.setStatus('current')
basPbrfOSPFExportTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1), )
if mibBuilder.loadTexts: basPbrfOSPFExportTable.setStatus('current')
basPbrfOSPFExportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1, 1), ).setIndexNames((0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportChassis"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportSlot"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportIf"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportLPort"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportIndex"))
if mibBuilder.loadTexts: basPbrfOSPFExportEntry.setStatus('current')
basPbrfOSPFExportChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1, 1, 1), BasChassisId())
if mibBuilder.loadTexts: basPbrfOSPFExportChassis.setStatus('current')
basPbrfOSPFExportSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1, 1, 2), BasSlotId())
if mibBuilder.loadTexts: basPbrfOSPFExportSlot.setStatus('current')
basPbrfOSPFExportIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1, 1, 3), BasInterfaceId())
if mibBuilder.loadTexts: basPbrfOSPFExportIf.setStatus('current')
basPbrfOSPFExportLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1, 1, 4), BasLogicalPortId())
if mibBuilder.loadTexts: basPbrfOSPFExportLPort.setStatus('current')
basPbrfOSPFExportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1, 1, 5), Integer32())
if mibBuilder.loadTexts: basPbrfOSPFExportIndex.setStatus('current')
basPbrfOSPFExportTemplateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateCount.setStatus('current')
basPbrfOSPFExportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportRowStatus.setStatus('current')
basPbrfOSPFExportDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportDescr.setStatus('current')
basPbrfOSPFExportFilterTempTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2), )
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempTable.setStatus('current')
basPbrfOSPFExportFilterTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2, 1), ).setIndexNames((0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportFilterTempChassis"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportFilterTempSlot"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportFilterTempIf"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportFilterTempLPort"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportFilterTempIndex"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportFilterTempTemplate"))
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempEntry.setStatus('current')
basPbrfOSPFExportFilterTempChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2, 1, 1), BasChassisId())
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempChassis.setStatus('current')
basPbrfOSPFExportFilterTempSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2, 1, 2), BasSlotId())
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempSlot.setStatus('current')
basPbrfOSPFExportFilterTempIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2, 1, 3), BasInterfaceId())
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempIf.setStatus('current')
basPbrfOSPFExportFilterTempLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2, 1, 4), BasLogicalPortId())
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempLPort.setStatus('current')
basPbrfOSPFExportFilterTempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2, 1, 5), Integer32())
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempIndex.setStatus('current')
basPbrfOSPFExportFilterTempTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2, 1, 6), Integer32())
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempTemplate.setStatus('current')
basPbrfOSPFExportFilterTempOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempOrder.setStatus('current')
basPbrfOSPFExportFilterTempRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportFilterTempRowStatus.setStatus('current')
basPbrfOSPFExportTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3), )
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateTable.setStatus('current')
basPbrfOSPFExportTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1), ).setIndexNames((0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportTemplateChassis"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportTemplateSlot"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportTemplateIf"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportTemplateLPort"), (0, "BAS-PBRF-OSPF-MIB", "basPbrfOSPFExportTemplateIndex"))
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateEntry.setStatus('current')
basPbrfOSPFExportTemplateChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 1), BasChassisId())
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateChassis.setStatus('current')
basPbrfOSPFExportTemplateSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 2), BasSlotId())
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateSlot.setStatus('current')
basPbrfOSPFExportTemplateIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 3), BasInterfaceId())
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateIf.setStatus('current')
basPbrfOSPFExportTemplateLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 4), BasLogicalPortId())
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateLPort.setStatus('current')
basPbrfOSPFExportTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 5), Integer32())
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateIndex.setStatus('current')
basPbrfOSPFExportTemplateRouteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateRouteAddr.setStatus('current')
basPbrfOSPFExportTemplateRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateRouteMask.setStatus('current')
basPbrfOSPFExportTemplateProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateProtocol.setStatus('current')
basPbrfOSPFExportTemplateSpecific1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateSpecific1.setStatus('current')
basPbrfOSPFExportTemplateSpecific2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 10), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateSpecific2.setStatus('current')
basPbrfOSPFExportTemplateTag = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateTag.setStatus('current')
basPbrfOSPFExportTemplateKeyBits = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateKeyBits.setStatus('current')
basPbrfOSPFExportTemplateMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateMetric.setStatus('current')
basPbrfOSPFExportTemplateFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateFlags.setStatus('current')
basPbrfOSPFExportTemplateActionTag = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateActionTag.setStatus('current')
basPbrfOSPFExportTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateRowStatus.setStatus('current')
basPbrfOSPFExportTemplateDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 11, 2, 1, 2, 3, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basPbrfOSPFExportTemplateDescr.setStatus('current')
mibBuilder.exportSymbols("BAS-PBRF-OSPF-MIB", basPbrfOSPFImportFilterTempOrder=basPbrfOSPFImportFilterTempOrder, basPbrfOSPFImportFilterTempChassis=basPbrfOSPFImportFilterTempChassis, basPbrfOSPFImportTemplateRouteAddr=basPbrfOSPFImportTemplateRouteAddr, basPbrfOSPFImportTemplateRouteMask=basPbrfOSPFImportTemplateRouteMask, basPbrfOSPFExportTemplateSlot=basPbrfOSPFExportTemplateSlot, basPbrfOSPFImportIndex=basPbrfOSPFImportIndex, basPbrfOSPFImportFilterTempEntry=basPbrfOSPFImportFilterTempEntry, basPbrfOSPFImportTemplateRowStatus=basPbrfOSPFImportTemplateRowStatus, basPbrfOSPFExportFilterTempEntry=basPbrfOSPFExportFilterTempEntry, basPbrfOSPFExportFilterTempRowStatus=basPbrfOSPFExportFilterTempRowStatus, basPbrfOSPFImportDescr=basPbrfOSPFImportDescr, basPbrfOSPFImportFilterTempLPort=basPbrfOSPFImportFilterTempLPort, basPbrfOSPFImportIf=basPbrfOSPFImportIf, basPbrfOSPFExportTemplateDescr=basPbrfOSPFExportTemplateDescr, basPbrfOSPFExport=basPbrfOSPFExport, basPbrfOSPFImportTemplateLPort=basPbrfOSPFImportTemplateLPort, basPbrfOSPFImportChassis=basPbrfOSPFImportChassis, basPbrfOSPFExportFilterTempTemplate=basPbrfOSPFExportFilterTempTemplate, basPbrfOSPFExportTable=basPbrfOSPFExportTable, basPbrfOSPFImportTemplatePref=basPbrfOSPFImportTemplatePref, basPbrfOSPFExportFilterTempIndex=basPbrfOSPFExportFilterTempIndex, basPbrfOSPFImportFilterTempSlot=basPbrfOSPFImportFilterTempSlot, basPbrfOSPFExportTemplateEntry=basPbrfOSPFExportTemplateEntry, basPbrfOSPFExportFilterTempTable=basPbrfOSPFExportFilterTempTable, basPbrfOSPFExportTemplateCount=basPbrfOSPFExportTemplateCount, basPbrfOSPFExportFilterTempOrder=basPbrfOSPFExportFilterTempOrder, basPbrfOSPFExportTemplateTag=basPbrfOSPFExportTemplateTag, basPbrfOSPFImportFilterTempTemplate=basPbrfOSPFImportFilterTempTemplate, basPbrfOSPFExportIf=basPbrfOSPFExportIf, basPbrfOSPFImportTemplateTable=basPbrfOSPFImportTemplateTable, basPbrfOSPFImportRowStatus=basPbrfOSPFImportRowStatus, basPbrfOSPFImportTemplateEntry=basPbrfOSPFImportTemplateEntry, basPbrfOSPFImportFilterTempRowStatus=basPbrfOSPFImportFilterTempRowStatus, basPbrfOSPFImportSlot=basPbrfOSPFImportSlot, basPbrfOSPFExportRowStatus=basPbrfOSPFExportRowStatus, basPbrfOSPFExportIndex=basPbrfOSPFExportIndex, basPbrfOSPFImportTemplatePeerMask=basPbrfOSPFImportTemplatePeerMask, basPbrfOSPFImportTemplateIf=basPbrfOSPFImportTemplateIf, basPbrfOSPFExportChassis=basPbrfOSPFExportChassis, basPbrfOSPFExportFilterTempChassis=basPbrfOSPFExportFilterTempChassis, basPbrfOSPFImportTemplateSlot=basPbrfOSPFImportTemplateSlot, basPbrfOSPFImportFilterTempIndex=basPbrfOSPFImportFilterTempIndex, basPbrfOSPFImportTemplateChassis=basPbrfOSPFImportTemplateChassis, basPbrfOSPFExportTemplateIndex=basPbrfOSPFExportTemplateIndex, basPbrfOSPFImportTemplateDescr=basPbrfOSPFImportTemplateDescr, basPbrfOSPFExportSlot=basPbrfOSPFExportSlot, basPbrfOSPFExportTemplateProtocol=basPbrfOSPFExportTemplateProtocol, basPbrfOSPFImportFilterTempIf=basPbrfOSPFImportFilterTempIf, basPbrfOSPFImportEntry=basPbrfOSPFImportEntry, basPbrfOSPFExportTemplateMetric=basPbrfOSPFExportTemplateMetric, basPbrfOSPFMIB=basPbrfOSPFMIB, basPbrfOSPFImportLPort=basPbrfOSPFImportLPort, basPbrfOSPFExportFilterTempLPort=basPbrfOSPFExportFilterTempLPort, basPbrfOSPFExportTemplateActionTag=basPbrfOSPFExportTemplateActionTag, basPbrfOSPFExportTemplateRowStatus=basPbrfOSPFExportTemplateRowStatus, basPbrfOSPFExportTemplateSpecific1=basPbrfOSPFExportTemplateSpecific1, basPbrfOSPFImportTemplateKeyBits=basPbrfOSPFImportTemplateKeyBits, basPbrfOSPFExportTemplateRouteAddr=basPbrfOSPFExportTemplateRouteAddr, basPbrfOSPFExportTemplateTable=basPbrfOSPFExportTemplateTable, PYSNMP_MODULE_ID=basPbrfOSPFMIB, basPbrfOSPFExportLPort=basPbrfOSPFExportLPort, basPbrfOSPFImport=basPbrfOSPFImport, basPbrfOSPFExportFilterTempSlot=basPbrfOSPFExportFilterTempSlot, basPbrfOSPFImportFilterTempTable=basPbrfOSPFImportFilterTempTable, basPbrfOSPFImportTemplateIndex=basPbrfOSPFImportTemplateIndex, basPbrfOSPFExportTemplateKeyBits=basPbrfOSPFExportTemplateKeyBits, basPbrfOSPFExportEntry=basPbrfOSPFExportEntry, basPbrfOSPFImportTemplateTag=basPbrfOSPFImportTemplateTag, basPbrfOSPFImportTemplateCount=basPbrfOSPFImportTemplateCount, basPbrfOSPFImportTemplateFlags=basPbrfOSPFImportTemplateFlags, basPbrfOSPFExportTemplateSpecific2=basPbrfOSPFExportTemplateSpecific2, basPbrfOSPFExportTemplateChassis=basPbrfOSPFExportTemplateChassis, basPbrfOSPFExportTemplateRouteMask=basPbrfOSPFExportTemplateRouteMask, basPbrfOSPFImportTable=basPbrfOSPFImportTable, basPbrfOSPFImportTemplatePeerAddr=basPbrfOSPFImportTemplatePeerAddr, basPbrfOSPFExportTemplateFlags=basPbrfOSPFExportTemplateFlags, basPbrfOSPFExportDescr=basPbrfOSPFExportDescr, basPbrfOSPFExportTemplateIf=basPbrfOSPFExportTemplateIf, basPbrfOSPFExportFilterTempIf=basPbrfOSPFExportFilterTempIf, basPbrfOSPFExportTemplateLPort=basPbrfOSPFExportTemplateLPort)
