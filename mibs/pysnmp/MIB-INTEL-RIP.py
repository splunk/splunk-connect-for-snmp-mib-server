#
# PySNMP MIB module MIB-INTEL-RIP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MIB-INTEL-RIP
# Produced by pysmi-0.3.4 at Mon Apr 29 20:01:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Counter32, NotificationType, iso, ObjectIdentity, Unsigned32, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, IpAddress, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "NotificationType", "iso", "ObjectIdentity", "Unsigned32", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "IpAddress", "TimeTicks", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rip = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 39))
ripIpRouteTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 39, 1), )
if mibBuilder.loadTexts: ripIpRouteTable.setStatus('optional')
ripIpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1), ).setIndexNames((0, "MIB-INTEL-RIP", "ripIpRouteChassis"), (0, "MIB-INTEL-RIP", "ripIpRouteModule"), (0, "MIB-INTEL-RIP", "ripIpRouteInst"), (0, "MIB-INTEL-RIP", "ripIpRouteDest"), (0, "MIB-INTEL-RIP", "ripIpRouteMask"), (0, "MIB-INTEL-RIP", "ripIpIfIndex"), (0, "MIB-INTEL-RIP", "ripIpRouteNextHop"))
if mibBuilder.loadTexts: ripIpRouteEntry.setStatus('optional')
ripIpRouteChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteChassis.setStatus('optional')
ripIpRouteModule = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteModule.setStatus('optional')
ripIpRouteInst = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteInst.setStatus('optional')
ripIpRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteDest.setStatus('optional')
ripIpRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteMask.setStatus('optional')
ripIpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpIfIndex.setStatus('optional')
ripIpRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteNextHop.setStatus('optional')
ripIpRoutePref = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRoutePref.setStatus('optional')
ripIpRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteMetric.setStatus('optional')
ripIpRouteState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripIpRouteState.setStatus('optional')
ripIpRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteAge.setStatus('optional')
ripIpRouteProtoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rip1", 1), ("rip2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteProtoVersion.setStatus('optional')
ripIpRouteProtoTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 39, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIpRouteProtoTrigger.setStatus('optional')
mibBuilder.exportSymbols("MIB-INTEL-RIP", ripIpRouteDest=ripIpRouteDest, ripIpRouteState=ripIpRouteState, ripIpRouteNextHop=ripIpRouteNextHop, ripIpRouteMetric=ripIpRouteMetric, ripIpRouteProtoVersion=ripIpRouteProtoVersion, ripIpRouteProtoTrigger=ripIpRouteProtoTrigger, ripIpRouteMask=ripIpRouteMask, ripIpRouteAge=ripIpRouteAge, ripIpRouteModule=ripIpRouteModule, rip=rip, ripIpRouteTable=ripIpRouteTable, ripIpRouteChassis=ripIpRouteChassis, ripIpRouteInst=ripIpRouteInst, ripIpRoutePref=ripIpRoutePref, ripIpRouteEntry=ripIpRouteEntry, ripIpIfIndex=ripIpIfIndex)
