#
# PySNMP MIB module Nortel-Magellan-Passport-SourceRouteEndStationMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-SourceRouteEndStationMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
Counter32, Gauge32, StorageType, Unsigned32, DisplayString, RowStatus = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Counter32", "Gauge32", "StorageType", "Unsigned32", "DisplayString", "RowStatus")
AsciiStringIndex, DashedHexString, HexString, NonReplicated, AsciiString = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "AsciiStringIndex", "DashedHexString", "HexString", "NonReplicated", "AsciiString")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
vrIndex, vr = mibBuilder.importSymbols("Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex", "vr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Integer32, TimeTicks, Bits, ObjectIdentity, Counter32, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, iso, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "TimeTicks", "Bits", "ObjectIdentity", "Counter32", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "iso", "NotificationType", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sourceRouteEndStationMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 54))
vrSres = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13))
vrSresRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 1), )
if mibBuilder.loadTexts: vrSresRowStatusTable.setStatus('mandatory')
vrSresRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresIndex"))
if mibBuilder.loadTexts: vrSresRowStatusEntry.setStatus('mandatory')
vrSresRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrSresRowStatus.setStatus('mandatory')
vrSresComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresComponentName.setStatus('mandatory')
vrSresStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresStorageType.setStatus('mandatory')
vrSresIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrSresIndex.setStatus('mandatory')
vrSresAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 10), )
if mibBuilder.loadTexts: vrSresAdminControlTable.setStatus('mandatory')
vrSresAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresIndex"))
if mibBuilder.loadTexts: vrSresAdminControlEntry.setStatus('mandatory')
vrSresSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresSnmpAdminStatus.setStatus('mandatory')
vrSresProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 11), )
if mibBuilder.loadTexts: vrSresProvTable.setStatus('mandatory')
vrSresProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresIndex"))
if mibBuilder.loadTexts: vrSresProvEntry.setStatus('mandatory')
vrSresRouteTableNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrSresRouteTableNumEntries.setStatus('mandatory')
vrSresAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(200, 1000000)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrSresAgingTime.setStatus('mandatory')
vrSresRouteDescriptorLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 14)).clone(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresRouteDescriptorLength.setStatus('mandatory')
vrSresOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 12), )
if mibBuilder.loadTexts: vrSresOperStatusTable.setStatus('mandatory')
vrSresOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresIndex"))
if mibBuilder.loadTexts: vrSresOperStatusEntry.setStatus('mandatory')
vrSresSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresSnmpOperStatus.setStatus('mandatory')
vrSresStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 13), )
if mibBuilder.loadTexts: vrSresStateTable.setStatus('mandatory')
vrSresStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresIndex"))
if mibBuilder.loadTexts: vrSresStateEntry.setStatus('mandatory')
vrSresAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresAdminState.setStatus('mandatory')
vrSresOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresOperationalState.setStatus('mandatory')
vrSresUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresUsageState.setStatus('mandatory')
vrSresOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 14), )
if mibBuilder.loadTexts: vrSresOperTable.setStatus('mandatory')
vrSresOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresIndex"))
if mibBuilder.loadTexts: vrSresOperEntry.setStatus('mandatory')
vrSresRtEntriesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresRtEntriesUsed.setStatus('mandatory')
vrSresRtEntriesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 14, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresRtEntriesFree.setStatus('mandatory')
vrSresRtEntriesDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresRtEntriesDenied.setStatus('mandatory')
vrSresRe = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2))
vrSresReRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 1), )
if mibBuilder.loadTexts: vrSresReRowStatusTable.setStatus('mandatory')
vrSresReRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresReDestMacAddressIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresReProtocolPortNameIndex"))
if mibBuilder.loadTexts: vrSresReRowStatusEntry.setStatus('mandatory')
vrSresReRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresReRowStatus.setStatus('mandatory')
vrSresReComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresReComponentName.setStatus('mandatory')
vrSresReStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresReStorageType.setStatus('mandatory')
vrSresReDestMacAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: vrSresReDestMacAddressIndex.setStatus('mandatory')
vrSresReProtocolPortNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 1, 1, 11), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: vrSresReProtocolPortNameIndex.setStatus('mandatory')
vrSresReOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 10), )
if mibBuilder.loadTexts: vrSresReOperTable.setStatus('mandatory')
vrSresReOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresReDestMacAddressIndex"), (0, "Nortel-Magellan-Passport-SourceRouteEndStationMIB", "vrSresReProtocolPortNameIndex"))
if mibBuilder.loadTexts: vrSresReOperEntry.setStatus('mandatory')
vrSresReRouteControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 10, 1, 1), HexString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresReRouteControl.setStatus('mandatory')
vrSresReRifLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresReRifLength.setStatus('mandatory')
vrSresReRdDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("leftToRight", 0), ("rightToLeft", 1), ("noRif", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresReRdDirection.setStatus('mandatory')
vrSresReRouteDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 13, 2, 10, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 90))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrSresReRouteDescr.setStatus('mandatory')
sourceRouteEndStationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 54, 1))
sourceRouteEndStationGroupBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 54, 1, 4))
sourceRouteEndStationGroupBD01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 54, 1, 4, 2))
sourceRouteEndStationGroupBD01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 54, 1, 4, 2, 2))
sourceRouteEndStationCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 54, 3))
sourceRouteEndStationCapabilitiesBD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 54, 3, 4))
sourceRouteEndStationCapabilitiesBD01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 54, 3, 4, 2))
sourceRouteEndStationCapabilitiesBD01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 54, 3, 4, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-SourceRouteEndStationMIB", vrSresAdminState=vrSresAdminState, vrSresRouteTableNumEntries=vrSresRouteTableNumEntries, sourceRouteEndStationCapabilitiesBD=sourceRouteEndStationCapabilitiesBD, vrSresReDestMacAddressIndex=vrSresReDestMacAddressIndex, vrSresReStorageType=vrSresReStorageType, vrSresReRouteControl=vrSresReRouteControl, vrSresIndex=vrSresIndex, vrSresProvTable=vrSresProvTable, sourceRouteEndStationCapabilities=sourceRouteEndStationCapabilities, vrSresStorageType=vrSresStorageType, vrSres=vrSres, vrSresRe=vrSresRe, vrSresReComponentName=vrSresReComponentName, vrSresReProtocolPortNameIndex=vrSresReProtocolPortNameIndex, sourceRouteEndStationGroupBD01=sourceRouteEndStationGroupBD01, vrSresReRowStatus=vrSresReRowStatus, vrSresOperationalState=vrSresOperationalState, vrSresReRowStatusEntry=vrSresReRowStatusEntry, vrSresAdminControlTable=vrSresAdminControlTable, vrSresUsageState=vrSresUsageState, sourceRouteEndStationCapabilitiesBD01=sourceRouteEndStationCapabilitiesBD01, vrSresRowStatus=vrSresRowStatus, vrSresRowStatusEntry=vrSresRowStatusEntry, vrSresReRowStatusTable=vrSresReRowStatusTable, vrSresStateTable=vrSresStateTable, vrSresReOperTable=vrSresReOperTable, vrSresComponentName=vrSresComponentName, vrSresRowStatusTable=vrSresRowStatusTable, sourceRouteEndStationMIB=sourceRouteEndStationMIB, vrSresRtEntriesFree=vrSresRtEntriesFree, vrSresSnmpAdminStatus=vrSresSnmpAdminStatus, sourceRouteEndStationGroup=sourceRouteEndStationGroup, vrSresReOperEntry=vrSresReOperEntry, vrSresOperStatusTable=vrSresOperStatusTable, vrSresOperStatusEntry=vrSresOperStatusEntry, vrSresReRdDirection=vrSresReRdDirection, vrSresRtEntriesDenied=vrSresRtEntriesDenied, sourceRouteEndStationGroupBD=sourceRouteEndStationGroupBD, vrSresStateEntry=vrSresStateEntry, vrSresOperEntry=vrSresOperEntry, sourceRouteEndStationGroupBD01A=sourceRouteEndStationGroupBD01A, vrSresSnmpOperStatus=vrSresSnmpOperStatus, vrSresAgingTime=vrSresAgingTime, sourceRouteEndStationCapabilitiesBD01A=sourceRouteEndStationCapabilitiesBD01A, vrSresOperTable=vrSresOperTable, vrSresProvEntry=vrSresProvEntry, vrSresRouteDescriptorLength=vrSresRouteDescriptorLength, vrSresReRouteDescr=vrSresReRouteDescr, vrSresAdminControlEntry=vrSresAdminControlEntry, vrSresRtEntriesUsed=vrSresRtEntriesUsed, vrSresReRifLength=vrSresReRifLength)
