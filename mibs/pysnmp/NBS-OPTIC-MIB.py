#
# PySNMP MIB module NBS-OPTIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NBS-OPTIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:07:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
nbs, = mibBuilder.importSymbols("NBS-MIB", "nbs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, Unsigned32, TimeTicks, ModuleIdentity, Counter64, iso, Gauge32, IpAddress, MibIdentifier, NotificationType, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "Unsigned32", "TimeTicks", "ModuleIdentity", "Counter64", "iso", "Gauge32", "IpAddress", "MibIdentifier", "NotificationType", "Integer32", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nbsOpticMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 213))
if mibBuilder.loadTexts: nbsOpticMib.setLastUpdated('201209260000Z')
if mibBuilder.loadTexts: nbsOpticMib.setOrganization('NBS')
nbsOpticPortGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 213, 1))
if mibBuilder.loadTexts: nbsOpticPortGrp.setStatus('current')
nbsOpticPortTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 213, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortTableSize.setStatus('current')
nbsOpticPortTable = MibTable((1, 3, 6, 1, 4, 1, 629, 213, 1, 2), )
if mibBuilder.loadTexts: nbsOpticPortTable.setStatus('current')
nbsOpticPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1), ).setIndexNames((0, "NBS-OPTIC-MIB", "nbsOpticPortNdx"))
if mibBuilder.loadTexts: nbsOpticPortEntry.setStatus('current')
nbsOpticPortNdx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: nbsOpticPortNdx.setStatus('current')
nbsOpticPortTxStatusAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("outOfService", 2), ("inService", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsOpticPortTxStatusAdmin.setStatus('current')
nbsOpticPortTxStatusOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("outOfService", 2), ("inService", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortTxStatusOper.setStatus('current')
nbsOpticPortRxStatusAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("outOfService", 2), ("inService", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsOpticPortRxStatusAdmin.setStatus('current')
nbsOpticPortRxStatusOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("outOfService", 2), ("inService", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortRxStatusOper.setStatus('current')
nbsOpticPortConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortConnector.setStatus('current')
nbsOpticPortPolish = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("pc", 2), ("upc", 3), ("apc", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortPolish.setStatus('current')
nbsOpticPortFiberMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 213, 1, 2, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("reserved2", 2), ("reserved3", 3), ("singleMode", 4), ("multiMode", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsOpticPortFiberMode.setStatus('current')
mibBuilder.exportSymbols("NBS-OPTIC-MIB", nbsOpticPortTable=nbsOpticPortTable, nbsOpticPortTxStatusAdmin=nbsOpticPortTxStatusAdmin, nbsOpticPortRxStatusAdmin=nbsOpticPortRxStatusAdmin, nbsOpticPortConnector=nbsOpticPortConnector, PYSNMP_MODULE_ID=nbsOpticMib, nbsOpticPortNdx=nbsOpticPortNdx, nbsOpticPortPolish=nbsOpticPortPolish, nbsOpticPortFiberMode=nbsOpticPortFiberMode, nbsOpticPortGrp=nbsOpticPortGrp, nbsOpticPortEntry=nbsOpticPortEntry, nbsOpticMib=nbsOpticMib, nbsOpticPortTableSize=nbsOpticPortTableSize, nbsOpticPortRxStatusOper=nbsOpticPortRxStatusOper, nbsOpticPortTxStatusOper=nbsOpticPortTxStatusOper)
