#
# PySNMP MIB module CISCO-BRIDGE-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-BRIDGE-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:34:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoPortListRange, CiscoPortList = mibBuilder.importSymbols("CISCO-TC", "CiscoPortListRange", "CiscoPortList")
VlanId, VlanIndex = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId", "VlanIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, MibIdentifier, TimeTicks, Counter32, ObjectIdentity, iso, NotificationType, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "TimeTicks", "Counter32", "ObjectIdentity", "iso", "NotificationType", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "Unsigned32", "ModuleIdentity")
TextualConvention, TruthValue, MacAddress, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "MacAddress", "RowStatus", "DisplayString")
ciscoBridgeExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 401))
ciscoBridgeExtMIB.setRevisions(('2008-05-22 00:00', '2005-04-07 00:00', '2004-12-03 00:00', '2004-08-23 00:00',))
if mibBuilder.loadTexts: ciscoBridgeExtMIB.setLastUpdated('200805220000Z')
if mibBuilder.loadTexts: ciscoBridgeExtMIB.setOrganization('Cisco Systems, Inc.')
cbExtMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 401, 0))
cbExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 401, 1))
cbExtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 401, 2))
cbeDot1dTp = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 1))
cbeDot1dStatic = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 2))
cbeDot1dVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 3))
cbeDot1dTpGlobalAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 1000000), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbeDot1dTpGlobalAgingTime.setStatus('current')
cbeDot1dTpVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 1, 2), )
if mibBuilder.loadTexts: cbeDot1dTpVlanTable.setStatus('current')
cbeDot1dTpVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpVlanIndex"))
if mibBuilder.loadTexts: cbeDot1dTpVlanEntry.setStatus('current')
cbeDot1dTpVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 1, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cbeDot1dTpVlanIndex.setStatus('current')
cbeDot1dTpVlanAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 1000000), )).clone(300)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cbeDot1dTpVlanAgingTime.setStatus('current')
cbeDot1dTpVlanAgingFromGlobal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 1, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cbeDot1dTpVlanAgingFromGlobal.setStatus('current')
cbeDot1dTpVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cbeDot1dTpVlanRowStatus.setStatus('current')
cbeDot1dStaticTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 2, 1), )
if mibBuilder.loadTexts: cbeDot1dStaticTable.setStatus('current')
cbeDot1dStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-BRIDGE-EXT-MIB", "cbeDot1dVlanIndex"), (0, "CISCO-BRIDGE-EXT-MIB", "cbeDot1dStaticAddress"), (0, "CISCO-BRIDGE-EXT-MIB", "cbeDot1dStaticReceivePort"), (0, "CISCO-BRIDGE-EXT-MIB", "cbeDot1dStaticPortRangeIndex"))
if mibBuilder.loadTexts: cbeDot1dStaticEntry.setStatus('current')
cbeDot1dVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 2, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cbeDot1dVlanIndex.setStatus('current')
cbeDot1dStaticAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 2, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: cbeDot1dStaticAddress.setStatus('current')
cbeDot1dStaticReceivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cbeDot1dStaticReceivePort.setStatus('current')
cbeDot1dStaticPortRangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 2, 1, 1, 4), CiscoPortListRange())
if mibBuilder.loadTexts: cbeDot1dStaticPortRangeIndex.setStatus('current')
cbeDot1dStaticAllowedToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 2, 1, 1, 5), CiscoPortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbeDot1dStaticAllowedToGoTo.setStatus('current')
cbeDot1dStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5))).clone('permanent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbeDot1dStaticStatus.setStatus('current')
cbeDot1dVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 3, 1), )
if mibBuilder.loadTexts: cbeDot1dVlanTable.setStatus('current')
cbeDot1dVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 3, 1, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: cbeDot1dVlanEntry.setStatus('current')
cbeDot1dVlanOperVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 401, 1, 3, 1, 1, 1), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbeDot1dVlanOperVlan.setStatus('current')
cbExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 401, 2, 1))
cbExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 401, 2, 2))
cbExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 401, 2, 1, 1)).setObjects(("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpGroup"), ("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpVlanGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbExtMIBCompliance = cbExtMIBCompliance.setStatus('deprecated')
cbExtMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 401, 2, 1, 2)).setObjects(("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpGroup"), ("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpVlanGroup"), ("CISCO-BRIDGE-EXT-MIB", "cbeDot1dStaticGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbExtMIBCompliance2 = cbExtMIBCompliance2.setStatus('deprecated')
cbExtMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 401, 2, 1, 3)).setObjects(("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpGroup"), ("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpVlanGroup"), ("CISCO-BRIDGE-EXT-MIB", "cbeDot1dStaticGroup"), ("CISCO-BRIDGE-EXT-MIB", "cbeDot1dOperVlanGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbExtMIBCompliance3 = cbExtMIBCompliance3.setStatus('current')
cbeDot1dTpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 401, 2, 2, 1)).setObjects(("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpGlobalAgingTime"), ("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpVlanAgingFromGlobal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbeDot1dTpGroup = cbeDot1dTpGroup.setStatus('current')
cbeDot1dTpVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 401, 2, 2, 2)).setObjects(("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpVlanAgingTime"), ("CISCO-BRIDGE-EXT-MIB", "cbeDot1dTpVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbeDot1dTpVlanGroup = cbeDot1dTpVlanGroup.setStatus('current')
cbeDot1dStaticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 401, 2, 2, 3)).setObjects(("CISCO-BRIDGE-EXT-MIB", "cbeDot1dStaticAllowedToGoTo"), ("CISCO-BRIDGE-EXT-MIB", "cbeDot1dStaticStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbeDot1dStaticGroup = cbeDot1dStaticGroup.setStatus('current')
cbeDot1dOperVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 401, 2, 2, 4)).setObjects(("CISCO-BRIDGE-EXT-MIB", "cbeDot1dVlanOperVlan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbeDot1dOperVlanGroup = cbeDot1dOperVlanGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-BRIDGE-EXT-MIB", cbeDot1dStaticAddress=cbeDot1dStaticAddress, ciscoBridgeExtMIB=ciscoBridgeExtMIB, cbeDot1dStatic=cbeDot1dStatic, cbeDot1dTp=cbeDot1dTp, cbeDot1dTpVlanIndex=cbeDot1dTpVlanIndex, cbeDot1dStaticStatus=cbeDot1dStaticStatus, cbeDot1dVlanIndex=cbeDot1dVlanIndex, cbeDot1dVlan=cbeDot1dVlan, cbeDot1dOperVlanGroup=cbeDot1dOperVlanGroup, cbeDot1dTpVlanTable=cbeDot1dTpVlanTable, cbeDot1dVlanTable=cbeDot1dVlanTable, cbExtMIBCompliances=cbExtMIBCompliances, cbExtMIBCompliance2=cbExtMIBCompliance2, cbeDot1dTpVlanRowStatus=cbeDot1dTpVlanRowStatus, cbExtMIBCompliance3=cbExtMIBCompliance3, cbExtMIBObjects=cbExtMIBObjects, cbeDot1dTpVlanGroup=cbeDot1dTpVlanGroup, cbeDot1dTpGlobalAgingTime=cbeDot1dTpGlobalAgingTime, cbeDot1dTpVlanEntry=cbeDot1dTpVlanEntry, PYSNMP_MODULE_ID=ciscoBridgeExtMIB, cbeDot1dStaticTable=cbeDot1dStaticTable, cbeDot1dStaticGroup=cbeDot1dStaticGroup, cbExtMIBNotifications=cbExtMIBNotifications, cbExtMIBGroups=cbExtMIBGroups, cbExtMIBCompliance=cbExtMIBCompliance, cbeDot1dStaticAllowedToGoTo=cbeDot1dStaticAllowedToGoTo, cbExtMIBConformance=cbExtMIBConformance, cbeDot1dTpVlanAgingTime=cbeDot1dTpVlanAgingTime, cbeDot1dTpVlanAgingFromGlobal=cbeDot1dTpVlanAgingFromGlobal, cbeDot1dTpGroup=cbeDot1dTpGroup, cbeDot1dStaticReceivePort=cbeDot1dStaticReceivePort, cbeDot1dStaticPortRangeIndex=cbeDot1dStaticPortRangeIndex, cbeDot1dVlanOperVlan=cbeDot1dVlanOperVlan, cbeDot1dStaticEntry=cbeDot1dStaticEntry, cbeDot1dVlanEntry=cbeDot1dVlanEntry)
