#
# PySNMP MIB module ZHONE-COM-VOICE-DSP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-COM-VOICE-DSP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:41:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, iso, IpAddress, ObjectIdentity, Gauge32, Counter64, Bits, Integer32, MibIdentifier, ModuleIdentity, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "IpAddress", "ObjectIdentity", "Gauge32", "Counter64", "Bits", "Integer32", "MibIdentifier", "ModuleIdentity", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
zhoneSlotIndex, zhoneShelfIndex, zhoneModules, zhoneVoice = mibBuilder.importSymbols("Zhone", "zhoneSlotIndex", "zhoneShelfIndex", "zhoneModules", "zhoneVoice")
ZhoneSlotValue, ZhoneShelfValue = mibBuilder.importSymbols("Zhone-TC", "ZhoneSlotValue", "ZhoneShelfValue")
comVoiceDsp = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 12))
comVoiceDsp.setRevisions(('2003-03-28 10:42', '2003-02-13 19:35', '2001-10-02 18:34', '2000-11-28 13:56', '2000-09-20 18:42',))
if mibBuilder.loadTexts: comVoiceDsp.setLastUpdated('200303281935Z')
if mibBuilder.loadTexts: comVoiceDsp.setOrganization('Zhone Technologies, Inc.')
zhoneVoiceDsp = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3))
if mibBuilder.loadTexts: zhoneVoiceDsp.setStatus('current')
voiceDspDefaultConfiguration = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 1))
if mibBuilder.loadTexts: voiceDspDefaultConfiguration.setStatus('current')
redundancyOverSubscriptionType = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("low", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redundancyOverSubscriptionType.setStatus('current')
jitterBufferType = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jitterBufferType.setStatus('current')
jitterBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: jitterBufferSize.setStatus('current')
interArrvJitThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: interArrvJitThreshold.setStatus('current')
pktsLostThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktsLostThreshold.setStatus('current')
echoCancellationType = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("off", 1), ("g165EchoTL16", 2), ("g165EchoTL32", 3), ("g165EchoTL48", 4), ("g168EchoTL32", 5), ("g168EchoTL48", 6), ("g168EchoTL64", 7), ("g168EchoTL80", 8), ("g168EchoTL96", 9), ("g168EchoTL112", 10), ("g168EchoTL128", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: echoCancellationType.setStatus('current')
silenceSuppressionType = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("silSupOff", 1), ("silSupOnSidOff", 2), ("silSupOnSidOn", 3), ("silSupOnSidConst", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: silenceSuppressionType.setStatus('current')
echoReturnLoss = MibScalar((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("erl0dB", 1), ("erl3dB", 2), ("erl6dB", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: echoReturnLoss.setStatus('current')
voiceDspStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 2), )
if mibBuilder.loadTexts: voiceDspStatusTable.setStatus('current')
voiceDspStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 2, 1), ).setIndexNames((0, "Zhone", "zhoneShelfIndex"), (0, "Zhone", "zhoneSlotIndex"))
if mibBuilder.loadTexts: voiceDspStatusEntry.setStatus('current')
voiceDspMaxChannelOnBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1008))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceDspMaxChannelOnBoard.setStatus('current')
voiceDspActiveChannelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1008))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceDspActiveChannelCount.setStatus('current')
voiceDspHiWaterChannelCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1008))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceDspHiWaterChannelCount.setStatus('current')
voiceDspResetCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceDspResetCount.setStatus('current')
channelStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3), )
if mibBuilder.loadTexts: channelStatusTable.setStatus('current')
channelStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1), ).setIndexNames((0, "Zhone", "zhoneShelfIndex"), (0, "Zhone", "zhoneSlotIndex"), (0, "ZHONE-COM-VOICE-DSP-MIB", "channelId"))
if mibBuilder.loadTexts: channelStatusEntry.setStatus('current')
channelId = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelId.setStatus('current')
channelVoiceSessionIdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelVoiceSessionIdHigh.setStatus('current')
channelVoiceSessionIdLow = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelVoiceSessionIdLow.setStatus('current')
channelCcrpShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 4), ZhoneShelfValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelCcrpShelf.setStatus('current')
channelCcrpSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 5), ZhoneSlotValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelCcrpSlot.setStatus('current')
channelTrunkCtrpShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 6), ZhoneShelfValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelTrunkCtrpShelf.setStatus('current')
channelTrunkCtrpSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 7), ZhoneSlotValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelTrunkCtrpSlot.setStatus('current')
channelPktCtrpShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 8), ZhoneShelfValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelPktCtrpShelf.setStatus('current')
channelPktCtrpSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 9), ZhoneSlotValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelPktCtrpSlot.setStatus('current')
channelActiveCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("g711Ulaw", 1), ("g711Alaw", 2), ("g726", 3), ("g729A", 4), ("g729B", 5), ("g729E", 6), ("g723R1KBPS5Dot3", 7), ("g723R1KBPS6Dot3", 8), ("g723R1AKBPS5Dot3", 9), ("g723R1AKBPS6Dot3", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelActiveCodec.setStatus('current')
channelTimeAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelTimeAlive.setStatus('current')
channelPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelPktsSent.setStatus('current')
channelBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelBytesSent.setStatus('current')
channelPktsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelPktsReceived.setStatus('current')
channelBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelBytesReceived.setStatus('current')
channelPktsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelPktsLost.setStatus('current')
channelInterArrvJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 17), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInterArrvJitter.setStatus('current')
channelJitterBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 3, 1, 18), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: channelJitterBufferSize.setStatus('current')
voiceDspTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 4))
if mibBuilder.loadTexts: voiceDspTraps.setStatus('current')
voiceDspTrapsPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 4, 0))
if mibBuilder.loadTexts: voiceDspTrapsPrefix.setStatus('current')
voiceDspReset = NotificationType((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 4, 0, 1)).setObjects(("Zhone", "zhoneShelfIndex"), ("Zhone", "zhoneSlotIndex"), ("ZHONE-COM-VOICE-DSP-MIB", "voiceDspResetCount"))
if mibBuilder.loadTexts: voiceDspReset.setStatus('current')
voiceDspChannelPktsLoss = NotificationType((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 4, 0, 2)).setObjects(("Zhone", "zhoneShelfIndex"), ("Zhone", "zhoneSlotIndex"), ("ZHONE-COM-VOICE-DSP-MIB", "channelId"), ("ZHONE-COM-VOICE-DSP-MIB", "channelPktsLost"))
if mibBuilder.loadTexts: voiceDspChannelPktsLoss.setStatus('current')
voiceDspChannelInterArrvJitterTrigger = NotificationType((1, 3, 6, 1, 4, 1, 5504, 4, 3, 3, 4, 0, 3)).setObjects(("Zhone", "zhoneShelfIndex"), ("Zhone", "zhoneSlotIndex"), ("ZHONE-COM-VOICE-DSP-MIB", "channelId"), ("ZHONE-COM-VOICE-DSP-MIB", "channelInterArrvJitter"))
if mibBuilder.loadTexts: voiceDspChannelInterArrvJitterTrigger.setStatus('current')
mibBuilder.exportSymbols("ZHONE-COM-VOICE-DSP-MIB", voiceDspReset=voiceDspReset, voiceDspActiveChannelCount=voiceDspActiveChannelCount, voiceDspChannelInterArrvJitterTrigger=voiceDspChannelInterArrvJitterTrigger, channelVoiceSessionIdHigh=channelVoiceSessionIdHigh, interArrvJitThreshold=interArrvJitThreshold, jitterBufferType=jitterBufferType, voiceDspDefaultConfiguration=voiceDspDefaultConfiguration, channelTrunkCtrpSlot=channelTrunkCtrpSlot, channelPktCtrpShelf=channelPktCtrpShelf, echoCancellationType=echoCancellationType, channelPktsSent=channelPktsSent, redundancyOverSubscriptionType=redundancyOverSubscriptionType, channelBytesSent=channelBytesSent, channelId=channelId, pktsLostThreshold=pktsLostThreshold, channelTimeAlive=channelTimeAlive, channelJitterBufferSize=channelJitterBufferSize, PYSNMP_MODULE_ID=comVoiceDsp, voiceDspStatusEntry=voiceDspStatusEntry, voiceDspResetCount=voiceDspResetCount, channelStatusEntry=channelStatusEntry, voiceDspTraps=voiceDspTraps, channelPktsReceived=channelPktsReceived, channelCcrpSlot=channelCcrpSlot, zhoneVoiceDsp=zhoneVoiceDsp, channelVoiceSessionIdLow=channelVoiceSessionIdLow, voiceDspTrapsPrefix=voiceDspTrapsPrefix, comVoiceDsp=comVoiceDsp, voiceDspMaxChannelOnBoard=voiceDspMaxChannelOnBoard, voiceDspStatusTable=voiceDspStatusTable, voiceDspChannelPktsLoss=voiceDspChannelPktsLoss, channelCcrpShelf=channelCcrpShelf, voiceDspHiWaterChannelCount=voiceDspHiWaterChannelCount, channelPktCtrpSlot=channelPktCtrpSlot, channelBytesReceived=channelBytesReceived, channelInterArrvJitter=channelInterArrvJitter, jitterBufferSize=jitterBufferSize, channelStatusTable=channelStatusTable, channelPktsLost=channelPktsLost, channelActiveCodec=channelActiveCodec, silenceSuppressionType=silenceSuppressionType, channelTrunkCtrpShelf=channelTrunkCtrpShelf, echoReturnLoss=echoReturnLoss)
