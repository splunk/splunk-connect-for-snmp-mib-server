#
# PySNMP MIB module HH3C-CBQOS2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-CBQOS2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:12:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, Gauge32, ObjectIdentity, ModuleIdentity, Unsigned32, Integer32, IpAddress, NotificationType, TimeTicks, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "Gauge32", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Integer32", "IpAddress", "NotificationType", "TimeTicks", "MibIdentifier", "iso")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
hh3cCBQos2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2))
if mibBuilder.loadTexts: hh3cCBQos2.setLastUpdated('200507300000Z')
if mibBuilder.loadTexts: hh3cCBQos2.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cQos2 = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65))
class MatchRuleType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))
    namedValues = NamedValues(("matchRuleAny", 1), ("matchRuleIpv4Acl", 2), ("matchRuleIPv6Acl", 3), ("matchRuleIPv4Protocol", 4), ("matchRuleIPv6Protocol", 5), ("matchRuleIPXProtocol", 6), ("matchRuleDscp", 7), ("matchRuleIpPre", 8), ("matchRuleVlan8021p", 9), ("matchRuleMplsExp", 10), ("matchRuleAtmClp", 11), ("matchRuleFrDe", 12), ("matchRuleSourceMac", 13), ("matchRuleDestinationMac", 14), ("matchRuleQosLocalID", 15), ("matchRuleClassifier", 16), ("matchRuleInboundInterface", 17), ("matchRuleRtpPort", 18), ("matchRuleSourceIp", 19), ("matchRuleVlanID", 20), ("matchRuleTopMostVlanID", 21), ("matchRuleLocalPrecedence", 22), ("matchRuleDropPriority", 23), ("matchRuleBittorrent", 24), ("matchRuleServiceDot1p", 25))

class CarAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))
    namedValues = NamedValues(("invalid", 0), ("pass", 1), ("continue", 2), ("discard", 3), ("remark", 4), ("remark-ip-continue", 5), ("remark-ip-pass", 6), ("remark-mplsexp-continue", 7), ("remark-mplsexp-pass", 8), ("remark-dscp-continue", 9), ("remark-dscp-pass", 10), ("remark-dot1p-continue", 11), ("remark-dot1p-pass", 12), ("remark-atm-clp-continue", 13), ("remark-atm-clp-pass", 14), ("remark-fr-de-continue", 15), ("remark-fr-de-pass", 16), ("remark-local-pre-pass", 17), ("remark-drop-pre-pass", 18))

class RemarkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("typeIpPrecedence", 1), ("typeDscp", 2), ("typeMplsExp", 3), ("typeVlan8021p", 4), ("typeAtmClp", 5), ("typeFrDe", 6), ("typeVlanID", 7), ("typeQosLocalID", 8), ("typeDropPrecedence", 9), ("typeLocalPrecedence", 10), ("typeTopMostVlanID", 11))

class WredType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("typeIpPrecBased", 1), ("typeDscpBased", 2), ("typeDropLevelBased", 3), ("typeAtmClpBased", 4), ("typeVlan8021pBased", 5), ("typeMplsExpBased", 6))

class QueueType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ef", 1), ("af", 2), ("wfq", 3))

class QueueBandwidthUnit(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unitUnavailable", 0), ("unitAbsolute", 1), ("unitPercent", 2))

class DirectionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

class ApplyObjectType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("interface", 1), ("vlan", 2), ("atmPvc", 3), ("frDlci", 4))

hh3cCBQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1))
hh3cCBQoSClassifierObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1))
hh3cCBQoSClassifierIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassifierIndexNext.setStatus('current')
hh3cCBQoSClassifierCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2), )
if mibBuilder.loadTexts: hh3cCBQoSClassifierCfgInfoTable.setStatus('current')
hh3cCBQoSClassifierCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSClassifierIndex"))
if mibBuilder.loadTexts: hh3cCBQoSClassifierCfgInfoEntry.setStatus('current')
hh3cCBQoSClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSClassifierIndex.setStatus('current')
hh3cCBQoSClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSClassifierName.setStatus('current')
hh3cCBQoSClassifierRuleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassifierRuleCount.setStatus('current')
hh3cCBQoSClassifierOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("and", 1), ("or", 2))).clone('and')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSClassifierOperator.setStatus('current')
hh3cCBQoSClassifierLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unavailable", 1), ("l2", 2), ("l3", 3), ("both", 4))).clone('l3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSClassifierLayer.setStatus('current')
hh3cCBQoSClassifierType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("systemDefined", 1), ("userDefined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassifierType.setStatus('current')
hh3cCBQosClassifierMatchRuleNextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQosClassifierMatchRuleNextIndex.setStatus('current')
hh3cCBQoSClassifierRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSClassifierRowStatus.setStatus('current')
hh3cCBQoSMatchRuleCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3), )
if mibBuilder.loadTexts: hh3cCBQoSMatchRuleCfgInfoTable.setStatus('current')
hh3cCBQoSMatchRuleCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSClassifierIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSMatchRuleIndex"))
if mibBuilder.loadTexts: hh3cCBQoSMatchRuleCfgInfoEntry.setStatus('current')
hh3cCBQoSMatchRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSMatchRuleIndex.setStatus('current')
hh3cCBQoSMatchRuleIfNot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("match", 1), ("matchNot", 2))).clone('match')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMatchRuleIfNot.setStatus('current')
hh3cCBQoSMatchRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1, 3), MatchRuleType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMatchRuleType.setStatus('current')
hh3cCBQoSMatchRuleStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMatchRuleStringValue.setStatus('current')
hh3cCBQoSMatchRuleIntValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMatchRuleIntValue1.setStatus('current')
hh3cCBQoSMatchRuleIntValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMatchRuleIntValue2.setStatus('current')
hh3cCBQoSMatchIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1, 7), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMatchIpAddressType.setStatus('current')
hh3cCBQoSMatchIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMatchIpAddress.setStatus('current')
hh3cCBQoSMatchRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 1, 3, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMatchRuleRowStatus.setStatus('current')
hh3cCBQoSBehaviorObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2))
hh3cCBQoSBehaviorIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSBehaviorIndexNext.setStatus('current')
hh3cCBQoSBehaviorCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cCBQoSBehaviorCfgInfoTable.setStatus('current')
hh3cCBQoSBehaviorCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSBehaviorCfgInfoEntry.setStatus('current')
hh3cCBQoSBehaviorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSBehaviorIndex.setStatus('current')
hh3cCBQoSBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSBehaviorName.setStatus('current')
hh3cCBQoSBehaviorType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("systemDefined", 1), ("userDefined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSBehaviorType.setStatus('current')
hh3cCBQoSBehaviorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSBehaviorRowStatus.setStatus('current')
hh3cCBQoSCarCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3), )
if mibBuilder.loadTexts: hh3cCBQoSCarCfgInfoTable.setStatus('current')
hh3cCBQoSCarCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSCarCfgInfoEntry.setStatus('current')
hh3cCBQoSCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarCir.setStatus('current')
hh3cCBQoSCarCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarCbs.setStatus('current')
hh3cCBQoSCarEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarEbs.setStatus('current')
hh3cCBQoSCarPir = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarPir.setStatus('current')
hh3cCBQoSCarPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarPbs.setStatus('current')
hh3cCBQoSCarGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 6), CarAction().clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarGreenAction.setStatus('current')
hh3cCBQoSCarGreenRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarGreenRemarkValue.setStatus('current')
hh3cCBQoSCarYellowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 8), CarAction().clone('remark')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarYellowAction.setStatus('current')
hh3cCBQoSCarYellowRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarYellowRemarkValue.setStatus('current')
hh3cCBQoSCarRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 10), CarAction().clone('discard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarRedAction.setStatus('current')
hh3cCBQoSCarRedRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarRedRemarkValue.setStatus('current')
hh3cCBQoSCarPolicedPriorityMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("policed-service-map", 1), ("local-precedence-dot1p-map", 2), ("drop-precedence-map", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarPolicedPriorityMapType.setStatus('current')
hh3cCBQoSCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSCarRowStatus.setStatus('current')
hh3cCBQoSAggregativeCarCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 4), )
if mibBuilder.loadTexts: hh3cCBQoSAggregativeCarCfgInfoTable.setStatus('current')
hh3cCBQoSAggregativeCarCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 4, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSCarAggregativeCarIndex"))
if mibBuilder.loadTexts: hh3cCBQoSAggregativeCarCfgInfoEntry.setStatus('current')
hh3cCBQoSCarAggregativeCarIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSCarAggregativeCarIndex.setStatus('current')
hh3cCBQoSCarAggregativeCarName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCarAggregativeCarName.setStatus('current')
hh3cCBQoSAggregativeCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSAggregativeCarRowStatus.setStatus('current')
hh3cCBQoSGtsCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 5), )
if mibBuilder.loadTexts: hh3cCBQoSGtsCfgInfoTable.setStatus('current')
hh3cCBQoSGtsCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 5, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSGtsCfgInfoEntry.setStatus('current')
hh3cCBQoSGtsCir = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 5, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSGtsCir.setStatus('current')
hh3cCBQoSGtsCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 5, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSGtsCbs.setStatus('current')
hh3cCBQoSGtsEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSGtsEbs.setStatus('current')
hh3cCBQoSGtsQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSGtsQueueLength.setStatus('current')
hh3cCBQoSGtsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSGtsRowStatus.setStatus('current')
hh3cCBQoSRemarkCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 6), )
if mibBuilder.loadTexts: hh3cCBQoSRemarkCfgInfoTable.setStatus('current')
hh3cCBQoSRemarkCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 6, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSRemarkType"))
if mibBuilder.loadTexts: hh3cCBQoSRemarkCfgInfoEntry.setStatus('current')
hh3cCBQoSRemarkType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 6, 1, 1), RemarkType())
if mibBuilder.loadTexts: hh3cCBQoSRemarkType.setStatus('current')
hh3cCBQoSRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRemarkValue.setStatus('current')
hh3cCBQoSRemarkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRemarkRowStatus.setStatus('current')
hh3cCBQoSQueueCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7), )
if mibBuilder.loadTexts: hh3cCBQoSQueueCfgInfoTable.setStatus('current')
hh3cCBQoSQueueCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSQueueCfgInfoEntry.setStatus('current')
hh3cCBQoSQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1, 1), QueueType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSQueueType.setStatus('current')
hh3cCBQoSQueueDropType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("typeUnavailable", 0), ("typeTailDrop", 1), ("typeWred", 2))).clone('typeTailDrop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSQueueDropType.setStatus('current')
hh3cCBQoSQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 512), ValueRangeConstraint(2147483647, 2147483647), )).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSQueueLength.setStatus('current')
hh3cCBQoSQueueBandwidthUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1, 4), QueueBandwidthUnit()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSQueueBandwidthUnit.setStatus('current')
hh3cCBQoSQueueBandwidthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 10000000), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSQueueBandwidthValue.setStatus('current')
hh3cCBQoSQueueCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(32, 1000000000), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSQueueCbs.setStatus('current')
hh3cCBQoSQueueQueueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("unavailable", 0), ("a16", 16), ("a32", 32), ("a64", 64), ("a128", 128), ("a256", 256), ("a512", 512), ("a1024", 1024), ("a2048", 2048), ("a4096", 4096))).clone('a256')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSQueueQueueNumber.setStatus('current')
hh3cCBQoSQueueCbsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(25, 500), ValueRangeConstraint(2147483647, 2147483647), )).clone(25)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSQueueCbsRatio.setStatus('current')
hh3cCBQoSQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 7, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSQueueRowStatus.setStatus('current')
hh3cCBQoSWredCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 8), )
if mibBuilder.loadTexts: hh3cCBQoSWredCfgInfoTable.setStatus('current')
hh3cCBQoSWredCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 8, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSWredCfgInfoEntry.setStatus('current')
hh3cCBQoSWredType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 8, 1, 1), WredType().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cCBQoSWredType.setStatus('current')
hh3cCBQoSWredWeightConst = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cCBQoSWredWeightConst.setStatus('current')
hh3cCBQoSWredClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 9), )
if mibBuilder.loadTexts: hh3cCBQoSWredClassCfgInfoTable.setStatus('current')
hh3cCBQoSWredClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 9, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: hh3cCBQoSWredClassCfgInfoEntry.setStatus('current')
hh3cCBQoSWredClassValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: hh3cCBQoSWredClassValue.setStatus('current')
hh3cCBQoSWredClassLowLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cCBQoSWredClassLowLimit.setStatus('current')
hh3cCBQoSWredClassHighLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cCBQoSWredClassHighLimit.setStatus('current')
hh3cCBQoSWredClassDiscardProb = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cCBQoSWredClassDiscardProb.setStatus('current')
hh3cCBQoSPolicyRouteCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 10), )
if mibBuilder.loadTexts: hh3cCBQoSPolicyRouteCfgInfoTable.setStatus('current')
hh3cCBQoSPolicyRouteCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 10, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSPolicyRouteCfgInfoEntry.setStatus('current')
hh3cCBQoSPolicyRouteIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 10, 1, 1), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyRouteIpAddrType.setStatus('current')
hh3cCBQoSPolicyRouteNexthop = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 10, 1, 2), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyRouteNexthop.setStatus('current')
hh3cCBQoSPolicyRouteBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("backup", 1), ("notbackup", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyRouteBackup.setStatus('current')
hh3cCBQoSPolicyRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyRouteRowStatus.setStatus('current')
hh3cCBQoSNatCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 11), )
if mibBuilder.loadTexts: hh3cCBQoSNatCfgInfoTable.setStatus('current')
hh3cCBQoSNatCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 11, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSNatCfgInfoEntry.setStatus('current')
hh3cCBQoSNatMainNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNatMainNumber.setStatus('current')
hh3cCBQoSNatBackupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNatBackupNumber.setStatus('current')
hh3cCBQoSNatServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNatServiceClass.setStatus('current')
hh3cCBQoSNatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNatRowStatus.setStatus('current')
hh3cCBQoSFirewallCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 12), )
if mibBuilder.loadTexts: hh3cCBQoSFirewallCfgInfoTable.setStatus('current')
hh3cCBQoSFirewallCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 12, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSFirewallCfgInfoEntry.setStatus('current')
hh3cCBQoSFirewallAction = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSFirewallAction.setStatus('current')
hh3cCBQoSFirewallRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 12, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSFirewallRowStatus.setStatus('current')
hh3cCBQoSSamplingCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 13), )
if mibBuilder.loadTexts: hh3cCBQoSSamplingCfgInfoTable.setStatus('current')
hh3cCBQoSSamplingCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 13, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSSamplingCfgInfoEntry.setStatus('current')
hh3cCBQoSSamplingNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSSamplingNum.setStatus('current')
hh3cCBQoSSamplingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 13, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSSamplingRowStatus.setStatus('current')
hh3cCBQoSAccountCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 14), )
if mibBuilder.loadTexts: hh3cCBQoSAccountCfgInfoTable.setStatus('current')
hh3cCBQoSAccountCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 14, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSAccountCfgInfoEntry.setStatus('current')
hh3cCBQoSAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 14, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSAccounting.setStatus('current')
hh3cCBQoSAccountRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 14, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSAccountRowStatus.setStatus('current')
hh3cCBQoSRedirectCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15), )
if mibBuilder.loadTexts: hh3cCBQoSRedirectCfgInfoTable.setStatus('current')
hh3cCBQoSRedirectCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSRedirectCfgInfoEntry.setStatus('current')
hh3cCBQoSRedirectType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cpu", 1), ("interface", 2), ("nextHop", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRedirectType.setStatus('current')
hh3cCBQoSRedirectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRedirectIfIndex.setStatus('current')
hh3cCBQoSRedirectIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15, 1, 3), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRedirectIpAddressType.setStatus('current')
hh3cCBQoSRedirectIpAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRedirectIpAddress1.setStatus('current')
hh3cCBQoSRedirectIpAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRedirectIpAddress2.setStatus('current')
hh3cCBQoSRedirectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRedirectRowStatus.setStatus('current')
hh3cCBQoSRedirectIpv6Interface1 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRedirectIpv6Interface1.setStatus('current')
hh3cCBQoSRedirectIpv6Interface2 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 15, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSRedirectIpv6Interface2.setStatus('current')
hh3cCBQoSPriorityMapCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 16), )
if mibBuilder.loadTexts: hh3cCBQoSPriorityMapCfgInfoTable.setStatus('current')
hh3cCBQoSPriorityMapCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 16, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSPriorityMapCfgInfoEntry.setStatus('current')
hh3cCBQoSPriorityMapImportType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("invalid", 1), ("dscp", 2), ("dot1p", 3), ("exp", 4), ("ipPrecedence", 5), ("localPrecedence", 6), ("dropPrecedence", 7))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPriorityMapImportType.setStatus('current')
hh3cCBQoSPriorityMapExportType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("invalid", 1), ("dscp", 2), ("dot1p", 3), ("exp", 4), ("ipPrecedence", 5), ("localPrecedence", 6), ("dropPrecedence", 7))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPriorityMapExportType.setStatus('current')
hh3cCBQoSPriorityMapGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 16, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPriorityMapGroupIndex.setStatus('current')
hh3cCBQoSPriorityMapGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 16, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSPriorityMapGroupName.setStatus('current')
hh3cCBQoSPriorityMapAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("autoDscp", 2), ("autoDot1p", 3), ("autoMplsExp", 4), ("autoIp", 5))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPriorityMapAuto.setStatus('current')
hh3cCBQoSPriorityMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 16, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPriorityMapRowStatus.setStatus('current')
hh3cCBQoSMirrorCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 17), )
if mibBuilder.loadTexts: hh3cCBQoSMirrorCfgInfoTable.setStatus('current')
hh3cCBQoSMirrorCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 17, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSMirrorCfgInfoEntry.setStatus('current')
hh3cCBQoSMirrorType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("interface", 1), ("cpu", 2), ("vlan", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMirrorType.setStatus('current')
hh3cCBQoSMirrorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMirrorIfIndex.setStatus('current')
hh3cCBQoSMirrorVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMirrorVlanID.setStatus('current')
hh3cCBQoSMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 17, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSMirrorRowStatus.setStatus('current')
hh3cCBQoSNestCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 18), )
if mibBuilder.loadTexts: hh3cCBQoSNestCfgInfoTable.setStatus('current')
hh3cCBQoSNestCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 18, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSNestCfgInfoEntry.setStatus('current')
hh3cCBQoSNestServiceVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 4094), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNestServiceVlanID.setStatus('current')
hh3cCBQoSNestServiceDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNestServiceDot1pValue.setStatus('current')
hh3cCBQoSNestCustomerVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 4094), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNestCustomerVlanID.setStatus('current')
hh3cCBQoSNestCustomerDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNestCustomerDot1pValue.setStatus('current')
hh3cCBQoSNestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 18, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNestRowStatus.setStatus('current')
hh3cCBQoSNestPolicyCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 19), )
if mibBuilder.loadTexts: hh3cCBQoSNestPolicyCfgInfoTable.setStatus('current')
hh3cCBQoSNestPolicyCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 19, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hh3cCBQoSNestPolicyCfgInfoEntry.setStatus('current')
hh3cCBQoSNestPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 19, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNestPolicyName.setStatus('current')
hh3cCBQoSNestPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 2, 19, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSNestPolicyRowStatus.setStatus('current')
hh3cCBQoSPolicyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3))
hh3cCBQoSPolicyIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSPolicyIndexNext.setStatus('current')
hh3cCBQoSPolicyCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 2), )
if mibBuilder.loadTexts: hh3cCBQoSPolicyCfgInfoTable.setStatus('current')
hh3cCBQoSPolicyCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyIndex"))
if mibBuilder.loadTexts: hh3cCBQoSPolicyCfgInfoEntry.setStatus('current')
hh3cCBQoSPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSPolicyIndex.setStatus('current')
hh3cCBQoSPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyName.setStatus('current')
hh3cCBQoSPolicyClassCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassCount.setStatus('current')
hh3cCBQoSPolicyConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unavailable", 0), ("config", 1), ("auto", 2))).clone('config')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyConfigMode.setStatus('current')
hh3cCBQoSPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("systemDefined", 1), ("userDefined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSPolicyType.setStatus('current')
hh3cCBQoSPolicyClassNextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassNextIndex.setStatus('current')
hh3cCBQoSPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyRowStatus.setStatus('current')
hh3cCBQoSPolicyClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3), )
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassCfgInfoTable.setStatus('current')
hh3cCBQoSPolicyClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassCfgInfoEntry.setStatus('current')
hh3cCBQoSPolicyClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassIndex.setStatus('current')
hh3cCBQoSPolicyClassClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassClassifierIndex.setStatus('current')
hh3cCBQoSPolicyClassClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassClassifierName.setStatus('current')
hh3cCBQoSPolicyClassBehaviorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassBehaviorIndex.setStatus('current')
hh3cCBQoSPolicyClassBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassBehaviorName.setStatus('current')
hh3cCBQoSPolicyClassPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 16383), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassPrecedence.setStatus('current')
hh3cCBQoSPolicyClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassRowStatus.setStatus('current')
hh3cCBQoSPolicyClassMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("modeNo", 1), ("modeDot1q", 2))).clone('modeNo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassMode.setStatus('current')
hh3cCBQoSPolicyClassCfgOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 3, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSPolicyClassCfgOrder.setStatus('current')
hh3cCBQoSApplyPolicyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4))
hh3cCBQoSIfApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 1), )
if mibBuilder.loadTexts: hh3cCBQoSIfApplyPolicyTable.setStatus('current')
hh3cCBQoSIfApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 1, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyDirection"))
if mibBuilder.loadTexts: hh3cCBQoSIfApplyPolicyEntry.setStatus('current')
hh3cCBQoSIfApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cCBQoSIfApplyPolicyIfIndex.setStatus('current')
hh3cCBQoSIfApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 1, 1, 2), DirectionType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cCBQoSIfApplyPolicyDirection.setStatus('current')
hh3cCBQoSIfApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSIfApplyPolicyName.setStatus('current')
hh3cCBQoSIfApplyPolicyEnableDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unavailable", 1), ("true", 2), ("false", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSIfApplyPolicyEnableDynamic.setStatus('current')
hh3cCBQoSIfApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSIfApplyPolicyRowStatus.setStatus('current')
hh3cCBQoSAtmPvcApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 2), )
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcApplyPolicyTable.setStatus('current')
hh3cCBQoSAtmPvcApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVPI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVCI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyDirection"))
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcApplyPolicyEntry.setStatus('current')
hh3cCBQoSAtmPvcApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcApplyPolicyIfIndex.setStatus('current')
hh3cCBQoSAtmPvcApplyPolicyVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcApplyPolicyVPI.setStatus('current')
hh3cCBQoSAtmPvcApplyPolicyVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 2, 1, 3), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcApplyPolicyVCI.setStatus('current')
hh3cCBQoSAtmPvcApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 2, 1, 4), DirectionType())
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcApplyPolicyDirection.setStatus('current')
hh3cCBQoSAtmPvcApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcApplyPolicyName.setStatus('current')
hh3cCBQoSAtmPvcApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcApplyPolicyRowStatus.setStatus('current')
hh3cCBQoSVlanApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 3), )
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyPolicyTable.setStatus('current')
hh3cCBQoSVlanApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 3, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSVlanApplyPolicyVlanid"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSVlanApplyPolicyDirection"))
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyPolicyEntry.setStatus('current')
hh3cCBQoSVlanApplyPolicyVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 3, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyPolicyVlanid.setStatus('current')
hh3cCBQoSVlanApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 3, 1, 2), DirectionType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyPolicyDirection.setStatus('current')
hh3cCBQoSVlanApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyPolicyName.setStatus('current')
hh3cCBQoSVlanApplyPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyPriority.setStatus('current')
hh3cCBQoSVlanApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyPolicyRowStatus.setStatus('current')
hh3cCBQoSFrClassApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 4), )
if mibBuilder.loadTexts: hh3cCBQoSFrClassApplyPolicyTable.setStatus('current')
hh3cCBQoSFrClassApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 4, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrClassApplyPolicyFrClassName"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrClassApplyPolicyDirection"))
if mibBuilder.loadTexts: hh3cCBQoSFrClassApplyPolicyEntry.setStatus('current')
hh3cCBQoSFrClassApplyPolicyFrClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hh3cCBQoSFrClassApplyPolicyFrClassName.setStatus('current')
hh3cCBQoSFrClassApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 4, 1, 2), DirectionType())
if mibBuilder.loadTexts: hh3cCBQoSFrClassApplyPolicyDirection.setStatus('current')
hh3cCBQoSFrClassApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSFrClassApplyPolicyName.setStatus('current')
hh3cCBQoSFrClassApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSFrClassApplyPolicyRowStatus.setStatus('current')
hh3cCBQoSFrPvcApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 5), )
if mibBuilder.loadTexts: hh3cCBQoSFrPvcApplyPolicyTable.setStatus('current')
hh3cCBQoSFrPvcApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 5, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDirection"))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcApplyPolicyEntry.setStatus('current')
hh3cCBQoSFrPvcApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cCBQoSFrPvcApplyPolicyIfIndex.setStatus('current')
hh3cCBQoSFrPvcApplyPolicyDlciNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcApplyPolicyDlciNum.setStatus('current')
hh3cCBQoSFrPvcApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 5, 1, 3), DirectionType())
if mibBuilder.loadTexts: hh3cCBQoSFrPvcApplyPolicyDirection.setStatus('current')
hh3cCBQoSFrPvcApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcApplyPolicyName.setStatus('current')
hh3cCBQoSFrPvcApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 5, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcApplyPolicyRowStatus.setStatus('current')
hh3cCBQoSGlobalApplyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 6), )
if mibBuilder.loadTexts: hh3cCBQoSGlobalApplyTable.setStatus('current')
hh3cCBQoSGlobalApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 6, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSGlobalApplyDirection"))
if mibBuilder.loadTexts: hh3cCBQoSGlobalApplyEntry.setStatus('current')
hh3cCBQoSGlobalApplyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 6, 1, 1), DirectionType())
if mibBuilder.loadTexts: hh3cCBQoSGlobalApplyDirection.setStatus('current')
hh3cCBQoSGlobalApplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSGlobalApplyName.setStatus('current')
hh3cCBQoSGlobalApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 4, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCBQoSGlobalApplyRowStatus.setStatus('current')
hh3cCBQoSApplyPolicyStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5))
hh3cCBQoSIfStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1))
hh3cCBQoSIfCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1), )
if mibBuilder.loadTexts: hh3cCBQoSIfCbqRunInfoTable.setStatus('current')
hh3cCBQoSIfCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"))
if mibBuilder.loadTexts: hh3cCBQoSIfCbqRunInfoEntry.setStatus('current')
hh3cCBQoSIfCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCbqQueueSize.setStatus('current')
hh3cCBQoSIfCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCbqDiscard.setStatus('current')
hh3cCBQoSIfCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCbqEfQueueSize.setStatus('current')
hh3cCBQoSIfCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCbqAfQueueSize.setStatus('current')
hh3cCBQoSIfCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCbqBeQueueSize.setStatus('current')
hh3cCBQoSIfCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCbqBeActiveQueueNum.setStatus('current')
hh3cCBQoSIfCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCbqBeMaxActiveQueueNum.setStatus('current')
hh3cCBQoSIfCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCbqBeTotalQueueNum.setStatus('current')
hh3cCBQoSIfCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCbqAfAllocatedQueueNum.setStatus('current')
hh3cCBQoSIfClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 2), )
if mibBuilder.loadTexts: hh3cCBQoSIfClassMatchRunInfoTable.setStatus('current')
hh3cCBQoSIfClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSIfClassMatchRunInfoEntry.setStatus('current')
hh3cCBQoSIfClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfClassMatchedPackets.setStatus('current')
hh3cCBQoSIfClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfClassMatchedBytes.setStatus('current')
hh3cCBQoSIfClassAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfClassAverageRate.setStatus('current')
hh3cCBQoSIfCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 3), )
if mibBuilder.loadTexts: hh3cCBQoSIfCarRunInfoTable.setStatus('current')
hh3cCBQoSIfCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 3, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSIfCarRunInfoEntry.setStatus('current')
hh3cCBQoSIfCarGreenPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCarGreenPackets.setStatus('current')
hh3cCBQoSIfCarGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCarGreenBytes.setStatus('current')
hh3cCBQoSIfCarRedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCarRedPackets.setStatus('current')
hh3cCBQoSIfCarRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCarRedBytes.setStatus('current')
hh3cCBQoSIfCarYellowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCarYellowPackets.setStatus('current')
hh3cCBQoSIfCarYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfCarYellowBytes.setStatus('current')
hh3cCBQoSIfGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 4), )
if mibBuilder.loadTexts: hh3cCBQoSIfGtsRunInfoTable.setStatus('current')
hh3cCBQoSIfGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 4, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSIfGtsRunInfoEntry.setStatus('current')
hh3cCBQoSIfGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfGtsPassedPackets.setStatus('current')
hh3cCBQoSIfGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfGtsPassedBytes.setStatus('current')
hh3cCBQoSIfGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfGtsDiscardedPackets.setStatus('current')
hh3cCBQoSIfGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfGtsDiscardedBytes.setStatus('current')
hh3cCBQoSIfGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfGtsDelayedPackets.setStatus('current')
hh3cCBQoSIfGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfGtsDelayedBytes.setStatus('current')
hh3cCBQoSIfGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfGtsQueueSize.setStatus('current')
hh3cCBQoSIfRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 5), )
if mibBuilder.loadTexts: hh3cCBQoSIfRemarkRunInfoTable.setStatus('current')
hh3cCBQoSIfRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 5, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSIfRemarkRunInfoEntry.setStatus('current')
hh3cCBQoSIfRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfRemarkedPackets.setStatus('current')
hh3cCBQoSIfQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 6), )
if mibBuilder.loadTexts: hh3cCBQoSIfQueueRunInfoTable.setStatus('current')
hh3cCBQoSIfQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 6, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSIfQueueRunInfoEntry.setStatus('current')
hh3cCBQoSIfQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfQueueMatchedPackets.setStatus('current')
hh3cCBQoSIfQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfQueueMatchedBytes.setStatus('current')
hh3cCBQoSIfQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfQueueEnqueuedPackets.setStatus('current')
hh3cCBQoSIfQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfQueueEnqueuedBytes.setStatus('current')
hh3cCBQoSIfQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfQueueDiscardedPackets.setStatus('current')
hh3cCBQoSIfQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfQueueDiscardedBytes.setStatus('current')
hh3cCBQoSIfWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 7), )
if mibBuilder.loadTexts: hh3cCBQoSIfWredRunInfoTable.setStatus('current')
hh3cCBQoSIfWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 7, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: hh3cCBQoSIfWredRunInfoEntry.setStatus('current')
hh3cCBQoSIfWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfWredRandomDiscardedPackets.setStatus('current')
hh3cCBQoSIfWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfWredTailDiscardedPackets.setStatus('current')
hh3cCBQoSIfAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 8), )
if mibBuilder.loadTexts: hh3cCBQoSIfAccountingRunInfoTable.setStatus('current')
hh3cCBQoSIfAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 8, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSIfAccountingRunInfoEntry.setStatus('current')
hh3cCBQoSIfAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfAccountingPackets.setStatus('current')
hh3cCBQoSIfAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 1, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIfAccountingBytes.setStatus('current')
hh3cCBQoSAtmPvcStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2))
hh3cCBQoSAtmPvcCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1), )
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqRunInfoTable.setStatus('current')
hh3cCBQoSAtmPvcCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVPI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVCI"))
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqRunInfoEntry.setStatus('current')
hh3cCBQoSAtmPvcCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqQueueSize.setStatus('current')
hh3cCBQoSAtmPvcCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqDiscard.setStatus('current')
hh3cCBQoSAtmPvcCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqEfQueueSize.setStatus('current')
hh3cCBQoSAtmPvcCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqAfQueueSize.setStatus('current')
hh3cCBQoSAtmPvcCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqBeQueueSize.setStatus('current')
hh3cCBQoSAtmPvcCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqBeActiveQueueNum.setStatus('current')
hh3cCBQoSAtmPvcCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqBeMaxActiveQueueNum.setStatus('current')
hh3cCBQoSAtmPvcCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqBeTotalQueueNum.setStatus('current')
hh3cCBQoSAtmPvcCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCbqAfAllocatedQueueNum.setStatus('current')
hh3cCBQoSAtmPvcClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 2), )
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcClassMatchRunInfoTable.setStatus('current')
hh3cCBQoSAtmPvcClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVPI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVCI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcClassMatchRunInfoEntry.setStatus('current')
hh3cCBQoSAtmPvcClassMatchPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcClassMatchPackets.setStatus('current')
hh3cCBQoSAtmPvcClassMatchBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcClassMatchBytes.setStatus('current')
hh3cCBQoSAtmPvcClassAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcClassAverageRate.setStatus('current')
hh3cCBQoSAtmPvcCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 3), )
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCarRunInfoTable.setStatus('current')
hh3cCBQoSAtmPvcCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 3, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVPI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVCI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCarRunInfoEntry.setStatus('current')
hh3cCBQoSAtmPvcCarConformPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCarConformPackets.setStatus('current')
hh3cCBQoSAtmPvcCarConformBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCarConformBytes.setStatus('current')
hh3cCBQoSAtmPvcCarExceedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCarExceedPackets.setStatus('current')
hh3cCBQoSAtmPvcCarExceedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcCarExceedBytes.setStatus('current')
hh3cCBQoSAtmPvcGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 4), )
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcGtsRunInfoTable.setStatus('current')
hh3cCBQoSAtmPvcGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 4, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVPI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVCI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcGtsRunInfoEntry.setStatus('current')
hh3cCBQoSAtmPvcGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcGtsPassedPackets.setStatus('current')
hh3cCBQoSAtmPvcGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcGtsPassedBytes.setStatus('current')
hh3cCBQoSAtmPvcGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcGtsDiscardedPackets.setStatus('current')
hh3cCBQoSAtmPvcGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcGtsDiscardedBytes.setStatus('current')
hh3cCBQoSAtmPvcGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcGtsDelayedPackets.setStatus('current')
hh3cCBQoSAtmPvcGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcGtsDelayedBytes.setStatus('current')
hh3cCBQoSAtmPvcGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcGtsQueueSize.setStatus('current')
hh3cCBQoSAtmPvcRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 5), )
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcRemarkRunInfoTable.setStatus('current')
hh3cCBQoSAtmPvcRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 5, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVPI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVCI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcRemarkRunInfoEntry.setStatus('current')
hh3cCBQoSAtmPvcRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcRemarkedPackets.setStatus('current')
hh3cCBQoSAtmPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 6), )
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcQueueRunInfoTable.setStatus('current')
hh3cCBQoSAtmPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 6, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVPI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVCI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcQueueRunInfoEntry.setStatus('current')
hh3cCBQoSAtmPvcQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcQueueMatchedPackets.setStatus('current')
hh3cCBQoSAtmPvcQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcQueueMatchedBytes.setStatus('current')
hh3cCBQoSAtmPvcQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcQueueEnqueuedPackets.setStatus('current')
hh3cCBQoSAtmPvcQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcQueueEnqueuedBytes.setStatus('current')
hh3cCBQoSAtmPvcQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcQueueDiscardedPackets.setStatus('current')
hh3cCBQoSAtmPvcQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcQueueDiscardedBytes.setStatus('current')
hh3cCBQoSAtmPvcWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 7), )
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcWredRunInfoTable.setStatus('current')
hh3cCBQoSAtmPvcWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 7, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVPI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVCI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcWredRunInfoEntry.setStatus('current')
hh3cCBQoSAtmPvcWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcWredRandomDiscardedPackets.setStatus('current')
hh3cCBQoSAtmPvcWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcWredTailDiscardedPackets.setStatus('current')
hh3cCBQoSAtmPvcAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 8), )
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcAccountingRunInfoTable.setStatus('current')
hh3cCBQoSAtmPvcAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 8, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVPI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyVCI"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSAtmPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcAccountingRunInfoEntry.setStatus('current')
hh3cCBQoSAtmPvcAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcAccountingPackets.setStatus('current')
hh3cCBQoSAtmPvcAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 2, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAtmPvcAccountingBytes.setStatus('current')
hh3cCBQoSFrPvcStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3))
hh3cCBQoSFrPvcCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1), )
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqRunInfoTable.setStatus('current')
hh3cCBQoSFrPvcCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDlciNum"))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqRunInfoEntry.setStatus('current')
hh3cCBQoSFrPvcCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqQueueSize.setStatus('current')
hh3cCBQoSFrPvcCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqDiscard.setStatus('current')
hh3cCBQoSFrPvcCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqEfQueueSize.setStatus('current')
hh3cCBQoSFrPvcCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqAfQueueSize.setStatus('current')
hh3cCBQoSFrPvcCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqBeQueueSize.setStatus('current')
hh3cCBQoSFrPvcCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqBeActiveQueueNum.setStatus('current')
hh3cCBQoSFrPvcCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqBeMaxActiveQueueNum.setStatus('current')
hh3cCBQoSFrPvcCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqBeTotalQueueNum.setStatus('current')
hh3cCBQoSFrPvcCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCbqAfAllocatedQueueNum.setStatus('current')
hh3cCBQoSFrPvcClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 2), )
if mibBuilder.loadTexts: hh3cCBQoSFrPvcClassMatchRunInfoTable.setStatus('current')
hh3cCBQoSFrPvcClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcClassMatchRunInfoEntry.setStatus('current')
hh3cCBQoSFrPvcClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcClassMatchedPackets.setStatus('current')
hh3cCBQoSFrPvcClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcClassMatchedBytes.setStatus('current')
hh3cCBQoSFrPvcClassAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcClassAverageRate.setStatus('current')
hh3cCBQoSFrPvcCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 3), )
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCarRunInfoTable.setStatus('current')
hh3cCBQoSFrPvcCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 3, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCarRunInfoEntry.setStatus('current')
hh3cCBQoSFrPvcCarConformPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCarConformPackets.setStatus('current')
hh3cCBQoSFrPvcCarConformBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCarConformBytes.setStatus('current')
hh3cCBQoSFrPvcCarExceedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCarExceedPackets.setStatus('current')
hh3cCBQoSFrPvcCarExceedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcCarExceedBytes.setStatus('current')
hh3cCBQoSFrPvcGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 4), )
if mibBuilder.loadTexts: hh3cCBQoSFrPvcGtsRunInfoTable.setStatus('current')
hh3cCBQoSFrPvcGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 4, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcGtsRunInfoEntry.setStatus('current')
hh3cCBQoSFrPvcGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcGtsPassedPackets.setStatus('current')
hh3cCBQoSFrPvcGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcGtsPassedBytes.setStatus('current')
hh3cCBQoSFrPvcGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcGtsDiscardedPackets.setStatus('current')
hh3cCBQoSFrPvcGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcGtsDiscardedBytes.setStatus('current')
hh3cCBQoSFrPvcGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcGtsDelayedPackets.setStatus('current')
hh3cCBQoSFrPvcGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcGtsDelayedBytes.setStatus('current')
hh3cCBQoSFrPvcGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcGtsQueueSize.setStatus('current')
hh3cCBQoSFrPvcRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 5), )
if mibBuilder.loadTexts: hh3cCBQoSFrPvcRemarkRunInfoTable.setStatus('current')
hh3cCBQoSFrPvcRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 5, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcRemarkRunInfoEntry.setStatus('current')
hh3cCBQoSFrPvcRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcRemarkedPackets.setStatus('current')
hh3cCBQoSFrPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 6), )
if mibBuilder.loadTexts: hh3cCBQoSFrPvcQueueRunInfoTable.setStatus('current')
hh3cCBQoSFrPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 6, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcQueueRunInfoEntry.setStatus('current')
hh3cCBQoSFrPvcQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcQueueMatchedPackets.setStatus('current')
hh3cCBQoSFrPvcQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcQueueMatchedBytes.setStatus('current')
hh3cCBQoSFrPvcQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcQueueEnqueuedPackets.setStatus('current')
hh3cCBQoSFrPvcQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcQueueEnqueuedBytes.setStatus('current')
hh3cCBQoSFrPvcQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcQueueDiscardedPackets.setStatus('current')
hh3cCBQoSFrPvcQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcQueueDiscardedBytes.setStatus('current')
hh3cCBQoSFrPvcWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 7), )
if mibBuilder.loadTexts: hh3cCBQoSFrPvcWredRunInfoTable.setStatus('current')
hh3cCBQoSFrPvcWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 7, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcWredRunInfoEntry.setStatus('current')
hh3cCBQoSFrPvcWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcWredRandomDiscardedPackets.setStatus('current')
hh3cCBQoSFrPvcWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcWredTailDiscardedPackets.setStatus('current')
hh3cCBQoSFrPvcAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 8), )
if mibBuilder.loadTexts: hh3cCBQoSFrPvcAccountingRunInfoTable.setStatus('current')
hh3cCBQoSFrPvcAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 8, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSFrPvcApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: hh3cCBQoSFrPvcAccountingRunInfoEntry.setStatus('current')
hh3cCBQoSFrPvcAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcAccountingPackets.setStatus('current')
hh3cCBQoSFrPvcAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 3, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSFrPvcAccountingBytes.setStatus('current')
hh3cCBQoSVlanStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 4))
hh3cCBQoSVlanClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 4, 1), )
if mibBuilder.loadTexts: hh3cCBQoSVlanClassMatchRunInfoTable.setStatus('current')
hh3cCBQoSVlanClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 4, 1, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSVlanApplyPolicyVlanid"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSVlanApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSVlanClassMatchRunInfoEntry.setStatus('current')
hh3cCBQoSVlanClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 4, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSVlanClassMatchedPackets.setStatus('current')
hh3cCBQoSVlanAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 4, 2), )
if mibBuilder.loadTexts: hh3cCBQoSVlanAccountingRunInfoTable.setStatus('current')
hh3cCBQoSVlanAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 4, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSVlanApplyPolicyVlanid"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSVlanApplyPolicyDirection"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSVlanAccountingRunInfoEntry.setStatus('current')
hh3cCBQoSVlanAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 4, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSVlanAccountingPackets.setStatus('current')
hh3cCBQoSVlanAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 4, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSVlanAccountingBytes.setStatus('current')
hh3cCBQoSApplyPolicyIndexObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5))
hh3cCBQoSApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 1), )
if mibBuilder.loadTexts: hh3cCBQoSApplyObjectTable.setStatus('current')
hh3cCBQoSApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 1, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"))
if mibBuilder.loadTexts: hh3cCBQoSApplyObjectEntry.setStatus('current')
hh3cCBQoSApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cCBQoSApplyObjectIndex.setStatus('current')
hh3cCBQoSApplyObjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 1, 1, 2), ApplyObjectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSApplyObjectType.setStatus('current')
hh3cCBQoSApplyObjectDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 1, 1, 3), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSApplyObjectDirection.setStatus('current')
hh3cCBQoSApplyObjectMainSite = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSApplyObjectMainSite.setStatus('current')
hh3cCBQoSApplyObjectSubChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSApplyObjectSubChannel.setStatus('current')
hh3cCBQoSApplyObjectSubClass = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSApplyObjectSubClass.setStatus('current')
hh3cCBQoSApplyObjectSubClassSec = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSApplyObjectSubClassSec.setStatus('current')
hh3cCBQoSIntApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 2), )
if mibBuilder.loadTexts: hh3cCBQoSIntApplyObjectTable.setStatus('current')
hh3cCBQoSIntApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSIntApplyObjectIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectDirection"))
if mibBuilder.loadTexts: hh3cCBQoSIntApplyObjectEntry.setStatus('current')
hh3cCBQoSIntApplyObjectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cCBQoSIntApplyObjectIfIndex.setStatus('current')
hh3cCBQoSIntApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSIntApplyObjectIndex.setStatus('current')
hh3cCBQoSVlanApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 3), )
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyObjectTable.setStatus('current')
hh3cCBQoSVlanApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 3, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSVlanApplyObjectVlanID"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectDirection"))
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyObjectEntry.setStatus('current')
hh3cCBQoSVlanApplyObjectVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyObjectVlanID.setStatus('current')
hh3cCBQoSVlanApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSVlanApplyObjectIndex.setStatus('current')
hh3cCBQoSPvcApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 4), )
if mibBuilder.loadTexts: hh3cCBQoSPvcApplyObjectTable.setStatus('current')
hh3cCBQoSPvcApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 4, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPvcApplyObjectIfIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPvcApplyObjectPvcID"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectDirection"))
if mibBuilder.loadTexts: hh3cCBQoSPvcApplyObjectEntry.setStatus('current')
hh3cCBQoSPvcApplyObjectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cCBQoSPvcApplyObjectIfIndex.setStatus('current')
hh3cCBQoSPvcApplyObjectPvcID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 4, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hh3cCBQoSPvcApplyObjectPvcID.setStatus('current')
hh3cCBQoSPvcApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSPvcApplyObjectIndex.setStatus('current')
hh3cCBQoSNestPolicyApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 5), )
if mibBuilder.loadTexts: hh3cCBQoSNestPolicyApplyObjectTable.setStatus('current')
hh3cCBQoSNestPolicyApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 5, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSNestPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSNestPolicyApplyObjectEntry.setStatus('current')
hh3cCBQoSNestPolicyClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cCBQoSNestPolicyClassIndex.setStatus('current')
hh3cCBQoSNestPolicyApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 5, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSNestPolicyApplyObjectIndex.setStatus('current')
hh3cCBQoSStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6))
hh3cCBQoSCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1), )
if mibBuilder.loadTexts: hh3cCBQoSCbqRunInfoTable.setStatus('current')
hh3cCBQoSCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"))
if mibBuilder.loadTexts: hh3cCBQoSCbqRunInfoEntry.setStatus('current')
hh3cCBQoSCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCbqQueueSize.setStatus('current')
hh3cCBQoSCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCbqDiscard.setStatus('current')
hh3cCBQoSCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCbqEfQueueSize.setStatus('current')
hh3cCBQoSCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCbqAfQueueSize.setStatus('current')
hh3cCBQoSCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCbqBeQueueSize.setStatus('current')
hh3cCBQoSCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCbqBeActiveQueueNum.setStatus('current')
hh3cCBQoSCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCbqBeMaxActiveQueueNum.setStatus('current')
hh3cCBQoSCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCbqBeTotalQueueNum.setStatus('current')
hh3cCBQoSCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCbqAfAllocatedQueueNum.setStatus('current')
hh3cCBQoSClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2), )
if mibBuilder.loadTexts: hh3cCBQoSClassMatchRunInfoTable.setStatus('current')
hh3cCBQoSClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSClassMatchRunInfoEntry.setStatus('current')
hh3cCBQoSClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassMatchedPackets.setStatus('current')
hh3cCBQoSClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassMatchedBytes.setStatus('current')
hh3cCBQoSClassFwdPktpps = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassFwdPktpps.setStatus('current')
hh3cCBQoSClassFwdPktbps = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassFwdPktbps.setStatus('current')
hh3cCBQoSClassDropPktpps = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassDropPktpps.setStatus('current')
hh3cCBQoSClassDropPktbps = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassDropPktbps.setStatus('current')
hh3cCBQoSClassFlowStatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassFlowStatInterval.setStatus('current')
hh3cCBQoSClassBehaviorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSClassBehaviorStatus.setStatus('current')
hh3cCBQoSCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 3), )
if mibBuilder.loadTexts: hh3cCBQoSCarRunInfoTable.setStatus('current')
hh3cCBQoSCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 3, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSCarRunInfoEntry.setStatus('current')
hh3cCBQoSCarGreenPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCarGreenPackets.setStatus('current')
hh3cCBQoSCarGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCarGreenBytes.setStatus('current')
hh3cCBQoSCarRedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCarRedPackets.setStatus('current')
hh3cCBQoSCarRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCarRedBytes.setStatus('current')
hh3cCBQoSCarYellowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCarYellowPackets.setStatus('current')
hh3cCBQoSCarYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSCarYellowBytes.setStatus('current')
hh3cCBQoSGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 4), )
if mibBuilder.loadTexts: hh3cCBQoSGtsRunInfoTable.setStatus('current')
hh3cCBQoSGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 4, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSGtsRunInfoEntry.setStatus('current')
hh3cCBQoSGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSGtsPassedPackets.setStatus('current')
hh3cCBQoSGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSGtsPassedBytes.setStatus('current')
hh3cCBQoSGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSGtsDiscardedPackets.setStatus('current')
hh3cCBQoSGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSGtsDiscardedBytes.setStatus('current')
hh3cCBQoSGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSGtsDelayedPackets.setStatus('current')
hh3cCBQoSGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSGtsDelayedBytes.setStatus('current')
hh3cCBQoSGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSGtsQueueSize.setStatus('current')
hh3cCBQoSRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 5), )
if mibBuilder.loadTexts: hh3cCBQoSRemarkRunInfoTable.setStatus('current')
hh3cCBQoSRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 5, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSRemarkRunInfoEntry.setStatus('current')
hh3cCBQoSRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSRemarkedPackets.setStatus('current')
hh3cCBQoSQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 6), )
if mibBuilder.loadTexts: hh3cCBQoSQueueRunInfoTable.setStatus('current')
hh3cCBQoSQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 6, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSQueueRunInfoEntry.setStatus('current')
hh3cCBQoSQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSQueueMatchedPackets.setStatus('current')
hh3cCBQoSQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSQueueMatchedBytes.setStatus('current')
hh3cCBQoSQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSQueueEnqueuedPackets.setStatus('current')
hh3cCBQoSQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSQueueEnqueuedBytes.setStatus('current')
hh3cCBQoSQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSQueueDiscardedPackets.setStatus('current')
hh3cCBQoSQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSQueueDiscardedBytes.setStatus('current')
hh3cCBQoSWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 7), )
if mibBuilder.loadTexts: hh3cCBQoSWredRunInfoTable.setStatus('current')
hh3cCBQoSWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 7, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: hh3cCBQoSWredRunInfoEntry.setStatus('current')
hh3cCBQoSWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSWredRandomDiscardedPackets.setStatus('current')
hh3cCBQoSWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSWredTailDiscardedPackets.setStatus('current')
hh3cCBQoSAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 8), )
if mibBuilder.loadTexts: hh3cCBQoSAccountingRunInfoTable.setStatus('current')
hh3cCBQoSAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 8, 1), ).setIndexNames((0, "HH3C-CBQOS2-MIB", "hh3cCBQoSApplyObjectIndex"), (0, "HH3C-CBQOS2-MIB", "hh3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hh3cCBQoSAccountingRunInfoEntry.setStatus('current')
hh3cCBQoSAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAccountingPackets.setStatus('current')
hh3cCBQoSAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 5, 6, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSAccountingBytes.setStatus('current')
hh3cCBQoSApplyingStatusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 6))
hh3cCBQoSApplyingStatus = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("busy", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCBQoSApplyingStatus.setStatus('current')
hh3cCBQoSNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 7))
hh3cCBQoSNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 7, 0))
hh3cCBQoSIfPolicyChanged = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 7, 0, 1)).setObjects(("HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyIfIndex"), ("HH3C-CBQOS2-MIB", "hh3cCBQoSIfApplyPolicyDirection"))
if mibBuilder.loadTexts: hh3cCBQoSIfPolicyChanged.setStatus('current')
hh3cCBQoSVlanPolicyChanged = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 65, 2, 1, 7, 0, 2)).setObjects(("HH3C-CBQOS2-MIB", "hh3cCBQoSVlanApplyPolicyVlanid"), ("HH3C-CBQOS2-MIB", "hh3cCBQoSVlanApplyPolicyDirection"))
if mibBuilder.loadTexts: hh3cCBQoSVlanPolicyChanged.setStatus('current')
mibBuilder.exportSymbols("HH3C-CBQOS2-MIB", hh3cCBQoSFrClassApplyPolicyDirection=hh3cCBQoSFrClassApplyPolicyDirection, hh3cCBQoSWredRandomDiscardedPackets=hh3cCBQoSWredRandomDiscardedPackets, hh3cCBQoSCbqEfQueueSize=hh3cCBQoSCbqEfQueueSize, hh3cCBQoSApplyObjectType=hh3cCBQoSApplyObjectType, hh3cCBQoSPvcApplyObjectIfIndex=hh3cCBQoSPvcApplyObjectIfIndex, hh3cCBQoSFrPvcAccountingRunInfoEntry=hh3cCBQoSFrPvcAccountingRunInfoEntry, hh3cCBQoSQueueDiscardedPackets=hh3cCBQoSQueueDiscardedPackets, hh3cCBQoSCbqBeQueueSize=hh3cCBQoSCbqBeQueueSize, hh3cCBQoSNestServiceDot1pValue=hh3cCBQoSNestServiceDot1pValue, hh3cCBQoSCarPolicedPriorityMapType=hh3cCBQoSCarPolicedPriorityMapType, hh3cCBQoSClassifierObjects=hh3cCBQoSClassifierObjects, hh3cCBQoSAtmPvcWredRunInfoTable=hh3cCBQoSAtmPvcWredRunInfoTable, hh3cCBQoSCarRedPackets=hh3cCBQoSCarRedPackets, hh3cCBQoSFrPvcQueueEnqueuedPackets=hh3cCBQoSFrPvcQueueEnqueuedPackets, hh3cCBQoSClassifierType=hh3cCBQoSClassifierType, hh3cCBQoSQueueCfgInfoEntry=hh3cCBQoSQueueCfgInfoEntry, hh3cCBQoSQueueEnqueuedBytes=hh3cCBQoSQueueEnqueuedBytes, hh3cCBQoSFrPvcClassMatchedBytes=hh3cCBQoSFrPvcClassMatchedBytes, hh3cCBQoSFrPvcGtsDelayedBytes=hh3cCBQoSFrPvcGtsDelayedBytes, hh3cCBQoSApplyPolicyIndexObjects=hh3cCBQoSApplyPolicyIndexObjects, hh3cCBQoSApplyObjectTable=hh3cCBQoSApplyObjectTable, hh3cCBQoSIfCbqBeActiveQueueNum=hh3cCBQoSIfCbqBeActiveQueueNum, hh3cCBQoSGtsQueueLength=hh3cCBQoSGtsQueueLength, hh3cCBQoSNestPolicyApplyObjectEntry=hh3cCBQoSNestPolicyApplyObjectEntry, hh3cCBQoSIfQueueDiscardedBytes=hh3cCBQoSIfQueueDiscardedBytes, hh3cCBQoSIfGtsDelayedPackets=hh3cCBQoSIfGtsDelayedPackets, hh3cCBQoSWredClassValue=hh3cCBQoSWredClassValue, hh3cCBQoSGtsDelayedPackets=hh3cCBQoSGtsDelayedPackets, hh3cCBQoSMatchIpAddressType=hh3cCBQoSMatchIpAddressType, hh3cCBQoSCarRedBytes=hh3cCBQoSCarRedBytes, hh3cCBQoSIfGtsPassedBytes=hh3cCBQoSIfGtsPassedBytes, hh3cCBQoSVlanStaticsObjects=hh3cCBQoSVlanStaticsObjects, hh3cCBQoSFrPvcAccountingBytes=hh3cCBQoSFrPvcAccountingBytes, hh3cCBQoSNestPolicyRowStatus=hh3cCBQoSNestPolicyRowStatus, hh3cCBQoSMirrorRowStatus=hh3cCBQoSMirrorRowStatus, hh3cCBQoSFrPvcApplyPolicyDirection=hh3cCBQoSFrPvcApplyPolicyDirection, hh3cCBQoSIfCbqAfQueueSize=hh3cCBQoSIfCbqAfQueueSize, hh3cCBQoSIfGtsRunInfoTable=hh3cCBQoSIfGtsRunInfoTable, hh3cCBQoSApplyPolicyStaticsObjects=hh3cCBQoSApplyPolicyStaticsObjects, hh3cCBQoSVlanPolicyChanged=hh3cCBQoSVlanPolicyChanged, hh3cCBQoSAtmPvcApplyPolicyRowStatus=hh3cCBQoSAtmPvcApplyPolicyRowStatus, hh3cCBQoSIfApplyPolicyName=hh3cCBQoSIfApplyPolicyName, hh3cCBQoSAtmPvcClassMatchBytes=hh3cCBQoSAtmPvcClassMatchBytes, hh3cCBQoSBehaviorType=hh3cCBQoSBehaviorType, hh3cCBQoSNestCustomerVlanID=hh3cCBQoSNestCustomerVlanID, hh3cCBQoSGtsRunInfoTable=hh3cCBQoSGtsRunInfoTable, hh3cCBQoSFrPvcGtsDiscardedPackets=hh3cCBQoSFrPvcGtsDiscardedPackets, hh3cCBQoSFrClassApplyPolicyEntry=hh3cCBQoSFrClassApplyPolicyEntry, hh3cCBQoSAtmPvcCarConformBytes=hh3cCBQoSAtmPvcCarConformBytes, hh3cCBQoSNestPolicyCfgInfoTable=hh3cCBQoSNestPolicyCfgInfoTable, hh3cCBQoSAtmPvcCbqBeQueueSize=hh3cCBQoSAtmPvcCbqBeQueueSize, hh3cCBQoSGtsDelayedBytes=hh3cCBQoSGtsDelayedBytes, hh3cCBQoSCarYellowRemarkValue=hh3cCBQoSCarYellowRemarkValue, hh3cCBQoSClassMatchRunInfoEntry=hh3cCBQoSClassMatchRunInfoEntry, hh3cCBQoSCbqDiscard=hh3cCBQoSCbqDiscard, hh3cCBQoSClassFwdPktbps=hh3cCBQoSClassFwdPktbps, hh3cCBQoSIfAccountingPackets=hh3cCBQoSIfAccountingPackets, hh3cCBQoSVlanClassMatchedPackets=hh3cCBQoSVlanClassMatchedPackets, hh3cCBQoSQueueDropType=hh3cCBQoSQueueDropType, hh3cCBQoSMatchRuleStringValue=hh3cCBQoSMatchRuleStringValue, hh3cCBQoSCarRunInfoEntry=hh3cCBQoSCarRunInfoEntry, hh3cCBQoSAccountingBytes=hh3cCBQoSAccountingBytes, hh3cCBQoSAtmPvcGtsQueueSize=hh3cCBQoSAtmPvcGtsQueueSize, hh3cCBQoSGtsRowStatus=hh3cCBQoSGtsRowStatus, hh3cCBQoSRemarkRunInfoEntry=hh3cCBQoSRemarkRunInfoEntry, hh3cCBQoSAtmPvcCbqRunInfoTable=hh3cCBQoSAtmPvcCbqRunInfoTable, hh3cCBQoSPolicyClassPrecedence=hh3cCBQoSPolicyClassPrecedence, hh3cCBQoSAccountCfgInfoEntry=hh3cCBQoSAccountCfgInfoEntry, hh3cCBQoSAtmPvcClassMatchRunInfoEntry=hh3cCBQoSAtmPvcClassMatchRunInfoEntry, hh3cCBQoSWredCfgInfoEntry=hh3cCBQoSWredCfgInfoEntry, hh3cCBQoSIntApplyObjectIndex=hh3cCBQoSIntApplyObjectIndex, hh3cCBQoSFrPvcApplyPolicyEntry=hh3cCBQoSFrPvcApplyPolicyEntry, hh3cCBQoSAtmPvcApplyPolicyDirection=hh3cCBQoSAtmPvcApplyPolicyDirection, hh3cCBQoSAtmPvcAccountingRunInfoTable=hh3cCBQoSAtmPvcAccountingRunInfoTable, hh3cCBQoSAtmPvcGtsPassedPackets=hh3cCBQoSAtmPvcGtsPassedPackets, hh3cCBQoSPolicyIndexNext=hh3cCBQoSPolicyIndexNext, hh3cCBQoSFrPvcApplyPolicyIfIndex=hh3cCBQoSFrPvcApplyPolicyIfIndex, hh3cCBQoSNestPolicyCfgInfoEntry=hh3cCBQoSNestPolicyCfgInfoEntry, hh3cCBQoSMirrorCfgInfoEntry=hh3cCBQoSMirrorCfgInfoEntry, hh3cCBQoSFrPvcClassAverageRate=hh3cCBQoSFrPvcClassAverageRate, hh3cCBQoSIfApplyPolicyRowStatus=hh3cCBQoSIfApplyPolicyRowStatus, hh3cCBQoSGtsCbs=hh3cCBQoSGtsCbs, hh3cCBQoSFrPvcCarRunInfoTable=hh3cCBQoSFrPvcCarRunInfoTable, hh3cCBQoSIntApplyObjectEntry=hh3cCBQoSIntApplyObjectEntry, hh3cCBQoSCarRunInfoTable=hh3cCBQoSCarRunInfoTable, hh3cCBQoSAtmPvcWredRandomDiscardedPackets=hh3cCBQoSAtmPvcWredRandomDiscardedPackets, hh3cCBQoSCarYellowAction=hh3cCBQoSCarYellowAction, hh3cCBQoSAtmPvcApplyPolicyName=hh3cCBQoSAtmPvcApplyPolicyName, hh3cCBQoSWredClassHighLimit=hh3cCBQoSWredClassHighLimit, hh3cCBQoSPvcApplyObjectTable=hh3cCBQoSPvcApplyObjectTable, hh3cCBQoSQueueBandwidthValue=hh3cCBQoSQueueBandwidthValue, hh3cCBQoSWredClassDiscardProb=hh3cCBQoSWredClassDiscardProb, hh3cCBQoSPriorityMapAuto=hh3cCBQoSPriorityMapAuto, hh3cCBQoSAtmPvcStaticsObjects=hh3cCBQoSAtmPvcStaticsObjects, hh3cCBQoSFrPvcGtsDiscardedBytes=hh3cCBQoSFrPvcGtsDiscardedBytes, hh3cCBQoSVlanApplyPolicyDirection=hh3cCBQoSVlanApplyPolicyDirection, hh3cCBQoSIfAccountingRunInfoTable=hh3cCBQoSIfAccountingRunInfoTable, hh3cCBQoSIfClassMatchRunInfoTable=hh3cCBQoSIfClassMatchRunInfoTable, hh3cCBQoSRedirectType=hh3cCBQoSRedirectType, hh3cCBQoSGtsPassedPackets=hh3cCBQoSGtsPassedPackets, hh3cCBQoSAtmPvcApplyPolicyIfIndex=hh3cCBQoSAtmPvcApplyPolicyIfIndex, hh3cCBQoSFirewallCfgInfoTable=hh3cCBQoSFirewallCfgInfoTable, hh3cCBQoSAtmPvcCbqBeTotalQueueNum=hh3cCBQoSAtmPvcCbqBeTotalQueueNum, hh3cCBQoSQueueMatchedBytes=hh3cCBQoSQueueMatchedBytes, hh3cCBQoSMatchRuleCfgInfoEntry=hh3cCBQoSMatchRuleCfgInfoEntry, hh3cCBQoSPolicyClassCfgOrder=hh3cCBQoSPolicyClassCfgOrder, hh3cCBQoSNestCfgInfoEntry=hh3cCBQoSNestCfgInfoEntry, hh3cCBQoSAtmPvcCbqAfQueueSize=hh3cCBQoSAtmPvcCbqAfQueueSize, hh3cCBQoSWredRunInfoTable=hh3cCBQoSWredRunInfoTable, hh3cCBQoSGlobalApplyName=hh3cCBQoSGlobalApplyName, hh3cCBQosClassifierMatchRuleNextIndex=hh3cCBQosClassifierMatchRuleNextIndex, hh3cCBQoSIfCbqBeTotalQueueNum=hh3cCBQoSIfCbqBeTotalQueueNum, hh3cCBQoSAtmPvcCarRunInfoTable=hh3cCBQoSAtmPvcCarRunInfoTable, hh3cCBQoSFrPvcRemarkRunInfoEntry=hh3cCBQoSFrPvcRemarkRunInfoEntry, hh3cCBQoSIfGtsDiscardedBytes=hh3cCBQoSIfGtsDiscardedBytes, hh3cCBQoSAtmPvcCbqEfQueueSize=hh3cCBQoSAtmPvcCbqEfQueueSize, hh3cCBQoSGlobalApplyRowStatus=hh3cCBQoSGlobalApplyRowStatus, hh3cCBQoSFrPvcCbqBeTotalQueueNum=hh3cCBQoSFrPvcCbqBeTotalQueueNum, hh3cCBQoSAtmPvcCbqBeMaxActiveQueueNum=hh3cCBQoSAtmPvcCbqBeMaxActiveQueueNum, hh3cCBQoSWredClassLowLimit=hh3cCBQoSWredClassLowLimit, hh3cCBQoSClassifierIndexNext=hh3cCBQoSClassifierIndexNext, hh3cCBQoSGtsPassedBytes=hh3cCBQoSGtsPassedBytes, hh3cCBQoSRemarkedPackets=hh3cCBQoSRemarkedPackets, hh3cCBQoSFrPvcCbqBeActiveQueueNum=hh3cCBQoSFrPvcCbqBeActiveQueueNum, hh3cCBQoSIfCbqBeQueueSize=hh3cCBQoSIfCbqBeQueueSize, hh3cCBQoSFrPvcAccountingRunInfoTable=hh3cCBQoSFrPvcAccountingRunInfoTable, hh3cCBQoSWredClassCfgInfoEntry=hh3cCBQoSWredClassCfgInfoEntry, hh3cCBQoSIfCarRedBytes=hh3cCBQoSIfCarRedBytes, hh3cCBQoSNatServiceClass=hh3cCBQoSNatServiceClass, hh3cCBQoSIfCarRedPackets=hh3cCBQoSIfCarRedPackets, hh3cCBQoSVlanAccountingRunInfoTable=hh3cCBQoSVlanAccountingRunInfoTable, hh3cCBQoSClassBehaviorStatus=hh3cCBQoSClassBehaviorStatus, PYSNMP_MODULE_ID=hh3cCBQos2, hh3cCBQoSAtmPvcApplyPolicyTable=hh3cCBQoSAtmPvcApplyPolicyTable, hh3cCBQoSNestPolicyApplyObjectIndex=hh3cCBQoSNestPolicyApplyObjectIndex, hh3cCBQoSAtmPvcQueueEnqueuedBytes=hh3cCBQoSAtmPvcQueueEnqueuedBytes, hh3cCBQoSIfWredRunInfoTable=hh3cCBQoSIfWredRunInfoTable, hh3cCBQoSFrPvcQueueDiscardedPackets=hh3cCBQoSFrPvcQueueDiscardedPackets, WredType=WredType, hh3cCBQoSRedirectIpv6Interface1=hh3cCBQoSRedirectIpv6Interface1, hh3cCBQoSIfAccountingRunInfoEntry=hh3cCBQoSIfAccountingRunInfoEntry, hh3cQos2=hh3cQos2, hh3cCBQoSGlobalApplyTable=hh3cCBQoSGlobalApplyTable, hh3cCBQoSAtmPvcGtsRunInfoTable=hh3cCBQoSAtmPvcGtsRunInfoTable, hh3cCBQoSCarRedAction=hh3cCBQoSCarRedAction, hh3cCBQoSFrPvcQueueMatchedBytes=hh3cCBQoSFrPvcQueueMatchedBytes, hh3cCBQoSApplyObjectEntry=hh3cCBQoSApplyObjectEntry, hh3cCBQoSPolicyClassBehaviorName=hh3cCBQoSPolicyClassBehaviorName, hh3cCBQoSIfQueueEnqueuedBytes=hh3cCBQoSIfQueueEnqueuedBytes, hh3cCBQoSRemarkType=hh3cCBQoSRemarkType, hh3cCBQoSIfQueueRunInfoEntry=hh3cCBQoSIfQueueRunInfoEntry, hh3cCBQoSBehaviorRowStatus=hh3cCBQoSBehaviorRowStatus, hh3cCBQoSCarGreenRemarkValue=hh3cCBQoSCarGreenRemarkValue, hh3cCBQoSIfCarYellowPackets=hh3cCBQoSIfCarYellowPackets, hh3cCBQoSIfCbqAfAllocatedQueueNum=hh3cCBQoSIfCbqAfAllocatedQueueNum, hh3cCBQoSAtmPvcClassAverageRate=hh3cCBQoSAtmPvcClassAverageRate, hh3cCBQoSClassDropPktbps=hh3cCBQoSClassDropPktbps, hh3cCBQoSAtmPvcGtsDelayedBytes=hh3cCBQoSAtmPvcGtsDelayedBytes, hh3cCBQoSQueueEnqueuedPackets=hh3cCBQoSQueueEnqueuedPackets, hh3cCBQoSPolicyClassRowStatus=hh3cCBQoSPolicyClassRowStatus, hh3cCBQoSNatCfgInfoTable=hh3cCBQoSNatCfgInfoTable, hh3cCBQoSCbqAfQueueSize=hh3cCBQoSCbqAfQueueSize, hh3cCBQoSRedirectCfgInfoEntry=hh3cCBQoSRedirectCfgInfoEntry, hh3cCBQoSIfClassMatchedBytes=hh3cCBQoSIfClassMatchedBytes, hh3cCBQoSAtmPvcGtsDiscardedPackets=hh3cCBQoSAtmPvcGtsDiscardedPackets, hh3cCBQoSClassifierLayer=hh3cCBQoSClassifierLayer, hh3cCBQoSCarRowStatus=hh3cCBQoSCarRowStatus, hh3cCBQoSMatchRuleRowStatus=hh3cCBQoSMatchRuleRowStatus, hh3cCBQoSIfQueueDiscardedPackets=hh3cCBQoSIfQueueDiscardedPackets, hh3cCBQoSAtmPvcCbqQueueSize=hh3cCBQoSAtmPvcCbqQueueSize, hh3cCBQoSQueueRowStatus=hh3cCBQoSQueueRowStatus, hh3cCBQoSIfRemarkRunInfoTable=hh3cCBQoSIfRemarkRunInfoTable, hh3cCBQoSWredType=hh3cCBQoSWredType, hh3cCBQoSAtmPvcQueueDiscardedBytes=hh3cCBQoSAtmPvcQueueDiscardedBytes, hh3cCBQoSCarAggregativeCarIndex=hh3cCBQoSCarAggregativeCarIndex, hh3cCBQoSVlanApplyPolicyTable=hh3cCBQoSVlanApplyPolicyTable, hh3cCBQoSSamplingNum=hh3cCBQoSSamplingNum, hh3cCBQoSVlanApplyObjectIndex=hh3cCBQoSVlanApplyObjectIndex, hh3cCBQoSIfGtsRunInfoEntry=hh3cCBQoSIfGtsRunInfoEntry, hh3cCBQoSRemarkCfgInfoEntry=hh3cCBQoSRemarkCfgInfoEntry, hh3cCBQoSNestRowStatus=hh3cCBQoSNestRowStatus, hh3cCBQoSAggregativeCarCfgInfoEntry=hh3cCBQoSAggregativeCarCfgInfoEntry, hh3cCBQoSGtsDiscardedPackets=hh3cCBQoSGtsDiscardedPackets, hh3cCBQoSAtmPvcGtsDiscardedBytes=hh3cCBQoSAtmPvcGtsDiscardedBytes, hh3cCBQoSAtmPvcRemarkRunInfoEntry=hh3cCBQoSAtmPvcRemarkRunInfoEntry, hh3cCBQoSIfGtsDiscardedPackets=hh3cCBQoSIfGtsDiscardedPackets, hh3cCBQoSApplyObjectSubClassSec=hh3cCBQoSApplyObjectSubClassSec, hh3cCBQoSPvcApplyObjectIndex=hh3cCBQoSPvcApplyObjectIndex, hh3cCBQoSBehaviorCfgInfoTable=hh3cCBQoSBehaviorCfgInfoTable, hh3cCBQoSPolicyRouteCfgInfoEntry=hh3cCBQoSPolicyRouteCfgInfoEntry, hh3cCBQoSPolicyRouteIpAddrType=hh3cCBQoSPolicyRouteIpAddrType, hh3cCBQoSIfWredTailDiscardedPackets=hh3cCBQoSIfWredTailDiscardedPackets, hh3cCBQoSPolicyIndex=hh3cCBQoSPolicyIndex, hh3cCBQoSGtsEbs=hh3cCBQoSGtsEbs, hh3cCBQoSIfGtsQueueSize=hh3cCBQoSIfGtsQueueSize, hh3cCBQoSPolicyClassIndex=hh3cCBQoSPolicyClassIndex, hh3cCBQoSMatchRuleType=hh3cCBQoSMatchRuleType, hh3cCBQoSQueueCfgInfoTable=hh3cCBQoSQueueCfgInfoTable, hh3cCBQoSPolicyClassCfgInfoTable=hh3cCBQoSPolicyClassCfgInfoTable, hh3cCBQoSMirrorType=hh3cCBQoSMirrorType, hh3cCBQoSIfApplyPolicyEntry=hh3cCBQoSIfApplyPolicyEntry, hh3cCBQoSFrPvcGtsQueueSize=hh3cCBQoSFrPvcGtsQueueSize, hh3cCBQoSFrPvcWredRunInfoTable=hh3cCBQoSFrPvcWredRunInfoTable, hh3cCBQoSIfApplyPolicyIfIndex=hh3cCBQoSIfApplyPolicyIfIndex, hh3cCBQoSGtsQueueSize=hh3cCBQoSGtsQueueSize, hh3cCBQoSFrPvcCbqAfQueueSize=hh3cCBQoSFrPvcCbqAfQueueSize, hh3cCBQoSClassifierCfgInfoEntry=hh3cCBQoSClassifierCfgInfoEntry, hh3cCBQoSIntApplyObjectIfIndex=hh3cCBQoSIntApplyObjectIfIndex, hh3cCBQoSPolicyClassCfgInfoEntry=hh3cCBQoSPolicyClassCfgInfoEntry, hh3cCBQoSAggregativeCarCfgInfoTable=hh3cCBQoSAggregativeCarCfgInfoTable, hh3cCBQoSFrPvcStaticsObjects=hh3cCBQoSFrPvcStaticsObjects, hh3cCBQoSFrPvcCbqDiscard=hh3cCBQoSFrPvcCbqDiscard, hh3cCBQoSMirrorCfgInfoTable=hh3cCBQoSMirrorCfgInfoTable, hh3cCBQoSFrPvcRemarkRunInfoTable=hh3cCBQoSFrPvcRemarkRunInfoTable, hh3cCBQoSWredRunInfoEntry=hh3cCBQoSWredRunInfoEntry, hh3cCBQoSFrPvcCarRunInfoEntry=hh3cCBQoSFrPvcCarRunInfoEntry, hh3cCBQoSVlanApplyPolicyEntry=hh3cCBQoSVlanApplyPolicyEntry, hh3cCBQoSAtmPvcAccountingPackets=hh3cCBQoSAtmPvcAccountingPackets, hh3cCBQoSIfRemarkRunInfoEntry=hh3cCBQoSIfRemarkRunInfoEntry, hh3cCBQoSMatchRuleIntValue1=hh3cCBQoSMatchRuleIntValue1, hh3cCBQoSClassifierOperator=hh3cCBQoSClassifierOperator, hh3cCBQoSCarGreenPackets=hh3cCBQoSCarGreenPackets, hh3cCBQoSFrPvcQueueDiscardedBytes=hh3cCBQoSFrPvcQueueDiscardedBytes, QueueType=QueueType, hh3cCBQoSPolicyRouteBackup=hh3cCBQoSPolicyRouteBackup, hh3cCBQoSAtmPvcQueueMatchedBytes=hh3cCBQoSAtmPvcQueueMatchedBytes, hh3cCBQoSClassFwdPktpps=hh3cCBQoSClassFwdPktpps, hh3cCBQoSBehaviorIndexNext=hh3cCBQoSBehaviorIndexNext, hh3cCBQoSCbqQueueSize=hh3cCBQoSCbqQueueSize, DirectionType=DirectionType, hh3cCBQoSFrPvcCbqBeMaxActiveQueueNum=hh3cCBQoSFrPvcCbqBeMaxActiveQueueNum, hh3cCBQoSQueueQueueNumber=hh3cCBQoSQueueQueueNumber, hh3cCBQoSFrPvcCarConformPackets=hh3cCBQoSFrPvcCarConformPackets, hh3cCBQoSAtmPvcAccountingRunInfoEntry=hh3cCBQoSAtmPvcAccountingRunInfoEntry, hh3cCBQoSCarAggregativeCarName=hh3cCBQoSCarAggregativeCarName, hh3cCBQoSIfClassMatchRunInfoEntry=hh3cCBQoSIfClassMatchRunInfoEntry, hh3cCBQoSVlanApplyPolicyVlanid=hh3cCBQoSVlanApplyPolicyVlanid, hh3cCBQoSCbqRunInfoTable=hh3cCBQoSCbqRunInfoTable, hh3cCBQoSNatMainNumber=hh3cCBQoSNatMainNumber, hh3cCBQoSIfCbqRunInfoEntry=hh3cCBQoSIfCbqRunInfoEntry, hh3cCBQoSGtsCir=hh3cCBQoSGtsCir, hh3cCBQoSObjects=hh3cCBQoSObjects, hh3cCBQoSAtmPvcApplyPolicyEntry=hh3cCBQoSAtmPvcApplyPolicyEntry, hh3cCBQoSIfCbqDiscard=hh3cCBQoSIfCbqDiscard, hh3cCBQoSAtmPvcGtsRunInfoEntry=hh3cCBQoSAtmPvcGtsRunInfoEntry, hh3cCBQoSAtmPvcCbqDiscard=hh3cCBQoSAtmPvcCbqDiscard, hh3cCBQoSAccountCfgInfoTable=hh3cCBQoSAccountCfgInfoTable, CarAction=CarAction, hh3cCBQoSIfGtsPassedPackets=hh3cCBQoSIfGtsPassedPackets, hh3cCBQoSFrPvcQueueEnqueuedBytes=hh3cCBQoSFrPvcQueueEnqueuedBytes, hh3cCBQoSPriorityMapRowStatus=hh3cCBQoSPriorityMapRowStatus, hh3cCBQoSCbqAfAllocatedQueueNum=hh3cCBQoSCbqAfAllocatedQueueNum, hh3cCBQoSFrClassApplyPolicyTable=hh3cCBQoSFrClassApplyPolicyTable, hh3cCBQoSWredWeightConst=hh3cCBQoSWredWeightConst)
mibBuilder.exportSymbols("HH3C-CBQOS2-MIB", hh3cCBQoSIfAccountingBytes=hh3cCBQoSIfAccountingBytes, hh3cCBQoSApplyingStatusObjects=hh3cCBQoSApplyingStatusObjects, hh3cCBQoSAtmPvcApplyPolicyVCI=hh3cCBQoSAtmPvcApplyPolicyVCI, hh3cCBQoSApplyingStatus=hh3cCBQoSApplyingStatus, hh3cCBQoSNestServiceVlanID=hh3cCBQoSNestServiceVlanID, hh3cCBQoSIfQueueRunInfoTable=hh3cCBQoSIfQueueRunInfoTable, hh3cCBQoSFrPvcWredRunInfoEntry=hh3cCBQoSFrPvcWredRunInfoEntry, hh3cCBQoSMirrorVlanID=hh3cCBQoSMirrorVlanID, hh3cCBQoSApplyObjectMainSite=hh3cCBQoSApplyObjectMainSite, hh3cCBQoSPolicyObjects=hh3cCBQoSPolicyObjects, hh3cCBQoSBehaviorObjects=hh3cCBQoSBehaviorObjects, hh3cCBQoSFrPvcQueueRunInfoTable=hh3cCBQoSFrPvcQueueRunInfoTable, hh3cCBQoSIfGtsDelayedBytes=hh3cCBQoSIfGtsDelayedBytes, hh3cCBQoSNotifications=hh3cCBQoSNotifications, hh3cCBQoSFrPvcApplyPolicyRowStatus=hh3cCBQoSFrPvcApplyPolicyRowStatus, hh3cCBQoSClassDropPktpps=hh3cCBQoSClassDropPktpps, hh3cCBQoSAtmPvcClassMatchPackets=hh3cCBQoSAtmPvcClassMatchPackets, hh3cCBQoSVlanApplyPriority=hh3cCBQoSVlanApplyPriority, hh3cCBQoSMatchRuleIndex=hh3cCBQoSMatchRuleIndex, hh3cCBQoSClassifierIndex=hh3cCBQoSClassifierIndex, hh3cCBQoSPolicyClassClassifierIndex=hh3cCBQoSPolicyClassClassifierIndex, hh3cCBQoSIfClassMatchedPackets=hh3cCBQoSIfClassMatchedPackets, hh3cCBQoSRemarkRowStatus=hh3cCBQoSRemarkRowStatus, hh3cCBQoSIfApplyPolicyDirection=hh3cCBQoSIfApplyPolicyDirection, hh3cCBQoSFrPvcWredRandomDiscardedPackets=hh3cCBQoSFrPvcWredRandomDiscardedPackets, hh3cCBQoSFirewallAction=hh3cCBQoSFirewallAction, hh3cCBQoSIfCarRunInfoTable=hh3cCBQoSIfCarRunInfoTable, hh3cCBQoSGtsRunInfoEntry=hh3cCBQoSGtsRunInfoEntry, hh3cCBQoSAtmPvcWredRunInfoEntry=hh3cCBQoSAtmPvcWredRunInfoEntry, hh3cCBQoSIfWredRunInfoEntry=hh3cCBQoSIfWredRunInfoEntry, hh3cCBQoSIfCarGreenBytes=hh3cCBQoSIfCarGreenBytes, hh3cCBQoSVlanClassMatchRunInfoTable=hh3cCBQoSVlanClassMatchRunInfoTable, hh3cCBQoSClassFlowStatInterval=hh3cCBQoSClassFlowStatInterval, hh3cCBQoSIfCbqEfQueueSize=hh3cCBQoSIfCbqEfQueueSize, hh3cCBQoSQueueCbs=hh3cCBQoSQueueCbs, hh3cCBQoSSamplingRowStatus=hh3cCBQoSSamplingRowStatus, hh3cCBQoSPolicyType=hh3cCBQoSPolicyType, hh3cCBQoSNestCustomerDot1pValue=hh3cCBQoSNestCustomerDot1pValue, hh3cCBQoSCarGreenAction=hh3cCBQoSCarGreenAction, hh3cCBQoSClassMatchedPackets=hh3cCBQoSClassMatchedPackets, hh3cCBQoSPolicyName=hh3cCBQoSPolicyName, hh3cCBQoSPolicyCfgInfoTable=hh3cCBQoSPolicyCfgInfoTable, hh3cCBQoSCarCir=hh3cCBQoSCarCir, hh3cCBQoSQueueBandwidthUnit=hh3cCBQoSQueueBandwidthUnit, hh3cCBQoSMirrorIfIndex=hh3cCBQoSMirrorIfIndex, hh3cCBQoSApplyObjectSubClass=hh3cCBQoSApplyObjectSubClass, hh3cCBQoSMatchRuleIntValue2=hh3cCBQoSMatchRuleIntValue2, hh3cCBQoSFrClassApplyPolicyRowStatus=hh3cCBQoSFrClassApplyPolicyRowStatus, hh3cCBQoSAccountRowStatus=hh3cCBQoSAccountRowStatus, hh3cCBQoSIfCbqRunInfoTable=hh3cCBQoSIfCbqRunInfoTable, hh3cCBQoSAtmPvcGtsDelayedPackets=hh3cCBQoSAtmPvcGtsDelayedPackets, hh3cCBQoSFrPvcGtsPassedBytes=hh3cCBQoSFrPvcGtsPassedBytes, hh3cCBQoSFrPvcRemarkedPackets=hh3cCBQoSFrPvcRemarkedPackets, RemarkType=RemarkType, hh3cCBQoSPolicyClassBehaviorIndex=hh3cCBQoSPolicyClassBehaviorIndex, hh3cCBQoSClassifierRowStatus=hh3cCBQoSClassifierRowStatus, hh3cCBQoSRedirectCfgInfoTable=hh3cCBQoSRedirectCfgInfoTable, hh3cCBQoSIfQueueMatchedBytes=hh3cCBQoSIfQueueMatchedBytes, hh3cCBQoSAtmPvcCarConformPackets=hh3cCBQoSAtmPvcCarConformPackets, hh3cCBQoSApplyObjectIndex=hh3cCBQoSApplyObjectIndex, hh3cCBQoSFrPvcQueueMatchedPackets=hh3cCBQoSFrPvcQueueMatchedPackets, hh3cCBQoSPriorityMapCfgInfoTable=hh3cCBQoSPriorityMapCfgInfoTable, hh3cCBQoSFrPvcCbqRunInfoTable=hh3cCBQoSFrPvcCbqRunInfoTable, hh3cCBQoSVlanAccountingBytes=hh3cCBQoSVlanAccountingBytes, hh3cCBQoSAtmPvcRemarkRunInfoTable=hh3cCBQoSAtmPvcRemarkRunInfoTable, hh3cCBQoSRedirectIpAddress1=hh3cCBQoSRedirectIpAddress1, hh3cCBQoSAtmPvcRemarkedPackets=hh3cCBQoSAtmPvcRemarkedPackets, hh3cCBQoSApplyPolicyObjects=hh3cCBQoSApplyPolicyObjects, hh3cCBQoSRedirectIpv6Interface2=hh3cCBQoSRedirectIpv6Interface2, hh3cCBQoSFrPvcCarConformBytes=hh3cCBQoSFrPvcCarConformBytes, hh3cCBQoSFrPvcClassMatchedPackets=hh3cCBQoSFrPvcClassMatchedPackets, hh3cCBQoSNestPolicyApplyObjectTable=hh3cCBQoSNestPolicyApplyObjectTable, hh3cCBQoSCarYellowBytes=hh3cCBQoSCarYellowBytes, hh3cCBQoSNatRowStatus=hh3cCBQoSNatRowStatus, hh3cCBQoSIfCarGreenPackets=hh3cCBQoSIfCarGreenPackets, hh3cCBQoSPriorityMapExportType=hh3cCBQoSPriorityMapExportType, hh3cCBQoSWredTailDiscardedPackets=hh3cCBQoSWredTailDiscardedPackets, hh3cCBQoSRedirectIpAddressType=hh3cCBQoSRedirectIpAddressType, hh3cCBQoSAtmPvcCbqRunInfoEntry=hh3cCBQoSAtmPvcCbqRunInfoEntry, hh3cCBQoSClassifierCfgInfoTable=hh3cCBQoSClassifierCfgInfoTable, hh3cCBQoSRemarkRunInfoTable=hh3cCBQoSRemarkRunInfoTable, hh3cCBQoSAccountingRunInfoTable=hh3cCBQoSAccountingRunInfoTable, hh3cCBQoSAtmPvcCbqBeActiveQueueNum=hh3cCBQoSAtmPvcCbqBeActiveQueueNum, hh3cCBQoSSamplingCfgInfoTable=hh3cCBQoSSamplingCfgInfoTable, hh3cCBQoSVlanApplyPolicyName=hh3cCBQoSVlanApplyPolicyName, hh3cCBQoSFrPvcQueueRunInfoEntry=hh3cCBQoSFrPvcQueueRunInfoEntry, hh3cCBQoSAtmPvcClassMatchRunInfoTable=hh3cCBQoSAtmPvcClassMatchRunInfoTable, hh3cCBQoSApplyObjectDirection=hh3cCBQoSApplyObjectDirection, hh3cCBQoSIfCarYellowBytes=hh3cCBQoSIfCarYellowBytes, hh3cCBQoSQueueRunInfoTable=hh3cCBQoSQueueRunInfoTable, hh3cCBQoSGtsCfgInfoEntry=hh3cCBQoSGtsCfgInfoEntry, hh3cCBQoSRemarkValue=hh3cCBQoSRemarkValue, hh3cCBQoSFrPvcGtsDelayedPackets=hh3cCBQoSFrPvcGtsDelayedPackets, hh3cCBQoSPriorityMapGroupIndex=hh3cCBQoSPriorityMapGroupIndex, hh3cCBQoSBehaviorCfgInfoEntry=hh3cCBQoSBehaviorCfgInfoEntry, hh3cCBQoSPriorityMapCfgInfoEntry=hh3cCBQoSPriorityMapCfgInfoEntry, hh3cCBQoSFrPvcClassMatchRunInfoEntry=hh3cCBQoSFrPvcClassMatchRunInfoEntry, hh3cCBQoSNatBackupNumber=hh3cCBQoSNatBackupNumber, hh3cCBQoSPolicyClassClassifierName=hh3cCBQoSPolicyClassClassifierName, hh3cCBQoSAtmPvcApplyPolicyVPI=hh3cCBQoSAtmPvcApplyPolicyVPI, hh3cCBQoSQueueDiscardedBytes=hh3cCBQoSQueueDiscardedBytes, hh3cCBQoSFrPvcGtsRunInfoTable=hh3cCBQoSFrPvcGtsRunInfoTable, hh3cCBQoSQueueCbsRatio=hh3cCBQoSQueueCbsRatio, hh3cCBQoSPolicyRowStatus=hh3cCBQoSPolicyRowStatus, hh3cCBQoSSamplingCfgInfoEntry=hh3cCBQoSSamplingCfgInfoEntry, hh3cCBQoSNatCfgInfoEntry=hh3cCBQoSNatCfgInfoEntry, hh3cCBQoSVlanApplyObjectEntry=hh3cCBQoSVlanApplyObjectEntry, hh3cCBQoSCarEbs=hh3cCBQoSCarEbs, hh3cCBQoSPolicyRouteCfgInfoTable=hh3cCBQoSPolicyRouteCfgInfoTable, hh3cCBQoSRedirectIpAddress2=hh3cCBQoSRedirectIpAddress2, hh3cCBQoSBehaviorName=hh3cCBQoSBehaviorName, hh3cCBQoSPolicyRouteNexthop=hh3cCBQoSPolicyRouteNexthop, hh3cCBQoSFrPvcApplyPolicyDlciNum=hh3cCBQoSFrPvcApplyPolicyDlciNum, hh3cCBQoSNestCfgInfoTable=hh3cCBQoSNestCfgInfoTable, hh3cCBQoSAggregativeCarRowStatus=hh3cCBQoSAggregativeCarRowStatus, hh3cCBQoSCarYellowPackets=hh3cCBQoSCarYellowPackets, hh3cCBQoSIfCarRunInfoEntry=hh3cCBQoSIfCarRunInfoEntry, hh3cCBQoSMatchRuleCfgInfoTable=hh3cCBQoSMatchRuleCfgInfoTable, hh3cCBQoSAtmPvcQueueRunInfoEntry=hh3cCBQoSAtmPvcQueueRunInfoEntry, hh3cCBQoSCbqBeTotalQueueNum=hh3cCBQoSCbqBeTotalQueueNum, hh3cCBQoSAtmPvcWredTailDiscardedPackets=hh3cCBQoSAtmPvcWredTailDiscardedPackets, hh3cCBQoSPvcApplyObjectEntry=hh3cCBQoSPvcApplyObjectEntry, hh3cCBQoSQueueType=hh3cCBQoSQueueType, hh3cCBQoSMatchRuleIfNot=hh3cCBQoSMatchRuleIfNot, hh3cCBQoSFrPvcCbqBeQueueSize=hh3cCBQoSFrPvcCbqBeQueueSize, hh3cCBQoSIfApplyPolicyEnableDynamic=hh3cCBQoSIfApplyPolicyEnableDynamic, hh3cCBQoSFrPvcApplyPolicyName=hh3cCBQoSFrPvcApplyPolicyName, hh3cCBQoSNestPolicyName=hh3cCBQoSNestPolicyName, hh3cCBQoSPolicyCfgInfoEntry=hh3cCBQoSPolicyCfgInfoEntry, hh3cCBQoSCbqBeMaxActiveQueueNum=hh3cCBQoSCbqBeMaxActiveQueueNum, hh3cCBQoSVlanAccountingRunInfoEntry=hh3cCBQoSVlanAccountingRunInfoEntry, MatchRuleType=MatchRuleType, hh3cCBQos2=hh3cCBQos2, hh3cCBQoSAtmPvcQueueDiscardedPackets=hh3cCBQoSAtmPvcQueueDiscardedPackets, hh3cCBQoSCarCbs=hh3cCBQoSCarCbs, hh3cCBQoSIfCbqBeMaxActiveQueueNum=hh3cCBQoSIfCbqBeMaxActiveQueueNum, hh3cCBQoSAtmPvcAccountingBytes=hh3cCBQoSAtmPvcAccountingBytes, hh3cCBQoSCarRedRemarkValue=hh3cCBQoSCarRedRemarkValue, hh3cCBQoSGlobalApplyEntry=hh3cCBQoSGlobalApplyEntry, hh3cCBQoSQueueMatchedPackets=hh3cCBQoSQueueMatchedPackets, hh3cCBQoSClassifierRuleCount=hh3cCBQoSClassifierRuleCount, hh3cCBQoSGlobalApplyDirection=hh3cCBQoSGlobalApplyDirection, hh3cCBQoSVlanApplyObjectVlanID=hh3cCBQoSVlanApplyObjectVlanID, hh3cCBQoSIfQueueMatchedPackets=hh3cCBQoSIfQueueMatchedPackets, hh3cCBQoSClassMatchRunInfoTable=hh3cCBQoSClassMatchRunInfoTable, hh3cCBQoSPolicyConfigMode=hh3cCBQoSPolicyConfigMode, hh3cCBQoSIfWredRandomDiscardedPackets=hh3cCBQoSIfWredRandomDiscardedPackets, hh3cCBQoSCarGreenBytes=hh3cCBQoSCarGreenBytes, hh3cCBQoSFrPvcCbqAfAllocatedQueueNum=hh3cCBQoSFrPvcCbqAfAllocatedQueueNum, hh3cCBQoSPriorityMapImportType=hh3cCBQoSPriorityMapImportType, hh3cCBQoSFrPvcGtsRunInfoEntry=hh3cCBQoSFrPvcGtsRunInfoEntry, hh3cCBQoSGtsDiscardedBytes=hh3cCBQoSGtsDiscardedBytes, hh3cCBQoSAtmPvcQueueMatchedPackets=hh3cCBQoSAtmPvcQueueMatchedPackets, hh3cCBQoSPvcApplyObjectPvcID=hh3cCBQoSPvcApplyObjectPvcID, hh3cCBQoSIfStaticsObjects=hh3cCBQoSIfStaticsObjects, hh3cCBQoSQueueLength=hh3cCBQoSQueueLength, hh3cCBQoSIfPolicyChanged=hh3cCBQoSIfPolicyChanged, hh3cCBQoSFrPvcWredTailDiscardedPackets=hh3cCBQoSFrPvcWredTailDiscardedPackets, hh3cCBQoSIfApplyPolicyTable=hh3cCBQoSIfApplyPolicyTable, hh3cCBQoSVlanAccountingPackets=hh3cCBQoSVlanAccountingPackets, hh3cCBQoSAccounting=hh3cCBQoSAccounting, hh3cCBQoSRemarkCfgInfoTable=hh3cCBQoSRemarkCfgInfoTable, hh3cCBQoSFrClassApplyPolicyFrClassName=hh3cCBQoSFrClassApplyPolicyFrClassName, hh3cCBQoSMatchIpAddress=hh3cCBQoSMatchIpAddress, hh3cCBQoSAtmPvcCarExceedPackets=hh3cCBQoSAtmPvcCarExceedPackets, hh3cCBQoSPolicyRouteRowStatus=hh3cCBQoSPolicyRouteRowStatus, hh3cCBQoSAtmPvcGtsPassedBytes=hh3cCBQoSAtmPvcGtsPassedBytes, hh3cCBQoSIfCbqQueueSize=hh3cCBQoSIfCbqQueueSize, hh3cCBQoSRedirectIfIndex=hh3cCBQoSRedirectIfIndex, hh3cCBQoSCarCfgInfoTable=hh3cCBQoSCarCfgInfoTable, hh3cCBQoSVlanClassMatchRunInfoEntry=hh3cCBQoSVlanClassMatchRunInfoEntry, hh3cCBQoSCarPbs=hh3cCBQoSCarPbs, hh3cCBQoSCarCfgInfoEntry=hh3cCBQoSCarCfgInfoEntry, hh3cCBQoSAtmPvcQueueEnqueuedPackets=hh3cCBQoSAtmPvcQueueEnqueuedPackets, hh3cCBQoSAtmPvcCarExceedBytes=hh3cCBQoSAtmPvcCarExceedBytes, hh3cCBQoSVlanApplyPolicyRowStatus=hh3cCBQoSVlanApplyPolicyRowStatus, hh3cCBQoSAtmPvcCarRunInfoEntry=hh3cCBQoSAtmPvcCarRunInfoEntry, hh3cCBQoSCbqRunInfoEntry=hh3cCBQoSCbqRunInfoEntry, hh3cCBQoSAccountingRunInfoEntry=hh3cCBQoSAccountingRunInfoEntry, hh3cCBQoSFrPvcCbqQueueSize=hh3cCBQoSFrPvcCbqQueueSize, QueueBandwidthUnit=QueueBandwidthUnit, hh3cCBQoSIfClassAverageRate=hh3cCBQoSIfClassAverageRate, hh3cCBQoSFirewallRowStatus=hh3cCBQoSFirewallRowStatus, hh3cCBQoSAccountingPackets=hh3cCBQoSAccountingPackets, hh3cCBQoSStaticsObjects=hh3cCBQoSStaticsObjects, hh3cCBQoSFrPvcApplyPolicyTable=hh3cCBQoSFrPvcApplyPolicyTable, hh3cCBQoSPolicyClassMode=hh3cCBQoSPolicyClassMode, hh3cCBQoSFrPvcAccountingPackets=hh3cCBQoSFrPvcAccountingPackets, hh3cCBQoSVlanApplyObjectTable=hh3cCBQoSVlanApplyObjectTable, hh3cCBQoSIntApplyObjectTable=hh3cCBQoSIntApplyObjectTable, hh3cCBQoSQueueRunInfoEntry=hh3cCBQoSQueueRunInfoEntry, hh3cCBQoSAtmPvcCbqAfAllocatedQueueNum=hh3cCBQoSAtmPvcCbqAfAllocatedQueueNum, hh3cCBQoSIfRemarkedPackets=hh3cCBQoSIfRemarkedPackets, ApplyObjectType=ApplyObjectType, hh3cCBQoSFrClassApplyPolicyName=hh3cCBQoSFrClassApplyPolicyName, hh3cCBQoSApplyObjectSubChannel=hh3cCBQoSApplyObjectSubChannel, hh3cCBQoSBehaviorIndex=hh3cCBQoSBehaviorIndex, hh3cCBQoSPriorityMapGroupName=hh3cCBQoSPriorityMapGroupName, hh3cCBQoSCarPir=hh3cCBQoSCarPir, hh3cCBQoSNestPolicyClassIndex=hh3cCBQoSNestPolicyClassIndex, hh3cCBQoSFrPvcCarExceedBytes=hh3cCBQoSFrPvcCarExceedBytes, hh3cCBQoSIfQueueEnqueuedPackets=hh3cCBQoSIfQueueEnqueuedPackets, hh3cCBQoSClassifierName=hh3cCBQoSClassifierName, hh3cCBQoSFirewallCfgInfoEntry=hh3cCBQoSFirewallCfgInfoEntry, hh3cCBQoSPolicyClassCount=hh3cCBQoSPolicyClassCount, hh3cCBQoSAtmPvcQueueRunInfoTable=hh3cCBQoSAtmPvcQueueRunInfoTable, hh3cCBQoSNotificationsPrefix=hh3cCBQoSNotificationsPrefix, hh3cCBQoSPolicyClassNextIndex=hh3cCBQoSPolicyClassNextIndex, hh3cCBQoSFrPvcCarExceedPackets=hh3cCBQoSFrPvcCarExceedPackets, hh3cCBQoSRedirectRowStatus=hh3cCBQoSRedirectRowStatus, hh3cCBQoSCbqBeActiveQueueNum=hh3cCBQoSCbqBeActiveQueueNum, hh3cCBQoSClassMatchedBytes=hh3cCBQoSClassMatchedBytes, hh3cCBQoSFrPvcClassMatchRunInfoTable=hh3cCBQoSFrPvcClassMatchRunInfoTable, hh3cCBQoSFrPvcCbqRunInfoEntry=hh3cCBQoSFrPvcCbqRunInfoEntry, hh3cCBQoSGtsCfgInfoTable=hh3cCBQoSGtsCfgInfoTable, hh3cCBQoSFrPvcGtsPassedPackets=hh3cCBQoSFrPvcGtsPassedPackets, hh3cCBQoSWredCfgInfoTable=hh3cCBQoSWredCfgInfoTable, hh3cCBQoSFrPvcCbqEfQueueSize=hh3cCBQoSFrPvcCbqEfQueueSize, hh3cCBQoSWredClassCfgInfoTable=hh3cCBQoSWredClassCfgInfoTable)
