#
# PySNMP MIB module F10-FPSTATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/F10-FPSTATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:57:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
f10Mgmt, = mibBuilder.importSymbols("FORCE10-SMI", "f10Mgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ObjectIdentity, Bits, Integer32, Counter64, IpAddress, ModuleIdentity, NotificationType, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "Bits", "Integer32", "Counter64", "IpAddress", "ModuleIdentity", "NotificationType", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
f10FpStatsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 6027, 3, 16))
f10FpStatsMib.setRevisions(('2013-02-20 12:00', '2011-03-22 12:48',))
if mibBuilder.loadTexts: f10FpStatsMib.setLastUpdated('201302201200Z')
if mibBuilder.loadTexts: f10FpStatsMib.setOrganization('Dell Inc')
f10FpStatsObject = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1))
fpStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1))
fpCpuDataPlaneTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1), )
if mibBuilder.loadTexts: fpCpuDataPlaneTable.setStatus('current')
fpCpuDataPlaneStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"))
if mibBuilder.loadTexts: fpCpuDataPlaneStatsEntry.setStatus('current')
fpStackUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: fpStackUnitIndex.setStatus('current')
fpRxHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxHandle.setStatus('current')
fpNoMhdr = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpNoMhdr.setStatus('current')
fpNoMBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpNoMBuf.setStatus('current')
fpNoClus = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpNoClus.setStatus('current')
fpRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRecvd.setStatus('current')
fpDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpDropped.setStatus('current')
fpRecvToNet = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRecvToNet.setStatus('current')
fpRxError = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxError.setStatus('current')
fpRxDatapathError = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxDatapathError.setStatus('current')
fpRxPktCOS0 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktCOS0.setStatus('deprecated')
fpRxPktCOS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktCOS1.setStatus('deprecated')
fpRxPktCOS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktCOS2.setStatus('deprecated')
fpRxPktCOS3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktCOS3.setStatus('deprecated')
fpRxPktCOS4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktCOS4.setStatus('deprecated')
fpRxPktCOS5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktCOS5.setStatus('deprecated')
fpRxPktCOS6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktCOS6.setStatus('deprecated')
fpRxPktCOS7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktCOS7.setStatus('deprecated')
fpRxPktUnit0 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktUnit0.setStatus('current')
fpRxPktUnit1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktUnit1.setStatus('current')
fpRxPktUnit2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktUnit2.setStatus('current')
fpRxPktUnit3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktUnit3.setStatus('current')
fpTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTransmitted.setStatus('current')
fpTxRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxRequested.setStatus('current')
fpNoTxDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpNoTxDesc.setStatus('current')
fpTxError = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxError.setStatus('current')
fpTxReqTooLarge = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxReqTooLarge.setStatus('current')
fpTxInternalError = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxInternalError.setStatus('current')
fpTxDatapathErr = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxDatapathErr.setStatus('current')
fpTxPktCOS0 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktCOS0.setStatus('deprecated')
fpTxPktCOS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktCOS1.setStatus('deprecated')
fpTxPktCOS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktCOS2.setStatus('deprecated')
fpTxPktCOS3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktCOS3.setStatus('deprecated')
fpTxPktCOS4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktCOS4.setStatus('deprecated')
fpTxPktCOS5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktCOS5.setStatus('deprecated')
fpTxPktCOS6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktCOS6.setStatus('deprecated')
fpTxPktCOS7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktCOS7.setStatus('deprecated')
fpTxPktUnit0 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktUnit0.setStatus('current')
fpTxPktUnit1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktUnit1.setStatus('current')
fpTxPktUnit2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktUnit2.setStatus('current')
fpTxPktUnit3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 1, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktUnit3.setStatus('current')
fpCpuPartyBusTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 2), )
if mibBuilder.loadTexts: fpCpuPartyBusTable.setStatus('current')
fpCpuPartyBusStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 2, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"))
if mibBuilder.loadTexts: fpCpuPartyBusStatsEntry.setStatus('current')
fpPartyBusInputPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpPartyBusInputPackets.setStatus('current')
fpPartyBusInputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpPartyBusInputBytes.setStatus('current')
fpPartyBusInputDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpPartyBusInputDropped.setStatus('current')
fpPartyBusInputError = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpPartyBusInputError.setStatus('current')
fpPartyBusOutputPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpPartyBusOutputPackets.setStatus('current')
fpPartyBusOutputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpPartyBusOutputBytes.setStatus('current')
fpPartyBusOutputError = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpPartyBusOutputError.setStatus('current')
fpDropsTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3), )
if mibBuilder.loadTexts: fpDropsTable.setStatus('current')
fpDropsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpStackPortIndex"))
if mibBuilder.loadTexts: fpDropsEntry.setStatus('current')
fpStackPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 192)))
if mibBuilder.loadTexts: fpStackPortIndex.setStatus('current')
fpIngressDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngressDrops.setStatus('current')
fpIngIBPCBPFullDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngIBPCBPFullDrops.setStatus('current')
fpIngPortSTPnotFwdDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngPortSTPnotFwdDrops.setStatus('current')
fpIngIPv4L3Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngIPv4L3Discards.setStatus('current')
fpIngPolicyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngPolicyDiscards.setStatus('current')
fpIngPacketsDroppedByFP = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngPacketsDroppedByFP.setStatus('current')
fpIngL2L3Drops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngL2L3Drops.setStatus('current')
fpIngPortBitMapZeroDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngPortBitMapZeroDrops.setStatus('current')
fpIngRxVLANDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngRxVLANDrops.setStatus('current')
fpIngressFCSDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngressFCSDrops.setStatus('current')
fpIngressMTUExceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngressMTUExceeds.setStatus('current')
fpMMUHOLDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpMMUHOLDrops.setStatus('current')
fpMMUTxPurgeCellErr = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpMMUTxPurgeCellErr.setStatus('current')
fpMMUAgedDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpMMUAgedDrops.setStatus('current')
fpEgressFCSDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpEgressFCSDrops.setStatus('current')
fpEgIPv4L3UCAgedDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpEgIPv4L3UCAgedDrops.setStatus('current')
fpEgTTLThresholdDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpEgTTLThresholdDrops.setStatus('current')
fpEgInvalidVLANCounterDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpEgInvalidVLANCounterDrops.setStatus('current')
fpEgL2MCDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpEgL2MCDrops.setStatus('current')
fpEgPktDropsOfAnyCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpEgPktDropsOfAnyCondition.setStatus('current')
fpEgHgMacUnderFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpEgHgMacUnderFlow.setStatus('current')
fpEgTxErrPktCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpEgTxErrPktCounter.setStatus('current')
fpPacketBufferTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 4), )
if mibBuilder.loadTexts: fpPacketBufferTable.setStatus('current')
fpPacketBufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 4, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpPortPipe"))
if mibBuilder.loadTexts: fpPacketBufferEntry.setStatus('current')
fpPortPipe = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6)))
if mibBuilder.loadTexts: fpPortPipe.setStatus('current')
fpTotalPacketBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTotalPacketBuffer.setStatus('current')
fpCurrentAvailBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCurrentAvailBuffer.setStatus('current')
fpPacketBufferAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpPacketBufferAlloc.setStatus('current')
fpStatsPerPortTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 5), )
if mibBuilder.loadTexts: fpStatsPerPortTable.setStatus('current')
fpStatsPerPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 5, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpStackPortIndex"))
if mibBuilder.loadTexts: fpStatsPerPortEntry.setStatus('current')
fpCurrentUsagePerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCurrentUsagePerPort.setStatus('current')
fpDefaultPacketBuffAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpDefaultPacketBuffAlloc.setStatus('current')
fpMaxLimitPerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpMaxLimitPerPort.setStatus('current')
fpStatsPerCOSTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 6), )
if mibBuilder.loadTexts: fpStatsPerCOSTable.setStatus('current')
fpStatsPerCOSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 6, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpStackPortIndex"), (0, "F10-FPSTATS-MIB", "fpPerPortCOSNumber"))
if mibBuilder.loadTexts: fpStatsPerCOSEntry.setStatus('current')
fpPerPortCOSNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 21)))
if mibBuilder.loadTexts: fpPerPortCOSNumber.setStatus('current')
fpCurrentUsagePerCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCurrentUsagePerCOS.setStatus('current')
fpDefaultPacketBuffAllocPerCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpDefaultPacketBuffAllocPerCOS.setStatus('current')
fpMaxLimitPerCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpMaxLimitPerCOS.setStatus('current')
fpHOLDropsPerCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpHOLDropsPerCOS.setStatus('current')
fpCpuDataPlaneCOSTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 7), )
if mibBuilder.loadTexts: fpCpuDataPlaneCOSTable.setStatus('current')
fpCpuDataPlaneCOSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 7, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpCOSIndex"))
if mibBuilder.loadTexts: fpCpuDataPlaneCOSEntry.setStatus('current')
fpCOSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 11)))
if mibBuilder.loadTexts: fpCOSIndex.setStatus('current')
fpRxPktCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpRxPktCOS.setStatus('current')
fpTxPktCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpTxPktCOS.setStatus('current')
fpCpuPartyBusPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12), )
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsTable.setStatus('current')
fpCpuPartyBusPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpStackPortIndex"))
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsEntry.setStatus('current')
fpCpuPartyBusPortStatsOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutOctets.setStatus('current')
fpCpuPartyBusPortStatsOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutDropPkts.setStatus('current')
fpCpuPartyBusPortStatsOutCOS0Pkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutCOS0Pkts.setStatus('current')
fpCpuPartyBusPortStatsOutCOS1Pkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutCOS1Pkts.setStatus('current')
fpCpuPartyBusPortStatsOutCOS2Pkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutCOS2Pkts.setStatus('current')
fpCpuPartyBusPortStatsOutCOS3Pkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutCOS3Pkts.setStatus('current')
fpCpuPartyBusPortStatsOutCOS4Pkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutCOS4Pkts.setStatus('current')
fpCpuPartyBusPortStatsOutCOS5Pkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutCOS5Pkts.setStatus('current')
fpCpuPartyBusPortStatsOutUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutUnicastPkts.setStatus('current')
fpCpuPartyBusPortStatsOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutMulticastPkts.setStatus('current')
fpCpuPartyBusPortStatsOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutBroadcastPkts.setStatus('current')
fpCpuPartyBusPortStatsOutPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutPausePkts.setStatus('current')
fpCpuPartyBusPortStatsOutCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutCollisions.setStatus('current')
fpCpuPartyBusPortStatsOutSingleCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutSingleCollisions.setStatus('current')
fpCpuPartyBusPortStatsOutMultiCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutMultiCollisions.setStatus('current')
fpCpuPartyBusPortStatsOutLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutLateCollisions.setStatus('current')
fpCpuPartyBusPortStatsOutExcessCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutExcessCollisions.setStatus('current')
fpCpuPartyBusPortStatsOutDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutDeferred.setStatus('current')
fpCpuPartyBusPortStatsOutDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsOutDiscarded.setStatus('current')
fpCpuPartyBusPortStatsInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInOctets.setStatus('current')
fpCpuPartyBusPortStatsInUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInUndersizePkts.setStatus('current')
fpCpuPartyBusPortStatsInOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInOversizePkts.setStatus('current')
fpCpuPartyBusPortStatsInPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInPausePkts.setStatus('current')
fpCpuPartyBusPortStatsIn64OctetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsIn64OctetPkts.setStatus('current')
fpCpuPartyBusPortStatsIn65To127OctetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsIn65To127OctetPkts.setStatus('current')
fpCpuPartyBusPortStatsIn128To255OctetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsIn128To255OctetPkts.setStatus('current')
fpCpuPartyBusPortStatsIn256To511OctetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsIn256To511OctetPkts.setStatus('current')
fpCpuPartyBusPortStatsIn512To1023OctetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsIn512To1023OctetPkts.setStatus('current')
fpCpuPartyBusPortStatsIn1024ToMaxOctetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsIn1024ToMaxOctetPkts.setStatus('current')
fpCpuPartyBusPortStatsInJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInJabbers.setStatus('current')
fpCpuPartyBusPortStatsInAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInAlignErrors.setStatus('current')
fpCpuPartyBusPortStatsInFcsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInFcsErrors.setStatus('current')
fpCpuPartyBusPortStatsInGoodOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInGoodOctets.setStatus('current')
fpCpuPartyBusPortStatsInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInDropPkts.setStatus('current')
fpCpuPartyBusPortStatsInUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInUnicastPkts.setStatus('current')
fpCpuPartyBusPortStatsInMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInMulticastPkts.setStatus('current')
fpCpuPartyBusPortStatsInBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInBroadcastPkts.setStatus('current')
fpCpuPartyBusPortStatsInSrcAddrChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInSrcAddrChanges.setStatus('current')
fpCpuPartyBusPortStatsInFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInFragments.setStatus('current')
fpCpuPartyBusPortStatsInJumboPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInJumboPkts.setStatus('current')
fpCpuPartyBusPortStatsInSymbolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInSymbolErrors.setStatus('current')
fpCpuPartyBusPortStatsInInRangeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInInRangeErrors.setStatus('current')
fpCpuPartyBusPortStatsInOutRangeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 12, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpCpuPartyBusPortStatsInOutRangeErrors.setStatus('current')
fpEgrQBuffSnapshotTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 8), )
if mibBuilder.loadTexts: fpEgrQBuffSnapshotTable.setStatus('current')
fpEgrQBuffSnapshotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 8, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpStackPortIndex"), (0, "F10-FPSTATS-MIB", "fpPerPortCOSNumber"))
if mibBuilder.loadTexts: fpEgrQBuffSnapshotEntry.setStatus('current')
fpEgrQTotBuffCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 8, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpEgrQTotBuffCells.setStatus('current')
fpIngPgBuffSnapshotTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 9), )
if mibBuilder.loadTexts: fpIngPgBuffSnapshotTable.setStatus('current')
fpIngPgBuffSnapshotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 9, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpStackPortIndex"), (0, "F10-FPSTATS-MIB", "fpPerPortPGIndex"))
if mibBuilder.loadTexts: fpIngPgBuffSnapshotEntry.setStatus('current')
fpPerPortPGIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: fpPerPortPGIndex.setStatus('current')
fpIngSharedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngSharedCells.setStatus('current')
fpIngHeadroomCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpIngHeadroomCells.setStatus('current')
fpStatsPerPgTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 10), )
if mibBuilder.loadTexts: fpStatsPerPgTable.setStatus('current')
fpStatsPerPgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 10, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpStackPortIndex"), (0, "F10-FPSTATS-MIB", "fpPerPortPGIndex"))
if mibBuilder.loadTexts: fpStatsPerPgEntry.setStatus('current')
fpStatsPgLimitMinCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpStatsPgLimitMinCells.setStatus('current')
fpStatsPgSharedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpStatsPgSharedCells.setStatus('current')
fpStatsPgSharedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("static", 0), ("dynamic", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpStatsPgSharedMode.setStatus('current')
fpStatsPgHdrmCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpStatsPgHdrmCells.setStatus('current')
fpStatsPgCounterMinCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpStatsPgCounterMinCells.setStatus('current')
fpStatsPgCounterSharedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpStatsPgCounterSharedCells.setStatus('current')
fpStatsPgCounterHdrmCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpStatsPgCounterHdrmCells.setStatus('current')
pfcPerPrioTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 11), )
if mibBuilder.loadTexts: pfcPerPrioTable.setStatus('current')
pfcPerPrioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 11, 1), ).setIndexNames((0, "F10-FPSTATS-MIB", "fpStackUnitIndex"), (0, "F10-FPSTATS-MIB", "fpStackPortIndex"), (0, "F10-FPSTATS-MIB", "prioIndex"))
if mibBuilder.loadTexts: pfcPerPrioEntry.setStatus('current')
prioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: prioIndex.setStatus('current')
pfcPerPrioRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 11, 1, 2), Counter64()).setUnits('Requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: pfcPerPrioRequests.setStatus('current')
pfcPerPrioIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 16, 1, 1, 11, 1, 3), Counter64()).setUnits('Indications').setMaxAccess("readonly")
if mibBuilder.loadTexts: pfcPerPrioIndications.setStatus('current')
mibBuilder.exportSymbols("F10-FPSTATS-MIB", fpCpuPartyBusPortStatsOutDropPkts=fpCpuPartyBusPortStatsOutDropPkts, fpIngIPv4L3Discards=fpIngIPv4L3Discards, fpEgHgMacUnderFlow=fpEgHgMacUnderFlow, fpCpuPartyBusPortStatsInOctets=fpCpuPartyBusPortStatsInOctets, fpTxPktCOS6=fpTxPktCOS6, fpCpuPartyBusPortStatsOutPausePkts=fpCpuPartyBusPortStatsOutPausePkts, f10FpStatsObject=f10FpStatsObject, fpTxPktUnit1=fpTxPktUnit1, fpMMUHOLDrops=fpMMUHOLDrops, fpStatsObjects=fpStatsObjects, fpCpuPartyBusPortStatsInFragments=fpCpuPartyBusPortStatsInFragments, fpNoTxDesc=fpNoTxDesc, fpTxPktCOS0=fpTxPktCOS0, fpRxPktUnit3=fpRxPktUnit3, fpTxInternalError=fpTxInternalError, fpCurrentAvailBuffer=fpCurrentAvailBuffer, fpDropped=fpDropped, fpEgrQBuffSnapshotEntry=fpEgrQBuffSnapshotEntry, fpTxPktCOS4=fpTxPktCOS4, fpPerPortPGIndex=fpPerPortPGIndex, fpStatsPgSharedMode=fpStatsPgSharedMode, fpCpuPartyBusPortStatsOutCOS2Pkts=fpCpuPartyBusPortStatsOutCOS2Pkts, fpMMUTxPurgeCellErr=fpMMUTxPurgeCellErr, fpDropsTable=fpDropsTable, fpCpuPartyBusPortStatsOutSingleCollisions=fpCpuPartyBusPortStatsOutSingleCollisions, fpStatsPerPgTable=fpStatsPerPgTable, fpTxError=fpTxError, fpTxReqTooLarge=fpTxReqTooLarge, fpStatsPgLimitMinCells=fpStatsPgLimitMinCells, fpRxPktCOS1=fpRxPktCOS1, fpRecvd=fpRecvd, pfcPerPrioIndications=pfcPerPrioIndications, fpStatsPerPortTable=fpStatsPerPortTable, fpPartyBusOutputError=fpPartyBusOutputError, fpCpuPartyBusPortStatsOutDeferred=fpCpuPartyBusPortStatsOutDeferred, fpIngressDrops=fpIngressDrops, fpCpuPartyBusPortStatsOutOctets=fpCpuPartyBusPortStatsOutOctets, fpMaxLimitPerCOS=fpMaxLimitPerCOS, fpPacketBufferAlloc=fpPacketBufferAlloc, fpRxPktCOS=fpRxPktCOS, fpCpuPartyBusPortStatsInJabbers=fpCpuPartyBusPortStatsInJabbers, fpIngL2L3Drops=fpIngL2L3Drops, fpIngPolicyDiscards=fpIngPolicyDiscards, fpIngPortSTPnotFwdDrops=fpIngPortSTPnotFwdDrops, fpEgTxErrPktCounter=fpEgTxErrPktCounter, fpEgL2MCDrops=fpEgL2MCDrops, fpPortPipe=fpPortPipe, fpCpuPartyBusStatsEntry=fpCpuPartyBusStatsEntry, fpCpuPartyBusPortStatsInUndersizePkts=fpCpuPartyBusPortStatsInUndersizePkts, fpCpuPartyBusPortStatsIn128To255OctetPkts=fpCpuPartyBusPortStatsIn128To255OctetPkts, fpIngHeadroomCells=fpIngHeadroomCells, fpCpuPartyBusPortStatsInAlignErrors=fpCpuPartyBusPortStatsInAlignErrors, fpTxPktCOS1=fpTxPktCOS1, fpCpuPartyBusPortStatsIn1024ToMaxOctetPkts=fpCpuPartyBusPortStatsIn1024ToMaxOctetPkts, fpIngressFCSDrops=fpIngressFCSDrops, fpTxDatapathErr=fpTxDatapathErr, fpCpuPartyBusPortStatsOutCOS3Pkts=fpCpuPartyBusPortStatsOutCOS3Pkts, fpDropsEntry=fpDropsEntry, fpCpuPartyBusPortStatsOutCOS1Pkts=fpCpuPartyBusPortStatsOutCOS1Pkts, fpCpuPartyBusPortStatsInPausePkts=fpCpuPartyBusPortStatsInPausePkts, fpCpuPartyBusPortStatsInUnicastPkts=fpCpuPartyBusPortStatsInUnicastPkts, fpPartyBusOutputBytes=fpPartyBusOutputBytes, fpCpuDataPlaneCOSTable=fpCpuDataPlaneCOSTable, fpStatsPgCounterHdrmCells=fpStatsPgCounterHdrmCells, PYSNMP_MODULE_ID=f10FpStatsMib, fpEgInvalidVLANCounterDrops=fpEgInvalidVLANCounterDrops, fpEgressFCSDrops=fpEgressFCSDrops, fpCpuPartyBusPortStatsInGoodOctets=fpCpuPartyBusPortStatsInGoodOctets, pfcPerPrioRequests=pfcPerPrioRequests, fpPartyBusInputPackets=fpPartyBusInputPackets, fpRxDatapathError=fpRxDatapathError, fpRxPktCOS3=fpRxPktCOS3, fpCpuPartyBusPortStatsIn64OctetPkts=fpCpuPartyBusPortStatsIn64OctetPkts, fpStatsPerPortEntry=fpStatsPerPortEntry, fpIngIBPCBPFullDrops=fpIngIBPCBPFullDrops, fpCpuPartyBusPortStatsIn512To1023OctetPkts=fpCpuPartyBusPortStatsIn512To1023OctetPkts, fpEgIPv4L3UCAgedDrops=fpEgIPv4L3UCAgedDrops, fpPartyBusInputError=fpPartyBusInputError, fpDefaultPacketBuffAllocPerCOS=fpDefaultPacketBuffAllocPerCOS, fpCpuPartyBusPortStatsOutCollisions=fpCpuPartyBusPortStatsOutCollisions, pfcPerPrioTable=pfcPerPrioTable, fpDefaultPacketBuffAlloc=fpDefaultPacketBuffAlloc, fpCpuPartyBusPortStatsInMulticastPkts=fpCpuPartyBusPortStatsInMulticastPkts, fpTxPktCOS3=fpTxPktCOS3, fpStatsPerCOSTable=fpStatsPerCOSTable, fpCpuDataPlaneCOSEntry=fpCpuDataPlaneCOSEntry, fpCOSIndex=fpCOSIndex, fpMaxLimitPerPort=fpMaxLimitPerPort, fpCpuPartyBusPortStatsInSymbolErrors=fpCpuPartyBusPortStatsInSymbolErrors, fpCpuPartyBusPortStatsOutCOS4Pkts=fpCpuPartyBusPortStatsOutCOS4Pkts, fpHOLDropsPerCOS=fpHOLDropsPerCOS, fpIngPgBuffSnapshotEntry=fpIngPgBuffSnapshotEntry, fpCpuPartyBusPortStatsTable=fpCpuPartyBusPortStatsTable, fpPartyBusInputBytes=fpPartyBusInputBytes, fpCpuPartyBusPortStatsOutCOS0Pkts=fpCpuPartyBusPortStatsOutCOS0Pkts, fpTransmitted=fpTransmitted, fpRxPktCOS4=fpRxPktCOS4, fpStatsPgCounterMinCells=fpStatsPgCounterMinCells, fpCpuPartyBusPortStatsIn65To127OctetPkts=fpCpuPartyBusPortStatsIn65To127OctetPkts, fpStackUnitIndex=fpStackUnitIndex, fpNoMBuf=fpNoMBuf, fpNoClus=fpNoClus, f10FpStatsMib=f10FpStatsMib, fpCpuDataPlaneStatsEntry=fpCpuDataPlaneStatsEntry, fpRxPktCOS6=fpRxPktCOS6, fpRxPktUnit0=fpRxPktUnit0, fpIngPortBitMapZeroDrops=fpIngPortBitMapZeroDrops, fpStatsPgCounterSharedCells=fpStatsPgCounterSharedCells, fpRxPktCOS2=fpRxPktCOS2, fpCpuPartyBusPortStatsInInRangeErrors=fpCpuPartyBusPortStatsInInRangeErrors, fpTotalPacketBuffer=fpTotalPacketBuffer, fpIngPgBuffSnapshotTable=fpIngPgBuffSnapshotTable, fpCpuPartyBusPortStatsInBroadcastPkts=fpCpuPartyBusPortStatsInBroadcastPkts, fpCpuPartyBusPortStatsOutDiscarded=fpCpuPartyBusPortStatsOutDiscarded, fpRecvToNet=fpRecvToNet, fpRxPktCOS5=fpRxPktCOS5, fpEgPktDropsOfAnyCondition=fpEgPktDropsOfAnyCondition, fpCpuPartyBusPortStatsOutCOS5Pkts=fpCpuPartyBusPortStatsOutCOS5Pkts, fpCpuPartyBusPortStatsOutUnicastPkts=fpCpuPartyBusPortStatsOutUnicastPkts, fpTxPktCOS5=fpTxPktCOS5, fpCpuPartyBusTable=fpCpuPartyBusTable, fpTxPktUnit2=fpTxPktUnit2, fpTxPktUnit0=fpTxPktUnit0, fpCpuPartyBusPortStatsInJumboPkts=fpCpuPartyBusPortStatsInJumboPkts, fpTxRequested=fpTxRequested, fpCurrentUsagePerPort=fpCurrentUsagePerPort, fpCpuPartyBusPortStatsInFcsErrors=fpCpuPartyBusPortStatsInFcsErrors, fpCpuPartyBusPortStatsOutBroadcastPkts=fpCpuPartyBusPortStatsOutBroadcastPkts, fpCpuPartyBusPortStatsOutMulticastPkts=fpCpuPartyBusPortStatsOutMulticastPkts, fpCpuPartyBusPortStatsOutLateCollisions=fpCpuPartyBusPortStatsOutLateCollisions, fpIngressMTUExceeds=fpIngressMTUExceeds, fpMMUAgedDrops=fpMMUAgedDrops, fpEgrQTotBuffCells=fpEgrQTotBuffCells, fpRxHandle=fpRxHandle, fpCpuPartyBusPortStatsEntry=fpCpuPartyBusPortStatsEntry, fpPacketBufferTable=fpPacketBufferTable, fpPerPortCOSNumber=fpPerPortCOSNumber, fpCpuPartyBusPortStatsOutExcessCollisions=fpCpuPartyBusPortStatsOutExcessCollisions, fpTxPktCOS=fpTxPktCOS, fpIngRxVLANDrops=fpIngRxVLANDrops, fpCpuPartyBusPortStatsOutMultiCollisions=fpCpuPartyBusPortStatsOutMultiCollisions, fpCpuPartyBusPortStatsInDropPkts=fpCpuPartyBusPortStatsInDropPkts, fpTxPktUnit3=fpTxPktUnit3, fpCpuPartyBusPortStatsInOutRangeErrors=fpCpuPartyBusPortStatsInOutRangeErrors, fpPartyBusOutputPackets=fpPartyBusOutputPackets, fpRxPktCOS7=fpRxPktCOS7, fpEgrQBuffSnapshotTable=fpEgrQBuffSnapshotTable, fpRxPktCOS0=fpRxPktCOS0, prioIndex=prioIndex, fpPacketBufferEntry=fpPacketBufferEntry, fpStatsPerCOSEntry=fpStatsPerCOSEntry, fpStatsPerPgEntry=fpStatsPerPgEntry, fpStatsPgHdrmCells=fpStatsPgHdrmCells, fpNoMhdr=fpNoMhdr, fpIngSharedCells=fpIngSharedCells, fpRxError=fpRxError, fpEgTTLThresholdDrops=fpEgTTLThresholdDrops, fpStatsPgSharedCells=fpStatsPgSharedCells, pfcPerPrioEntry=pfcPerPrioEntry, fpCurrentUsagePerCOS=fpCurrentUsagePerCOS, fpCpuPartyBusPortStatsInSrcAddrChanges=fpCpuPartyBusPortStatsInSrcAddrChanges, fpRxPktUnit1=fpRxPktUnit1, fpTxPktCOS7=fpTxPktCOS7, fpPartyBusInputDropped=fpPartyBusInputDropped, fpTxPktCOS2=fpTxPktCOS2, fpIngPacketsDroppedByFP=fpIngPacketsDroppedByFP, fpCpuDataPlaneTable=fpCpuDataPlaneTable, fpRxPktUnit2=fpRxPktUnit2, fpCpuPartyBusPortStatsIn256To511OctetPkts=fpCpuPartyBusPortStatsIn256To511OctetPkts, fpCpuPartyBusPortStatsInOversizePkts=fpCpuPartyBusPortStatsInOversizePkts, fpStackPortIndex=fpStackPortIndex)
