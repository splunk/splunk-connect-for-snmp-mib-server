#
# PySNMP MIB module REDLINE-AN80I-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDLINE-AN80I-IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:46:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
redlineTransmission, = mibBuilder.importSymbols("REDLINE-MIB", "redlineTransmission")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, MibIdentifier, ObjectIdentity, Counter32, Bits, iso, IpAddress, ModuleIdentity, NotificationType, Counter64, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "MibIdentifier", "ObjectIdentity", "Counter32", "Bits", "iso", "IpAddress", "ModuleIdentity", "NotificationType", "Counter64", "TimeTicks", "Gauge32")
DisplayString, RowStatus, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "MacAddress")
redlineAn80iIfMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2))
redlineAn80iIfMib.setRevisions(('2005-11-28 15:43',))
if mibBuilder.loadTexts: redlineAn80iIfMib.setLastUpdated('200511281543Z')
if mibBuilder.loadTexts: redlineAn80iIfMib.setOrganization('Redline Communications Inc.')
redlineAn80iIfPtpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1))
redlineAn80iIfPtpLinkConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1))
an80iIfEncryptionControl = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("off", 1), ("redline", 2), ("aes128", 3), ("aes192", 4), ("aes256", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfEncryptionControl.setStatus('current')
an80iIfModReduction = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfModReduction.setStatus('current')
an80iIfAdaptiveMod = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfAdaptiveMod.setStatus('current')
an80iIfUncodedBurstRate = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('').setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfUncodedBurstRate.setStatus('current')
an80iIfEncryptionKey = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfEncryptionKey.setStatus('current')
an80iIfPacketRetransControl = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfPacketRetransControl.setStatus('current')
an80iIfLinkLenMode = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfLinkLenMode.setStatus('current')
an80iIfLinkLength = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 8), Integer32()).setUnits('Km').setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfLinkLength.setStatus('current')
an80iIfCalcLinkDst = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 9), Integer32()).setUnits('Km').setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfCalcLinkDst.setStatus('current')
an80iIfLinkName = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfLinkName.setStatus('current')
redlineAn80iIfPtpLinkStats = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2))
an80iIfCurrUncodedBurstRate = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 1), Unsigned32()).setUnits('').setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfCurrUncodedBurstRate.setStatus('current')
an80iIfPtpLinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPtpLinkStatus.setStatus('current')
an80iIfRxPackets = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfRxPackets.setStatus('current')
an80iIfRxPacketsReTx = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfRxPacketsReTx.setStatus('current')
an80iIfRxPacketsDisc = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfRxPacketsDisc.setStatus('current')
an80iIfTxPackets = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfTxPackets.setStatus('current')
an80iIfTxPacketsReTx = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfTxPacketsReTx.setStatus('current')
an80iIfTxPacketsDisc = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfTxPacketsDisc.setStatus('current')
an80iIfRssiMin = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfRssiMin.setStatus('current')
an80iIfRssiMean = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfRssiMean.setStatus('current')
an80iIfRssiMax = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfRssiMax.setStatus('current')
an80iIfAvrSinAdr = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 1, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfAvrSinAdr.setStatus('current')
redlineAn80iIfPmpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2))
redlineAn80iIfPmpSsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 1))
an80iIfLastMissedMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfLastMissedMacAddress.setStatus('current')
an80iIfLastRegistMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfLastRegistMacAddress.setStatus('current')
an80iIfDenyMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an80iIfDenyMacAddress.setStatus('current')
an80iIfLastRegistLinkId = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfLastRegistLinkId.setStatus('current')
an80iIfPmpLinkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 2), )
if mibBuilder.loadTexts: an80iIfPmpLinkConfigTable.setStatus('current')
an80iIfPmpLinkConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 2, 1), ).setIndexNames((0, "REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkId"))
if mibBuilder.loadTexts: an80iIfPmpLinkConfigEntry.setStatus('current')
an80iIfPmpLinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1023)))
if mibBuilder.loadTexts: an80iIfPmpLinkId.setStatus('current')
an80iIfPmpLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpLinkName.setStatus('current')
an80iIfPmpLinkPeerMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 2, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpLinkPeerMacAddress.setStatus('current')
an80iIfPmpLinkULBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 2, 1, 4), Unsigned32()).setUnits('').setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpLinkULBurstRate.setStatus('current')
an80iIfPmpLinkDLBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 2, 1, 5), Unsigned32()).setUnits('').setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpLinkDLBurstRate.setStatus('current')
an80iIfPmpLinkConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpLinkConfigStatus.setStatus('current')
an80iIfPmpLinkStatsTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3), )
if mibBuilder.loadTexts: an80iIfPmpLinkStatsTable.setStatus('current')
an80iIfPmpLinkStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1), ).setIndexNames((0, "REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkId"))
if mibBuilder.loadTexts: an80iIfPmpLinkStatsEntry.setStatus('current')
an80iIfPmpLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkStatus.setStatus('current')
an80iIfPmpLinkStatusCode = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkStatusCode.setStatus('current')
an80iIfRegPmpLinkConns = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfRegPmpLinkConns.setStatus('current')
an80iIfPmpLinkUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkUpTime.setStatus('current')
an80iIfPmpLinkLostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkLostCount.setStatus('current')
an80iIfPmpLinkCurrDLUncBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 6), Unsigned32()).setUnits('').setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkCurrDLUncBurstRate.setStatus('current')
an80iIfPmpLinkDLRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkDLRssi.setStatus('current')
an80iIfPmpLinkDLSinAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkDLSinAdr.setStatus('current')
an80iIfPmpLinkDLLostFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkDLLostFrm.setStatus('current')
an80iIfPmpLinkDLBlksTot = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkDLBlksTot.setStatus('current')
an80iIfPmpLinkDLBlksRetr = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkDLBlksRetr.setStatus('current')
an80iIfPmpLinkDLBlksDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkDLBlksDisc.setStatus('current')
an80iIfPmpLinkCurrULUncBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 13), Unsigned32()).setUnits('Mb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkCurrULUncBurstRate.setStatus('current')
an80iIfPmpLinkULRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkULRssi.setStatus('current')
an80iIfPmpLinkULSinAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkULSinAdr.setStatus('current')
an80iIfPmpLinkULLostFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkULLostFrm.setStatus('current')
an80iIfPmpLinkULBlksTot = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkULBlksTot.setStatus('current')
an80iIfPmpLinkULBlksRetr = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkULBlksRetr.setStatus('current')
an80iIfPmpLinkULBlksDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkULBlksDisc.setStatus('current')
an80iIfPmpLinkStatsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 3, 1, 20), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpLinkStatsStatus.setStatus('current')
an80iIfPmpGroupConfigTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4), )
if mibBuilder.loadTexts: an80iIfPmpGroupConfigTable.setStatus('current')
an80iIfPmpGroupConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1), ).setIndexNames((0, "REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupId"))
if mibBuilder.loadTexts: an80iIfPmpGroupConfigEntry.setStatus('current')
an80iIfPmpGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1023)))
if mibBuilder.loadTexts: an80iIfPmpGroupId.setStatus('current')
an80iIfPmpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpGroupName.setStatus('current')
an80iIfPmpGroupTaggingControl = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passThrough", 1), ("tagged", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpGroupTaggingControl.setStatus('current')
an80iIfPmpGroupVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpGroupVlanId.setStatus('current')
an80iIfPmpGroupDefPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpGroupDefPriority.setStatus('current')
an80iIfPmpGroupSCEtherControl = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpGroupSCEtherControl.setStatus('current')
an80iIfPmpGroupQosLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 53))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpGroupQosLevel.setStatus('current')
an80iIfPmpGroupConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpGroupConfigStatus.setStatus('current')
an80iIfPmpGroupRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setUnits('').setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpGroupRate.setStatus('current')
an80iIfPmpGroupSStoSSMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setUnits('').setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpGroupSStoSSMulticast.setStatus('current')
an80iIfPmpGroupStatsTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 5), )
if mibBuilder.loadTexts: an80iIfPmpGroupStatsTable.setStatus('current')
an80iIfPmpGroupStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 5, 1), ).setIndexNames((0, "REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupId"))
if mibBuilder.loadTexts: an80iIfPmpGroupStatsEntry.setStatus('current')
an80iIfPmpGroupPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpGroupPacketsTx.setStatus('current')
an80iIfPmpGroupPacketDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpGroupPacketDisc.setStatus('current')
an80iIfPmpGroupStatsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 5, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpGroupStatsStatus.setStatus('current')
an80iIfPmpConnConfigTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6), )
if mibBuilder.loadTexts: an80iIfPmpConnConfigTable.setStatus('current')
an80iIfPmpConnConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1), ).setIndexNames((0, "REDLINE-AN80I-IF-MIB", "an80iIfPmpConnId"))
if mibBuilder.loadTexts: an80iIfPmpConnConfigEntry.setStatus('current')
an80iIfPmpConnId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1023)))
if mibBuilder.loadTexts: an80iIfPmpConnId.setStatus('current')
an80iIfPmpConnName = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpConnName.setStatus('current')
an80iIfPmpConnTaggingControl = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passThrough", 1), ("tagged", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpConnTaggingControl.setStatus('current')
an80iIfPmpConnVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpConnVlanId.setStatus('current')
an80iIfPmpConnDefPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpConnDefPriority.setStatus('current')
an80iIfPmpConnDefParentLink = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1023))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpConnDefParentLink.setStatus('current')
an80iIfPmpConnDefParenGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1023))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpConnDefParenGroup.setStatus('current')
an80iIfPmpConnDLQos = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 53))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpConnDLQos.setStatus('current')
an80iIfPmpConnULQos = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 53))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpConnULQos.setStatus('current')
an80iIfPmpConnConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 6, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: an80iIfPmpConnConfigStatus.setStatus('current')
an80iIfPmpConnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 7), )
if mibBuilder.loadTexts: an80iIfPmpConnStatsTable.setStatus('current')
an80iIfPmpConnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 7, 1), ).setIndexNames((0, "REDLINE-AN80I-IF-MIB", "an80iIfPmpConnId"))
if mibBuilder.loadTexts: an80iIfPmpConnStatsEntry.setStatus('current')
an80iIfPmpConnDLPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpConnDLPacketsTx.setStatus('current')
an80iIfPmpConnDLPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpConnDLPacketsRx.setStatus('current')
an80iIfPmpConnDLPacketsDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpConnDLPacketsDisc.setStatus('current')
an80iIfPmpConnULPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpConnULPacketsTx.setStatus('current')
an80iIfPmpConnULPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpConnULPacketsRx.setStatus('current')
an80iIfPmpConnULPacketsDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpConnULPacketsDisc.setStatus('current')
an80iIfPmpConnStatsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 2, 7, 1, 7), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an80iIfPmpConnStatsStatus.setStatus('current')
redlineAn80iIfTrapDefinitions = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 0))
an80iIfRegistrationFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 0, 1)).setObjects(("REDLINE-AN80I-IF-MIB", "an80iIfLastMissedMacAddress"))
if mibBuilder.loadTexts: an80iIfRegistrationFailedTrap.setStatus('current')
an80iIfRegistrationOKTrap = NotificationType((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 0, 2)).setObjects(("REDLINE-AN80I-IF-MIB", "an80iIfLastRegistMacAddress"))
if mibBuilder.loadTexts: an80iIfRegistrationOKTrap.setStatus('current')
redlineAn80iIfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 4))
redlineAn80iIfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 4, 1))
redlineAn80iIfCompls = MibIdentifier((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 4, 2))
redlineAn80iIfPtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 4, 1, 1)).setObjects(("REDLINE-AN80I-IF-MIB", "an80iIfEncryptionControl"), ("REDLINE-AN80I-IF-MIB", "an80iIfModReduction"), ("REDLINE-AN80I-IF-MIB", "an80iIfAdaptiveMod"), ("REDLINE-AN80I-IF-MIB", "an80iIfUncodedBurstRate"), ("REDLINE-AN80I-IF-MIB", "an80iIfEncryptionKey"), ("REDLINE-AN80I-IF-MIB", "an80iIfPacketRetransControl"), ("REDLINE-AN80I-IF-MIB", "an80iIfLinkLenMode"), ("REDLINE-AN80I-IF-MIB", "an80iIfLinkLength"), ("REDLINE-AN80I-IF-MIB", "an80iIfCurrUncodedBurstRate"), ("REDLINE-AN80I-IF-MIB", "an80iIfPtpLinkStatus"), ("REDLINE-AN80I-IF-MIB", "an80iIfRxPackets"), ("REDLINE-AN80I-IF-MIB", "an80iIfRxPacketsReTx"), ("REDLINE-AN80I-IF-MIB", "an80iIfRxPacketsDisc"), ("REDLINE-AN80I-IF-MIB", "an80iIfTxPackets"), ("REDLINE-AN80I-IF-MIB", "an80iIfTxPacketsReTx"), ("REDLINE-AN80I-IF-MIB", "an80iIfTxPacketsDisc"), ("REDLINE-AN80I-IF-MIB", "an80iIfRssiMin"), ("REDLINE-AN80I-IF-MIB", "an80iIfRssiMean"), ("REDLINE-AN80I-IF-MIB", "an80iIfRssiMax"), ("REDLINE-AN80I-IF-MIB", "an80iIfAvrSinAdr"), ("REDLINE-AN80I-IF-MIB", "an80iIfCalcLinkDst"), ("REDLINE-AN80I-IF-MIB", "an80iIfLinkName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    redlineAn80iIfPtpGroup = redlineAn80iIfPtpGroup.setStatus('current')
redlineAn80iIfPmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 4, 1, 2)).setObjects(("REDLINE-AN80I-IF-MIB", "an80iIfLastMissedMacAddress"), ("REDLINE-AN80I-IF-MIB", "an80iIfLastRegistMacAddress"), ("REDLINE-AN80I-IF-MIB", "an80iIfDenyMacAddress"), ("REDLINE-AN80I-IF-MIB", "an80iIfLastRegistLinkId"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkName"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkPeerMacAddress"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkULBurstRate"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkDLBurstRate"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkStatus"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkStatusCode"), ("REDLINE-AN80I-IF-MIB", "an80iIfRegPmpLinkConns"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkLostCount"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkUpTime"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkLostCount"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkCurrDLUncBurstRate"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkLostCount"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkDLSinAdr"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkDLLostFrm"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkDLBlksTot"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkDLBlksRetr"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkDLBlksDisc"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkCurrULUncBurstRate"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkULRssi"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkULSinAdr"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkULLostFrm"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkULBlksTot"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkULBlksRetr"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpLinkULBlksDisc"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupName"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupTaggingControl"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupVlanId"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupDefPriority"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupSCEtherControl"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupQosLevel"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupPacketsTx"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpGroupPacketDisc"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnName"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnTaggingControl"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnVlanId"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnDefPriority"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnDefParentLink"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnDefParenGroup"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnDLQos"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnULQos"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnDLPacketsTx"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnDLPacketsRx"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnDLPacketsDisc"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnULPacketsTx"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnULPacketsRx"), ("REDLINE-AN80I-IF-MIB", "an80iIfPmpConnULPacketsDisc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    redlineAn80iIfPmpGroup = redlineAn80iIfPmpGroup.setStatus('current')
redlineAn80iIfNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 4, 1, 3)).setObjects(("REDLINE-AN80I-IF-MIB", "an80iIfRegistrationFailedTrap"), ("REDLINE-AN80I-IF-MIB", "an80iIfRegistrationOKTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    redlineAn80iIfNotificationGroup = redlineAn80iIfNotificationGroup.setStatus('current')
redlineAn80iIfCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 10728, 2, 10, 2, 4, 2, 1)).setObjects(("REDLINE-AN80I-IF-MIB", "redlineAn80iIfPtpGroup"), ("REDLINE-AN80I-IF-MIB", "redlineAn80iIfPmpGroup"), ("REDLINE-AN80I-IF-MIB", "redlineAn80iIfNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    redlineAn80iIfCompliance = redlineAn80iIfCompliance.setStatus('current')
mibBuilder.exportSymbols("REDLINE-AN80I-IF-MIB", redlineAn80iIfTrapDefinitions=redlineAn80iIfTrapDefinitions, an80iIfPmpConnVlanId=an80iIfPmpConnVlanId, an80iIfPtpLinkStatus=an80iIfPtpLinkStatus, an80iIfPmpConnTaggingControl=an80iIfPmpConnTaggingControl, an80iIfPmpLinkULBlksRetr=an80iIfPmpLinkULBlksRetr, an80iIfPmpGroupConfigTable=an80iIfPmpGroupConfigTable, an80iIfCalcLinkDst=an80iIfCalcLinkDst, an80iIfPmpGroupStatsTable=an80iIfPmpGroupStatsTable, an80iIfPmpLinkULBlksTot=an80iIfPmpLinkULBlksTot, an80iIfPmpGroupSCEtherControl=an80iIfPmpGroupSCEtherControl, an80iIfPmpLinkULLostFrm=an80iIfPmpLinkULLostFrm, an80iIfPmpConnConfigEntry=an80iIfPmpConnConfigEntry, an80iIfPmpConnULQos=an80iIfPmpConnULQos, PYSNMP_MODULE_ID=redlineAn80iIfMib, an80iIfEncryptionKey=an80iIfEncryptionKey, an80iIfPmpGroupName=an80iIfPmpGroupName, an80iIfPmpConnDLPacketsRx=an80iIfPmpConnDLPacketsRx, an80iIfPmpLinkConfigTable=an80iIfPmpLinkConfigTable, an80iIfPmpLinkCurrULUncBurstRate=an80iIfPmpLinkCurrULUncBurstRate, an80iIfTxPackets=an80iIfTxPackets, an80iIfCurrUncodedBurstRate=an80iIfCurrUncodedBurstRate, an80iIfRssiMin=an80iIfRssiMin, an80iIfAvrSinAdr=an80iIfAvrSinAdr, an80iIfPmpGroupTaggingControl=an80iIfPmpGroupTaggingControl, an80iIfPmpConnStatsTable=an80iIfPmpConnStatsTable, an80iIfPmpConnStatsStatus=an80iIfPmpConnStatsStatus, an80iIfPmpLinkULBurstRate=an80iIfPmpLinkULBurstRate, an80iIfPmpGroupQosLevel=an80iIfPmpGroupQosLevel, redlineAn80iIfPmpSsObjects=redlineAn80iIfPmpSsObjects, an80iIfPmpConnId=an80iIfPmpConnId, an80iIfLastRegistLinkId=an80iIfLastRegistLinkId, an80iIfPacketRetransControl=an80iIfPacketRetransControl, an80iIfPmpConnULPacketsTx=an80iIfPmpConnULPacketsTx, an80iIfAdaptiveMod=an80iIfAdaptiveMod, an80iIfLastMissedMacAddress=an80iIfLastMissedMacAddress, an80iIfRegistrationFailedTrap=an80iIfRegistrationFailedTrap, an80iIfPmpGroupId=an80iIfPmpGroupId, an80iIfPmpLinkId=an80iIfPmpLinkId, an80iIfPmpGroupVlanId=an80iIfPmpGroupVlanId, redlineAn80iIfCompls=redlineAn80iIfCompls, an80iIfPmpLinkStatsTable=an80iIfPmpLinkStatsTable, an80iIfPmpLinkStatusCode=an80iIfPmpLinkStatusCode, an80iIfPmpConnConfigStatus=an80iIfPmpConnConfigStatus, an80iIfPmpConnDLPacketsDisc=an80iIfPmpConnDLPacketsDisc, an80iIfRegPmpLinkConns=an80iIfRegPmpLinkConns, an80iIfPmpConnDLQos=an80iIfPmpConnDLQos, an80iIfTxPacketsDisc=an80iIfTxPacketsDisc, an80iIfDenyMacAddress=an80iIfDenyMacAddress, an80iIfPmpGroupRate=an80iIfPmpGroupRate, an80iIfPmpLinkCurrDLUncBurstRate=an80iIfPmpLinkCurrDLUncBurstRate, redlineAn80iIfNotificationGroup=redlineAn80iIfNotificationGroup, an80iIfPmpGroupStatsEntry=an80iIfPmpGroupStatsEntry, an80iIfTxPacketsReTx=an80iIfTxPacketsReTx, an80iIfPmpLinkName=an80iIfPmpLinkName, an80iIfPmpLinkDLBlksTot=an80iIfPmpLinkDLBlksTot, redlineAn80iIfMib=redlineAn80iIfMib, an80iIfPmpConnName=an80iIfPmpConnName, redlineAn80iIfPtpGroup=redlineAn80iIfPtpGroup, an80iIfEncryptionControl=an80iIfEncryptionControl, an80iIfPmpGroupConfigEntry=an80iIfPmpGroupConfigEntry, an80iIfPmpConnDefParenGroup=an80iIfPmpConnDefParenGroup, an80iIfPmpLinkStatus=an80iIfPmpLinkStatus, an80iIfPmpLinkStatsEntry=an80iIfPmpLinkStatsEntry, an80iIfPmpLinkDLSinAdr=an80iIfPmpLinkDLSinAdr, an80iIfPmpGroupPacketsTx=an80iIfPmpGroupPacketsTx, an80iIfPmpLinkDLBlksDisc=an80iIfPmpLinkDLBlksDisc, an80iIfPmpLinkLostCount=an80iIfPmpLinkLostCount, redlineAn80iIfConformance=redlineAn80iIfConformance, an80iIfPmpLinkStatsStatus=an80iIfPmpLinkStatsStatus, an80iIfPmpLinkPeerMacAddress=an80iIfPmpLinkPeerMacAddress, an80iIfLinkName=an80iIfLinkName, an80iIfPmpConnConfigTable=an80iIfPmpConnConfigTable, an80iIfPmpGroupDefPriority=an80iIfPmpGroupDefPriority, an80iIfPmpLinkULSinAdr=an80iIfPmpLinkULSinAdr, an80iIfPmpGroupPacketDisc=an80iIfPmpGroupPacketDisc, an80iIfPmpConnULPacketsDisc=an80iIfPmpConnULPacketsDisc, an80iIfPmpLinkULBlksDisc=an80iIfPmpLinkULBlksDisc, redlineAn80iIfPtpLinkStats=redlineAn80iIfPtpLinkStats, an80iIfLastRegistMacAddress=an80iIfLastRegistMacAddress, redlineAn80iIfPtpLinkConfig=redlineAn80iIfPtpLinkConfig, an80iIfPmpConnDefParentLink=an80iIfPmpConnDefParentLink, an80iIfPmpGroupStatsStatus=an80iIfPmpGroupStatsStatus, an80iIfPmpLinkDLLostFrm=an80iIfPmpLinkDLLostFrm, an80iIfUncodedBurstRate=an80iIfUncodedBurstRate, an80iIfPmpLinkUpTime=an80iIfPmpLinkUpTime, an80iIfLinkLength=an80iIfLinkLength, an80iIfPmpConnULPacketsRx=an80iIfPmpConnULPacketsRx, an80iIfRxPackets=an80iIfRxPackets, an80iIfPmpGroupSStoSSMulticast=an80iIfPmpGroupSStoSSMulticast, an80iIfRxPacketsDisc=an80iIfRxPacketsDisc, an80iIfPmpLinkConfigStatus=an80iIfPmpLinkConfigStatus, an80iIfPmpLinkConfigEntry=an80iIfPmpLinkConfigEntry, redlineAn80iIfCompliance=redlineAn80iIfCompliance, an80iIfPmpLinkDLBlksRetr=an80iIfPmpLinkDLBlksRetr, an80iIfPmpConnDefPriority=an80iIfPmpConnDefPriority, an80iIfPmpConnStatsEntry=an80iIfPmpConnStatsEntry, redlineAn80iIfPmpGroup=redlineAn80iIfPmpGroup, an80iIfModReduction=an80iIfModReduction, an80iIfPmpGroupConfigStatus=an80iIfPmpGroupConfigStatus, an80iIfRegistrationOKTrap=an80iIfRegistrationOKTrap, an80iIfRxPacketsReTx=an80iIfRxPacketsReTx, redlineAn80iIfPmpObjects=redlineAn80iIfPmpObjects, an80iIfPmpLinkULRssi=an80iIfPmpLinkULRssi, an80iIfPmpLinkDLBurstRate=an80iIfPmpLinkDLBurstRate, an80iIfPmpLinkDLRssi=an80iIfPmpLinkDLRssi, an80iIfPmpConnDLPacketsTx=an80iIfPmpConnDLPacketsTx, redlineAn80iIfGroups=redlineAn80iIfGroups, redlineAn80iIfPtpObjects=redlineAn80iIfPtpObjects, an80iIfLinkLenMode=an80iIfLinkLenMode, an80iIfRssiMax=an80iIfRssiMax, an80iIfRssiMean=an80iIfRssiMean)
