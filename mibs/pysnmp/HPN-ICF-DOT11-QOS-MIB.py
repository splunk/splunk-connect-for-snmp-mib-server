#
# PySNMP MIB module HPN-ICF-DOT11-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DOT11-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
hpnicfDot11, HpnicfDot11RadioElementIndex, HpnicfDot11ObjectIDType, HpnicfDot11RadioScopeType, HpnicfDot11QosAcType = mibBuilder.importSymbols("HPN-ICF-DOT11-REF-MIB", "hpnicfDot11", "HpnicfDot11RadioElementIndex", "HpnicfDot11ObjectIDType", "HpnicfDot11RadioScopeType", "HpnicfDot11QosAcType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Unsigned32, IpAddress, Counter32, MibIdentifier, ObjectIdentity, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, TimeTicks, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "IpAddress", "Counter32", "MibIdentifier", "ObjectIdentity", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "TimeTicks", "Bits", "Gauge32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
hpnicfDot11QoS = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9))
hpnicfDot11QoS.setRevisions(('2008-07-23 12:00',))
if mibBuilder.loadTexts: hpnicfDot11QoS.setLastUpdated('200807231200Z')
if mibBuilder.loadTexts: hpnicfDot11QoS.setOrganization('')
class HpnicfDot11WMMSVPMapAC(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("acbk", 1), ("acbe", 2), ("acvi", 3), ("acvo", 4), ("disable", 5))

class HpnicfDot11WMMCACPolicy(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("channelUtilization", 1), ("userNumber", 2))

hpnicfDot11WmmCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1))
hpnicfDot11RadioWmmCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 1), )
if mibBuilder.loadTexts: hpnicfDot11RadioWmmCfgTable.setStatus('current')
hpnicfDot11RadioWmmCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-QOS-MIB", "hpnicfDot11WmmRadioIndex"))
if mibBuilder.loadTexts: hpnicfDot11RadioWmmCfgEntry.setStatus('current')
hpnicfDot11WmmRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 1, 1, 1), HpnicfDot11RadioElementIndex())
if mibBuilder.loadTexts: hpnicfDot11WmmRadioIndex.setStatus('current')
hpnicfDot11RadioWmmEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioWmmEnabled.setStatus('current')
hpnicfDot11RadioSVPMapToAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 1, 1, 3), HpnicfDot11WMMSVPMapAC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioSVPMapToAC.setStatus('current')
hpnicfDot11RadioCacPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 1, 1, 4), HpnicfDot11WMMCACPolicy()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCacPolicy.setStatus('current')
hpnicfDot11RadioCacChlUtlValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCacChlUtlValue.setStatus('current')
hpnicfDot11RadioCacUserNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 124))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCacUserNum.setStatus('current')
hpnicfDot11RadioWmmEdcaCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 2), )
if mibBuilder.loadTexts: hpnicfDot11RadioWmmEdcaCfgTable.setStatus('current')
hpnicfDot11RadioWmmEdcaCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-QOS-MIB", "hpnicfDot11WmmRadioIndex"), (0, "HPN-ICF-DOT11-QOS-MIB", "hpnicfDot11RadioWmmAC"))
if mibBuilder.loadTexts: hpnicfDot11RadioWmmEdcaCfgEntry.setStatus('current')
hpnicfDot11RadioWmmAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 2, 1, 1), HpnicfDot11QosAcType())
if mibBuilder.loadTexts: hpnicfDot11RadioWmmAC.setStatus('current')
hpnicfDot11RadioWmmAifsn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioWmmAifsn.setStatus('current')
hpnicfDot11RadioWmmEcwMin = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioWmmEcwMin.setStatus('current')
hpnicfDot11RadioWmmEcwMax = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioWmmEcwMax.setStatus('current')
hpnicfDot11RadioWmmTxoplimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioWmmTxoplimit.setStatus('current')
hpnicfDot11RadioWmmNoAck = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioWmmNoAck.setStatus('current')
hpnicfDot11StationWmmEdcaTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 3), )
if mibBuilder.loadTexts: hpnicfDot11StationWmmEdcaTable.setStatus('current')
hpnicfDot11StationWmmEdcaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-QOS-MIB", "hpnicfDot11WmmRadioIndex"), (0, "HPN-ICF-DOT11-QOS-MIB", "hpnicfDot11StationWmmAC"))
if mibBuilder.loadTexts: hpnicfDot11StationWmmEdcaEntry.setStatus('current')
hpnicfDot11StationWmmAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 3, 1, 1), HpnicfDot11QosAcType())
if mibBuilder.loadTexts: hpnicfDot11StationWmmAC.setStatus('current')
hpnicfDot11StationWmmAifsn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11StationWmmAifsn.setStatus('current')
hpnicfDot11StationWmmEcwMin = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11StationWmmEcwMin.setStatus('current')
hpnicfDot11StationWmmEcwMax = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11StationWmmEcwMax.setStatus('current')
hpnicfDot11StationWmmTxoplimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11StationWmmTxoplimit.setStatus('current')
hpnicfDot11StationWmmCacEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 3, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11StationWmmCacEnabled.setStatus('current')
hpnicfDot11WmmResetGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 4))
hpnicfDot11WmmResetRadioByAP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WmmResetRadioByAP.setStatus('current')
hpnicfDot11WmmResetStationByAP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WmmResetStationByAP.setStatus('current')
hpnicfDot11RadioWmmEdcaCfg2Table = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 5), )
if mibBuilder.loadTexts: hpnicfDot11RadioWmmEdcaCfg2Table.setStatus('current')
hpnicfDot11RadioWmmEdcaCfg2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-DOT11-QOS-MIB", "hpnicfDot11WMMAPSerialID"), (0, "HPN-ICF-DOT11-QOS-MIB", "hpnicfDot11WMMRdId"), (0, "HPN-ICF-DOT11-QOS-MIB", "hpnicfDot11RdWmmAC"))
if mibBuilder.loadTexts: hpnicfDot11RadioWmmEdcaCfg2Entry.setStatus('current')
hpnicfDot11WMMAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 5, 1, 1), HpnicfDot11ObjectIDType())
if mibBuilder.loadTexts: hpnicfDot11WMMAPSerialID.setStatus('current')
hpnicfDot11WMMRdId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 5, 1, 2), HpnicfDot11RadioScopeType())
if mibBuilder.loadTexts: hpnicfDot11WMMRdId.setStatus('current')
hpnicfDot11RdWmmAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 5, 1, 3), HpnicfDot11QosAcType())
if mibBuilder.loadTexts: hpnicfDot11RdWmmAC.setStatus('current')
hpnicfDot11RdWmmAifsn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RdWmmAifsn.setStatus('current')
hpnicfDot11RdWmmEcwMin = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RdWmmEcwMin.setStatus('current')
hpnicfDot11RdWmmEcwMax = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RdWmmEcwMax.setStatus('current')
hpnicfDot11RdWmmTxoplimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 9, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RdWmmTxoplimit.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DOT11-QOS-MIB", hpnicfDot11RadioWmmEdcaCfg2Table=hpnicfDot11RadioWmmEdcaCfg2Table, hpnicfDot11RdWmmAifsn=hpnicfDot11RdWmmAifsn, hpnicfDot11RadioWmmAifsn=hpnicfDot11RadioWmmAifsn, PYSNMP_MODULE_ID=hpnicfDot11QoS, hpnicfDot11QoS=hpnicfDot11QoS, hpnicfDot11RadioWmmAC=hpnicfDot11RadioWmmAC, hpnicfDot11StationWmmEdcaEntry=hpnicfDot11StationWmmEdcaEntry, hpnicfDot11RadioWmmEcwMax=hpnicfDot11RadioWmmEcwMax, hpnicfDot11RadioWmmCfgTable=hpnicfDot11RadioWmmCfgTable, hpnicfDot11RadioWmmNoAck=hpnicfDot11RadioWmmNoAck, hpnicfDot11WmmResetRadioByAP=hpnicfDot11WmmResetRadioByAP, hpnicfDot11StationWmmEdcaTable=hpnicfDot11StationWmmEdcaTable, hpnicfDot11StationWmmCacEnabled=hpnicfDot11StationWmmCacEnabled, hpnicfDot11RadioWmmTxoplimit=hpnicfDot11RadioWmmTxoplimit, hpnicfDot11StationWmmAifsn=hpnicfDot11StationWmmAifsn, hpnicfDot11RadioWmmEdcaCfg2Entry=hpnicfDot11RadioWmmEdcaCfg2Entry, hpnicfDot11RdWmmEcwMax=hpnicfDot11RdWmmEcwMax, hpnicfDot11WmmCfgGroup=hpnicfDot11WmmCfgGroup, hpnicfDot11RadioCacPolicy=hpnicfDot11RadioCacPolicy, hpnicfDot11RadioWmmCfgEntry=hpnicfDot11RadioWmmCfgEntry, hpnicfDot11RadioCacChlUtlValue=hpnicfDot11RadioCacChlUtlValue, hpnicfDot11RadioCacUserNum=hpnicfDot11RadioCacUserNum, hpnicfDot11StationWmmEcwMin=hpnicfDot11StationWmmEcwMin, hpnicfDot11WMMAPSerialID=hpnicfDot11WMMAPSerialID, hpnicfDot11StationWmmAC=hpnicfDot11StationWmmAC, hpnicfDot11RadioWmmEdcaCfgEntry=hpnicfDot11RadioWmmEdcaCfgEntry, hpnicfDot11WMMRdId=hpnicfDot11WMMRdId, hpnicfDot11RadioWmmEcwMin=hpnicfDot11RadioWmmEcwMin, hpnicfDot11RdWmmEcwMin=hpnicfDot11RdWmmEcwMin, hpnicfDot11WmmRadioIndex=hpnicfDot11WmmRadioIndex, hpnicfDot11RadioSVPMapToAC=hpnicfDot11RadioSVPMapToAC, hpnicfDot11StationWmmTxoplimit=hpnicfDot11StationWmmTxoplimit, hpnicfDot11RadioWmmEnabled=hpnicfDot11RadioWmmEnabled, hpnicfDot11RdWmmTxoplimit=hpnicfDot11RdWmmTxoplimit, HpnicfDot11WMMSVPMapAC=HpnicfDot11WMMSVPMapAC, hpnicfDot11WmmResetStationByAP=hpnicfDot11WmmResetStationByAP, HpnicfDot11WMMCACPolicy=HpnicfDot11WMMCACPolicy, hpnicfDot11RdWmmAC=hpnicfDot11RdWmmAC, hpnicfDot11WmmResetGroup=hpnicfDot11WmmResetGroup, hpnicfDot11RadioWmmEdcaCfgTable=hpnicfDot11RadioWmmEdcaCfgTable, hpnicfDot11StationWmmEcwMax=hpnicfDot11StationWmmEcwMax)
