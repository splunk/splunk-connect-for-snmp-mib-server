#
# PySNMP MIB module CISCO-DIST-DIRECTOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DIST-DIRECTOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoPort, = mibBuilder.importSymbols("CISCO-TC", "CiscoPort")
DnsNameAsIndex, DnsType, DnsName = mibBuilder.importSymbols("DNS-SERVER-MIB", "DnsNameAsIndex", "DnsType", "DnsName")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, ObjectIdentity, Unsigned32, Bits, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, NotificationType, IpAddress, Counter64, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "ObjectIdentity", "Unsigned32", "Bits", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "NotificationType", "IpAddress", "Counter64", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
TimeInterval, TimeStamp, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC-v1", "TimeInterval", "TimeStamp", "TruthValue", "RowStatus")
ciscoDistDirMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197))
ciscoDistDirMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 1))
cddGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1))
cddHost = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2))
cddServer = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3))
cddMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 4))
ciscoDistDirMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 2))
ciscoDistDirMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 2, 0))
ciscoDistDirMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 3))
ciscoDistDirMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 3, 1))
ciscoDistDirMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 3, 2))
class CddMetricType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("drpExternal", 1), ("drpInternal", 2), ("drpServer", 3), ("drpRtt", 4), ("admin", 5), ("random", 6), ("portion", 7), ("dfpAvailability", 8), ("routeMap", 9))

class CddMetricPriority(Gauge32):
    subtypeSpec = Gauge32.subtypeSpec + ValueRangeConstraint(0, 101)

class CddMetricWeight(Gauge32):
    subtypeSpec = Gauge32.subtypeSpec + ValueRangeConstraint(0, 100)

class CddMetricProfileId(Gauge32):
    subtypeSpec = Gauge32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class CddMetricProfileIdOrZero(Gauge32):
    subtypeSpec = Gauge32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

cddGeneralMetricProfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 1), )
if mibBuilder.loadTexts: cddGeneralMetricProfTable.setStatus('mandatory')
cddGeneralMetricProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-DIST-DIRECTOR-MIB", "cddGeneralMetricProfId"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddGeneralMetricProfMetric"))
if mibBuilder.loadTexts: cddGeneralMetricProfEntry.setStatus('mandatory')
cddGeneralMetricProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 1, 1, 1), CddMetricProfileId())
if mibBuilder.loadTexts: cddGeneralMetricProfId.setStatus('mandatory')
cddGeneralMetricProfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 1, 1, 2), CddMetricType())
if mibBuilder.loadTexts: cddGeneralMetricProfMetric.setStatus('mandatory')
cddGeneralMetricProfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 1, 1, 3), CddMetricPriority().clone(101)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddGeneralMetricProfPriority.setStatus('mandatory')
cddGeneralMetricProfWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 1, 1, 4), CddMetricWeight().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddGeneralMetricProfWeight.setStatus('mandatory')
cddGeneralMetricProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddGeneralMetricProfRowStatus.setStatus('mandatory')
cddGeneralQueries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralQueries.setStatus('mandatory')
cddGeneralReplies = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralReplies.setStatus('mandatory')
cddGeneralQueueProcess = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralQueueProcess.setStatus('mandatory')
cddGeneralQueueMetric = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralQueueMetric.setStatus('mandatory')
cddGeneralMetricWaitMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralMetricWaitMin.setStatus('mandatory')
cddGeneralMetricWaitAvg = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralMetricWaitAvg.setStatus('mandatory')
cddGeneralMetricWaitMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralMetricWaitMax.setStatus('mandatory')
cddGeneralCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralCacheHits.setStatus('mandatory')
cddGeneralCacheEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 10), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddGeneralCacheEnable.setStatus('mandatory')
cddGeneralCacheTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddGeneralCacheTime.setStatus('mandatory')
cddGeneralTTL = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddGeneralTTL.setStatus('mandatory')
cddGeneralDefPriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 13), CddMetricProfileIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddGeneralDefPriorityWeight.setStatus('mandatory')
cddGeneralQueryRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralQueryRate.setStatus('mandatory')
cddGeneralAccessList = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 1, 15), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 199))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddGeneralAccessList.setStatus('mandatory')
cddHostTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1), )
if mibBuilder.loadTexts: cddHostTable.setStatus('mandatory')
cddHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-DIST-DIRECTOR-MIB", "cddHostName"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddHostQueryType"))
if mibBuilder.loadTexts: cddHostEntry.setStatus('mandatory')
cddHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 1), DnsNameAsIndex())
if mibBuilder.loadTexts: cddHostName.setStatus('mandatory')
cddHostQueryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 2), DnsType())
if mibBuilder.loadTexts: cddHostQueryType.setStatus('mandatory')
cddHostServicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 3), CiscoPort()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostServicePort.setStatus('mandatory')
cddHostPriorityWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 4), CddMetricProfileIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostPriorityWeight.setStatus('mandatory')
cddHostDrpMed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostDrpMed.setStatus('mandatory')
cddHostDrpRttProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostDrpRttProbes.setStatus('mandatory')
cddHostDrpRttTol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostDrpRttTol.setStatus('mandatory')
cddHostAccessControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostAccessControl.setStatus('mandatory')
cddHostMultipleRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostMultipleRecord.setStatus('mandatory')
cddHostLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostLogging.setStatus('mandatory')
cddHostUrlString = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 11), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostUrlString.setStatus('mandatory')
cddHostUrlIntv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 12), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(0, 3276700))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostUrlIntv.setStatus('mandatory')
cddHostRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddHostRequests.setStatus('mandatory')
cddHostReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddHostReplies.setStatus('mandatory')
cddHostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 1, 1, 15), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostRowStatus.setStatus('mandatory')
cddHostConnectCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 2), )
if mibBuilder.loadTexts: cddHostConnectCfgTable.setStatus('mandatory')
cddHostConnectCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-DIST-DIRECTOR-MIB", "cddHostName"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddHostQueryType"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddHostConnectCfgPort"))
if mibBuilder.loadTexts: cddHostConnectCfgEntry.setStatus('mandatory')
cddHostConnectCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 2, 1, 1), CiscoPort().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cddHostConnectCfgPort.setStatus('mandatory')
cddHostConnectCfgIntv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 2, 1, 2), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(0, 3276700))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostConnectCfgIntv.setStatus('mandatory')
cddHostConnectCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostConnectCfgRowStatus.setStatus('mandatory')
cddHostTolCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 3), )
if mibBuilder.loadTexts: cddHostTolCfgTable.setStatus('mandatory')
cddHostTolCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-DIST-DIRECTOR-MIB", "cddHostName"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddHostQueryType"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddHostTolCfgPrio"))
if mibBuilder.loadTexts: cddHostTolCfgEntry.setStatus('mandatory')
cddHostTolCfgPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 3, 1, 1), CddMetricPriority().subtype(subtypeSpec=ValueRangeConstraint(1, 101)))
if mibBuilder.loadTexts: cddHostTolCfgPrio.setStatus('mandatory')
cddHostTolCfgPerc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 3, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostTolCfgPerc.setStatus('mandatory')
cddHostTolCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 2, 3, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostTolCfgRowStatus.setStatus('mandatory')
cddServerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1), )
if mibBuilder.loadTexts: cddServerTable.setStatus('mandatory')
cddServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-DIST-DIRECTOR-MIB", "cddServerAddrType"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddServerAddr"))
if mibBuilder.loadTexts: cddServerEntry.setStatus('mandatory')
cddServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cddServerAddrType.setStatus('mandatory')
cddServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: cddServerAddr.setStatus('mandatory')
cddServerDrpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerDrpAddrType.setStatus('mandatory')
cddServerDrpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerDrpAddr.setStatus('mandatory')
cddServerAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerAdmin.setStatus('mandatory')
cddServerPortion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortion.setStatus('mandatory')
cddServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 7), DnsName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerName.setStatus('mandatory')
cddServerAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerAvail.setStatus('mandatory')
cddServerHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerHits.setStatus('mandatory')
cddServerLastHitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerLastHitTime.setStatus('mandatory')
cddServerDrpSerMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerDrpSerMetric.setStatus('mandatory')
cddServerPortionHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerPortionHits.setStatus('mandatory')
cddServerAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerAccessList.setStatus('mandatory')
cddServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 1, 1, 14), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerRowStatus.setStatus('mandatory')
cddServerPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2), )
if mibBuilder.loadTexts: cddServerPortTable.setStatus('mandatory')
cddServerPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-DIST-DIRECTOR-MIB", "cddServerAddrType"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddServerAddr"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddServerPortNum"))
if mibBuilder.loadTexts: cddServerPortEntry.setStatus('mandatory')
cddServerPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 1), CiscoPort().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cddServerPortNum.setStatus('mandatory')
cddServerPortAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortAdmin.setStatus('mandatory')
cddServerPortConnIntv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 3), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(0, 3276700))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortConnIntv.setStatus('mandatory')
cddServerPortPortion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortPortion.setStatus('mandatory')
cddServerPortAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortAvail.setStatus('mandatory')
cddServerPortUrlString = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 6), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortUrlString.setStatus('mandatory')
cddServerPortUrlIntv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 7), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(0, 3276700))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortUrlIntv.setStatus('mandatory')
cddServerPortHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerPortHits.setStatus('mandatory')
cddServerPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("undetermined", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerPortStatus.setStatus('mandatory')
cddServerPortDownCertainty = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(10, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerPortDownCertainty.setStatus('mandatory')
cddServerPortNextRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerPortNextRetry.setStatus('mandatory')
cddServerPortPortionHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerPortPortionHits.setStatus('mandatory')
cddServerPortAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cddServerPortAccessList.setStatus('mandatory')
cddServerPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 2, 1, 14), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortRowStatus.setStatus('mandatory')
cddServerPortMetricTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 3), )
if mibBuilder.loadTexts: cddServerPortMetricTable.setStatus('mandatory')
cddServerPortMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-DIST-DIRECTOR-MIB", "cddServerAddrType"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddServerAddr"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddServerPortNum"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddServerPortMetricType"))
if mibBuilder.loadTexts: cddServerPortMetricEntry.setStatus('mandatory')
cddServerPortMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 3, 1, 1), CddMetricType())
if mibBuilder.loadTexts: cddServerPortMetricType.setStatus('mandatory')
cddServerPortMetricWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 3, 1, 2), CddMetricWeight()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortMetricWeight.setStatus('mandatory')
cddServerPortMetricRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 3, 3, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddServerPortMetricRowStatus.setStatus('mandatory')
cddHostServerMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 4, 1), )
if mibBuilder.loadTexts: cddHostServerMappingTable.setStatus('mandatory')
cddHostServerMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-DIST-DIRECTOR-MIB", "cddHostName"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddHostQueryType"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddHostServerMappingServerAddrType"), (0, "CISCO-DIST-DIRECTOR-MIB", "cddHostServerMappingServerAddr"))
if mibBuilder.loadTexts: cddHostServerMappingEntry.setStatus('mandatory')
cddHostServerMappingServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 4, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cddHostServerMappingServerAddrType.setStatus('mandatory')
cddHostServerMappingServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 4, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: cddHostServerMappingServerAddr.setStatus('mandatory')
cddHostServerMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 197, 1, 4, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cddHostServerMappingRowStatus.setStatus('mandatory')
ciscoDistDirEventServerUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 197, 2) + (0,1)).setObjects(("CISCO-DIST-DIRECTOR-MIB", "cddServerPortStatus"))
ciscoDistDirEventServerDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 197, 2) + (0,2)).setObjects(("CISCO-DIST-DIRECTOR-MIB", "cddServerPortStatus"))
ciscoDistDirEventHitRateHigh = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 197, 2) + (0,3)).setObjects(("CISCO-DIST-DIRECTOR-MIB", "cddGeneralQueryRate"))
ciscoDistDirGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 3, 2, 1))
ciscoDistDirHostGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 3, 2, 2))
ciscoDistDirServerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 3, 2, 3))
ciscoDistDirMappingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 3, 2, 4))
ciscoDistDirNotificationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 3, 2, 5))
ciscoDistDirMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 197, 3, 1, 1))
mibBuilder.exportSymbols("CISCO-DIST-DIRECTOR-MIB", cddHostDrpRttTol=cddHostDrpRttTol, cddHostName=cddHostName, cddHostServerMappingRowStatus=cddHostServerMappingRowStatus, cddGeneralMetricWaitMax=cddGeneralMetricWaitMax, cddHostServerMappingServerAddrType=cddHostServerMappingServerAddrType, cddMapping=cddMapping, cddServerPortMetricTable=cddServerPortMetricTable, cddServerPortNum=cddServerPortNum, cddGeneralMetricProfRowStatus=cddGeneralMetricProfRowStatus, cddGeneralMetricProfEntry=cddGeneralMetricProfEntry, cddGeneralCacheEnable=cddGeneralCacheEnable, cddHostTable=cddHostTable, cddServerPortNextRetry=cddServerPortNextRetry, cddHostServerMappingTable=cddHostServerMappingTable, cddServerDrpAddr=cddServerDrpAddr, cddHostTolCfgPerc=cddHostTolCfgPerc, cddServerPortUrlString=cddServerPortUrlString, cddServerAccessList=cddServerAccessList, ciscoDistDirMIBConformance=ciscoDistDirMIBConformance, cddHostUrlIntv=cddHostUrlIntv, cddServerHits=cddServerHits, cddGeneralMetricProfPriority=cddGeneralMetricProfPriority, cddHostRowStatus=cddHostRowStatus, cddServerPortHits=cddServerPortHits, ciscoDistDirMIBNotificationPrefix=ciscoDistDirMIBNotificationPrefix, cddHostTolCfgEntry=cddHostTolCfgEntry, cddServerDrpAddrType=cddServerDrpAddrType, CddMetricType=CddMetricType, cddGeneral=cddGeneral, ciscoDistDirMIBCompliances=ciscoDistDirMIBCompliances, cddGeneralMetricProfWeight=cddGeneralMetricProfWeight, cddGeneralQueueMetric=cddGeneralQueueMetric, cddHostRequests=cddHostRequests, ciscoDistDirEventHitRateHigh=ciscoDistDirEventHitRateHigh, cddServerPortAvail=cddServerPortAvail, cddHostConnectCfgIntv=cddHostConnectCfgIntv, cddHostTolCfgRowStatus=cddHostTolCfgRowStatus, cddServerTable=cddServerTable, cddServerPortion=cddServerPortion, cddHostUrlString=cddHostUrlString, cddGeneralMetricProfTable=cddGeneralMetricProfTable, cddServerPortionHits=cddServerPortionHits, cddServerPortDownCertainty=cddServerPortDownCertainty, cddHostConnectCfgPort=cddHostConnectCfgPort, cddServerPortEntry=cddServerPortEntry, cddServerRowStatus=cddServerRowStatus, cddServerPortMetricType=cddServerPortMetricType, cddHostMultipleRecord=cddHostMultipleRecord, cddGeneralMetricProfMetric=cddGeneralMetricProfMetric, cddServerPortStatus=cddServerPortStatus, cddHostQueryType=cddHostQueryType, cddServerPortPortionHits=cddServerPortPortionHits, ciscoDistDirEventServerDown=ciscoDistDirEventServerDown, cddGeneralMetricProfId=cddGeneralMetricProfId, cddHostConnectCfgTable=cddHostConnectCfgTable, cddServerPortMetricWeight=cddServerPortMetricWeight, cddServerPortRowStatus=cddServerPortRowStatus, cddGeneralQueryRate=cddGeneralQueryRate, cddHostEntry=cddHostEntry, cddGeneralCacheTime=cddGeneralCacheTime, ciscoDistDirEventServerUp=ciscoDistDirEventServerUp, ciscoDistDirHostGroup=ciscoDistDirHostGroup, cddServerPortUrlIntv=cddServerPortUrlIntv, cddServerAdmin=cddServerAdmin, CddMetricPriority=CddMetricPriority, cddHostLogging=cddHostLogging, cddGeneralDefPriorityWeight=cddGeneralDefPriorityWeight, cddGeneralAccessList=cddGeneralAccessList, ciscoDistDirNotificationGroup=ciscoDistDirNotificationGroup, CddMetricProfileIdOrZero=CddMetricProfileIdOrZero, cddServerPortTable=cddServerPortTable, cddHostConnectCfgRowStatus=cddHostConnectCfgRowStatus, cddServerName=cddServerName, ciscoDistDirMIBObjects=ciscoDistDirMIBObjects, cddHostServicePort=cddHostServicePort, ciscoDistDirMIBNotifications=ciscoDistDirMIBNotifications, ciscoDistDirMIB=ciscoDistDirMIB, ciscoDistDirMIBCompliance=ciscoDistDirMIBCompliance, cddGeneralTTL=cddGeneralTTL, cddServerAvail=cddServerAvail, cddServer=cddServer, ciscoDistDirMIBGroups=ciscoDistDirMIBGroups, cddGeneralReplies=cddGeneralReplies, cddServerAddrType=cddServerAddrType, cddHostServerMappingEntry=cddHostServerMappingEntry, cddGeneralQueueProcess=cddGeneralQueueProcess, cddHostPriorityWeight=cddHostPriorityWeight, ciscoDistDirGeneralGroup=ciscoDistDirGeneralGroup, cddServerPortMetricEntry=cddServerPortMetricEntry, cddHostDrpRttProbes=cddHostDrpRttProbes, cddHostAccessControl=cddHostAccessControl, cddGeneralMetricWaitAvg=cddGeneralMetricWaitAvg, cddServerDrpSerMetric=cddServerDrpSerMetric, ciscoDistDirServerGroup=ciscoDistDirServerGroup, ciscoDistDirMappingGroup=ciscoDistDirMappingGroup, cddServerEntry=cddServerEntry, cddServerPortAccessList=cddServerPortAccessList, cddHostTolCfgTable=cddHostTolCfgTable, cddServerLastHitTime=cddServerLastHitTime, cddServerPortMetricRowStatus=cddServerPortMetricRowStatus, cddGeneralQueries=cddGeneralQueries, cddServerAddr=cddServerAddr, cddGeneralMetricWaitMin=cddGeneralMetricWaitMin, cddServerPortConnIntv=cddServerPortConnIntv, cddServerPortPortion=cddServerPortPortion, cddGeneralCacheHits=cddGeneralCacheHits, cddHostReplies=cddHostReplies, cddHost=cddHost, CddMetricProfileId=CddMetricProfileId, cddHostConnectCfgEntry=cddHostConnectCfgEntry, cddServerPortAdmin=cddServerPortAdmin, cddHostServerMappingServerAddr=cddHostServerMappingServerAddr, CddMetricWeight=CddMetricWeight, cddHostDrpMed=cddHostDrpMed, cddHostTolCfgPrio=cddHostTolCfgPrio)
