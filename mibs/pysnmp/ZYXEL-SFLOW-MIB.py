#
# PySNMP MIB module ZYXEL-SFLOW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-SFLOW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:45:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, ObjectIdentity, IpAddress, MibIdentifier, Bits, Counter32, Unsigned32, NotificationType, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "ObjectIdentity", "IpAddress", "MibIdentifier", "Bits", "Counter32", "Unsigned32", "NotificationType", "TimeTicks", "Counter64")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelSflow = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75))
if mibBuilder.loadTexts: zyxelSflow.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelSflow.setOrganization('Enterprise Solution ZyXEL')
zyxelSflowSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1))
zySflowState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySflowState.setStatus('current')
zySflowMaxNumberOfCollectors = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySflowMaxNumberOfCollectors.setStatus('current')
zyxelSflowCollectorTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 3), )
if mibBuilder.loadTexts: zyxelSflowCollectorTable.setStatus('current')
zyxelSflowCollectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 3, 1), ).setIndexNames((0, "ZYXEL-SFLOW-MIB", "zySflowCollectorIpAddressType"), (0, "ZYXEL-SFLOW-MIB", "zySflowCollectorIpAddress"))
if mibBuilder.loadTexts: zyxelSflowCollectorEntry.setStatus('current')
zySflowCollectorIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: zySflowCollectorIpAddressType.setStatus('current')
zySflowCollectorIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: zySflowCollectorIpAddress.setStatus('current')
zySflowCollectorUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySflowCollectorUdpPort.setStatus('current')
zySflowCollectorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zySflowCollectorRowStatus.setStatus('current')
zyxelSflowPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 4), )
if mibBuilder.loadTexts: zyxelSflowPortTable.setStatus('current')
zyxelSflowPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 4, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelSflowPortEntry.setStatus('current')
zySflowPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 4, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySflowPortState.setStatus('current')
zySflowMaxNumberOfPortCollectors = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySflowMaxNumberOfPortCollectors.setStatus('current')
zyxelSflowPortCollectorTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 6), )
if mibBuilder.loadTexts: zyxelSflowPortCollectorTable.setStatus('current')
zyxelSflowPortCollectorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 6, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"), (0, "ZYXEL-SFLOW-MIB", "zySflowPortCollectorIpAddressType"), (0, "ZYXEL-SFLOW-MIB", "zySflowPortCollectorIpAddress"))
if mibBuilder.loadTexts: zyxelSflowPortCollectorEntry.setStatus('current')
zySflowPortCollectorIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: zySflowPortCollectorIpAddressType.setStatus('current')
zySflowPortCollectorIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 6, 1, 2), InetAddress())
if mibBuilder.loadTexts: zySflowPortCollectorIpAddress.setStatus('current')
zySflowPortCollectorSampleRate = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySflowPortCollectorSampleRate.setStatus('current')
zySflowPortCollectorPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySflowPortCollectorPollInterval.setStatus('current')
zySflowPortCollectorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 75, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zySflowPortCollectorRowStatus.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-SFLOW-MIB", zySflowMaxNumberOfPortCollectors=zySflowMaxNumberOfPortCollectors, zyxelSflow=zyxelSflow, zyxelSflowCollectorTable=zyxelSflowCollectorTable, zySflowPortCollectorIpAddress=zySflowPortCollectorIpAddress, zyxelSflowSetup=zyxelSflowSetup, zyxelSflowPortCollectorTable=zyxelSflowPortCollectorTable, zySflowPortCollectorSampleRate=zySflowPortCollectorSampleRate, zySflowPortCollectorPollInterval=zySflowPortCollectorPollInterval, zyxelSflowCollectorEntry=zyxelSflowCollectorEntry, zySflowPortState=zySflowPortState, zySflowState=zySflowState, zyxelSflowPortCollectorEntry=zyxelSflowPortCollectorEntry, zyxelSflowPortTable=zyxelSflowPortTable, PYSNMP_MODULE_ID=zyxelSflow, zySflowPortCollectorRowStatus=zySflowPortCollectorRowStatus, zySflowMaxNumberOfCollectors=zySflowMaxNumberOfCollectors, zySflowCollectorRowStatus=zySflowCollectorRowStatus, zySflowCollectorUdpPort=zySflowCollectorUdpPort, zySflowCollectorIpAddressType=zySflowCollectorIpAddressType, zyxelSflowPortEntry=zyxelSflowPortEntry, zySflowCollectorIpAddress=zySflowCollectorIpAddress, zySflowPortCollectorIpAddressType=zySflowPortCollectorIpAddressType)
