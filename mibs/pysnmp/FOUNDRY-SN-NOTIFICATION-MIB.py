#
# PySNMP MIB module FOUNDRY-SN-NOTIFICATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FOUNDRY-SN-NOTIFICATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:01:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
brcdNPLockupRecoveryCount, brcdNPIndex = mibBuilder.importSymbols("BROCADE-NP-TM-STATS-MIB", "brcdNPLockupRecoveryCount", "brcdNPIndex")
dot3OamLoopbackStatus, = mibBuilder.importSymbols("DOT3-OAM-MIB", "dot3OamLoopbackStatus")
snChasFanIndex, fdryLicenseType, snAgentBrdModuleStatus, snChasPwrSupplyStatus, snChasPwrSupplyDescription, snChasUnitIndex, snChasFanDescription, snChasPwrSupplyIndex, snAgentBrdIndex, snAgGblTrapMessage = mibBuilder.importSymbols("FOUNDRY-SN-AGENT-MIB", "snChasFanIndex", "fdryLicenseType", "snAgentBrdModuleStatus", "snChasPwrSupplyStatus", "snChasPwrSupplyDescription", "snChasUnitIndex", "snChasFanDescription", "snChasPwrSupplyIndex", "snAgentBrdIndex", "snAgGblTrapMessage")
snOspfVirtIfStatusState, snOspfLsdbType, snOspfIfStatusState, snOspfNbrIpAddr, snOspfLsdbRouterId, snOspfPacketType, snOspfRouterId, snOspfLsdbLsId, snOspfVirtNbrArea, snOspfVirtIfStatusNeighbor, snOspfVirtNbrState, snOspfVirtIfStatusAreaID, snOspfNbrState, snOspfPacketSrc, snOspfConfigErrorType, snOspfVirtNbrRtrId, snOspfIfStatusIpAddress, snOspfExtLsdbLimit, snOspfNbrRtrId, snOspfLsdbAreaId = mibBuilder.importSymbols("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusState", "snOspfLsdbType", "snOspfIfStatusState", "snOspfNbrIpAddr", "snOspfLsdbRouterId", "snOspfPacketType", "snOspfRouterId", "snOspfLsdbLsId", "snOspfVirtNbrArea", "snOspfVirtIfStatusNeighbor", "snOspfVirtNbrState", "snOspfVirtIfStatusAreaID", "snOspfNbrState", "snOspfPacketSrc", "snOspfConfigErrorType", "snOspfVirtNbrRtrId", "snOspfIfStatusIpAddress", "snOspfExtLsdbLimit", "snOspfNbrRtrId", "snOspfLsdbAreaId")
foundry, = mibBuilder.importSymbols("FOUNDRY-SN-ROOT-MIB", "foundry")
snStackingGlobalMixedMode, = mibBuilder.importSymbols("FOUNDRY-SN-STACKING-MIB", "snStackingGlobalMixedMode")
snL4MaxSessionLimit, snL4TrapLinkName, snL4TcpSynLimit, snL4LinkVirtualInterface, snL4TrapRealServerIP, snL4TrapRealServerCurConnections, snL4TrapRealServerPort, snL4TrapRealServerName = mibBuilder.importSymbols("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4MaxSessionLimit", "snL4TrapLinkName", "snL4TcpSynLimit", "snL4LinkVirtualInterface", "snL4TrapRealServerIP", "snL4TrapRealServerCurConnections", "snL4TrapRealServerPort", "snL4TrapRealServerName")
snSwViolatorPortNumber, snSwViolatorMacAddress, snVLanByPortCfgVLanId = mibBuilder.importSymbols("FOUNDRY-SN-SWITCH-GROUP-MIB", "snSwViolatorPortNumber", "snSwViolatorMacAddress", "snVLanByPortCfgVLanId")
wgPnPStatus, = mibBuilder.importSymbols("FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgPnPStatus")
dot1agCfmMdName, dot1agCfmMepDbRMepState, dot1agCfmMaNetName = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "dot1agCfmMdName", "dot1agCfmMepDbRMepState", "dot1agCfmMaNetName")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter64, MibIdentifier, ModuleIdentity, Bits, Counter32, TimeTicks, Gauge32, ObjectIdentity, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "MibIdentifier", "ModuleIdentity", "Bits", "Counter32", "TimeTicks", "Gauge32", "ObjectIdentity", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snTraps = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 0))
snTraps.setRevisions(('2012-05-18 00:00', '2010-06-02 00:00', '2009-09-30 00:00',))
if mibBuilder.loadTexts: snTraps.setLastUpdated('201205180000Z')
if mibBuilder.loadTexts: snTraps.setOrganization('Brocade Communications Systems, Inc.')
snTrapChasPwrSupply = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyStatus"))
if mibBuilder.loadTexts: snTrapChasPwrSupply.setStatus('current')
snTrapLockedAddressViolation = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 2)).setObjects(("FOUNDRY-SN-SWITCH-GROUP-MIB", "snSwViolatorPortNumber"), ("FOUNDRY-SN-SWITCH-GROUP-MIB", "snSwViolatorMacAddress"))
if mibBuilder.loadTexts: snTrapLockedAddressViolation.setStatus('current')
snTrapOspfIfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 3)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfIfStatusIpAddress"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfIfStatusState"))
if mibBuilder.loadTexts: snTrapOspfIfStateChange.setStatus('current')
snTrapOspfVirtIfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 4)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusAreaID"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusNeighbor"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusState"))
if mibBuilder.loadTexts: snTrapOspfVirtIfStateChange.setStatus('current')
snOspfNbrStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 5)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfNbrIpAddr"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfNbrRtrId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfNbrState"))
if mibBuilder.loadTexts: snOspfNbrStateChange.setStatus('current')
snOspfVirtNbrStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 6)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtNbrArea"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtNbrRtrId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtNbrState"))
if mibBuilder.loadTexts: snOspfVirtNbrStateChange.setStatus('current')
snOspfIfConfigError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 7)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfIfStatusIpAddress"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketSrc"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfConfigErrorType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketType"))
if mibBuilder.loadTexts: snOspfIfConfigError.setStatus('current')
snOspfVirtIfConfigError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 8)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusAreaID"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusNeighbor"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfConfigErrorType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketType"))
if mibBuilder.loadTexts: snOspfVirtIfConfigError.setStatus('current')
snOspfIfAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 9)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfIfStatusIpAddress"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketSrc"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfConfigErrorType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketType"))
if mibBuilder.loadTexts: snOspfIfAuthFailure.setStatus('current')
snOspfVirtIfAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 10)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusAreaID"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusNeighbor"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfConfigErrorType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketType"))
if mibBuilder.loadTexts: snOspfVirtIfAuthFailure.setStatus('current')
snOspfIfRxBadPacket = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 11)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfIfStatusIpAddress"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketSrc"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketType"))
if mibBuilder.loadTexts: snOspfIfRxBadPacket.setStatus('current')
snOspfVirtIfRxBadPacket = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 12)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusAreaID"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusNeighbor"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketType"))
if mibBuilder.loadTexts: snOspfVirtIfRxBadPacket.setStatus('current')
snOspfTxRetransmit = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 13)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfIfStatusIpAddress"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfNbrRtrId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbLsId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbRouterId"))
if mibBuilder.loadTexts: snOspfTxRetransmit.setStatus('current')
ospfVirtIfTxRetransmit = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 14)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusAreaID"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfVirtIfStatusNeighbor"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfPacketType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbLsId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbRouterId"))
if mibBuilder.loadTexts: ospfVirtIfTxRetransmit.setStatus('current')
snOspfOriginateLsa = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 15)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbAreaId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbLsId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbRouterId"))
if mibBuilder.loadTexts: snOspfOriginateLsa.setStatus('current')
snOspfMaxAgeLsa = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 16)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbAreaId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbType"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbLsId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfLsdbRouterId"))
if mibBuilder.loadTexts: snOspfMaxAgeLsa.setStatus('current')
snOspfLsdbOverflow = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 17)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfExtLsdbLimit"))
if mibBuilder.loadTexts: snOspfLsdbOverflow.setStatus('current')
snOspfLsdbApproachingOverflow = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 18)).setObjects(("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfRouterId"), ("FOUNDRY-SN-OSPF-GROUP-MIB", "snOspfExtLsdbLimit"))
if mibBuilder.loadTexts: snOspfLsdbApproachingOverflow.setStatus('current')
snTrapL4MaxSessionLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 19)).setObjects(("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4MaxSessionLimit"))
if mibBuilder.loadTexts: snTrapL4MaxSessionLimitReached.setStatus('current')
snTrapL4TcpSynLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 20)).setObjects(("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TcpSynLimit"))
if mibBuilder.loadTexts: snTrapL4TcpSynLimitReached.setStatus('current')
snTrapL4RealServerUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 21)).setObjects(("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerIP"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerName"))
if mibBuilder.loadTexts: snTrapL4RealServerUp.setStatus('current')
snTrapL4RealServerDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 22)).setObjects(("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerIP"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerName"))
if mibBuilder.loadTexts: snTrapL4RealServerDown.setStatus('current')
snTrapL4RealServerPortUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 23)).setObjects(("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerIP"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerName"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerPort"))
if mibBuilder.loadTexts: snTrapL4RealServerPortUp.setStatus('current')
snTrapL4RealServerPortDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 24)).setObjects(("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerIP"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerName"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerPort"))
if mibBuilder.loadTexts: snTrapL4RealServerPortDown.setStatus('current')
snTrapL4RealServerMaxConnectionLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 25)).setObjects(("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerIP"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerName"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapRealServerCurConnections"))
if mibBuilder.loadTexts: snTrapL4RealServerMaxConnectionLimitReached.setStatus('current')
snTrapL4BecomeStandby = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 26))
if mibBuilder.loadTexts: snTrapL4BecomeStandby.setStatus('current')
snTrapL4BecomeActive = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 27))
if mibBuilder.loadTexts: snTrapL4BecomeActive.setStatus('current')
snTrapModuleInserted = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 28)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"))
if mibBuilder.loadTexts: snTrapModuleInserted.setStatus('current')
snTrapModuleRemoved = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 29)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"))
if mibBuilder.loadTexts: snTrapModuleRemoved.setStatus('current')
snTrapChasPwrSupplyFailed = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 30)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyDescription"))
if mibBuilder.loadTexts: snTrapChasPwrSupplyFailed.setStatus('current')
snTrapChasFanFailed = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 31)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasFanIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasFanDescription"))
if mibBuilder.loadTexts: snTrapChasFanFailed.setStatus('current')
snTrapLockedAddressViolation2 = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 32)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLockedAddressViolation2.setStatus('current')
snTrapFsrpIfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 33)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapFsrpIfStateChange.setStatus('current')
snTrapVrrpIfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 34)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapVrrpIfStateChange.setStatus('current')
snTrapMgmtModuleRedunStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 35)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMgmtModuleRedunStateChange.setStatus('current')
snTrapTemperatureWarning = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 36)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTemperatureWarning.setStatus('current')
snTrapAccessListDeny = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 37)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapAccessListDeny.setStatus('current')
snTrapMacFilterDeny = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 38)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacFilterDeny.setStatus('current')
snTrapL4GslbRemoteUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 39)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4GslbRemoteUp.setStatus('current')
snTrapL4GslbRemoteDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 40)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4GslbRemoteDown.setStatus('current')
snTrapL4GslbRemoteControllerUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 41)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4GslbRemoteControllerUp.setStatus('current')
snTrapL4GslbRemoteControllerDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 42)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4GslbRemoteControllerDown.setStatus('current')
snTrapL4GslbHealthCheckIpUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 43)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4GslbHealthCheckIpUp.setStatus('current')
snTrapL4GslbHealthCheckIpDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 44)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4GslbHealthCheckIpDown.setStatus('current')
snTrapL4GslbHealthCheckIpPortUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 45)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4GslbHealthCheckIpPortUp.setStatus('current')
snTrapL4GslbHealthCheckIpPortDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 46)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4GslbHealthCheckIpPortDown.setStatus('current')
snTrapL4FirewallBecomeStandby = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 47))
if mibBuilder.loadTexts: snTrapL4FirewallBecomeStandby.setStatus('current')
snTrapL4FirewallBecomeActive = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 48))
if mibBuilder.loadTexts: snTrapL4FirewallBecomeActive.setStatus('current')
snTrapL4FirewallPathUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 49))
if mibBuilder.loadTexts: snTrapL4FirewallPathUp.setStatus('current')
snTrapL4FirewallPathDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 50))
if mibBuilder.loadTexts: snTrapL4FirewallPathDown.setStatus('current')
snTrapIcmpLocalExceedBurst = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 51)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapIcmpLocalExceedBurst.setStatus('current')
snTrapIcmpTransitExceedBurst = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 52)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapIcmpTransitExceedBurst.setStatus('current')
snTrapTcpLocalExceedBurst = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 53)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTcpLocalExceedBurst.setStatus('current')
snTrapTcpTransitExceedBurst = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 54)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTcpTransitExceedBurst.setStatus('current')
snTrapL4ContentVerification = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 55))
if mibBuilder.loadTexts: snTrapL4ContentVerification.setStatus('current')
snTrapDuplicateIp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 56)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDuplicateIp.setStatus('current')
snTrapMplsProblem = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 57))
if mibBuilder.loadTexts: snTrapMplsProblem.setStatus('obsolete')
snTrapMplsException = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 58))
if mibBuilder.loadTexts: snTrapMplsException.setStatus('obsolete')
snTrapMplsAudit = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 59))
if mibBuilder.loadTexts: snTrapMplsAudit.setStatus('obsolete')
snTrapMplsDeveloper = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 60))
if mibBuilder.loadTexts: snTrapMplsDeveloper.setStatus('obsolete')
snTrapNoBmFreeQueue = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 61)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapNoBmFreeQueue.setStatus('current')
snTrapSmcDmaDrop = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 62)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSmcDmaDrop.setStatus('current')
snTrapSmcBpDrop = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 63)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSmcBpDrop.setStatus('current')
snTrapBmWriteSeqDrop = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 64)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapBmWriteSeqDrop.setStatus('current')
snTrapBgpPeerUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 65)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapBgpPeerUp.setStatus('current')
snTrapBgpPeerDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 66)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapBgpPeerDown.setStatus('current')
snTrapL4RealServerResponseTimeLowerLimit = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 67)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4RealServerResponseTimeLowerLimit.setStatus('current')
snTrapL4RealServerResponseTimeUpperLimit = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 68)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4RealServerResponseTimeUpperLimit.setStatus('current')
snTrapL4TcpAttackRateExceedMax = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 69)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4TcpAttackRateExceedMax.setStatus('current')
snTrapL4TcpAttackRateExceedThreshold = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 70)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4TcpAttackRateExceedThreshold.setStatus('current')
snTrapL4ConnectionRateExceedMax = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 71)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4ConnectionRateExceedMax.setStatus('current')
snTrapL4ConnectionRateExceedThreshold = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 72)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4ConnectionRateExceedThreshold.setStatus('current')
snTrapRunningConfigChanged = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 73)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapRunningConfigChanged.setStatus('current')
snTrapStartupConfigChanged = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 74)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStartupConfigChanged.setStatus('current')
snTrapUserLogin = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 75)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapUserLogin.setStatus('current')
snTrapUserLogout = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 76)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapUserLogout.setStatus('current')
snTrapPortSecurityViolation = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 77)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPortSecurityViolation.setStatus('current')
snTrapPortSecurityShutdown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 78)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPortSecurityShutdown.setStatus('current')
snTrapMrpStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 79)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMrpStateChange.setStatus('current')
snTrapMrpCamError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 80)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMrpCamError.setStatus('current')
snTrapChasPwrSupplyOK = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 81)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyDescription"))
if mibBuilder.loadTexts: snTrapChasPwrSupplyOK.setStatus('current')
snTrapVrrpeIfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 82)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapVrrpeIfStateChange.setStatus('current')
snTrapVsrpIfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 83)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapVsrpIfStateChange.setStatus('current')
snTrapSrcIpAddressViolation = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 84)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSrcIpAddressViolation.setStatus('current')
snTrapMacAuthEnable = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 85)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacAuthEnable.setStatus('current')
snTrapMacAuthDisable = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 86)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacAuthDisable.setStatus('current')
snTrapMacAuthMACAccepted = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 87)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacAuthMACAccepted.setStatus('current')
snTrapMacAuthMACRejected = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 88)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacAuthMACRejected.setStatus('current')
snTrapMacAuthPortDisabled = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 89)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacAuthPortDisabled.setStatus('current')
snTrapClientLoginReject = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 110)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapClientLoginReject.setStatus('current')
snTrapLocalUserConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 111)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLocalUserConfigChange.setStatus('current')
snTrapVlanConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 112)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapVlanConfigChange.setStatus('current')
snTrapAclConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 113)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapAclConfigChange.setStatus('current')
snTrapMacFilterConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 114)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacFilterConfigChange.setStatus('current')
snTrapSNMPConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 115)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSNMPConfigChange.setStatus('current')
snTrapSyslogConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 116)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSyslogConfigChange.setStatus('current')
snTrapPasswordConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 117)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPasswordConfigChange.setStatus('current')
snTrapServerStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 118)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapServerStatusChange.setStatus('current')
snTrapL4RealServerPortMaxConnectionLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 119)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapL4RealServerPortMaxConnectionLimitReached.setStatus('current')
snTrapL4LinkDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 120)).setObjects(("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapLinkName"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4LinkVirtualInterface"))
if mibBuilder.loadTexts: snTrapL4LinkDown.setStatus('current')
snTrapL4LinkUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 121)).setObjects(("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4TrapLinkName"), ("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4LinkVirtualInterface"))
if mibBuilder.loadTexts: snTrapL4LinkUp.setStatus('current')
snTrapPortPriorityChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 122)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPortPriorityChange.setStatus('current')
snTrapAutoPortDisableTrigger = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 123)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapAutoPortDisableTrigger.setStatus('current')
snTrapAutoPortDisableRelease = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 124)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapAutoPortDisableRelease.setStatus('current')
snTrapPnPStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 125)).setObjects(("FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgPnPStatus"), ("FOUNDRY-SN-WIRELESS-GROUP-MIB", "wgPnPStatus"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPnPStatusChange.setStatus('current')
snTrapWirelessIsrpPeerStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 126)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapWirelessIsrpPeerStateChange.setStatus('current')
snTrapWirelessStationStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 127)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapWirelessStationStateChange.setStatus('current')
snTrapWirelessStationRoamingEventTriggered = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 128)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapWirelessStationRoamingEventTriggered.setStatus('current')
snTrapWirelessSappStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 129)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapWirelessSappStateChange.setStatus('current')
snTrapExternalPowerConnectionStatus = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 130)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapExternalPowerConnectionStatus.setStatus('current')
snTrapDot1xSecurityViolation = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 131)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1xSecurityViolation.setStatus('current')
snTrapDot1xPortLinkChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 132)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1xPortLinkChange.setStatus('current')
snTrapDot1xPortControlChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 133)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1xPortControlChange.setStatus('current')
snTrapDot1xVlanIdChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 134)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1xVlanIdChange.setStatus('current')
snTrapDot1xFilterSetupFailure = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 135)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1xFilterSetupFailure.setStatus('current')
snTrapDot1xError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 136)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1xError.setStatus('current')
snTrapPortConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 137)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPortConfigChange.setStatus('current')
snTrapMacAuthVlanIdChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 138)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacAuthVlanIdChange.setStatus('current')
snTrapWebAuthEnabled = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 139)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapWebAuthEnabled.setStatus('current')
snTrapWebAuthDisabled = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 140)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapWebAuthDisabled.setStatus('current')
snTrapIpConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 141)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapIpConfigChange.setStatus('current')
snTrapIpv6ConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 142)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapIpv6ConfigChange.setStatus('current')
snTrapMacAuthRadiusTimeout = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 143)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacAuthRadiusTimeout.setStatus('current')
snTrapDot1xRadiusTimeout = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 144)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1xRadiusTimeout.setStatus('current')
snTrapUDLDLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 145)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapUDLDLinkDown.setStatus('current')
snTrapUDLDLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 146)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapUDLDLinkUp.setStatus('current')
snTrapMacBasedVlanEnabled = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 147)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacBasedVlanEnabled.setStatus('current')
snTrapMacBasedVlanDisabled = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 148)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacBasedVlanDisabled.setStatus('current')
snTrapChasFanNormal = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 149)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasFanIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasFanDescription"))
if mibBuilder.loadTexts: snTrapChasFanNormal.setStatus('current')
snTrapStpRootGuardDetect = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 150)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-SWITCH-GROUP-MIB", "snVLanByPortCfgVLanId"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStpRootGuardDetect.setStatus('current')
snTrapStpRootGuardExpire = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 151)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-SWITCH-GROUP-MIB", "snVLanByPortCfgVLanId"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStpRootGuardExpire.setStatus('current')
snTrapStpBPDUGuardDetect = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 152)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-SWITCH-GROUP-MIB", "snVLanByPortCfgVLanId"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStpBPDUGuardDetect.setStatus('current')
snTrapMstpBPDUGuardDetect = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 153)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMstpBPDUGuardDetect.setStatus('current')
snTrapErrorDisableAction = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 154)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapErrorDisableAction.setStatus('current')
snTrapLACPLinkStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 155)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLACPLinkStateChange.setStatus('current')
snTrapOpticalMonitoringNotFoundryOptics = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 156)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapOpticalMonitoringNotFoundryOptics.setStatus('current')
snTrapOpticalMonitoringFoundryOpticsNotCapable = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 157)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapOpticalMonitoringFoundryOpticsNotCapable.setStatus('current')
snTrapStaticMulticastMacConfigAdd = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 158)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStaticMulticastMacConfigAdd.setStatus('current')
snTrapStaticMulticastMacConfigRemove = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 159)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStaticMulticastMacConfigRemove.setStatus('current')
snTrapSTPBPDUGuardExpire = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 160)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-SWITCH-GROUP-MIB", "snVLanByPortCfgVLanId"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSTPBPDUGuardExpire.setStatus('current')
snTrapPortLoopDetection = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 161)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-SWITCH-GROUP-MIB", "snVLanByPortCfgVLanId"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPortLoopDetection.setStatus('current')
snTrapNoFreeTcamEntry = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 162)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapNoFreeTcamEntry.setStatus('current')
snTrapStackingMasterElected = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 163)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingMasterElected.setStatus('current')
snTrapStackingUnitAdded = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 164)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingUnitAdded.setStatus('current')
snTrapStackingUnitDeleted = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 165)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingUnitDeleted.setStatus('current')
snTrapStackingChasPwrSupplyOK = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 166)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingChasPwrSupplyOK.setStatus('current')
snTrapStackingChasPwrSupplyFailed = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 167)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingChasPwrSupplyFailed.setStatus('current')
snTrapStackingChasFanNormal = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 168)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasFanIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasFanDescription"))
if mibBuilder.loadTexts: snTrapStackingChasFanNormal.setStatus('current')
snTrapStackingChasFanFailed = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 169)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasFanIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasFanDescription"))
if mibBuilder.loadTexts: snTrapStackingChasFanFailed.setStatus('current')
snTrapStackingManagementMACChanged = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 170)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingManagementMACChanged.setStatus('current')
snTrapStackingTemperatureWarning = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 171)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingTemperatureWarning.setStatus('current')
snTrapIfIndexAssignmentChanged = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 172)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapIfIndexAssignmentChanged.setStatus('current')
snTrapPBRConfigChanged = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 173)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPBRConfigChanged.setStatus('current')
snTrapChasPwrSupplyRPSAdd = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 174)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyDescription"))
if mibBuilder.loadTexts: snTrapChasPwrSupplyRPSAdd.setStatus('current')
snTrapChasPwrSupplyRPSRemove = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 175)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasPwrSupplyDescription"))
if mibBuilder.loadTexts: snTrapChasPwrSupplyRPSRemove.setStatus('current')
snTrapModuleStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 176)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgentBrdModuleStatus"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapModuleStatusChange.setStatus('current')
snTrapChasHighSpeedFansNeeded = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 177)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapChasHighSpeedFansNeeded.setStatus('current')
snTrapSysmaxReverted = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 178)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSysmaxReverted.setStatus('current')
snTrapSysmaxLeftLowMem = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 179)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSysmaxLeftLowMem.setStatus('current')
snTrapSysMemoryLowThreshold = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 180)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSysMemoryLowThreshold.setStatus('current')
snTrapSysMemoryOutThreshold = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 181)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSysMemoryOutThreshold.setStatus('current')
snTrapLinkOAMLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 182)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLinkOAMLinkDown.setStatus('current')
snTrapLinkOAMLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 183)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLinkOAMLinkUp.setStatus('current')
snTrapI2CAccessLog = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 184)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapI2CAccessLog.setStatus('current')
snTrapLinkOAMLoopbackEntered = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 185)).setObjects(("IF-MIB", "ifIndex"), ("DOT3-OAM-MIB", "dot3OamLoopbackStatus"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLinkOAMLoopbackEntered.setStatus('current')
snTrapLinkOAMLoopbackCleared = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 186)).setObjects(("IF-MIB", "ifIndex"), ("DOT3-OAM-MIB", "dot3OamLoopbackStatus"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLinkOAMLoopbackCleared.setStatus('current')
snTrapLicenseAdded = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 187)).setObjects(("FOUNDRY-SN-AGENT-MIB", "fdryLicenseType"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLicenseAdded.setStatus('current')
snTrapLicenseRemoved = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 188)).setObjects(("FOUNDRY-SN-AGENT-MIB", "fdryLicenseType"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLicenseRemoved.setStatus('current')
snTrapLicenseExpires = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 189)).setObjects(("FOUNDRY-SN-AGENT-MIB", "fdryLicenseType"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLicenseExpires.setStatus('current')
snTrapLicenseExpired = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 190)).setObjects(("FOUNDRY-SN-AGENT-MIB", "fdryLicenseType"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLicenseExpired.setStatus('current')
snTrapUDLDCrcFailureDetected = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 191)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapUDLDCrcFailureDetected.setStatus('current')
snTrapDot1agCfmRemoteMEPAgeOut = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 192)).setObjects(("IEEE8021-CFM-MIB", "dot1agCfmMdName"), ("IEEE8021-CFM-MIB", "dot1agCfmMaNetName"), ("IEEE8021-CFM-MIB", "dot1agCfmMepDbRMepState"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1agCfmRemoteMEPAgeOut.setStatus('current')
snTrapDot1agCfmRemoteMEPUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 193)).setObjects(("IEEE8021-CFM-MIB", "dot1agCfmMdName"), ("IEEE8021-CFM-MIB", "dot1agCfmMaNetName"), ("IEEE8021-CFM-MIB", "dot1agCfmMepDbRMepState"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1agCfmRemoteMEPUp.setStatus('current')
snTrapDot1agCfmDomainCrossConnection = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 194)).setObjects(("IEEE8021-CFM-MIB", "dot1agCfmMdName"), ("IEEE8021-CFM-MIB", "dot1agCfmMaNetName"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1agCfmDomainCrossConnection.setStatus('current')
snTrapDot1agCfmDuplicateMEPId = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 195)).setObjects(("IEEE8021-CFM-MIB", "dot1agCfmMdName"), ("IEEE8021-CFM-MIB", "dot1agCfmMaNetName"), ("IEEE8021-CFM-MIB", "dot1agCfmMepDbRMepState"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapDot1agCfmDuplicateMEPId.setStatus('current')
snTrapStackingStandbyElected = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 196)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasUnitIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingStandbyElected.setStatus('current')
snTrapMacMoveThresholdRate = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 197)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacMoveThresholdRate.setStatus('current')
snTrapMacMoveIntervalHistory = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 198)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacMoveIntervalHistory.setStatus('current')
snTrapStackingMixedModeChanged = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 199)).setObjects(("FOUNDRY-SN-STACKING-MIB", "snStackingGlobalMixedMode"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingMixedModeChanged.setStatus('current')
snTrapSysMonErrorDetect = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 200)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSysMonErrorDetect.setStatus('current')
snTrapMacNotification = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 201)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacNotification.setStatus('current')
snTrapMacEventBufferFull = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 202)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapMacEventBufferFull.setStatus('current')
snTrapStpDesignatedGuardDetect = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 203)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-SWITCH-GROUP-MIB", "snVLanByPortCfgVLanId"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStpDesignatedGuardDetect.setStatus('current')
snTrapStpDesignatedGuardDisable = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 204)).setObjects(("IF-MIB", "ifIndex"), ("FOUNDRY-SN-SWITCH-GROUP-MIB", "snVLanByPortCfgVLanId"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStpDesignatedGuardDisable.setStatus('current')
snTrapLicenseNNLLTrialNotify = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 205)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLicenseNNLLTrialNotify.setStatus('current')
snTrapLicenseNNLLTrialExpiry = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 206)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLicenseNNLLTrialExpiry.setStatus('current')
snTrapLicenseNNLLNonCompliant = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 207)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLicenseNNLLNonCompliant.setStatus('current')
snTrapLicenseNNLLDelete = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 208)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLicenseNNLLDelete.setStatus('current')
snTrapStackingShowStackConnect = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 209)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapStackingShowStackConnect.setStatus('current')
snTrapChasFanOK = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1000)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snChasFanIndex"), ("FOUNDRY-SN-AGENT-MIB", "snChasFanDescription"))
if mibBuilder.loadTexts: snTrapChasFanOK.setStatus('current')
snTrapTemperatureOK = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1001)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTemperatureOK.setStatus('current')
snTrapCAMOverflow = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1002)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapCAMOverflow.setStatus('current')
snTrapOpticalMonitoringWarning = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1003)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapOpticalMonitoringWarning.setStatus('current')
snTrapOpticalMonitoringAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1004)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapOpticalMonitoringAlarm.setStatus('current')
snTrapOpticalMonitoringError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1005)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapOpticalMonitoringError.setStatus('current')
snTrapPosMonitoringWarning = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1006)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPosMonitoringWarning.setStatus('current')
snTrapPosMonitoringAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1007)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPosMonitoringAlarm.setStatus('current')
snTrapPosMonitoringError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1008)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapPosMonitoringError.setStatus('current')
snTrapXfpSfpIncompatibleOptics = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1009)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapXfpSfpIncompatibleOptics.setStatus('current')
snTrapTMLoggingStart = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1015)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTMLoggingStart.setStatus('current')
snTrapTMLoggingStop = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1016)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTMLoggingStop.setStatus('current')
snTrapTMLoggingRestart = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1017)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTMLoggingRestart.setStatus('current')
snTrapXfpSfpNotFoundryOptics = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1018)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapXfpSfpNotFoundryOptics.setStatus('current')
snTrapTMRecoverySlotReset = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1019)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTMRecoverySlotReset.setStatus('current')
snTrapTMEgressDataError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1020)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTMEgressDataError.setStatus('current')
snTrapSFMLoggingRestart = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1021)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSFMLoggingRestart.setStatus('current')
snTrapNotEnoughFapLinks = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1035)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapNotEnoughFapLinks.setStatus('current')
snTrapSFMLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1100)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSFMLinkDown.setStatus('current')
snTrapSFMLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1101)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSFMLinkUp.setStatus('current')
snTrapSFMAccessError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1102)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSFMAccessError.setStatus('current')
snTrapSFMStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1103)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgentBrdModuleStatus"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSFMStatusChange.setStatus('current')
snTrapLPFabricStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1104)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgentBrdModuleStatus"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLPFabricStatusChange.setStatus('current')
snTrapModuleNPLockupIndication = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1105)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"), ("BROCADE-NP-TM-STATS-MIB", "brcdNPIndex"), ("BROCADE-NP-TM-STATS-MIB", "brcdNPLockupRecoveryCount"))
if mibBuilder.loadTexts: snTrapModuleNPLockupIndication.setStatus('current')
snTrapModuleNPLockupThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1106)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"))
if mibBuilder.loadTexts: snTrapModuleNPLockupThresholdExceeded.setStatus('current')
snTrapSFMAutoTuneStart = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1107)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSFMAutoTuneStart.setStatus('current')
snTrapSFMAutoTuneFails = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1108)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSFMAutoTuneFails.setStatus('current')
snTrapSFMAutoTuneComplete = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1109)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSFMAutoTuneComplete.setStatus('current')
snTrapTMAutoTuneStart = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1110)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTMAutoTuneStart.setStatus('current')
snTrapTMAutoTuneFails = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1111)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTMAutoTuneFails.setStatus('current')
snTrapTMAutoTuneComplete = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1112)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTMAutoTuneComplete.setStatus('current')
snTrapNPILKNCRCError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1113)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapNPILKNCRCError.setStatus('current')
snTrapARPMACMovement = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1114)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapARPMACMovement.setStatus('current')
snTrapChassisFanSpeedLow = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1200)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapChassisFanSpeedLow.setStatus('current')
snTrapChassisFanSpeedMedium = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1201)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapChassisFanSpeedMedium.setStatus('current')
snTrapChassisFanSpeedMedHigh = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1202)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapChassisFanSpeedMedHigh.setStatus('current')
snTrapChassisFanSpeedHigh = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1203)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapChassisFanSpeedHigh.setStatus('current')
snTrapFIPSModeEnable = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1207)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapFIPSModeEnable.setStatus('current')
snTrapFIPSModeDisable = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1208)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapFIPSModeDisable.setStatus('current')
snTrapFIPSHostZeroized = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1209)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapFIPSHostZeroized.setStatus('current')
snTrapFIPSSharedSecretZeroized = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1210)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapFIPSSharedSecretZeroized.setStatus('current')
snTrapFIPSPOSTStatus = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1211)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapFIPSPOSTStatus.setStatus('current')
snTrapFIPSCryptoModuleFailure = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1212)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapFIPSCryptoModuleFailure.setStatus('current')
snTrapLicense2PortNotSupported = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1213)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLicense2PortNotSupported.setStatus('current')
snTrapOpticalMonitoringOK = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1214)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: snTrapOpticalMonitoringOK.setStatus('current')
snTrapSFMAccessOK = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1215)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSFMAccessOK.setStatus('current')
snTrapUpgradeSingleCmdStart = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1216))
if mibBuilder.loadTexts: snTrapUpgradeSingleCmdStart.setStatus('current')
snTrapUpgradeSingleCmdDone = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1217)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapUpgradeSingleCmdDone.setStatus('current')
snTrapAutoUpgradeStart = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1218)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"))
if mibBuilder.loadTexts: snTrapAutoUpgradeStart.setStatus('current')
snTrapAutoUpgradeDone = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1219)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapAutoUpgradeDone.setStatus('current')
snTrapTcamParityError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1220)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapTcamParityError.setStatus('current')
snTrapLPResetOnTcamError = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1221)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgentBrdIndex"), ("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapLPResetOnTcamError.setStatus('current')
snTrapSTPRootGuardViolation = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1230)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapSTPRootGuardViolation.setStatus('current')
snTrapRSTPRootGuardViolation = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1231)).setObjects(("FOUNDRY-SN-AGENT-MIB", "snAgGblTrapMessage"))
if mibBuilder.loadTexts: snTrapRSTPRootGuardViolation.setStatus('current')
mibBuilder.exportSymbols("FOUNDRY-SN-NOTIFICATION-MIB", snTrapMgmtModuleRedunStateChange=snTrapMgmtModuleRedunStateChange, snTrapMacBasedVlanEnabled=snTrapMacBasedVlanEnabled, snTrapOpticalMonitoringNotFoundryOptics=snTrapOpticalMonitoringNotFoundryOptics, snTrapMplsException=snTrapMplsException, snTrapWirelessStationRoamingEventTriggered=snTrapWirelessStationRoamingEventTriggered, snTrapStackingTemperatureWarning=snTrapStackingTemperatureWarning, snTrapTMAutoTuneComplete=snTrapTMAutoTuneComplete, snOspfNbrStateChange=snOspfNbrStateChange, snTrapPortLoopDetection=snTrapPortLoopDetection, snOspfIfRxBadPacket=snOspfIfRxBadPacket, snTrapSrcIpAddressViolation=snTrapSrcIpAddressViolation, snTrapXfpSfpIncompatibleOptics=snTrapXfpSfpIncompatibleOptics, snTrapMacAuthVlanIdChange=snTrapMacAuthVlanIdChange, snOspfLsdbApproachingOverflow=snOspfLsdbApproachingOverflow, snTrapMacAuthMACRejected=snTrapMacAuthMACRejected, snTrapChasFanFailed=snTrapChasFanFailed, snTrapChasHighSpeedFansNeeded=snTrapChasHighSpeedFansNeeded, snTrapUserLogout=snTrapUserLogout, snTrapSFMAccessOK=snTrapSFMAccessOK, snTrapIcmpLocalExceedBurst=snTrapIcmpLocalExceedBurst, snTrapClientLoginReject=snTrapClientLoginReject, snTrapMacMoveThresholdRate=snTrapMacMoveThresholdRate, snTrapOpticalMonitoringFoundryOpticsNotCapable=snTrapOpticalMonitoringFoundryOpticsNotCapable, snTrapSFMLinkDown=snTrapSFMLinkDown, snTrapSyslogConfigChange=snTrapSyslogConfigChange, snTrapFIPSModeDisable=snTrapFIPSModeDisable, snTrapMacAuthRadiusTimeout=snTrapMacAuthRadiusTimeout, snTrapWebAuthEnabled=snTrapWebAuthEnabled, snTrapTemperatureOK=snTrapTemperatureOK, snTrapModuleStatusChange=snTrapModuleStatusChange, snTrapSFMAccessError=snTrapSFMAccessError, snTrapDot1xPortLinkChange=snTrapDot1xPortLinkChange, snTrapSFMAutoTuneStart=snTrapSFMAutoTuneStart, snTrapErrorDisableAction=snTrapErrorDisableAction, snTrapDot1agCfmDomainCrossConnection=snTrapDot1agCfmDomainCrossConnection, snTrapOspfVirtIfStateChange=snTrapOspfVirtIfStateChange, snTrapIfIndexAssignmentChanged=snTrapIfIndexAssignmentChanged, snTrapL4GslbHealthCheckIpDown=snTrapL4GslbHealthCheckIpDown, snTrapStartupConfigChanged=snTrapStartupConfigChanged, snTrapLinkOAMLoopbackEntered=snTrapLinkOAMLoopbackEntered, snTrapMacAuthMACAccepted=snTrapMacAuthMACAccepted, snTrapOpticalMonitoringWarning=snTrapOpticalMonitoringWarning, snTrapL4GslbRemoteDown=snTrapL4GslbRemoteDown, snTrapMacFilterDeny=snTrapMacFilterDeny, snTrapDot1xPortControlChange=snTrapDot1xPortControlChange, snTrapLinkOAMLinkDown=snTrapLinkOAMLinkDown, snTrapIcmpTransitExceedBurst=snTrapIcmpTransitExceedBurst, snTrapMrpStateChange=snTrapMrpStateChange, snTrapSFMAutoTuneComplete=snTrapSFMAutoTuneComplete, snTrapLicenseAdded=snTrapLicenseAdded, snTrapStpRootGuardExpire=snTrapStpRootGuardExpire, snTrapTcpTransitExceedBurst=snTrapTcpTransitExceedBurst, snTrapModuleInserted=snTrapModuleInserted, snTrapLicenseExpired=snTrapLicenseExpired, snTrapTMLoggingStart=snTrapTMLoggingStart, snTrapTMRecoverySlotReset=snTrapTMRecoverySlotReset, snTrapStackingChasPwrSupplyFailed=snTrapStackingChasPwrSupplyFailed, snTrapOpticalMonitoringAlarm=snTrapOpticalMonitoringAlarm, snTrapDuplicateIp=snTrapDuplicateIp, snTrapL4LinkDown=snTrapL4LinkDown, snTrapStackingChasFanFailed=snTrapStackingChasFanFailed, snTrapBgpPeerUp=snTrapBgpPeerUp, snTrapFIPSPOSTStatus=snTrapFIPSPOSTStatus, snTrapDot1xVlanIdChange=snTrapDot1xVlanIdChange, snTrapSmcBpDrop=snTrapSmcBpDrop, snTrapChassisFanSpeedHigh=snTrapChassisFanSpeedHigh, snTrapVrrpeIfStateChange=snTrapVrrpeIfStateChange, snTrapStpRootGuardDetect=snTrapStpRootGuardDetect, snTrapServerStatusChange=snTrapServerStatusChange, snTrapL4LinkUp=snTrapL4LinkUp, snTrapMacAuthPortDisabled=snTrapMacAuthPortDisabled, snTrapSysmaxReverted=snTrapSysmaxReverted, snTrapSTPRootGuardViolation=snTrapSTPRootGuardViolation, snTrapDot1xFilterSetupFailure=snTrapDot1xFilterSetupFailure, snTrapOpticalMonitoringError=snTrapOpticalMonitoringError, snTrapLinkOAMLoopbackCleared=snTrapLinkOAMLoopbackCleared, snTrapFIPSCryptoModuleFailure=snTrapFIPSCryptoModuleFailure, snTrapMrpCamError=snTrapMrpCamError, snTrapVsrpIfStateChange=snTrapVsrpIfStateChange, snTrapL4ConnectionRateExceedMax=snTrapL4ConnectionRateExceedMax, snTrapWirelessIsrpPeerStateChange=snTrapWirelessIsrpPeerStateChange, snTrapUDLDLinkDown=snTrapUDLDLinkDown, snTrapL4RealServerResponseTimeUpperLimit=snTrapL4RealServerResponseTimeUpperLimit, snTrapChasPwrSupply=snTrapChasPwrSupply, snTrapL4TcpAttackRateExceedMax=snTrapL4TcpAttackRateExceedMax, snTrapTMLoggingStop=snTrapTMLoggingStop, snTrapSmcDmaDrop=snTrapSmcDmaDrop, snTrapDot1xError=snTrapDot1xError, snTrapL4RealServerPortUp=snTrapL4RealServerPortUp, snTrapL4ConnectionRateExceedThreshold=snTrapL4ConnectionRateExceedThreshold, snTrapAclConfigChange=snTrapAclConfigChange, snTrapLicenseExpires=snTrapLicenseExpires, snTrapStackingStandbyElected=snTrapStackingStandbyElected, snTrapRunningConfigChanged=snTrapRunningConfigChanged, snTrapTcamParityError=snTrapTcamParityError, snTrapBgpPeerDown=snTrapBgpPeerDown, snTrapVlanConfigChange=snTrapVlanConfigChange, snTrapLocalUserConfigChange=snTrapLocalUserConfigChange, snTrapIpConfigChange=snTrapIpConfigChange, snTrapPasswordConfigChange=snTrapPasswordConfigChange, snOspfVirtIfAuthFailure=snOspfVirtIfAuthFailure, snTrapSTPBPDUGuardExpire=snTrapSTPBPDUGuardExpire, snTrapLicenseNNLLTrialNotify=snTrapLicenseNNLLTrialNotify, snTrapPosMonitoringWarning=snTrapPosMonitoringWarning, snTrapLPFabricStatusChange=snTrapLPFabricStatusChange, snTrapFIPSModeEnable=snTrapFIPSModeEnable, snTrapL4RealServerUp=snTrapL4RealServerUp, snTrapSFMLoggingRestart=snTrapSFMLoggingRestart, snTrapLicenseNNLLNonCompliant=snTrapLicenseNNLLNonCompliant, ospfVirtIfTxRetransmit=ospfVirtIfTxRetransmit, snTrapTMLoggingRestart=snTrapTMLoggingRestart, snTrapL4MaxSessionLimitReached=snTrapL4MaxSessionLimitReached, snTrapL4RealServerPortMaxConnectionLimitReached=snTrapL4RealServerPortMaxConnectionLimitReached, snTrapStackingChasPwrSupplyOK=snTrapStackingChasPwrSupplyOK, snTrapL4BecomeStandby=snTrapL4BecomeStandby, snTrapStackingShowStackConnect=snTrapStackingShowStackConnect, snOspfMaxAgeLsa=snOspfMaxAgeLsa, snTrapMstpBPDUGuardDetect=snTrapMstpBPDUGuardDetect, snTrapStackingUnitAdded=snTrapStackingUnitAdded, snTrapL4FirewallPathDown=snTrapL4FirewallPathDown, snTrapBmWriteSeqDrop=snTrapBmWriteSeqDrop, snTrapModuleNPLockupIndication=snTrapModuleNPLockupIndication, snTrapOpticalMonitoringOK=snTrapOpticalMonitoringOK, snTrapPosMonitoringError=snTrapPosMonitoringError, snTrapSysMemoryLowThreshold=snTrapSysMemoryLowThreshold, snTrapStpDesignatedGuardDetect=snTrapStpDesignatedGuardDetect, snTrapPBRConfigChanged=snTrapPBRConfigChanged, snTrapAutoUpgradeDone=snTrapAutoUpgradeDone, snTrapFIPSSharedSecretZeroized=snTrapFIPSSharedSecretZeroized, snTrapMplsDeveloper=snTrapMplsDeveloper, snTrapStackingManagementMACChanged=snTrapStackingManagementMACChanged, snTrapMacBasedVlanDisabled=snTrapMacBasedVlanDisabled, snTrapPnPStatusChange=snTrapPnPStatusChange, snTrapNoBmFreeQueue=snTrapNoBmFreeQueue, snTrapPortSecurityViolation=snTrapPortSecurityViolation, snTrapSNMPConfigChange=snTrapSNMPConfigChange, snTrapModuleNPLockupThresholdExceeded=snTrapModuleNPLockupThresholdExceeded, snTrapChasPwrSupplyRPSAdd=snTrapChasPwrSupplyRPSAdd, snTrapExternalPowerConnectionStatus=snTrapExternalPowerConnectionStatus, snTrapTMEgressDataError=snTrapTMEgressDataError, snTrapL4ContentVerification=snTrapL4ContentVerification, PYSNMP_MODULE_ID=snTraps, snTrapL4GslbHealthCheckIpPortDown=snTrapL4GslbHealthCheckIpPortDown, snTrapL4GslbRemoteControllerUp=snTrapL4GslbRemoteControllerUp, snTrapMplsProblem=snTrapMplsProblem, snTrapPortSecurityShutdown=snTrapPortSecurityShutdown, snTrapDot1agCfmRemoteMEPAgeOut=snTrapDot1agCfmRemoteMEPAgeOut, snTrapDot1agCfmRemoteMEPUp=snTrapDot1agCfmRemoteMEPUp, snTrapMacNotification=snTrapMacNotification, snTrapL4RealServerPortDown=snTrapL4RealServerPortDown, snTrapSysMemoryOutThreshold=snTrapSysMemoryOutThreshold, snOspfVirtIfRxBadPacket=snOspfVirtIfRxBadPacket, snTrapMacAuthDisable=snTrapMacAuthDisable, snOspfIfConfigError=snOspfIfConfigError, snTrapRSTPRootGuardViolation=snTrapRSTPRootGuardViolation, snTrapTMAutoTuneStart=snTrapTMAutoTuneStart, snTrapSFMAutoTuneFails=snTrapSFMAutoTuneFails, snTrapLACPLinkStateChange=snTrapLACPLinkStateChange, snTrapL4BecomeActive=snTrapL4BecomeActive, snTrapLicenseNNLLDelete=snTrapLicenseNNLLDelete, snTrapUpgradeSingleCmdDone=snTrapUpgradeSingleCmdDone, snTrapModuleRemoved=snTrapModuleRemoved, snTrapPosMonitoringAlarm=snTrapPosMonitoringAlarm, snTrapAutoUpgradeStart=snTrapAutoUpgradeStart, snTrapStackingMixedModeChanged=snTrapStackingMixedModeChanged, snTrapL4GslbHealthCheckIpPortUp=snTrapL4GslbHealthCheckIpPortUp, snTrapWirelessStationStateChange=snTrapWirelessStationStateChange, snTrapARPMACMovement=snTrapARPMACMovement, snTrapL4TcpAttackRateExceedThreshold=snTrapL4TcpAttackRateExceedThreshold, snTrapStackingUnitDeleted=snTrapStackingUnitDeleted, snTrapStpDesignatedGuardDisable=snTrapStpDesignatedGuardDisable, snTraps=snTraps, snTrapOspfIfStateChange=snTrapOspfIfStateChange, snOspfTxRetransmit=snOspfTxRetransmit, snTrapIpv6ConfigChange=snTrapIpv6ConfigChange, snTrapCAMOverflow=snTrapCAMOverflow, snTrapUDLDCrcFailureDetected=snTrapUDLDCrcFailureDetected, snTrapDot1xRadiusTimeout=snTrapDot1xRadiusTimeout, snOspfVirtIfConfigError=snOspfVirtIfConfigError, snTrapChasPwrSupplyRPSRemove=snTrapChasPwrSupplyRPSRemove, snTrapAutoPortDisableRelease=snTrapAutoPortDisableRelease, snTrapMacFilterConfigChange=snTrapMacFilterConfigChange, snTrapSysmaxLeftLowMem=snTrapSysmaxLeftLowMem, snTrapLicenseRemoved=snTrapLicenseRemoved, snTrapSysMonErrorDetect=snTrapSysMonErrorDetect, snTrapFIPSHostZeroized=snTrapFIPSHostZeroized, snTrapLicense2PortNotSupported=snTrapLicense2PortNotSupported, snTrapMacAuthEnable=snTrapMacAuthEnable, snTrapTMAutoTuneFails=snTrapTMAutoTuneFails, snTrapMplsAudit=snTrapMplsAudit, snTrapL4GslbRemoteControllerDown=snTrapL4GslbRemoteControllerDown, snTrapL4FirewallPathUp=snTrapL4FirewallPathUp, snTrapDot1agCfmDuplicateMEPId=snTrapDot1agCfmDuplicateMEPId, snTrapNotEnoughFapLinks=snTrapNotEnoughFapLinks, snTrapTcpLocalExceedBurst=snTrapTcpLocalExceedBurst, snTrapL4RealServerDown=snTrapL4RealServerDown, snOspfVirtNbrStateChange=snOspfVirtNbrStateChange, snTrapL4RealServerResponseTimeLowerLimit=snTrapL4RealServerResponseTimeLowerLimit, snTrapDot1xSecurityViolation=snTrapDot1xSecurityViolation, snTrapStpBPDUGuardDetect=snTrapStpBPDUGuardDetect, snTrapStackingMasterElected=snTrapStackingMasterElected, snTrapLinkOAMLinkUp=snTrapLinkOAMLinkUp, snTrapL4TcpSynLimitReached=snTrapL4TcpSynLimitReached, snTrapVrrpIfStateChange=snTrapVrrpIfStateChange, snTrapWirelessSappStateChange=snTrapWirelessSappStateChange, snTrapPortPriorityChange=snTrapPortPriorityChange, snTrapXfpSfpNotFoundryOptics=snTrapXfpSfpNotFoundryOptics, snTrapChassisFanSpeedMedHigh=snTrapChassisFanSpeedMedHigh, snTrapSFMLinkUp=snTrapSFMLinkUp, snTrapTemperatureWarning=snTrapTemperatureWarning, snTrapStackingChasFanNormal=snTrapStackingChasFanNormal, snTrapI2CAccessLog=snTrapI2CAccessLog, snTrapNPILKNCRCError=snTrapNPILKNCRCError, snTrapNoFreeTcamEntry=snTrapNoFreeTcamEntry, snTrapL4FirewallBecomeActive=snTrapL4FirewallBecomeActive, snTrapLPResetOnTcamError=snTrapLPResetOnTcamError, snTrapChasFanOK=snTrapChasFanOK, snTrapL4RealServerMaxConnectionLimitReached=snTrapL4RealServerMaxConnectionLimitReached, snTrapWebAuthDisabled=snTrapWebAuthDisabled, snTrapUserLogin=snTrapUserLogin, snTrapUpgradeSingleCmdStart=snTrapUpgradeSingleCmdStart, snTrapStaticMulticastMacConfigRemove=snTrapStaticMulticastMacConfigRemove, snTrapPortConfigChange=snTrapPortConfigChange, snTrapMacEventBufferFull=snTrapMacEventBufferFull, snTrapSFMStatusChange=snTrapSFMStatusChange, snTrapAutoPortDisableTrigger=snTrapAutoPortDisableTrigger, snTrapLicenseNNLLTrialExpiry=snTrapLicenseNNLLTrialExpiry, snTrapFsrpIfStateChange=snTrapFsrpIfStateChange, snTrapL4GslbHealthCheckIpUp=snTrapL4GslbHealthCheckIpUp, snTrapL4GslbRemoteUp=snTrapL4GslbRemoteUp, snTrapChasPwrSupplyFailed=snTrapChasPwrSupplyFailed, snTrapChasFanNormal=snTrapChasFanNormal, snTrapMacMoveIntervalHistory=snTrapMacMoveIntervalHistory, snTrapStaticMulticastMacConfigAdd=snTrapStaticMulticastMacConfigAdd, snTrapChassisFanSpeedMedium=snTrapChassisFanSpeedMedium, snTrapLockedAddressViolation=snTrapLockedAddressViolation, snTrapAccessListDeny=snTrapAccessListDeny, snTrapUDLDLinkUp=snTrapUDLDLinkUp, snOspfIfAuthFailure=snOspfIfAuthFailure, snOspfLsdbOverflow=snOspfLsdbOverflow, snTrapChasPwrSupplyOK=snTrapChasPwrSupplyOK, snTrapLockedAddressViolation2=snTrapLockedAddressViolation2, snTrapChassisFanSpeedLow=snTrapChassisFanSpeedLow, snTrapL4FirewallBecomeStandby=snTrapL4FirewallBecomeStandby, snOspfOriginateLsa=snOspfOriginateLsa)
