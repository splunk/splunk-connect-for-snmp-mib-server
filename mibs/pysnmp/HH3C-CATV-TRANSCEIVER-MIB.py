#
# PySNMP MIB module HH3C-CATV-TRANSCEIVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-CATV-TRANSCEIVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:12:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Gauge32, ObjectIdentity, Counter32, Bits, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Unsigned32, TimeTicks, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "ObjectIdentity", "Counter32", "Bits", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Unsigned32", "TimeTicks", "ModuleIdentity", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cCATVTransceiver = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 94))
if mibBuilder.loadTexts: hh3cCATVTransceiver.setLastUpdated('200807251008Z')
if mibBuilder.loadTexts: hh3cCATVTransceiver.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cCATVTransStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 94, 1))
hh3cCATVTransStatusScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 94, 1, 1))
hh3cCATVTransState = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 94, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCATVTransState.setStatus('current')
hh3cCATVTransInputPwr = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 94, 1, 1, 2), Integer32()).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCATVTransInputPwr.setStatus('current')
hh3cCATVTransOutputLevel = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 94, 1, 1, 3), Integer32()).setUnits('dbuv').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCATVTransOutputLevel.setStatus('current')
hh3cCATVTransTemperature = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 94, 1, 1, 4), Integer32()).setUnits('centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCATVTransTemperature.setStatus('current')
hh3cCATVTransceiverMan = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 94, 2))
hh3cCATVTransCtrlScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 94, 2, 1))
hh3cCATVTransInputPwrLowerThr = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 94, 2, 1, 1), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cCATVTransInputPwrLowerThr.setStatus('current')
hh3cCATVTransOutputLvlLowerThr = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 94, 2, 1, 2), Integer32()).setUnits('dbuv').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cCATVTransOutputLvlLowerThr.setStatus('current')
hh3cCATVTransTempratureUpperThr = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 94, 2, 1, 3), Integer32()).setUnits('').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cCATVTransTempratureUpperThr.setStatus('current')
hh3cCATVTansTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 94, 3))
hh3cCATVTransTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 94, 3, 0))
hh3cCATVTransInputPwrTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 94, 3, 0, 1)).setObjects(("HH3C-CATV-TRANSCEIVER-MIB", "hh3cCATVTransInputPwr"))
if mibBuilder.loadTexts: hh3cCATVTransInputPwrTrap.setStatus('current')
hh3cCATVTransInputPwrReTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 94, 3, 0, 2)).setObjects(("HH3C-CATV-TRANSCEIVER-MIB", "hh3cCATVTransInputPwr"))
if mibBuilder.loadTexts: hh3cCATVTransInputPwrReTrap.setStatus('current')
hh3cCATVTransOutputLvlTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 94, 3, 0, 3)).setObjects(("HH3C-CATV-TRANSCEIVER-MIB", "hh3cCATVTransOutputLevel"))
if mibBuilder.loadTexts: hh3cCATVTransOutputLvlTrap.setStatus('current')
hh3cCATVTransOutputLvlReTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 94, 3, 0, 4)).setObjects(("HH3C-CATV-TRANSCEIVER-MIB", "hh3cCATVTransOutputLevel"))
if mibBuilder.loadTexts: hh3cCATVTransOutputLvlReTrap.setStatus('current')
hh3cCATVTransTemperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 94, 3, 0, 5)).setObjects(("HH3C-CATV-TRANSCEIVER-MIB", "hh3cCATVTransTemperature"))
if mibBuilder.loadTexts: hh3cCATVTransTemperatureTrap.setStatus('current')
hh3cCATVTransTemperatureReTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 94, 3, 0, 6)).setObjects(("HH3C-CATV-TRANSCEIVER-MIB", "hh3cCATVTransTemperature"))
if mibBuilder.loadTexts: hh3cCATVTransTemperatureReTrap.setStatus('current')
mibBuilder.exportSymbols("HH3C-CATV-TRANSCEIVER-MIB", hh3cCATVTransInputPwrTrap=hh3cCATVTransInputPwrTrap, hh3cCATVTransceiverMan=hh3cCATVTransceiverMan, hh3cCATVTransOutputLvlTrap=hh3cCATVTransOutputLvlTrap, hh3cCATVTransTemperatureReTrap=hh3cCATVTransTemperatureReTrap, hh3cCATVTransInputPwrLowerThr=hh3cCATVTransInputPwrLowerThr, hh3cCATVTransceiver=hh3cCATVTransceiver, hh3cCATVTransStatus=hh3cCATVTransStatus, hh3cCATVTransStatusScalarObjects=hh3cCATVTransStatusScalarObjects, hh3cCATVTransTempratureUpperThr=hh3cCATVTransTempratureUpperThr, hh3cCATVTransInputPwrReTrap=hh3cCATVTransInputPwrReTrap, hh3cCATVTransTrapPrefix=hh3cCATVTransTrapPrefix, hh3cCATVTransOutputLevel=hh3cCATVTransOutputLevel, hh3cCATVTransTemperature=hh3cCATVTransTemperature, hh3cCATVTransOutputLvlReTrap=hh3cCATVTransOutputLvlReTrap, hh3cCATVTransState=hh3cCATVTransState, PYSNMP_MODULE_ID=hh3cCATVTransceiver, hh3cCATVTransCtrlScalarObjects=hh3cCATVTransCtrlScalarObjects, hh3cCATVTransTemperatureTrap=hh3cCATVTransTemperatureTrap, hh3cCATVTransInputPwr=hh3cCATVTransInputPwr, hh3cCATVTransOutputLvlLowerThr=hh3cCATVTransOutputLvlLowerThr, hh3cCATVTansTrap=hh3cCATVTansTrap)
