#
# PySNMP MIB module HUAWEI-IPFPM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-IPFPM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:33:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, NotificationType, Unsigned32, Counter64, TimeTicks, IpAddress, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, Bits, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "Unsigned32", "Counter64", "TimeTicks", "IpAddress", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "Bits", "Gauge32", "Integer32")
TextualConvention, DisplayString, RowStatus, TruthValue, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue", "TimeStamp")
hwIpfpmMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316))
hwIpfpmMib.setRevisions(('2015-10-13 17:00', '2015-08-14 20:59', '2015-05-07 15:55', '2015-07-09 16:58', '2015-05-06 12:55', '2015-05-05 15:55', '2015-04-16 15:27', '2015-02-06 11:43', '2014-12-29 16:26', '2014-06-26 10:00', '2014-02-12 10:00', '2013-12-17 10:00', '2013-10-25 20:00', '2013-09-25 20:00', '2013-09-23 20:00', '2013-08-18 20:38', '2013-08-14 20:38', '2013-08-05 15:04', '2013-07-04 16:12', '2013-06-22 14:50', '2013-06-04 14:03', '2013-04-27 17:30', '2013-03-27 10:11', '2013-03-26 10:11', '2013-03-13 11:50', '2013-02-18 11:50',))
if mibBuilder.loadTexts: hwIpfpmMib.setLastUpdated('201510131700Z')
if mibBuilder.loadTexts: hwIpfpmMib.setOrganization('Huawei Technologies Co.,Ltd.')
class HWEnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class HWIpfpmStatErrInfo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))
    namedValues = NamedValues(("noErr", 0), ("initialIntervalForward", 1), ("initialIntervalBackward", 2), ("initialIntervalBidirection", 3), ("inconsistInterval", 4), ("asynClock", 5), ("incompleteDataForward", 6), ("incompleteDataBackward", 7), ("incompleteDataBidirection", 8), ("noFlowDataForward", 9), ("noFlowDataBackward", 10), ("noFlowDataBidirection", 11), ("errFlowDataForward", 12), ("errFlowDataBackward", 13), ("errFlowDataBidirection", 14), ("multiDataOneDelay", 15), ("multiDataTwoDelay", 16), ("errDelayVariationForward", 17), ("errDelayVariationBackward", 18), ("errDelayVariationBidirection", 19), ("errMultiSourceSwitch", 20), ("unknownErr", 21))

class HWIpfpmMeasureFlag(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("flagsBit0", 1), ("tosBit3", 2), ("tosBit4", 3), ("tosBit5", 4), ("tosBit6", 5), ("tosBit7", 6))

class HWIpfpmFlowType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("null", 0), ("forward", 1), ("backward", 2), ("bidirectional", 3), ("forwardandbackward", 4))

class HWIpfpmMcpFlowType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("forward", 1), ("backward", 2), ("bidirectional", 3))

class HWIpfpmFlowTlpDirec(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ingress", 1), ("egress", 2))

class HWIpfpmTlpRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("in-point", 1), ("out-point", 2), ("mid-point", 3))

class HWIpfpmDelayTlpRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("e2e", 1), ("section", 2))

class HWIpfpmLossTlpRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("e2e", 1), ("section", 2))

class HWIpfpmMcpTlpRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("in-group", 1), ("out-group", 2))

class HWIpfpmAuthType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("hmac-sha256", 1))

class HWIpfpmDelayMeasType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("null", 0), ("oneway", 1), ("twoway", 2))

class HWIpfpmMeasTimeRangeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 5, 10, 15, 30))
    namedValues = NamedValues(("null", 0), ("timerange5m", 5), ("timerange10m", 10), ("timerange15m", 15), ("timerange30m", 30))

class HWIpfpmInstIntervalType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 10, 60, 600))
    namedValues = NamedValues(("interval1s", 1), ("interval10s", 10), ("interval60s", 60), ("interval600s", 600))

class HWIpfpmInstType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unicast", 0), ("multicastsrc", 1), ("multicastrecv", 2))

class HWIpfpmMMSType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("master", 0), ("slave", 1))

class HWIpfpmVpnType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("manage-vpn", 1), ("vpn-instance", 2))

hwIpfpmMcpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1))
hwIpfpmDcpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2))
hwIpfpmTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3))
hwIpfpmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4))
hwIpfpmMcpConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1))
hwIpfpmMcpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2))
hwIpfpmDcpConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1))
hwIpfpmDcpTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 2))
hwIpfpmMcpGlobalTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 1))
hwIpfpmMcpEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 1, 1), HWEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmMcpEnable.setStatus('current')
hwIpfpmMcpId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmMcpId.setStatus('current')
hwIpfpmMcpUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535)).clone(65030)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmMcpUdpPort.setStatus('current')
hwIpfpmMcpAuthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 4), )
if mibBuilder.loadTexts: hwIpfpmMcpAuthTable.setStatus('current')
hwIpfpmMcpAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 4, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpAuthKeyId"))
if mibBuilder.loadTexts: hwIpfpmMcpAuthEntry.setStatus('current')
hwIpfpmMcpAuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hwIpfpmMcpAuthKeyId.setStatus('current')
hwIpfpmMcpAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 4, 1, 2), HWIpfpmAuthType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpAuthType.setStatus('current')
hwIpfpmMcpAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpAuthKey.setStatus('current')
hwIpfpmMcpAuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpAuthRowStatus.setStatus('current')
hwIpfpmMcpInstTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5), )
if mibBuilder.loadTexts: hwIpfpmMcpInstTable.setStatus('current')
hwIpfpmMcpInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstId"))
if mibBuilder.loadTexts: hwIpfpmMcpInstEntry.setStatus('current')
hwIpfpmMcpInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 8355838), ValueRangeConstraint(16711681, 16777214), )))
if mibBuilder.loadTexts: hwIpfpmMcpInstId.setStatus('current')
hwIpfpmMcpInstDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpInstDesc.setStatus('current')
hwIpfpmMcpLossRatioUpThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpLossRatioUpThres.setStatus('current')
hwIpfpmMcpLossRatioLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpLossRatioLowThres.setStatus('current')
hwIpfpmMcpOneDelayUpThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpOneDelayUpThres.setStatus('current')
hwIpfpmMcpOneDelayLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpOneDelayLowThres.setStatus('current')
hwIpfpmMcpTwoDelayUpThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpTwoDelayUpThres.setStatus('current')
hwIpfpmMcpTwoDelayLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpTwoDelayLowThres.setStatus('current')
hwIpfpmMcpMeasureEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 9), HWEnabledStatus().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpMeasureEnable.setStatus('current')
hwIpfpmMcpInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpInstRowStatus.setStatus('current')
hwIpfpmMcpInstType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 11), HWIpfpmInstType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpInstType.setStatus('current')
hwIpfpmMcpSourceInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16711681, 16777214), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpSourceInstId.setStatus('current')
hwIpfpmMcpDcpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 6), )
if mibBuilder.loadTexts: hwIpfpmMcpDcpTable.setStatus('current')
hwIpfpmMcpDcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 6, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpDcpId"))
if mibBuilder.loadTexts: hwIpfpmMcpDcpEntry.setStatus('current')
hwIpfpmMcpDcpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 6, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwIpfpmMcpDcpId.setStatus('current')
hwIpfpmMcpDcpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpDcpRowStatus.setStatus('current')
hwIpfpmMcpAchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 7), )
if mibBuilder.loadTexts: hwIpfpmMcpAchTable.setStatus('current')
hwIpfpmMcpAchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 7, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpAchId"))
if mibBuilder.loadTexts: hwIpfpmMcpAchEntry.setStatus('current')
hwIpfpmMcpAchId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwIpfpmMcpAchId.setStatus('current')
hwIpfpmMcpFlowType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 7, 1, 2), HWIpfpmMcpFlowType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpFlowType.setStatus('current')
hwIpfpmMcpAchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpAchRowStatus.setStatus('current')
hwIpfpmMcpTlpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 8), )
if mibBuilder.loadTexts: hwIpfpmMcpTlpTable.setStatus('current')
hwIpfpmMcpTlpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 8, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpAchId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpTlpRole"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpTlpDcpId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpTlpId"))
if mibBuilder.loadTexts: hwIpfpmMcpTlpEntry.setStatus('current')
hwIpfpmMcpTlpRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 8, 1, 1), HWIpfpmMcpTlpRole())
if mibBuilder.loadTexts: hwIpfpmMcpTlpRole.setStatus('current')
hwIpfpmMcpTlpDcpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 8, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwIpfpmMcpTlpDcpId.setStatus('current')
hwIpfpmMcpTlpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)))
if mibBuilder.loadTexts: hwIpfpmMcpTlpId.setStatus('current')
hwIpfpmMcpTlpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmMcpTlpRowStatus.setStatus('current')
hwIpfpmMcpSrcInstReferQueryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 9), )
if mibBuilder.loadTexts: hwIpfpmMcpSrcInstReferQueryTable.setStatus('current')
hwIpfpmMcpSrcInstReferQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 9, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstId"))
if mibBuilder.loadTexts: hwIpfpmMcpSrcInstReferQueryEntry.setStatus('current')
hwIpfpmMcpSrcInstReferCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpSrcInstReferCnt.setStatus('current')
hwIpfpmMcpStatisticsTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 1))
hwIpfpmMcpInstSpec = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpInstSpec.setStatus('current')
hwIpfpmMcpInstCurNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpInstCurNum.setStatus('current')
hwIpfpmMcpInstAchIndexTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 3), )
if mibBuilder.loadTexts: hwIpfpmMcpInstAchIndexTable.setStatus('current')
hwIpfpmMcpInstAchIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 3, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpAchId"))
if mibBuilder.loadTexts: hwIpfpmMcpInstAchIndexEntry.setStatus('current')
hwIpfpmMcpSeqNo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpSeqNo.setStatus('current')
hwIpfpmMcpLossStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4), )
if mibBuilder.loadTexts: hwIpfpmMcpLossStatsTable.setStatus('current')
hwIpfpmMcpLossStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpAchId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpSeqNoHigh"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpSeqNoLow"))
if mibBuilder.loadTexts: hwIpfpmMcpLossStatsEntry.setStatus('current')
hwIpfpmMcpSeqNoHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwIpfpmMcpSeqNoHigh.setStatus('current')
hwIpfpmMcpSeqNoLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwIpfpmMcpSeqNoLow.setStatus('current')
hwIpfpmMcpLossErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 3), HWIpfpmStatErrInfo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpLossErrInfo.setStatus('current')
hwIpfpmMcpForwardLossPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardLossPkts.setStatus('current')
hwIpfpmMcpForwardLossPktsSign = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardLossPktsSign.setStatus('current')
hwIpfpmMcpForwardLossBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardLossBytes.setStatus('current')
hwIpfpmMcpForwardLossBytesSign = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardLossBytesSign.setStatus('current')
hwIpfpmMcpForwardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardPkts.setStatus('current')
hwIpfpmMcpForwardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardBytes.setStatus('current')
hwIpfpmMcpForwardLossRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardLossRatio.setStatus('current')
hwIpfpmMcpBackwardLossPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardLossPkts.setStatus('current')
hwIpfpmMcpBackwardLossPktsSign = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardLossPktsSign.setStatus('current')
hwIpfpmMcpBackwardLossBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardLossBytes.setStatus('current')
hwIpfpmMcpBackwardLossBytesSign = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardLossBytesSign.setStatus('current')
hwIpfpmMcpBackwardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardPkts.setStatus('current')
hwIpfpmMcpBackwardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardBytes.setStatus('current')
hwIpfpmMcpBackwardLossRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardLossRatio.setStatus('current')
hwIpfpmMcpForwardLossMMSType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 18), HWIpfpmMMSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardLossMMSType.setStatus('current')
hwIpfpmMcpForwardLossMMSSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 4, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardLossMMSSwitch.setStatus('current')
hwIpfpmMcpOneDelayStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 5), )
if mibBuilder.loadTexts: hwIpfpmMcpOneDelayStatTable.setStatus('current')
hwIpfpmMcpOneDelayStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 5, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpAchId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpSeqNoHigh"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpSeqNoLow"))
if mibBuilder.loadTexts: hwIpfpmMcpOneDelayStatEntry.setStatus('current')
hwIpfpmMcpOneDelayErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 5, 1, 1), HWIpfpmStatErrInfo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpOneDelayErrInfo.setStatus('current')
hwIpfpmMcpForwardOneDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardOneDelay.setStatus('current')
hwIpfpmMcpForwardOneDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardOneDelayVariation.setStatus('current')
hwIpfpmMcpBackwardOneDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardOneDelay.setStatus('current')
hwIpfpmMcpBackwardOneDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardOneDelayVariation.setStatus('current')
hwIpfpmMcpForwardOneDelayMMSType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 5, 1, 6), HWIpfpmMMSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardOneDelayMMSType.setStatus('current')
hwIpfpmMcpTwoDelayStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 6), )
if mibBuilder.loadTexts: hwIpfpmMcpTwoDelayStatTable.setStatus('current')
hwIpfpmMcpTwoDelayStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 6, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpAchId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpSeqNoHigh"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmMcpSeqNoLow"))
if mibBuilder.loadTexts: hwIpfpmMcpTwoDelayStatEntry.setStatus('current')
hwIpfpmMcpTwoDelayErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 6, 1, 1), HWIpfpmStatErrInfo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpTwoDelayErrInfo.setStatus('current')
hwIpfpmMcpTwoDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpTwoDelay.setStatus('current')
hwIpfpmMcpTwoDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpTwoDelayVariation.setStatus('current')
hwIpfpmMcpForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardDelay.setStatus('current')
hwIpfpmMcpForwardDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpForwardDelayVariation.setStatus('current')
hwIpfpmMcpBackwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardDelay.setStatus('current')
hwIpfpmMcpBackwardDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 1, 2, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmMcpBackwardDelayVariation.setStatus('current')
hwIpfpmDcpGlobalTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 1))
hwIpfpmDcpEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 1, 1), HWEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpEnable.setStatus('current')
hwIpfpmDcpId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpId.setStatus('current')
hwIpfpmDcpMeasureColorFlag = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpMeasureColorFlag.setStatus('current')
hwIpfpmDcpMcpId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpMcpId.setStatus('current')
hwIpfpmDcpMcpPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535)).clone(65030)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpMcpPort.setStatus('current')
hwIpfpmDcpMcpVpnName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpMcpVpnName.setStatus('current')
hwIpfpmDcpMcpVpnType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 1, 9), HWIpfpmVpnType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpMcpVpnType.setStatus('current')
hwIpfpmDcpAuthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 7), )
if mibBuilder.loadTexts: hwIpfpmDcpAuthTable.setStatus('current')
hwIpfpmDcpAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 7, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpAuthKeyId"))
if mibBuilder.loadTexts: hwIpfpmDcpAuthEntry.setStatus('current')
hwIpfpmDcpAuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hwIpfpmDcpAuthKeyId.setStatus('current')
hwIpfpmDcpAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 7, 1, 2), HWIpfpmAuthType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpAuthType.setStatus('current')
hwIpfpmDcpAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpAuthKey.setStatus('current')
hwIpfpmDcpAuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpAuthRowStatus.setStatus('current')
hwIpfpmDcpInstTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8), )
if mibBuilder.loadTexts: hwIpfpmDcpInstTable.setStatus('current')
hwIpfpmDcpInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"))
if mibBuilder.loadTexts: hwIpfpmDcpInstEntry.setStatus('current')
hwIpfpmDcpInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 8355838), ValueRangeConstraint(16711681, 16777214), ))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpfpmDcpInstId.setStatus('current')
hwIpfpmDcpInstDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstDesc.setStatus('current')
hwIpfpmDcpInstMcpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstMcpId.setStatus('current')
hwIpfpmDcpInstMcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535)).clone(65030)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstMcpPort.setStatus('current')
hwIpfpmDcpInstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 5), HWIpfpmInstIntervalType().clone('interval10s')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstInterval.setStatus('current')
hwIpfpmDcpInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstRowStatus.setStatus('current')
hwIpfpmDcpInstType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 7), HWIpfpmInstType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstType.setStatus('current')
hwIpfpmDcpSourceInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16711681, 16777214), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpSourceInstId.setStatus('current')
hwIpfpmDcpInstMcpVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstMcpVpnName.setStatus('current')
hwIpfpmDcpInstMcpVpnType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 10), HWIpfpmVpnType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstMcpVpnType.setStatus('current')
hwIpfpmDcpInstGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 8, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8355838))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstGroupId.setStatus('current')
hwIpfpmDcpInstAuthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 9), )
if mibBuilder.loadTexts: hwIpfpmDcpInstAuthTable.setStatus('current')
hwIpfpmDcpInstAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 9, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstAuthKeyId"))
if mibBuilder.loadTexts: hwIpfpmDcpInstAuthEntry.setStatus('current')
hwIpfpmDcpInstAuthKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hwIpfpmDcpInstAuthKeyId.setStatus('current')
hwIpfpmDcpInstAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 9, 1, 2), HWIpfpmAuthType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpInstAuthType.setStatus('current')
hwIpfpmDcpInstAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpInstAuthKey.setStatus('current')
hwIpfpmDcpInstAuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstAuthRowStatus.setStatus('current')
hwIpfpmDcpFlowTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10), )
if mibBuilder.loadTexts: hwIpfpmDcpFlowTable.setStatus('current')
hwIpfpmDcpFlowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowType"))
if mibBuilder.loadTexts: hwIpfpmDcpFlowEntry.setStatus('current')
hwIpfpmDcpFlowType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 1), HWIpfpmFlowType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpfpmDcpFlowType.setStatus('current')
hwIpfpmDcpFlowProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowProtocol.setStatus('current')
hwIpfpmDcpFlowDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowDscp.setStatus('current')
hwIpfpmDcpFlowSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowSrcAddr.setStatus('current')
hwIpfpmDcpFlowSrcMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowSrcMaskLen.setStatus('current')
hwIpfpmDcpFlowDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowDstAddr.setStatus('current')
hwIpfpmDcpFlowDstMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowDstMaskLen.setStatus('current')
hwIpfpmDcpFlowSrcPortBgn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowSrcPortBgn.setStatus('current')
hwIpfpmDcpFlowSrcPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowSrcPortEnd.setStatus('current')
hwIpfpmDcpFlowDstPortBgn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowDstPortBgn.setStatus('current')
hwIpfpmDcpFlowDstPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowDstPortEnd.setStatus('current')
hwIpfpmDcpFlowRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowRowStatus.setStatus('current')
hwIpfpmDcpFlowOuterSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowOuterSrcAddr.setStatus('current')
hwIpfpmDcpFlowOuterDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowOuterDstAddr.setStatus('current')
hwIpfpmDcpFlowForwardGtpTeid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967294))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowForwardGtpTeid.setStatus('current')
hwIpfpmDcpFlowBackwardGtpTeid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967294))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpFlowBackwardGtpTeid.setStatus('current')
hwIpfpmDcpInstTlpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11), )
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpTable.setStatus('current')
hwIpfpmDcpInstTlpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpId"))
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpEntry.setStatus('current')
hwIpfpmDcpInstTlpRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 1), HWIpfpmTlpRole()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpRole.setStatus('current')
hwIpfpmDcpInstTlpFlowType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 2), HWIpfpmFlowType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpFlowType.setStatus('current')
hwIpfpmDcpInstTlpDirec = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 3), HWIpfpmFlowTlpDirec()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpDirec.setStatus('current')
hwIpfpmDcpInstTlpVpnLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1048575)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpVpnLabel.setStatus('current')
hwIpfpmDcpInstTlpCtrlWordFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpCtrlWordFlag.setStatus('current')
hwIpfpmDcpInstTlpLspLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1048575)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpLspLabel.setStatus('current')
hwIpfpmDcpInstTlpL2VpnFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpL2VpnFlag.setStatus('current')
hwIpfpmDcpInstTlpTpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 4)).clone(8100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpTpId.setStatus('current')
hwIpfpmDcpInstTlpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpRowStatus.setStatus('current')
hwIpfpmDcpInstTlpMultiSrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 10), HWIpfpmMMSType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpMultiSrcType.setStatus('current')
hwIpfpmDcpInstTlpFlowLabelFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpFlowLabelFlag.setStatus('current')
hwIpfpmDcpInstTlpLspLabel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1048575)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpLspLabel2.setStatus('current')
hwIpfpmDcpInstTlpLspLabel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1048575)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpLspLabel3.setStatus('current')
hwIpfpmDcpInstTlpOuterVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpOuterVlan.setStatus('current')
hwIpfpmDcpInstTlpInnerVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpInnerVlan.setStatus('current')
hwIpfpmDcpInstTlpBackwardVpnLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1048575)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardVpnLabel.setStatus('current')
hwIpfpmDcpInstTlpBackwardCtrlWordFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardCtrlWordFlag.setStatus('current')
hwIpfpmDcpInstTlpBackwardLspLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1048575)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardLspLabel.setStatus('current')
hwIpfpmDcpInstTlpBackwardLspLabel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1048575)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardLspLabel2.setStatus('current')
hwIpfpmDcpInstTlpBackwardLspLabel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1048575)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardLspLabel3.setStatus('current')
hwIpfpmDcpInstTlpBackwardL2VpnFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardL2VpnFlag.setStatus('current')
hwIpfpmDcpInstTlpBackwardFlowLabelFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 22), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardFlowLabelFlag.setStatus('current')
hwIpfpmDcpInstTlpBackwardOuterVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardOuterVlan.setStatus('current')
hwIpfpmDcpInstTlpBackwardInnerVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardInnerVlan.setStatus('current')
hwIpfpmDcpInstTlpBackwardTpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 11, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 4)).clone(8100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpInstTlpBackwardTpId.setStatus('current')
hwIpfpmDcpLossMeasTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 12), )
if mibBuilder.loadTexts: hwIpfpmDcpLossMeasTable.setStatus('current')
hwIpfpmDcpLossMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 12, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpLossTlpRole"))
if mibBuilder.loadTexts: hwIpfpmDcpLossMeasEntry.setStatus('current')
hwIpfpmDcpLossEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 12, 1, 1), HWEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpLossEnable.setStatus('current')
hwIpfpmDcpLossContEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 12, 1, 2), HWEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpLossContEnable.setStatus('current')
hwIpfpmDcpLossTimeRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 12, 1, 3), HWIpfpmMeasTimeRangeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpLossTimeRange.setStatus('current')
hwIpfpmDcpLossTlpRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 12, 1, 4), HWIpfpmLossTlpRole().clone('e2e'))
if mibBuilder.loadTexts: hwIpfpmDcpLossTlpRole.setStatus('current')
hwIpfpmDcpDelayMeasTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 13), )
if mibBuilder.loadTexts: hwIpfpmDcpDelayMeasTable.setStatus('current')
hwIpfpmDcpDelayMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 13, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpDelayTlpRole"))
if mibBuilder.loadTexts: hwIpfpmDcpDelayMeasEntry.setStatus('current')
hwIpfpmDcpDelayEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 13, 1, 1), HWEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpDelayEnable.setStatus('current')
hwIpfpmDcpDelayContEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 13, 1, 2), HWEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpDelayContEnable.setStatus('current')
hwIpfpmDcpDelayMeasType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 13, 1, 3), HWIpfpmDelayMeasType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpDelayMeasType.setStatus('current')
hwIpfpmDcpDelayTimeRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 13, 1, 4), HWIpfpmMeasTimeRangeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpDelayTimeRange.setStatus('current')
hwIpfpmDcpDelayTlpRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 13, 1, 5), HWIpfpmDelayTlpRole().clone('e2e'))
if mibBuilder.loadTexts: hwIpfpmDcpDelayTlpRole.setStatus('current')
hwIpfpmDcpDelayForwardTlpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpDelayForwardTlpId.setStatus('current')
hwIpfpmDcpDelayBackwardTlpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIpfpmDcpDelayBackwardTlpId.setStatus('current')
hwIpfpmDcpTlpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 14), )
if mibBuilder.loadTexts: hwIpfpmDcpTlpTable.setStatus('current')
hwIpfpmDcpTlpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 14, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpId"))
if mibBuilder.loadTexts: hwIpfpmDcpTlpEntry.setStatus('current')
hwIpfpmDcpTlpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)))
if mibBuilder.loadTexts: hwIpfpmDcpTlpId.setStatus('current')
hwIpfpmDcpTlpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 14, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpTlpIfIndex.setStatus('current')
hwIpfpmDcpTlpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 14, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpTlpRowStatus.setStatus('current')
hwIpfpmDcpTlpVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4094), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpTlpVlanId.setStatus('current')
hwIpfpmDcpTlpQueryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 15), )
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryTable.setStatus('current')
hwIpfpmDcpTlpQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 15, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpQueryIfIndex"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpQueryVlanId"))
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryEntry.setStatus('current')
hwIpfpmDcpTlpQueryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 15, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryIfIndex.setStatus('current')
hwIpfpmDcpTlpQueryTlpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryTlpId.setStatus('current')
hwIpfpmDcpTlpQueryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4094), ValueRangeConstraint(65535, 65535), )))
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryVlanId.setStatus('current')
hwIpfpmDcpSrcInstReferQueryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 16), )
if mibBuilder.loadTexts: hwIpfpmDcpSrcInstReferQueryTable.setStatus('current')
hwIpfpmDcpSrcInstReferQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 16, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"))
if mibBuilder.loadTexts: hwIpfpmDcpSrcInstReferQueryEntry.setStatus('current')
hwIpfpmDcpSrcInstReferCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmDcpSrcInstReferCnt.setStatus('current')
hwIpfpmTlpExceedBoardId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 2, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpfpmTlpExceedBoardId.setStatus('current')
hwIpfpmTlpNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 2, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpfpmTlpNumber.setStatus('current')
hwIpfpmTlpThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 2, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIpfpmTlpThreshold.setStatus('current')
hwIpfpmDcpTlpQueryExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 17), )
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryExtTable.setStatus('current')
hwIpfpmDcpTlpQueryExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 17, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpQueryExtIfIndex"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpQueryExtVlanId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpQueryExtOntId"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpQueryExtOntPortType"), (0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpQueryExtOntPortId"))
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryExtEntry.setStatus('current')
hwIpfpmDcpTlpQueryExtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 17, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryExtIfIndex.setStatus('current')
hwIpfpmDcpTlpQueryExtTlpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryExtTlpId.setStatus('current')
hwIpfpmDcpTlpQueryExtVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4094), ValueRangeConstraint(65535, 65535), )))
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryExtVlanId.setStatus('current')
hwIpfpmDcpTlpQueryExtOntId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 17, 1, 4), Integer32())
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryExtOntId.setStatus('current')
hwIpfpmDcpTlpQueryExtOntPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(47, -1))).clone(namedValues=NamedValues(("eth", 47), ("invalid", -1))))
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryExtOntPortType.setStatus('current')
hwIpfpmDcpTlpQueryExtOntPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 17, 1, 6), Integer32())
if mibBuilder.loadTexts: hwIpfpmDcpTlpQueryExtOntPortId.setStatus('current')
hwIpfpmDcpTlpExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 18), )
if mibBuilder.loadTexts: hwIpfpmDcpTlpExtTable.setStatus('current')
hwIpfpmDcpTlpExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 18, 1), ).setIndexNames((0, "HUAWEI-IPFPM-MIB", "hwIpfpmDcpExtTlpId"))
if mibBuilder.loadTexts: hwIpfpmDcpTlpExtEntry.setStatus('current')
hwIpfpmDcpExtTlpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)))
if mibBuilder.loadTexts: hwIpfpmDcpExtTlpId.setStatus('current')
hwIpfpmDcpTlpExtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 18, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpTlpExtIfIndex.setStatus('current')
hwIpfpmDcpTlpExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 18, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpTlpExtRowStatus.setStatus('current')
hwIpfpmDcpTlpExtVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4094), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpTlpExtVlanId.setStatus('current')
hwIpfpmDcpTlpExtOntId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 18, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpTlpExtOntId.setStatus('current')
hwIpfpmDcpTlpExtOntPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 18, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(47, -1))).clone(namedValues=NamedValues(("eth", 47), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpTlpExtOntPortType.setStatus('current')
hwIpfpmDcpTlpExtOntPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 2, 1, 18, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpfpmDcpTlpExtOntPortId.setStatus('current')
hwIpfpmLossRatioExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3, 1)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpFlowType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardLossRatio"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardLossRatio"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstDesc"))
if mibBuilder.loadTexts: hwIpfpmLossRatioExceed.setStatus('current')
hwIpfpmLossRatioRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3, 2)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpFlowType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardLossRatio"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardLossRatio"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstDesc"))
if mibBuilder.loadTexts: hwIpfpmLossRatioRecovery.setStatus('current')
hwIpfpmOneDelayExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3, 3)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpFlowType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardOneDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardOneDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstDesc"))
if mibBuilder.loadTexts: hwIpfpmOneDelayExceed.setStatus('current')
hwIpfpmOneDelayRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3, 4)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpFlowType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardOneDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardOneDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstDesc"))
if mibBuilder.loadTexts: hwIpfpmOneDelayRecovery.setStatus('current')
hwIpfpmTwoDelayExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3, 5)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpTwoDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstDesc"))
if mibBuilder.loadTexts: hwIpfpmTwoDelayExceed.setStatus('current')
hwIpfpmTwoDelayRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3, 6)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpTwoDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstDesc"))
if mibBuilder.loadTexts: hwIpfpmTwoDelayRecovery.setStatus('current')
hwIpfpmDcpFlowConflict = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3, 7)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowType"))
if mibBuilder.loadTexts: hwIpfpmDcpFlowConflict.setStatus('current')
hwIpfpmTlpExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3, 8)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmTlpExceedBoardId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTlpNumber"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTlpThreshold"))
if mibBuilder.loadTexts: hwIpfpmTlpExceed.setStatus('current')
hwIpfpmTlpRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 3, 9)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmTlpExceedBoardId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTlpNumber"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTlpThreshold"))
if mibBuilder.loadTexts: hwIpfpmTlpRecovery.setStatus('current')
hwIpfpmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 1))
hwIpfpmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 2))
hwIpfpmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 1, 1)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpConfigGroup"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstConfigGroup"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpStatsGroup"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpConfigGroup"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstConfigGroup"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpConfigGroup"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpfpmCompliance = hwIpfpmCompliance.setStatus('current')
hwIpfpmMcpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 2, 1)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpEnable"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpUdpPort"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpAuthType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpAuthKey"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpAuthRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpfpmMcpConfigGroup = hwIpfpmMcpConfigGroup.setStatus('current')
hwIpfpmMcpInstConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 2, 2)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstDesc"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpLossRatioUpThres"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpLossRatioLowThres"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpOneDelayUpThres"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpOneDelayLowThres"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpTwoDelayUpThres"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpTwoDelayLowThres"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpMeasureEnable"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstRowStatus"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpSourceInstId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpDcpRowStatus"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpFlowType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpAchRowStatus"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpTlpRowStatus"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpSrcInstReferCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpfpmMcpInstConfigGroup = hwIpfpmMcpInstConfigGroup.setStatus('current')
hwIpfpmMcpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 2, 3)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstSpec"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpInstCurNum"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpSeqNo"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpLossErrInfo"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardLossPkts"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardLossPktsSign"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardLossBytes"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardLossBytesSign"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardPkts"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardBytes"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardLossRatio"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardLossPkts"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardLossPktsSign"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardLossBytes"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardLossBytesSign"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardPkts"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardBytes"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardLossRatio"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardLossMMSType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardLossMMSSwitch"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpOneDelayErrInfo"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardOneDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardOneDelayVariation"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardOneDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardOneDelayVariation"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardOneDelayMMSType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpTwoDelayErrInfo"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpTwoDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpTwoDelayVariation"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpForwardDelayVariation"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardDelay"), ("HUAWEI-IPFPM-MIB", "hwIpfpmMcpBackwardDelayVariation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpfpmMcpStatsGroup = hwIpfpmMcpStatsGroup.setStatus('current')
hwIpfpmDcpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 2, 4)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmDcpEnable"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpMeasureColorFlag"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpMcpId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpMcpPort"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpMcpVpnName"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpMcpVpnType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpAuthType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpAuthKey"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpAuthRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpfpmDcpConfigGroup = hwIpfpmDcpConfigGroup.setStatus('current')
hwIpfpmDcpInstConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 2, 5)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstDesc"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstMcpId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstMcpPort"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstInterval"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstAuthType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstAuthKey"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstAuthRowStatus"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstRowStatus"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpSourceInstId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstMcpVpnName"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstMcpVpnType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstGroupId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowProtocol"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowDscp"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowSrcAddr"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowSrcMaskLen"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowDstAddr"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowDstMaskLen"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowSrcPortBgn"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowSrcPortEnd"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowDstPortBgn"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowDstPortEnd"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowRowStatus"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowOuterSrcAddr"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowOuterDstAddr"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowForwardGtpTeid"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowBackwardGtpTeid"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpRole"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpFlowType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpDirec"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpVpnLabel"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpCtrlWordFlag"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpLspLabel"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpL2VpnFlag"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpTpId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpRowStatus"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpMultiSrcType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpFlowLabelFlag"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpLspLabel2"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpLspLabel3"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpOuterVlan"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpInnerVlan"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardVpnLabel"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardCtrlWordFlag"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardLspLabel"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardLspLabel2"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardLspLabel3"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardL2VpnFlag"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardFlowLabelFlag"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardOuterVlan"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardInnerVlan"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpInstTlpBackwardTpId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpLossEnable"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpLossContEnable"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpLossTimeRange"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpDelayEnable"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpDelayContEnable"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpDelayMeasType"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpDelayTimeRange"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpDelayForwardTlpId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpDelayBackwardTlpId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpSrcInstReferCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpfpmDcpInstConfigGroup = hwIpfpmDcpInstConfigGroup.setStatus('current')
hwIpfpmDcpTlpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 2, 6)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpIfIndex"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpRowStatus"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpVlanId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpTlpQueryTlpId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTlpExceedBoardId"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTlpNumber"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTlpThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpfpmDcpTlpConfigGroup = hwIpfpmDcpTlpConfigGroup.setStatus('current')
hwIpfpmTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 316, 4, 2, 7)).setObjects(("HUAWEI-IPFPM-MIB", "hwIpfpmLossRatioExceed"), ("HUAWEI-IPFPM-MIB", "hwIpfpmLossRatioRecovery"), ("HUAWEI-IPFPM-MIB", "hwIpfpmOneDelayExceed"), ("HUAWEI-IPFPM-MIB", "hwIpfpmOneDelayRecovery"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTwoDelayExceed"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTwoDelayRecovery"), ("HUAWEI-IPFPM-MIB", "hwIpfpmDcpFlowConflict"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTlpExceed"), ("HUAWEI-IPFPM-MIB", "hwIpfpmTlpRecovery"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIpfpmTrapsGroup = hwIpfpmTrapsGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-IPFPM-MIB", hwIpfpmConformance=hwIpfpmConformance, hwIpfpmMcpOneDelayUpThres=hwIpfpmMcpOneDelayUpThres, hwIpfpmMcpSrcInstReferQueryEntry=hwIpfpmMcpSrcInstReferQueryEntry, hwIpfpmDcpLossMeasTable=hwIpfpmDcpLossMeasTable, hwIpfpmDcpSrcInstReferCnt=hwIpfpmDcpSrcInstReferCnt, hwIpfpmDcpTlpQueryExtIfIndex=hwIpfpmDcpTlpQueryExtIfIndex, hwIpfpmDcpTlpQueryExtOntId=hwIpfpmDcpTlpQueryExtOntId, hwIpfpmDcpInstTlpTpId=hwIpfpmDcpInstTlpTpId, hwIpfpmMcpStatsGroup=hwIpfpmMcpStatsGroup, hwIpfpmDcpLossTimeRange=hwIpfpmDcpLossTimeRange, hwIpfpmDcpInstConfigGroup=hwIpfpmDcpInstConfigGroup, HWIpfpmInstIntervalType=HWIpfpmInstIntervalType, hwIpfpmDcpInstTlpL2VpnFlag=hwIpfpmDcpInstTlpL2VpnFlag, hwIpfpmMcpForwardLossPktsSign=hwIpfpmMcpForwardLossPktsSign, hwIpfpmDcpInstDesc=hwIpfpmDcpInstDesc, HWIpfpmInstType=HWIpfpmInstType, hwIpfpmDcpFlowTable=hwIpfpmDcpFlowTable, hwIpfpmDcpInstTlpBackwardFlowLabelFlag=hwIpfpmDcpInstTlpBackwardFlowLabelFlag, HWIpfpmTlpRole=HWIpfpmTlpRole, hwIpfpmDcpSrcInstReferQueryEntry=hwIpfpmDcpSrcInstReferQueryEntry, HWIpfpmMcpTlpRole=HWIpfpmMcpTlpRole, hwIpfpmMcpTwoDelayUpThres=hwIpfpmMcpTwoDelayUpThres, hwIpfpmDcpTlpExtIfIndex=hwIpfpmDcpTlpExtIfIndex, hwIpfpmDcpFlowType=hwIpfpmDcpFlowType, hwIpfpmDcpInstTlpLspLabel=hwIpfpmDcpInstTlpLspLabel, hwIpfpmDcpInstType=hwIpfpmDcpInstType, HWIpfpmMMSType=HWIpfpmMMSType, hwIpfpmMcpSourceInstId=hwIpfpmMcpSourceInstId, hwIpfpmDcpLossMeasEntry=hwIpfpmDcpLossMeasEntry, hwIpfpmTlpRecovery=hwIpfpmTlpRecovery, hwIpfpmMcpInstTable=hwIpfpmMcpInstTable, hwIpfpmDcpDelayMeasEntry=hwIpfpmDcpDelayMeasEntry, hwIpfpmMcpForwardLossRatio=hwIpfpmMcpForwardLossRatio, hwIpfpmDcpInstTlpRole=hwIpfpmDcpInstTlpRole, hwIpfpmDcpInstTlpInnerVlan=hwIpfpmDcpInstTlpInnerVlan, hwIpfpmDcpTlpIfIndex=hwIpfpmDcpTlpIfIndex, hwIpfpmDcpTlpExtRowStatus=hwIpfpmDcpTlpExtRowStatus, hwIpfpmMcpUdpPort=hwIpfpmMcpUdpPort, hwIpfpmDcpDelayEnable=hwIpfpmDcpDelayEnable, hwIpfpmDcpMcpVpnName=hwIpfpmDcpMcpVpnName, hwIpfpmDcpInstMcpPort=hwIpfpmDcpInstMcpPort, hwIpfpmDcpDelayBackwardTlpId=hwIpfpmDcpDelayBackwardTlpId, hwIpfpmMcpTlpEntry=hwIpfpmMcpTlpEntry, hwIpfpmDcpDelayForwardTlpId=hwIpfpmDcpDelayForwardTlpId, hwIpfpmMcpAchTable=hwIpfpmMcpAchTable, hwIpfpmDcpTlpTable=hwIpfpmDcpTlpTable, hwIpfpmMcpInstDesc=hwIpfpmMcpInstDesc, hwIpfpmDcpEnable=hwIpfpmDcpEnable, hwIpfpmMcpBackwardLossRatio=hwIpfpmMcpBackwardLossRatio, hwIpfpmMcpOneDelayStatEntry=hwIpfpmMcpOneDelayStatEntry, hwIpfpmMcpConfiguration=hwIpfpmMcpConfiguration, hwIpfpmMcpAchId=hwIpfpmMcpAchId, hwIpfpmMcpTwoDelayStatEntry=hwIpfpmMcpTwoDelayStatEntry, hwIpfpmDcpExtTlpId=hwIpfpmDcpExtTlpId, hwIpfpmMcpTlpId=hwIpfpmMcpTlpId, hwIpfpmDcpTlpQueryEntry=hwIpfpmDcpTlpQueryEntry, HWIpfpmVpnType=HWIpfpmVpnType, hwIpfpmDcpTlpQueryExtOntPortId=hwIpfpmDcpTlpQueryExtOntPortId, hwIpfpmDcpTlpQueryExtEntry=hwIpfpmDcpTlpQueryExtEntry, hwIpfpmDcpDelayTimeRange=hwIpfpmDcpDelayTimeRange, hwIpfpmDcpGlobalTable=hwIpfpmDcpGlobalTable, hwIpfpmDcpTlpQueryExtVlanId=hwIpfpmDcpTlpQueryExtVlanId, hwIpfpmMcpTwoDelayErrInfo=hwIpfpmMcpTwoDelayErrInfo, hwIpfpmMcpInstId=hwIpfpmMcpInstId, hwIpfpmDcpLossContEnable=hwIpfpmDcpLossContEnable, hwIpfpmDcpDelayTlpRole=hwIpfpmDcpDelayTlpRole, hwIpfpmMcpDcpEntry=hwIpfpmMcpDcpEntry, hwIpfpmDcpDelayMeasTable=hwIpfpmDcpDelayMeasTable, hwIpfpmLossRatioExceed=hwIpfpmLossRatioExceed, hwIpfpmDcpInstAuthRowStatus=hwIpfpmDcpInstAuthRowStatus, hwIpfpmMcpSrcInstReferCnt=hwIpfpmMcpSrcInstReferCnt, hwIpfpmMcpForwardOneDelayVariation=hwIpfpmMcpForwardOneDelayVariation, hwIpfpmDcpTlpConfigGroup=hwIpfpmDcpTlpConfigGroup, hwIpfpmDcpInstAuthKeyId=hwIpfpmDcpInstAuthKeyId, hwIpfpmMcpForwardLossMMSType=hwIpfpmMcpForwardLossMMSType, hwIpfpmTrapsGroup=hwIpfpmTrapsGroup, hwIpfpmDcpDelayMeasType=hwIpfpmDcpDelayMeasType, hwIpfpmDcpInstTlpFlowLabelFlag=hwIpfpmDcpInstTlpFlowLabelFlag, hwIpfpmDcpTlpExtOntPortType=hwIpfpmDcpTlpExtOntPortType, hwIpfpmDcpTlpExtOntPortId=hwIpfpmDcpTlpExtOntPortId, hwIpfpmMcpForwardOneDelay=hwIpfpmMcpForwardOneDelay, hwIpfpmDcpInstTable=hwIpfpmDcpInstTable, hwIpfpmDcpInstInterval=hwIpfpmDcpInstInterval, hwIpfpmMcpLossRatioUpThres=hwIpfpmMcpLossRatioUpThres, hwIpfpmDcpFlowForwardGtpTeid=hwIpfpmDcpFlowForwardGtpTeid, hwIpfpmDcpAuthKey=hwIpfpmDcpAuthKey, hwIpfpmDcpInstTlpBackwardLspLabel2=hwIpfpmDcpInstTlpBackwardLspLabel2, hwIpfpmDcpInstTlpBackwardTpId=hwIpfpmDcpInstTlpBackwardTpId, HWIpfpmAuthType=HWIpfpmAuthType, hwIpfpmMcpInstType=hwIpfpmMcpInstType, HWIpfpmDelayMeasType=HWIpfpmDelayMeasType, hwIpfpmMcpInstConfigGroup=hwIpfpmMcpInstConfigGroup, hwIpfpmMcpAuthTable=hwIpfpmMcpAuthTable, hwIpfpmDcpInstAuthKey=hwIpfpmDcpInstAuthKey, hwIpfpmDcpInstTlpBackwardLspLabel=hwIpfpmDcpInstTlpBackwardLspLabel, HWIpfpmFlowType=HWIpfpmFlowType, hwIpfpmDcpTlpVlanId=hwIpfpmDcpTlpVlanId, hwIpfpmDcpAuthTable=hwIpfpmDcpAuthTable, hwIpfpmMcpAuthType=hwIpfpmMcpAuthType, hwIpfpmTwoDelayExceed=hwIpfpmTwoDelayExceed, hwIpfpmDcpFlowOuterSrcAddr=hwIpfpmDcpFlowOuterSrcAddr, hwIpfpmDcpInstEntry=hwIpfpmDcpInstEntry, hwIpfpmGroups=hwIpfpmGroups, hwIpfpmMcpInstEntry=hwIpfpmMcpInstEntry, hwIpfpmMcpBackwardLossPktsSign=hwIpfpmMcpBackwardLossPktsSign, hwIpfpmMcpForwardOneDelayMMSType=hwIpfpmMcpForwardOneDelayMMSType, hwIpfpmDcpInstId=hwIpfpmDcpInstId, hwIpfpmDcpFlowSrcMaskLen=hwIpfpmDcpFlowSrcMaskLen, hwIpfpmDcpInstTlpBackwardLspLabel3=hwIpfpmDcpInstTlpBackwardLspLabel3, hwIpfpmOneDelayExceed=hwIpfpmOneDelayExceed, hwIpfpmMcpForwardLossBytes=hwIpfpmMcpForwardLossBytes, hwIpfpmDcpTlpRowStatus=hwIpfpmDcpTlpRowStatus, hwIpfpmDcpTlpQueryIfIndex=hwIpfpmDcpTlpQueryIfIndex, hwIpfpmTlpExceedBoardId=hwIpfpmTlpExceedBoardId, hwIpfpmDcpInstTlpLspLabel2=hwIpfpmDcpInstTlpLspLabel2, hwIpfpmDcpTlpQueryExtTable=hwIpfpmDcpTlpQueryExtTable, hwIpfpmDcpFlowOuterDstAddr=hwIpfpmDcpFlowOuterDstAddr, hwIpfpmDcpInstTlpDirec=hwIpfpmDcpInstTlpDirec, hwIpfpmDcpInstGroupId=hwIpfpmDcpInstGroupId, hwIpfpmDcpInstMcpId=hwIpfpmDcpInstMcpId, hwIpfpmDcpFlowRowStatus=hwIpfpmDcpFlowRowStatus, PYSNMP_MODULE_ID=hwIpfpmMib, hwIpfpmMcpConfigGroup=hwIpfpmMcpConfigGroup, hwIpfpmDcpFlowProtocol=hwIpfpmDcpFlowProtocol, hwIpfpmDcpFlowDstPortEnd=hwIpfpmDcpFlowDstPortEnd, HWIpfpmMeasureFlag=HWIpfpmMeasureFlag, hwIpfpmDcpInstTlpVpnLabel=hwIpfpmDcpInstTlpVpnLabel, hwIpfpmDcpSourceInstId=hwIpfpmDcpSourceInstId, HWIpfpmDelayTlpRole=HWIpfpmDelayTlpRole, hwIpfpmDcpTlpExtOntId=hwIpfpmDcpTlpExtOntId, hwIpfpmDcpInstTlpMultiSrcType=hwIpfpmDcpInstTlpMultiSrcType, HWIpfpmMeasTimeRangeType=HWIpfpmMeasTimeRangeType, hwIpfpmDcpTlpExtVlanId=hwIpfpmDcpTlpExtVlanId, hwIpfpmMcpBackwardBytes=hwIpfpmMcpBackwardBytes, hwIpfpmDcpLossTlpRole=hwIpfpmDcpLossTlpRole, hwIpfpmDcpDelayContEnable=hwIpfpmDcpDelayContEnable, hwIpfpmMib=hwIpfpmMib, hwIpfpmDcpMcpPort=hwIpfpmDcpMcpPort, hwIpfpmDcpTlpQueryExtOntPortType=hwIpfpmDcpTlpQueryExtOntPortType, hwIpfpmDcpInstTlpFlowType=hwIpfpmDcpInstTlpFlowType, hwIpfpmDcpTlpEntry=hwIpfpmDcpTlpEntry, hwIpfpmDcpInstAuthTable=hwIpfpmDcpInstAuthTable, hwIpfpmDcpId=hwIpfpmDcpId, hwIpfpmMcpSeqNoLow=hwIpfpmMcpSeqNoLow, hwIpfpmMcpEnable=hwIpfpmMcpEnable, hwIpfpmDcpConfiguration=hwIpfpmDcpConfiguration, hwIpfpmDcpFlowDstMaskLen=hwIpfpmDcpFlowDstMaskLen, hwIpfpmDcpLossEnable=hwIpfpmDcpLossEnable, hwIpfpmDcpFlowBackwardGtpTeid=hwIpfpmDcpFlowBackwardGtpTeid, hwIpfpmDcpInstTlpEntry=hwIpfpmDcpInstTlpEntry, hwIpfpmTwoDelayRecovery=hwIpfpmTwoDelayRecovery, hwIpfpmMcpBackwardDelayVariation=hwIpfpmMcpBackwardDelayVariation, hwIpfpmDcpTlpQueryExtTlpId=hwIpfpmDcpTlpQueryExtTlpId, hwIpfpmMcpTlpTable=hwIpfpmMcpTlpTable, hwIpfpmMcpInstRowStatus=hwIpfpmMcpInstRowStatus, hwIpfpmDcpFlowSrcPortEnd=hwIpfpmDcpFlowSrcPortEnd, hwIpfpmDcpAuthType=hwIpfpmDcpAuthType, hwIpfpmMcpAuthKey=hwIpfpmMcpAuthKey, hwIpfpmTlpThreshold=hwIpfpmTlpThreshold, hwIpfpmMcpTlpDcpId=hwIpfpmMcpTlpDcpId, hwIpfpmMcpSrcInstReferQueryTable=hwIpfpmMcpSrcInstReferQueryTable, hwIpfpmMcpForwardLossBytesSign=hwIpfpmMcpForwardLossBytesSign, hwIpfpmDcpConfigGroup=hwIpfpmDcpConfigGroup, hwIpfpmMcpBackwardLossBytes=hwIpfpmMcpBackwardLossBytes, hwIpfpmDcpSrcInstReferQueryTable=hwIpfpmDcpSrcInstReferQueryTable, hwIpfpmMcpForwardLossMMSSwitch=hwIpfpmMcpForwardLossMMSSwitch, hwIpfpmMcpForwardDelay=hwIpfpmMcpForwardDelay, hwIpfpmDcpInstTlpBackwardInnerVlan=hwIpfpmDcpInstTlpBackwardInnerVlan, hwIpfpmCompliances=hwIpfpmCompliances, hwIpfpmMcpInstCurNum=hwIpfpmMcpInstCurNum, hwIpfpmMcpTlpRole=hwIpfpmMcpTlpRole, hwIpfpmMcpForwardLossPkts=hwIpfpmMcpForwardLossPkts, hwIpfpmDcpFlowDstPortBgn=hwIpfpmDcpFlowDstPortBgn, hwIpfpmMcpForwardDelayVariation=hwIpfpmMcpForwardDelayVariation, hwIpfpmDcpFlowDstAddr=hwIpfpmDcpFlowDstAddr, hwIpfpmDcpInstTlpTable=hwIpfpmDcpInstTlpTable, hwIpfpmDcpInstMcpVpnName=hwIpfpmDcpInstMcpVpnName, hwIpfpmDcpInstTlpBackwardL2VpnFlag=hwIpfpmDcpInstTlpBackwardL2VpnFlag, hwIpfpmMcpOneDelayStatTable=hwIpfpmMcpOneDelayStatTable, hwIpfpmMcpDcpId=hwIpfpmMcpDcpId, hwIpfpmDcpTlpQueryTable=hwIpfpmDcpTlpQueryTable, hwIpfpmMcpAchRowStatus=hwIpfpmMcpAchRowStatus, hwIpfpmDcpInstTlpBackwardOuterVlan=hwIpfpmDcpInstTlpBackwardOuterVlan, hwIpfpmTlpNumber=hwIpfpmTlpNumber, hwIpfpmDcpInstTlpOuterVlan=hwIpfpmDcpInstTlpOuterVlan, hwIpfpmDcpAuthRowStatus=hwIpfpmDcpAuthRowStatus, HWEnabledStatus=HWEnabledStatus, hwIpfpmMcpBackwardOneDelayVariation=hwIpfpmMcpBackwardOneDelayVariation, hwIpfpmMcpGlobalTable=hwIpfpmMcpGlobalTable, hwIpfpmMcpId=hwIpfpmMcpId, HWIpfpmStatErrInfo=HWIpfpmStatErrInfo, hwIpfpmDcpAuthEntry=hwIpfpmDcpAuthEntry, hwIpfpmDcpTlpExtTable=hwIpfpmDcpTlpExtTable, hwIpfpmMcpAuthEntry=hwIpfpmMcpAuthEntry, hwIpfpmMcpTwoDelayStatTable=hwIpfpmMcpTwoDelayStatTable, hwIpfpmDcpFlowSrcPortBgn=hwIpfpmDcpFlowSrcPortBgn, hwIpfpmDcpMeasureColorFlag=hwIpfpmDcpMeasureColorFlag, hwIpfpmCompliance=hwIpfpmCompliance, hwIpfpmDcpFlowConflict=hwIpfpmDcpFlowConflict, hwIpfpmMcpMeasureEnable=hwIpfpmMcpMeasureEnable, hwIpfpmMcpTwoDelay=hwIpfpmMcpTwoDelay, hwIpfpmDcpInstMcpVpnType=hwIpfpmDcpInstMcpVpnType, HWIpfpmLossTlpRole=HWIpfpmLossTlpRole, hwIpfpmMcpSeqNoHigh=hwIpfpmMcpSeqNoHigh, hwIpfpmMcpLossErrInfo=hwIpfpmMcpLossErrInfo, hwIpfpmDcpFlowDscp=hwIpfpmDcpFlowDscp, hwIpfpmDcpTlpId=hwIpfpmDcpTlpId, hwIpfpmTlpExceed=hwIpfpmTlpExceed, hwIpfpmDcpFlowEntry=hwIpfpmDcpFlowEntry, hwIpfpmDcpInstAuthEntry=hwIpfpmDcpInstAuthEntry, hwIpfpmOneDelayRecovery=hwIpfpmOneDelayRecovery, hwIpfpmDcpTlpQueryTlpId=hwIpfpmDcpTlpQueryTlpId, hwIpfpmDcpMcpVpnType=hwIpfpmDcpMcpVpnType, hwIpfpmMcpInstSpec=hwIpfpmMcpInstSpec, hwIpfpmMcpTwoDelayVariation=hwIpfpmMcpTwoDelayVariation, hwIpfpmMcpTwoDelayLowThres=hwIpfpmMcpTwoDelayLowThres, hwIpfpmMcpInstAchIndexTable=hwIpfpmMcpInstAchIndexTable, hwIpfpmMcpFlowType=hwIpfpmMcpFlowType, hwIpfpmMcpBackwardLossPkts=hwIpfpmMcpBackwardLossPkts, hwIpfpmMcpLossStatsEntry=hwIpfpmMcpLossStatsEntry, hwIpfpmMcpInstAchIndexEntry=hwIpfpmMcpInstAchIndexEntry, hwIpfpmDcpTlpQueryVlanId=hwIpfpmDcpTlpQueryVlanId, hwIpfpmMcpAuthKeyId=hwIpfpmMcpAuthKeyId, hwIpfpmMcpTlpRowStatus=hwIpfpmMcpTlpRowStatus, hwIpfpmDcpAuthKeyId=hwIpfpmDcpAuthKeyId, hwIpfpmDcpInstTlpCtrlWordFlag=hwIpfpmDcpInstTlpCtrlWordFlag, HWIpfpmMcpFlowType=HWIpfpmMcpFlowType, hwIpfpmMcpBackwardOneDelay=hwIpfpmMcpBackwardOneDelay, hwIpfpmMcpObjects=hwIpfpmMcpObjects, hwIpfpmMcpAchEntry=hwIpfpmMcpAchEntry, hwIpfpmDcpTrapObjects=hwIpfpmDcpTrapObjects, hwIpfpmMcpDcpRowStatus=hwIpfpmMcpDcpRowStatus, hwIpfpmDcpObjects=hwIpfpmDcpObjects, hwIpfpmMcpStatisticsTable=hwIpfpmMcpStatisticsTable, hwIpfpmMcpLossRatioLowThres=hwIpfpmMcpLossRatioLowThres, hwIpfpmMcpBackwardLossBytesSign=hwIpfpmMcpBackwardLossBytesSign, hwIpfpmDcpInstTlpBackwardCtrlWordFlag=hwIpfpmDcpInstTlpBackwardCtrlWordFlag, hwIpfpmDcpTlpExtEntry=hwIpfpmDcpTlpExtEntry, hwIpfpmDcpInstTlpRowStatus=hwIpfpmDcpInstTlpRowStatus, hwIpfpmMcpBackwardPkts=hwIpfpmMcpBackwardPkts, hwIpfpmDcpFlowSrcAddr=hwIpfpmDcpFlowSrcAddr, hwIpfpmTraps=hwIpfpmTraps, hwIpfpmMcpStatistics=hwIpfpmMcpStatistics, hwIpfpmMcpForwardPkts=hwIpfpmMcpForwardPkts, hwIpfpmMcpForwardBytes=hwIpfpmMcpForwardBytes, hwIpfpmMcpAuthRowStatus=hwIpfpmMcpAuthRowStatus, hwIpfpmDcpMcpId=hwIpfpmDcpMcpId, hwIpfpmMcpSeqNo=hwIpfpmMcpSeqNo, hwIpfpmDcpInstRowStatus=hwIpfpmDcpInstRowStatus, hwIpfpmDcpInstTlpLspLabel3=hwIpfpmDcpInstTlpLspLabel3, hwIpfpmDcpInstTlpBackwardVpnLabel=hwIpfpmDcpInstTlpBackwardVpnLabel, hwIpfpmLossRatioRecovery=hwIpfpmLossRatioRecovery, hwIpfpmMcpDcpTable=hwIpfpmMcpDcpTable, hwIpfpmMcpOneDelayLowThres=hwIpfpmMcpOneDelayLowThres)
mibBuilder.exportSymbols("HUAWEI-IPFPM-MIB", HWIpfpmFlowTlpDirec=HWIpfpmFlowTlpDirec, hwIpfpmMcpLossStatsTable=hwIpfpmMcpLossStatsTable, hwIpfpmMcpOneDelayErrInfo=hwIpfpmMcpOneDelayErrInfo, hwIpfpmMcpBackwardDelay=hwIpfpmMcpBackwardDelay, hwIpfpmDcpInstAuthType=hwIpfpmDcpInstAuthType)
