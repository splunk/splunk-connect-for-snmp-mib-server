#
# PySNMP MIB module CISCO-DMN-DSG-DPM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-DPM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity, Unsigned32, IpAddress, iso, Bits, Counter32, ObjectIdentity, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity", "Unsigned32", "IpAddress", "iso", "Bits", "Counter32", "ObjectIdentity", "Gauge32", "Integer32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
ciscoDSGDPM = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36))
ciscoDSGDPM.setRevisions(('2012-03-12 17:00',))
if mibBuilder.loadTexts: ciscoDSGDPM.setLastUpdated('201203121700Z')
if mibBuilder.loadTexts: ciscoDSGDPM.setOrganization('Cisco Systems, Inc.')
dpmInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 1))
dpmTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2))
dpmRegenerate = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("always", 1), ("asNeeded", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmRegenerate.setStatus('current')
dpmGblCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1), )
if mibBuilder.loadTexts: dpmGblCfgTable.setStatus('current')
dpmGblCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-DPM-MIB", "dpmGblCfgInstanceID"))
if mibBuilder.loadTexts: dpmGblCfgEntry.setStatus('current')
dpmGblCfgInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpmGblCfgInstanceID.setStatus('current')
dpmGblCfgInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgInstanceName.setStatus('current')
dpmGblCfgMapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("svcID", 1), ("svcIDAndPID", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgMapMode.setStatus('current')
dpmGblCfgDupMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("psiRemap", 1), ("packetCopy", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgDupMethod.setStatus('current')
dpmGblCfgRegenRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("saStandard", 1), ("mpegMinimum", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgRegenRate.setStatus('current')
dpmGblCfgUnrefContent = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("modeI", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgUnrefContent.setStatus('current')
dpmGblCfgPSIOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dropAll", 1), ("passAll", 2), ("ctlByTable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIOutput.setStatus('current')
dpmGblCfgSVCIDOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("validChannel", 1), ("allChannel", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgSVCIDOutput.setStatus('current')
dpmGblCfgPSIPAT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("regeneration", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIPAT.setStatus('current')
dpmGblCfgPSICAT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("regeneration", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSICAT.setStatus('current')
dpmGblCfgPSIPMT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("regeneration", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIPMT.setStatus('current')
dpmGblCfgPSITSDT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSITSDT.setStatus('current')
dpmGblCfgPSINIT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("regeneration", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSINIT.setStatus('current')
dpmGblCfgPSINITO = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("pwRC", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSINITO.setStatus('current')
dpmGblCfgPSISDT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("regeneration", 3), ("pwRC", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSISDT.setStatus('current')
dpmGblCfgPSISDTO = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("pwRC", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSISDTO.setStatus('current')
dpmGblCfgPSIBAT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("pwRC", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIBAT.setStatus('current')
dpmGblCfgPSIEIT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIEIT.setStatus('current')
dpmGblCfgPSITDT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSITDT.setStatus('current')
dpmGblCfgPSIST = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIST.setStatus('current')
dpmGblCfgPSIRST = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIRST.setStatus('current')
dpmGblCfgPSITOT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSITOT.setStatus('current')
dpmGblCfgPSIDIT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIDIT.setStatus('current')
dpmGblCfgPSISIT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSISIT.setStatus('current')
dpmGblCfgPSIECM = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIECM.setStatus('current')
dpmGblCfgPSIEMM = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIEMM.setStatus('current')
dpmGblCfgPSIDRT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSIDRT.setStatus('current')
dpmGblCfgPSICDT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPSICDT.setStatus('current')
dpmGblCfgPATPMTOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgPATPMTOffset.setStatus('current')
dpmGblCfgNITOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmGblCfgNITOffset.setStatus('current')
dpmPeMappingTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 2), )
if mibBuilder.loadTexts: dpmPeMappingTable.setStatus('current')
dpmPeMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-DPM-MIB", "dpmPeMappingInstanceID"), (0, "CISCO-DMN-DSG-DPM-MIB", "dpmPeMappingPEID"))
if mibBuilder.loadTexts: dpmPeMappingEntry.setStatus('current')
dpmPeMappingInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpmPeMappingInstanceID.setStatus('current')
dpmPeMappingPEID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpmPeMappingPEID.setStatus('current')
dpmPeMappingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("drop", 1), ("pass", 2), ("map", 3), ("xcode", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPeMappingAction.setStatus('current')
dpmPeMappingPMTPID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPeMappingPMTPID.setStatus('current')
dpmPeMappingOpChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPeMappingOpChannel.setStatus('current')
dpmPIDMapTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3), )
if mibBuilder.loadTexts: dpmPIDMapTable.setStatus('current')
dpmPIDMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-DPM-MIB", "dpmPIDMapIndex"))
if mibBuilder.loadTexts: dpmPIDMapEntry.setStatus('current')
dpmPIDMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpmPIDMapIndex.setStatus('current')
dpmPIDMapInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPIDMapInstanceID.setStatus('current')
dpmPIDMapPEID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPIDMapPEID.setStatus('current')
dpmPIDMapRow = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPIDMapRow.setStatus('current')
dpmPIDMapStreamType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPIDMapStreamType.setStatus('current')
dpmPIDMapStreamCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("invl", 1), ("pcr", 2), ("vid", 3), ("aud", 4), ("subt", 5), ("vbi", 6), ("dpi", 7), ("mpe", 8), ("ttx", 9), ("data", 10), ("lsdt", 11), ("cdt", 12), ("etv", 13), ("ukn", 14)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPIDMapStreamCategory.setStatus('current')
dpmPIDMapStreamInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPIDMapStreamInstance.setStatus('current')
dpmPIDMapAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("drop", 1), ("map", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPIDMapAction.setStatus('current')
dpmPIDMapOutputPID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPIDMapOutputPID.setStatus('current')
dpmPIDMapInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 3, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dpmPIDMapInuse.setStatus('current')
dpmAlignedPMTTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 4), )
if mibBuilder.loadTexts: dpmAlignedPMTTable.setStatus('current')
dpmAlignedPMTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 4, 1), ).setIndexNames((0, "CISCO-DMN-DSG-DPM-MIB", "dpmAlignedPMTInstanceID"), (0, "CISCO-DMN-DSG-DPM-MIB", "dpmAlignedPMTPEID"), (0, "CISCO-DMN-DSG-DPM-MIB", "dpmAlignedPMTRow"))
if mibBuilder.loadTexts: dpmAlignedPMTEntry.setStatus('current')
dpmAlignedPMTInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpmAlignedPMTInstanceID.setStatus('current')
dpmAlignedPMTPEID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpmAlignedPMTPEID.setStatus('current')
dpmAlignedPMTRow = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpmAlignedPMTRow.setStatus('current')
dpmAlignedPMTStreamTypeTxt = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpmAlignedPMTStreamTypeTxt.setStatus('current')
dpmAlignedPMTInputPID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 36, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dpmAlignedPMTInputPID.setStatus('current')
mibBuilder.exportSymbols("CISCO-DMN-DSG-DPM-MIB", dpmGblCfgPATPMTOffset=dpmGblCfgPATPMTOffset, dpmAlignedPMTInstanceID=dpmAlignedPMTInstanceID, dpmGblCfgPSIST=dpmGblCfgPSIST, dpmGblCfgPSIOutput=dpmGblCfgPSIOutput, dpmPIDMapInstanceID=dpmPIDMapInstanceID, dpmGblCfgPSITDT=dpmGblCfgPSITDT, dpmGblCfgPSIECM=dpmGblCfgPSIECM, dpmAlignedPMTPEID=dpmAlignedPMTPEID, dpmGblCfgPSIDIT=dpmGblCfgPSIDIT, dpmPIDMapIndex=dpmPIDMapIndex, dpmAlignedPMTInputPID=dpmAlignedPMTInputPID, dpmPIDMapInuse=dpmPIDMapInuse, dpmPeMappingAction=dpmPeMappingAction, dpmGblCfgPSIDRT=dpmGblCfgPSIDRT, dpmGblCfgPSICAT=dpmGblCfgPSICAT, dpmAlignedPMTStreamTypeTxt=dpmAlignedPMTStreamTypeTxt, dpmAlignedPMTRow=dpmAlignedPMTRow, dpmGblCfgSVCIDOutput=dpmGblCfgSVCIDOutput, PYSNMP_MODULE_ID=ciscoDSGDPM, dpmTable=dpmTable, dpmGblCfgPSIPMT=dpmGblCfgPSIPMT, dpmGblCfgPSINIT=dpmGblCfgPSINIT, dpmPIDMapTable=dpmPIDMapTable, dpmGblCfgPSIEIT=dpmGblCfgPSIEIT, dpmPIDMapRow=dpmPIDMapRow, dpmPIDMapStreamCategory=dpmPIDMapStreamCategory, dpmGblCfgInstanceName=dpmGblCfgInstanceName, dpmGblCfgPSISDT=dpmGblCfgPSISDT, dpmPeMappingPEID=dpmPeMappingPEID, dpmPeMappingPMTPID=dpmPeMappingPMTPID, dpmPIDMapStreamInstance=dpmPIDMapStreamInstance, dpmGblCfgEntry=dpmGblCfgEntry, dpmPIDMapEntry=dpmPIDMapEntry, dpmGblCfgInstanceID=dpmGblCfgInstanceID, dpmGblCfgPSIRST=dpmGblCfgPSIRST, dpmPeMappingInstanceID=dpmPeMappingInstanceID, dpmPIDMapAction=dpmPIDMapAction, dpmGblCfgNITOffset=dpmGblCfgNITOffset, ciscoDSGDPM=ciscoDSGDPM, dpmPIDMapPEID=dpmPIDMapPEID, dpmGblCfgPSIEMM=dpmGblCfgPSIEMM, dpmGblCfgPSISIT=dpmGblCfgPSISIT, dpmGblCfgDupMethod=dpmGblCfgDupMethod, dpmGblCfgPSITSDT=dpmGblCfgPSITSDT, dpmGblCfgPSINITO=dpmGblCfgPSINITO, dpmAlignedPMTTable=dpmAlignedPMTTable, dpmAlignedPMTEntry=dpmAlignedPMTEntry, dpmGblCfgPSIBAT=dpmGblCfgPSIBAT, dpmPeMappingOpChannel=dpmPeMappingOpChannel, dpmPIDMapOutputPID=dpmPIDMapOutputPID, dpmGblCfgPSICDT=dpmGblCfgPSICDT, dpmGblCfgMapMode=dpmGblCfgMapMode, dpmGblCfgRegenRate=dpmGblCfgRegenRate, dpmInfo=dpmInfo, dpmRegenerate=dpmRegenerate, dpmGblCfgPSIPAT=dpmGblCfgPSIPAT, dpmGblCfgPSISDTO=dpmGblCfgPSISDTO, dpmGblCfgPSITOT=dpmGblCfgPSITOT, dpmPeMappingEntry=dpmPeMappingEntry, dpmPeMappingTable=dpmPeMappingTable, dpmGblCfgUnrefContent=dpmGblCfgUnrefContent, dpmPIDMapStreamType=dpmPIDMapStreamType, dpmGblCfgTable=dpmGblCfgTable)
