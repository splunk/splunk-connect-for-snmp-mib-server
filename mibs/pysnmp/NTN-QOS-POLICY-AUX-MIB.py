#
# PySNMP MIB module NTN-QOS-POLICY-AUX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NTN-QOS-POLICY-AUX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:15:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ntnQosIfParametersExt, = mibBuilder.importSymbols("NTN-QOS-POLICY-EXT-PIB", "ntnQosIfParametersExt")
PolicyInstanceId, RoleCombination = mibBuilder.importSymbols("POLICY-FRAMEWORK-PIB", "PolicyInstanceId", "RoleCombination")
qosTargetEntry, = mibBuilder.importSymbols("QOS-POLICY-IP-PIB", "qosTargetEntry")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter32, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, NotificationType, Counter64, ModuleIdentity, Gauge32, iso, TimeTicks, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "NotificationType", "Counter64", "ModuleIdentity", "Gauge32", "iso", "TimeTicks", "Unsigned32", "MibIdentifier")
TextualConvention, StorageType, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "StorageType", "RowStatus", "DisplayString", "TruthValue")
policy, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "policy")
ntnQosPolicyAuxMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 4, 5))
ntnQosPolicyAuxMib.setRevisions(('2004-07-20 00:00',))
if mibBuilder.loadTexts: ntnQosPolicyAuxMib.setLastUpdated('200407200000Z')
if mibBuilder.loadTexts: ntnQosPolicyAuxMib.setOrganization('Nortel Networks, Inc.')
ntnQosPolicyAuxObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 5, 1))
ntnQosPolicyAuxConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 5, 2))
ntnQosConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 1))
ntnQosStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2))
ntnQosConfigDynamicMgmt = MibScalar((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntnQosConfigDynamicMgmt.setStatus('current')
ntnQosConfigQpaState = MibScalar((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("initializing", 2), ("resetToDefault", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntnQosConfigQpaState.setStatus('current')
ntnQosConfigQpaRetryTimer = MibScalar((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 86400), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntnQosConfigQpaRetryTimer.setStatus('current')
ntnQosConfigAllowPacketReordering = MibScalar((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntnQosConfigAllowPacketReordering.setStatus('current')
ntnQosConfigMaintainPolicingStats = MibScalar((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntnQosConfigMaintainPolicingStats.setStatus('current')
ntnQosConfigIfcClassRestrictions = MibScalar((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unrestrictedOnly", 1), ("unrestrictedAndTrusted", 2), ("allowAllIfcClasses", 3))).clone('allowAllIfcClasses')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntnQosConfigIfcClassRestrictions.setStatus('current')
ntnQosConfigDefaultOutOfProfileAction = MibScalar((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 1, 7), PolicyInstanceId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntnQosConfigDefaultOutOfProfileAction.setStatus('current')
ntnQosConfigPolicyCfgRestrictionMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noPolicyRestrictions", 1), ("l3PolicyRestrictions", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntnQosConfigPolicyCfgRestrictionMode.setStatus('current')
ntnQosInterfaceIdTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 4, 1, 1, 4), )
if mibBuilder.loadTexts: ntnQosInterfaceIdTable.setStatus('current')
ntnQosInterfaceIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 4, 1, 1, 4, 1), ).setIndexNames((0, "NTN-QOS-POLICY-AUX-MIB", "ntnQosInterfaceIdIfIndex"))
if mibBuilder.loadTexts: ntnQosInterfaceIdEntry.setStatus('current')
ntnQosInterfaceIdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 4, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: ntnQosInterfaceIdIfIndex.setStatus('current')
ntnQosInterfaceIdRoleCombination = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 4, 1, 1, 4, 1, 2), RoleCombination()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntnQosInterfaceIdRoleCombination.setStatus('current')
ntnQosInterfaceIdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 4, 1, 1, 4, 1, 3), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntnQosInterfaceIdStorageType.setStatus('current')
ntnQosInterfaceIdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 4, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntnQosInterfaceIdStatus.setStatus('current')
ntnQosInterfaceIdQueueSet = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 4, 1, 1, 4, 1, 5), PolicyInstanceId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntnQosInterfaceIdQueueSet.setStatus('current')
ntnQosTargetStatsTable = MibTable((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1), )
if mibBuilder.loadTexts: ntnQosTargetStatsTable.setStatus('current')
ntnQosTargetStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1), )
qosTargetEntry.registerAugmentions(("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsEntry"))
ntnQosTargetStatsEntry.setIndexNames(*qosTargetEntry.getIndexNames())
if mibBuilder.loadTexts: ntnQosTargetStatsEntry.setStatus('current')
ntnQosTargetStatsPktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsPktHits.setStatus('current')
ntnQosTargetStatsOverflowPktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsOverflowPktHits.setStatus('current')
ntnQosTargetStatsHCPktHits = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsHCPktHits.setStatus('current')
ntnQosTargetStatsTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 4), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsTotalOctets.setStatus('current')
ntnQosTargetStatsTotalOverflowOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 5), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsTotalOverflowOctets.setStatus('current')
ntnQosTargetStatsTotalHCOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 6), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsTotalHCOctets.setStatus('current')
ntnQosTargetStatsInProfOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 7), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsInProfOctets.setStatus('current')
ntnQosTargetStatsInProfOverflowOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 8), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsInProfOverflowOctets.setStatus('current')
ntnQosTargetStatsInProfHCOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 9), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsInProfHCOctets.setStatus('current')
ntnQosTargetStatsOutProfOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 10), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsOutProfOctets.setStatus('current')
ntnQosTargetStatsOutProfOverflowOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 11), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsOutProfOverflowOctets.setStatus('current')
ntnQosTargetStatsOutProfHCOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 12), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsOutProfHCOctets.setStatus('current')
ntnQosTargetStatsTrackStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntnQosTargetStatsTrackStatistics.setStatus('current')
ntnQosTargetStatsShapingQDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsShapingQDrops.setStatus('current')
ntnQosTargetStatsOverflowShapingQDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsOverflowShapingQDrops.setStatus('current')
ntnQosTargetStatsHCShapingQDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 4, 5, 1, 2, 1, 1, 16), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntnQosTargetStatsHCShapingQDrops.setStatus('current')
ntnQosCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 5, 2, 1))
ntnQosGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 4, 5, 2, 2))
ntnQosCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 45, 4, 5, 2, 1, 1)).setObjects(("NTN-QOS-POLICY-AUX-MIB", "ntnQosConfigGroup"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosInterfaceIdGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntnQosCompliance = ntnQosCompliance.setStatus('current')
ntnQosConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 5, 2, 2, 1)).setObjects(("NTN-QOS-POLICY-AUX-MIB", "ntnQosConfigDynamicMgmt"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosConfigQpaState"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosConfigQpaRetryTimer"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosConfigAllowPacketReordering"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosConfigMaintainPolicingStats"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosConfigIfcClassRestrictions"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosConfigDefaultOutOfProfileAction"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosConfigPolicyCfgRestrictionMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntnQosConfigGroup = ntnQosConfigGroup.setStatus('current')
ntnQosInterfaceIdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 5, 2, 2, 2)).setObjects(("NTN-QOS-POLICY-AUX-MIB", "ntnQosInterfaceIdRoleCombination"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosInterfaceIdStorageType"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosInterfaceIdStatus"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosInterfaceIdQueueSet"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntnQosInterfaceIdGroup = ntnQosInterfaceIdGroup.setStatus('current')
ntnQosTargetStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 4, 5, 2, 2, 3)).setObjects(("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsPktHits"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsOverflowPktHits"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsHCPktHits"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsTotalOctets"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsTotalOverflowOctets"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsTotalHCOctets"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsInProfOctets"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsInProfOverflowOctets"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsInProfHCOctets"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsOutProfOctets"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsOutProfOverflowOctets"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsOutProfHCOctets"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsTrackStatistics"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsShapingQDrops"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsOverflowShapingQDrops"), ("NTN-QOS-POLICY-AUX-MIB", "ntnQosTargetStatsHCShapingQDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntnQosTargetStatsGroup = ntnQosTargetStatsGroup.setStatus('current')
mibBuilder.exportSymbols("NTN-QOS-POLICY-AUX-MIB", ntnQosTargetStatsOutProfHCOctets=ntnQosTargetStatsOutProfHCOctets, ntnQosStatistics=ntnQosStatistics, ntnQosConfigGroup=ntnQosConfigGroup, ntnQosTargetStatsOutProfOverflowOctets=ntnQosTargetStatsOutProfOverflowOctets, ntnQosTargetStatsInProfOctets=ntnQosTargetStatsInProfOctets, ntnQosPolicyAuxConformance=ntnQosPolicyAuxConformance, ntnQosInterfaceIdIfIndex=ntnQosInterfaceIdIfIndex, ntnQosTargetStatsHCPktHits=ntnQosTargetStatsHCPktHits, ntnQosConfigPolicyCfgRestrictionMode=ntnQosConfigPolicyCfgRestrictionMode, ntnQosTargetStatsPktHits=ntnQosTargetStatsPktHits, ntnQosTargetStatsOverflowShapingQDrops=ntnQosTargetStatsOverflowShapingQDrops, ntnQosTargetStatsShapingQDrops=ntnQosTargetStatsShapingQDrops, ntnQosTargetStatsTotalOverflowOctets=ntnQosTargetStatsTotalOverflowOctets, ntnQosInterfaceIdStorageType=ntnQosInterfaceIdStorageType, ntnQosConfigQpaState=ntnQosConfigQpaState, ntnQosPolicyAuxMib=ntnQosPolicyAuxMib, ntnQosInterfaceIdStatus=ntnQosInterfaceIdStatus, ntnQosInterfaceIdGroup=ntnQosInterfaceIdGroup, ntnQosTargetStatsOutProfOctets=ntnQosTargetStatsOutProfOctets, ntnQosTargetStatsHCShapingQDrops=ntnQosTargetStatsHCShapingQDrops, ntnQosTargetStatsInProfHCOctets=ntnQosTargetStatsInProfHCOctets, ntnQosConfigDynamicMgmt=ntnQosConfigDynamicMgmt, ntnQosTargetStatsTrackStatistics=ntnQosTargetStatsTrackStatistics, ntnQosTargetStatsTotalOctets=ntnQosTargetStatsTotalOctets, ntnQosTargetStatsOverflowPktHits=ntnQosTargetStatsOverflowPktHits, ntnQosConfigAllowPacketReordering=ntnQosConfigAllowPacketReordering, ntnQosConfigQpaRetryTimer=ntnQosConfigQpaRetryTimer, ntnQosTargetStatsInProfOverflowOctets=ntnQosTargetStatsInProfOverflowOctets, PYSNMP_MODULE_ID=ntnQosPolicyAuxMib, ntnQosPolicyAuxObjects=ntnQosPolicyAuxObjects, ntnQosTargetStatsEntry=ntnQosTargetStatsEntry, ntnQosInterfaceIdRoleCombination=ntnQosInterfaceIdRoleCombination, ntnQosConfig=ntnQosConfig, ntnQosConfigMaintainPolicingStats=ntnQosConfigMaintainPolicingStats, ntnQosInterfaceIdTable=ntnQosInterfaceIdTable, ntnQosTargetStatsTable=ntnQosTargetStatsTable, ntnQosConfigIfcClassRestrictions=ntnQosConfigIfcClassRestrictions, ntnQosTargetStatsGroup=ntnQosTargetStatsGroup, ntnQosCompliances=ntnQosCompliances, ntnQosGroups=ntnQosGroups, ntnQosInterfaceIdEntry=ntnQosInterfaceIdEntry, ntnQosInterfaceIdQueueSet=ntnQosInterfaceIdQueueSet, ntnQosCompliance=ntnQosCompliance, ntnQosConfigDefaultOutOfProfileAction=ntnQosConfigDefaultOutOfProfileAction, ntnQosTargetStatsTotalHCOctets=ntnQosTargetStatsTotalHCOctets)
