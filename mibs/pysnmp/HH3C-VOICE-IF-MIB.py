#
# PySNMP MIB module HH3C-VOICE-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-VOICE-IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
hh3cVoice, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cVoice")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, ObjectIdentity, IpAddress, TimeTicks, Counter64, MibIdentifier, NotificationType, iso, Counter32, Unsigned32, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "ObjectIdentity", "IpAddress", "TimeTicks", "Counter64", "MibIdentifier", "NotificationType", "iso", "Counter32", "Unsigned32", "Integer32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hh3cVoiceInterface = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13))
hh3cVoiceInterface.setRevisions(('2007-12-10 17:00',))
if mibBuilder.loadTexts: hh3cVoiceInterface.setLastUpdated('200712101700Z')
if mibBuilder.loadTexts: hh3cVoiceInterface.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cVoiceIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1))
hh3cVoiceIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1), )
if mibBuilder.loadTexts: hh3cVoiceIfConfigTable.setStatus('current')
hh3cVoiceIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cVoiceIfConfigEntry.setStatus('current')
hh3cVoiceIfCfgCngOn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgCngOn.setStatus('current')
hh3cVoiceIfCfgNonLinearSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgNonLinearSwitch.setStatus('current')
hh3cVoiceIfCfgInputGain = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-140, 139))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgInputGain.setStatus('current')
hh3cVoiceIfCfgOutputGain = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-140, 139))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgOutputGain.setStatus('current')
hh3cVoiceIfCfgEchoCancelSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgEchoCancelSwitch.setStatus('current')
hh3cVoiceIfCfgEchoCancelDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgEchoCancelDelay.setStatus('current')
hh3cVoiceIfCfgTimerDialInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgTimerDialInterval.setStatus('current')
hh3cVoiceIfCfgTimerFirstDial = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgTimerFirstDial.setStatus('current')
hh3cVoiceIfCfgPrivateline = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgPrivateline.setStatus('current')
hh3cVoiceIfCfgRegTone = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 39, 13, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVoiceIfCfgRegTone.setStatus('current')
mibBuilder.exportSymbols("HH3C-VOICE-IF-MIB", hh3cVoiceIfCfgOutputGain=hh3cVoiceIfCfgOutputGain, hh3cVoiceIfCfgTimerFirstDial=hh3cVoiceIfCfgTimerFirstDial, hh3cVoiceIfObjects=hh3cVoiceIfObjects, hh3cVoiceIfCfgInputGain=hh3cVoiceIfCfgInputGain, hh3cVoiceIfCfgTimerDialInterval=hh3cVoiceIfCfgTimerDialInterval, hh3cVoiceInterface=hh3cVoiceInterface, hh3cVoiceIfCfgEchoCancelDelay=hh3cVoiceIfCfgEchoCancelDelay, hh3cVoiceIfCfgCngOn=hh3cVoiceIfCfgCngOn, hh3cVoiceIfConfigTable=hh3cVoiceIfConfigTable, hh3cVoiceIfCfgRegTone=hh3cVoiceIfCfgRegTone, hh3cVoiceIfCfgPrivateline=hh3cVoiceIfCfgPrivateline, hh3cVoiceIfConfigEntry=hh3cVoiceIfConfigEntry, hh3cVoiceIfCfgEchoCancelSwitch=hh3cVoiceIfCfgEchoCancelSwitch, hh3cVoiceIfCfgNonLinearSwitch=hh3cVoiceIfCfgNonLinearSwitch, PYSNMP_MODULE_ID=hh3cVoiceInterface)
