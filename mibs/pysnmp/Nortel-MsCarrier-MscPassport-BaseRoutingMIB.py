#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-BaseRoutingMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-BaseRoutingMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
Gauge32, RowPointer, Integer32, Unsigned32, RowStatus, DisplayString, Counter32, StorageType = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Gauge32", "RowPointer", "Integer32", "Unsigned32", "RowStatus", "DisplayString", "Counter32", "StorageType")
FixedPoint1, AsciiStringIndex, DigitString, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "FixedPoint1", "AsciiStringIndex", "DigitString", "NonReplicated")
mscPassportMIBs, mscComponents = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs", "mscComponents")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, TimeTicks, Counter64, Gauge32, IpAddress, NotificationType, Integer32, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Counter64", "Gauge32", "IpAddress", "NotificationType", "Integer32", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "Bits", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
baseRoutingMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 18))
mscRtg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40))
mscRtgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 1), )
if mibBuilder.loadTexts: mscRtgRowStatusTable.setStatus('mandatory')
mscRtgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"))
if mibBuilder.loadTexts: mscRtgRowStatusEntry.setStatus('mandatory')
mscRtgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRowStatus.setStatus('mandatory')
mscRtgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgComponentName.setStatus('mandatory')
mscRtgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgStorageType.setStatus('mandatory')
mscRtgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscRtgIndex.setStatus('mandatory')
mscRtgProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 12), )
if mibBuilder.loadTexts: mscRtgProvTable.setStatus('mandatory')
mscRtgProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"))
if mibBuilder.loadTexts: mscRtgProvEntry.setStatus('mandatory')
mscRtgTandemTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("allowed", 0), ("denied", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgTandemTraffic.setStatus('mandatory')
mscRtgSplittingRegionIdsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 407), )
if mibBuilder.loadTexts: mscRtgSplittingRegionIdsTable.setStatus('mandatory')
mscRtgSplittingRegionIdsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 407, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgSplittingRegionIdsValue"))
if mibBuilder.loadTexts: mscRtgSplittingRegionIdsEntry.setStatus('mandatory')
mscRtgSplittingRegionIdsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 407, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgSplittingRegionIdsValue.setStatus('mandatory')
mscRtgSplittingRegionIdsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 407, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscRtgSplittingRegionIdsRowStatus.setStatus('mandatory')
mscRtgTop = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5))
mscRtgTopRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 1), )
if mibBuilder.loadTexts: mscRtgTopRowStatusTable.setStatus('mandatory')
mscRtgTopRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"))
if mibBuilder.loadTexts: mscRtgTopRowStatusEntry.setStatus('mandatory')
mscRtgTopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopRowStatus.setStatus('mandatory')
mscRtgTopComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopComponentName.setStatus('mandatory')
mscRtgTopStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopStorageType.setStatus('mandatory')
mscRtgTopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscRtgTopIndex.setStatus('mandatory')
mscRtgTopStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 11), )
if mibBuilder.loadTexts: mscRtgTopStatsTable.setStatus('mandatory')
mscRtgTopStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"))
if mibBuilder.loadTexts: mscRtgTopStatsEntry.setStatus('mandatory')
mscRtgTopControlPktRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopControlPktRx.setStatus('mandatory')
mscRtgTopControlBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopControlBytesRx.setStatus('mandatory')
mscRtgTopControlPktTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopControlPktTx.setStatus('mandatory')
mscRtgTopControlBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopControlBytesTx.setStatus('mandatory')
mscRtgTopNode = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2))
mscRtgTopNodeRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 1), )
if mibBuilder.loadTexts: mscRtgTopNodeRowStatusTable.setStatus('mandatory')
mscRtgTopNodeRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeIndex"))
if mibBuilder.loadTexts: mscRtgTopNodeRowStatusEntry.setStatus('mandatory')
mscRtgTopNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeRowStatus.setStatus('mandatory')
mscRtgTopNodeComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeComponentName.setStatus('mandatory')
mscRtgTopNodeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeStorageType.setStatus('mandatory')
mscRtgTopNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 12)))
if mibBuilder.loadTexts: mscRtgTopNodeIndex.setStatus('mandatory')
mscRtgTopNodeOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 10), )
if mibBuilder.loadTexts: mscRtgTopNodeOperTable.setStatus('mandatory')
mscRtgTopNodeOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeIndex"))
if mibBuilder.loadTexts: mscRtgTopNodeOperEntry.setStatus('mandatory')
mscRtgTopNodeNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeNodeId.setStatus('mandatory')
mscRtgTopNodeLg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2))
mscRtgTopNodeLgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 1), )
if mibBuilder.loadTexts: mscRtgTopNodeLgRowStatusTable.setStatus('mandatory')
mscRtgTopNodeLgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgIndex"))
if mibBuilder.loadTexts: mscRtgTopNodeLgRowStatusEntry.setStatus('mandatory')
mscRtgTopNodeLgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgRowStatus.setStatus('mandatory')
mscRtgTopNodeLgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgComponentName.setStatus('mandatory')
mscRtgTopNodeLgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgStorageType.setStatus('mandatory')
mscRtgTopNodeLgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 12)))
if mibBuilder.loadTexts: mscRtgTopNodeLgIndex.setStatus('mandatory')
mscRtgTopNodeLgOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 10), )
if mibBuilder.loadTexts: mscRtgTopNodeLgOperTable.setStatus('mandatory')
mscRtgTopNodeLgOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgIndex"))
if mibBuilder.loadTexts: mscRtgTopNodeLgOperEntry.setStatus('mandatory')
mscRtgTopNodeLgDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgDelayMetric.setStatus('mandatory')
mscRtgTopNodeLgTputMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTputMetric.setStatus('mandatory')
mscRtgTopNodeLgLnnTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 235), )
if mibBuilder.loadTexts: mscRtgTopNodeLgLnnTable.setStatus('mandatory')
mscRtgTopNodeLgLnnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 235, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgLnnValue"))
if mibBuilder.loadTexts: mscRtgTopNodeLgLnnEntry.setStatus('mandatory')
mscRtgTopNodeLgLnnValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 235, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgLnnValue.setStatus('mandatory')
mscRtgTopNodeLgTrkObj = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2))
mscRtgTopNodeLgTrkObjRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 1), )
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjRowStatusTable.setStatus('mandatory')
mscRtgTopNodeLgTrkObjRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgTrkObjIndex"))
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjRowStatusEntry.setStatus('mandatory')
mscRtgTopNodeLgTrkObjRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjRowStatus.setStatus('mandatory')
mscRtgTopNodeLgTrkObjComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjComponentName.setStatus('mandatory')
mscRtgTopNodeLgTrkObjStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjStorageType.setStatus('mandatory')
mscRtgTopNodeLgTrkObjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)))
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjIndex.setStatus('mandatory')
mscRtgTopNodeLgTrkObjOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10), )
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjOperTable.setStatus('mandatory')
mscRtgTopNodeLgTrkObjOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgTrkObjIndex"))
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjOperEntry.setStatus('mandatory')
mscRtgTopNodeLgTrkObjMaxReservableBwOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjMaxReservableBwOut.setStatus('mandatory')
mscRtgTopNodeLgTrkObjTrunkCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjTrunkCost.setStatus('mandatory')
mscRtgTopNodeLgTrkObjTrunkDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjTrunkDelay.setStatus('mandatory')
mscRtgTopNodeLgTrkObjTrunkSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjTrunkSecurity.setStatus('mandatory')
mscRtgTopNodeLgTrkObjSupportedTrafficTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjSupportedTrafficTypes.setStatus('mandatory')
mscRtgTopNodeLgTrkObjTrunkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("terrestrial", 0), ("satellite", 1), ("trunkType1", 2), ("trunkType2", 3), ("trunkType3", 4), ("trunkType4", 5), ("trunkType5", 6), ("trunkType6", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjTrunkType.setStatus('mandatory')
mscRtgTopNodeLgTrkObjCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjCustomerParameter.setStatus('mandatory')
mscRtgTopNodeLgTrkObjFarEndTrmLkInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjFarEndTrmLkInstance.setStatus('mandatory')
mscRtgTopNodeLgTrkObjUnresTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 234), )
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjUnresTable.setStatus('mandatory')
mscRtgTopNodeLgTrkObjUnresEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 234, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgTrkObjIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgTrkObjUnresSetupPriorityIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex"))
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjUnresEntry.setStatus('mandatory')
mscRtgTopNodeLgTrkObjUnresSetupPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 234, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("bwPartOver255", 0))))
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjUnresSetupPriorityIndex.setStatus('mandatory')
mscRtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 234, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex.setStatus('mandatory')
mscRtgTopNodeLgTrkObjUnresValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 5, 2, 2, 2, 234, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgTopNodeLgTrkObjUnresValue.setStatus('mandatory')
mscTrm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41))
mscTrmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 1), )
if mibBuilder.loadTexts: mscTrmRowStatusTable.setStatus('mandatory')
mscTrmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"))
if mibBuilder.loadTexts: mscTrmRowStatusEntry.setStatus('mandatory')
mscTrmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmRowStatus.setStatus('mandatory')
mscTrmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmComponentName.setStatus('mandatory')
mscTrmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmStorageType.setStatus('mandatory')
mscTrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTrmIndex.setStatus('mandatory')
mscTrmLk = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2))
mscTrmLkRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 1), )
if mibBuilder.loadTexts: mscTrmLkRowStatusTable.setStatus('mandatory')
mscTrmLkRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLkIndex"))
if mibBuilder.loadTexts: mscTrmLkRowStatusEntry.setStatus('mandatory')
mscTrmLkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkRowStatus.setStatus('mandatory')
mscTrmLkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkComponentName.setStatus('mandatory')
mscTrmLkStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkStorageType.setStatus('mandatory')
mscTrmLkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)))
if mibBuilder.loadTexts: mscTrmLkIndex.setStatus('mandatory')
mscTrmLkOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 10), )
if mibBuilder.loadTexts: mscTrmLkOperTable.setStatus('mandatory')
mscTrmLkOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLkIndex"))
if mibBuilder.loadTexts: mscTrmLkOperEntry.setStatus('mandatory')
mscTrmLkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("joining", 2), ("online", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkStatus.setStatus('mandatory')
mscTrmLkThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 640000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkThroughput.setStatus('mandatory')
mscTrmLkDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 10, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkDelay.setStatus('obsolete')
mscTrmLkMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkMaxTxUnit.setStatus('mandatory')
mscTrmLkLinkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 10, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkLinkComponentName.setStatus('mandatory')
mscTrmLkDelayUsec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 10, 1, 6), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(10, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkDelayUsec.setStatus('mandatory')
mscTrmLkFwdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 11), )
if mibBuilder.loadTexts: mscTrmLkFwdStatsTable.setStatus('mandatory')
mscTrmLkFwdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLkIndex"))
if mibBuilder.loadTexts: mscTrmLkFwdStatsEntry.setStatus('mandatory')
mscTrmLkFciSet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkFciSet.setStatus('mandatory')
mscTrmLkOverflowAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkOverflowAttempts.setStatus('mandatory')
mscTrmLkPathOverflowAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkPathOverflowAttempts.setStatus('mandatory')
mscTrmLkDiscardCongestedTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 280), )
if mibBuilder.loadTexts: mscTrmLkDiscardCongestedTable.setStatus('mandatory')
mscTrmLkDiscardCongestedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 280, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLkIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLkDiscardCongestedIndex"))
if mibBuilder.loadTexts: mscTrmLkDiscardCongestedEntry.setStatus('mandatory')
mscTrmLkDiscardCongestedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 280, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("discardPriority1", 0), ("discardPriority2", 1), ("discardPriority3", 2))))
if mibBuilder.loadTexts: mscTrmLkDiscardCongestedIndex.setStatus('mandatory')
mscTrmLkDiscardCongestedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 2, 280, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLkDiscardCongestedValue.setStatus('mandatory')
mscTrmLg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3))
mscTrmLgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 1), )
if mibBuilder.loadTexts: mscTrmLgRowStatusTable.setStatus('mandatory')
mscTrmLgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgIndex"))
if mibBuilder.loadTexts: mscTrmLgRowStatusEntry.setStatus('mandatory')
mscTrmLgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgRowStatus.setStatus('mandatory')
mscTrmLgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgComponentName.setStatus('mandatory')
mscTrmLgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgStorageType.setStatus('mandatory')
mscTrmLgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 12)))
if mibBuilder.loadTexts: mscTrmLgIndex.setStatus('mandatory')
mscTrmLgLk = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2))
mscTrmLgLkRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 1), )
if mibBuilder.loadTexts: mscTrmLgLkRowStatusTable.setStatus('mandatory')
mscTrmLgLkRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgLkIndex"))
if mibBuilder.loadTexts: mscTrmLgLkRowStatusEntry.setStatus('mandatory')
mscTrmLgLkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkRowStatus.setStatus('mandatory')
mscTrmLgLkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkComponentName.setStatus('mandatory')
mscTrmLgLkStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkStorageType.setStatus('mandatory')
mscTrmLgLkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)))
if mibBuilder.loadTexts: mscTrmLgLkIndex.setStatus('mandatory')
mscTrmLgLkOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 10), )
if mibBuilder.loadTexts: mscTrmLgLkOperTable.setStatus('mandatory')
mscTrmLgLkOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgLkIndex"))
if mibBuilder.loadTexts: mscTrmLgLkOperEntry.setStatus('mandatory')
mscTrmLgLkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("joining", 2), ("online", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkStatus.setStatus('mandatory')
mscTrmLgLkThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 640000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkThroughput.setStatus('mandatory')
mscTrmLgLkDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 10, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkDelay.setStatus('obsolete')
mscTrmLgLkMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkMaxTxUnit.setStatus('mandatory')
mscTrmLgLkLinkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 10, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkLinkComponentName.setStatus('mandatory')
mscTrmLgLkDelayUsec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 10, 1, 6), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(10, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkDelayUsec.setStatus('mandatory')
mscTrmLgLkFwdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 11), )
if mibBuilder.loadTexts: mscTrmLgLkFwdStatsTable.setStatus('mandatory')
mscTrmLgLkFwdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgLkIndex"))
if mibBuilder.loadTexts: mscTrmLgLkFwdStatsEntry.setStatus('mandatory')
mscTrmLgLkFciSet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkFciSet.setStatus('mandatory')
mscTrmLgLkOverflowAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkOverflowAttempts.setStatus('mandatory')
mscTrmLgLkPathOverflowAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkPathOverflowAttempts.setStatus('mandatory')
mscTrmLgLkDiscardCongestedTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 280), )
if mibBuilder.loadTexts: mscTrmLgLkDiscardCongestedTable.setStatus('mandatory')
mscTrmLgLkDiscardCongestedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 280, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgLkIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgLkDiscardCongestedIndex"))
if mibBuilder.loadTexts: mscTrmLgLkDiscardCongestedEntry.setStatus('mandatory')
mscTrmLgLkDiscardCongestedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 280, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("discardPriority1", 0), ("discardPriority2", 1), ("discardPriority3", 2))))
if mibBuilder.loadTexts: mscTrmLgLkDiscardCongestedIndex.setStatus('mandatory')
mscTrmLgLkDiscardCongestedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 2, 280, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLkDiscardCongestedValue.setStatus('mandatory')
mscTrmLgLNN = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3))
mscTrmLgLNNRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 1), )
if mibBuilder.loadTexts: mscTrmLgLNNRowStatusTable.setStatus('mandatory')
mscTrmLgLNNRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgLNNIndex"))
if mibBuilder.loadTexts: mscTrmLgLNNRowStatusEntry.setStatus('mandatory')
mscTrmLgLNNRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLNNRowStatus.setStatus('mandatory')
mscTrmLgLNNComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLNNComponentName.setStatus('mandatory')
mscTrmLgLNNStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLNNStorageType.setStatus('mandatory')
mscTrmLgLNNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047)))
if mibBuilder.loadTexts: mscTrmLgLNNIndex.setStatus('mandatory')
mscTrmLgLNNOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 10), )
if mibBuilder.loadTexts: mscTrmLgLNNOperTable.setStatus('mandatory')
mscTrmLgLNNOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscTrmLgLNNIndex"))
if mibBuilder.loadTexts: mscTrmLgLNNOperEntry.setStatus('mandatory')
mscTrmLgLNNLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("trunk", 0), ("internalGateway", 1), ("externalGateway", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLNNLinkType.setStatus('mandatory')
mscTrmLgLNNAddressPlanComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 41, 3, 3, 10, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrmLgLNNAddressPlanComponentName.setStatus('mandatory')
mscNpi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43))
mscNpiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 1), )
if mibBuilder.loadTexts: mscNpiRowStatusTable.setStatus('mandatory')
mscNpiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscNpiIndex"))
if mibBuilder.loadTexts: mscNpiRowStatusEntry.setStatus('mandatory')
mscNpiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscNpiRowStatus.setStatus('mandatory')
mscNpiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscNpiComponentName.setStatus('mandatory')
mscNpiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscNpiStorageType.setStatus('mandatory')
mscNpiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))))
if mibBuilder.loadTexts: mscNpiIndex.setStatus('mandatory')
mscNpiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 10), )
if mibBuilder.loadTexts: mscNpiStatsTable.setStatus('mandatory')
mscNpiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscNpiIndex"))
if mibBuilder.loadTexts: mscNpiStatsEntry.setStatus('mandatory')
mscNpiTotalDnas = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscNpiTotalDnas.setStatus('mandatory')
mscNpiDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2))
mscNpiDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2, 1), )
if mibBuilder.loadTexts: mscNpiDnaRowStatusTable.setStatus('mandatory')
mscNpiDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscNpiIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscNpiDnaIndex"))
if mibBuilder.loadTexts: mscNpiDnaRowStatusEntry.setStatus('mandatory')
mscNpiDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscNpiDnaRowStatus.setStatus('mandatory')
mscNpiDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscNpiDnaComponentName.setStatus('mandatory')
mscNpiDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscNpiDnaStorageType.setStatus('mandatory')
mscNpiDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2, 1, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: mscNpiDnaIndex.setStatus('mandatory')
mscNpiDnaInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2, 10), )
if mibBuilder.loadTexts: mscNpiDnaInfoTable.setStatus('mandatory')
mscNpiDnaInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscNpiIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscNpiDnaIndex"))
if mibBuilder.loadTexts: mscNpiDnaInfoEntry.setStatus('mandatory')
mscNpiDnaDestinationName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 43, 2, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscNpiDnaDestinationName.setStatus('mandatory')
baseRoutingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 18, 1))
baseRoutingGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 18, 1, 1))
baseRoutingGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 18, 1, 1, 3))
baseRoutingGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 18, 1, 1, 3, 2))
baseRoutingCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 18, 3))
baseRoutingCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 18, 3, 1))
baseRoutingCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 18, 3, 1, 3))
baseRoutingCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 18, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BaseRoutingMIB", mscTrmLgLNNOperEntry=mscTrmLgLNNOperEntry, mscRtgTopNodeLgTrkObjRowStatusTable=mscRtgTopNodeLgTrkObjRowStatusTable, mscNpiDnaRowStatusEntry=mscNpiDnaRowStatusEntry, baseRoutingGroupCA02=baseRoutingGroupCA02, mscTrmIndex=mscTrmIndex, mscRtgTopNodeLgTrkObjIndex=mscRtgTopNodeLgTrkObjIndex, mscTrmLgRowStatusTable=mscTrmLgRowStatusTable, mscRtgTopNodeLgRowStatusTable=mscRtgTopNodeLgRowStatusTable, mscNpiDnaIndex=mscNpiDnaIndex, mscRtgRowStatus=mscRtgRowStatus, baseRoutingGroup=baseRoutingGroup, mscNpiStatsEntry=mscNpiStatsEntry, mscRtgTopNodeLgIndex=mscRtgTopNodeLgIndex, mscRtgTopNodeLgTrkObj=mscRtgTopNodeLgTrkObj, mscNpiStatsTable=mscNpiStatsTable, mscTrmLgLNNIndex=mscTrmLgLNNIndex, mscTrmLgLkDiscardCongestedIndex=mscTrmLgLkDiscardCongestedIndex, mscNpiStorageType=mscNpiStorageType, mscRtgTandemTraffic=mscRtgTandemTraffic, mscTrmLgLkPathOverflowAttempts=mscTrmLgLkPathOverflowAttempts, mscRtgTopNodeLgLnnTable=mscRtgTopNodeLgLnnTable, mscRtgTopNodeLgTrkObjOperTable=mscRtgTopNodeLgTrkObjOperTable, mscTrmLgLkDiscardCongestedValue=mscTrmLgLkDiscardCongestedValue, mscNpiDnaStorageType=mscNpiDnaStorageType, mscTrmLgLkDiscardCongestedTable=mscTrmLgLkDiscardCongestedTable, mscRtgSplittingRegionIdsTable=mscRtgSplittingRegionIdsTable, mscRtgTopNodeRowStatus=mscRtgTopNodeRowStatus, mscRtgTopNodeLgRowStatusEntry=mscRtgTopNodeLgRowStatusEntry, mscRtgTopNodeLgRowStatus=mscRtgTopNodeLgRowStatus, mscRtgTopNodeLgTrkObjFarEndTrmLkInstance=mscRtgTopNodeLgTrkObjFarEndTrmLkInstance, mscTrmLgLkStatus=mscTrmLgLkStatus, mscTrmLkFwdStatsEntry=mscTrmLkFwdStatsEntry, mscTrmLkOperEntry=mscTrmLkOperEntry, mscTrmLkStorageType=mscTrmLkStorageType, mscTrmLgLkIndex=mscTrmLgLkIndex, mscRtgStorageType=mscRtgStorageType, baseRoutingGroupCA02A=baseRoutingGroupCA02A, mscRtgTopNodeLgOperEntry=mscRtgTopNodeLgOperEntry, mscRtgProvEntry=mscRtgProvEntry, mscRtgTopNodeLgTrkObjSupportedTrafficTypes=mscRtgTopNodeLgTrkObjSupportedTrafficTypes, baseRoutingCapabilitiesCA02=baseRoutingCapabilitiesCA02, mscRtgTopNodeLg=mscRtgTopNodeLg, mscTrmLgLNNOperTable=mscTrmLgLNNOperTable, mscRtgSplittingRegionIdsValue=mscRtgSplittingRegionIdsValue, mscTrmLkPathOverflowAttempts=mscTrmLkPathOverflowAttempts, mscRtgSplittingRegionIdsEntry=mscRtgSplittingRegionIdsEntry, mscRtgTopComponentName=mscRtgTopComponentName, mscRtgTopControlPktTx=mscRtgTopControlPktTx, mscRtgTopNodeLgTrkObjTrunkType=mscRtgTopNodeLgTrkObjTrunkType, mscNpiDnaInfoEntry=mscNpiDnaInfoEntry, mscRtgTopStatsTable=mscRtgTopStatsTable, mscRtgTop=mscRtgTop, mscRtgTopNodeLgLnnEntry=mscRtgTopNodeLgLnnEntry, mscTrmLgRowStatusEntry=mscTrmLgRowStatusEntry, mscRtgTopNodeLgTrkObjUnresValue=mscRtgTopNodeLgTrkObjUnresValue, mscTrmRowStatusEntry=mscTrmRowStatusEntry, mscTrmComponentName=mscTrmComponentName, mscRtgTopNodeLgTrkObjComponentName=mscRtgTopNodeLgTrkObjComponentName, mscTrmLkDiscardCongestedEntry=mscTrmLkDiscardCongestedEntry, mscNpiIndex=mscNpiIndex, mscRtgTopNodeLgLnnValue=mscRtgTopNodeLgLnnValue, mscRtgTopNodeLgTrkObjTrunkDelay=mscRtgTopNodeLgTrkObjTrunkDelay, mscTrmStorageType=mscTrmStorageType, mscTrmLkDiscardCongestedTable=mscTrmLkDiscardCongestedTable, mscRtgTopRowStatus=mscRtgTopRowStatus, mscRtgIndex=mscRtgIndex, mscTrm=mscTrm, mscRtgTopNodeLgOperTable=mscRtgTopNodeLgOperTable, mscRtgTopNodeLgDelayMetric=mscRtgTopNodeLgDelayMetric, mscTrmLgLNNRowStatusTable=mscTrmLgLNNRowStatusTable, mscRtgRowStatusTable=mscRtgRowStatusTable, baseRoutingCapabilitiesCA=baseRoutingCapabilitiesCA, mscTrmLgRowStatus=mscTrmLgRowStatus, mscNpiComponentName=mscNpiComponentName, mscNpiTotalDnas=mscNpiTotalDnas, mscRtgProvTable=mscRtgProvTable, mscTrmLkStatus=mscTrmLkStatus, mscRtgTopNodeIndex=mscRtgTopNodeIndex, mscNpiRowStatus=mscNpiRowStatus, mscTrmLgLkFwdStatsTable=mscTrmLgLkFwdStatsTable, mscTrmLgLNNLinkType=mscTrmLgLNNLinkType, mscRtgTopNodeLgTrkObjUnresEntry=mscRtgTopNodeLgTrkObjUnresEntry, mscTrmLgLNN=mscTrmLgLNN, mscTrmLgIndex=mscTrmLgIndex, mscTrmLgStorageType=mscTrmLgStorageType, mscTrmLgLNNComponentName=mscTrmLgLNNComponentName, mscTrmLkThroughput=mscTrmLkThroughput, mscRtgRowStatusEntry=mscRtgRowStatusEntry, mscRtgTopNodeOperTable=mscRtgTopNodeOperTable, mscTrmLkOverflowAttempts=mscTrmLkOverflowAttempts, mscRtgTopNodeLgTrkObjTrunkSecurity=mscRtgTopNodeLgTrkObjTrunkSecurity, mscRtgTopStatsEntry=mscRtgTopStatsEntry, mscRtgTopNodeRowStatusEntry=mscRtgTopNodeRowStatusEntry, mscRtgTopNodeLgTrkObjCustomerParameter=mscRtgTopNodeLgTrkObjCustomerParameter, mscNpiRowStatusEntry=mscNpiRowStatusEntry, mscRtgTopIndex=mscRtgTopIndex, mscRtgTopNode=mscRtgTopNode, mscNpiDna=mscNpiDna, mscTrmLgLNNStorageType=mscTrmLgLNNStorageType, mscTrmLkOperTable=mscTrmLkOperTable, mscTrmLgLkFwdStatsEntry=mscTrmLgLkFwdStatsEntry, mscTrmLgLkDelayUsec=mscTrmLgLkDelayUsec, mscNpiDnaRowStatus=mscNpiDnaRowStatus, mscRtgTopNodeLgTrkObjMaxReservableBwOut=mscRtgTopNodeLgTrkObjMaxReservableBwOut, mscNpi=mscNpi, mscRtgTopRowStatusTable=mscRtgTopRowStatusTable, mscRtgTopRowStatusEntry=mscRtgTopRowStatusEntry, mscTrmLkFwdStatsTable=mscTrmLkFwdStatsTable, mscRtgTopNodeLgTrkObjUnresSetupPriorityIndex=mscRtgTopNodeLgTrkObjUnresSetupPriorityIndex, mscNpiDnaRowStatusTable=mscNpiDnaRowStatusTable, mscRtgTopNodeStorageType=mscRtgTopNodeStorageType, mscNpiDnaComponentName=mscNpiDnaComponentName, mscTrmLgLkDelay=mscTrmLgLkDelay, mscTrmLgLNNRowStatusEntry=mscTrmLgLNNRowStatusEntry, mscTrmLgLkRowStatusEntry=mscTrmLgLkRowStatusEntry, mscTrmLkComponentName=mscTrmLkComponentName, baseRoutingCapabilities=baseRoutingCapabilities, mscRtgTopStorageType=mscRtgTopStorageType, mscTrmLkDelayUsec=mscTrmLkDelayUsec, mscRtgTopNodeLgTrkObjUnresTable=mscRtgTopNodeLgTrkObjUnresTable, mscTrmLgComponentName=mscTrmLgComponentName, mscTrmLkIndex=mscTrmLkIndex, mscRtgSplittingRegionIdsRowStatus=mscRtgSplittingRegionIdsRowStatus, mscTrmLgLNNRowStatus=mscTrmLgLNNRowStatus, mscRtgTopNodeLgComponentName=mscRtgTopNodeLgComponentName, mscRtgTopNodeLgTrkObjStorageType=mscRtgTopNodeLgTrkObjStorageType, mscRtgTopControlBytesTx=mscRtgTopControlBytesTx, mscRtgTopNodeLgStorageType=mscRtgTopNodeLgStorageType, mscTrmLkDelay=mscTrmLkDelay, mscTrmLgLkOverflowAttempts=mscTrmLgLkOverflowAttempts, mscTrmLgLkOperEntry=mscTrmLgLkOperEntry, mscTrmRowStatusTable=mscTrmRowStatusTable, mscRtgTopNodeLgTrkObjRowStatus=mscRtgTopNodeLgTrkObjRowStatus, mscRtgTopControlPktRx=mscRtgTopControlPktRx, mscRtgTopNodeNodeId=mscRtgTopNodeNodeId, mscTrmLgLk=mscTrmLgLk, mscTrmLkFciSet=mscTrmLkFciSet, mscTrmLgLkComponentName=mscTrmLgLkComponentName, mscRtgTopNodeLgTputMetric=mscRtgTopNodeLgTputMetric, mscTrmLkRowStatusEntry=mscTrmLkRowStatusEntry, mscRtgComponentName=mscRtgComponentName, mscTrmRowStatus=mscTrmRowStatus, mscRtg=mscRtg, mscTrmLgLkRowStatusTable=mscTrmLgLkRowStatusTable, mscRtgTopNodeLgTrkObjTrunkCost=mscRtgTopNodeLgTrkObjTrunkCost, mscTrmLgLkFciSet=mscTrmLgLkFciSet, mscRtgTopControlBytesRx=mscRtgTopControlBytesRx, mscTrmLgLkLinkComponentName=mscTrmLgLkLinkComponentName, mscRtgTopNodeLgTrkObjOperEntry=mscRtgTopNodeLgTrkObjOperEntry, mscTrmLk=mscTrmLk, mscRtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex=mscRtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex, baseRoutingCapabilitiesCA02A=baseRoutingCapabilitiesCA02A, mscRtgTopNodeOperEntry=mscRtgTopNodeOperEntry, mscTrmLgLkRowStatus=mscTrmLgLkRowStatus, mscNpiDnaDestinationName=mscNpiDnaDestinationName, mscNpiDnaInfoTable=mscNpiDnaInfoTable, mscTrmLgLkOperTable=mscTrmLgLkOperTable, mscRtgTopNodeComponentName=mscRtgTopNodeComponentName, mscTrmLgLkStorageType=mscTrmLgLkStorageType, mscTrmLkLinkComponentName=mscTrmLkLinkComponentName, mscTrmLgLkMaxTxUnit=mscTrmLgLkMaxTxUnit, mscRtgTopNodeRowStatusTable=mscRtgTopNodeRowStatusTable, mscRtgTopNodeLgTrkObjRowStatusEntry=mscRtgTopNodeLgTrkObjRowStatusEntry, mscTrmLkRowStatus=mscTrmLkRowStatus, mscNpiRowStatusTable=mscNpiRowStatusTable, baseRoutingGroupCA=baseRoutingGroupCA, mscTrmLkRowStatusTable=mscTrmLkRowStatusTable, mscTrmLgLkThroughput=mscTrmLgLkThroughput, mscTrmLkMaxTxUnit=mscTrmLkMaxTxUnit, mscTrmLkDiscardCongestedValue=mscTrmLkDiscardCongestedValue, mscTrmLg=mscTrmLg, mscTrmLgLNNAddressPlanComponentName=mscTrmLgLNNAddressPlanComponentName, mscTrmLgLkDiscardCongestedEntry=mscTrmLgLkDiscardCongestedEntry, baseRoutingMIB=baseRoutingMIB, mscTrmLkDiscardCongestedIndex=mscTrmLkDiscardCongestedIndex)
