#
# PySNMP MIB module AC-PM-SS7-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AC-PM-SS7-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:54:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
acRegistrations, acBoardMibs, acProducts, acPerformance, audioCodes, acGeneric = mibBuilder.importSymbols("AUDIOCODES-TYPES-MIB", "acRegistrations", "acBoardMibs", "acProducts", "acPerformance", "audioCodes", "acGeneric")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Integer32, Counter32, TimeTicks, Bits, IpAddress, MibIdentifier, Unsigned32, enterprises, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "Counter32", "TimeTicks", "Bits", "IpAddress", "MibIdentifier", "Unsigned32", "enterprises", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "ModuleIdentity", "ObjectIdentity")
DateAndTime, TextualConvention, TAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "TAddress", "DisplayString")
acPMSS7 = ModuleIdentity((1, 3, 6, 1, 4, 1, 5003, 10, 13))
if mibBuilder.loadTexts: acPMSS7.setLastUpdated('200909231811Z')
if mibBuilder.loadTexts: acPMSS7.setOrganization('AudioCodes Ltd')
acPMSS7Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 13, 1))
acPMSS7ConfigurationPeriodLength = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 894780))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMSS7ConfigurationPeriodLength.setStatus('current')
acPMSS7ConfigurationResetTotalCounters = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("resetCountersDone", 1), ("resetTotalCounters", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMSS7ConfigurationResetTotalCounters.setStatus('current')
acPMSS7Data = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2))
acPMSS7DataTimeFromStartOfInterval = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7DataTimeFromStartOfInterval.setStatus('current')
acPMSS7Links = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31))
acPMSS7TxMSUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 1), )
if mibBuilder.loadTexts: acPMSS7TxMSUTable.setStatus('current')
acPMSS7TxMSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 1, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7TxMSULink"), (0, "AC-PM-SS7-MIB", "acPMSS7TxMSUInterval"))
if mibBuilder.loadTexts: acPMSS7TxMSUEntry.setStatus('current')
acPMSS7TxMSULink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7TxMSULink.setStatus('current')
acPMSS7TxMSUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxMSUInterval.setStatus('current')
acPMSS7TxMSUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxMSUVal.setStatus('current')
acPMSS7TxMSUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxMSUTotal.setStatus('current')
acPMSS7RxMSUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 2), )
if mibBuilder.loadTexts: acPMSS7RxMSUTable.setStatus('current')
acPMSS7RxMSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 2, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7RxMSULink"), (0, "AC-PM-SS7-MIB", "acPMSS7RxMSUInterval"))
if mibBuilder.loadTexts: acPMSS7RxMSUEntry.setStatus('current')
acPMSS7RxMSULink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7RxMSULink.setStatus('current')
acPMSS7RxMSUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxMSUInterval.setStatus('current')
acPMSS7RxMSUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMSUVal.setStatus('current')
acPMSS7RxMSUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMSUTotal.setStatus('current')
acPMSS7TxLSSUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 3), )
if mibBuilder.loadTexts: acPMSS7TxLSSUTable.setStatus('current')
acPMSS7TxLSSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 3, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7TxLSSULink"), (0, "AC-PM-SS7-MIB", "acPMSS7TxLSSUInterval"))
if mibBuilder.loadTexts: acPMSS7TxLSSUEntry.setStatus('current')
acPMSS7TxLSSULink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7TxLSSULink.setStatus('current')
acPMSS7TxLSSUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxLSSUInterval.setStatus('current')
acPMSS7TxLSSUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxLSSUVal.setStatus('current')
acPMSS7TxLSSUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxLSSUTotal.setStatus('current')
acPMSS7RxLSSUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 4), )
if mibBuilder.loadTexts: acPMSS7RxLSSUTable.setStatus('current')
acPMSS7RxLSSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 4, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7RxLSSULink"), (0, "AC-PM-SS7-MIB", "acPMSS7RxLSSUInterval"))
if mibBuilder.loadTexts: acPMSS7RxLSSUEntry.setStatus('current')
acPMSS7RxLSSULink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7RxLSSULink.setStatus('current')
acPMSS7RxLSSUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxLSSUInterval.setStatus('current')
acPMSS7RxLSSUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxLSSUVal.setStatus('current')
acPMSS7RxLSSUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxLSSUTotal.setStatus('current')
acPMSS7TxFISUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 5), )
if mibBuilder.loadTexts: acPMSS7TxFISUTable.setStatus('current')
acPMSS7TxFISUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 5, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7TxFISULink"), (0, "AC-PM-SS7-MIB", "acPMSS7TxFISUInterval"))
if mibBuilder.loadTexts: acPMSS7TxFISUEntry.setStatus('current')
acPMSS7TxFISULink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7TxFISULink.setStatus('current')
acPMSS7TxFISUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxFISUInterval.setStatus('current')
acPMSS7TxFISUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxFISUVal.setStatus('current')
acPMSS7TxFISUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxFISUTotal.setStatus('current')
acPMSS7RxFISUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 6), )
if mibBuilder.loadTexts: acPMSS7RxFISUTable.setStatus('current')
acPMSS7RxFISUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 6, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7RxFISULink"), (0, "AC-PM-SS7-MIB", "acPMSS7RxFISUInterval"))
if mibBuilder.loadTexts: acPMSS7RxFISUEntry.setStatus('current')
acPMSS7RxFISULink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7RxFISULink.setStatus('current')
acPMSS7RxFISUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxFISUInterval.setStatus('current')
acPMSS7RxFISUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxFISUVal.setStatus('current')
acPMSS7RxFISUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxFISUTotal.setStatus('current')
acPMSS7TxSignalUnitsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 7), )
if mibBuilder.loadTexts: acPMSS7TxSignalUnitsTable.setStatus('current')
acPMSS7TxSignalUnitsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 7, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7TxSignalUnitsLink"), (0, "AC-PM-SS7-MIB", "acPMSS7TxSignalUnitsInterval"))
if mibBuilder.loadTexts: acPMSS7TxSignalUnitsEntry.setStatus('current')
acPMSS7TxSignalUnitsLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7TxSignalUnitsLink.setStatus('current')
acPMSS7TxSignalUnitsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxSignalUnitsInterval.setStatus('current')
acPMSS7TxSignalUnitsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxSignalUnitsVal.setStatus('current')
acPMSS7TxSignalUnitsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxSignalUnitsTotal.setStatus('current')
acPMSS7RxSignalUnitsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 8), )
if mibBuilder.loadTexts: acPMSS7RxSignalUnitsTable.setStatus('current')
acPMSS7RxSignalUnitsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 8, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7RxSignalUnitsLink"), (0, "AC-PM-SS7-MIB", "acPMSS7RxSignalUnitsInterval"))
if mibBuilder.loadTexts: acPMSS7RxSignalUnitsEntry.setStatus('current')
acPMSS7RxSignalUnitsLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7RxSignalUnitsLink.setStatus('current')
acPMSS7RxSignalUnitsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxSignalUnitsInterval.setStatus('current')
acPMSS7RxSignalUnitsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxSignalUnitsVal.setStatus('current')
acPMSS7RxSignalUnitsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxSignalUnitsTotal.setStatus('current')
acPMSS7TxOctetsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 9), )
if mibBuilder.loadTexts: acPMSS7TxOctetsTable.setStatus('current')
acPMSS7TxOctetsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 9, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7TxOctetsLink"), (0, "AC-PM-SS7-MIB", "acPMSS7TxOctetsInterval"))
if mibBuilder.loadTexts: acPMSS7TxOctetsEntry.setStatus('current')
acPMSS7TxOctetsLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7TxOctetsLink.setStatus('current')
acPMSS7TxOctetsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxOctetsInterval.setStatus('current')
acPMSS7TxOctetsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxOctetsVal.setStatus('current')
acPMSS7TxOctetsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxOctetsTotal.setStatus('current')
acPMSS7RxOctetsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 10), )
if mibBuilder.loadTexts: acPMSS7RxOctetsTable.setStatus('current')
acPMSS7RxOctetsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 10, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7RxOctetsLink"), (0, "AC-PM-SS7-MIB", "acPMSS7RxOctetsInterval"))
if mibBuilder.loadTexts: acPMSS7RxOctetsEntry.setStatus('current')
acPMSS7RxOctetsLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7RxOctetsLink.setStatus('current')
acPMSS7RxOctetsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxOctetsInterval.setStatus('current')
acPMSS7RxOctetsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxOctetsVal.setStatus('current')
acPMSS7RxOctetsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxOctetsTotal.setStatus('current')
acPMSS7MTP2NoAckRxTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 11), )
if mibBuilder.loadTexts: acPMSS7MTP2NoAckRxTable.setStatus('current')
acPMSS7MTP2NoAckRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 11, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP2NoAckRxLink"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP2NoAckRxInterval"))
if mibBuilder.loadTexts: acPMSS7MTP2NoAckRxEntry.setStatus('current')
acPMSS7MTP2NoAckRxLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7MTP2NoAckRxLink.setStatus('current')
acPMSS7MTP2NoAckRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP2NoAckRxInterval.setStatus('current')
acPMSS7MTP2NoAckRxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2NoAckRxVal.setStatus('current')
acPMSS7MTP2NoAckRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2NoAckRxTotal.setStatus('current')
acPMSS7DiscMSUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 12), )
if mibBuilder.loadTexts: acPMSS7DiscMSUTable.setStatus('current')
acPMSS7DiscMSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 12, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7DiscMSULink"), (0, "AC-PM-SS7-MIB", "acPMSS7DiscMSUInterval"))
if mibBuilder.loadTexts: acPMSS7DiscMSUEntry.setStatus('current')
acPMSS7DiscMSULink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7DiscMSULink.setStatus('current')
acPMSS7DiscMSUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7DiscMSUInterval.setStatus('current')
acPMSS7DiscMSUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7DiscMSUVal.setStatus('current')
acPMSS7DiscMSUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7DiscMSUTotal.setStatus('current')
acPMSS7InServiceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 13), )
if mibBuilder.loadTexts: acPMSS7InServiceTable.setStatus('current')
acPMSS7InServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 13, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7InServiceLink"), (0, "AC-PM-SS7-MIB", "acPMSS7InServiceInterval"))
if mibBuilder.loadTexts: acPMSS7InServiceEntry.setStatus('current')
acPMSS7InServiceLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7InServiceLink.setStatus('current')
acPMSS7InServiceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7InServiceInterval.setStatus('current')
acPMSS7InServiceVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 13, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7InServiceVal.setStatus('current')
acPMSS7InServiceTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7InServiceTimeAboveHighThreshold.setStatus('current')
acPMSS7InServiceTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7InServiceTimeBetweenThresholds.setStatus('current')
acPMSS7OutOfServiceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 14), )
if mibBuilder.loadTexts: acPMSS7OutOfServiceTable.setStatus('current')
acPMSS7OutOfServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 14, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7OutOfServiceLink"), (0, "AC-PM-SS7-MIB", "acPMSS7OutOfServiceInterval"))
if mibBuilder.loadTexts: acPMSS7OutOfServiceEntry.setStatus('current')
acPMSS7OutOfServiceLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7OutOfServiceLink.setStatus('current')
acPMSS7OutOfServiceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7OutOfServiceInterval.setStatus('current')
acPMSS7OutOfServiceVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 14, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7OutOfServiceVal.setStatus('current')
acPMSS7OutOfServiceTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7OutOfServiceTimeAboveHighThreshold.setStatus('current')
acPMSS7OutOfServiceTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 31, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7OutOfServiceTimeBetweenThresholds.setStatus('current')
acPMSS7LinkSets = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41))
acPMSS7SN0LSOutOfServiceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 1), )
if mibBuilder.loadTexts: acPMSS7SN0LSOutOfServiceTable.setStatus('current')
acPMSS7SN0LSOutOfServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 1, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7SN0LSOutOfServiceLinkSet"), (0, "AC-PM-SS7-MIB", "acPMSS7SN0LSOutOfServiceInterval"))
if mibBuilder.loadTexts: acPMSS7SN0LSOutOfServiceEntry.setStatus('current')
acPMSS7SN0LSOutOfServiceLinkSet = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: acPMSS7SN0LSOutOfServiceLinkSet.setStatus('current')
acPMSS7SN0LSOutOfServiceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7SN0LSOutOfServiceInterval.setStatus('current')
acPMSS7SN0LSOutOfServiceVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7SN0LSOutOfServiceVal.setStatus('current')
acPMSS7SN0LSOutOfServiceTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7SN0LSOutOfServiceTimeAboveHighThreshold.setStatus('current')
acPMSS7SN0LSOutOfServiceTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7SN0LSOutOfServiceTimeBetweenThresholds.setStatus('current')
acPMSS7SN1LSOutOfServiceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 2), )
if mibBuilder.loadTexts: acPMSS7SN1LSOutOfServiceTable.setStatus('current')
acPMSS7SN1LSOutOfServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 2, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7SN1LSOutOfServiceLinkSet"), (0, "AC-PM-SS7-MIB", "acPMSS7SN1LSOutOfServiceInterval"))
if mibBuilder.loadTexts: acPMSS7SN1LSOutOfServiceEntry.setStatus('current')
acPMSS7SN1LSOutOfServiceLinkSet = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: acPMSS7SN1LSOutOfServiceLinkSet.setStatus('current')
acPMSS7SN1LSOutOfServiceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7SN1LSOutOfServiceInterval.setStatus('current')
acPMSS7SN1LSOutOfServiceVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7SN1LSOutOfServiceVal.setStatus('current')
acPMSS7SN1LSOutOfServiceTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7SN1LSOutOfServiceTimeAboveHighThreshold.setStatus('current')
acPMSS7SN1LSOutOfServiceTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 41, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7SN1LSOutOfServiceTimeBetweenThresholds.setStatus('current')
acPMSS7SignalingNodes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51))
acPMSS7TxMTP3OctetsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 1), )
if mibBuilder.loadTexts: acPMSS7TxMTP3OctetsTable.setStatus('current')
acPMSS7TxMTP3OctetsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 1, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7TxMTP3OctetsSN"), (0, "AC-PM-SS7-MIB", "acPMSS7TxMTP3OctetsInterval"))
if mibBuilder.loadTexts: acPMSS7TxMTP3OctetsEntry.setStatus('current')
acPMSS7TxMTP3OctetsSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxMTP3OctetsSN.setStatus('current')
acPMSS7TxMTP3OctetsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxMTP3OctetsInterval.setStatus('current')
acPMSS7TxMTP3OctetsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxMTP3OctetsVal.setStatus('current')
acPMSS7TxMTP3OctetsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxMTP3OctetsTotal.setStatus('current')
acPMSS7RxMTP3OctetsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 2), )
if mibBuilder.loadTexts: acPMSS7RxMTP3OctetsTable.setStatus('current')
acPMSS7RxMTP3OctetsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 2, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7RxMTP3OctetsSN"), (0, "AC-PM-SS7-MIB", "acPMSS7RxMTP3OctetsInterval"))
if mibBuilder.loadTexts: acPMSS7RxMTP3OctetsEntry.setStatus('current')
acPMSS7RxMTP3OctetsSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxMTP3OctetsSN.setStatus('current')
acPMSS7RxMTP3OctetsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxMTP3OctetsInterval.setStatus('current')
acPMSS7RxMTP3OctetsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMTP3OctetsVal.setStatus('current')
acPMSS7RxMTP3OctetsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMTP3OctetsTotal.setStatus('current')
acPMSS7TxMTP3MSUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 3), )
if mibBuilder.loadTexts: acPMSS7TxMTP3MSUTable.setStatus('current')
acPMSS7TxMTP3MSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 3, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7TxMTP3MSUSN"), (0, "AC-PM-SS7-MIB", "acPMSS7TxMTP3MSUInterval"))
if mibBuilder.loadTexts: acPMSS7TxMTP3MSUEntry.setStatus('current')
acPMSS7TxMTP3MSUSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxMTP3MSUSN.setStatus('current')
acPMSS7TxMTP3MSUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxMTP3MSUInterval.setStatus('current')
acPMSS7TxMTP3MSUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxMTP3MSUVal.setStatus('current')
acPMSS7TxMTP3MSUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxMTP3MSUTotal.setStatus('current')
acPMSS7RxMTP3MSUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 4), )
if mibBuilder.loadTexts: acPMSS7RxMTP3MSUTable.setStatus('current')
acPMSS7RxMTP3MSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 4, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7RxMTP3MSUSN"), (0, "AC-PM-SS7-MIB", "acPMSS7RxMTP3MSUInterval"))
if mibBuilder.loadTexts: acPMSS7RxMTP3MSUEntry.setStatus('current')
acPMSS7RxMTP3MSUSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxMTP3MSUSN.setStatus('current')
acPMSS7RxMTP3MSUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxMTP3MSUInterval.setStatus('current')
acPMSS7RxMTP3MSUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMTP3MSUVal.setStatus('current')
acPMSS7RxMTP3MSUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMTP3MSUTotal.setStatus('current')
acPMSS7TxMTP3UPUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 5), )
if mibBuilder.loadTexts: acPMSS7TxMTP3UPUTable.setStatus('current')
acPMSS7TxMTP3UPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 5, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7TxMTP3UPUSN"), (0, "AC-PM-SS7-MIB", "acPMSS7TxMTP3UPUInterval"))
if mibBuilder.loadTexts: acPMSS7TxMTP3UPUEntry.setStatus('current')
acPMSS7TxMTP3UPUSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxMTP3UPUSN.setStatus('current')
acPMSS7TxMTP3UPUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7TxMTP3UPUInterval.setStatus('current')
acPMSS7TxMTP3UPUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxMTP3UPUVal.setStatus('current')
acPMSS7TxMTP3UPUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7TxMTP3UPUTotal.setStatus('current')
acPMSS7RxMTP3UPUTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 6), )
if mibBuilder.loadTexts: acPMSS7RxMTP3UPUTable.setStatus('current')
acPMSS7RxMTP3UPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 6, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7RxMTP3UPUSN"), (0, "AC-PM-SS7-MIB", "acPMSS7RxMTP3UPUInterval"))
if mibBuilder.loadTexts: acPMSS7RxMTP3UPUEntry.setStatus('current')
acPMSS7RxMTP3UPUSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxMTP3UPUSN.setStatus('current')
acPMSS7RxMTP3UPUInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxMTP3UPUInterval.setStatus('current')
acPMSS7RxMTP3UPUVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMTP3UPUVal.setStatus('current')
acPMSS7RxMTP3UPUTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMTP3UPUTotal.setStatus('current')
acPMSS7MTP3MSUDiscardedTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 7), )
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedTable.setStatus('current')
acPMSS7MTP3MSUDiscardedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 7, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP3MSUDiscardedSN"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP3MSUDiscardedInterval"))
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedEntry.setStatus('current')
acPMSS7MTP3MSUDiscardedSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedSN.setStatus('current')
acPMSS7MTP3MSUDiscardedInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedInterval.setStatus('current')
acPMSS7MTP3MSUDiscardedVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedVal.setStatus('current')
acPMSS7MTP3MSUDiscardedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedTotal.setStatus('current')
acPMSS7MTP3MSUDiscardedRtDataErrTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 8), )
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedRtDataErrTable.setStatus('current')
acPMSS7MTP3MSUDiscardedRtDataErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 8, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP3MSUDiscardedRtDataErrSN"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP3MSUDiscardedRtDataErrInterval"))
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedRtDataErrEntry.setStatus('current')
acPMSS7MTP3MSUDiscardedRtDataErrSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedRtDataErrSN.setStatus('current')
acPMSS7MTP3MSUDiscardedRtDataErrInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedRtDataErrInterval.setStatus('current')
acPMSS7MTP3MSUDiscardedRtDataErrVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedRtDataErrVal.setStatus('current')
acPMSS7MTP3MSUDiscardedRtDataErrTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP3MSUDiscardedRtDataErrTotal.setStatus('current')
acPMSS7RxMTP3TFCMsgTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 9), )
if mibBuilder.loadTexts: acPMSS7RxMTP3TFCMsgTable.setStatus('current')
acPMSS7RxMTP3TFCMsgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 9, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7RxMTP3TFCMsgSN"), (0, "AC-PM-SS7-MIB", "acPMSS7RxMTP3TFCMsgInterval"))
if mibBuilder.loadTexts: acPMSS7RxMTP3TFCMsgEntry.setStatus('current')
acPMSS7RxMTP3TFCMsgSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxMTP3TFCMsgSN.setStatus('current')
acPMSS7RxMTP3TFCMsgInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7RxMTP3TFCMsgInterval.setStatus('current')
acPMSS7RxMTP3TFCMsgVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMTP3TFCMsgVal.setStatus('current')
acPMSS7RxMTP3TFCMsgTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 51, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7RxMTP3TFCMsgTotal.setStatus('current')
acPMSS7MPT2Timers = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61))
acPMSS7MTP2T1ExpiryTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 1), )
if mibBuilder.loadTexts: acPMSS7MTP2T1ExpiryTable.setStatus('current')
acPMSS7MTP2T1ExpiryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 1, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP2T1ExpiryLink"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP2T1ExpiryInterval"))
if mibBuilder.loadTexts: acPMSS7MTP2T1ExpiryEntry.setStatus('current')
acPMSS7MTP2T1ExpiryLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP2T1ExpiryLink.setStatus('current')
acPMSS7MTP2T1ExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP2T1ExpiryInterval.setStatus('current')
acPMSS7MTP2T1ExpiryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T1ExpiryVal.setStatus('current')
acPMSS7MTP2T1ExpiryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T1ExpiryTotal.setStatus('current')
acPMSS7MTP2T2ExpiryTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 2), )
if mibBuilder.loadTexts: acPMSS7MTP2T2ExpiryTable.setStatus('current')
acPMSS7MTP2T2ExpiryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 2, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP2T2ExpiryLink"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP2T2ExpiryInterval"))
if mibBuilder.loadTexts: acPMSS7MTP2T2ExpiryEntry.setStatus('current')
acPMSS7MTP2T2ExpiryLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7MTP2T2ExpiryLink.setStatus('current')
acPMSS7MTP2T2ExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP2T2ExpiryInterval.setStatus('current')
acPMSS7MTP2T2ExpiryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T2ExpiryVal.setStatus('current')
acPMSS7MTP2T2ExpiryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T2ExpiryTotal.setStatus('current')
acPMSS7MTP2T3ExpiryTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 3), )
if mibBuilder.loadTexts: acPMSS7MTP2T3ExpiryTable.setStatus('current')
acPMSS7MTP2T3ExpiryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 3, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP2T3ExpiryLink"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP2T3ExpiryInterval"))
if mibBuilder.loadTexts: acPMSS7MTP2T3ExpiryEntry.setStatus('current')
acPMSS7MTP2T3ExpiryLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7MTP2T3ExpiryLink.setStatus('current')
acPMSS7MTP2T3ExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP2T3ExpiryInterval.setStatus('current')
acPMSS7MTP2T3ExpiryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T3ExpiryVal.setStatus('current')
acPMSS7MTP2T3ExpiryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T3ExpiryTotal.setStatus('current')
acPMSS7MTP2T4ExpiryTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 4), )
if mibBuilder.loadTexts: acPMSS7MTP2T4ExpiryTable.setStatus('current')
acPMSS7MTP2T4ExpiryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 4, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP2T4ExpiryLink"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP2T4ExpiryInterval"))
if mibBuilder.loadTexts: acPMSS7MTP2T4ExpiryEntry.setStatus('current')
acPMSS7MTP2T4ExpiryLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7MTP2T4ExpiryLink.setStatus('current')
acPMSS7MTP2T4ExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP2T4ExpiryInterval.setStatus('current')
acPMSS7MTP2T4ExpiryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T4ExpiryVal.setStatus('current')
acPMSS7MTP2T4ExpiryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T4ExpiryTotal.setStatus('current')
acPMSS7MTP2T5ExpiryTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 5), )
if mibBuilder.loadTexts: acPMSS7MTP2T5ExpiryTable.setStatus('current')
acPMSS7MTP2T5ExpiryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 5, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP2T5ExpiryLink"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP2T5ExpiryInterval"))
if mibBuilder.loadTexts: acPMSS7MTP2T5ExpiryEntry.setStatus('current')
acPMSS7MTP2T5ExpiryLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7MTP2T5ExpiryLink.setStatus('current')
acPMSS7MTP2T5ExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP2T5ExpiryInterval.setStatus('current')
acPMSS7MTP2T5ExpiryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T5ExpiryVal.setStatus('current')
acPMSS7MTP2T5ExpiryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T5ExpiryTotal.setStatus('current')
acPMSS7MTP2T6ExpiryTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 6), )
if mibBuilder.loadTexts: acPMSS7MTP2T6ExpiryTable.setStatus('current')
acPMSS7MTP2T6ExpiryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 6, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP2T6ExpiryLink"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP2T6ExpiryInterval"))
if mibBuilder.loadTexts: acPMSS7MTP2T6ExpiryEntry.setStatus('current')
acPMSS7MTP2T6ExpiryLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7MTP2T6ExpiryLink.setStatus('current')
acPMSS7MTP2T6ExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP2T6ExpiryInterval.setStatus('current')
acPMSS7MTP2T6ExpiryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T6ExpiryVal.setStatus('current')
acPMSS7MTP2T6ExpiryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T6ExpiryTotal.setStatus('current')
acPMSS7MTP2T7ExpiryTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 7), )
if mibBuilder.loadTexts: acPMSS7MTP2T7ExpiryTable.setStatus('current')
acPMSS7MTP2T7ExpiryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 7, 1), ).setIndexNames((0, "AC-PM-SS7-MIB", "acPMSS7MTP2T7ExpiryLink"), (0, "AC-PM-SS7-MIB", "acPMSS7MTP2T7ExpiryInterval"))
if mibBuilder.loadTexts: acPMSS7MTP2T7ExpiryEntry.setStatus('current')
acPMSS7MTP2T7ExpiryLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: acPMSS7MTP2T7ExpiryLink.setStatus('current')
acPMSS7MTP2T7ExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMSS7MTP2T7ExpiryInterval.setStatus('current')
acPMSS7MTP2T7ExpiryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T7ExpiryVal.setStatus('current')
acPMSS7MTP2T7ExpiryTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 13, 2, 61, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMSS7MTP2T7ExpiryTotal.setStatus('current')
mibBuilder.exportSymbols("AC-PM-SS7-MIB", acPMSS7SN1LSOutOfServiceInterval=acPMSS7SN1LSOutOfServiceInterval, acPMSS7OutOfServiceInterval=acPMSS7OutOfServiceInterval, acPMSS7RxMSUEntry=acPMSS7RxMSUEntry, acPMSS7TxMSUInterval=acPMSS7TxMSUInterval, acPMSS7TxSignalUnitsLink=acPMSS7TxSignalUnitsLink, acPMSS7RxMTP3OctetsVal=acPMSS7RxMTP3OctetsVal, acPMSS7MTP2T2ExpiryInterval=acPMSS7MTP2T2ExpiryInterval, acPMSS7TxMTP3OctetsVal=acPMSS7TxMTP3OctetsVal, acPMSS7TxMTP3UPUTotal=acPMSS7TxMTP3UPUTotal, acPMSS7MTP2T6ExpiryLink=acPMSS7MTP2T6ExpiryLink, acPMSS7RxMTP3TFCMsgInterval=acPMSS7RxMTP3TFCMsgInterval, acPMSS7OutOfServiceTimeAboveHighThreshold=acPMSS7OutOfServiceTimeAboveHighThreshold, acPMSS7SN0LSOutOfServiceEntry=acPMSS7SN0LSOutOfServiceEntry, acPMSS7RxMTP3TFCMsgTotal=acPMSS7RxMTP3TFCMsgTotal, acPMSS7DiscMSUEntry=acPMSS7DiscMSUEntry, acPMSS7TxLSSUVal=acPMSS7TxLSSUVal, acPMSS7Links=acPMSS7Links, acPMSS7TxMTP3OctetsTotal=acPMSS7TxMTP3OctetsTotal, acPMSS7MTP3MSUDiscardedRtDataErrSN=acPMSS7MTP3MSUDiscardedRtDataErrSN, acPMSS7RxSignalUnitsLink=acPMSS7RxSignalUnitsLink, acPMSS7TxFISUVal=acPMSS7TxFISUVal, acPMSS7RxLSSUVal=acPMSS7RxLSSUVal, acPMSS7TxOctetsVal=acPMSS7TxOctetsVal, acPMSS7MTP2T7ExpiryVal=acPMSS7MTP2T7ExpiryVal, acPMSS7RxLSSUInterval=acPMSS7RxLSSUInterval, acPMSS7TxMTP3MSUVal=acPMSS7TxMTP3MSUVal, acPMSS7RxMTP3OctetsSN=acPMSS7RxMTP3OctetsSN, acPMSS7RxFISUTotal=acPMSS7RxFISUTotal, acPMSS7MTP2NoAckRxVal=acPMSS7MTP2NoAckRxVal, acPMSS7SN1LSOutOfServiceTimeBetweenThresholds=acPMSS7SN1LSOutOfServiceTimeBetweenThresholds, acPMSS7RxMTP3MSUTotal=acPMSS7RxMTP3MSUTotal, acPMSS7TxMTP3MSUInterval=acPMSS7TxMTP3MSUInterval, acPMSS7TxSignalUnitsInterval=acPMSS7TxSignalUnitsInterval, acPMSS7ConfigurationPeriodLength=acPMSS7ConfigurationPeriodLength, acPMSS7RxMTP3UPUVal=acPMSS7RxMTP3UPUVal, acPMSS7MTP3MSUDiscardedEntry=acPMSS7MTP3MSUDiscardedEntry, acPMSS7RxMTP3MSUSN=acPMSS7RxMTP3MSUSN, acPMSS7MTP2T1ExpiryTable=acPMSS7MTP2T1ExpiryTable, acPMSS7MTP2T5ExpiryTable=acPMSS7MTP2T5ExpiryTable, acPMSS7RxMTP3TFCMsgEntry=acPMSS7RxMTP3TFCMsgEntry, acPMSS7MTP2T3ExpiryLink=acPMSS7MTP2T3ExpiryLink, acPMSS7InServiceTimeBetweenThresholds=acPMSS7InServiceTimeBetweenThresholds, acPMSS7RxMTP3OctetsInterval=acPMSS7RxMTP3OctetsInterval, acPMSS7=acPMSS7, acPMSS7MTP2T5ExpiryInterval=acPMSS7MTP2T5ExpiryInterval, acPMSS7DiscMSUTable=acPMSS7DiscMSUTable, acPMSS7RxMTP3UPUEntry=acPMSS7RxMTP3UPUEntry, acPMSS7TxFISUTotal=acPMSS7TxFISUTotal, acPMSS7RxMTP3TFCMsgSN=acPMSS7RxMTP3TFCMsgSN, acPMSS7MTP2T2ExpiryTable=acPMSS7MTP2T2ExpiryTable, acPMSS7InServiceTimeAboveHighThreshold=acPMSS7InServiceTimeAboveHighThreshold, acPMSS7RxMSUTable=acPMSS7RxMSUTable, acPMSS7InServiceInterval=acPMSS7InServiceInterval, acPMSS7RxMTP3UPUSN=acPMSS7RxMTP3UPUSN, acPMSS7MTP3MSUDiscardedRtDataErrInterval=acPMSS7MTP3MSUDiscardedRtDataErrInterval, acPMSS7RxMTP3MSUInterval=acPMSS7RxMTP3MSUInterval, acPMSS7MTP2T3ExpiryInterval=acPMSS7MTP2T3ExpiryInterval, acPMSS7MTP2T1ExpiryVal=acPMSS7MTP2T1ExpiryVal, acPMSS7TxMTP3OctetsInterval=acPMSS7TxMTP3OctetsInterval, acPMSS7SignalingNodes=acPMSS7SignalingNodes, acPMSS7TxMTP3UPUSN=acPMSS7TxMTP3UPUSN, acPMSS7TxMTP3UPUEntry=acPMSS7TxMTP3UPUEntry, acPMSS7MTP2T4ExpiryVal=acPMSS7MTP2T4ExpiryVal, acPMSS7TxFISUInterval=acPMSS7TxFISUInterval, acPMSS7MTP2T4ExpiryInterval=acPMSS7MTP2T4ExpiryInterval, acPMSS7RxSignalUnitsTotal=acPMSS7RxSignalUnitsTotal, acPMSS7MTP3MSUDiscardedTotal=acPMSS7MTP3MSUDiscardedTotal, acPMSS7RxOctetsInterval=acPMSS7RxOctetsInterval, acPMSS7RxFISUEntry=acPMSS7RxFISUEntry, acPMSS7SN0LSOutOfServiceTimeAboveHighThreshold=acPMSS7SN0LSOutOfServiceTimeAboveHighThreshold, acPMSS7MTP3MSUDiscardedVal=acPMSS7MTP3MSUDiscardedVal, acPMSS7SN0LSOutOfServiceLinkSet=acPMSS7SN0LSOutOfServiceLinkSet, acPMSS7MTP2T2ExpiryLink=acPMSS7MTP2T2ExpiryLink, acPMSS7OutOfServiceEntry=acPMSS7OutOfServiceEntry, acPMSS7MTP2T5ExpiryEntry=acPMSS7MTP2T5ExpiryEntry, acPMSS7DiscMSUInterval=acPMSS7DiscMSUInterval, acPMSS7MTP3MSUDiscardedTable=acPMSS7MTP3MSUDiscardedTable, acPMSS7RxFISUVal=acPMSS7RxFISUVal, acPMSS7MTP2T3ExpiryTable=acPMSS7MTP2T3ExpiryTable, acPMSS7RxMTP3TFCMsgVal=acPMSS7RxMTP3TFCMsgVal, acPMSS7MTP2T1ExpiryTotal=acPMSS7MTP2T1ExpiryTotal, acPMSS7RxOctetsLink=acPMSS7RxOctetsLink, acPMSS7MTP2T6ExpiryTable=acPMSS7MTP2T6ExpiryTable, acPMSS7DiscMSUTotal=acPMSS7DiscMSUTotal, acPMSS7TxLSSUEntry=acPMSS7TxLSSUEntry, acPMSS7Configuration=acPMSS7Configuration, acPMSS7RxSignalUnitsTable=acPMSS7RxSignalUnitsTable, acPMSS7MTP2T4ExpiryTable=acPMSS7MTP2T4ExpiryTable, acPMSS7MTP2T2ExpiryVal=acPMSS7MTP2T2ExpiryVal, acPMSS7MTP2T6ExpiryVal=acPMSS7MTP2T6ExpiryVal, acPMSS7TxMTP3MSUTable=acPMSS7TxMTP3MSUTable, acPMSS7RxMTP3UPUTotal=acPMSS7RxMTP3UPUTotal, acPMSS7MTP3MSUDiscardedSN=acPMSS7MTP3MSUDiscardedSN, acPMSS7RxFISULink=acPMSS7RxFISULink, acPMSS7MTP2T6ExpiryEntry=acPMSS7MTP2T6ExpiryEntry, acPMSS7RxLSSUEntry=acPMSS7RxLSSUEntry, acPMSS7TxMTP3OctetsTable=acPMSS7TxMTP3OctetsTable, acPMSS7TxLSSUTable=acPMSS7TxLSSUTable, acPMSS7MTP3MSUDiscardedRtDataErrTable=acPMSS7MTP3MSUDiscardedRtDataErrTable, acPMSS7MTP3MSUDiscardedRtDataErrEntry=acPMSS7MTP3MSUDiscardedRtDataErrEntry, acPMSS7MTP2T3ExpiryEntry=acPMSS7MTP2T3ExpiryEntry, acPMSS7TxOctetsTable=acPMSS7TxOctetsTable, acPMSS7TxFISUTable=acPMSS7TxFISUTable, acPMSS7RxLSSUTotal=acPMSS7RxLSSUTotal, acPMSS7RxMSUVal=acPMSS7RxMSUVal, acPMSS7InServiceTable=acPMSS7InServiceTable, acPMSS7TxOctetsLink=acPMSS7TxOctetsLink, acPMSS7InServiceVal=acPMSS7InServiceVal, acPMSS7TxOctetsEntry=acPMSS7TxOctetsEntry, acPMSS7RxMTP3MSUVal=acPMSS7RxMTP3MSUVal, acPMSS7RxMSUTotal=acPMSS7RxMSUTotal, acPMSS7RxFISUTable=acPMSS7RxFISUTable, acPMSS7TxSignalUnitsVal=acPMSS7TxSignalUnitsVal, acPMSS7SN1LSOutOfServiceVal=acPMSS7SN1LSOutOfServiceVal, acPMSS7RxMTP3MSUEntry=acPMSS7RxMTP3MSUEntry, acPMSS7MTP2T7ExpiryTotal=acPMSS7MTP2T7ExpiryTotal, acPMSS7MTP2T3ExpiryVal=acPMSS7MTP2T3ExpiryVal, acPMSS7RxSignalUnitsInterval=acPMSS7RxSignalUnitsInterval, acPMSS7MTP2NoAckRxEntry=acPMSS7MTP2NoAckRxEntry, acPMSS7SN0LSOutOfServiceVal=acPMSS7SN0LSOutOfServiceVal, acPMSS7TxOctetsTotal=acPMSS7TxOctetsTotal, acPMSS7OutOfServiceTimeBetweenThresholds=acPMSS7OutOfServiceTimeBetweenThresholds, acPMSS7TxSignalUnitsTotal=acPMSS7TxSignalUnitsTotal, acPMSS7RxMTP3OctetsEntry=acPMSS7RxMTP3OctetsEntry, acPMSS7OutOfServiceTable=acPMSS7OutOfServiceTable, acPMSS7SN1LSOutOfServiceTimeAboveHighThreshold=acPMSS7SN1LSOutOfServiceTimeAboveHighThreshold, acPMSS7LinkSets=acPMSS7LinkSets, acPMSS7DiscMSULink=acPMSS7DiscMSULink, acPMSS7RxOctetsEntry=acPMSS7RxOctetsEntry, acPMSS7RxMTP3UPUInterval=acPMSS7RxMTP3UPUInterval, acPMSS7RxMTP3OctetsTotal=acPMSS7RxMTP3OctetsTotal, acPMSS7Data=acPMSS7Data, acPMSS7MTP3MSUDiscardedInterval=acPMSS7MTP3MSUDiscardedInterval, acPMSS7RxMTP3OctetsTable=acPMSS7RxMTP3OctetsTable, acPMSS7OutOfServiceVal=acPMSS7OutOfServiceVal, acPMSS7RxMTP3TFCMsgTable=acPMSS7RxMTP3TFCMsgTable, acPMSS7MTP2T2ExpiryEntry=acPMSS7MTP2T2ExpiryEntry, acPMSS7RxSignalUnitsEntry=acPMSS7RxSignalUnitsEntry, acPMSS7OutOfServiceLink=acPMSS7OutOfServiceLink, acPMSS7TxLSSUTotal=acPMSS7TxLSSUTotal, acPMSS7RxSignalUnitsVal=acPMSS7RxSignalUnitsVal, acPMSS7SN0LSOutOfServiceInterval=acPMSS7SN0LSOutOfServiceInterval, acPMSS7TxMTP3OctetsSN=acPMSS7TxMTP3OctetsSN, acPMSS7TxMTP3UPUInterval=acPMSS7TxMTP3UPUInterval, acPMSS7TxFISUEntry=acPMSS7TxFISUEntry, acPMSS7TxLSSULink=acPMSS7TxLSSULink, acPMSS7TxMTP3OctetsEntry=acPMSS7TxMTP3OctetsEntry, acPMSS7MTP2T2ExpiryTotal=acPMSS7MTP2T2ExpiryTotal, acPMSS7TxFISULink=acPMSS7TxFISULink, acPMSS7MTP2NoAckRxTotal=acPMSS7MTP2NoAckRxTotal, acPMSS7TxMTP3MSUEntry=acPMSS7TxMTP3MSUEntry, acPMSS7TxMTP3MSUTotal=acPMSS7TxMTP3MSUTotal, acPMSS7TxSignalUnitsEntry=acPMSS7TxSignalUnitsEntry, acPMSS7InServiceEntry=acPMSS7InServiceEntry, acPMSS7RxLSSULink=acPMSS7RxLSSULink, acPMSS7TxMSULink=acPMSS7TxMSULink, acPMSS7MTP2T4ExpiryTotal=acPMSS7MTP2T4ExpiryTotal, acPMSS7MTP2T4ExpiryEntry=acPMSS7MTP2T4ExpiryEntry, acPMSS7RxMSUInterval=acPMSS7RxMSUInterval, acPMSS7MTP2T6ExpiryInterval=acPMSS7MTP2T6ExpiryInterval, acPMSS7MTP2NoAckRxLink=acPMSS7MTP2NoAckRxLink, acPMSS7MTP2T6ExpiryTotal=acPMSS7MTP2T6ExpiryTotal, acPMSS7MTP2T7ExpiryTable=acPMSS7MTP2T7ExpiryTable, acPMSS7TxMSUTable=acPMSS7TxMSUTable, acPMSS7MTP3MSUDiscardedRtDataErrVal=acPMSS7MTP3MSUDiscardedRtDataErrVal, acPMSS7MTP2T7ExpiryInterval=acPMSS7MTP2T7ExpiryInterval, acPMSS7TxMSUTotal=acPMSS7TxMSUTotal, acPMSS7SN1LSOutOfServiceLinkSet=acPMSS7SN1LSOutOfServiceLinkSet, acPMSS7MTP2T4ExpiryLink=acPMSS7MTP2T4ExpiryLink, acPMSS7MTP2T5ExpiryTotal=acPMSS7MTP2T5ExpiryTotal, acPMSS7RxMSULink=acPMSS7RxMSULink, acPMSS7TxOctetsInterval=acPMSS7TxOctetsInterval, acPMSS7MTP2NoAckRxInterval=acPMSS7MTP2NoAckRxInterval, acPMSS7SN1LSOutOfServiceTable=acPMSS7SN1LSOutOfServiceTable, acPMSS7MTP2T1ExpiryInterval=acPMSS7MTP2T1ExpiryInterval, acPMSS7ConfigurationResetTotalCounters=acPMSS7ConfigurationResetTotalCounters, acPMSS7RxOctetsTotal=acPMSS7RxOctetsTotal, acPMSS7SN0LSOutOfServiceTimeBetweenThresholds=acPMSS7SN0LSOutOfServiceTimeBetweenThresholds, acPMSS7MPT2Timers=acPMSS7MPT2Timers, acPMSS7RxFISUInterval=acPMSS7RxFISUInterval, acPMSS7RxOctetsVal=acPMSS7RxOctetsVal, acPMSS7MTP3MSUDiscardedRtDataErrTotal=acPMSS7MTP3MSUDiscardedRtDataErrTotal, acPMSS7MTP2T5ExpiryVal=acPMSS7MTP2T5ExpiryVal, acPMSS7MTP2NoAckRxTable=acPMSS7MTP2NoAckRxTable, acPMSS7MTP2T1ExpiryLink=acPMSS7MTP2T1ExpiryLink, acPMSS7RxOctetsTable=acPMSS7RxOctetsTable, acPMSS7DataTimeFromStartOfInterval=acPMSS7DataTimeFromStartOfInterval, acPMSS7DiscMSUVal=acPMSS7DiscMSUVal, acPMSS7SN0LSOutOfServiceTable=acPMSS7SN0LSOutOfServiceTable, acPMSS7TxMTP3MSUSN=acPMSS7TxMTP3MSUSN, acPMSS7TxSignalUnitsTable=acPMSS7TxSignalUnitsTable, acPMSS7TxMSUVal=acPMSS7TxMSUVal, acPMSS7RxLSSUTable=acPMSS7RxLSSUTable, acPMSS7MTP2T1ExpiryEntry=acPMSS7MTP2T1ExpiryEntry, acPMSS7TxLSSUInterval=acPMSS7TxLSSUInterval, acPMSS7MTP2T5ExpiryLink=acPMSS7MTP2T5ExpiryLink, acPMSS7MTP2T7ExpiryEntry=acPMSS7MTP2T7ExpiryEntry, acPMSS7TxMTP3UPUVal=acPMSS7TxMTP3UPUVal, acPMSS7InServiceLink=acPMSS7InServiceLink, acPMSS7MTP2T3ExpiryTotal=acPMSS7MTP2T3ExpiryTotal, acPMSS7MTP2T7ExpiryLink=acPMSS7MTP2T7ExpiryLink, acPMSS7RxMTP3UPUTable=acPMSS7RxMTP3UPUTable, acPMSS7TxMSUEntry=acPMSS7TxMSUEntry, PYSNMP_MODULE_ID=acPMSS7, acPMSS7TxMTP3UPUTable=acPMSS7TxMTP3UPUTable, acPMSS7RxMTP3MSUTable=acPMSS7RxMTP3MSUTable, acPMSS7SN1LSOutOfServiceEntry=acPMSS7SN1LSOutOfServiceEntry)
