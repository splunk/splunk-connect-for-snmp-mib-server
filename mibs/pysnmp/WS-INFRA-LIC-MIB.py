#
# PySNMP MIB module WS-INFRA-LIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WS-INFRA-LIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:30:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, ObjectIdentity, Bits, iso, IpAddress, MibIdentifier, Counter64, ModuleIdentity, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Bits", "iso", "IpAddress", "MibIdentifier", "Counter64", "ModuleIdentity", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wsInfraLic, = mibBuilder.importSymbols("WS-INFRA-SMI-MIB", "wsInfraLic")
wsInfraLicMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1))
wsInfraLicMib.setRevisions(('2007-02-07 11:27', '2006-05-24 15:19', '2006-05-01 14:36', '2006-04-28 14:16', '2005-06-27 17:08', '2005-06-22 15:10', '2005-06-22 11:27',))
if mibBuilder.loadTexts: wsInfraLicMib.setLastUpdated('200506231126Z')
if mibBuilder.loadTexts: wsInfraLicMib.setOrganization('Symbol Technologies')
wsInfraAPLicNum = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraAPLicNum.setStatus('current')
wsInfraLicMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2))
wsInfraLicNum = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraLicNum.setStatus('current')
wsInfraLicActionFeature = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraLicActionFeature.setStatus('current')
wsInfraLicActionKey = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraLicActionKey.setStatus('current')
wsInfraLicAction = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraLicAction.setStatus('current')
wsInfraLicTable = MibTable((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 5), )
if mibBuilder.loadTexts: wsInfraLicTable.setStatus('current')
wsInfraLicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 5, 1), ).setIndexNames((0, "WS-INFRA-LIC-MIB", "wsInfraLicIndex"))
if mibBuilder.loadTexts: wsInfraLicEntry.setStatus('current')
wsInfraLicIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15)))
if mibBuilder.loadTexts: wsInfraLicIndex.setStatus('current')
wsInfraLicFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraLicFeature.setStatus('current')
wsInfraLicKey = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraLicKey.setStatus('current')
wsInfraLicCount = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraLicCount.setStatus('current')
wsInfraLicUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraLicUsage.setStatus('current')
wsInfraLicSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraLicSerialNumber.setStatus('current')
wsInfraLicMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 100))
wsInfraLicMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 100, 1))
wsInfraLicMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 100, 1, 1)).setObjects(("WS-INFRA-LIC-MIB", "wsInfraLicMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wsInfraLicMIBCompliance = wsInfraLicMIBCompliance.setStatus('current')
wsInfraLicMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 100, 2))
wsInfraLicMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 100, 2, 1)).setObjects(("WS-INFRA-LIC-MIB", "wsInfraAPLicNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wsInfraLicMIBGroup = wsInfraLicMIBGroup.setStatus('current')
wsInfraLicMgmtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 388, 14, 1, 9, 1, 100, 2, 2)).setObjects(("WS-INFRA-LIC-MIB", "wsInfraLicNum"), ("WS-INFRA-LIC-MIB", "wsInfraLicFeature"), ("WS-INFRA-LIC-MIB", "wsInfraLicActionKey"), ("WS-INFRA-LIC-MIB", "wsInfraLicAction"), ("WS-INFRA-LIC-MIB", "wsInfraLicUsage"), ("WS-INFRA-LIC-MIB", "wsInfraLicKey"), ("WS-INFRA-LIC-MIB", "wsInfraLicSerialNumber"), ("WS-INFRA-LIC-MIB", "wsInfraAPLicNum"), ("WS-INFRA-LIC-MIB", "wsInfraLicCount"), ("WS-INFRA-LIC-MIB", "wsInfraLicActionFeature"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wsInfraLicMgmtGroup = wsInfraLicMgmtGroup.setStatus('current')
mibBuilder.exportSymbols("WS-INFRA-LIC-MIB", wsInfraLicMIBGroup=wsInfraLicMIBGroup, wsInfraLicUsage=wsInfraLicUsage, wsInfraLicTable=wsInfraLicTable, wsInfraLicFeature=wsInfraLicFeature, wsInfraLicMIBCompliance=wsInfraLicMIBCompliance, wsInfraLicEntry=wsInfraLicEntry, PYSNMP_MODULE_ID=wsInfraLicMib, wsInfraAPLicNum=wsInfraAPLicNum, wsInfraLicCount=wsInfraLicCount, wsInfraLicIndex=wsInfraLicIndex, wsInfraLicKey=wsInfraLicKey, wsInfraLicActionKey=wsInfraLicActionKey, wsInfraLicMgmtGroup=wsInfraLicMgmtGroup, wsInfraLicActionFeature=wsInfraLicActionFeature, wsInfraLicMgmt=wsInfraLicMgmt, wsInfraLicNum=wsInfraLicNum, wsInfraLicMib=wsInfraLicMib, wsInfraLicMIBGroups=wsInfraLicMIBGroups, wsInfraLicMIBConformance=wsInfraLicMIBConformance, wsInfraLicSerialNumber=wsInfraLicSerialNumber, wsInfraLicAction=wsInfraLicAction, wsInfraLicMIBCompliances=wsInfraLicMIBCompliances)
