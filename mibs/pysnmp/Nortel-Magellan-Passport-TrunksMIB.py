#
# PySNMP MIB module Nortel-Magellan-Passport-TrunksMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-TrunksMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
Counter32, RowStatus, InterfaceIndex, PassportCounter64, Gauge32, Unsigned32, StorageType, Integer32, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Counter32", "RowStatus", "InterfaceIndex", "PassportCounter64", "Gauge32", "Unsigned32", "StorageType", "Integer32", "DisplayString")
AsciiString, FixedPoint1, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "AsciiString", "FixedPoint1", "NonReplicated")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, iso, ModuleIdentity, Counter32, NotificationType, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, Unsigned32, TimeTicks, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "ModuleIdentity", "Counter32", "NotificationType", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "Unsigned32", "TimeTicks", "Integer32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
trunksMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 43))
trk = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60))
trkRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 1), )
if mibBuilder.loadTexts: trkRowStatusTable.setStatus('mandatory')
trkRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkRowStatusEntry.setStatus('mandatory')
trkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkRowStatus.setStatus('mandatory')
trkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkComponentName.setStatus('mandatory')
trkStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkStorageType.setStatus('mandatory')
trkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: trkIndex.setStatus('mandatory')
trkIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 100), )
if mibBuilder.loadTexts: trkIfEntryTable.setStatus('mandatory')
trkIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkIfEntryEntry.setStatus('mandatory')
trkIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 100, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkIfAdminStatus.setStatus('mandatory')
trkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 100, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkIfIndex.setStatus('mandatory')
trkProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 101), )
if mibBuilder.loadTexts: trkProvTable.setStatus('mandatory')
trkProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 101, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkProvEntry.setStatus('mandatory')
trkExpectedRemoteNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 101, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkExpectedRemoteNodeName.setStatus('mandatory')
trkRemoteValidationAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 101, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("continue", 0), ("disable", 1))).clone('continue')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkRemoteValidationAction.setStatus('mandatory')
trkMaximumExpectedRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 101, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1500)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkMaximumExpectedRoundTripDelay.setStatus('mandatory')
trkIdleTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 101, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 30)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkIdleTimeOut.setStatus('mandatory')
trkOverridesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 102), )
if mibBuilder.loadTexts: trkOverridesTable.setStatus('mandatory')
trkOverridesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 102, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkOverridesEntry.setStatus('mandatory')
trkOverrideTransmitSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 102, 1, 1), Gauge32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1000, 4294967295), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkOverrideTransmitSpeed.setStatus('mandatory')
trkOldOverrideRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 102, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkOldOverrideRoundTripDelay.setStatus('obsolete')
trkOverrideRoundTripUsec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 102, 1, 3), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkOverrideRoundTripUsec.setStatus('mandatory')
trkStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103), )
if mibBuilder.loadTexts: trkStateTable.setStatus('mandatory')
trkStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkStateEntry.setStatus('mandatory')
trkAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkAdminState.setStatus('mandatory')
trkOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkOperationalState.setStatus('mandatory')
trkUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkUsageState.setStatus('mandatory')
trkAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkAvailabilityStatus.setStatus('mandatory')
trkProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkProceduralStatus.setStatus('mandatory')
trkControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkControlStatus.setStatus('mandatory')
trkAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkAlarmStatus.setStatus('mandatory')
trkStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkStandbyStatus.setStatus('mandatory')
trkUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 103, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkUnknownStatus.setStatus('mandatory')
trkOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 104), )
if mibBuilder.loadTexts: trkOperStatusTable.setStatus('mandatory')
trkOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 104, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkOperStatusEntry.setStatus('mandatory')
trkSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 104, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkSnmpOperStatus.setStatus('mandatory')
trkOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 105), )
if mibBuilder.loadTexts: trkOperTable.setStatus('mandatory')
trkOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 105, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkOperEntry.setStatus('mandatory')
trkRemoteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 105, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 27))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkRemoteComponentName.setStatus('mandatory')
trkTransportTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 106), )
if mibBuilder.loadTexts: trkTransportTable.setStatus('mandatory')
trkTransportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 106, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkTransportEntry.setStatus('mandatory')
trkMeasuredSpeedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 106, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkMeasuredSpeedToIf.setStatus('mandatory')
trkMeasuredRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 106, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkMeasuredRoundTripDelay.setStatus('obsolete')
trkMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 106, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkMaxTxUnit.setStatus('mandatory')
trkMeasuredRoundTripDelayUsec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 106, 1, 4), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkMeasuredRoundTripDelayUsec.setStatus('mandatory')
trkStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107), )
if mibBuilder.loadTexts: trkStatsTable.setStatus('mandatory')
trkStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkStatsEntry.setStatus('mandatory')
trkAreYouThereModeEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkAreYouThereModeEntries.setStatus('mandatory')
trkPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPktFromIf.setStatus('mandatory')
trkTrunkPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkTrunkPktFromIf.setStatus('mandatory')
trkTrunkPktToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkTrunkPktToIf.setStatus('mandatory')
trkDiscardUnforward = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDiscardUnforward.setStatus('mandatory')
trkDiscardTrunkPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDiscardTrunkPktFromIf.setStatus('mandatory')
trkIntPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkIntPktFromIf.setStatus('mandatory')
trkDiscardIntUnforward = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDiscardIntUnforward.setStatus('mandatory')
trkStagingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkStagingAttempts.setStatus('mandatory')
trkDiscardTrunkPktToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDiscardTrunkPktToIf.setStatus('mandatory')
trkUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 107, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkUtilization.setStatus('mandatory')
trkSpeedReportingTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 109), )
if mibBuilder.loadTexts: trkSpeedReportingTable.setStatus('mandatory')
trkSpeedReportingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 109, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"))
if mibBuilder.loadTexts: trkSpeedReportingEntry.setStatus('mandatory')
trkSpeedReportingHoldOff = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 109, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1200)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkSpeedReportingHoldOff.setStatus('mandatory')
trkLowSpeedAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 109, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkLowSpeedAlarmThreshold.setStatus('mandatory')
trkHighSpeedAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 109, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkHighSpeedAlarmThreshold.setStatus('mandatory')
trkSpdThTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 318), )
if mibBuilder.loadTexts: trkSpdThTable.setStatus('mandatory')
trkSpdThEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 318, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkSpdThValue"))
if mibBuilder.loadTexts: trkSpdThEntry.setStatus('mandatory')
trkSpdThValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 318, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435455))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trkSpdThValue.setStatus('mandatory')
trkSpdThRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 318, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: trkSpdThRowStatus.setStatus('mandatory')
trkPktBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 368), )
if mibBuilder.loadTexts: trkPktBpTable.setStatus('mandatory')
trkPktBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 368, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPktBpIndex"))
if mibBuilder.loadTexts: trkPktBpEntry.setStatus('mandatory')
trkPktBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 368, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkPktBpIndex.setStatus('mandatory')
trkPktBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 368, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPktBpValue.setStatus('mandatory')
trkDiscBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 369), )
if mibBuilder.loadTexts: trkDiscBpTable.setStatus('mandatory')
trkDiscBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 369, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDiscBpIndex"))
if mibBuilder.loadTexts: trkDiscBpEntry.setStatus('mandatory')
trkDiscBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 369, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkDiscBpIndex.setStatus('mandatory')
trkDiscBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 369, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDiscBpValue.setStatus('mandatory')
trkOctBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 370), )
if mibBuilder.loadTexts: trkOctBpTable.setStatus('mandatory')
trkOctBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 370, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkOctBpIndex"))
if mibBuilder.loadTexts: trkOctBpEntry.setStatus('mandatory')
trkOctBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 370, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkOctBpIndex.setStatus('mandatory')
trkOctBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 370, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkOctBpValue.setStatus('mandatory')
trkPorsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6))
trkPorsStatsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 1), )
if mibBuilder.loadTexts: trkPorsStatsRowStatusTable.setStatus('mandatory')
trkPorsStatsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsIndex"))
if mibBuilder.loadTexts: trkPorsStatsRowStatusEntry.setStatus('mandatory')
trkPorsStatsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsRowStatus.setStatus('mandatory')
trkPorsStatsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsComponentName.setStatus('mandatory')
trkPorsStatsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsStorageType.setStatus('mandatory')
trkPorsStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: trkPorsStatsIndex.setStatus('mandatory')
trkPorsStatsOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 10), )
if mibBuilder.loadTexts: trkPorsStatsOperTable.setStatus('mandatory')
trkPorsStatsOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsIndex"))
if mibBuilder.loadTexts: trkPorsStatsOperEntry.setStatus('mandatory')
trkPorsStatsPorsNormPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 10, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsPorsNormPktFromIf.setStatus('mandatory')
trkPorsStatsPorsNormDiscUnforwardFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 10, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsPorsNormDiscUnforwardFromIf.setStatus('mandatory')
trkPorsStatsPorsNormOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 10, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsPorsNormOctetFromIf.setStatus('mandatory')
trkPorsStatsPorsIntPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 10, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsPorsIntPktFromIf.setStatus('mandatory')
trkPorsStatsPorsIntDiscUnforwardFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 10, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsPorsIntDiscUnforwardFromIf.setStatus('mandatory')
trkPorsStatsPorsIntOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 10, 1, 6), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsPorsIntOctetFromIf.setStatus('mandatory')
trkPorsStatsPktBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 371), )
if mibBuilder.loadTexts: trkPorsStatsPktBpTable.setStatus('mandatory')
trkPorsStatsPktBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 371, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsPktBpEpIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsPktBpDpIndex"))
if mibBuilder.loadTexts: trkPorsStatsPktBpEntry.setStatus('mandatory')
trkPorsStatsPktBpEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 371, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkPorsStatsPktBpEpIndex.setStatus('mandatory')
trkPorsStatsPktBpDpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 371, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dp0", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))))
if mibBuilder.loadTexts: trkPorsStatsPktBpDpIndex.setStatus('mandatory')
trkPorsStatsPktBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 371, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsPktBpValue.setStatus('mandatory')
trkPorsStatsDiscBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 372), )
if mibBuilder.loadTexts: trkPorsStatsDiscBpTable.setStatus('mandatory')
trkPorsStatsDiscBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 372, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsDiscBpEpIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsDiscBpDpIndex"))
if mibBuilder.loadTexts: trkPorsStatsDiscBpEntry.setStatus('mandatory')
trkPorsStatsDiscBpEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 372, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkPorsStatsDiscBpEpIndex.setStatus('mandatory')
trkPorsStatsDiscBpDpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 372, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dp0", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))))
if mibBuilder.loadTexts: trkPorsStatsDiscBpDpIndex.setStatus('mandatory')
trkPorsStatsDiscBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 372, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsDiscBpValue.setStatus('mandatory')
trkPorsStatsOctBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 373), )
if mibBuilder.loadTexts: trkPorsStatsOctBpTable.setStatus('mandatory')
trkPorsStatsOctBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 373, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsOctBpEpIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkPorsStatsOctBpDpIndex"))
if mibBuilder.loadTexts: trkPorsStatsOctBpEntry.setStatus('mandatory')
trkPorsStatsOctBpEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 373, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkPorsStatsOctBpEpIndex.setStatus('mandatory')
trkPorsStatsOctBpDpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 373, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dp0", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))))
if mibBuilder.loadTexts: trkPorsStatsOctBpDpIndex.setStatus('mandatory')
trkPorsStatsOctBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 6, 373, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkPorsStatsOctBpValue.setStatus('mandatory')
trkFwdStats = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7))
trkFwdStatsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 1), )
if mibBuilder.loadTexts: trkFwdStatsRowStatusTable.setStatus('mandatory')
trkFwdStatsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkFwdStatsIndex"))
if mibBuilder.loadTexts: trkFwdStatsRowStatusEntry.setStatus('mandatory')
trkFwdStatsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkFwdStatsRowStatus.setStatus('mandatory')
trkFwdStatsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkFwdStatsComponentName.setStatus('mandatory')
trkFwdStatsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkFwdStatsStorageType.setStatus('mandatory')
trkFwdStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: trkFwdStatsIndex.setStatus('mandatory')
trkFwdStatsOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 10), )
if mibBuilder.loadTexts: trkFwdStatsOperTable.setStatus('mandatory')
trkFwdStatsOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkFwdStatsIndex"))
if mibBuilder.loadTexts: trkFwdStatsOperEntry.setStatus('mandatory')
trkFwdStatsFwdPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 10, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkFwdStatsFwdPktFromIf.setStatus('mandatory')
trkFwdStatsFwdDiscUnforwardFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 10, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkFwdStatsFwdDiscUnforwardFromIf.setStatus('mandatory')
trkFwdStatsFwdOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 7, 10, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkFwdStatsFwdOctetFromIf.setStatus('mandatory')
trkVnsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8))
trkVnsStatsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 1), )
if mibBuilder.loadTexts: trkVnsStatsRowStatusTable.setStatus('mandatory')
trkVnsStatsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsIndex"))
if mibBuilder.loadTexts: trkVnsStatsRowStatusEntry.setStatus('mandatory')
trkVnsStatsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkVnsStatsRowStatus.setStatus('mandatory')
trkVnsStatsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkVnsStatsComponentName.setStatus('mandatory')
trkVnsStatsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkVnsStatsStorageType.setStatus('mandatory')
trkVnsStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: trkVnsStatsIndex.setStatus('mandatory')
trkVnsStatsOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 10), )
if mibBuilder.loadTexts: trkVnsStatsOperTable.setStatus('mandatory')
trkVnsStatsOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsIndex"))
if mibBuilder.loadTexts: trkVnsStatsOperEntry.setStatus('mandatory')
trkVnsStatsVnsPktFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 10, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkVnsStatsVnsPktFromIf.setStatus('mandatory')
trkVnsStatsVnsDiscUnforwardFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 10, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkVnsStatsVnsDiscUnforwardFromIf.setStatus('mandatory')
trkVnsStatsVnsOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 10, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkVnsStatsVnsOctetFromIf.setStatus('mandatory')
trkVnsStatsPktBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 377), )
if mibBuilder.loadTexts: trkVnsStatsPktBpTable.setStatus('mandatory')
trkVnsStatsPktBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 377, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsPktBpEpIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsPktBpDpIndex"))
if mibBuilder.loadTexts: trkVnsStatsPktBpEntry.setStatus('mandatory')
trkVnsStatsPktBpEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 377, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkVnsStatsPktBpEpIndex.setStatus('mandatory')
trkVnsStatsPktBpDpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 377, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dp0", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))))
if mibBuilder.loadTexts: trkVnsStatsPktBpDpIndex.setStatus('mandatory')
trkVnsStatsPktBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 377, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkVnsStatsPktBpValue.setStatus('mandatory')
trkVnsStatsDiscBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 378), )
if mibBuilder.loadTexts: trkVnsStatsDiscBpTable.setStatus('mandatory')
trkVnsStatsDiscBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 378, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsDiscBpEpIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsDiscBpDpIndex"))
if mibBuilder.loadTexts: trkVnsStatsDiscBpEntry.setStatus('mandatory')
trkVnsStatsDiscBpEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 378, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkVnsStatsDiscBpEpIndex.setStatus('mandatory')
trkVnsStatsDiscBpDpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 378, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dp0", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))))
if mibBuilder.loadTexts: trkVnsStatsDiscBpDpIndex.setStatus('mandatory')
trkVnsStatsDiscBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 378, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkVnsStatsDiscBpValue.setStatus('mandatory')
trkVnsStatsOctBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 379), )
if mibBuilder.loadTexts: trkVnsStatsOctBpTable.setStatus('mandatory')
trkVnsStatsOctBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 379, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsOctBpEpIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkVnsStatsOctBpDpIndex"))
if mibBuilder.loadTexts: trkVnsStatsOctBpEntry.setStatus('mandatory')
trkVnsStatsOctBpEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 379, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkVnsStatsOctBpEpIndex.setStatus('mandatory')
trkVnsStatsOctBpDpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 379, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dp0", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))))
if mibBuilder.loadTexts: trkVnsStatsOctBpDpIndex.setStatus('mandatory')
trkVnsStatsOctBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 8, 379, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkVnsStatsOctBpValue.setStatus('mandatory')
trkDprsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10))
trkDprsStatsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 1), )
if mibBuilder.loadTexts: trkDprsStatsRowStatusTable.setStatus('mandatory')
trkDprsStatsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsIndex"))
if mibBuilder.loadTexts: trkDprsStatsRowStatusEntry.setStatus('mandatory')
trkDprsStatsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDprsStatsRowStatus.setStatus('mandatory')
trkDprsStatsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDprsStatsComponentName.setStatus('mandatory')
trkDprsStatsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDprsStatsStorageType.setStatus('mandatory')
trkDprsStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: trkDprsStatsIndex.setStatus('mandatory')
trkDprsStatsPktBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 374), )
if mibBuilder.loadTexts: trkDprsStatsPktBpTable.setStatus('mandatory')
trkDprsStatsPktBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 374, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsPktBpEpIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsPktBpDpIndex"))
if mibBuilder.loadTexts: trkDprsStatsPktBpEntry.setStatus('mandatory')
trkDprsStatsPktBpEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 374, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkDprsStatsPktBpEpIndex.setStatus('mandatory')
trkDprsStatsPktBpDpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 374, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dp0", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))))
if mibBuilder.loadTexts: trkDprsStatsPktBpDpIndex.setStatus('mandatory')
trkDprsStatsPktBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 374, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDprsStatsPktBpValue.setStatus('mandatory')
trkDprsStatsDiscBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 375), )
if mibBuilder.loadTexts: trkDprsStatsDiscBpTable.setStatus('mandatory')
trkDprsStatsDiscBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 375, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsDiscBpEpIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsDiscBpDpIndex"))
if mibBuilder.loadTexts: trkDprsStatsDiscBpEntry.setStatus('mandatory')
trkDprsStatsDiscBpEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 375, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkDprsStatsDiscBpEpIndex.setStatus('mandatory')
trkDprsStatsDiscBpDpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 375, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dp0", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))))
if mibBuilder.loadTexts: trkDprsStatsDiscBpDpIndex.setStatus('mandatory')
trkDprsStatsDiscBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 375, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDprsStatsDiscBpValue.setStatus('mandatory')
trkDprsStatsOctBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 376), )
if mibBuilder.loadTexts: trkDprsStatsOctBpTable.setStatus('mandatory')
trkDprsStatsOctBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 376, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TrunksMIB", "trkIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsOctBpEpIndex"), (0, "Nortel-Magellan-Passport-TrunksMIB", "trkDprsStatsOctBpDpIndex"))
if mibBuilder.loadTexts: trkDprsStatsOctBpEntry.setStatus('mandatory')
trkDprsStatsOctBpEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 376, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2))))
if mibBuilder.loadTexts: trkDprsStatsOctBpEpIndex.setStatus('mandatory')
trkDprsStatsOctBpDpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 376, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dp0", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))))
if mibBuilder.loadTexts: trkDprsStatsOctBpDpIndex.setStatus('mandatory')
trkDprsStatsOctBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 60, 10, 376, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trkDprsStatsOctBpValue.setStatus('mandatory')
trunksGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 43, 1))
trunksGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 43, 1, 5))
trunksGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 43, 1, 5, 1))
trunksGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 43, 1, 5, 1, 2))
trunksCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 43, 3))
trunksCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 43, 3, 5))
trunksCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 43, 3, 5, 1))
trunksCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 43, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-TrunksMIB", trkIfEntryEntry=trkIfEntryEntry, trkAreYouThereModeEntries=trkAreYouThereModeEntries, trkDprsStatsDiscBpEntry=trkDprsStatsDiscBpEntry, trkVnsStatsPktBpEpIndex=trkVnsStatsPktBpEpIndex, trkDiscardTrunkPktFromIf=trkDiscardTrunkPktFromIf, trkAlarmStatus=trkAlarmStatus, trkDprsStatsOctBpEntry=trkDprsStatsOctBpEntry, trunksGroupBE00=trunksGroupBE00, trkPktBpEntry=trkPktBpEntry, trkPorsStatsPktBpValue=trkPorsStatsPktBpValue, trkPktFromIf=trkPktFromIf, trkLowSpeedAlarmThreshold=trkLowSpeedAlarmThreshold, trkOverridesEntry=trkOverridesEntry, trkDprsStatsOctBpValue=trkDprsStatsOctBpValue, trkFwdStatsOperTable=trkFwdStatsOperTable, trkPorsStatsPktBpDpIndex=trkPorsStatsPktBpDpIndex, trkPorsStatsOctBpTable=trkPorsStatsOctBpTable, trkDprsStatsPktBpTable=trkDprsStatsPktBpTable, trunksCapabilitiesBE00=trunksCapabilitiesBE00, trkPorsStatsOperTable=trkPorsStatsOperTable, trkPktBpValue=trkPktBpValue, trkVnsStatsPktBpDpIndex=trkVnsStatsPktBpDpIndex, trkPorsStatsOperEntry=trkPorsStatsOperEntry, trkVnsStatsPktBpEntry=trkVnsStatsPktBpEntry, trkDprsStatsPktBpEpIndex=trkDprsStatsPktBpEpIndex, trkRemoteValidationAction=trkRemoteValidationAction, trkDprsStatsPktBpValue=trkDprsStatsPktBpValue, trkDiscBpValue=trkDiscBpValue, trkDprsStatsDiscBpDpIndex=trkDprsStatsDiscBpDpIndex, trkVnsStatsVnsDiscUnforwardFromIf=trkVnsStatsVnsDiscUnforwardFromIf, trkPorsStatsRowStatusTable=trkPorsStatsRowStatusTable, trkTrunkPktToIf=trkTrunkPktToIf, trkOverrideRoundTripUsec=trkOverrideRoundTripUsec, trkPorsStatsComponentName=trkPorsStatsComponentName, trkVnsStatsOctBpValue=trkVnsStatsOctBpValue, trkPorsStatsPorsIntOctetFromIf=trkPorsStatsPorsIntOctetFromIf, trkTrunkPktFromIf=trkTrunkPktFromIf, trkOctBpTable=trkOctBpTable, trkDprsStatsRowStatus=trkDprsStatsRowStatus, trunksMIB=trunksMIB, trkDiscBpEntry=trkDiscBpEntry, trkVnsStatsOctBpEntry=trkVnsStatsOctBpEntry, trkDprsStatsDiscBpEpIndex=trkDprsStatsDiscBpEpIndex, trkFwdStatsFwdPktFromIf=trkFwdStatsFwdPktFromIf, trkPorsStatsPorsIntDiscUnforwardFromIf=trkPorsStatsPorsIntDiscUnforwardFromIf, trkOperStatusTable=trkOperStatusTable, trkVnsStatsOctBpDpIndex=trkVnsStatsOctBpDpIndex, trkProvTable=trkProvTable, trkStatsEntry=trkStatsEntry, trkUsageState=trkUsageState, trkStatsTable=trkStatsTable, trkPorsStatsOctBpEntry=trkPorsStatsOctBpEntry, trunksCapabilities=trunksCapabilities, trkVnsStatsVnsOctetFromIf=trkVnsStatsVnsOctetFromIf, trunksGroupBE00A=trunksGroupBE00A, trkOctBpIndex=trkOctBpIndex, trunksCapabilitiesBE=trunksCapabilitiesBE, trkDprsStatsPktBpDpIndex=trkDprsStatsPktBpDpIndex, trkPorsStatsDiscBpDpIndex=trkPorsStatsDiscBpDpIndex, trkOperationalState=trkOperationalState, trkRowStatusEntry=trkRowStatusEntry, trunksGroup=trunksGroup, trkVnsStatsComponentName=trkVnsStatsComponentName, trkPorsStatsPorsIntPktFromIf=trkPorsStatsPorsIntPktFromIf, trkSpdThRowStatus=trkSpdThRowStatus, trkDiscBpIndex=trkDiscBpIndex, trkVnsStatsOctBpEpIndex=trkVnsStatsOctBpEpIndex, trkSnmpOperStatus=trkSnmpOperStatus, trkMeasuredRoundTripDelayUsec=trkMeasuredRoundTripDelayUsec, trkTransportEntry=trkTransportEntry, trkDiscardIntUnforward=trkDiscardIntUnforward, trkIdleTimeOut=trkIdleTimeOut, trkIntPktFromIf=trkIntPktFromIf, trkDprsStatsDiscBpValue=trkDprsStatsDiscBpValue, trk=trk, trkDiscardUnforward=trkDiscardUnforward, trkUnknownStatus=trkUnknownStatus, trkOperEntry=trkOperEntry, trkPorsStatsPktBpTable=trkPorsStatsPktBpTable, trkPorsStatsDiscBpEpIndex=trkPorsStatsDiscBpEpIndex, trkPorsStatsOctBpEpIndex=trkPorsStatsOctBpEpIndex, trkComponentName=trkComponentName, trkPorsStatsDiscBpEntry=trkPorsStatsDiscBpEntry, trkVnsStatsRowStatus=trkVnsStatsRowStatus, trkPorsStatsOctBpValue=trkPorsStatsOctBpValue, trkFwdStatsComponentName=trkFwdStatsComponentName, trkFwdStats=trkFwdStats, trkPorsStatsPktBpEntry=trkPorsStatsPktBpEntry, trkIfIndex=trkIfIndex, trkOperTable=trkOperTable, trkOverrideTransmitSpeed=trkOverrideTransmitSpeed, trkPorsStatsRowStatusEntry=trkPorsStatsRowStatusEntry, trkPorsStatsPktBpEpIndex=trkPorsStatsPktBpEpIndex, trkExpectedRemoteNodeName=trkExpectedRemoteNodeName, trkPorsStatsIndex=trkPorsStatsIndex, trkVnsStatsDiscBpEntry=trkVnsStatsDiscBpEntry, trkSpdThTable=trkSpdThTable, trkStorageType=trkStorageType, trkDprsStatsIndex=trkDprsStatsIndex, trkControlStatus=trkControlStatus, trkOldOverrideRoundTripDelay=trkOldOverrideRoundTripDelay, trkStandbyStatus=trkStandbyStatus, trkMeasuredRoundTripDelay=trkMeasuredRoundTripDelay, trkRowStatus=trkRowStatus, trkDiscBpTable=trkDiscBpTable, trkMaxTxUnit=trkMaxTxUnit, trkFwdStatsFwdDiscUnforwardFromIf=trkFwdStatsFwdDiscUnforwardFromIf, trkOctBpEntry=trkOctBpEntry, trkProvEntry=trkProvEntry, trkStagingAttempts=trkStagingAttempts, trkVnsStatsDiscBpValue=trkVnsStatsDiscBpValue, trkDprsStatsRowStatusEntry=trkDprsStatsRowStatusEntry, trkRemoteComponentName=trkRemoteComponentName, trkSpeedReportingEntry=trkSpeedReportingEntry, trkOverridesTable=trkOverridesTable, trkDprsStatsOctBpDpIndex=trkDprsStatsOctBpDpIndex, trkTransportTable=trkTransportTable, trkFwdStatsOperEntry=trkFwdStatsOperEntry, trkVnsStatsDiscBpEpIndex=trkVnsStatsDiscBpEpIndex, trkVnsStatsStorageType=trkVnsStatsStorageType, trkDprsStatsComponentName=trkDprsStatsComponentName, trkVnsStatsDiscBpTable=trkVnsStatsDiscBpTable, trkDprsStatsDiscBpTable=trkDprsStatsDiscBpTable, trkSpdThEntry=trkSpdThEntry, trkPorsStatsRowStatus=trkPorsStatsRowStatus, trkProceduralStatus=trkProceduralStatus, trkFwdStatsStorageType=trkFwdStatsStorageType, trkStateEntry=trkStateEntry, trkPktBpIndex=trkPktBpIndex, trkPorsStatsPorsNormPktFromIf=trkPorsStatsPorsNormPktFromIf, trkDprsStatsStorageType=trkDprsStatsStorageType, trkStateTable=trkStateTable, trunksGroupBE=trunksGroupBE, trkFwdStatsRowStatusEntry=trkFwdStatsRowStatusEntry, trkSpeedReportingTable=trkSpeedReportingTable, trkMaximumExpectedRoundTripDelay=trkMaximumExpectedRoundTripDelay, trkIndex=trkIndex, trkVnsStatsVnsPktFromIf=trkVnsStatsVnsPktFromIf, trkPorsStatsDiscBpValue=trkPorsStatsDiscBpValue, trkFwdStatsIndex=trkFwdStatsIndex, trkDprsStats=trkDprsStats, trkPorsStatsOctBpDpIndex=trkPorsStatsOctBpDpIndex, trkIfEntryTable=trkIfEntryTable, trkAdminState=trkAdminState, trkVnsStatsDiscBpDpIndex=trkVnsStatsDiscBpDpIndex, trkDiscardTrunkPktToIf=trkDiscardTrunkPktToIf, trkVnsStatsOperEntry=trkVnsStatsOperEntry, trkDprsStatsRowStatusTable=trkDprsStatsRowStatusTable, trkPorsStatsStorageType=trkPorsStatsStorageType, trkVnsStatsRowStatusEntry=trkVnsStatsRowStatusEntry, trkMeasuredSpeedToIf=trkMeasuredSpeedToIf, trkVnsStats=trkVnsStats, trkIfAdminStatus=trkIfAdminStatus, trkDprsStatsOctBpTable=trkDprsStatsOctBpTable, trkVnsStatsPktBpTable=trkVnsStatsPktBpTable, trkOctBpValue=trkOctBpValue, trkPktBpTable=trkPktBpTable, trkPorsStats=trkPorsStats, trkFwdStatsFwdOctetFromIf=trkFwdStatsFwdOctetFromIf, trkRowStatusTable=trkRowStatusTable, trkVnsStatsOctBpTable=trkVnsStatsOctBpTable, trkPorsStatsDiscBpTable=trkPorsStatsDiscBpTable, trkVnsStatsRowStatusTable=trkVnsStatsRowStatusTable, trkFwdStatsRowStatusTable=trkFwdStatsRowStatusTable, trunksCapabilitiesBE00A=trunksCapabilitiesBE00A, trkVnsStatsIndex=trkVnsStatsIndex, trkOperStatusEntry=trkOperStatusEntry, trkFwdStatsRowStatus=trkFwdStatsRowStatus, trkPorsStatsPorsNormOctetFromIf=trkPorsStatsPorsNormOctetFromIf, trkDprsStatsOctBpEpIndex=trkDprsStatsOctBpEpIndex, trkUtilization=trkUtilization, trkAvailabilityStatus=trkAvailabilityStatus, trkPorsStatsPorsNormDiscUnforwardFromIf=trkPorsStatsPorsNormDiscUnforwardFromIf, trkVnsStatsPktBpValue=trkVnsStatsPktBpValue, trkHighSpeedAlarmThreshold=trkHighSpeedAlarmThreshold, trkVnsStatsOperTable=trkVnsStatsOperTable, trkDprsStatsPktBpEntry=trkDprsStatsPktBpEntry, trkSpdThValue=trkSpdThValue, trkSpeedReportingHoldOff=trkSpeedReportingHoldOff)
