#
# PySNMP MIB module HPN-ICF-DOT11S-MESH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DOT11S-MESH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hpnicfDot11, HpnicfDot11RadioElementIndex, hpnicfDot11APElementIndex = mibBuilder.importSymbols("HPN-ICF-DOT11-REF-MIB", "hpnicfDot11", "HpnicfDot11RadioElementIndex", "hpnicfDot11APElementIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Bits, MibIdentifier, Counter32, Integer32, iso, Gauge32, NotificationType, ObjectIdentity, IpAddress, ModuleIdentity, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "MibIdentifier", "Counter32", "Integer32", "iso", "Gauge32", "NotificationType", "ObjectIdentity", "IpAddress", "ModuleIdentity", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, TextualConvention, DisplayString, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "MacAddress", "RowStatus")
hpnicfDot11sMesh = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11))
hpnicfDot11sMesh.setRevisions(('2009-08-01 10:00', '2008-11-07 10:00', '2008-07-08 18:00',))
if mibBuilder.loadTexts: hpnicfDot11sMesh.setLastUpdated('200908011000Z')
if mibBuilder.loadTexts: hpnicfDot11sMesh.setOrganization('')
hpnicfDot11sConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1))
hpnicfDot11sWDSConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 2))
hpnicfDot11sMeshStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3))
hpnicfDot11sMeshGlobalPara = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 1))
hpnicfDot11sMeshMkdID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 1, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11sMeshMkdID.setStatus('current')
hpnicfDot11sMeshPflTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2), )
if mibBuilder.loadTexts: hpnicfDot11sMeshPflTable.setStatus('current')
hpnicfDot11sMeshPflEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sMeshPflIndex"))
if mibBuilder.loadTexts: hpnicfDot11sMeshPflEntry.setStatus('current')
hpnicfDot11sMeshPflIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11sMeshPflIndex.setStatus('current')
hpnicfDot11sMeshPflMeshID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMeshPflMeshID.setStatus('current')
hpnicfDot11sMeshPflBindIntNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2, 1, 3), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMeshPflBindIntNum.setStatus('current')
hpnicfDot11sMeshPflKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800))).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMeshPflKeepAlive.setStatus('current')
hpnicfDot11sMeshPflBackhaulRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2, 1, 5), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMeshPflBackhaulRate.setStatus('current')
hpnicfDot11sMeshMkdServEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMeshMkdServEnable.setStatus('current')
hpnicfDot11sMeshPflEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMeshPflEnable.setStatus('current')
hpnicfDot11sMeshPflRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMeshPflRowStatus.setStatus('current')
hpnicfDot11sMpPlcyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3), )
if mibBuilder.loadTexts: hpnicfDot11sMpPlcyTable.setStatus('current')
hpnicfDot11sMpPlcyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sMpPlcyIndex"))
if mibBuilder.loadTexts: hpnicfDot11sMpPlcyEntry.setStatus('current')
hpnicfDot11sMpPlcyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11sMpPlcyIndex.setStatus('current')
hpnicfDot11sMpPlcyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMpPlcyName.setStatus('current')
hpnicfDot11sMpPlcyInitEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 3), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMpPlcyInitEnable.setStatus('current')
hpnicfDot11sMlspEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMlspEnable.setStatus('current')
hpnicfDot11sProbReqInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 5), Integer32()).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sProbReqInterval.setStatus('current')
hpnicfDot11sRoleAuthEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sRoleAuthEnable.setStatus('current')
hpnicfDot11sLinkHoldRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 100))).setUnits('dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sLinkHoldRSSI.setStatus('current')
hpnicfDot11sLinkHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 20000))).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sLinkHoldTime.setStatus('current')
hpnicfDot11sSwitchMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sSwitchMargin.setStatus('current')
hpnicfDot11sLinkSaturationRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 150))).setUnits('dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sLinkSaturationRSSI.setStatus('current')
hpnicfDot11sLinkRateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("realtime", 2))).clone('fixed')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sLinkRateMode.setStatus('current')
hpnicfDot11sMaxLinkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMaxLinkNum.setStatus('current')
hpnicfDot11sMpPlcyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMpPlcyRowStatus.setStatus('current')
hpnicfDot11sMlspCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 4), )
if mibBuilder.loadTexts: hpnicfDot11sMlspCfgTable.setStatus('current')
hpnicfDot11sMlspCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sMpPlcyIndex"), (0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sMlspProxyIndex"))
if mibBuilder.loadTexts: hpnicfDot11sMlspCfgEntry.setStatus('current')
hpnicfDot11sMlspProxyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11sMlspProxyIndex.setStatus('current')
hpnicfDot11sMlspProxyMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 4, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMlspProxyMac.setStatus('current')
hpnicfDot11sMlspRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sMlspRowStatus.setStatus('current')
hpnicfDot11sRadioCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 5), )
if mibBuilder.loadTexts: hpnicfDot11sRadioCfgTable.setStatus('current')
hpnicfDot11sRadioCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sCfgRadioIndex"))
if mibBuilder.loadTexts: hpnicfDot11sRadioCfgEntry.setStatus('current')
hpnicfDot11sCfgRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 5, 1, 1), HpnicfDot11RadioElementIndex())
if mibBuilder.loadTexts: hpnicfDot11sCfgRadioIndex.setStatus('current')
hpnicfDot11sMeshPflMap = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11sMeshPflMap.setStatus('current')
hpnicfDot11sMpPlcyMap = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 5, 1, 3), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11sMpPlcyMap.setStatus('current')
hpnicfDot11sAPCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 6), )
if mibBuilder.loadTexts: hpnicfDot11sAPCfgTable.setStatus('current')
hpnicfDot11sAPCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 6, 1), ).setIndexNames((0, "HPN-ICF-DOT11-REF-MIB", "hpnicfDot11APElementIndex"))
if mibBuilder.loadTexts: hpnicfDot11sAPCfgEntry.setStatus('current')
hpnicfDot11sPortalEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 1, 6, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11sPortalEnable.setStatus('current')
hpnicfDot11sWDSPeerMacTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 2, 1), )
if mibBuilder.loadTexts: hpnicfDot11sWDSPeerMacTable.setStatus('current')
hpnicfDot11sWDSPeerMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sCfgRadioIndex"), (0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sWDSPeerMacIndex"))
if mibBuilder.loadTexts: hpnicfDot11sWDSPeerMacEntry.setStatus('current')
hpnicfDot11sWDSPeerMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11sWDSPeerMacIndex.setStatus('current')
hpnicfDot11sWDSPeerMacAddrss = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 2, 1, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sWDSPeerMacAddrss.setStatus('current')
hpnicfDot11sWDSPeerMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11sWDSPeerMacRowStatus.setStatus('current')
hpnicfDot11sMeshLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 1), )
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkStatusTable.setStatus('current')
hpnicfDot11sMeshLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sMeshLinkIfIndex"))
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkStatusEntry.setStatus('current')
hpnicfDot11sMeshLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkIfIndex.setStatus('current')
hpnicfDot11sMeshLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkName.setStatus('current')
hpnicfDot11sMeshLinkBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkBSSID.setStatus('current')
hpnicfDot11sMeshLinkPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkPeerMac.setStatus('current')
hpnicfDot11sMeshLinkExistDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 1, 1, 5), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkExistDuration.setStatus('current')
hpnicfDot11sMeshLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("dormant", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkType.setStatus('current')
hpnicfDot11sMeshLinkStatisTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2), )
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkStatisTable.setStatus('current')
hpnicfDot11sMeshLinkStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-REF-MIB", "hpnicfDot11APElementIndex"), (0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sMeshLinkStatIfIndex"))
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkStatisEntry.setStatus('current')
hpnicfDot11sMeshLinkStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkStatIfIndex.setStatus('current')
hpnicfDot11sMeshLinkNbrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkNbrIndex.setStatus('current')
hpnicfDot11sMeshLinkRxTotByte = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkRxTotByte.setStatus('current')
hpnicfDot11sMeshLinkRxTotPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkRxTotPkt.setStatus('current')
hpnicfDot11sMeshLinkRxUniPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkRxUniPkt.setStatus('current')
hpnicfDot11sMeshLinkRxBrocPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkRxBrocPkt.setStatus('current')
hpnicfDot11sMeshLinkRxMuticPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkRxMuticPkt.setStatus('current')
hpnicfDot11sMeshLinkRxDiscPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkRxDiscPkt.setStatus('current')
hpnicfDot11sMeshLinkTxTotByte = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkTxTotByte.setStatus('current')
hpnicfDot11sMeshLinkTxTotPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkTxTotPkt.setStatus('current')
hpnicfDot11sMeshLinkTxUniPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkTxUniPkt.setStatus('current')
hpnicfDot11sMeshLinkTxBrocPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkTxBrocPkt.setStatus('current')
hpnicfDot11sMeshLinkTxMuticPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkTxMuticPkt.setStatus('current')
hpnicfDot11sMeshLinkTxDiscPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkTxDiscPkt.setStatus('current')
hpnicfDot11sMeshLinkIFName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 2, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkIFName.setStatus('current')
hpnicfDot11sMeshNbrStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3), )
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrStatusTable.setStatus('current')
hpnicfDot11sMeshNbrStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-REF-MIB", "hpnicfDot11APElementIndex"), (0, "HPN-ICF-DOT11S-MESH-MIB", "hpnicfDot11sMeshNbrIndex"))
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrStatusEntry.setStatus('current')
hpnicfDot11sMeshNbrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrIndex.setStatus('current')
hpnicfDot11sMeshNbrRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrRadioID.setStatus('current')
hpnicfDot11sMeshLocalMeshID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLocalMeshID.setStatus('current')
hpnicfDot11sMeshNbrMeshID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrMeshID.setStatus('current')
hpnicfDot11sMeshNbrBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrBSSID.setStatus('current')
hpnicfDot11sMeshNbrPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrPeerMac.setStatus('current')
hpnicfDot11sMeshLinkInMp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshLinkInMp.setStatus('current')
hpnicfDot11sMeshMPLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("processing", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshMPLinkStatus.setStatus('current')
hpnicfDot11sMeshNbrChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrChannel.setStatus('current')
hpnicfDot11sMeshNbrLinkDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 10), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrLinkDuration.setStatus('current')
hpnicfDot11sMeshNbrRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrRSSI.setStatus('current')
hpnicfDot11sMeshNbrSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 11, 3, 3, 1, 12), Integer32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11sMeshNbrSNR.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DOT11S-MESH-MIB", hpnicfDot11sMeshLinkTxMuticPkt=hpnicfDot11sMeshLinkTxMuticPkt, hpnicfDot11sMlspProxyMac=hpnicfDot11sMlspProxyMac, hpnicfDot11sMeshNbrMeshID=hpnicfDot11sMeshNbrMeshID, hpnicfDot11sMlspEnable=hpnicfDot11sMlspEnable, hpnicfDot11sMeshLinkNbrIndex=hpnicfDot11sMeshLinkNbrIndex, hpnicfDot11sLinkSaturationRSSI=hpnicfDot11sLinkSaturationRSSI, hpnicfDot11sMpPlcyTable=hpnicfDot11sMpPlcyTable, hpnicfDot11sMeshNbrStatusTable=hpnicfDot11sMeshNbrStatusTable, hpnicfDot11sMeshNbrPeerMac=hpnicfDot11sMeshNbrPeerMac, hpnicfDot11sMpPlcyIndex=hpnicfDot11sMpPlcyIndex, hpnicfDot11sLinkHoldTime=hpnicfDot11sLinkHoldTime, PYSNMP_MODULE_ID=hpnicfDot11sMesh, hpnicfDot11sMeshNbrRSSI=hpnicfDot11sMeshNbrRSSI, hpnicfDot11sMeshLinkIFName=hpnicfDot11sMeshLinkIFName, hpnicfDot11sMeshPflMap=hpnicfDot11sMeshPflMap, hpnicfDot11sMeshNbrIndex=hpnicfDot11sMeshNbrIndex, hpnicfDot11sMeshStatusGroup=hpnicfDot11sMeshStatusGroup, hpnicfDot11sMpPlcyName=hpnicfDot11sMpPlcyName, hpnicfDot11sWDSPeerMacIndex=hpnicfDot11sWDSPeerMacIndex, hpnicfDot11sMaxLinkNum=hpnicfDot11sMaxLinkNum, hpnicfDot11sLinkHoldRSSI=hpnicfDot11sLinkHoldRSSI, hpnicfDot11sMeshNbrStatusEntry=hpnicfDot11sMeshNbrStatusEntry, hpnicfDot11sMeshLinkRxBrocPkt=hpnicfDot11sMeshLinkRxBrocPkt, hpnicfDot11sMeshLinkBSSID=hpnicfDot11sMeshLinkBSSID, hpnicfDot11sCfgRadioIndex=hpnicfDot11sCfgRadioIndex, hpnicfDot11sMeshLinkStatisEntry=hpnicfDot11sMeshLinkStatisEntry, hpnicfDot11sMeshLinkRxMuticPkt=hpnicfDot11sMeshLinkRxMuticPkt, hpnicfDot11sProbReqInterval=hpnicfDot11sProbReqInterval, hpnicfDot11sMeshPflIndex=hpnicfDot11sMeshPflIndex, hpnicfDot11sMeshLinkStatusTable=hpnicfDot11sMeshLinkStatusTable, hpnicfDot11sMlspCfgEntry=hpnicfDot11sMlspCfgEntry, hpnicfDot11sMeshLinkTxTotByte=hpnicfDot11sMeshLinkTxTotByte, hpnicfDot11sMeshLinkStatIfIndex=hpnicfDot11sMeshLinkStatIfIndex, hpnicfDot11sSwitchMargin=hpnicfDot11sSwitchMargin, hpnicfDot11sMlspRowStatus=hpnicfDot11sMlspRowStatus, hpnicfDot11sMeshNbrLinkDuration=hpnicfDot11sMeshNbrLinkDuration, hpnicfDot11sMeshPflBindIntNum=hpnicfDot11sMeshPflBindIntNum, hpnicfDot11sMeshLinkExistDuration=hpnicfDot11sMeshLinkExistDuration, hpnicfDot11sMeshGlobalPara=hpnicfDot11sMeshGlobalPara, hpnicfDot11sMlspProxyIndex=hpnicfDot11sMlspProxyIndex, hpnicfDot11sMeshPflRowStatus=hpnicfDot11sMeshPflRowStatus, hpnicfDot11sWDSConfigGroup=hpnicfDot11sWDSConfigGroup, hpnicfDot11sMeshNbrChannel=hpnicfDot11sMeshNbrChannel, hpnicfDot11sMeshLinkIfIndex=hpnicfDot11sMeshLinkIfIndex, hpnicfDot11sLinkRateMode=hpnicfDot11sLinkRateMode, hpnicfDot11sMeshLinkStatusEntry=hpnicfDot11sMeshLinkStatusEntry, hpnicfDot11sMeshMkdServEnable=hpnicfDot11sMeshMkdServEnable, hpnicfDot11sWDSPeerMacRowStatus=hpnicfDot11sWDSPeerMacRowStatus, hpnicfDot11sMpPlcyMap=hpnicfDot11sMpPlcyMap, hpnicfDot11sMeshLinkStatisTable=hpnicfDot11sMeshLinkStatisTable, hpnicfDot11sMeshLinkTxBrocPkt=hpnicfDot11sMeshLinkTxBrocPkt, hpnicfDot11sMeshPflTable=hpnicfDot11sMeshPflTable, hpnicfDot11sMeshPflKeepAlive=hpnicfDot11sMeshPflKeepAlive, hpnicfDot11sMeshLinkTxDiscPkt=hpnicfDot11sMeshLinkTxDiscPkt, hpnicfDot11sMeshNbrSNR=hpnicfDot11sMeshNbrSNR, hpnicfDot11sMeshPflBackhaulRate=hpnicfDot11sMeshPflBackhaulRate, hpnicfDot11sMeshLinkInMp=hpnicfDot11sMeshLinkInMp, hpnicfDot11sMeshLinkTxUniPkt=hpnicfDot11sMeshLinkTxUniPkt, hpnicfDot11sMlspCfgTable=hpnicfDot11sMlspCfgTable, hpnicfDot11sMeshLinkTxTotPkt=hpnicfDot11sMeshLinkTxTotPkt, hpnicfDot11sMeshLinkRxUniPkt=hpnicfDot11sMeshLinkRxUniPkt, hpnicfDot11sMeshLocalMeshID=hpnicfDot11sMeshLocalMeshID, hpnicfDot11sWDSPeerMacAddrss=hpnicfDot11sWDSPeerMacAddrss, hpnicfDot11sMeshMPLinkStatus=hpnicfDot11sMeshMPLinkStatus, hpnicfDot11sMpPlcyEntry=hpnicfDot11sMpPlcyEntry, hpnicfDot11sMpPlcyRowStatus=hpnicfDot11sMpPlcyRowStatus, hpnicfDot11sMeshLinkType=hpnicfDot11sMeshLinkType, hpnicfDot11sMeshPflMeshID=hpnicfDot11sMeshPflMeshID, hpnicfDot11sRadioCfgEntry=hpnicfDot11sRadioCfgEntry, hpnicfDot11sWDSPeerMacTable=hpnicfDot11sWDSPeerMacTable, hpnicfDot11sConfigGroup=hpnicfDot11sConfigGroup, hpnicfDot11sMeshLinkRxTotByte=hpnicfDot11sMeshLinkRxTotByte, hpnicfDot11sAPCfgEntry=hpnicfDot11sAPCfgEntry, hpnicfDot11sMesh=hpnicfDot11sMesh, hpnicfDot11sMpPlcyInitEnable=hpnicfDot11sMpPlcyInitEnable, hpnicfDot11sMeshMkdID=hpnicfDot11sMeshMkdID, hpnicfDot11sMeshLinkRxDiscPkt=hpnicfDot11sMeshLinkRxDiscPkt, hpnicfDot11sMeshLinkPeerMac=hpnicfDot11sMeshLinkPeerMac, hpnicfDot11sMeshPflEnable=hpnicfDot11sMeshPflEnable, hpnicfDot11sMeshNbrBSSID=hpnicfDot11sMeshNbrBSSID, hpnicfDot11sRadioCfgTable=hpnicfDot11sRadioCfgTable, hpnicfDot11sAPCfgTable=hpnicfDot11sAPCfgTable, hpnicfDot11sMeshPflEntry=hpnicfDot11sMeshPflEntry, hpnicfDot11sMeshLinkName=hpnicfDot11sMeshLinkName, hpnicfDot11sMeshLinkRxTotPkt=hpnicfDot11sMeshLinkRxTotPkt, hpnicfDot11sMeshNbrRadioID=hpnicfDot11sMeshNbrRadioID, hpnicfDot11sPortalEnable=hpnicfDot11sPortalEnable, hpnicfDot11sWDSPeerMacEntry=hpnicfDot11sWDSPeerMacEntry, hpnicfDot11sRoleAuthEnable=hpnicfDot11sRoleAuthEnable)
