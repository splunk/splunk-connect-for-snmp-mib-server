#
# PySNMP MIB module CISCO-GGSN-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-GGSN-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:41:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, Bits, NotificationType, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, iso, Integer32, ObjectIdentity, MibIdentifier, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "NotificationType", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "iso", "Integer32", "ObjectIdentity", "MibIdentifier", "IpAddress", "Counter32")
TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
cggsnQosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 241))
cggsnQosMIB.setRevisions(('2008-12-17 00:00', '2006-09-11 00:00', '2005-03-21 17:00', '2003-11-27 13:00', '2002-04-18 14:00', '2001-12-06 13:30',))
if mibBuilder.loadTexts: cggsnQosMIB.setLastUpdated('200812170000Z')
if mibBuilder.loadTexts: cggsnQosMIB.setOrganization('Cisco Systems, Inc.')
class UmtsQosTrafficClass(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("conversational", 1), ("streaming", 2), ("interactive", 3), ("background", 4))

cggsnQosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 241, 1))
cggsnQosGeneralConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 1))
cggsnQosCanonicalQos = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 2))
cggsnQosUmtsQos = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3))
cggsnQosMappingMethod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("canonical", 2), ("delay", 3), ("umts", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnQosMappingMethod.setStatus('current')
cggsnQosClassIpTosMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 1, 2), )
if mibBuilder.loadTexts: cggsnQosClassIpTosMapTable.setStatus('current')
cggsnQosClassIpTosMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-GGSN-QOS-MIB", "cggsnQosClass"))
if mibBuilder.loadTexts: cggsnQosClassIpTosMapEntry.setStatus('current')
cggsnQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: cggsnQosClass.setStatus('current')
cggsnQosMappedIpTos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnQosMappedIpTos.setStatus('current')
cggsnQosCurrentPdps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 1, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cggsnQosCurrentPdps.setStatus('current')
cggsnQosTotalBandwidthResrc = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('bits/sec').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnQosTotalBandwidthResrc.setStatus('current')
cggsnQosCurrentUsedBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 2, 2), Gauge32()).setUnits('bits/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: cggsnQosCurrentUsedBandwidth.setStatus('current')
cggsnQosPremiumMtDeviationFactor = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnQosPremiumMtDeviationFactor.setStatus('current')
cggsnQosBestEffrtBandWidthFactor = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000000)).clone(10)).setUnits('bits/sec').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnQosBestEffrtBandWidthFactor.setStatus('current')
cggsnQosPremiumMeanThroughput = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 2, 5), Gauge32()).setUnits('bytes/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: cggsnQosPremiumMeanThroughput.setStatus('current')
cggsnQosNormalMeanThroughput = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 2, 6), Gauge32()).setUnits('bytes/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: cggsnQosNormalMeanThroughput.setStatus('current')
cggsnQosBestEffortMeanThroughput = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 2, 7), Gauge32()).setUnits('bytes/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: cggsnQosBestEffortMeanThroughput.setStatus('current')
cggsnQosTrafficClassPhbTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 1), )
if mibBuilder.loadTexts: cggsnQosTrafficClassPhbTable.setStatus('current')
cggsnQosTrafficClassPhbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-GGSN-QOS-MIB", "cggsnQosUmtsTrafficClass"))
if mibBuilder.loadTexts: cggsnQosTrafficClassPhbEntry.setStatus('current')
cggsnQosUmtsTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("signalling", 1), ("conversational", 2), ("streaming", 3), ("interactive", 4), ("background", 5))))
if mibBuilder.loadTexts: cggsnQosUmtsTrafficClass.setStatus('current')
cggsnQosUmtsDiffServPhbgroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("signallingClass", 1), ("efClass", 2), ("afClass1", 3), ("afClass2", 4), ("afClass3", 5), ("afClass4", 6), ("bestEffort", 7))).clone('bestEffort')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnQosUmtsDiffServPhbgroup.setStatus('current')
cggsnQosUmtsPdps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cggsnQosUmtsPdps.setStatus('current')
cggsnQosPhbToDscpMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 2), )
if mibBuilder.loadTexts: cggsnQosPhbToDscpMapTable.setStatus('current')
cggsnQosPhbToDscpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-GGSN-QOS-MIB", "cggsnQosDiffServPhb"))
if mibBuilder.loadTexts: cggsnQosPhbToDscpMapEntry.setStatus('current')
cggsnQosDiffServPhb = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("signallingClass", 1), ("efClass", 2), ("afClass1Low", 3), ("afClass1Medium", 4), ("afClass1High", 5), ("afClass2Low", 6), ("afClass2Medium", 7), ("afClass2High", 8), ("afClass3Low", 9), ("afClass3Medium", 10), ("afClass3High", 11), ("afClass4Low", 12), ("afClass4Medium", 13), ("afClass4High", 14), ("bestEffort", 15))))
if mibBuilder.loadTexts: cggsnQosDiffServPhb.setStatus('current')
cggsnQosDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnQosDscp.setStatus('current')
cggsnQosUmtsDscpUnmodified = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("all", 3), ("none", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnQosUmtsDscpUnmodified.setStatus('current')
cggsnQosUmtsCac = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4))
cggsnUmtsQosMapImsSigTrafClass = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 1), UmtsQosTrafficClass().clone('interactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnUmtsQosMapImsSigTrafClass.setStatus('deprecated')
cggsnUmtsQosMapImsSigTrafHandPri = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("priority1", 1), ("priority2", 2), ("priority3", 3))).clone('priority1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cggsnUmtsQosMapImsSigTrafHandPri.setStatus('deprecated')
cggsnUmtsQosCacPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3), )
if mibBuilder.loadTexts: cggsnUmtsQosCacPolicyTable.setStatus('current')
cggsnUmtsQosCacPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1), ).setIndexNames((0, "CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacPolicyName"))
if mibBuilder.loadTexts: cggsnUmtsQosCacPolicyEntry.setStatus('current')
cggsnUmtsQosCacPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: cggsnUmtsQosCacPolicyName.setStatus('current')
cggsnUmtsQosCacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacRowStatus.setStatus('current')
cggsnUmtsQosCacMaxPdp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacMaxPdp.setStatus('current')
cggsnUmtsQosCacPdpThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacPdpThreshold.setStatus('current')
cggsnUmtsQosCacMaxTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 5), UmtsQosTrafficClass()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacMaxTrafficClass.setStatus('current')
cggsnUmtsQosCacMaxTrafHandPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("priority1", 1), ("priority2", 2), ("priority3", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacMaxTrafHandPrio.setStatus('current')
cggsnUmtsQosCacMaxThruPut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacMaxThruPut.setStatus('current')
cggsnUmtsQosCacMaxThruPutReject = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacMaxThruPutReject.setStatus('current')
cggsnUmtsQosCacMaxDelayClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("delayClass1", 1), ("delayClass2", 2), ("delayClass3", 3), ("delayClass4", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacMaxDelayClass.setStatus('current')
cggsnUmtsQosCacMaxDelayClassRej = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 3, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacMaxDelayClassRej.setStatus('current')
cggsnUmtsQosCacTcTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 4), )
if mibBuilder.loadTexts: cggsnUmtsQosCacTcTable.setStatus('current')
cggsnUmtsQosCacTcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 4, 1), ).setIndexNames((0, "CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacPolicyName"), (0, "CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcTrafClass"), (0, "CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcBitRateType"), (0, "CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcDirection"))
if mibBuilder.loadTexts: cggsnUmtsQosCacTcEntry.setStatus('current')
cggsnUmtsQosCacTcTrafClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 4, 1, 1), UmtsQosTrafficClass())
if mibBuilder.loadTexts: cggsnUmtsQosCacTcTrafClass.setStatus('current')
cggsnUmtsQosCacTcBitRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("maximum", 1), ("guaranteed", 2))))
if mibBuilder.loadTexts: cggsnUmtsQosCacTcBitRateType.setStatus('current')
cggsnUmtsQosCacTcDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uplink", 1), ("downlink", 2))))
if mibBuilder.loadTexts: cggsnUmtsQosCacTcDirection.setStatus('current')
cggsnUmtsQosCacTcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacTcRowStatus.setStatus('current')
cggsnUmtsQosCacTcBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16000))).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacTcBitRate.setStatus('deprecated')
cggsnUmtsQosCacTcReject = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 4, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacTcReject.setStatus('current')
cggsnUmtsQosCacTcRevBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256000))).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacTcRevBitRate.setStatus('current')
cggsnUmtsQosCacBWPoolTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 5), )
if mibBuilder.loadTexts: cggsnUmtsQosCacBWPoolTable.setStatus('current')
cggsnUmtsQosCacBWPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 5, 1), ).setIndexNames((0, "CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacBWPoolName"))
if mibBuilder.loadTexts: cggsnUmtsQosCacBWPoolEntry.setStatus('current')
cggsnUmtsQosCacBWPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 5, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: cggsnUmtsQosCacBWPoolName.setStatus('current')
cggsnUmtsQosCacBWPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacBWPoolRowStatus.setStatus('current')
cggsnUmtsQosCacBWPoolBWVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnUmtsQosCacBWPoolBWVal.setStatus('current')
cggsnQosBWPoolTrafClassTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 6), )
if mibBuilder.loadTexts: cggsnQosBWPoolTrafClassTable.setStatus('current')
cggsnQosBWPoolTrafClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 6, 1), ).setIndexNames((0, "CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacBWPoolName"), (0, "CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClass"))
if mibBuilder.loadTexts: cggsnQosBWPoolTrafClassEntry.setStatus('current')
cggsnQosBWPoolTrafClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 6, 1, 1), UmtsQosTrafficClass())
if mibBuilder.loadTexts: cggsnQosBWPoolTrafClass.setStatus('current')
cggsnQosBWPoolTrafClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnQosBWPoolTrafClassRowStatus.setStatus('current')
cggsnQosBWPoolTrafClassPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 6, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnQosBWPoolTrafClassPercent.setStatus('current')
cggsnQosBWPoolTrafClassPerVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnQosBWPoolTrafClassPerVal.setStatus('current')
cggsnQosBWPoolTrafClassAbsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cggsnQosBWPoolTrafClassAbsVal.setStatus('current')
cggsnQosBWPoolTrafClassAvailBw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 241, 1, 3, 4, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cggsnQosBWPoolTrafClassAvailBw.setStatus('current')
cggsnQosMIBConformances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 241, 2))
cggsnQosMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 1))
cggsnQosMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 2))
cggsnQosMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 1, 1)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnQosGeneralConfigGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosCanonicalQosGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosMIBCompliance = cggsnQosMIBCompliance.setStatus('obsolete')
cggsnQosMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 1, 2)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnQosGeneralConfigGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosCanonicalQosGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsQosGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosMIBComplianceRev1 = cggsnQosMIBComplianceRev1.setStatus('deprecated')
cggsnQosMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 1, 3)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnQosGeneralConfigGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosCanonicalQosGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsQosGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsCacGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosMIBComplianceRev2 = cggsnQosMIBComplianceRev2.setStatus('deprecated')
cggsnQosMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 1, 4)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnQosGeneralConfigGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosCanonicalQosGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsQosGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsCacGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosMIBComplianceRev3 = cggsnQosMIBComplianceRev3.setStatus('deprecated')
cggsnQosMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 1, 5)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnQosGeneralConfigGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosCanonicalQosGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsQosGroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsCacGroupRev2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosMIBComplianceRev4 = cggsnQosMIBComplianceRev4.setStatus('current')
cggsnQosGeneralConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 2, 1)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnQosMappingMethod"), ("CISCO-GGSN-QOS-MIB", "cggsnQosMappedIpTos"), ("CISCO-GGSN-QOS-MIB", "cggsnQosCurrentPdps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosGeneralConfigGroup = cggsnQosGeneralConfigGroup.setStatus('current')
cggsnQosCanonicalQosGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 2, 2)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnQosTotalBandwidthResrc"), ("CISCO-GGSN-QOS-MIB", "cggsnQosCurrentUsedBandwidth"), ("CISCO-GGSN-QOS-MIB", "cggsnQosPremiumMtDeviationFactor"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBestEffrtBandWidthFactor"), ("CISCO-GGSN-QOS-MIB", "cggsnQosPremiumMeanThroughput"), ("CISCO-GGSN-QOS-MIB", "cggsnQosNormalMeanThroughput"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBestEffortMeanThroughput"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosCanonicalQosGroup = cggsnQosCanonicalQosGroup.setStatus('current')
cggsnQosUmtsQosGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 2, 3)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsDiffServPhbgroup"), ("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsPdps"), ("CISCO-GGSN-QOS-MIB", "cggsnQosDscp"), ("CISCO-GGSN-QOS-MIB", "cggsnQosUmtsDscpUnmodified"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosUmtsQosGroup = cggsnQosUmtsQosGroup.setStatus('current')
cggsnQosUmtsCacGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 2, 4)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosMapImsSigTrafClass"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosMapImsSigTrafHandPri"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxPdp"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacPdpThreshold"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxTrafficClass"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxTrafHandPrio"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxThruPut"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxThruPutReject"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxDelayClass"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxDelayClassRej"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcBitRate"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcReject"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacBWPoolRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacBWPoolBWVal"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassPercent"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassPerVal"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassAbsVal"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassAvailBw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosUmtsCacGroup = cggsnQosUmtsCacGroup.setStatus('deprecated')
cggsnQosUmtsCacGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 2, 5)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxPdp"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacPdpThreshold"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxTrafficClass"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxTrafHandPrio"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxThruPut"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxThruPutReject"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxDelayClass"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxDelayClassRej"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcBitRate"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcReject"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacBWPoolRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacBWPoolBWVal"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassPercent"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassPerVal"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassAbsVal"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassAvailBw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosUmtsCacGroupRev1 = cggsnQosUmtsCacGroupRev1.setStatus('deprecated')
cggsnQosUmtsCacGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 241, 2, 2, 6)).setObjects(("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxPdp"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacPdpThreshold"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxTrafficClass"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxTrafHandPrio"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxThruPut"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxThruPutReject"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxDelayClass"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacMaxDelayClassRej"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcReject"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacTcRevBitRate"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacBWPoolRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnUmtsQosCacBWPoolBWVal"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassRowStatus"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassPercent"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassPerVal"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassAbsVal"), ("CISCO-GGSN-QOS-MIB", "cggsnQosBWPoolTrafClassAvailBw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cggsnQosUmtsCacGroupRev2 = cggsnQosUmtsCacGroupRev2.setStatus('current')
mibBuilder.exportSymbols("CISCO-GGSN-QOS-MIB", cggsnQosBWPoolTrafClassTable=cggsnQosBWPoolTrafClassTable, cggsnUmtsQosCacPolicyName=cggsnUmtsQosCacPolicyName, cggsnQosUmtsCacGroupRev2=cggsnQosUmtsCacGroupRev2, cggsnQosBWPoolTrafClassRowStatus=cggsnQosBWPoolTrafClassRowStatus, cggsnQosMIBComplianceRev1=cggsnQosMIBComplianceRev1, cggsnQosUmtsDscpUnmodified=cggsnQosUmtsDscpUnmodified, cggsnUmtsQosCacTcRowStatus=cggsnUmtsQosCacTcRowStatus, cggsnUmtsQosMapImsSigTrafHandPri=cggsnUmtsQosMapImsSigTrafHandPri, cggsnUmtsQosCacTcBitRate=cggsnUmtsQosCacTcBitRate, cggsnQosBestEffrtBandWidthFactor=cggsnQosBestEffrtBandWidthFactor, cggsnUmtsQosCacBWPoolBWVal=cggsnUmtsQosCacBWPoolBWVal, cggsnQosClass=cggsnQosClass, cggsnQosMIBCompliances=cggsnQosMIBCompliances, cggsnQosCanonicalQos=cggsnQosCanonicalQos, cggsnQosGeneralConfig=cggsnQosGeneralConfig, cggsnQosMappedIpTos=cggsnQosMappedIpTos, cggsnQosMappingMethod=cggsnQosMappingMethod, cggsnQosUmtsTrafficClass=cggsnQosUmtsTrafficClass, cggsnUmtsQosCacMaxDelayClassRej=cggsnUmtsQosCacMaxDelayClassRej, cggsnQosCurrentPdps=cggsnQosCurrentPdps, cggsnQosUmtsCacGroupRev1=cggsnQosUmtsCacGroupRev1, cggsnQosBWPoolTrafClass=cggsnQosBWPoolTrafClass, cggsnUmtsQosCacPolicyEntry=cggsnUmtsQosCacPolicyEntry, cggsnQosBestEffortMeanThroughput=cggsnQosBestEffortMeanThroughput, cggsnUmtsQosCacTcBitRateType=cggsnUmtsQosCacTcBitRateType, PYSNMP_MODULE_ID=cggsnQosMIB, cggsnUmtsQosCacMaxThruPut=cggsnUmtsQosCacMaxThruPut, cggsnQosMIBObjects=cggsnQosMIBObjects, cggsnQosTrafficClassPhbEntry=cggsnQosTrafficClassPhbEntry, cggsnUmtsQosCacTcEntry=cggsnUmtsQosCacTcEntry, cggsnUmtsQosCacTcDirection=cggsnUmtsQosCacTcDirection, cggsnQosDscp=cggsnQosDscp, cggsnQosClassIpTosMapEntry=cggsnQosClassIpTosMapEntry, cggsnQosPhbToDscpMapEntry=cggsnQosPhbToDscpMapEntry, cggsnQosNormalMeanThroughput=cggsnQosNormalMeanThroughput, cggsnQosMIBComplianceRev2=cggsnQosMIBComplianceRev2, cggsnQosBWPoolTrafClassPerVal=cggsnQosBWPoolTrafClassPerVal, cggsnUmtsQosCacBWPoolTable=cggsnUmtsQosCacBWPoolTable, cggsnQosMIBConformances=cggsnQosMIBConformances, cggsnQosDiffServPhb=cggsnQosDiffServPhb, cggsnQosMIBGroups=cggsnQosMIBGroups, cggsnUmtsQosCacMaxTrafficClass=cggsnUmtsQosCacMaxTrafficClass, cggsnQosUmtsPdps=cggsnQosUmtsPdps, cggsnUmtsQosCacMaxThruPutReject=cggsnUmtsQosCacMaxThruPutReject, cggsnUmtsQosCacBWPoolName=cggsnUmtsQosCacBWPoolName, cggsnQosBWPoolTrafClassAvailBw=cggsnQosBWPoolTrafClassAvailBw, cggsnQosUmtsQosGroup=cggsnQosUmtsQosGroup, cggsnQosPhbToDscpMapTable=cggsnQosPhbToDscpMapTable, cggsnQosMIBComplianceRev4=cggsnQosMIBComplianceRev4, cggsnUmtsQosCacMaxTrafHandPrio=cggsnUmtsQosCacMaxTrafHandPrio, cggsnQosMIBCompliance=cggsnQosMIBCompliance, cggsnUmtsQosCacPolicyTable=cggsnUmtsQosCacPolicyTable, cggsnQosUmtsDiffServPhbgroup=cggsnQosUmtsDiffServPhbgroup, cggsnUmtsQosCacPdpThreshold=cggsnUmtsQosCacPdpThreshold, cggsnQosBWPoolTrafClassEntry=cggsnQosBWPoolTrafClassEntry, cggsnQosUmtsQos=cggsnQosUmtsQos, cggsnQosClassIpTosMapTable=cggsnQosClassIpTosMapTable, cggsnUmtsQosCacBWPoolRowStatus=cggsnUmtsQosCacBWPoolRowStatus, cggsnQosPremiumMeanThroughput=cggsnQosPremiumMeanThroughput, cggsnQosBWPoolTrafClassAbsVal=cggsnQosBWPoolTrafClassAbsVal, cggsnQosTotalBandwidthResrc=cggsnQosTotalBandwidthResrc, cggsnQosCurrentUsedBandwidth=cggsnQosCurrentUsedBandwidth, cggsnUmtsQosCacTcTable=cggsnUmtsQosCacTcTable, cggsnQosTrafficClassPhbTable=cggsnQosTrafficClassPhbTable, cggsnQosCanonicalQosGroup=cggsnQosCanonicalQosGroup, cggsnQosMIBComplianceRev3=cggsnQosMIBComplianceRev3, cggsnUmtsQosCacTcTrafClass=cggsnUmtsQosCacTcTrafClass, cggsnUmtsQosCacTcRevBitRate=cggsnUmtsQosCacTcRevBitRate, cggsnUmtsQosCacBWPoolEntry=cggsnUmtsQosCacBWPoolEntry, cggsnQosPremiumMtDeviationFactor=cggsnQosPremiumMtDeviationFactor, cggsnUmtsQosCacTcReject=cggsnUmtsQosCacTcReject, cggsnQosMIB=cggsnQosMIB, cggsnQosUmtsCacGroup=cggsnQosUmtsCacGroup, cggsnQosBWPoolTrafClassPercent=cggsnQosBWPoolTrafClassPercent, UmtsQosTrafficClass=UmtsQosTrafficClass, cggsnQosUmtsCac=cggsnQosUmtsCac, cggsnQosGeneralConfigGroup=cggsnQosGeneralConfigGroup, cggsnUmtsQosMapImsSigTrafClass=cggsnUmtsQosMapImsSigTrafClass, cggsnUmtsQosCacMaxPdp=cggsnUmtsQosCacMaxPdp, cggsnUmtsQosCacMaxDelayClass=cggsnUmtsQosCacMaxDelayClass, cggsnUmtsQosCacRowStatus=cggsnUmtsQosCacRowStatus)
