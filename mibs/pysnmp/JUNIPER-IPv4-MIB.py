#
# PySNMP MIB module JUNIPER-IPv4-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-IPv4-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
jnxMibs, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, NotificationType, IpAddress, Counter64, Unsigned32, iso, ObjectIdentity, TimeTicks, ModuleIdentity, Gauge32, Bits, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "NotificationType", "IpAddress", "Counter64", "Unsigned32", "iso", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Gauge32", "Bits", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxIpv4 = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 12))
jnxIpv4.setRevisions(('2001-08-31 00:00',))
if mibBuilder.loadTexts: jnxIpv4.setLastUpdated('200307182153Z')
if mibBuilder.loadTexts: jnxIpv4.setOrganization('Juniper Networks, Inc.')
jnxIpv4Config = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 12, 1))
jnxIpv4AddrTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 12, 1, 1), )
if mibBuilder.loadTexts: jnxIpv4AddrTable.setStatus('current')
jnxIpv4AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 12, 1, 1, 1), ).setIndexNames((0, "JUNIPER-IPv4-MIB", "jnxIpv4AdEntIfIndex"), (0, "JUNIPER-IPv4-MIB", "jnxIpv4AdEntAddr"))
if mibBuilder.loadTexts: jnxIpv4AddrEntry.setStatus('current')
jnxIpv4AdEntIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 12, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: jnxIpv4AdEntIfIndex.setStatus('current')
jnxIpv4AdEntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 12, 1, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: jnxIpv4AdEntAddr.setStatus('current')
jnxIpv4AdEntNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 12, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxIpv4AdEntNetMask.setStatus('current')
jnxIpv4AdEntBcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 12, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxIpv4AdEntBcastAddr.setStatus('current')
jnxIpv4AdEntReasmMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 12, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxIpv4AdEntReasmMaxSize.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-IPv4-MIB", jnxIpv4AdEntAddr=jnxIpv4AdEntAddr, jnxIpv4AddrTable=jnxIpv4AddrTable, jnxIpv4AdEntBcastAddr=jnxIpv4AdEntBcastAddr, jnxIpv4AdEntIfIndex=jnxIpv4AdEntIfIndex, jnxIpv4AddrEntry=jnxIpv4AddrEntry, jnxIpv4AdEntReasmMaxSize=jnxIpv4AdEntReasmMaxSize, PYSNMP_MODULE_ID=jnxIpv4, jnxIpv4AdEntNetMask=jnxIpv4AdEntNetMask, jnxIpv4Config=jnxIpv4Config, jnxIpv4=jnxIpv4)
