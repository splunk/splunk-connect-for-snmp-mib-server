#
# PySNMP MIB module CADANT-CMTS-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-CMTS-POLICY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:27:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
cadPolicy, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadPolicy")
CadIfDirection, CadAclString, InetAddressIPv4or6, CadIpTosMask, CadTcpFlags, CadExtAclCondition, CadProtocolType, CadIpTos, CadAclType = mibBuilder.importSymbols("CADANT-TC", "CadIfDirection", "CadAclString", "InetAddressIPv4or6", "CadIpTosMask", "CadTcpFlags", "CadExtAclCondition", "CadProtocolType", "CadIpTos", "CadAclType")
InfoSourceDest, = mibBuilder.importSymbols("DC-RTM-MIB", "InfoSourceDest")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, TimeTicks, Counter32, ObjectIdentity, Unsigned32, ModuleIdentity, Gauge32, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "TimeTicks", "Counter32", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "Gauge32", "Counter64", "IpAddress")
TruthValue, RowStatus, TextualConvention, MacAddress, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "MacAddress", "DisplayString", "TimeStamp")
cadPolicyMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1))
cadPolicyMib.setRevisions(('2014-03-26 00:00', '2014-03-06 00:00', '2013-05-03 00:00', '2013-04-16 00:00', '2011-12-02 00:00', '2011-11-08 00:00', '2010-08-26 00:00', '2010-08-11 00:00', '2010-07-02 00:00', '2010-06-02 00:00', '2009-09-14 00:00', '2008-03-31 00:00', '2008-03-17 00:00', '2007-04-30 00:00', '2006-08-24 00:00', '2005-09-09 00:00', '2005-08-31 00:00', '2005-06-20 00:00', '2005-06-10 00:00', '2005-06-06 00:00', '2005-04-14 00:00', '2005-03-14 00:00', '2004-11-29 00:00', '2004-11-18 00:00', '2004-10-26 00:00', '2004-09-14 00:00', '2002-07-09 00:00', '2002-05-03 00:00',))
if mibBuilder.loadTexts: cadPolicyMib.setLastUpdated('201403260000Z')
if mibBuilder.loadTexts: cadPolicyMib.setOrganization('Arris International, Inc.')
class CadPolicyRateLimitAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("transmit", 1), ("drop", 2), ("set-prec-transmit", 3), ("set-dscp-transmit", 4), ("set-priority-transmit", 5))

class CadPolicyAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2)

class CadPolicyProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("isIs", 9), ("esIs", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14), ("idpr", 15), ("ciscoEigrp", 16))

cadScmAccessTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 1), )
if mibBuilder.loadTexts: cadScmAccessTable.setStatus('current')
cadScmAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 1, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadScmAccIfIndex"))
if mibBuilder.loadTexts: cadScmAccessEntry.setStatus('current')
cadScmAccIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadScmAccIfIndex.setStatus('current')
cadScmAccListNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadScmAccListNumber.setStatus('current')
cadScmAccRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadScmAccRowStatus.setStatus('current')
cadDistListInTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 2), )
if mibBuilder.loadTexts: cadDistListInTable.setStatus('current')
cadDistListInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 2, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadDistListInProtocol"), (0, "CADANT-CMTS-POLICY-MIB", "cadDistListInProtocolProcess"), (0, "CADANT-CMTS-POLICY-MIB", "cadDistListInIfIndex"), (0, "CADANT-CMTS-POLICY-MIB", "cadDistListInAccessListNum"))
if mibBuilder.loadTexts: cadDistListInEntry.setStatus('current')
cadDistListInProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 2, 1, 1), CadPolicyProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDistListInProtocol.setStatus('current')
cadDistListInProtocolProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDistListInProtocolProcess.setStatus('current')
cadDistListInIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 2, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDistListInIfIndex.setStatus('current')
cadDistListInAccessListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDistListInAccessListNum.setStatus('current')
cadDistListInAccessListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDistListInAccessListName.setStatus('current')
cadDistListInStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDistListInStatus.setStatus('current')
cadPolicyRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4), )
if mibBuilder.loadTexts: cadPolicyRateLimitTable.setStatus('current')
cadPolicyRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadPolicyRateLimitIfIndex"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyRateLimitDirection"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyRateLimitIndex"))
if mibBuilder.loadTexts: cadPolicyRateLimitEntry.setStatus('current')
cadPolicyRateLimitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadPolicyRateLimitIfIndex.setStatus('current')
cadPolicyRateLimitDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 2), CadIfDirection())
if mibBuilder.loadTexts: cadPolicyRateLimitDirection.setStatus('current')
cadPolicyRateLimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: cadPolicyRateLimitIndex.setStatus('current')
cadPolicyRateLimitStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitStatus.setStatus('current')
cadPolicyRateLimitAclType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 5), CadAclType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitAclType.setStatus('current')
cadPolicyRateLimitAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitAclNum.setStatus('current')
cadPolicyRateLimitBps = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitBps.setStatus('current')
cadPolicyRateLimitBurstNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitBurstNormal.setStatus('current')
cadPolicyRateLimitBurstMax = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitBurstMax.setStatus('current')
cadPolicyRateLimitConformAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 10), CadPolicyRateLimitAction().clone('transmit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitConformAction.setStatus('current')
cadPolicyRateLimitConformValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitConformValue.setStatus('current')
cadPolicyRateLimitExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 12), CadPolicyRateLimitAction().clone('drop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitExceedAction.setStatus('current')
cadPolicyRateLimitExceedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitExceedValue.setStatus('current')
cadPolicyRateLimitClearCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 4, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyRateLimitClearCounts.setStatus('current')
cadPolicyRateLimitStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 5), )
if mibBuilder.loadTexts: cadPolicyRateLimitStatusTable.setStatus('current')
cadPolicyRateLimitStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 5, 1), )
cadPolicyRateLimitEntry.registerAugmentions(("CADANT-CMTS-POLICY-MIB", "cadPolicyRateLimitStatusEntry"))
cadPolicyRateLimitStatusEntry.setIndexNames(*cadPolicyRateLimitEntry.getIndexNames())
if mibBuilder.loadTexts: cadPolicyRateLimitStatusEntry.setStatus('current')
cadPolicyRateLimitConformPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyRateLimitConformPackets.setStatus('current')
cadPolicyRateLimitConformBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyRateLimitConformBytes.setStatus('current')
cadPolicyRateLimitExceedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyRateLimitExceedPackets.setStatus('current')
cadPolicyRateLimitExceedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyRateLimitExceedBytes.setStatus('current')
cadPolicyRateLimitCurrentBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyRateLimitCurrentBurst.setStatus('current')
cadPolicyRateLimitLastCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 5, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyRateLimitLastCleared.setStatus('current')
cadPolicyAclTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6), )
if mibBuilder.loadTexts: cadPolicyAclTable.setStatus('current')
cadPolicyAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadAclNumber"), (0, "CADANT-CMTS-POLICY-MIB", "cadAclIndex"))
if mibBuilder.loadTexts: cadPolicyAclEntry.setStatus('current')
cadAclNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 399)))
if mibBuilder.loadTexts: cadAclNumber.setStatus('current')
cadAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cadAclIndex.setStatus('current')
cadAclType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 3), CadAclType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclType.setStatus('current')
cadAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclStatus.setStatus('current')
cadAclPermit = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclPermit.setStatus('current')
cadAclProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 6), CadProtocolType().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclProtocol.setStatus('current')
cadAclSrcIp = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 7), InetAddressIPv4or6().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclSrcIp.setStatus('current')
cadAclSrcIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 8), InetAddressIPv4or6().clone(hexValue="FFFFFFFF")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclSrcIpMask.setStatus('current')
cadAclSrcPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 9), CadExtAclCondition().clone('na')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclSrcPortOp.setStatus('current')
cadAclSrcPortLo = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 10), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclSrcPortLo.setStatus('current')
cadAclSrcPortHi = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 11), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclSrcPortHi.setStatus('current')
cadAclDstIp = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 12), InetAddressIPv4or6().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclDstIp.setStatus('current')
cadAclDstIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 13), InetAddressIPv4or6().clone(hexValue="FFFFFFFF")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclDstIpMask.setStatus('current')
cadAclDstPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 14), CadExtAclCondition().clone('na')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclDstPortOp.setStatus('current')
cadAclDstPortLo = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 15), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclDstPortLo.setStatus('current')
cadAclDstPortHi = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 16), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclDstPortHi.setStatus('current')
cadAclLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclLogging.setStatus('current')
cadAclProtoType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 18), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclProtoType.setStatus('current')
cadAclProtoCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 19), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclProtoCode.setStatus('current')
cadAclIpTos = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 20), CadIpTos()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclIpTos.setStatus('current')
cadAclIpTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 21), CadIpTosMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclIpTosMask.setStatus('current')
cadAclTcpFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 22), CadTcpFlags()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclTcpFlags.setStatus('current')
cadAclTcpFlagsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 23), CadTcpFlags()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclTcpFlagsMask.setStatus('current')
cadAclFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 24), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclFragments.setStatus('current')
cadAclRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 26), CadAclString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclRemark.setStatus('current')
cadAclIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 6, 1, 27), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadAclIpAddrType.setStatus('current')
cadSnmpCommAccessTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 7), )
if mibBuilder.loadTexts: cadSnmpCommAccessTable.setStatus('current')
cadSnmpCommAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 7, 1), ).setIndexNames((1, "CADANT-CMTS-POLICY-MIB", "cadSnmpCommAccessName"))
if mibBuilder.loadTexts: cadSnmpCommAccessEntry.setStatus('current')
cadSnmpCommAccessName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 7, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cadSnmpCommAccessName.setStatus('current')
cadSnmpCommAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadSnmpCommAccessList.setStatus('current')
cadSnmpCommAccessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadSnmpCommAccessStatus.setStatus('current')
cadPolicyAccessGroupTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 8), )
if mibBuilder.loadTexts: cadPolicyAccessGroupTable.setStatus('current')
cadPolicyAccessGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 8, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadPolicyAccessGroupIfIndex"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyAccessGroupDirection"))
if mibBuilder.loadTexts: cadPolicyAccessGroupEntry.setStatus('current')
cadPolicyAccessGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 8, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadPolicyAccessGroupIfIndex.setStatus('current')
cadPolicyAccessGroupDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 8, 1, 2), CadIfDirection())
if mibBuilder.loadTexts: cadPolicyAccessGroupDirection.setStatus('current')
cadPolicyAccessGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyAccessGroupStatus.setStatus('current')
cadPolicyAccessGroupIpv4AclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 8, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyAccessGroupIpv4AclNum.setStatus('current')
cadPolicyAccessGroupClearCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 8, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyAccessGroupClearCounts.setStatus('current')
cadPolicyAccessGroupIpv6AclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 8, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyAccessGroupIpv6AclNum.setStatus('current')
cadPolicyAccessGroupIpv6AclName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 8, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyAccessGroupIpv6AclName.setStatus('current')
cadPolicyAccessGroupStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 9), )
if mibBuilder.loadTexts: cadPolicyAccessGroupStatusTable.setStatus('current')
cadPolicyAccessGroupStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 9, 1), )
cadPolicyAccessGroupEntry.registerAugmentions(("CADANT-CMTS-POLICY-MIB", "cadPolicyAccessGroupStatusEntry"))
cadPolicyAccessGroupStatusEntry.setIndexNames(*cadPolicyAccessGroupEntry.getIndexNames())
if mibBuilder.loadTexts: cadPolicyAccessGroupStatusEntry.setStatus('current')
cadPolicyAccessGroupPermitPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 9, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyAccessGroupPermitPackets.setStatus('current')
cadPolicyAccessGroupDenyPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 9, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyAccessGroupDenyPackets.setStatus('current')
cadPolicyAccessGroupLastCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 9, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyAccessGroupLastCleared.setStatus('current')
cadPolicyPfxListTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11), )
if mibBuilder.loadTexts: cadPolicyPfxListTable.setStatus('current')
cadPolicyPfxListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadPolicyPfxListNumber"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyPfxListName"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyPfxListSeqNumber"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyPfxListAfi"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyPfxListSafi"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyPfxListIpAddress"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyPfxListIpAddMaskLen"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyPfxListMaskGeValue"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyPfxListMaskLeValue"))
if mibBuilder.loadTexts: cadPolicyPfxListEntry.setStatus('current')
cadPolicyPfxListNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyPfxListNumber.setStatus('current')
cadPolicyPfxListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyPfxListName.setStatus('current')
cadPolicyPfxListSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 2147483645))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyPfxListSeqNumber.setStatus('current')
cadPolicyPfxListIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyPfxListIpAddress.setStatus('current')
cadPolicyPfxListIpAddMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyPfxListIpAddMaskLen.setStatus('current')
cadPolicyPfxListMaskGeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyPfxListMaskGeValue.setStatus('current')
cadPolicyPfxListMaskLeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyPfxListMaskLeValue.setStatus('current')
cadPolicyPfxListAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 8), CadPolicyAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyPfxListAction.setStatus('current')
cadPolicyPfxListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyPfxListStatus.setStatus('current')
cadPolicyPfxListAfi = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 10), InetAddressType())
if mibBuilder.loadTexts: cadPolicyPfxListAfi.setStatus('current')
cadPolicyPfxListSafi = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 128))).clone(namedValues=NamedValues(("unicast", 1), ("multicast", 2), ("both", 3), ("mplsBgpVpn", 128))))
if mibBuilder.loadTexts: cadPolicyPfxListSafi.setStatus('current')
cadPolicyDistListOutTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12), )
if mibBuilder.loadTexts: cadPolicyDistListOutTable.setStatus('current')
cadPolicyDistListOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadPolicyDistListOutSrcProtocol"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyDistListOutSrcProtocolProcess"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyDistListOutRoutingProtocol"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyDistListOutRoutingProcess"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyDistListOutAutonomousSystemNum"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyDistListOutIfIndex"), (0, "CADANT-CMTS-POLICY-MIB", "cadPolicyDistListOutAccessListNum"))
if mibBuilder.loadTexts: cadPolicyDistListOutEntry.setStatus('current')
cadPolicyDistListOutSrcProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1, 1), CadPolicyProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyDistListOutSrcProtocol.setStatus('current')
cadPolicyDistListOutSrcProtocolProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyDistListOutSrcProtocolProcess.setStatus('current')
cadPolicyDistListOutRoutingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1, 3), CadPolicyProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyDistListOutRoutingProtocol.setStatus('current')
cadPolicyDistListOutRoutingProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyDistListOutRoutingProcess.setStatus('current')
cadPolicyDistListOutAutonomousSystemNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyDistListOutAutonomousSystemNum.setStatus('current')
cadPolicyDistListOutAccessListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyDistListOutAccessListNum.setStatus('current')
cadPolicyDistListOutAccessListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyDistListOutAccessListName.setStatus('current')
cadPolicyDistListOutStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadPolicyDistListOutStatus.setStatus('current')
cadPolicyDistListOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 12, 1, 9), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadPolicyDistListOutIfIndex.setStatus('current')
cadDistListOutTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 13), )
if mibBuilder.loadTexts: cadDistListOutTable.setStatus('current')
cadDistListOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 13, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadDistListOutVrIndex"), (0, "CADANT-CMTS-POLICY-MIB", "cadDistListOutDestProtocol"), (0, "CADANT-CMTS-POLICY-MIB", "cadDistListOutSrcProtocol"))
if mibBuilder.loadTexts: cadDistListOutEntry.setStatus('current')
cadDistListOutVrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDistListOutVrIndex.setStatus('current')
cadDistListOutDestProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 13, 1, 2), InfoSourceDest()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDistListOutDestProtocol.setStatus('current')
cadDistListOutSrcProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 13, 1, 3), InfoSourceDest()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDistListOutSrcProtocol.setStatus('current')
cadDistListOutAccessListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDistListOutAccessListNum.setStatus('current')
cadDistListOutStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 13, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDistListOutStatus.setStatus('current')
cadDistListOutAccessListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 13, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadDistListOutAccessListName.setStatus('current')
cadAclNameTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 14), )
if mibBuilder.loadTexts: cadAclNameTable.setStatus('current')
cadAclNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 14, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadNameAclName"), (0, "CADANT-CMTS-POLICY-MIB", "cadNameAclNumber"))
if mibBuilder.loadTexts: cadAclNameEntry.setStatus('current')
cadNameAclName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 14, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cadNameAclName.setStatus('current')
cadNameAclNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 399)))
if mibBuilder.loadTexts: cadNameAclNumber.setStatus('current')
cadNameAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 14, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadNameAclStatus.setStatus('current')
cadAclControl = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 15))
cadAclOrderAcl = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 15, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAclOrderAcl.setStatus('current')
cadAclOrderAclIndex = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 15, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 399)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAclOrderAclIndex.setStatus('current')
cadAclOrderAclInterval = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 15, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAclOrderAclInterval.setStatus('current')
cadAclOrderAclStart = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 15, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAclOrderAclStart.setStatus('current')
cadAclClearIpv4AclCounts = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 15, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAclClearIpv4AclCounts.setStatus('current')
cadAclClearIpv6AclCounts = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(200, 399), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadAclClearIpv6AclCounts.setStatus('current')
cadPolicyAclExtTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 16), )
if mibBuilder.loadTexts: cadPolicyAclExtTable.setStatus('current')
cadPolicyAclExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 16, 1), )
cadPolicyAclEntry.registerAugmentions(("CADANT-CMTS-POLICY-MIB", "cadPolicyAclExtEntry"))
cadPolicyAclExtEntry.setIndexNames(*cadPolicyAclEntry.getIndexNames())
if mibBuilder.loadTexts: cadPolicyAclExtEntry.setStatus('current')
cadAclEntryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 16, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadAclEntryCount.setStatus('current')
cadPolicyRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30))
cadRouteMapTagTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 1), )
if mibBuilder.loadTexts: cadRouteMapTagTable.setStatus('current')
cadRouteMapTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 1, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadRouteMapTagName"))
if mibBuilder.loadTexts: cadRouteMapTagEntry.setStatus('current')
cadRouteMapTagName = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cadRouteMapTagName.setStatus('current')
cadRouteMapTagId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapTagId.setStatus('current')
cadRouteMapTagRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapTagRowStatus.setStatus('current')
cadRouteMapTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2), )
if mibBuilder.loadTexts: cadRouteMapTable.setStatus('current')
cadRouteMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadRouteMapId"), (0, "CADANT-CMTS-POLICY-MIB", "cadRouteMapSeqNum"))
if mibBuilder.loadTexts: cadRouteMapEntry.setStatus('current')
cadRouteMapId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: cadRouteMapId.setStatus('current')
cadRouteMapSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cadRouteMapSeqNum.setStatus('current')
cadRouteMapMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapMatchType.setStatus('current')
cadRouteMapMatchAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 199))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapMatchAcl.setStatus('current')
cadRouteMapSetIpPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapSetIpPrec.setStatus('current')
cadRouteMapIpPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("routine", 0), ("priority", 1), ("immediate", 2), ("flash", 3), ("flash-override", 4), ("critical", 5), ("internet", 6), ("network", 7))).clone('routine')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapIpPrec.setStatus('current')
cadRouteMapSetIpTos = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapSetIpTos.setStatus('current')
cadRouteMapIpTos = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 8))).clone(namedValues=NamedValues(("normal", 0), ("min-monetary-cost", 1), ("max-reliability", 2), ("max-throughput", 4), ("min-delay", 8))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapIpTos.setStatus('current')
cadRouteMapSetNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapSetNextHop.setStatus('current')
cadRouteMapNextHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 10), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapNextHopAddrType.setStatus('current')
cadRouteMapNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 11), InetAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapNextHop.setStatus('current')
cadRouteMapSetBackupNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapSetBackupNextHop.setStatus('current')
cadRouteMapBackupNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 13), InetAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapBackupNextHop.setStatus('current')
cadRouteMapSetNullInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapSetNullInterface.setStatus('current')
cadRouteMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapRowStatus.setStatus('current')
cadRouteMapSetIpDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapSetIpDscp.setStatus('current')
cadRouteMapIpDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapIpDscp.setStatus('current')
cadRouteMapSetRecursiveNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapSetRecursiveNextHop.setStatus('current')
cadRouteMapRecursiveNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 2, 1, 19), InetAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadRouteMapRecursiveNextHop.setStatus('current')
cadRouteMapStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 3), )
if mibBuilder.loadTexts: cadRouteMapStatsTable.setStatus('current')
cadRouteMapStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 3, 1), ).setIndexNames((0, "CADANT-CMTS-POLICY-MIB", "cadRouteMapId"), (0, "CADANT-CMTS-POLICY-MIB", "cadRouteMapSeqNum"))
if mibBuilder.loadTexts: cadRouteMapStatsEntry.setStatus('current')
cadRouteMapPktMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadRouteMapPktMatched.setStatus('current')
cadRouteMapByteMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadRouteMapByteMatched.setStatus('current')
cadRouteMapPktFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadRouteMapPktFailed.setStatus('current')
cadRouteMapByteFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadRouteMapByteFailed.setStatus('current')
cadRouteMapClearStats = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadRouteMapClearStats.setStatus('current')
cadLocalPolicyRouteMap = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35, 1, 30, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadLocalPolicyRouteMap.setStatus('current')
mibBuilder.exportSymbols("CADANT-CMTS-POLICY-MIB", cadPolicyAclExtTable=cadPolicyAclExtTable, cadPolicyAccessGroupStatusTable=cadPolicyAccessGroupStatusTable, cadPolicyPfxListAfi=cadPolicyPfxListAfi, cadPolicyAccessGroupDenyPackets=cadPolicyAccessGroupDenyPackets, cadRouteMapSeqNum=cadRouteMapSeqNum, cadAclNameTable=cadAclNameTable, cadPolicyPfxListName=cadPolicyPfxListName, cadAclNameEntry=cadAclNameEntry, cadAclRemark=cadAclRemark, cadPolicyRouting=cadPolicyRouting, cadAclFragments=cadAclFragments, cadPolicyAccessGroupIpv4AclNum=cadPolicyAccessGroupIpv4AclNum, cadAclProtoType=cadAclProtoType, cadDistListInEntry=cadDistListInEntry, cadRouteMapNextHop=cadRouteMapNextHop, cadRouteMapRowStatus=cadRouteMapRowStatus, cadScmAccessTable=cadScmAccessTable, cadRouteMapByteFailed=cadRouteMapByteFailed, cadSnmpCommAccessStatus=cadSnmpCommAccessStatus, cadDistListInIfIndex=cadDistListInIfIndex, cadAclTcpFlags=cadAclTcpFlags, cadPolicyAccessGroupClearCounts=cadPolicyAccessGroupClearCounts, cadPolicyDistListOutRoutingProcess=cadPolicyDistListOutRoutingProcess, cadNameAclStatus=cadNameAclStatus, cadRouteMapTagId=cadRouteMapTagId, cadPolicyPfxListSafi=cadPolicyPfxListSafi, cadRouteMapTagEntry=cadRouteMapTagEntry, cadPolicyDistListOutAccessListName=cadPolicyDistListOutAccessListName, cadDistListOutSrcProtocol=cadDistListOutSrcProtocol, cadRouteMapStatsTable=cadRouteMapStatsTable, cadAclPermit=cadAclPermit, cadPolicyRateLimitConformBytes=cadPolicyRateLimitConformBytes, cadRouteMapNextHopAddrType=cadRouteMapNextHopAddrType, cadRouteMapTagRowStatus=cadRouteMapTagRowStatus, cadRouteMapMatchType=cadRouteMapMatchType, cadDistListInProtocol=cadDistListInProtocol, cadRouteMapStatsEntry=cadRouteMapStatsEntry, cadAclDstPortHi=cadAclDstPortHi, cadPolicyRateLimitStatusEntry=cadPolicyRateLimitStatusEntry, cadAclOrderAclIndex=cadAclOrderAclIndex, cadDistListOutAccessListName=cadDistListOutAccessListName, cadPolicyAccessGroupStatus=cadPolicyAccessGroupStatus, cadPolicyRateLimitBurstMax=cadPolicyRateLimitBurstMax, cadPolicyAccessGroupIfIndex=cadPolicyAccessGroupIfIndex, cadPolicyPfxListMaskGeValue=cadPolicyPfxListMaskGeValue, cadRouteMapPktMatched=cadRouteMapPktMatched, cadDistListInAccessListName=cadDistListInAccessListName, cadAclSrcPortLo=cadAclSrcPortLo, cadPolicyRateLimitBps=cadPolicyRateLimitBps, cadRouteMapSetNextHop=cadRouteMapSetNextHop, cadAclLogging=cadAclLogging, cadPolicyRateLimitExceedAction=cadPolicyRateLimitExceedAction, cadRouteMapSetNullInterface=cadRouteMapSetNullInterface, cadRouteMapByteMatched=cadRouteMapByteMatched, cadPolicyPfxListMaskLeValue=cadPolicyPfxListMaskLeValue, cadAclDstIp=cadAclDstIp, cadPolicyPfxListIpAddress=cadPolicyPfxListIpAddress, PYSNMP_MODULE_ID=cadPolicyMib, cadScmAccRowStatus=cadScmAccRowStatus, cadPolicyRateLimitLastCleared=cadPolicyRateLimitLastCleared, cadAclSrcIpMask=cadAclSrcIpMask, cadDistListOutVrIndex=cadDistListOutVrIndex, CadPolicyAction=CadPolicyAction, CadPolicyProtocol=CadPolicyProtocol, cadAclControl=cadAclControl, cadAclIpTosMask=cadAclIpTosMask, cadAclSrcPortHi=cadAclSrcPortHi, cadPolicyDistListOutIfIndex=cadPolicyDistListOutIfIndex, cadRouteMapPktFailed=cadRouteMapPktFailed, cadRouteMapEntry=cadRouteMapEntry, cadAclSrcPortOp=cadAclSrcPortOp, cadAclOrderAclStart=cadAclOrderAclStart, cadRouteMapTable=cadRouteMapTable, cadPolicyPfxListTable=cadPolicyPfxListTable, cadRouteMapClearStats=cadRouteMapClearStats, cadPolicyDistListOutStatus=cadPolicyDistListOutStatus, cadPolicyDistListOutSrcProtocol=cadPolicyDistListOutSrcProtocol, cadAclTcpFlagsMask=cadAclTcpFlagsMask, cadPolicyAclExtEntry=cadPolicyAclExtEntry, cadPolicyRateLimitAclType=cadPolicyRateLimitAclType, cadScmAccIfIndex=cadScmAccIfIndex, cadPolicyRateLimitStatusTable=cadPolicyRateLimitStatusTable, cadAclIndex=cadAclIndex, cadDistListInStatus=cadDistListInStatus, cadAclType=cadAclType, cadRouteMapSetIpPrec=cadRouteMapSetIpPrec, cadPolicyPfxListSeqNumber=cadPolicyPfxListSeqNumber, cadAclIpAddrType=cadAclIpAddrType, cadPolicyRateLimitTable=cadPolicyRateLimitTable, cadPolicyMib=cadPolicyMib, cadPolicyPfxListIpAddMaskLen=cadPolicyPfxListIpAddMaskLen, cadPolicyRateLimitConformPackets=cadPolicyRateLimitConformPackets, cadPolicyDistListOutSrcProtocolProcess=cadPolicyDistListOutSrcProtocolProcess, cadDistListOutStatus=cadDistListOutStatus, cadRouteMapSetBackupNextHop=cadRouteMapSetBackupNextHop, cadPolicyDistListOutTable=cadPolicyDistListOutTable, cadRouteMapSetIpTos=cadRouteMapSetIpTos, cadRouteMapIpDscp=cadRouteMapIpDscp, cadRouteMapMatchAcl=cadRouteMapMatchAcl, cadPolicyRateLimitIndex=cadPolicyRateLimitIndex, cadAclDstPortLo=cadAclDstPortLo, cadAclIpTos=cadAclIpTos, cadPolicyAccessGroupIpv6AclNum=cadPolicyAccessGroupIpv6AclNum, cadAclOrderAcl=cadAclOrderAcl, cadRouteMapIpTos=cadRouteMapIpTos, cadAclEntryCount=cadAclEntryCount, cadDistListInTable=cadDistListInTable, cadPolicyAccessGroupStatusEntry=cadPolicyAccessGroupStatusEntry, cadPolicyPfxListAction=cadPolicyPfxListAction, cadPolicyRateLimitClearCounts=cadPolicyRateLimitClearCounts, cadSnmpCommAccessList=cadSnmpCommAccessList, cadScmAccessEntry=cadScmAccessEntry, cadAclSrcIp=cadAclSrcIp, cadDistListOutAccessListNum=cadDistListOutAccessListNum, cadScmAccListNumber=cadScmAccListNumber, cadPolicyRateLimitConformAction=cadPolicyRateLimitConformAction, cadPolicyRateLimitExceedPackets=cadPolicyRateLimitExceedPackets, cadPolicyRateLimitConformValue=cadPolicyRateLimitConformValue, cadPolicyRateLimitDirection=cadPolicyRateLimitDirection, cadPolicyRateLimitIfIndex=cadPolicyRateLimitIfIndex, cadPolicyRateLimitExceedValue=cadPolicyRateLimitExceedValue, cadDistListOutDestProtocol=cadDistListOutDestProtocol, cadPolicyAccessGroupLastCleared=cadPolicyAccessGroupLastCleared, cadPolicyRateLimitAclNum=cadPolicyRateLimitAclNum, cadDistListInProtocolProcess=cadDistListInProtocolProcess, cadPolicyPfxListEntry=cadPolicyPfxListEntry, cadAclProtocol=cadAclProtocol, cadPolicyDistListOutAutonomousSystemNum=cadPolicyDistListOutAutonomousSystemNum, cadAclDstPortOp=cadAclDstPortOp, cadDistListOutTable=cadDistListOutTable, cadPolicyAclTable=cadPolicyAclTable, cadPolicyAccessGroupTable=cadPolicyAccessGroupTable, cadLocalPolicyRouteMap=cadLocalPolicyRouteMap, cadRouteMapIpPrec=cadRouteMapIpPrec, cadRouteMapSetRecursiveNextHop=cadRouteMapSetRecursiveNextHop, cadDistListOutEntry=cadDistListOutEntry, cadPolicyAccessGroupEntry=cadPolicyAccessGroupEntry, cadRouteMapTagTable=cadRouteMapTagTable, cadPolicyAclEntry=cadPolicyAclEntry, cadSnmpCommAccessEntry=cadSnmpCommAccessEntry, cadNameAclName=cadNameAclName, cadPolicyAccessGroupPermitPackets=cadPolicyAccessGroupPermitPackets, cadRouteMapSetIpDscp=cadRouteMapSetIpDscp, cadPolicyRateLimitCurrentBurst=cadPolicyRateLimitCurrentBurst, cadDistListInAccessListNum=cadDistListInAccessListNum, cadAclDstIpMask=cadAclDstIpMask, cadPolicyDistListOutAccessListNum=cadPolicyDistListOutAccessListNum, cadNameAclNumber=cadNameAclNumber, cadPolicyPfxListNumber=cadPolicyPfxListNumber, cadPolicyDistListOutRoutingProtocol=cadPolicyDistListOutRoutingProtocol, cadRouteMapId=cadRouteMapId, cadPolicyRateLimitExceedBytes=cadPolicyRateLimitExceedBytes, CadPolicyRateLimitAction=CadPolicyRateLimitAction, cadPolicyRateLimitEntry=cadPolicyRateLimitEntry, cadAclOrderAclInterval=cadAclOrderAclInterval, cadPolicyRateLimitStatus=cadPolicyRateLimitStatus, cadPolicyRateLimitBurstNormal=cadPolicyRateLimitBurstNormal, cadRouteMapBackupNextHop=cadRouteMapBackupNextHop, cadAclClearIpv4AclCounts=cadAclClearIpv4AclCounts, cadAclStatus=cadAclStatus, cadRouteMapTagName=cadRouteMapTagName, cadSnmpCommAccessTable=cadSnmpCommAccessTable, cadAclProtoCode=cadAclProtoCode, cadAclClearIpv6AclCounts=cadAclClearIpv6AclCounts, cadPolicyAccessGroupIpv6AclName=cadPolicyAccessGroupIpv6AclName, cadPolicyAccessGroupDirection=cadPolicyAccessGroupDirection, cadRouteMapRecursiveNextHop=cadRouteMapRecursiveNextHop, cadPolicyPfxListStatus=cadPolicyPfxListStatus, cadSnmpCommAccessName=cadSnmpCommAccessName, cadPolicyDistListOutEntry=cadPolicyDistListOutEntry, cadAclNumber=cadAclNumber)
