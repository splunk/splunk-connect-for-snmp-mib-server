#
# PySNMP MIB module ASCEND-MIBNAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBNAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:11:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, Gauge32, NotificationType, iso, ObjectIdentity, MibIdentifier, Counter64, ModuleIdentity, IpAddress, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "Gauge32", "NotificationType", "iso", "ObjectIdentity", "MibIdentifier", "Counter64", "ModuleIdentity", "IpAddress", "TimeTicks", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibnatProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 95))
mibnatProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 95, 1), )
if mibBuilder.loadTexts: mibnatProfileTable.setStatus('mandatory')
mibnatProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1), ).setIndexNames((0, "ASCEND-MIBNAT-MIB", "natProfile-NatProfile"))
if mibBuilder.loadTexts: mibnatProfileEntry.setStatus('mandatory')
natProfile_NatRouting = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("natProfile-NatRouting").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_NatRouting.setStatus('mandatory')
natProfile_NatProfile = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 3), DisplayString()).setLabel("natProfile-NatProfile").setMaxAccess("readonly")
if mibBuilder.loadTexts: natProfile_NatProfile.setStatus('mandatory')
natProfile_NatLan = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("natlanSingleIp", 1), ("natlanMultiIp", 2), ("natlanPoolIp", 3)))).setLabel("natProfile-NatLan").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_NatLan.setStatus('mandatory')
natProfile_DefaultServer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 5), IpAddress()).setLabel("natProfile-DefaultServer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_DefaultServer.setStatus('mandatory')
natProfile_TunnelServer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 6), IpAddress()).setLabel("natProfile-TunnelServer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_TunnelServer.setStatus('mandatory')
natProfile_FrameRelayAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 7), IpAddress()).setLabel("natProfile-FrameRelayAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_FrameRelayAddress.setStatus('mandatory')
natProfile_StickyAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("natProfile-StickyAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_StickyAddress.setStatus('mandatory')
natProfile_StickyTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 9), Integer32()).setLabel("natProfile-StickyTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_StickyTimeout.setStatus('mandatory')
natProfile_NoNatAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 10), IpAddress()).setLabel("natProfile-NoNatAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_NoNatAddress.setStatus('mandatory')
natProfile_AlternateNaptAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 11), IpAddress()).setLabel("natProfile-AlternateNaptAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_AlternateNaptAddress.setStatus('mandatory')
natProfile_NaptIdleTcpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 12), Integer32()).setLabel("natProfile-NaptIdleTcpTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_NaptIdleTcpTimeout.setStatus('mandatory')
natProfile_NatAddrPoolNum = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 14), Integer32()).setLabel("natProfile-NatAddrPoolNum").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_NatAddrPoolNum.setStatus('mandatory')
natProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("natProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_Action_o.setStatus('mandatory')
mibnatProfile_StaticMappingsTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 95, 2), ).setLabel("mibnatProfile-StaticMappingsTable")
if mibBuilder.loadTexts: mibnatProfile_StaticMappingsTable.setStatus('mandatory')
mibnatProfile_StaticMappingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 95, 2, 1), ).setLabel("mibnatProfile-StaticMappingsEntry").setIndexNames((0, "ASCEND-MIBNAT-MIB", "natProfile-StaticMappings-NatProfile"), (0, "ASCEND-MIBNAT-MIB", "natProfile-StaticMappings-Index-o"))
if mibBuilder.loadTexts: mibnatProfile_StaticMappingsEntry.setStatus('mandatory')
natProfile_StaticMappings_NatProfile = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 2, 1, 8), DisplayString()).setLabel("natProfile-StaticMappings-NatProfile").setMaxAccess("readonly")
if mibBuilder.loadTexts: natProfile_StaticMappings_NatProfile.setStatus('mandatory')
natProfile_StaticMappings_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 2, 1, 1), Integer32()).setLabel("natProfile-StaticMappings-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: natProfile_StaticMappings_Index_o.setStatus('mandatory')
natProfile_StaticMappings_ValidEntry = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("natProfile-StaticMappings-ValidEntry").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_StaticMappings_ValidEntry.setStatus('mandatory')
natProfile_StaticMappings_DestPort = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 2, 1, 4), Integer32()).setLabel("natProfile-StaticMappings-DestPort").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_StaticMappings_DestPort.setStatus('mandatory')
natProfile_StaticMappings_Protocol = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("smTcp", 1), ("smUdp", 2)))).setLabel("natProfile-StaticMappings-Protocol").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_StaticMappings_Protocol.setStatus('mandatory')
natProfile_StaticMappings_LocalPort = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 2, 1, 6), Integer32()).setLabel("natProfile-StaticMappings-LocalPort").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_StaticMappings_LocalPort.setStatus('mandatory')
natProfile_StaticMappings_LocalAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 95, 2, 1, 7), IpAddress()).setLabel("natProfile-StaticMappings-LocalAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: natProfile_StaticMappings_LocalAddress.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBNAT-MIB", DisplayString=DisplayString, natProfile_NaptIdleTcpTimeout=natProfile_NaptIdleTcpTimeout, mibnatProfileTable=mibnatProfileTable, mibnatProfileEntry=mibnatProfileEntry, natProfile_NatAddrPoolNum=natProfile_NatAddrPoolNum, natProfile_NatRouting=natProfile_NatRouting, natProfile_NatProfile=natProfile_NatProfile, natProfile_Action_o=natProfile_Action_o, natProfile_DefaultServer=natProfile_DefaultServer, natProfile_StaticMappings_NatProfile=natProfile_StaticMappings_NatProfile, mibnatProfile=mibnatProfile, natProfile_StaticMappings_DestPort=natProfile_StaticMappings_DestPort, natProfile_StickyTimeout=natProfile_StickyTimeout, natProfile_StaticMappings_ValidEntry=natProfile_StaticMappings_ValidEntry, natProfile_TunnelServer=natProfile_TunnelServer, natProfile_StaticMappings_LocalPort=natProfile_StaticMappings_LocalPort, natProfile_StaticMappings_Protocol=natProfile_StaticMappings_Protocol, natProfile_NoNatAddress=natProfile_NoNatAddress, natProfile_StickyAddress=natProfile_StickyAddress, natProfile_NatLan=natProfile_NatLan, natProfile_StaticMappings_Index_o=natProfile_StaticMappings_Index_o, natProfile_AlternateNaptAddress=natProfile_AlternateNaptAddress, natProfile_StaticMappings_LocalAddress=natProfile_StaticMappings_LocalAddress, mibnatProfile_StaticMappingsEntry=mibnatProfile_StaticMappingsEntry, natProfile_FrameRelayAddress=natProfile_FrameRelayAddress, mibnatProfile_StaticMappingsTable=mibnatProfile_StaticMappingsTable)
