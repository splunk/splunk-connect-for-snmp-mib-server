#
# PySNMP MIB module NETSCREEN-VPN-IKE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VPN-IKE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
netscreenVpnMibModule, netscreenVpn = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpnMibModule", "netscreenVpn")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, iso, Bits, ModuleIdentity, Counter64, Integer32, MibIdentifier, ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "Bits", "ModuleIdentity", "Counter64", "Integer32", "MibIdentifier", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Counter32", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenVpnIkeMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 4, 0, 3))
netscreenVpnIkeMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-13 00:00', '2001-09-28 00:00', '2001-05-14 00:00',))
if mibBuilder.loadTexts: netscreenVpnIkeMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenVpnIkeMibModule.setOrganization('Juniper Networks, Inc.')
nsVpnIke = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 3))
nsVpnIkeTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1), )
if mibBuilder.loadTexts: nsVpnIkeTable.setStatus('current')
nsVpnIkeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1), ).setIndexNames((0, "NETSCREEN-VPN-IKE-MIB", "nsVpnIkeIndex"))
if mibBuilder.loadTexts: nsVpnIkeEntry.setStatus('current')
nsVpnIkeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkeIndex.setStatus('current')
nsVpnIkeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkeName.setStatus('current')
nsVpnIkeReplayProc = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkeReplayProc.setStatus('current')
nsVpnIkeGWTun = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkeGWTun.setStatus('current')
nsVpnIkePh2ProOne = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkePh2ProOne.setStatus('current')
nsVpnIkePh2ProTwo = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkePh2ProTwo.setStatus('current')
nsVpnIkePh2ProThree = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkePh2ProThree.setStatus('current')
nsVpnIkePh2ProFour = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkePh2ProFour.setStatus('current')
nsVpnIkeMonitorEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkeMonitorEnable.setStatus('current')
nsVpnIkeTransMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkeTransMode.setStatus('current')
nsVpnIkeVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIkeVsys.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-VPN-IKE-MIB", nsVpnIkeName=nsVpnIkeName, nsVpnIkeGWTun=nsVpnIkeGWTun, netscreenVpnIkeMibModule=netscreenVpnIkeMibModule, nsVpnIkePh2ProTwo=nsVpnIkePh2ProTwo, nsVpnIkeMonitorEnable=nsVpnIkeMonitorEnable, nsVpnIkePh2ProThree=nsVpnIkePh2ProThree, nsVpnIkeTransMode=nsVpnIkeTransMode, nsVpnIkeVsys=nsVpnIkeVsys, nsVpnIkeEntry=nsVpnIkeEntry, nsVpnIke=nsVpnIke, nsVpnIkePh2ProFour=nsVpnIkePh2ProFour, nsVpnIkeReplayProc=nsVpnIkeReplayProc, nsVpnIkePh2ProOne=nsVpnIkePh2ProOne, PYSNMP_MODULE_ID=netscreenVpnIkeMibModule, nsVpnIkeTable=nsVpnIkeTable, nsVpnIkeIndex=nsVpnIkeIndex)
