#
# PySNMP MIB module ALCATEL-IND1-DA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-DA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:01:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Da, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Da")
TmnxEncapVal, = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-TC-MIB", "TmnxEncapVal")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
InetAddressIPv4, InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, Unsigned32, Bits, Gauge32, MibIdentifier, Counter64, IpAddress, Integer32, iso, TimeTicks, ObjectIdentity, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "Bits", "Gauge32", "MibIdentifier", "Counter64", "IpAddress", "Integer32", "iso", "TimeTicks", "ObjectIdentity", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TimeStamp, RowStatus, MacAddress, DateAndTime, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "MacAddress", "DateAndTime", "DisplayString", "TextualConvention", "TruthValue")
alcatelIND1DaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1))
alcatelIND1DaMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1DaMIB.setLastUpdated('201008160000Z')
if mibBuilder.loadTexts: alcatelIND1DaMIB.setOrganization('Alcatel-Lucent')
alaIND1DaMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 0))
if mibBuilder.loadTexts: alaIND1DaMIBNotifications.setStatus('current')
alaIND1DaMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1))
if mibBuilder.loadTexts: alaIND1DaMIBObjects.setStatus('current')
alaIND1DaMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2))
if mibBuilder.loadTexts: alaIND1DaMIBConformance.setStatus('current')
alaIND1DaMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1))
if mibBuilder.loadTexts: alaIND1DaMIBGroups.setStatus('current')
class AlaDaClassificationPolicyType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67))
    namedValues = NamedValues(("authPassAltUnp", 1), ("authPassDefUnp", 2), ("authPassSrvUnp", 3), ("noAuthMacRuleUnp", 4), ("noAuthMacRangeRuleUnp", 5), ("noAuthIpRuleUnp", 6), ("authFailDefUnp", 7), ("authFailMacRuleUnp", 8), ("authFailMacRangeRuleUnp", 9), ("authFailIpRuleUnp", 10), ("authFailRuleDefUnp", 11), ("authFailMacRangeVlanTagRuleUnp", 12), ("tagAuthFailMacRuleUnp", 13), ("tagAuthFailMacVlanTagRuleUnp", 14), ("tagAuthFailMacRangeRuleUnp", 15), ("tagAuthFailMacRangeVlanTagRuleUnp", 16), ("tagAuthFailIpRuleUnp", 17), ("tagAuthFailIpVlanTagRuleUnp", 18), ("tagAuthFailVlanTagRuleUnp", 19), ("tagAuthPassAltUnp", 20), ("tagAuthPassDefUnp", 21), ("tagAuthPassSrvUnp", 22), ("tagMacRuleUnp", 23), ("tagMacVlanTagRuleUnp", 24), ("tagMacRangeRuleUnp", 25), ("tagMacRangeVlanTagRuleUnp", 26), ("tagIpRuleUnp", 27), ("tagIpVlanTagRuleUnp", 28), ("tagVlanTagRuleUnp", 29), ("tagRuleDefUnp", 30), ("authPassDefUnpBlk", 31), ("authFailDefUnpBlk", 32), ("authFailRuleDefUnpBlk", 33), ("tagAuthPassDefUnpBlk", 34), ("tagRuleDefUnpBlk", 35), ("authPassSrvUnpTagMismatchBlk", 36), ("authPassAltUnpTagMismatchBlk", 37), ("authPassDefUnpTagMismatchBlk", 38), ("authFailMacRuleUnpTagMismatchBlk", 39), ("authFailMacVlanRuleUnpTagMismatchBlk", 40), ("authFailMacRangeRuleUnpTagMismatchBlk", 41), ("authFailMacRangeVlanRuleUnpTagMismatchBlk", 42), ("authFailIpRuleUnpTagMismatchBlk", 43), ("authFailIpVlanRuleUnpTagMismatchBlk", 44), ("authFailVlanRuleUnpTagMismatchBlk", 45), ("defUnpBlk", 46), ("authPassSrvUnpBlk", 47), ("authPassAltUnpBlk", 48), ("authFailMacRuleUnpBlk", 49), ("authFailMacRangeRuleUnpBlk", 50), ("authFailIpRuleUnpBlk", 51), ("tagMacRuleUnpBlk", 52), ("tagMacVlanTagRuleUnpBlk", 53), ("tagMacRangeRuleUnpBlk", 54), ("tagMacRangeVlanTagRuleUnpBlk", 55), ("tagIpRuleUnpBlk", 56), ("tagIpVlanTagRuleUnpBlk", 57), ("tagVlanTagRuleUnpBlk", 58), ("authSrvDownUnpTagMismatchBlk", 59), ("noMatchingUnpBlk", 60), ("trustTag", 61), ("authSrvDownUnp", 62), ("defUnp", 63), ("lpsUnpBlk", 64), ("sysDefSpb", 65), ("defSpbProfile", 66), ("noSpbResource", 67))

class AlaDaAuthenticationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("noAuthentication", 1), ("dot1XAuthentication", 2), ("macAuthentication", 3), ("captivePortal", 4))

class AlaDaAuthenticationResult(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("notApplicable", 0), ("inProgress", 1), ("success", 2), ("fail", 3))

class AlaDaMacLearntState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("bridging", 0), ("filtering", 1))

class AlaMultiChassisConfigStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("local", 1), ("sync", 2), ("outOfSync", 3))

alaDaUserNetProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1), )
if mibBuilder.loadTexts: alaDaUserNetProfileTable.setStatus('current')
alaDaUserNetProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileName"))
if mibBuilder.loadTexts: alaDaUserNetProfileEntry.setStatus('current')
alaDaUserNetProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUserNetProfileName.setStatus('current')
alaDaUserNetProfileVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileVlanID.setStatus('current')
alaDaUserNetProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileRowStatus.setStatus('current')
alaDaUserNetProfileQosPolicyListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileQosPolicyListName.setStatus('current')
alaDaUserNetProfileMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 5), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUserNetProfileMCLagConfigStatus.setStatus('current')
alaDaUserNetProfileSaaProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileSaaProfileName.setStatus('current')
alaDaUNPIpNetRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2), )
if mibBuilder.loadTexts: alaDaUNPIpNetRuleTable.setStatus('deprecated')
alaDaUNPIpNetRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleAddrType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleMask"))
if mibBuilder.loadTexts: alaDaUNPIpNetRuleEntry.setStatus('deprecated')
alaDaUNPIpNetRuleAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPIpNetRuleAddrType.setStatus('deprecated')
alaDaUNPIpNetRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: alaDaUNPIpNetRuleAddr.setStatus('deprecated')
alaDaUNPIpNetRuleMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 3), InetAddress())
if mibBuilder.loadTexts: alaDaUNPIpNetRuleMask.setStatus('deprecated')
alaDaUNPIpNetRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpNetRuleProfileName.setStatus('deprecated')
alaDaUNPIpNetRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpNetRuleVlanTag.setStatus('deprecated')
alaDaUNPIpNetRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpNetRuleRowStatus.setStatus('deprecated')
alaDaUNPIpNetRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 7), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPIpNetRuleMCLagConfigStatus.setStatus('deprecated')
alaDaUNPMacRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3), )
if mibBuilder.loadTexts: alaDaUNPMacRuleTable.setStatus('deprecated')
alaDaUNPMacRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleAddr"))
if mibBuilder.loadTexts: alaDaUNPMacRuleEntry.setStatus('deprecated')
alaDaUNPMacRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaDaUNPMacRuleAddr.setStatus('deprecated')
alaDaUNPMacRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRuleProfileName.setStatus('deprecated')
alaDaUNPMacRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRuleVlanTag.setStatus('deprecated')
alaDaUNPMacRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRuleRowStatus.setStatus('deprecated')
alaDaUNPMacRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 5), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPMacRuleMCLagConfigStatus.setStatus('deprecated')
alaDaUNPMacRangeRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4), )
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleTable.setStatus('deprecated')
alaDaUNPMacRangeRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleLoAddr"))
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleEntry.setStatus('deprecated')
alaDaUNPMacRangeRuleLoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleLoAddr.setStatus('deprecated')
alaDaUNPMacRangeRuleHiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleHiAddr.setStatus('deprecated')
alaDaUNPMacRangeRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleProfileName.setStatus('deprecated')
alaDaUNPMacRangeRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleVlanTag.setStatus('deprecated')
alaDaUNPMacRangeRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleRowStatus.setStatus('deprecated')
alaDaUNPMacRangeRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 6), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleMCLagConfigStatus.setStatus('deprecated')
alaDaUNPVlanTagRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5), )
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleTable.setStatus('deprecated')
alaDaUNPVlanTagRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagRuleVlan"))
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleEntry.setStatus('deprecated')
alaDaUNPVlanTagRuleVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleVlan.setStatus('deprecated')
alaDaUNPVlanTagRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleProfileName.setStatus('deprecated')
alaDaUNPVlanTagRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleRowStatus.setStatus('deprecated')
alaDaUNPVlanTagRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1, 4), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleMCLagConfigStatus.setStatus('deprecated')
alaDaMacUserTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6), )
if mibBuilder.loadTexts: alaDaMacUserTable.setStatus('current')
alaDaMacUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaMacUserIntfNum"), (0, "ALCATEL-IND1-DA-MIB", "alaDaMacUserMACAddress"))
if mibBuilder.loadTexts: alaDaMacUserEntry.setStatus('current')
alaDaMacUserIntfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDaMacUserIntfNum.setStatus('current')
alaDaMacUserMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaDaMacUserMACAddress.setStatus('current')
alaDaMacUserVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserVlanID.setStatus('current')
alaDaAuthenticationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("idle", 1), ("inProgress", 2), ("authenticated", 3), ("failed", 4), ("failedTimeout", 5), ("failedNoServer", 6), ("failedNoResources", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaAuthenticationStatus.setStatus('current')
alaDaMacUserIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserIpAddress.setStatus('current')
alaDaMacUserUnpUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserUnpUsed.setStatus('current')
alaDaMacUserLoginTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserLoginTimeStamp.setStatus('current')
alaDaMacUserAuthtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("macAuthentication", 0), ("others", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserAuthtype.setStatus('current')
alaDaMacUserClassificationSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 9), AlaDaClassificationPolicyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserClassificationSource.setStatus('current')
alaDaUNPPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7), )
if mibBuilder.loadTexts: alaDaUNPPortTable.setStatus('current')
alaDaUNPPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPPortIfIndex"))
if mibBuilder.loadTexts: alaDaUNPPortEntry.setStatus('current')
alaDaUNPPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alaDaUNPPortIfIndex.setStatus('current')
alaDaUNPPortDefaultProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortDefaultProfileName.setStatus('current')
alaDaUNPPortPassAltProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortPassAltProfileName.setStatus('current')
alaDaUNPPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortRowStatus.setStatus('current')
alaDaUNPPortMacAuthFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortMacAuthFlag.setStatus('current')
alaDaUNPPortClassificationFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortClassificationFlag.setStatus('current')
alaDaUNPPortTrustTagStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTrustTagStatus.setStatus('current')
alaDaUNPPortMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 8), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortMCLagConfigStatus.setStatus('current')
alaDaUNPPortCustomerDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortCustomerDomainId.setStatus('current')
alaDaUNPPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridgePort", 1), ("spbAccessPort", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortType.setStatus('current')
alaDaUNPPortPassAltSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortPassAltSpbProfileName.setStatus('current')
alaDaUNPPortDefaultSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortDefaultSpbProfileName.setStatus('current')
alaDaUNPGlobalConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8))
alaDaUNPDynamicVlanConfigFlag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPDynamicVlanConfigFlag.setStatus('current')
alaDaUNPAuthServerDownUnp = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownUnp.setStatus('current')
alaDaUNPAuthServerDownTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000)).clone(60)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownTimeout.setStatus('current')
alaDaUNPDynamicVlanMCLagConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 4), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPDynamicVlanMCLagConfigStatus.setStatus('current')
alaDaUNPAuthServerDownUNPMCLagConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 5), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownUNPMCLagConfigStatus.setStatus('current')
alaDaUNPAuthServerDownTimeoutMCLagConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 6), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownTimeoutMCLagConfigStatus.setStatus('current')
alaDaUNPDynamicProfileConfigFlag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPDynamicProfileConfigFlag.setStatus('current')
alaDaUNPDynamicProfileConfigMCLagConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 8), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPDynamicProfileConfigMCLagConfigStatus.setStatus('current')
alaDaUNPReloadVsiTypeDB = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPReloadVsiTypeDB.setStatus('current')
alaDaMacVlanUserTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9), )
if mibBuilder.loadTexts: alaDaMacVlanUserTable.setStatus('current')
alaDaMacVlanUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserIntfNum"), (0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserMACAddress"), (0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserVlanID"))
if mibBuilder.loadTexts: alaDaMacVlanUserEntry.setStatus('current')
alaDaMacVlanUserIntfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDaMacVlanUserIntfNum.setStatus('current')
alaDaMacVlanUserMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaDaMacVlanUserMACAddress.setStatus('current')
alaDaMacVlanUserVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: alaDaMacVlanUserVlanID.setStatus('current')
alaDaMacVlanUserAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("idle", 1), ("inProgress", 2), ("authenticated", 3), ("failed", 4), ("failedTimeout", 5), ("failedNoServer", 6), ("failedNoResources", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserAuthStatus.setStatus('current')
alaDaMacVlanUserIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserIpAddressType.setStatus('current')
alaDaMacVlanUserIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserIpAddress.setStatus('current')
alaDaMacVlanUserUnpUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserUnpUsed.setStatus('current')
alaDaMacVlanUserLoginTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserLoginTimeStamp.setStatus('current')
alaDaMacVlanUserAuthtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("macAuthentication", 0), ("others", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserAuthtype.setStatus('current')
alaDaMacVlanUserClassificationSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 10), AlaDaClassificationPolicyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserClassificationSource.setStatus('current')
alaDaMacVlanUserMCLagLearningLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserMCLagLearningLoc.setStatus('current')
alaDaUNPNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10))
unpMcLagMacIgnored = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 0, 1)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpSourceIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpNativeVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMCLAGId"))
if mibBuilder.loadTexts: unpMcLagMacIgnored.setStatus('current')
unpMcLagConfigInconsistency = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 0, 2)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUnpCommandType"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpName"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr1"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr2"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpIpMask"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMCLAGId"))
if mibBuilder.loadTexts: unpMcLagConfigInconsistency.setStatus('current')
alaDaUnpMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpMacAddr.setStatus('current')
alaDaUnpSourceIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpSourceIpAddr.setStatus('current')
alaDaUnpNativeVlan = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpNativeVlan.setStatus('current')
alaDaUnpVlan = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpVlan.setStatus('current')
alaDaUnpMCLAGId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpMCLAGId.setStatus('current')
alaDaUnpCommandType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unpConfigCmd", 1), ("macRuleConfigCmd", 2), ("macRangeRuleConfigCmd", 3), ("ipRuleConfigCmd", 4), ("vlanTagRuleConfigCmd", 5), ("authServerUnpConfigCmd", 6), ("authServerTimerConfigCmd", 7), ("dynamicVlanConfigCmd", 8), ("lagConfigCmd", 9), ("dynamicProfileConfigCmd", 10)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpCommandType.setStatus('current')
alaDaUnpName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpName.setStatus('current')
alaDaUnpMacAddr1 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 8), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpMacAddr1.setStatus('current')
alaDaUnpMacAddr2 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 9), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpMacAddr2.setStatus('current')
alaDaUnpIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 10), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpIpAddr.setStatus('current')
alaDaUnpIpMask = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 11), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpIpMask.setStatus('current')
alaDaUnpVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpVlanTag.setStatus('current')
alaDaUnpCustomerDomainTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11), )
if mibBuilder.loadTexts: alaDaUnpCustomerDomainTable.setStatus('current')
alaDaUnpCustomerDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUnpCustomerDomainId"))
if mibBuilder.loadTexts: alaDaUnpCustomerDomainEntry.setStatus('current')
alaDaUnpCustomerDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUnpCustomerDomainId.setStatus('current')
alaDaUnpCustomerDomainDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUnpCustomerDomainDesc.setStatus('current')
alaDaUnpCustomerDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUnpCustomerDomainRowStatus.setStatus('current')
alaDaSpbProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12), )
if mibBuilder.loadTexts: alaDaSpbProfileTable.setStatus('current')
alaDaSpbProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaSpbProfileName"))
if mibBuilder.loadTexts: alaDaSpbProfileEntry.setStatus('current')
alaDaSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaSpbProfileName.setStatus('current')
alaDaSpbProfileEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 2), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileEncapVal.setStatus('current')
alaDaSpbProfileQosPolicyListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileQosPolicyListName.setStatus('current')
alaDaSpbProfileIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 16777214))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileIsid.setStatus('current')
alaDaSpbProfileBVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileBVlan.setStatus('current')
alaDaSpbProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileRowStatus.setStatus('current')
alaDaSpbProfileMulticastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("headend", 1), ("tandem", 2))).clone('headend')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileMulticastMode.setStatus('current')
alaDaSpbProfileSapVlanXlation = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileSapVlanXlation.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13), )
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleTable.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleGroupId"))
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleEntry.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleGroupId.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleVlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleVlanProfileName.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleSpbProfileName.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleRowStatus.setStatus('current')
alaDaUNPCustDomainVlanTagRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14), )
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleTable.setStatus('current')
alaDaUNPCustDomainVlanTagRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleVlan"))
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleEntry.setStatus('current')
alaDaUNPCustDomainVlanTagRuleDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleDomainId.setStatus('current')
alaDaUNPCustDomainVlanTagRuleVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleVlan.setStatus('current')
alaDaUNPCustDomainVlanTagRuleVlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleVlanProfileName.setStatus('current')
alaDaUNPCustDomainVlanTagRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleRowStatus.setStatus('current')
alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 5), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus.setStatus('current')
alaDaUNPCustDomainVlanTagRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleSpbProfileName.setStatus('current')
alaDaUNPCustDomainVlanTagRuleTagPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notApplicable", 0), ("outerTag", 1), ("innerTag", 2))).clone('outerTag')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleTagPosition.setStatus('current')
alaDaUNPCustDomainIpNetRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15), )
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleTable.setStatus('current')
alaDaUNPCustDomainIpNetRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleAddrType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleMask"))
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleEntry.setStatus('current')
alaDaUNPCustDomainIpNetRuleDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleDomainId.setStatus('current')
alaDaUNPCustDomainIpNetRuleAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 2), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleAddrType.setStatus('current')
alaDaUNPCustDomainIpNetRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleAddr.setStatus('current')
alaDaUNPCustDomainIpNetRuleMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleMask.setStatus('current')
alaDaUNPCustDomainIpNetRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleProfileName.setStatus('current')
alaDaUNPCustDomainIpNetRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleVlanTag.setStatus('current')
alaDaUNPCustDomainIpNetRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleRowStatus.setStatus('current')
alaDaUNPCustDomainIpNetRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 8), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleMCLagConfigStatus.setStatus('current')
alaDaUNPCustDomainIpNetRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleSpbProfileName.setStatus('current')
alaDaUNPCustDomainMacRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16), )
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleTable.setStatus('current')
alaDaUNPCustDomainMacRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleAddr"))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleEntry.setStatus('current')
alaDaUNPCustDomainMacRuleDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleDomainId.setStatus('current')
alaDaUNPCustDomainMacRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleAddr.setStatus('current')
alaDaUNPCustDomainMacRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleProfileName.setStatus('current')
alaDaUNPCustDomainMacRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleVlanTag.setStatus('current')
alaDaUNPCustDomainMacRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleRowStatus.setStatus('current')
alaDaUNPCustDomainMacRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 6), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleMCLagConfigStatus.setStatus('current')
alaDaUNPCustDomainMacRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleSpbProfileName.setStatus('current')
alaDaUNPCustDomainMacRangeRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17), )
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleTable.setStatus('current')
alaDaUNPCustDomainMacRangeRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleLoAddr"))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleEntry.setStatus('current')
alaDaUNPCustDomainMacRangeRuleDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleDomainId.setStatus('current')
alaDaUNPCustDomainMacRangeRuleLoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleLoAddr.setStatus('current')
alaDaUNPCustDomainMacRangeRuleHiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleHiAddr.setStatus('current')
alaDaUNPCustDomainMacRangeRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleProfileName.setStatus('current')
alaDaUNPCustDomainMacRangeRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleVlanTag.setStatus('current')
alaDaUNPCustDomainMacRangeRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleRowStatus.setStatus('current')
alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 7), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus.setStatus('current')
alaDaUNPCustDomainMacRangeRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleSpbProfileName.setStatus('current')
alaDaSaaProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18), )
if mibBuilder.loadTexts: alaDaSaaProfileTable.setStatus('current')
alaDaSaaProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaSaaProfileName"))
if mibBuilder.loadTexts: alaDaSaaProfileEntry.setStatus('current')
alaDaSaaProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaSaaProfileName.setStatus('current')
alaDaSaaProfileLatencyThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSaaProfileLatencyThreshold.setStatus('current')
alaDaSaaProfileJitterThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSaaProfileJitterThreshold.setStatus('current')
alaDaSaaProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSaaProfileRowStatus.setStatus('current')
alaIND1DaMIBCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 2)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPGlobalGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaNotificationObjectGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaNotificationsGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpCustomerDomainGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaSaaProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIND1DaMIBCompliances = alaIND1DaMIBCompliances.setStatus('current')
alaDaUserNetProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileVlanID"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileQosPolicyListName"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileSaaProfileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUserNetProfileGroup = alaDaUserNetProfileGroup.setStatus('current')
alaDaUNPIpNetRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPIpNetRuleGroup = alaDaUNPIpNetRuleGroup.setStatus('current')
alaDaUNPMacRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacRuleGroup = alaDaUNPMacRuleGroup.setStatus('current')
alaDaUNPMacRangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleHiAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacRangeGroup = alaDaUNPMacRangeGroup.setStatus('current')
alaDaUNPVlanTagGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPVlanTagGroup = alaDaUNPVlanTagGroup.setStatus('current')
alaDaMacUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaMacUserVlanID"), ("ALCATEL-IND1-DA-MIB", "alaDaAuthenticationStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserIpAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserUnpUsed"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserLoginTimeStamp"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserAuthtype"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserClassificationSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaMacUserGroup = alaDaMacUserGroup.setStatus('current')
alaDaUNPPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPPortDefaultProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortPassAltProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMacAuthFlag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortClassificationFlag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTrustTagStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPPortGroup = alaDaUNPPortGroup.setStatus('current')
alaDaUNPGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPDynamicVlanConfigFlag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownUnp"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownTimeout"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPDynamicVlanMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownUNPMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownTimeoutMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPDynamicProfileConfigFlag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPDynamicProfileConfigMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPReloadVsiTypeDB"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPGlobalGroup = alaDaUNPGlobalGroup.setStatus('current')
alaDaNotificationObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpSourceIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpNativeVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMCLAGId"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpCommandType"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpName"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr1"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr2"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpIpMask"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaNotificationObjectGroup = alaDaNotificationObjectGroup.setStatus('current')
alaDaNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-DA-MIB", "unpMcLagMacIgnored"), ("ALCATEL-IND1-DA-MIB", "unpMcLagConfigInconsistency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaNotificationsGroup = alaDaNotificationsGroup.setStatus('current')
alaDaMacVlanUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserAuthStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserIpAddressType"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserIpAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserUnpUsed"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserLoginTimeStamp"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserAuthtype"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserClassificationSource"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserMCLagLearningLoc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaMacVlanUserGroup = alaDaMacVlanUserGroup.setStatus('current')
alaDaUnpCustomerDomainGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 12)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUnpCustomerDomainDesc"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpCustomerDomainRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUnpCustomerDomainGroup = alaDaUnpCustomerDomainGroup.setStatus('current')
alaDaSpbProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 13)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileQosPolicyListName"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileIsid"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileBVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileMulticastMode"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileSapVlanXlation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaSpbProfileGroup = alaDaSpbProfileGroup.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 14)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleVlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleSpbProfileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainEvbGpIdRuleGroup = alaDaUNPCustDomainEvbGpIdRuleGroup.setStatus('current')
alaDaUNPCustDomainVlanTagRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 15)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleVlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleTagPosition"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainVlanTagRuleGroup = alaDaUNPCustDomainVlanTagRuleGroup.setStatus('current')
alaDaUNPCustDomainIpNetRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 16)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainIpNetRuleGroup = alaDaUNPCustDomainIpNetRuleGroup.setStatus('current')
alaDaUNPCustDomainMacRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 17)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainMacRuleGroup = alaDaUNPCustDomainMacRuleGroup.setStatus('current')
alaDaUNPCustDomainMacRangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 18)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleHiAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainMacRangeGroup = alaDaUNPCustDomainMacRangeGroup.setStatus('current')
alaDaUNPGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 19)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPPortCustomerDomainId"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortPassAltSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortDefaultSpbProfileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPGroupObjects = alaDaUNPGroupObjects.setStatus('current')
alaDaSaaProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 20)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaSaaProfileLatencyThreshold"), ("ALCATEL-IND1-DA-MIB", "alaDaSaaProfileJitterThreshold"), ("ALCATEL-IND1-DA-MIB", "alaDaSaaProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaSaaProfileGroup = alaDaSaaProfileGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-DA-MIB", alaDaUNPCustDomainIpNetRuleRowStatus=alaDaUNPCustDomainIpNetRuleRowStatus, alaDaMacVlanUserAuthtype=alaDaMacVlanUserAuthtype, alaDaMacUserGroup=alaDaMacUserGroup, alaDaUserNetProfileMCLagConfigStatus=alaDaUserNetProfileMCLagConfigStatus, alaDaUserNetProfileGroup=alaDaUserNetProfileGroup, alaDaUNPCustDomainIpNetRuleVlanTag=alaDaUNPCustDomainIpNetRuleVlanTag, alaDaUnpCustomerDomainDesc=alaDaUnpCustomerDomainDesc, alaDaUNPPortCustomerDomainId=alaDaUNPPortCustomerDomainId, alaDaMacVlanUserLoginTimeStamp=alaDaMacVlanUserLoginTimeStamp, alaDaUnpCustomerDomainId=alaDaUnpCustomerDomainId, alaDaUNPAuthServerDownUNPMCLagConfigStatus=alaDaUNPAuthServerDownUNPMCLagConfigStatus, alaDaUNPCustDomainMacRuleEntry=alaDaUNPCustDomainMacRuleEntry, alaDaUNPMacRangeRuleHiAddr=alaDaUNPMacRangeRuleHiAddr, alcatelIND1DaMIB=alcatelIND1DaMIB, alaDaUNPCustDomainMacRuleTable=alaDaUNPCustDomainMacRuleTable, alaDaUNPCustDomainEvbGpIdRuleTable=alaDaUNPCustDomainEvbGpIdRuleTable, alaDaUNPCustDomainMacRangeRuleEntry=alaDaUNPCustDomainMacRangeRuleEntry, alaDaMacVlanUserMACAddress=alaDaMacVlanUserMACAddress, alaDaMacVlanUserIntfNum=alaDaMacVlanUserIntfNum, alaDaUNPCustDomainIpNetRuleTable=alaDaUNPCustDomainIpNetRuleTable, alaDaUNPCustDomainVlanTagRuleTagPosition=alaDaUNPCustDomainVlanTagRuleTagPosition, alaDaSpbProfileRowStatus=alaDaSpbProfileRowStatus, alaDaUNPPortMCLagConfigStatus=alaDaUNPPortMCLagConfigStatus, alaDaSaaProfileEntry=alaDaSaaProfileEntry, alaDaAuthenticationStatus=alaDaAuthenticationStatus, alaDaUnpVlanTag=alaDaUnpVlanTag, alaDaUnpCommandType=alaDaUnpCommandType, alaDaUserNetProfileEntry=alaDaUserNetProfileEntry, alaDaUNPPortRowStatus=alaDaUNPPortRowStatus, alaDaUNPIpNetRuleGroup=alaDaUNPIpNetRuleGroup, alaDaMacVlanUserTable=alaDaMacVlanUserTable, alaDaUNPCustDomainMacRuleProfileName=alaDaUNPCustDomainMacRuleProfileName, alaDaSpbProfileName=alaDaSpbProfileName, alaDaUNPGroupObjects=alaDaUNPGroupObjects, alaDaUnpName=alaDaUnpName, alaDaUserNetProfileSaaProfileName=alaDaUserNetProfileSaaProfileName, alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus=alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus, alaDaUnpMacAddr2=alaDaUnpMacAddr2, alaDaMacVlanUserAuthStatus=alaDaMacVlanUserAuthStatus, alaDaUNPGlobalGroup=alaDaUNPGlobalGroup, alaDaMacUserAuthtype=alaDaMacUserAuthtype, alaDaUNPVlanTagRuleMCLagConfigStatus=alaDaUNPVlanTagRuleMCLagConfigStatus, alaDaUNPPortPassAltSpbProfileName=alaDaUNPPortPassAltSpbProfileName, alaDaUNPIpNetRuleProfileName=alaDaUNPIpNetRuleProfileName, alaDaUNPNotificationObjects=alaDaUNPNotificationObjects, unpMcLagMacIgnored=unpMcLagMacIgnored, alaDaUNPCustDomainMacRangeRuleProfileName=alaDaUNPCustDomainMacRangeRuleProfileName, alaDaMacUserClassificationSource=alaDaMacUserClassificationSource, alaIND1DaMIBGroups=alaIND1DaMIBGroups, alaDaUNPMacRuleRowStatus=alaDaUNPMacRuleRowStatus, alaDaMacUserEntry=alaDaMacUserEntry, alaDaUNPIpNetRuleMCLagConfigStatus=alaDaUNPIpNetRuleMCLagConfigStatus, alaDaUNPAuthServerDownTimeout=alaDaUNPAuthServerDownTimeout, alaDaMacUserTable=alaDaMacUserTable, alaDaUNPCustDomainMacRuleSpbProfileName=alaDaUNPCustDomainMacRuleSpbProfileName, alaDaSaaProfileName=alaDaSaaProfileName, alaDaUNPVlanTagRuleTable=alaDaUNPVlanTagRuleTable, alaDaUNPIpNetRuleEntry=alaDaUNPIpNetRuleEntry, alaDaUNPCustDomainIpNetRuleEntry=alaDaUNPCustDomainIpNetRuleEntry, alaDaUNPCustDomainMacRuleGroup=alaDaUNPCustDomainMacRuleGroup, alaDaUNPMacRuleAddr=alaDaUNPMacRuleAddr, alaDaUNPCustDomainMacRangeRuleSpbProfileName=alaDaUNPCustDomainMacRangeRuleSpbProfileName, alaDaUNPCustDomainMacRuleVlanTag=alaDaUNPCustDomainMacRuleVlanTag, alaDaUNPReloadVsiTypeDB=alaDaUNPReloadVsiTypeDB, alaDaUnpIpMask=alaDaUnpIpMask, alaDaMacUserLoginTimeStamp=alaDaMacUserLoginTimeStamp, AlaMultiChassisConfigStatus=AlaMultiChassisConfigStatus, alaDaMacVlanUserUnpUsed=alaDaMacVlanUserUnpUsed, alaDaUNPCustDomainVlanTagRuleVlan=alaDaUNPCustDomainVlanTagRuleVlan, alaDaUserNetProfileName=alaDaUserNetProfileName, alaDaUNPCustDomainVlanTagRuleSpbProfileName=alaDaUNPCustDomainVlanTagRuleSpbProfileName, alaDaSpbProfileIsid=alaDaSpbProfileIsid, alaDaUnpMacAddr=alaDaUnpMacAddr, alaDaUNPCustDomainEvbGpIdRuleEntry=alaDaUNPCustDomainEvbGpIdRuleEntry, alaDaUNPDynamicVlanConfigFlag=alaDaUNPDynamicVlanConfigFlag, alaDaUnpCustomerDomainRowStatus=alaDaUnpCustomerDomainRowStatus, alaDaUNPCustDomainEvbGpIdRuleSpbProfileName=alaDaUNPCustDomainEvbGpIdRuleSpbProfileName, alaDaUNPCustDomainIpNetRuleAddrType=alaDaUNPCustDomainIpNetRuleAddrType, alaDaSaaProfileLatencyThreshold=alaDaSaaProfileLatencyThreshold, PYSNMP_MODULE_ID=alcatelIND1DaMIB, alaDaMacUserIntfNum=alaDaMacUserIntfNum, alaDaUNPCustDomainMacRuleAddr=alaDaUNPCustDomainMacRuleAddr, alaDaUnpCustomerDomainEntry=alaDaUnpCustomerDomainEntry, alaDaSpbProfileEncapVal=alaDaSpbProfileEncapVal, alaDaUNPVlanTagGroup=alaDaUNPVlanTagGroup, alaDaUNPDynamicProfileConfigMCLagConfigStatus=alaDaUNPDynamicProfileConfigMCLagConfigStatus, alaDaUserNetProfileVlanID=alaDaUserNetProfileVlanID, alaDaUNPVlanTagRuleRowStatus=alaDaUNPVlanTagRuleRowStatus, alaDaSaaProfileGroup=alaDaSaaProfileGroup, alaDaUNPMacRuleGroup=alaDaUNPMacRuleGroup, alaIND1DaMIBNotifications=alaIND1DaMIBNotifications, alaDaUNPCustDomainVlanTagRuleGroup=alaDaUNPCustDomainVlanTagRuleGroup, alaDaSpbProfileBVlan=alaDaSpbProfileBVlan, alaDaNotificationObjectGroup=alaDaNotificationObjectGroup, alaDaSaaProfileJitterThreshold=alaDaSaaProfileJitterThreshold, alaDaUNPCustDomainVlanTagRuleDomainId=alaDaUNPCustDomainVlanTagRuleDomainId, alaDaUNPPortClassificationFlag=alaDaUNPPortClassificationFlag, alaDaUNPCustDomainMacRangeRuleHiAddr=alaDaUNPCustDomainMacRangeRuleHiAddr, alaDaUNPCustDomainVlanTagRuleRowStatus=alaDaUNPCustDomainVlanTagRuleRowStatus, alaDaUNPVlanTagRuleEntry=alaDaUNPVlanTagRuleEntry, alaDaSaaProfileTable=alaDaSaaProfileTable, alaIND1DaMIBCompliances=alaIND1DaMIBCompliances, alaDaUNPVlanTagRuleProfileName=alaDaUNPVlanTagRuleProfileName, alaDaUnpMacAddr1=alaDaUnpMacAddr1, alaDaUNPIpNetRuleAddrType=alaDaUNPIpNetRuleAddrType, alaDaUNPCustDomainIpNetRuleSpbProfileName=alaDaUNPCustDomainIpNetRuleSpbProfileName, alaDaUNPMacRuleTable=alaDaUNPMacRuleTable, alaDaUNPCustDomainVlanTagRuleTable=alaDaUNPCustDomainVlanTagRuleTable, alaDaUnpCustomerDomainTable=alaDaUnpCustomerDomainTable, alaDaUNPMacRangeRuleProfileName=alaDaUNPMacRangeRuleProfileName, AlaDaMacLearntState=AlaDaMacLearntState, alaDaUNPDynamicVlanMCLagConfigStatus=alaDaUNPDynamicVlanMCLagConfigStatus, alaDaMacVlanUserIpAddress=alaDaMacVlanUserIpAddress, alaDaSpbProfileGroup=alaDaSpbProfileGroup, alaDaUNPPortIfIndex=alaDaUNPPortIfIndex, alaDaUNPCustDomainIpNetRuleDomainId=alaDaUNPCustDomainIpNetRuleDomainId, alaDaUNPIpNetRuleVlanTag=alaDaUNPIpNetRuleVlanTag, alaDaUNPMacRangeRuleVlanTag=alaDaUNPMacRangeRuleVlanTag, alaDaMacUserVlanID=alaDaMacUserVlanID, alaDaMacVlanUserClassificationSource=alaDaMacVlanUserClassificationSource, alaDaUnpCustomerDomainGroup=alaDaUnpCustomerDomainGroup, AlaDaAuthenticationResult=AlaDaAuthenticationResult, alaDaUNPPortType=alaDaUNPPortType, alaIND1DaMIBConformance=alaIND1DaMIBConformance, alaDaUNPMacRangeRuleTable=alaDaUNPMacRangeRuleTable, alaDaUnpMCLAGId=alaDaUnpMCLAGId, alaDaUNPCustDomainMacRuleRowStatus=alaDaUNPCustDomainMacRuleRowStatus, alaDaUNPPortEntry=alaDaUNPPortEntry, AlaDaAuthenticationType=AlaDaAuthenticationType, alaDaUNPPortGroup=alaDaUNPPortGroup, alaDaUNPMacRuleEntry=alaDaUNPMacRuleEntry, alaDaUNPCustDomainIpNetRuleMCLagConfigStatus=alaDaUNPCustDomainIpNetRuleMCLagConfigStatus, alaDaUNPCustDomainMacRuleMCLagConfigStatus=alaDaUNPCustDomainMacRuleMCLagConfigStatus, alaDaUserNetProfileTable=alaDaUserNetProfileTable, alaIND1DaMIBObjects=alaIND1DaMIBObjects, alaDaUNPDynamicProfileConfigFlag=alaDaUNPDynamicProfileConfigFlag, alaDaUNPAuthServerDownTimeoutMCLagConfigStatus=alaDaUNPAuthServerDownTimeoutMCLagConfigStatus, alaDaUNPAuthServerDownUnp=alaDaUNPAuthServerDownUnp, alaDaUNPCustDomainEvbGpIdRuleRowStatus=alaDaUNPCustDomainEvbGpIdRuleRowStatus, alaDaUserNetProfileQosPolicyListName=alaDaUserNetProfileQosPolicyListName, alaDaUNPIpNetRuleTable=alaDaUNPIpNetRuleTable, alaDaMacVlanUserGroup=alaDaMacVlanUserGroup, alaDaUnpSourceIpAddr=alaDaUnpSourceIpAddr, alaDaUNPCustDomainIpNetRuleGroup=alaDaUNPCustDomainIpNetRuleGroup, alaDaUNPMacRangeRuleRowStatus=alaDaUNPMacRangeRuleRowStatus, alaDaUNPIpNetRuleRowStatus=alaDaUNPIpNetRuleRowStatus, alaDaMacUserIpAddress=alaDaMacUserIpAddress, alaDaUNPPortPassAltProfileName=alaDaUNPPortPassAltProfileName, alaDaUNPPortDefaultSpbProfileName=alaDaUNPPortDefaultSpbProfileName, alaDaUNPGlobalConfiguration=alaDaUNPGlobalConfiguration, AlaDaClassificationPolicyType=AlaDaClassificationPolicyType, alaDaUnpNativeVlan=alaDaUnpNativeVlan, alaDaNotificationsGroup=alaDaNotificationsGroup, alaDaSpbProfileQosPolicyListName=alaDaSpbProfileQosPolicyListName, alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId=alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId, alaDaSpbProfileEntry=alaDaSpbProfileEntry, alaDaUNPCustDomainEvbGpIdRuleGroupId=alaDaUNPCustDomainEvbGpIdRuleGroupId, alaDaUNPCustDomainEvbGpIdRuleVlanProfileName=alaDaUNPCustDomainEvbGpIdRuleVlanProfileName, alaDaSpbProfileTable=alaDaSpbProfileTable, alaDaUNPCustDomainIpNetRuleProfileName=alaDaUNPCustDomainIpNetRuleProfileName, alaDaUNPMacRangeRuleLoAddr=alaDaUNPMacRangeRuleLoAddr, alaDaMacVlanUserEntry=alaDaMacVlanUserEntry, alaDaUNPVlanTagRuleVlan=alaDaUNPVlanTagRuleVlan, alaDaUNPPortTable=alaDaUNPPortTable, alaDaMacVlanUserIpAddressType=alaDaMacVlanUserIpAddressType, alaDaUNPMacRuleMCLagConfigStatus=alaDaUNPMacRuleMCLagConfigStatus, alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus=alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus, alaDaUNPCustDomainIpNetRuleAddr=alaDaUNPCustDomainIpNetRuleAddr, alaDaSpbProfileMulticastMode=alaDaSpbProfileMulticastMode, alaDaMacUserUnpUsed=alaDaMacUserUnpUsed, alaDaUNPMacRuleVlanTag=alaDaUNPMacRuleVlanTag, alaDaUNPCustDomainMacRangeRuleDomainId=alaDaUNPCustDomainMacRangeRuleDomainId, alaDaSaaProfileRowStatus=alaDaSaaProfileRowStatus, alaDaUNPCustDomainEvbGpIdRuleGroup=alaDaUNPCustDomainEvbGpIdRuleGroup, alaDaUnpVlan=alaDaUnpVlan, alaDaUNPPortTrustTagStatus=alaDaUNPPortTrustTagStatus, alaDaUNPCustDomainMacRuleDomainId=alaDaUNPCustDomainMacRuleDomainId, alaDaUNPPortMacAuthFlag=alaDaUNPPortMacAuthFlag, alaDaUNPIpNetRuleMask=alaDaUNPIpNetRuleMask, alaDaUNPCustDomainMacRangeRuleRowStatus=alaDaUNPCustDomainMacRangeRuleRowStatus, alaDaUserNetProfileRowStatus=alaDaUserNetProfileRowStatus, alaDaUNPCustDomainVlanTagRuleVlanProfileName=alaDaUNPCustDomainVlanTagRuleVlanProfileName, alaDaUNPMacRuleProfileName=alaDaUNPMacRuleProfileName, alaDaUNPPortDefaultProfileName=alaDaUNPPortDefaultProfileName, alaDaSpbProfileSapVlanXlation=alaDaSpbProfileSapVlanXlation, alaDaUNPCustDomainIpNetRuleMask=alaDaUNPCustDomainIpNetRuleMask, alaDaUNPMacRangeGroup=alaDaUNPMacRangeGroup, alaDaMacUserMACAddress=alaDaMacUserMACAddress, alaDaUNPCustDomainMacRangeRuleVlanTag=alaDaUNPCustDomainMacRangeRuleVlanTag, alaDaUNPMacRangeRuleMCLagConfigStatus=alaDaUNPMacRangeRuleMCLagConfigStatus, alaDaUNPMacRangeRuleEntry=alaDaUNPMacRangeRuleEntry, alaDaUNPIpNetRuleAddr=alaDaUNPIpNetRuleAddr, alaDaMacVlanUserVlanID=alaDaMacVlanUserVlanID, alaDaUNPCustDomainMacRangeRuleTable=alaDaUNPCustDomainMacRangeRuleTable, alaDaUNPCustDomainMacRangeGroup=alaDaUNPCustDomainMacRangeGroup, alaDaUNPCustDomainMacRangeRuleLoAddr=alaDaUNPCustDomainMacRangeRuleLoAddr, alaDaMacVlanUserMCLagLearningLoc=alaDaMacVlanUserMCLagLearningLoc, alaDaUNPCustDomainVlanTagRuleEntry=alaDaUNPCustDomainVlanTagRuleEntry, unpMcLagConfigInconsistency=unpMcLagConfigInconsistency, alaDaUnpIpAddr=alaDaUnpIpAddr)
