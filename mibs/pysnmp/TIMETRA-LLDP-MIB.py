#
# PySNMP MIB module TIMETRA-LLDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-LLDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:11:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
AddressFamilyNumbers, = mibBuilder.importSymbols("IANA-ADDRESS-FAMILY-NUMBERS-MIB", "AddressFamilyNumbers")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
LldpManAddrIfSubtype, lldpLocManAddr, LldpPortIdSubtype, LldpChassisIdSubtype, LldpPortId, LldpSystemCapabilitiesMap, LldpChassisId, lldpLocManAddrSubtype, LldpManAddress = mibBuilder.importSymbols("LLDP-MIB", "LldpManAddrIfSubtype", "lldpLocManAddr", "LldpPortIdSubtype", "LldpChassisIdSubtype", "LldpPortId", "LldpSystemCapabilitiesMap", "LldpChassisId", "lldpLocManAddrSubtype", "LldpManAddress")
TimeFilter, ZeroBasedCounter32 = mibBuilder.importSymbols("RMON2-MIB", "TimeFilter", "ZeroBasedCounter32")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, iso, Gauge32, IpAddress, Bits, ObjectIdentity, MibIdentifier, Unsigned32, TimeTicks, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "Gauge32", "IpAddress", "Bits", "ObjectIdentity", "MibIdentifier", "Unsigned32", "TimeTicks", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter32")
DisplayString, MacAddress, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention", "TruthValue")
tmnxSRConfs, timetraSRMIBModules, tmnxSRNotifyPrefix, tmnxSRObjs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRConfs", "timetraSRMIBModules", "tmnxSRNotifyPrefix", "tmnxSRObjs")
TmnxEnabledDisabled, = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TmnxEnabledDisabled")
tmnxLldpMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 59))
tmnxLldpMIBModule.setRevisions(('1909-02-28 00:00', '1902-02-02 02:00',))
if mibBuilder.loadTexts: tmnxLldpMIBModule.setLastUpdated('0902280000Z')
if mibBuilder.loadTexts: tmnxLldpMIBModule.setOrganization('Alcatel-Lucent')
tmnxLldpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 59))
tmnxLldpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59))
tmnxLldpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59))
tmnxLldpConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1))
tmnxLldpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2))
tmnxLldpLocalSystemData = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 3))
tmnxLldpRemoteSystemsData = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4))
class TmnxLldpDestAddressTableIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4096)

class TmnxLldpManAddressIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("system", 1))

tmnxLldpTxCreditMax = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxLldpTxCreditMax.setStatus('current')
tmnxLldpMessageFastTx = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxLldpMessageFastTx.setStatus('current')
tmnxLldpMessageFastTxInit = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxLldpMessageFastTxInit.setStatus('current')
tmnxLldpAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 4), TmnxEnabledDisabled()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxLldpAdminStatus.setStatus('current')
tmnxLldpPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 5), )
if mibBuilder.loadTexts: tmnxLldpPortConfigTable.setStatus('current')
tmnxLldpPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpPortCfgDestAddressIndex"))
if mibBuilder.loadTexts: tmnxLldpPortConfigEntry.setStatus('current')
tmnxLldpPortCfgDestAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 5, 1, 1), TmnxLldpDestAddressTableIndex())
if mibBuilder.loadTexts: tmnxLldpPortCfgDestAddressIndex.setStatus('current')
tmnxLldpPortCfgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("txOnly", 1), ("rxOnly", 2), ("txAndRx", 3), ("disabled", 4))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxLldpPortCfgAdminStatus.setStatus('current')
tmnxLldpPortCfgNotifyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 5, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxLldpPortCfgNotifyEnable.setStatus('current')
tmnxLldpPortCfgTLVsTxEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 5, 1, 4), Bits().clone(namedValues=NamedValues(("portDesc", 0), ("sysName", 1), ("sysDesc", 2), ("sysCap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxLldpPortCfgTLVsTxEnable.setStatus('current')
tmnxLldpConfigManAddrPortsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 6), )
if mibBuilder.loadTexts: tmnxLldpConfigManAddrPortsTable.setStatus('current')
tmnxLldpConfigManAddrPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpPortCfgDestAddressIndex"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpPortCfgAddressIndex"))
if mibBuilder.loadTexts: tmnxLldpConfigManAddrPortsEntry.setStatus('current')
tmnxLldpPortCfgAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 6, 1, 1), TmnxLldpManAddressIndex())
if mibBuilder.loadTexts: tmnxLldpPortCfgAddressIndex.setStatus('current')
tmnxLldpPortCfgManAddrTxEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 6, 1, 2), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxLldpPortCfgManAddrTxEnabled.setStatus('current')
tmnxLldpPortCfgManAddrSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 6, 1, 3), AddressFamilyNumbers()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpPortCfgManAddrSubtype.setStatus('current')
tmnxLldpPortCfgManAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 6, 1, 4), LldpManAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpPortCfgManAddress.setStatus('current')
tmnxLldpDestAddressTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 7), )
if mibBuilder.loadTexts: tmnxLldpDestAddressTable.setStatus('current')
tmnxLldpDestAddressTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 7, 1), ).setIndexNames((0, "TIMETRA-LLDP-MIB", "tmnxLldpAddressTableIndex"))
if mibBuilder.loadTexts: tmnxLldpDestAddressTableEntry.setStatus('current')
tmnxLldpAddressTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 7, 1, 1), TmnxLldpDestAddressTableIndex())
if mibBuilder.loadTexts: tmnxLldpAddressTableIndex.setStatus('current')
tmnxLldpDestMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 1, 7, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpDestMacAddress.setStatus('current')
tmnxLldpStatsTxPortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 1), )
if mibBuilder.loadTexts: tmnxLldpStatsTxPortTable.setStatus('current')
tmnxLldpStatsTxPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpStatsTxDestMACAddress"))
if mibBuilder.loadTexts: tmnxLldpStatsTxPortEntry.setStatus('current')
tmnxLldpStatsTxDestMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 1, 1, 1), TmnxLldpDestAddressTableIndex())
if mibBuilder.loadTexts: tmnxLldpStatsTxDestMACAddress.setStatus('current')
tmnxLldpStatsTxPortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpStatsTxPortFrames.setStatus('current')
tmnxLldpStatsTxLLDPDULengthErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpStatsTxLLDPDULengthErrs.setStatus('current')
tmnxLldpStatsRxPortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 2), )
if mibBuilder.loadTexts: tmnxLldpStatsRxPortTable.setStatus('current')
tmnxLldpStatsRxPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpStatsRxDestMACAddress"))
if mibBuilder.loadTexts: tmnxLldpStatsRxPortEntry.setStatus('current')
tmnxLldpStatsRxDestMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 2, 1, 1), TmnxLldpDestAddressTableIndex())
if mibBuilder.loadTexts: tmnxLldpStatsRxDestMACAddress.setStatus('current')
tmnxLldpStatsRxPortFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpStatsRxPortFrameDiscard.setStatus('current')
tmnxLldpStatsRxPortFrameErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpStatsRxPortFrameErrs.setStatus('current')
tmnxLldpStatsRxPortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpStatsRxPortFrames.setStatus('current')
tmnxLldpStatsRxPortTLVDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpStatsRxPortTLVDiscard.setStatus('current')
tmnxLldpStatsRxPortTLVUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpStatsRxPortTLVUnknown.setStatus('current')
tmnxLldpStatsRxPortAgeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 2, 2, 1, 7), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpStatsRxPortAgeouts.setStatus('current')
tmnxLldpLocPortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 3, 1), )
if mibBuilder.loadTexts: tmnxLldpLocPortTable.setStatus('current')
tmnxLldpLocPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpLocPortDestMACAddress"))
if mibBuilder.loadTexts: tmnxLldpLocPortEntry.setStatus('current')
tmnxLldpLocPortDestMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 3, 1, 1, 1), TmnxLldpDestAddressTableIndex())
if mibBuilder.loadTexts: tmnxLldpLocPortDestMACAddress.setStatus('current')
tmnxLldpLocPortIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 3, 1, 1, 2), LldpPortIdSubtype()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpLocPortIdSubtype.setStatus('current')
tmnxLldpLocPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 3, 1, 1, 3), LldpPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpLocPortId.setStatus('current')
tmnxLldpLocPortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 3, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpLocPortDesc.setStatus('current')
tmnxLldpRemTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1), )
if mibBuilder.loadTexts: tmnxLldpRemTable.setStatus('current')
tmnxLldpRemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1), ).setIndexNames((0, "TIMETRA-LLDP-MIB", "tmnxLldpRemTimeMark"), (0, "IF-MIB", "ifIndex"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpRemLocalDestMACAddress"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpRemIndex"))
if mibBuilder.loadTexts: tmnxLldpRemEntry.setStatus('current')
tmnxLldpRemTimeMark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 1), TimeFilter())
if mibBuilder.loadTexts: tmnxLldpRemTimeMark.setStatus('current')
tmnxLldpRemLocalDestMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 2), TmnxLldpDestAddressTableIndex())
if mibBuilder.loadTexts: tmnxLldpRemLocalDestMACAddress.setStatus('current')
tmnxLldpRemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: tmnxLldpRemIndex.setStatus('current')
tmnxLldpRemChassisIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 4), LldpChassisIdSubtype()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemChassisIdSubtype.setStatus('current')
tmnxLldpRemChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 5), LldpChassisId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemChassisId.setStatus('current')
tmnxLldpRemPortIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 6), LldpPortIdSubtype()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemPortIdSubtype.setStatus('current')
tmnxLldpRemPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 7), LldpPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemPortId.setStatus('current')
tmnxLldpRemPortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemPortDesc.setStatus('current')
tmnxLldpRemSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemSysName.setStatus('current')
tmnxLldpRemSysDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemSysDesc.setStatus('current')
tmnxLldpRemSysCapSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 11), LldpSystemCapabilitiesMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemSysCapSupported.setStatus('current')
tmnxLldpRemSysCapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 1, 1, 12), LldpSystemCapabilitiesMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemSysCapEnabled.setStatus('current')
tmnxLldpRemManAddrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 2), )
if mibBuilder.loadTexts: tmnxLldpRemManAddrTable.setStatus('current')
tmnxLldpRemManAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 2, 1), ).setIndexNames((0, "TIMETRA-LLDP-MIB", "tmnxLldpRemTimeMark"), (0, "IF-MIB", "ifIndex"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpRemLocalDestMACAddress"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpRemIndex"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpRemManAddrSubtype"), (0, "TIMETRA-LLDP-MIB", "tmnxLldpRemManAddr"))
if mibBuilder.loadTexts: tmnxLldpRemManAddrEntry.setStatus('current')
tmnxLldpRemManAddrSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 2, 1, 1), AddressFamilyNumbers())
if mibBuilder.loadTexts: tmnxLldpRemManAddrSubtype.setStatus('current')
tmnxLldpRemManAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 2, 1, 2), LldpManAddress())
if mibBuilder.loadTexts: tmnxLldpRemManAddr.setStatus('current')
tmnxLldpRemManAddrIfSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 2, 1, 3), LldpManAddrIfSubtype()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemManAddrIfSubtype.setStatus('current')
tmnxLldpRemManAddrIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemManAddrIfId.setStatus('current')
tmnxLldpRemManAddrOID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 59, 4, 2, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxLldpRemManAddrOID.setStatus('current')
tmnxLldpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59, 1))
tmnxLldpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59, 2))
tmnxLldpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59, 1, 1)).setObjects(("TIMETRA-LLDP-MIB", "tmnxLldpConfigGroup"), ("TIMETRA-LLDP-MIB", "tmnxLldpStatsRxGroup"), ("TIMETRA-LLDP-MIB", "tmnxLldpStatsTxGroup"), ("TIMETRA-LLDP-MIB", "tmnxLldpLocSysGroup"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemSysGroup"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemManAddrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLldpCompliance = tmnxLldpCompliance.setStatus('current')
tmnxLldpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59, 2, 1)).setObjects(("TIMETRA-LLDP-MIB", "tmnxLldpTxCreditMax"), ("TIMETRA-LLDP-MIB", "tmnxLldpMessageFastTx"), ("TIMETRA-LLDP-MIB", "tmnxLldpMessageFastTxInit"), ("TIMETRA-LLDP-MIB", "tmnxLldpAdminStatus"), ("TIMETRA-LLDP-MIB", "tmnxLldpPortCfgAdminStatus"), ("TIMETRA-LLDP-MIB", "tmnxLldpPortCfgNotifyEnable"), ("TIMETRA-LLDP-MIB", "tmnxLldpPortCfgTLVsTxEnable"), ("TIMETRA-LLDP-MIB", "tmnxLldpPortCfgManAddrTxEnabled"), ("TIMETRA-LLDP-MIB", "tmnxLldpPortCfgManAddrSubtype"), ("TIMETRA-LLDP-MIB", "tmnxLldpPortCfgManAddress"), ("TIMETRA-LLDP-MIB", "tmnxLldpDestMacAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLldpConfigGroup = tmnxLldpConfigGroup.setStatus('current')
tmnxLldpStatsRxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59, 2, 2)).setObjects(("TIMETRA-LLDP-MIB", "tmnxLldpStatsRxPortFrameDiscard"), ("TIMETRA-LLDP-MIB", "tmnxLldpStatsRxPortFrameErrs"), ("TIMETRA-LLDP-MIB", "tmnxLldpStatsRxPortFrames"), ("TIMETRA-LLDP-MIB", "tmnxLldpStatsRxPortTLVDiscard"), ("TIMETRA-LLDP-MIB", "tmnxLldpStatsRxPortTLVUnknown"), ("TIMETRA-LLDP-MIB", "tmnxLldpStatsRxPortAgeouts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLldpStatsRxGroup = tmnxLldpStatsRxGroup.setStatus('current')
tmnxLldpStatsTxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59, 2, 3)).setObjects(("TIMETRA-LLDP-MIB", "tmnxLldpStatsTxPortFrames"), ("TIMETRA-LLDP-MIB", "tmnxLldpStatsTxLLDPDULengthErrs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLldpStatsTxGroup = tmnxLldpStatsTxGroup.setStatus('current')
tmnxLldpLocSysGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59, 2, 4)).setObjects(("TIMETRA-LLDP-MIB", "tmnxLldpLocPortIdSubtype"), ("TIMETRA-LLDP-MIB", "tmnxLldpLocPortId"), ("TIMETRA-LLDP-MIB", "tmnxLldpLocPortDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLldpLocSysGroup = tmnxLldpLocSysGroup.setStatus('current')
tmnxLldpRemSysGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59, 2, 5)).setObjects(("TIMETRA-LLDP-MIB", "tmnxLldpRemChassisIdSubtype"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemChassisId"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemPortIdSubtype"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemPortId"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemPortDesc"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemSysName"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemSysDesc"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemSysCapSupported"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemSysCapEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLldpRemSysGroup = tmnxLldpRemSysGroup.setStatus('current')
tmnxLldpRemManAddrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 59, 2, 6)).setObjects(("TIMETRA-LLDP-MIB", "tmnxLldpRemManAddrIfSubtype"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemManAddrIfId"), ("TIMETRA-LLDP-MIB", "tmnxLldpRemManAddrOID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxLldpRemManAddrGroup = tmnxLldpRemManAddrGroup.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-LLDP-MIB", tmnxLldpLocPortDestMACAddress=tmnxLldpLocPortDestMACAddress, tmnxLldpStatsRxPortTable=tmnxLldpStatsRxPortTable, tmnxLldpRemSysCapEnabled=tmnxLldpRemSysCapEnabled, tmnxLldpStatsRxPortFrameErrs=tmnxLldpStatsRxPortFrameErrs, tmnxLldpLocSysGroup=tmnxLldpLocSysGroup, tmnxLldpStatsTxPortTable=tmnxLldpStatsTxPortTable, tmnxLldpLocalSystemData=tmnxLldpLocalSystemData, tmnxLldpStatsTxPortEntry=tmnxLldpStatsTxPortEntry, tmnxLldpPortConfigTable=tmnxLldpPortConfigTable, tmnxLldpStatsTxDestMACAddress=tmnxLldpStatsTxDestMACAddress, tmnxLldpPortCfgTLVsTxEnable=tmnxLldpPortCfgTLVsTxEnable, tmnxLldpStatsRxDestMACAddress=tmnxLldpStatsRxDestMACAddress, tmnxLldpStatsRxPortFrames=tmnxLldpStatsRxPortFrames, tmnxLldpPortCfgManAddrSubtype=tmnxLldpPortCfgManAddrSubtype, tmnxLldpPortCfgAddressIndex=tmnxLldpPortCfgAddressIndex, tmnxLldpRemSysName=tmnxLldpRemSysName, tmnxLldpRemManAddrIfId=tmnxLldpRemManAddrIfId, tmnxLldpTxCreditMax=tmnxLldpTxCreditMax, tmnxLldpLocPortEntry=tmnxLldpLocPortEntry, tmnxLldpStatsRxPortEntry=tmnxLldpStatsRxPortEntry, tmnxLldpRemManAddr=tmnxLldpRemManAddr, tmnxLldpDestAddressTable=tmnxLldpDestAddressTable, tmnxLldpDestAddressTableEntry=tmnxLldpDestAddressTableEntry, tmnxLldpGroups=tmnxLldpGroups, tmnxLldpPortCfgManAddrTxEnabled=tmnxLldpPortCfgManAddrTxEnabled, tmnxLldpDestMacAddress=tmnxLldpDestMacAddress, tmnxLldpRemoteSystemsData=tmnxLldpRemoteSystemsData, tmnxLldpPortCfgDestAddressIndex=tmnxLldpPortCfgDestAddressIndex, tmnxLldpRemManAddrSubtype=tmnxLldpRemManAddrSubtype, tmnxLldpRemPortIdSubtype=tmnxLldpRemPortIdSubtype, tmnxLldpRemChassisIdSubtype=tmnxLldpRemChassisIdSubtype, tmnxLldpRemSysGroup=tmnxLldpRemSysGroup, tmnxLldpPortCfgNotifyEnable=tmnxLldpPortCfgNotifyEnable, tmnxLldpRemManAddrOID=tmnxLldpRemManAddrOID, tmnxLldpLocPortIdSubtype=tmnxLldpLocPortIdSubtype, PYSNMP_MODULE_ID=tmnxLldpMIBModule, tmnxLldpStatsRxPortFrameDiscard=tmnxLldpStatsRxPortFrameDiscard, tmnxLldpStatsRxPortAgeouts=tmnxLldpStatsRxPortAgeouts, tmnxLldpCompliances=tmnxLldpCompliances, tmnxLldpStatsRxPortTLVDiscard=tmnxLldpStatsRxPortTLVDiscard, tmnxLldpMIBModule=tmnxLldpMIBModule, TmnxLldpManAddressIndex=TmnxLldpManAddressIndex, tmnxLldpLocPortTable=tmnxLldpLocPortTable, tmnxLldpConfigManAddrPortsTable=tmnxLldpConfigManAddrPortsTable, tmnxLldpConfiguration=tmnxLldpConfiguration, tmnxLldpRemPortId=tmnxLldpRemPortId, tmnxLldpRemTable=tmnxLldpRemTable, tmnxLldpPortCfgManAddress=tmnxLldpPortCfgManAddress, tmnxLldpRemLocalDestMACAddress=tmnxLldpRemLocalDestMACAddress, tmnxLldpObjects=tmnxLldpObjects, tmnxLldpLocPortId=tmnxLldpLocPortId, tmnxLldpPortCfgAdminStatus=tmnxLldpPortCfgAdminStatus, tmnxLldpRemTimeMark=tmnxLldpRemTimeMark, tmnxLldpRemSysCapSupported=tmnxLldpRemSysCapSupported, tmnxLldpConfigGroup=tmnxLldpConfigGroup, tmnxLldpRemManAddrTable=tmnxLldpRemManAddrTable, tmnxLldpRemEntry=tmnxLldpRemEntry, tmnxLldpAddressTableIndex=tmnxLldpAddressTableIndex, tmnxLldpRemChassisId=tmnxLldpRemChassisId, tmnxLldpNotifications=tmnxLldpNotifications, tmnxLldpRemManAddrIfSubtype=tmnxLldpRemManAddrIfSubtype, tmnxLldpCompliance=tmnxLldpCompliance, tmnxLldpRemIndex=tmnxLldpRemIndex, tmnxLldpMessageFastTx=tmnxLldpMessageFastTx, tmnxLldpStatsTxLLDPDULengthErrs=tmnxLldpStatsTxLLDPDULengthErrs, TmnxLldpDestAddressTableIndex=TmnxLldpDestAddressTableIndex, tmnxLldpRemManAddrEntry=tmnxLldpRemManAddrEntry, tmnxLldpAdminStatus=tmnxLldpAdminStatus, tmnxLldpStatistics=tmnxLldpStatistics, tmnxLldpRemManAddrGroup=tmnxLldpRemManAddrGroup, tmnxLldpPortConfigEntry=tmnxLldpPortConfigEntry, tmnxLldpStatsTxGroup=tmnxLldpStatsTxGroup, tmnxLldpMessageFastTxInit=tmnxLldpMessageFastTxInit, tmnxLldpConfigManAddrPortsEntry=tmnxLldpConfigManAddrPortsEntry, tmnxLldpRemSysDesc=tmnxLldpRemSysDesc, tmnxLldpStatsRxPortTLVUnknown=tmnxLldpStatsRxPortTLVUnknown, tmnxLldpRemPortDesc=tmnxLldpRemPortDesc, tmnxLldpConformance=tmnxLldpConformance, tmnxLldpLocPortDesc=tmnxLldpLocPortDesc, tmnxLldpStatsRxGroup=tmnxLldpStatsRxGroup, tmnxLldpStatsTxPortFrames=tmnxLldpStatsTxPortFrames)
