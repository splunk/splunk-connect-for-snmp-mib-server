#
# PySNMP MIB module CRMCONNECTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CRMCONNECTION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:12:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
atmVclVci, atmVclVpi, atmVplVpi, atmTrafficDescrParamIndex = mibBuilder.importSymbols("ATM-MIB", "atmVclVci", "atmVclVpi", "atmVplVpi", "atmTrafficDescrParamIndex")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, iso, ObjectIdentity, Counter32, Integer32, Bits, TimeTicks, Gauge32, Unsigned32, MibIdentifier, Counter64, NotificationType, ModuleIdentity, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "ObjectIdentity", "Counter32", "Integer32", "Bits", "TimeTicks", "Gauge32", "Unsigned32", "MibIdentifier", "Counter64", "NotificationType", "ModuleIdentity", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, TextualConvention, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TimeStamp", "DisplayString")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
ntt = MibIdentifier((1, 3, 6, 1, 4, 1, 210))
mibDoc = MibIdentifier((1, 3, 6, 1, 4, 1, 210, 2))
ba3000 = MibIdentifier((1, 3, 6, 1, 4, 1, 210, 2, 8))
crmCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 210, 2, 8, 1))
crmConnection = MibIdentifier((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1))
crmTrPrmTable = MibTable((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1), )
if mibBuilder.loadTexts: crmTrPrmTable.setStatus('mandatory')
crmTrPrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1), ).setIndexNames((0, "CRMCONNECTION-MIB", "crmTrPrmIndex"))
if mibBuilder.loadTexts: crmTrPrmEntry.setStatus('mandatory')
crmTrPrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)))
if mibBuilder.loadTexts: crmTrPrmIndex.setStatus('mandatory')
crmTrPrmCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 2), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmCategory.setStatus('mandatory')
crmTrPrmCDVT = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(720)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmCDVT.setStatus('mandatory')
crmTrPrmCellDelayPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 4), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmCellDelayPriority.setStatus('mandatory')
crmTrPrmCellLossPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 5), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmCellLossPriority.setStatus('mandatory')
crmTrPrmUPCInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 6), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmUPCInfo1.setStatus('mandatory')
crmTrPrmUPCInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmUPCInfo2.setStatus('mandatory')
crmTrPrmUPCInfo3 = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmUPCInfo3.setStatus('mandatory')
crmTrPrmUPCInfo4 = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmUPCInfo4.setStatus('mandatory')
crmTrPrmShapingInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 10), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmShapingInfo1.setStatus('mandatory')
crmTrPrmShapingInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmShapingInfo2.setStatus('mandatory')
crmTrPrmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmRowStatus.setStatus('mandatory')
crmTrPrmEpdPpd = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("epdppdoff", 1), ("ppdon", 2), ("epdppdon", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmEpdPpd.setStatus('mandatory')
crmTrPrmHeavyCongestionTh = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 14), Integer32().clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmHeavyCongestionTh.setStatus('mandatory')
crmTrPrmLightCongestionTh = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 15), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmLightCongestionTh.setStatus('mandatory')
crmTrPrmEFCIMarking = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmEFCIMarking.setStatus('mandatory')
crmTrPrmNICIMarking = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmNICIMarking.setStatus('mandatory')
crmTrPrmERMarking = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmERMarking.setStatus('mandatory')
crmTrPrmBECNCellSending = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmBECNCellSending.setStatus('mandatory')
crmTrPrmVSVD = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmVSVD.setStatus('mandatory')
crmTrPrmRDF = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 21), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmRDF.setStatus('mandatory')
crmTrPrmRIF = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 22), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmRIF.setStatus('mandatory')
crmTrPrmCDF = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 1, 1, 23), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmTrPrmCDF.setStatus('mandatory')
crmVplXtndTable = MibTable((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 2), )
if mibBuilder.loadTexts: crmVplXtndTable.setStatus('mandatory')
crmVplXtndEntry = MibTableRow((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: crmVplXtndEntry.setStatus('mandatory')
crmVplGenCastType = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 2, 1, 1), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmVplGenCastType.setStatus('mandatory')
crmVplLogicalPortDef = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 2, 1, 2), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmVplLogicalPortDef.setStatus('mandatory')
crmVplLogicalPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 2, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crmVplLogicalPortIndex.setStatus('mandatory')
crmVplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmVplRowStatus.setStatus('mandatory')
crmVclXtndTable = MibTable((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 3), )
if mibBuilder.loadTexts: crmVclXtndTable.setStatus('mandatory')
crmVclXtndEntry = MibTableRow((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"))
if mibBuilder.loadTexts: crmVclXtndEntry.setStatus('mandatory')
crmVclGenConType = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 3, 1, 1), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmVclGenConType.setStatus('mandatory')
crmVclGenCastType = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 3, 1, 2), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmVclGenCastType.setStatus('mandatory')
crmVclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 210, 2, 8, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crmVclRowStatus.setStatus('mandatory')
mibBuilder.exportSymbols("CRMCONNECTION-MIB", dod=dod, crmTrPrmEpdPpd=crmTrPrmEpdPpd, crmVplXtndEntry=crmVplXtndEntry, crmVplLogicalPortDef=crmVplLogicalPortDef, crmTrPrmEntry=crmTrPrmEntry, crmVclGenCastType=crmVclGenCastType, crmTrPrmBECNCellSending=crmTrPrmBECNCellSending, crmTrPrmCDVT=crmTrPrmCDVT, crmTrPrmRIF=crmTrPrmRIF, crmVclXtndTable=crmVclXtndTable, crmTrPrmCDF=crmTrPrmCDF, crmVclGenConType=crmVclGenConType, crmTrPrmCategory=crmTrPrmCategory, crmTrPrmVSVD=crmTrPrmVSVD, crmTrPrmShapingInfo1=crmTrPrmShapingInfo1, crmTrPrmEFCIMarking=crmTrPrmEFCIMarking, crmVplLogicalPortIndex=crmVplLogicalPortIndex, crmTrPrmUPCInfo3=crmTrPrmUPCInfo3, ntt=ntt, crmTrPrmLightCongestionTh=crmTrPrmLightCongestionTh, crmTrPrmCellLossPriority=crmTrPrmCellLossPriority, private=private, crmVclRowStatus=crmVclRowStatus, crmTrPrmUPCInfo2=crmTrPrmUPCInfo2, crmVplGenCastType=crmVplGenCastType, crmTrPrmShapingInfo2=crmTrPrmShapingInfo2, crmCommon=crmCommon, crmVclXtndEntry=crmVclXtndEntry, crmTrPrmUPCInfo4=crmTrPrmUPCInfo4, enterprises=enterprises, crmTrPrmRowStatus=crmTrPrmRowStatus, crmTrPrmIndex=crmTrPrmIndex, org=org, crmTrPrmUPCInfo1=crmTrPrmUPCInfo1, crmTrPrmHeavyCongestionTh=crmTrPrmHeavyCongestionTh, crmTrPrmCellDelayPriority=crmTrPrmCellDelayPriority, crmConnection=crmConnection, crmTrPrmRDF=crmTrPrmRDF, crmTrPrmERMarking=crmTrPrmERMarking, crmTrPrmNICIMarking=crmTrPrmNICIMarking, crmVplXtndTable=crmVplXtndTable, crmTrPrmTable=crmTrPrmTable, crmVplRowStatus=crmVplRowStatus, ba3000=ba3000, mibDoc=mibDoc, internet=internet)
