#
# PySNMP MIB module A3COM-HUAWEI-NQA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-NQA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:51:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
huaweiDatacomm, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "huaweiDatacomm")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
pingCtlOwnerIndex, pingCtlEntry, pingCtlTargetAddressType, pingCtlDescr, pingCtlType, pingCtlTargetAddress, pingCtlTestName = mibBuilder.importSymbols("DISMAN-PING-MIB", "pingCtlOwnerIndex", "pingCtlEntry", "pingCtlTargetAddressType", "pingCtlDescr", "pingCtlType", "pingCtlTargetAddress", "pingCtlTestName")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Integer32, Counter32, ObjectIdentity, Gauge32, iso, ModuleIdentity, NotificationType, TimeTicks, Counter64, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "Counter32", "ObjectIdentity", "Gauge32", "iso", "ModuleIdentity", "NotificationType", "TimeTicks", "Counter64", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits")
TextualConvention, RowStatus, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "DateAndTime")
hwNqa = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28))
if mibBuilder.loadTexts: hwNqa.setLastUpdated('200608140000Z')
if mibBuilder.loadTexts: hwNqa.setOrganization('Huawei Technologies Co., Ltd.')
hwNqaObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1))
hwNqaImplementationTypeDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 2))
hwNqaUdpEcho = ObjectIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 2, 1))
if mibBuilder.loadTexts: hwNqaUdpEcho.setStatus('current')
hwNqaTcpconnect = ObjectIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 2, 2))
if mibBuilder.loadTexts: hwNqaTcpconnect.setStatus('current')
hwNqajitter = ObjectIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 2, 3))
if mibBuilder.loadTexts: hwNqajitter.setStatus('current')
hwNqaHttp = ObjectIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 2, 4))
if mibBuilder.loadTexts: hwNqaHttp.setStatus('current')
hwNqadlsw = ObjectIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 2, 5))
if mibBuilder.loadTexts: hwNqadlsw.setStatus('current')
hwNqadhcp = ObjectIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 2, 6))
if mibBuilder.loadTexts: hwNqadhcp.setStatus('current')
hwNqaftp = ObjectIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 2, 7))
if mibBuilder.loadTexts: hwNqaftp.setStatus('current')
hwNqaMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaMIBVersion.setStatus('current')
hwNqaCtlTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2), )
if mibBuilder.loadTexts: hwNqaCtlTable.setStatus('current')
hwNqaCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1), )
pingCtlEntry.registerAugmentions(("A3COM-HUAWEI-NQA-MIB", "hwNqaCtlEntry"))
hwNqaCtlEntry.setIndexNames(*pingCtlEntry.getIndexNames())
if mibBuilder.loadTexts: hwNqaCtlEntry.setStatus('current')
hwNqaCtlTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlTargetPort.setStatus('current')
hwNqaCtlSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlSourcePort.setStatus('current')
hwNqaCtlTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 3), Integer32().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlTTL.setStatus('current')
hwNqaCtlJitterAdminInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlJitterAdminInterval.setStatus('current')
hwNqaCtlJitterAdminNumPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 5), Integer32().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlJitterAdminNumPackets.setStatus('current')
hwNqaCtlHttpOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("get", 1), ("post", 2))).clone('get')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlHttpOperationType.setStatus('current')
hwNqaCtlHttpOperationString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlHttpOperationString.setStatus('current')
hwNqaCtlFtpOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("get", 1), ("put", 2))).clone('get')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlFtpOperationType.setStatus('current')
hwNqaCtlFtpUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlFtpUsername.setStatus('current')
hwNqaCtlFtpPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlFtpPassword.setStatus('current')
hwNqaCtlFtpOperationString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlFtpOperationString.setStatus('current')
hwNqaCtlVPNInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlVPNInstance.setStatus('current')
hwNqaCtlHistoryKeptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(120)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlHistoryKeptTime.setStatus('current')
hwNqaCtlHistoryEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlHistoryEnable.setStatus('current')
hwNqaCtlICPIFAdvFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlICPIFAdvFactor.setStatus('current')
hwNqaCtlCodecType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notDefined", 1), ("g711Alaw", 2), ("g711Ulaw", 3), ("g729A", 4), ("icmpTimestamp", 5))).clone('notDefined')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlCodecType.setStatus('current')
hwNqaResultsTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3), )
if mibBuilder.loadTexts: hwNqaResultsTable.setStatus('current')
hwNqaResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"))
if mibBuilder.loadTexts: hwNqaResultsEntry.setStatus('current')
hwNqaResultsRttNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsRttNumDisconnects.setStatus('current')
hwNqaResultsRttTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsRttTimeouts.setStatus('current')
hwNqaResultsRttBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsRttBusies.setStatus('current')
hwNqaResultsRttNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsRttNoConnections.setStatus('current')
hwNqaResultsRttDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsRttDrops.setStatus('current')
hwNqaResultsRttSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsRttSequenceErrors.setStatus('current')
hwNqaResultsRttStatsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsRttStatsErrors.setStatus('current')
hwNqaResultsMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsMaxDelaySD.setStatus('current')
hwNqaResultsMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsMaxDelayDS.setStatus('current')
hwNqaResultsLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 10), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsLostPacketRatio.setStatus('current')
hwNqaResultsPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsPacketLateArrival.setStatus('current')
hwNqaResultsRttSum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsRttSum.setStatus('current')
hwNqaResultsNumOfDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsNumOfDelaySD.setStatus('current')
hwNqaResultsMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsMinDelaySD.setStatus('current')
hwNqaResultsSumDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsSumDelaySD.setStatus('current')
hwNqaResultsSum2DelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsSum2DelaySD.setStatus('current')
hwNqaResultsNumOfDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsNumOfDelayDS.setStatus('current')
hwNqaResultsMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsMinDelayDS.setStatus('current')
hwNqaResultsSumDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsSumDelayDS.setStatus('current')
hwNqaResultsSum2DelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 3, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaResultsSum2DelayDS.setStatus('current')
hwNqaJitterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4), )
if mibBuilder.loadTexts: hwNqaJitterStatsTable.setStatus('current')
hwNqaJitterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"))
if mibBuilder.loadTexts: hwNqaJitterStatsEntry.setStatus('current')
hwNqaJitterStatsNumOfRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsNumOfRTT.setStatus('current')
hwNqaJitterStatsMinOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsMinOfPositivesSD.setStatus('current')
hwNqaJitterStatsMaxOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsMaxOfPositivesSD.setStatus('current')
hwNqaJitterStatsNumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsNumOfPositivesSD.setStatus('current')
hwNqaJitterStatsSumOfPositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsSumOfPositivesSD.setStatus('current')
hwNqaJitterStatsSum2PositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsSum2PositivesSD.setStatus('current')
hwNqaJitterStatsMinOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsMinOfNegativesSD.setStatus('current')
hwNqaJitterStatsMaxOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsMaxOfNegativesSD.setStatus('current')
hwNqaJitterStatsNumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsNumOfNegativesSD.setStatus('current')
hwNqaJitterStatsSumOfNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsSumOfNegativesSD.setStatus('current')
hwNqaJitterStatsSum2NegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsSum2NegativesSD.setStatus('current')
hwNqaJitterStatsMinOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsMinOfPositivesDS.setStatus('current')
hwNqaJitterStatsMaxOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsMaxOfPositivesDS.setStatus('current')
hwNqaJitterStatsNumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsNumOfPositivesDS.setStatus('current')
hwNqaJitterStatsSumOfPositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsSumOfPositivesDS.setStatus('current')
hwNqaJitterStatsSum2PositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsSum2PositivesDS.setStatus('current')
hwNqaJitterStatsMinOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsMinOfNegativesDS.setStatus('current')
hwNqaJitterStatsMaxOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsMaxOfNegativesDS.setStatus('current')
hwNqaJitterStatsNumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsNumOfNegativesDS.setStatus('current')
hwNqaJitterStatsSumOfNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsSumOfNegativesDS.setStatus('current')
hwNqaJitterStatsSum2NegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsSum2NegativesDS.setStatus('current')
hwNqaJitterStatsPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsPacketLossSD.setStatus('current')
hwNqaJitterStatsPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsPacketLossDS.setStatus('current')
hwNqaJitterStatsAvePositivesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsAvePositivesSD.setStatus('current')
hwNqaJitterStatsAveNegativesSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsAveNegativesSD.setStatus('current')
hwNqaJitterStatsAvePositivesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsAvePositivesDS.setStatus('current')
hwNqaJitterStatsAveNegativesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsAveNegativesDS.setStatus('current')
hwNqaJitterStatsPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 28), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsPktLossUnknown.setStatus('current')
hwNqaJitterStatsOperOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsOperOfICPIF.setStatus('current')
hwNqaJitterStatsOperOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 4, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaJitterStatsOperOfMOS.setStatus('current')
hwNqaAgentEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNqaAgentEnable.setStatus('current')
hwNqaTcpServerTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 6), )
if mibBuilder.loadTexts: hwNqaTcpServerTable.setStatus('current')
hwNqaTcpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-NQA-MIB", "hwNqaTcpServerIpAddress"), (0, "A3COM-HUAWEI-NQA-MIB", "hwNqaTcpServerPort"))
if mibBuilder.loadTexts: hwNqaTcpServerEntry.setStatus('current')
hwNqaTcpServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 6, 1, 1), InetAddress().clone(hexValue=""))
if mibBuilder.loadTexts: hwNqaTcpServerIpAddress.setStatus('current')
hwNqaTcpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)))
if mibBuilder.loadTexts: hwNqaTcpServerPort.setStatus('current')
hwNqaTcpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaTcpServerRowStatus.setStatus('current')
hwNqaUdpServerTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 7), )
if mibBuilder.loadTexts: hwNqaUdpServerTable.setStatus('current')
hwNqaUdpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-NQA-MIB", "hwNqaUdpServerIpAddress"), (0, "A3COM-HUAWEI-NQA-MIB", "hwNqaUdpServerPort"))
if mibBuilder.loadTexts: hwNqaUdpServerEntry.setStatus('current')
hwNqaUdpServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 7, 1, 1), InetAddress().clone(hexValue=""))
if mibBuilder.loadTexts: hwNqaUdpServerIpAddress.setStatus('current')
hwNqaUdpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)))
if mibBuilder.loadTexts: hwNqaUdpServerPort.setStatus('current')
hwNqaUdpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaUdpServerRowStatus.setStatus('current')
hwNqaServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNqaServerEnable.setStatus('current')
hwNqaStatsMaxGroupNumber = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatsMaxGroupNumber.setStatus('current')
hwNqaStatisticsCtlTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 10), )
if mibBuilder.loadTexts: hwNqaStatisticsCtlTable.setStatus('current')
hwNqaStatisticsCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 10, 1), )
pingCtlEntry.registerAugmentions(("A3COM-HUAWEI-NQA-MIB", "hwNqaStatisticsCtlEntry"))
hwNqaStatisticsCtlEntry.setIndexNames(*pingCtlEntry.getIndexNames())
if mibBuilder.loadTexts: hwNqaStatisticsCtlEntry.setStatus('current')
hwNqaCtlStatisticsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 10, 1, 1), Unsigned32()).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlStatisticsInterval.setStatus('current')
hwNqaCtlStatisticsGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 10, 1, 2), Unsigned32().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlStatisticsGroupNumber.setStatus('current')
hwNqaCtlStatisticsKeptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(120)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlStatisticsKeptTime.setStatus('current')
hwNqaCtlBeginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 10, 1, 4), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlBeginTime.setStatus('current')
hwNqaCtlLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 10, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaCtlLifeTime.setStatus('current')
hwNqaStatisticsResultsTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11), )
if mibBuilder.loadTexts: hwNqaStatisticsResultsTable.setStatus('current')
hwNqaStatisticsResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"), (0, "A3COM-HUAWEI-NQA-MIB", "hwNqaStatResIndex"))
if mibBuilder.loadTexts: hwNqaStatisticsResultsEntry.setStatus('current')
hwNqaStatResIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwNqaStatResIndex.setStatus('current')
hwNqaStatResIpTargetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 2), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResIpTargetAddressType.setStatus('current')
hwNqaStatResIpTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 3), InetAddress().clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResIpTargetAddress.setStatus('current')
hwNqaStatResMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 4), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResMinRtt.setStatus('current')
hwNqaStatResMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 5), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResMaxRtt.setStatus('current')
hwNqaStatResAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 6), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResAverageRtt.setStatus('current')
hwNqaStatResProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResProbeResponses.setStatus('current')
hwNqaStatResSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 8), Counter32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResSentProbes.setStatus('current')
hwNqaStatResRttSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 9), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResRttSumOfSquares.setStatus('current')
hwNqaStatResStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResStartTime.setStatus('current')
hwNqaStatResInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 11), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResInterval.setStatus('current')
hwNqaStatResRttNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResRttNumDisconnects.setStatus('current')
hwNqaStatResRttTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResRttTimeouts.setStatus('current')
hwNqaStatResRttBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResRttBusies.setStatus('current')
hwNqaStatResRttNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResRttNoConnections.setStatus('current')
hwNqaStatResRttDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResRttDrops.setStatus('current')
hwNqaStatResRttSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResRttSequenceErrors.setStatus('current')
hwNqaStatResRttErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResRttErrors.setStatus('current')
hwNqaStatResLostPacketRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResLostPacketRatio.setStatus('current')
hwNqaStatResPacketLateArrival = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResPacketLateArrival.setStatus('current')
hwNqaStatResRttSum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResRttSum.setStatus('current')
hwNqaStatResNumOfDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResNumOfDelaySD.setStatus('current')
hwNqaStatResMinDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResMinDelaySD.setStatus('current')
hwNqaStatResMaxDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResMaxDelaySD.setStatus('current')
hwNqaStatResSumDelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResSumDelaySD.setStatus('current')
hwNqaStatResSum2DelaySD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResSum2DelaySD.setStatus('current')
hwNqaStatResNumOfDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResNumOfDelayDS.setStatus('current')
hwNqaStatResMinDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResMinDelayDS.setStatus('current')
hwNqaStatResMaxDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResMaxDelayDS.setStatus('current')
hwNqaStatResSumDelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResSumDelayDS.setStatus('current')
hwNqaStatResSum2DelayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 11, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatResSum2DelayDS.setStatus('current')
hwNqaGroupStatsJitterTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12), )
if mibBuilder.loadTexts: hwNqaGroupStatsJitterTable.setStatus('current')
hwNqaGroupStatsJitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1), ).setIndexNames((0, "DISMAN-PING-MIB", "pingCtlOwnerIndex"), (0, "DISMAN-PING-MIB", "pingCtlTestName"), (0, "A3COM-HUAWEI-NQA-MIB", "hwNqaStatJitterIndex"))
if mibBuilder.loadTexts: hwNqaGroupStatsJitterEntry.setStatus('current')
hwNqaStatJitterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwNqaStatJitterIndex.setStatus('current')
hwNqaStatJitterMinOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 2), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMinOfPosSD.setStatus('current')
hwNqaStatJitterMaxOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 3), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMaxOfPosSD.setStatus('current')
hwNqaStatJitterNumOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterNumOfPosSD.setStatus('current')
hwNqaStatJitterSumOfPosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 5), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterSumOfPosSD.setStatus('current')
hwNqaStatJitterSumOfSquarePosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 6), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterSumOfSquarePosSD.setStatus('current')
hwNqaStatJitterMinOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 7), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMinOfNegSD.setStatus('current')
hwNqaStatJitterMaxOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 8), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMaxOfNegSD.setStatus('current')
hwNqaStatJitterNumOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterNumOfNegSD.setStatus('current')
hwNqaStatJitterSumOfNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 10), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterSumOfNegSD.setStatus('current')
hwNqaStatJitterSumOfSquareNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 11), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterSumOfSquareNegSD.setStatus('current')
hwNqaStatJitterMinOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 12), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMinOfPosDS.setStatus('current')
hwNqaStatJitterMaxOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 13), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMaxOfPosDS.setStatus('current')
hwNqaStatJitterNumOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterNumOfPosDS.setStatus('current')
hwNqaStatJitterSumOfPosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 15), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterSumOfPosDS.setStatus('current')
hwNqaStatJitterSumOfSquarePosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 16), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterSumOfSquarePosDS.setStatus('current')
hwNqaStatJitterMinOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 17), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMinOfNegDS.setStatus('current')
hwNqaStatJitterMaxOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 18), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMaxOfNegDS.setStatus('current')
hwNqaStatJitterNumOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterNumOfNegDS.setStatus('current')
hwNqaStatJitterSumOfNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 20), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterSumOfNegDS.setStatus('current')
hwNqaStatJitterSumOfSquareNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 21), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterSumOfSquareNegDS.setStatus('current')
hwNqaStatJitterPacketLossSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterPacketLossSD.setStatus('current')
hwNqaStatJitterPacketLossDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterPacketLossDS.setStatus('current')
hwNqaStatJitterAvePosSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 24), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterAvePosSD.setStatus('current')
hwNqaStatJitterAveNegSD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 25), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterAveNegSD.setStatus('current')
hwNqaStatJitterAvePosDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 26), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterAvePosDS.setStatus('current')
hwNqaStatJitterAveNegDS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 27), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterAveNegDS.setStatus('current')
hwNqaStatJitterPktLossUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterPktLossUnknown.setStatus('current')
hwNqaStatJitterMaxOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMaxOfICPIF.setStatus('current')
hwNqaStatJitterMinOfICPIF = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMinOfICPIF.setStatus('current')
hwNqaStatJitterMaxOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMaxOfMOS.setStatus('current')
hwNqaStatJitterMinOfMOS = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 12, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatJitterMinOfMOS.setStatus('current')
hwNqaReactionTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13), )
if mibBuilder.loadTexts: hwNqaReactionTable.setStatus('current')
hwNqaReactionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1), ).setIndexNames((0, "A3COM-HUAWEI-NQA-MIB", "hwNqaReactOwnerIndex"), (0, "A3COM-HUAWEI-NQA-MIB", "hwNqaReactTestName"), (0, "A3COM-HUAWEI-NQA-MIB", "hwNqaReactItemIndex"))
if mibBuilder.loadTexts: hwNqaReactionEntry.setStatus('current')
hwNqaReactOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwNqaReactOwnerIndex.setStatus('current')
hwNqaReactTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwNqaReactTestName.setStatus('current')
hwNqaReactItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwNqaReactItemIndex.setStatus('current')
hwNqaReactCheckedElement = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("probetime", 1), ("probefailure", 2), ("jitterrtt", 3), ("jitterpacketloss", 4), ("jittersd", 5), ("jitterds", 6), ("icpif", 7), ("mos", 8), ("jitterOwdSD", 9), ("jitterOwdDS", 10)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaReactCheckedElement.setStatus('current')
hwNqaReactThresholdUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaReactThresholdUpperLimit.setStatus('current')
hwNqaReactThresholdLowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaReactThresholdLowerLimit.setStatus('current')
hwNqaReactThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("invalid", 0), ("average", 1), ("consecutive", 2), ("accumulative", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaReactThresholdType.setStatus('current')
hwNqaReactThresholdConsecNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaReactThresholdConsecNum.setStatus('current')
hwNqaReactThresholdAccumNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaReactThresholdAccumNum.setStatus('current')
hwNqaReactActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("trapOnly", 1), ("triggerOnly", 2), ("trapAndTrigger", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaReactActionType.setStatus('current')
hwNqaReactCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("overThreshold", 2), ("belowThreshold", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaReactCurrentStatus.setStatus('current')
hwNqaReactRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNqaReactRowStatus.setStatus('current')
hwNqaReactCheckedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaReactCheckedNum.setStatus('current')
hwNqaReactThresholdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 13, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaReactThresholdNum.setStatus('current')
hwNqaStatisticsReactionTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 14), )
if mibBuilder.loadTexts: hwNqaStatisticsReactionTable.setStatus('current')
hwNqaStatisticsReactionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 14, 1), ).setIndexNames((0, "A3COM-HUAWEI-NQA-MIB", "hwNqaStatReactOwnerIndex"), (0, "A3COM-HUAWEI-NQA-MIB", "hwNqaStatReactTestName"), (0, "A3COM-HUAWEI-NQA-MIB", "hwNqaStatReactIndex"), (0, "A3COM-HUAWEI-NQA-MIB", "hwNqaStatReactItemIndex"))
if mibBuilder.loadTexts: hwNqaStatisticsReactionEntry.setStatus('current')
hwNqaStatReactOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 14, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwNqaStatReactOwnerIndex.setStatus('current')
hwNqaStatReactTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 14, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwNqaStatReactTestName.setStatus('current')
hwNqaStatReactIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 14, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwNqaStatReactIndex.setStatus('current')
hwNqaStatReactItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 14, 1, 4), Unsigned32())
if mibBuilder.loadTexts: hwNqaStatReactItemIndex.setStatus('current')
hwNqaStatReactCheckedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatReactCheckedNum.setStatus('current')
hwNqaStatReactThresholdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 1, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNqaStatReactThresholdNum.setStatus('current')
hwNqaNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 3))
hwNqaProbeTimeOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 3, 1)).setObjects(("A3COM-HUAWEI-NQA-MIB", "hwNqaReactOwnerIndex"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactTestName"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactThresholdType"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hwNqaProbeTimeOverThreshold.setStatus('current')
hwNqaJitterRTTOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 3, 2)).setObjects(("A3COM-HUAWEI-NQA-MIB", "hwNqaReactOwnerIndex"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactTestName"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactThresholdType"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hwNqaJitterRTTOverThreshold.setStatus('current')
hwNqaProbeFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 3, 3)).setObjects(("A3COM-HUAWEI-NQA-MIB", "hwNqaReactOwnerIndex"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactTestName"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactThresholdType"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hwNqaProbeFailure.setStatus('current')
hwNqaJitterPacketLoss = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 3, 4)).setObjects(("A3COM-HUAWEI-NQA-MIB", "hwNqaReactOwnerIndex"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactTestName"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactThresholdType"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hwNqaJitterPacketLoss.setStatus('current')
hwNqaJitterSDOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 3, 5)).setObjects(("A3COM-HUAWEI-NQA-MIB", "hwNqaReactOwnerIndex"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactTestName"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactThresholdType"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hwNqaJitterSDOverThreshold.setStatus('current')
hwNqaJitterDSOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 3, 6)).setObjects(("A3COM-HUAWEI-NQA-MIB", "hwNqaReactOwnerIndex"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactTestName"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactThresholdType"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hwNqaJitterDSOverThreshold.setStatus('current')
hwNqaICPIFOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 3, 7)).setObjects(("A3COM-HUAWEI-NQA-MIB", "hwNqaReactOwnerIndex"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactTestName"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hwNqaICPIFOverThreshold.setStatus('current')
hwNqaMOSOverThreshold = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 25, 28, 3, 8)).setObjects(("A3COM-HUAWEI-NQA-MIB", "hwNqaReactOwnerIndex"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactTestName"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactItemIndex"), ("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingCtlType"), ("DISMAN-PING-MIB", "pingCtlDescr"), ("A3COM-HUAWEI-NQA-MIB", "hwNqaReactCurrentStatus"))
if mibBuilder.loadTexts: hwNqaMOSOverThreshold.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-NQA-MIB", hwNqaJitterStatsSum2NegativesDS=hwNqaJitterStatsSum2NegativesDS, hwNqaServerEnable=hwNqaServerEnable, hwNqaResultsRttDrops=hwNqaResultsRttDrops, hwNqaStatsMaxGroupNumber=hwNqaStatsMaxGroupNumber, hwNqaUdpServerTable=hwNqaUdpServerTable, hwNqaStatJitterNumOfPosDS=hwNqaStatJitterNumOfPosDS, hwNqaCtlHistoryKeptTime=hwNqaCtlHistoryKeptTime, hwNqaStatisticsReactionTable=hwNqaStatisticsReactionTable, hwNqaJitterSDOverThreshold=hwNqaJitterSDOverThreshold, hwNqaStatResSum2DelayDS=hwNqaStatResSum2DelayDS, hwNqaJitterStatsSumOfPositivesSD=hwNqaJitterStatsSumOfPositivesSD, hwNqaResultsRttBusies=hwNqaResultsRttBusies, hwNqaStatJitterMinOfPosDS=hwNqaStatJitterMinOfPosDS, hwNqaStatResMinDelayDS=hwNqaStatResMinDelayDS, hwNqaCtlEntry=hwNqaCtlEntry, hwNqaJitterStatsAvePositivesSD=hwNqaJitterStatsAvePositivesSD, hwNqaStatJitterMinOfNegDS=hwNqaStatJitterMinOfNegDS, hwNqaReactOwnerIndex=hwNqaReactOwnerIndex, hwNqaCtlStatisticsInterval=hwNqaCtlStatisticsInterval, hwNqaStatReactThresholdNum=hwNqaStatReactThresholdNum, hwNqaJitterStatsMinOfNegativesDS=hwNqaJitterStatsMinOfNegativesDS, hwNqaCtlSourcePort=hwNqaCtlSourcePort, hwNqaCtlHistoryEnable=hwNqaCtlHistoryEnable, hwNqaJitterDSOverThreshold=hwNqaJitterDSOverThreshold, hwNqaStatResIndex=hwNqaStatResIndex, hwNqaJitterStatsSumOfNegativesSD=hwNqaJitterStatsSumOfNegativesSD, hwNqaStatJitterAvePosDS=hwNqaStatJitterAvePosDS, hwNqaStatJitterAveNegSD=hwNqaStatJitterAveNegSD, hwNqaStatResMaxDelaySD=hwNqaStatResMaxDelaySD, hwNqaStatResInterval=hwNqaStatResInterval, hwNqaCtlHttpOperationType=hwNqaCtlHttpOperationType, hwNqaJitterStatsNumOfRTT=hwNqaJitterStatsNumOfRTT, hwNqaTcpServerPort=hwNqaTcpServerPort, hwNqaCtlFtpOperationString=hwNqaCtlFtpOperationString, hwNqaResultsSumDelaySD=hwNqaResultsSumDelaySD, hwNqaJitterStatsPacketLossDS=hwNqaJitterStatsPacketLossDS, hwNqaJitterStatsSumOfNegativesDS=hwNqaJitterStatsSumOfNegativesDS, hwNqaStatJitterSumOfSquarePosSD=hwNqaStatJitterSumOfSquarePosSD, hwNqaCtlTargetPort=hwNqaCtlTargetPort, hwNqaStatJitterAveNegDS=hwNqaStatJitterAveNegDS, hwNqaJitterStatsMinOfPositivesDS=hwNqaJitterStatsMinOfPositivesDS, hwNqaStatJitterNumOfNegDS=hwNqaStatJitterNumOfNegDS, hwNqaStatResSum2DelaySD=hwNqaStatResSum2DelaySD, hwNqaStatResRttSequenceErrors=hwNqaStatResRttSequenceErrors, hwNqaAgentEnable=hwNqaAgentEnable, hwNqaStatisticsReactionEntry=hwNqaStatisticsReactionEntry, hwNqaStatJitterSumOfSquareNegDS=hwNqaStatJitterSumOfSquareNegDS, hwNqaStatReactIndex=hwNqaStatReactIndex, hwNqaProbeFailure=hwNqaProbeFailure, hwNqaStatReactCheckedNum=hwNqaStatReactCheckedNum, hwNqaJitterStatsOperOfICPIF=hwNqaJitterStatsOperOfICPIF, hwNqaResultsSum2DelayDS=hwNqaResultsSum2DelayDS, hwNqaJitterStatsSum2PositivesDS=hwNqaJitterStatsSum2PositivesDS, hwNqaStatResRttDrops=hwNqaStatResRttDrops, hwNqaJitterStatsPacketLossSD=hwNqaJitterStatsPacketLossSD, hwNqaReactItemIndex=hwNqaReactItemIndex, hwNqaJitterStatsAveNegativesSD=hwNqaJitterStatsAveNegativesSD, hwNqaStatJitterAvePosSD=hwNqaStatJitterAvePosSD, hwNqaStatJitterMaxOfNegDS=hwNqaStatJitterMaxOfNegDS, hwNqaStatJitterSumOfSquareNegSD=hwNqaStatJitterSumOfSquareNegSD, hwNqaStatisticsCtlEntry=hwNqaStatisticsCtlEntry, hwNqaStatResIpTargetAddressType=hwNqaStatResIpTargetAddressType, hwNqaCtlVPNInstance=hwNqaCtlVPNInstance, hwNqaCtlTable=hwNqaCtlTable, hwNqaStatisticsResultsTable=hwNqaStatisticsResultsTable, hwNqaCtlBeginTime=hwNqaCtlBeginTime, hwNqaResultsRttTimeouts=hwNqaResultsRttTimeouts, hwNqaJitterStatsNumOfPositivesSD=hwNqaJitterStatsNumOfPositivesSD, hwNqaTcpServerIpAddress=hwNqaTcpServerIpAddress, hwNqaStatResMaxRtt=hwNqaStatResMaxRtt, hwNqaResultsTable=hwNqaResultsTable, hwNqaResultsMinDelayDS=hwNqaResultsMinDelayDS, hwNqaStatResNumOfDelaySD=hwNqaStatResNumOfDelaySD, hwNqaCtlHttpOperationString=hwNqaCtlHttpOperationString, hwNqaTcpServerEntry=hwNqaTcpServerEntry, hwNqaStatJitterMaxOfMOS=hwNqaStatJitterMaxOfMOS, hwNqaResultsRttStatsErrors=hwNqaResultsRttStatsErrors, hwNqaResultsLostPacketRatio=hwNqaResultsLostPacketRatio, hwNqaCtlStatisticsKeptTime=hwNqaCtlStatisticsKeptTime, hwNqaImplementationTypeDomains=hwNqaImplementationTypeDomains, hwNqaJitterStatsSum2PositivesSD=hwNqaJitterStatsSum2PositivesSD, hwNqaStatJitterSumOfNegDS=hwNqaStatJitterSumOfNegDS, hwNqaResultsNumOfDelaySD=hwNqaResultsNumOfDelaySD, hwNqaStatJitterMaxOfPosDS=hwNqaStatJitterMaxOfPosDS, hwNqaJitterStatsNumOfPositivesDS=hwNqaJitterStatsNumOfPositivesDS, hwNqaStatReactItemIndex=hwNqaStatReactItemIndex, hwNqaJitterStatsSum2NegativesSD=hwNqaJitterStatsSum2NegativesSD, hwNqaGroupStatsJitterEntry=hwNqaGroupStatsJitterEntry, PYSNMP_MODULE_ID=hwNqa, hwNqaStatJitterMinOfPosSD=hwNqaStatJitterMinOfPosSD, hwNqaStatJitterSumOfPosSD=hwNqaStatJitterSumOfPosSD, hwNqaStatJitterPktLossUnknown=hwNqaStatJitterPktLossUnknown, hwNqaStatJitterMinOfMOS=hwNqaStatJitterMinOfMOS, hwNqaStatJitterPacketLossSD=hwNqaStatJitterPacketLossSD, hwNqaStatResSumDelaySD=hwNqaStatResSumDelaySD, hwNqaCtlJitterAdminNumPackets=hwNqaCtlJitterAdminNumPackets, hwNqaResultsNumOfDelayDS=hwNqaResultsNumOfDelayDS, hwNqaStatResSumDelayDS=hwNqaStatResSumDelayDS, hwNqaJitterStatsMaxOfNegativesDS=hwNqaJitterStatsMaxOfNegativesDS, hwNqaStatResPacketLateArrival=hwNqaStatResPacketLateArrival, hwNqaStatResRttTimeouts=hwNqaStatResRttTimeouts, hwNqaJitterStatsNumOfNegativesDS=hwNqaJitterStatsNumOfNegativesDS, hwNqaReactThresholdType=hwNqaReactThresholdType, hwNqaHttp=hwNqaHttp, hwNqaStatReactTestName=hwNqaStatReactTestName, hwNqaStatResMinRtt=hwNqaStatResMinRtt, hwNqaResultsRttNumDisconnects=hwNqaResultsRttNumDisconnects, hwNqaStatResRttNumDisconnects=hwNqaStatResRttNumDisconnects, hwNqaJitterStatsSumOfPositivesDS=hwNqaJitterStatsSumOfPositivesDS, hwNqaReactThresholdLowerLimit=hwNqaReactThresholdLowerLimit, hwNqaStatResIpTargetAddress=hwNqaStatResIpTargetAddress, hwNqaJitterStatsNumOfNegativesSD=hwNqaJitterStatsNumOfNegativesSD, hwNqaTcpServerTable=hwNqaTcpServerTable, hwNqaStatResRttSumOfSquares=hwNqaStatResRttSumOfSquares, hwNqaReactionEntry=hwNqaReactionEntry, hwNqaResultsSumDelayDS=hwNqaResultsSumDelayDS, hwNqaStatResSentProbes=hwNqaStatResSentProbes, hwNqaReactRowStatus=hwNqaReactRowStatus, hwNqaStatResAverageRtt=hwNqaStatResAverageRtt, hwNqaJitterRTTOverThreshold=hwNqaJitterRTTOverThreshold, hwNqaStatisticsCtlTable=hwNqaStatisticsCtlTable, hwNqaProbeTimeOverThreshold=hwNqaProbeTimeOverThreshold, hwNqaICPIFOverThreshold=hwNqaICPIFOverThreshold, hwNqaJitterStatsPktLossUnknown=hwNqaJitterStatsPktLossUnknown, hwNqaResultsMaxDelayDS=hwNqaResultsMaxDelayDS, hwNqaResultsEntry=hwNqaResultsEntry, hwNqaftp=hwNqaftp, hwNqaUdpServerEntry=hwNqaUdpServerEntry, hwNqaCtlFtpOperationType=hwNqaCtlFtpOperationType, hwNqaCtlCodecType=hwNqaCtlCodecType, hwNqaReactionTable=hwNqaReactionTable, hwNqaResultsRttSum=hwNqaResultsRttSum, hwNqaReactThresholdNum=hwNqaReactThresholdNum, hwNqaUdpServerIpAddress=hwNqaUdpServerIpAddress, hwNqaStatJitterIndex=hwNqaStatJitterIndex, hwNqaReactThresholdConsecNum=hwNqaReactThresholdConsecNum, hwNqaJitterStatsMaxOfPositivesSD=hwNqaJitterStatsMaxOfPositivesSD, hwNqaCtlICPIFAdvFactor=hwNqaCtlICPIFAdvFactor, hwNqaStatResLostPacketRatio=hwNqaStatResLostPacketRatio, hwNqaCtlJitterAdminInterval=hwNqaCtlJitterAdminInterval, hwNqaStatJitterMaxOfPosSD=hwNqaStatJitterMaxOfPosSD, hwNqaStatJitterMaxOfNegSD=hwNqaStatJitterMaxOfNegSD, hwNqaCtlStatisticsGroupNumber=hwNqaCtlStatisticsGroupNumber, hwNqaJitterPacketLoss=hwNqaJitterPacketLoss, hwNqaJitterStatsMaxOfNegativesSD=hwNqaJitterStatsMaxOfNegativesSD, hwNqaUdpServerRowStatus=hwNqaUdpServerRowStatus, hwNqaReactCheckedNum=hwNqaReactCheckedNum, hwNqaJitterStatsMinOfNegativesSD=hwNqaJitterStatsMinOfNegativesSD, hwNqaTcpServerRowStatus=hwNqaTcpServerRowStatus, hwNqaObjects=hwNqaObjects, hwNqaStatResProbeResponses=hwNqaStatResProbeResponses, hwNqaJitterStatsEntry=hwNqaJitterStatsEntry, hwNqaMIBVersion=hwNqaMIBVersion, hwNqaJitterStatsMinOfPositivesSD=hwNqaJitterStatsMinOfPositivesSD, hwNqaJitterStatsOperOfMOS=hwNqaJitterStatsOperOfMOS, hwNqaJitterStatsTable=hwNqaJitterStatsTable, hwNqaCtlTTL=hwNqaCtlTTL, hwNqaStatJitterNumOfPosSD=hwNqaStatJitterNumOfPosSD, hwNqaStatJitterSumOfNegSD=hwNqaStatJitterSumOfNegSD, hwNqaStatResNumOfDelayDS=hwNqaStatResNumOfDelayDS, hwNqaMOSOverThreshold=hwNqaMOSOverThreshold, hwNqaCtlFtpUsername=hwNqaCtlFtpUsername, hwNqaStatJitterSumOfPosDS=hwNqaStatJitterSumOfPosDS, hwNqaGroupStatsJitterTable=hwNqaGroupStatsJitterTable, hwNqaReactThresholdAccumNum=hwNqaReactThresholdAccumNum, hwNqaReactTestName=hwNqaReactTestName, hwNqaReactActionType=hwNqaReactActionType, hwNqaStatResRttErrors=hwNqaStatResRttErrors, hwNqaStatJitterMinOfNegSD=hwNqaStatJitterMinOfNegSD, hwNqaStatJitterSumOfSquarePosDS=hwNqaStatJitterSumOfSquarePosDS, hwNqaResultsMinDelaySD=hwNqaResultsMinDelaySD, hwNqaReactCheckedElement=hwNqaReactCheckedElement, hwNqaCtlLifeTime=hwNqaCtlLifeTime, hwNqaStatResRttSum=hwNqaStatResRttSum, hwNqaJitterStatsAvePositivesDS=hwNqaJitterStatsAvePositivesDS, hwNqaResultsRttNoConnections=hwNqaResultsRttNoConnections, hwNqaStatResRttBusies=hwNqaStatResRttBusies, hwNqaTcpconnect=hwNqaTcpconnect, hwNqaStatJitterNumOfNegSD=hwNqaStatJitterNumOfNegSD, hwNqaReactThresholdUpperLimit=hwNqaReactThresholdUpperLimit, hwNqaCtlFtpPassword=hwNqaCtlFtpPassword, hwNqaStatReactOwnerIndex=hwNqaStatReactOwnerIndex, hwNqajitter=hwNqajitter, hwNqa=hwNqa, hwNqaUdpServerPort=hwNqaUdpServerPort, hwNqaStatResRttNoConnections=hwNqaStatResRttNoConnections, hwNqaStatJitterMaxOfICPIF=hwNqaStatJitterMaxOfICPIF, hwNqaStatJitterMinOfICPIF=hwNqaStatJitterMinOfICPIF, hwNqaStatisticsResultsEntry=hwNqaStatisticsResultsEntry, hwNqaResultsPacketLateArrival=hwNqaResultsPacketLateArrival, hwNqaStatResStartTime=hwNqaStatResStartTime, hwNqadlsw=hwNqadlsw, hwNqaJitterStatsMaxOfPositivesDS=hwNqaJitterStatsMaxOfPositivesDS, hwNqaReactCurrentStatus=hwNqaReactCurrentStatus, hwNqaJitterStatsAveNegativesDS=hwNqaJitterStatsAveNegativesDS, hwNqaResultsMaxDelaySD=hwNqaResultsMaxDelaySD, hwNqaStatJitterPacketLossDS=hwNqaStatJitterPacketLossDS, hwNqaResultsSum2DelaySD=hwNqaResultsSum2DelaySD, hwNqaUdpEcho=hwNqaUdpEcho, hwNqadhcp=hwNqadhcp, hwNqaResultsRttSequenceErrors=hwNqaResultsRttSequenceErrors, hwNqaStatResMaxDelayDS=hwNqaStatResMaxDelayDS, hwNqaNotifications=hwNqaNotifications, hwNqaStatResMinDelaySD=hwNqaStatResMinDelaySD)
