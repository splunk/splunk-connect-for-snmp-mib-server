#
# PySNMP MIB module ELTEX-FLEX-LINKS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-FLEX-LINKS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:45:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
eltexLtd, = mibBuilder.importSymbols("ELTEX-SMI-ACTUAL", "eltexLtd")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, TimeTicks, Integer32, Counter32, Counter64, MibIdentifier, Gauge32, IpAddress, NotificationType, ObjectIdentity, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Integer32", "Counter32", "Counter64", "MibIdentifier", "Gauge32", "IpAddress", "NotificationType", "ObjectIdentity", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
eltexFlexLinksMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 31))
if mibBuilder.loadTexts: eltexFlexLinksMIB.setLastUpdated('201410070000Z')
if mibBuilder.loadTexts: eltexFlexLinksMIB.setOrganization('Eltex Ltd.')
eltexFlexLinksMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 0))
eltexFlexLinksMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 1))
eltexFlexLinksMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 2))
eltexFlConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1))
eltexFlStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2))
eltexFlIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 1), )
if mibBuilder.loadTexts: eltexFlIfConfigTable.setStatus('current')
eltexFlIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 1, 1), ).setIndexNames((0, "ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigPrimary"))
if mibBuilder.loadTexts: eltexFlIfConfigEntry.setStatus('current')
eltexFlIfConfigPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: eltexFlIfConfigPrimary.setStatus('current')
eltexFlIfConfigBackUp = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 1, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eltexFlIfConfigBackUp.setStatus('current')
eltexFlEnableStatusChangeNotif = MibScalar((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexFlEnableStatusChangeNotif.setStatus('current')
eltexFlIfConfigExtTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 3), )
if mibBuilder.loadTexts: eltexFlIfConfigExtTable.setStatus('current')
eltexFlIfConfigExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 3, 1), ).setIndexNames((0, "ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigPrimary"))
if mibBuilder.loadTexts: eltexFlIfConfigExtEntry.setStatus('current')
eltexFlIfConfigPreemptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("forced", 2), ("bandwidth", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexFlIfConfigPreemptionMode.setStatus('current')
eltexFlIfConfigPreemptionDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 1, 3, 1, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexFlIfConfigPreemptionDelay.setStatus('current')
eltexFlIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2, 1), )
if mibBuilder.loadTexts: eltexFlIfStatusTable.setStatus('current')
eltexFlIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2, 1, 1), ).setIndexNames((0, "ELTEX-FLEX-LINKS-MIB", "eltexFlIfIndex"))
if mibBuilder.loadTexts: eltexFlIfStatusEntry.setStatus('current')
eltexFlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexFlIfIndex.setStatus('current')
eltexFlIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 31, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("forwarding", 1), ("blocking", 2), ("down", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexFlIfStatus.setStatus('current')
eltexFlIfStatusChangeNotif = NotificationType((1, 3, 6, 1, 4, 1, 35265, 31, 0, 1)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfIndex"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlIfStatus"))
if mibBuilder.loadTexts: eltexFlIfStatusChangeNotif.setStatus('current')
eltexFlexLinksMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 2, 1))
eltexFlexLinksMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2))
eltexFlexLinksMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 35265, 31, 2, 1, 1)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksIfConfigGroup"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksIfStatusGroup"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksEnableNotifGroup"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksNotifGroup"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlexLinksPreemptionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksMIBCompliance = eltexFlexLinksMIBCompliance.setStatus('current')
eltexFlexLinksIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 1)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigBackUp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksIfConfigGroup = eltexFlexLinksIfConfigGroup.setStatus('current')
eltexFlexLinksIfStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 2)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksIfStatusGroup = eltexFlexLinksIfStatusGroup.setStatus('current')
eltexFlexLinksEnableNotifGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 3)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlEnableStatusChangeNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksEnableNotifGroup = eltexFlexLinksEnableNotifGroup.setStatus('current')
eltexFlexLinksNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 4)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfStatusChangeNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksNotifGroup = eltexFlexLinksNotifGroup.setStatus('current')
eltexFlexLinksPreemptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 31, 2, 2, 5)).setObjects(("ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigPreemptionMode"), ("ELTEX-FLEX-LINKS-MIB", "eltexFlIfConfigPreemptionDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltexFlexLinksPreemptionGroup = eltexFlexLinksPreemptionGroup.setStatus('current')
mibBuilder.exportSymbols("ELTEX-FLEX-LINKS-MIB", eltexFlexLinksMIBConformance=eltexFlexLinksMIBConformance, eltexFlIfConfigEntry=eltexFlIfConfigEntry, eltexFlIfStatusEntry=eltexFlIfStatusEntry, eltexFlexLinksMIBCompliances=eltexFlexLinksMIBCompliances, eltexFlIfStatus=eltexFlIfStatus, eltexFlIfIndex=eltexFlIfIndex, eltexFlStatus=eltexFlStatus, eltexFlexLinksPreemptionGroup=eltexFlexLinksPreemptionGroup, eltexFlIfConfigTable=eltexFlIfConfigTable, eltexFlexLinksMIB=eltexFlexLinksMIB, eltexFlIfConfigBackUp=eltexFlIfConfigBackUp, eltexFlConfig=eltexFlConfig, eltexFlexLinksIfConfigGroup=eltexFlexLinksIfConfigGroup, eltexFlexLinksMIBGroups=eltexFlexLinksMIBGroups, eltexFlexLinksMIBObjects=eltexFlexLinksMIBObjects, eltexFlexLinksEnableNotifGroup=eltexFlexLinksEnableNotifGroup, eltexFlexLinksIfStatusGroup=eltexFlexLinksIfStatusGroup, eltexFlIfConfigPreemptionMode=eltexFlIfConfigPreemptionMode, eltexFlIfStatusChangeNotif=eltexFlIfStatusChangeNotif, eltexFlIfConfigExtEntry=eltexFlIfConfigExtEntry, eltexFlIfStatusTable=eltexFlIfStatusTable, eltexFlexLinksNotifGroup=eltexFlexLinksNotifGroup, eltexFlexLinksMIBCompliance=eltexFlexLinksMIBCompliance, eltexFlEnableStatusChangeNotif=eltexFlEnableStatusChangeNotif, eltexFlIfConfigPreemptionDelay=eltexFlIfConfigPreemptionDelay, eltexFlexLinksMIBNotifs=eltexFlexLinksMIBNotifs, eltexFlIfConfigPrimary=eltexFlIfConfigPrimary, PYSNMP_MODULE_ID=eltexFlexLinksMIB, eltexFlIfConfigExtTable=eltexFlIfConfigExtTable)
