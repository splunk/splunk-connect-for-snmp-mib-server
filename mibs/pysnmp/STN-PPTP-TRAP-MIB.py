#
# PySNMP MIB module STN-PPTP-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-PPTP-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, Counter64, NotificationType, ObjectIdentity, Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, Unsigned32, Gauge32, Bits, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "NotificationType", "ObjectIdentity", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "Unsigned32", "Gauge32", "Bits", "ModuleIdentity", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
stnNotification, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnNotification")
stnEngineCpu, stnEngineIndex, stnEngineSlot = mibBuilder.importSymbols("STN-CHASSIS-MIB", "stnEngineCpu", "stnEngineIndex", "stnEngineSlot")
stnPptpTraps, = mibBuilder.importSymbols("STN-PPTP-MIB", "stnPptpTraps")
stnSubnetInterfaceIndex, stnRouterIndex = mibBuilder.importSymbols("STN-ROUTER-MIB", "stnSubnetInterfaceIndex", "stnRouterIndex")
stnPptpTrap = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1))
if mibBuilder.loadTexts: stnPptpTrap.setLastUpdated('0002160000Z')
if mibBuilder.loadTexts: stnPptpTrap.setOrganization('Spring Tide Networks, Inc.')
stnPptpTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 1))
stnPptpNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 2))
stnPptpNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 2, 0))
stnPptpTunnelLocalHostname = MibScalar((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelLocalHostname.setStatus('current')
stnPptpTunnelLocalIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelLocalIpAddress.setStatus('current')
stnPptpTunnelRemoteHostname = MibScalar((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelRemoteHostname.setStatus('current')
stnPptpTunnelRemoteIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnPptpTunnelRemoteIpAddress.setStatus('current')
stnTunnelPptpAuthenFailure = NotificationType((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 2, 0, 1)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-ROUTER-MIB", "stnSubnetInterfaceIndex"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelLocalHostname"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelRemoteHostname"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelRemoteIpAddress"))
if mibBuilder.loadTexts: stnTunnelPptpAuthenFailure.setStatus('current')
stnTunnelPptpLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 2, 0, 2)).setObjects(("STN-CHASSIS-MIB", "stnEngineIndex"), ("STN-CHASSIS-MIB", "stnEngineSlot"), ("STN-CHASSIS-MIB", "stnEngineCpu"))
if mibBuilder.loadTexts: stnTunnelPptpLimitExceeded.setStatus('current')
stnTunnelPacProvLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 2, 0, 3)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-ROUTER-MIB", "stnSubnetInterfaceIndex"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelLocalHostname"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelLocalIpAddress"))
if mibBuilder.loadTexts: stnTunnelPacProvLimitExceeded.setStatus('current')
stnTunnelPnsProvLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 2, 0, 4)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-ROUTER-MIB", "stnSubnetInterfaceIndex"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelLocalHostname"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelLocalIpAddress"))
if mibBuilder.loadTexts: stnTunnelPnsProvLimitExceeded.setStatus('current')
stnCallPptpLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 2, 0, 5)).setObjects(("STN-CHASSIS-MIB", "stnEngineIndex"), ("STN-CHASSIS-MIB", "stnEngineSlot"), ("STN-CHASSIS-MIB", "stnEngineCpu"))
if mibBuilder.loadTexts: stnCallPptpLimitExceeded.setStatus('current')
stnCallPacProvLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 2, 0, 6)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-ROUTER-MIB", "stnSubnetInterfaceIndex"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelLocalHostname"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelRemoteHostname"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelRemoteIpAddress"))
if mibBuilder.loadTexts: stnCallPacProvLimitExceeded.setStatus('current')
stnCallPnsProvLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 3551, 4, 1, 10, 3, 1, 2, 0, 7)).setObjects(("STN-ROUTER-MIB", "stnRouterIndex"), ("STN-ROUTER-MIB", "stnSubnetInterfaceIndex"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelLocalHostname"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelRemoteHostname"), ("STN-PPTP-TRAP-MIB", "stnPptpTunnelRemoteIpAddress"))
if mibBuilder.loadTexts: stnCallPnsProvLimitExceeded.setStatus('current')
mibBuilder.exportSymbols("STN-PPTP-TRAP-MIB", stnCallPacProvLimitExceeded=stnCallPacProvLimitExceeded, stnPptpTunnelLocalHostname=stnPptpTunnelLocalHostname, PYSNMP_MODULE_ID=stnPptpTrap, stnPptpNotification=stnPptpNotification, stnPptpNotificationPrefix=stnPptpNotificationPrefix, stnTunnelPnsProvLimitExceeded=stnTunnelPnsProvLimitExceeded, stnCallPnsProvLimitExceeded=stnCallPnsProvLimitExceeded, stnCallPptpLimitExceeded=stnCallPptpLimitExceeded, stnPptpTrapVars=stnPptpTrapVars, stnPptpTrap=stnPptpTrap, stnTunnelPptpAuthenFailure=stnTunnelPptpAuthenFailure, stnPptpTunnelRemoteIpAddress=stnPptpTunnelRemoteIpAddress, stnPptpTunnelRemoteHostname=stnPptpTunnelRemoteHostname, stnPptpTunnelLocalIpAddress=stnPptpTunnelLocalIpAddress, stnTunnelPptpLimitExceeded=stnTunnelPptpLimitExceeded, stnTunnelPacProvLimitExceeded=stnTunnelPacProvLimitExceeded)
