#
# PySNMP MIB module BRIDGE-OPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BRIDGE-OPT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:23:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, NotificationType, IpAddress, MibIdentifier, ModuleIdentity, Bits, enterprises, Counter64, Integer32, Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "IpAddress", "MibIdentifier", "ModuleIdentity", "Bits", "enterprises", "Counter64", "Integer32", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
codex = MibIdentifier((1, 3, 6, 1, 4, 1, 449))
cdxProductSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2))
cdx6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1))
cdx6500Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2))
cdx6500CfgProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1))
cdx6500PCTBridgeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6))
cdx6500Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3))
cdx6500StatProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1))
cdx6500PSTBridgeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5))
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class DisplayString(OctetString):
    pass

class BridgeId(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

cdx6500PCTPortStaticAddrTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1), )
if mibBuilder.loadTexts: cdx6500PCTPortStaticAddrTable.setStatus('mandatory')
cdx6500PCTPortStaticAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmStaticAddrEntryNumber"))
if mibBuilder.loadTexts: cdx6500PCTPortStaticAddrEntry.setStatus('mandatory')
cdx6500LfcmStaticAddrEntryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStaticAddrEntryNumber.setStatus('mandatory')
cdx6500LfcmStaticMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticMacAddr.setStatus('mandatory')
cdx6500LfcmStaticIncSrcLinkAct = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticIncSrcLinkAct.setStatus('mandatory')
cdx6500LfcmStaticOutSrcLinkAct = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticOutSrcLinkAct.setStatus('mandatory')
cdx6500LfcmStaticIncDestLinkAct = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticIncDestLinkAct.setStatus('mandatory')
cdx6500LfcmStaticOutDestLinkAct = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticOutDestLinkAct.setStatus('mandatory')
cdx6500LfcmStaticIncSrcList = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticIncSrcList.setStatus('mandatory')
cdx6500LfcmStaticOutSrcList = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticOutSrcList.setStatus('mandatory')
cdx6500LfcmStaticIncDestList = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticIncDestList.setStatus('mandatory')
cdx6500LfcmStaticOutDestList = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticOutDestList.setStatus('mandatory')
cdx6500LfcmStaticMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 1, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStaticMacMask.setStatus('mandatory')
cdx6500PCTPortStaticProtTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2), )
if mibBuilder.loadTexts: cdx6500PCTPortStaticProtTable.setStatus('mandatory')
cdx6500PCTPortStaticProtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmStaticProtEntryNumber"))
if mibBuilder.loadTexts: cdx6500PCTPortStaticProtEntry.setStatus('mandatory')
cdx6500LfcmStaticProtEntryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStaticProtEntryNumber.setStatus('mandatory')
cdx6500LfcmStaticType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 50))).clone(namedValues=NamedValues(("dsap", 0), ("snap", 1), ("eType", 2), ("newvalDsap", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticType.setStatus('mandatory')
cdx6500LfcmStaticValue = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticValue.setStatus('mandatory')
cdx6500LfcmStaticIncProtLinkAct = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticIncProtLinkAct.setStatus('mandatory')
cdx6500LfcmStaticOutProtLinkAct = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticOutProtLinkAct.setStatus('mandatory')
cdx6500LfcmStaticIncProtList = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticIncProtList.setStatus('mandatory')
cdx6500LfcmStaticOutProtList = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticOutProtList.setStatus('mandatory')
cdx6500LfcmStaticValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticValue1.setStatus('mandatory')
cdx6500LfcmStaticValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStaticValue2.setStatus('mandatory')
cdx6500PCTSrLinkTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 3), )
if mibBuilder.loadTexts: cdx6500PCTSrLinkTable.setStatus('mandatory')
cdx6500PCTSrLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 3, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmSrLink"))
if mibBuilder.loadTexts: cdx6500PCTSrLinkEntry.setStatus('mandatory')
cdx6500LfcmSrLink = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLink.setStatus('mandatory')
cdx6500LfcmSrLinkHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkHopCount.setStatus('mandatory')
cdx6500LfcmSrLinkBridgeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkBridgeNum.setStatus('mandatory')
cdx6500LfcmSrLinkTargetSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkTargetSegment.setStatus('mandatory')
cdx6500LfcmSrLinkLargestFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkLargestFrame.setStatus('mandatory')
cdx6500LfcmSrLinkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("rfc1294", 2), ("trans", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkMode.setStatus('mandatory')
cdx6500LfcmSrLinkVsegNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 3, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkVsegNum.setStatus('mandatory')
cdx6500PCTStaticLinkTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 4), )
if mibBuilder.loadTexts: cdx6500PCTStaticLinkTable.setStatus('mandatory')
cdx6500PCTStaticLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 4, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmLinkStaticAddress"), (0, "BRIDGE-OPT-MIB", "cdx6500LfcmLinkStaticReceivePort"))
if mibBuilder.loadTexts: cdx6500PCTStaticLinkEntry.setStatus('mandatory')
cdx6500LfcmLinkStaticAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkStaticAddress.setStatus('mandatory')
cdx6500LfcmLinkStaticReceivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkStaticReceivePort.setStatus('mandatory')
cdx6500LfcmLinkStaticAllowToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 4, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkStaticAllowToGoTo.setStatus('mandatory')
cdx6500LfcmLinkStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkStaticStatus.setStatus('mandatory')
cdx6500PCTLtrmStnTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 5), )
if mibBuilder.loadTexts: cdx6500PCTLtrmStnTable.setStatus('mandatory')
cdx6500PCTLtrmStnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 5, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmLtrmStnEntryNumber"))
if mibBuilder.loadTexts: cdx6500PCTLtrmStnEntry.setStatus('mandatory')
cdx6500LfcmLtrmStnEntryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStnEntryNumber.setStatus('mandatory')
cdx6500LfcmLtrmMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 5, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmMacAddress.setStatus('mandatory')
cdx6500LfcmLtrmSap = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmSap.setStatus('mandatory')
cdx6500LfcmLtrmProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmProfileName.setStatus('mandatory')
cdx6500PCTLtrmProfTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6), )
if mibBuilder.loadTexts: cdx6500PCTLtrmProfTable.setStatus('mandatory')
cdx6500PCTLtrmProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmLtrmProfEntryNumber"))
if mibBuilder.loadTexts: cdx6500PCTLtrmProfEntry.setStatus('mandatory')
cdx6500LfcmLtrmProfEntryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmProfEntryNumber.setStatus('mandatory')
cdx6500LfcmLtrmProfLlcName = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmProfLlcName.setStatus('mandatory')
cdx6500LfcmLtrmProfTimeout1 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmProfTimeout1.setStatus('mandatory')
cdx6500LfcmLtrmProfTimeout2 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmProfTimeout2.setStatus('mandatory')
cdx6500LfcmLtrmProfTimeout3 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmProfTimeout3.setStatus('mandatory')
cdx6500LfcmLtrmProfN2 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmProfN2.setStatus('mandatory')
cdx6500LfcmLtrmProfN3 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmProfN3.setStatus('mandatory')
cdx6500LfcmLtrmProfTxWindowsize = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 6, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmProfTxWindowsize.setStatus('mandatory')
cdx6500dot1dBridgeCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7))
cdx6500dot1dBasePortCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 1))
cdx6500LfcmBridgeLfMode = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmBridgeLfMode.setStatus('deprecated')
cdx6500LfcmWanDataPri = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4, 50))).clone(namedValues=NamedValues(("low", 0), ("med", 2), ("high", 4), ("newvalLow", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmWanDataPri.setStatus('mandatory')
cdx6500LfcmLearnOnlyPeriod = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLearnOnlyPeriod.setStatus('mandatory')
cdx6500LfcmLssRingNumber = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLssRingNumber.setStatus('mandatory')
cdx6500LfcmBridgedProtocols = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmBridgedProtocols.setStatus('mandatory')
cdx6500LfcmMaxBridgeLinks = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmMaxBridgeLinks.setStatus('mandatory')
cdx6500LfcmBridgeId = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmBridgeId.setStatus('mandatory')
cdx6500dot1dStpPortCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 2))
cdx6500LfcmStpControl = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 50))).clone(namedValues=NamedValues(("auto", 0), ("man", 1), ("newvalAuto", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStpControl.setStatus('mandatory')
cdx6500LfcmStpBadHelloThreshold = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStpBadHelloThreshold.setStatus('mandatory')
cdx6500LfcmStpBadHelloTimeout = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStpBadHelloTimeout.setStatus('mandatory')
cdx6500LtrmCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 3))
cdx6500LfcmLtrmWanTimeout1 = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmWanTimeout1.setStatus('mandatory')
cdx6500LfcmLtrmWanTimeout2 = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmWanTimeout2.setStatus('mandatory')
cdx6500LfcmLtrmWanTimeout3 = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmWanTimeout3.setStatus('mandatory')
cdx6500LfcmLtrmWanN2 = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmWanN2.setStatus('mandatory')
cdx6500LfcmLtrmWanN3 = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmWanN3.setStatus('mandatory')
cdx6500LfcmLtrmWanTxWindowSize = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 3, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLtrmWanTxWindowSize.setStatus('mandatory')
cdx6500LfcmBaseLlcLtrmDataPri = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 3, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmBaseLlcLtrmDataPri.setStatus('mandatory')
cdx6500LssCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 4))
cdx6500LfcmLssVirtualPortMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 4, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLssVirtualPortMacAddr.setStatus('mandatory')
cdx6500LfcmLssBridgeId = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLssBridgeId.setStatus('mandatory')
cdx6500LfcmLssNotificationInter = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLssNotificationInter.setStatus('mandatory')
cdx6500LfcmLssCalculationInter = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLssCalculationInter.setStatus('deprecated')
cdx6500LfcmLssPathTraceCtrl = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 7, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 50))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("newvalDisable", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLssPathTraceCtrl.setStatus('mandatory')
cdx6500PCTTbPermTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 8), )
if mibBuilder.loadTexts: cdx6500PCTTbPermTable.setStatus('mandatory')
cdx6500PCTTbPermEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 8, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmTbEntry"))
if mibBuilder.loadTexts: cdx6500PCTTbPermEntry.setStatus('mandatory')
cdx6500LfcmTbEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTbEntry.setStatus('mandatory')
cdx6500LfcmTpPortLocalMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 8, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmTpPortLocalMacAddress.setStatus('mandatory')
cdx6500LfcmTpPortBridgeLinkNums = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 8, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmTpPortBridgeLinkNums.setStatus('mandatory')
cdx6500PCTdot1dBaseLinkTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 9), )
if mibBuilder.loadTexts: cdx6500PCTdot1dBaseLinkTable.setStatus('mandatory')
cdx6500PCTdot1dBaseLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 9, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmBaseLinkIndex"))
if mibBuilder.loadTexts: cdx6500PCTdot1dBaseLinkEntry.setStatus('mandatory')
cdx6500LfcmBaseLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmBaseLinkIndex.setStatus('mandatory')
cdx6500LfcmLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 9, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmLinkType.setStatus('mandatory')
cdx6500LfcmMacAddrFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 50))).clone(namedValues=NamedValues(("pass", 0), ("block", 1), ("none", 2), ("newvalPass", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmMacAddrFilterAction.setStatus('mandatory')
cdx6500LfcmProtocolFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 50))).clone(namedValues=NamedValues(("pass", 0), ("block", 1), ("none", 2), ("newvalPass", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmProtocolFilterAction.setStatus('mandatory')
cdx6500LfcmStpLinkManState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9, 50))).clone(namedValues=NamedValues(("forward", 0), ("block", 9), ("newvalForward", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStpLinkManState.setStatus('mandatory')
cdx6500LfcmNbiosFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pass", 1), ("block", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmNbiosFilterAction.setStatus('mandatory')
cdx6500PCTBasePortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 10), )
if mibBuilder.loadTexts: cdx6500PCTBasePortTable.setStatus('mandatory')
cdx6500PCTBasePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 10, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmBasePortIndex"))
if mibBuilder.loadTexts: cdx6500PCTBasePortEntry.setStatus('mandatory')
cdx6500LfcmBasePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmBasePortIndex.setStatus('mandatory')
cdx6500LfcmPortAddrFiltAction = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 50))).clone(namedValues=NamedValues(("pass", 0), ("block", 1), ("none", 2), ("newvalPass", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmPortAddrFiltAction.setStatus('mandatory')
cdx6500LfcmPortProtFiltAction = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 50))).clone(namedValues=NamedValues(("pass", 0), ("block", 1), ("none", 2), ("newvalPass", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmPortProtFiltAction.setStatus('mandatory')
cdx6500LfcmPortStptManState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9, 50))).clone(namedValues=NamedValues(("forward", 0), ("block", 9), ("newvalForward", 50)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmPortStptManState.setStatus('mandatory')
cdx6500PCTNetBiosTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11), )
if mibBuilder.loadTexts: cdx6500PCTNetBiosTable.setStatus('mandatory')
cdx6500PCTNetBiosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmNetBiosIndex"))
if mibBuilder.loadTexts: cdx6500PCTNetBiosEntry.setStatus('mandatory')
cdx6500LfcmNetBiosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmNetBiosIndex.setStatus('mandatory')
cdx6500LfcmNbiosStrType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ascii-name", 1), ("hex-name", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmNbiosStrType.setStatus('mandatory')
cdx6500LfcmNbiosAsciiName = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmNbiosAsciiName.setStatus('mandatory')
cdx6500LfcmNbiosHexName = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmNbiosHexName.setStatus('mandatory')
cdx6500LfcmNbiosIncAction = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmNbiosIncAction.setStatus('mandatory')
cdx6500LfcmNbiosIncList = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmNbiosIncList.setStatus('mandatory')
cdx6500LfcmNbiosOutAction = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmNbiosOutAction.setStatus('mandatory')
cdx6500LfcmNbiosOutList = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 6, 11, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmNbiosOutList.setStatus('mandatory')
cdx6500PSTSrPortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 1), )
if mibBuilder.loadTexts: cdx6500PSTSrPortTable.setStatus('mandatory')
cdx6500PSTSrPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 1, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmSrPortIfIndex"))
if mibBuilder.loadTexts: cdx6500PSTSrPortEntry.setStatus('mandatory')
cdx6500LfcmSrPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrPortIfIndex.setStatus('mandatory')
cdx6500LfcmSrPortFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrPortFramesRx.setStatus('mandatory')
cdx6500LfcmSrPortFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrPortFramesTx.setStatus('mandatory')
cdx6500LfcmSrPortRingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrPortRingNumber.setStatus('deprecated')
cdx6500PSTTpPortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2), )
if mibBuilder.loadTexts: cdx6500PSTTpPortTable.setStatus('mandatory')
cdx6500PSTTpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmTpPortIfIndex"))
if mibBuilder.loadTexts: cdx6500PSTTpPortEntry.setStatus('mandatory')
cdx6500LfcmTpPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortIfIndex.setStatus('mandatory')
cdx6500LfcmTpPortUnicastRx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortUnicastRx.setStatus('mandatory')
cdx6500LfcmTpPortUnicastTx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortUnicastTx.setStatus('mandatory')
cdx6500LfcmTpPortMulticastRx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortMulticastRx.setStatus('mandatory')
cdx6500LfcmTpPortMulticastTx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortMulticastTx.setStatus('mandatory')
cdx6500LfcmTpPortBroadcastRx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortBroadcastRx.setStatus('mandatory')
cdx6500LfcmTpPortBroadcastTx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortBroadcastTx.setStatus('mandatory')
cdx6500LfcmTpPortInboundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortInboundDisc.setStatus('mandatory')
cdx6500LfcmTpPortOutboundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortOutboundDisc.setStatus('mandatory')
cdx6500LfcmTpPortULPInBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortULPInBoundDisc.setStatus('mandatory')
cdx6500LfcmTpPortULPOutBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortULPOutBoundDisc.setStatus('mandatory')
cdx6500LfcmTpPortMLPInBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortMLPInBoundDisc.setStatus('mandatory')
cdx6500LfcmTpPortMLPOutBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortMLPOutBoundDisc.setStatus('mandatory')
cdx6500PSTPortFilterTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3), )
if mibBuilder.loadTexts: cdx6500PSTPortFilterTable.setStatus('mandatory')
cdx6500PSTPortFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmPortFilterIfIndex"))
if mibBuilder.loadTexts: cdx6500PSTPortFilterEntry.setStatus('mandatory')
cdx6500LfcmPortFilterIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmPortFilterIfIndex.setStatus('mandatory')
cdx6500LfcmPortFilSrcAddrInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmPortFilSrcAddrInDisc.setStatus('mandatory')
cdx6500LfcmPortFilSrcAddrOutDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmPortFilSrcAddrOutDisc.setStatus('mandatory')
cdx6500LfcmPortFilDestAddrInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmPortFilDestAddrInDisc.setStatus('mandatory')
cdx6500LfcmPortFilDestAddrOutDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmPortFilDestAddrOutDisc.setStatus('mandatory')
cdx6500LfcmPortFilProtInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmPortFilProtInDisc.setStatus('mandatory')
cdx6500LfcmPortFilProtOutDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmPortFilProtOutDisc.setStatus('mandatory')
cdx6500LfcmPortFilTotalInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmPortFilTotalInDisc.setStatus('mandatory')
cdx6500LfcmPortFilTotalOutDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmPortFilTotalOutDisc.setStatus('mandatory')
cdx6500PSTBaseLinkTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4), )
if mibBuilder.loadTexts: cdx6500PSTBaseLinkTable.setStatus('mandatory')
cdx6500PSTBaseLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmBaseLink"))
if mibBuilder.loadTexts: cdx6500PSTBaseLinkEntry.setStatus('mandatory')
cdx6500LfcmBaseLink = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmBaseLink.setStatus('mandatory')
cdx6500LfcmBaseLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmBaseLinkIfIndex.setStatus('mandatory')
cdx6500LfcmBaseLinkCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmBaseLinkCircuit.setStatus('mandatory')
cdx6500LfcmBaseLinkBlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 5, 6, 7, 50))).clone(namedValues=NamedValues(("configErr", 0), ("swDisabled", 1), ("userDisabled", 3), ("congested", 4), ("inactive", 5), ("active", 6), ("unconfig", 7), ("newvalConfigErr", 50)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmBaseLinkBlStatus.setStatus('mandatory')
cdx6500LfcmBaseLinkClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmBaseLinkClearStats.setStatus('mandatory')
cdx6500LfcmBaseLinkLastStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmBaseLinkLastStatReset.setStatus('mandatory')
cdx6500LfcmLinkBridgeLinkBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("boot", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkBridgeLinkBoot.setStatus('mandatory')
cdx6500LfcmLinkBlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkBlEnable.setStatus('mandatory')
cdx6500LfcmLinkBlDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("disable", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkBlDisable.setStatus('mandatory')
cdx6500LfcmCtrlsLinkSetLinkProt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("setUcastProtection", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmCtrlsLinkSetLinkProt.setStatus('mandatory')
cdx6500LfcmCtrlsLinkClrLinkProt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clearUcastProtection", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmCtrlsLinkClrLinkProt.setStatus('mandatory')
cdx6500LfcmCtrlsLinkSetMultProt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("setMcastProtection", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmCtrlsLinkSetMultProt.setStatus('mandatory')
cdx6500LfcmCtrlsLinkClrMultProt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clearMcastProtection", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmCtrlsLinkClrMultProt.setStatus('mandatory')
cdx6500PSTSrLinkTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5), )
if mibBuilder.loadTexts: cdx6500PSTSrLinkTable.setStatus('mandatory')
cdx6500PSTSrLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmSrLinkIfIndex"))
if mibBuilder.loadTexts: cdx6500PSTSrLinkEntry.setStatus('mandatory')
cdx6500LfcmSrLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkIfIndex.setStatus('mandatory')
cdx6500LfcmSrLinkSteSpanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("deprecatedObj", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkSteSpanMode.setStatus('mandatory')
cdx6500LfcmSrLinkSpecInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkSpecInFrames.setStatus('mandatory')
cdx6500LfcmSrLinkSpecOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkSpecOutFrames.setStatus('mandatory')
cdx6500LfcmSrLinkApeInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkApeInFrames.setStatus('mandatory')
cdx6500LfcmSrLinkApeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkApeOutFrames.setStatus('mandatory')
cdx6500LfcmSrLinkSteOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkSteOutFrames.setStatus('mandatory')
cdx6500LfcmSrLinkSteinFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkSteinFrames.setStatus('mandatory')
cdx6500LfcmSrLinkSegMisDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkSegMisDisc.setStatus('mandatory')
cdx6500LfcmSrLinkDupSegDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkDupSegDisc.setStatus('mandatory')
cdx6500LfcmSrLinkHopCountExcDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkHopCountExcDisc.setStatus('mandatory')
cdx6500LfcmSrLinkTotalFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkTotalFramesRx.setStatus('mandatory')
cdx6500LfcmSrLinkTotalFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkTotalFramesTx.setStatus('mandatory')
cdx6500LfcmSrLinkNextRingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmSrLinkNextRingNumber.setStatus('mandatory')
cdx6500PSTTpLinkTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6), )
if mibBuilder.loadTexts: cdx6500PSTTpLinkTable.setStatus('mandatory')
cdx6500PSTTpLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmTpLink"))
if mibBuilder.loadTexts: cdx6500PSTTpLinkEntry.setStatus('mandatory')
cdx6500LfcmTpLink = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLink.setStatus('mandatory')
cdx6500LfcmTpLinkMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkMaxInfo.setStatus('mandatory')
cdx6500LfcmTpLinkInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkInFrames.setStatus('mandatory')
cdx6500LfcmTpLinkOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkOutFrames.setStatus('mandatory')
cdx6500LfcmTpLinkInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkInDiscards.setStatus('mandatory')
cdx6500LfcmTpLinkUnicastRx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkUnicastRx.setStatus('mandatory')
cdx6500LfcmTpLinkUnicastTx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkUnicastTx.setStatus('mandatory')
cdx6500LfcmTpLinkMulticastRx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkMulticastRx.setStatus('mandatory')
cdx6500LfcmTpLinkMulticastTx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkMulticastTx.setStatus('mandatory')
cdx6500LfcmTpLinkBroadcastRx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkBroadcastRx.setStatus('mandatory')
cdx6500LfcmTpLinkBroadcastTx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkBroadcastTx.setStatus('mandatory')
cdx6500LfcmTpLinkInBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkInBoundDisc.setStatus('mandatory')
cdx6500LfcmTpLinkOutBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkOutBoundDisc.setStatus('mandatory')
cdx6500LfcmTpLinkULPInBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkULPInBoundDisc.setStatus('mandatory')
cdx6500LfcmTpLinkULPOutBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkULPOutBoundDisc.setStatus('mandatory')
cdx6500LfcmTpLinkMLPInBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkMLPInBoundDisc.setStatus('mandatory')
cdx6500LfcmTpLinkMLPOutBoundDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpLinkMLPOutBoundDisc.setStatus('mandatory')
cdx6500PSTStpLinkTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7), )
if mibBuilder.loadTexts: cdx6500PSTStpLinkTable.setStatus('mandatory')
cdx6500PSTStpLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmStpLink"))
if mibBuilder.loadTexts: cdx6500PSTStpLinkEntry.setStatus('mandatory')
cdx6500LfcmStpLink = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStpLink.setStatus('mandatory')
cdx6500LfcmStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStpPriority.setStatus('mandatory')
cdx6500LfcmStpState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStpState.setStatus('mandatory')
cdx6500LfcmStpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStpEnable.setStatus('mandatory')
cdx6500LfcmStpPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdx6500LfcmStpPathCost.setStatus('mandatory')
cdx6500LfcmStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStpDesignatedRoot.setStatus('mandatory')
cdx6500LfcmStpDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStpDesignatedCost.setStatus('mandatory')
cdx6500LfcmStpDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 8), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStpDesignatedBridge.setStatus('mandatory')
cdx6500LfcmStpDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStpDesignatedPort.setStatus('mandatory')
cdx6500LfcmStpForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmStpForwardTransitions.setStatus('mandatory')
cdx6500PSTStaticStatsLinkTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8), )
if mibBuilder.loadTexts: cdx6500PSTStaticStatsLinkTable.setStatus('mandatory')
cdx6500PSTStaticsStatsLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmLinkFilterIndex"))
if mibBuilder.loadTexts: cdx6500PSTStaticsStatsLinkEntry.setStatus('mandatory')
cdx6500LfcmLinkFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkFilterIndex.setStatus('mandatory')
cdx6500LfcmLinkFilSrcAddrInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkFilSrcAddrInDisc.setStatus('mandatory')
cdx6500LfcmLinkFilSrcAddrOutDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkFilSrcAddrOutDisc.setStatus('mandatory')
cdx6500LfcmLinkFilDestAddrInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkFilDestAddrInDisc.setStatus('mandatory')
cdx6500LfcmLinkFilDestAddrOutDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkFilDestAddrOutDisc.setStatus('mandatory')
cdx6500LfcmLinkFilProtInDisc = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkFilProtInDisc.setStatus('mandatory')
cdx6500LfcmLinkFilProtOutDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkFilProtOutDisc.setStatus('mandatory')
cdx6500LfcmLinkFilTotalInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkFilTotalInDisc.setStatus('mandatory')
cdx6500LfcmLinkFilTotalOutDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLinkFilTotalOutDisc.setStatus('mandatory')
cdx6500PSTLtrmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9), )
if mibBuilder.loadTexts: cdx6500PSTLtrmStatsTable.setStatus('mandatory')
cdx6500PSTLtrmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmLtrmStatsIndex"))
if mibBuilder.loadTexts: cdx6500PSTLtrmStatsEntry.setStatus('mandatory')
cdx6500LfcmLtrmStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsIndex.setStatus('mandatory')
cdx6500LfcmLtrmStatsDataCharIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsDataCharIn.setStatus('mandatory')
cdx6500LfcmLtrmStatsDataCharOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsDataCharOut.setStatus('mandatory')
cdx6500LfcmLtrmStatsDataFrIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsDataFrIn.setStatus('mandatory')
cdx6500LfcmLtrmStatsDataFrOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsDataFrOut.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrRrIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrRrIn.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrRrOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrRrOut.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrRnrIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrRnrIn.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrRnrOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrRnrOut.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrXidIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrXidIn.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrXidOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrXidOut.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrRejIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrRejIn.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrRejOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrRejOut.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrSabmeIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrSabmeIn.setStatus('mandatory')
cdx6500LfcmLtrmStatsCtFrSabmeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsCtFrSabmeOut.setStatus('mandatory')
cdx6500LfcmLtrmStatsTotFrInData = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsTotFrInData.setStatus('mandatory')
cdx6500LfcmLtrmStatsTotFrOutData = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsTotFrOutData.setStatus('mandatory')
cdx6500LfcmLtrmStatsBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 9, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("boot", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLtrmStatsBoot.setStatus('mandatory')
cdx6500dot1dBridgeStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 10))
cdx6500dot1dBasePortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 10, 1))
cdx6500PSTPortBaseTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11), )
if mibBuilder.loadTexts: cdx6500PSTPortBaseTable.setStatus('mandatory')
cdx6500PSTPortBasePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1), ).setIndexNames((0, "BRIDGE-OPT-MIB", "cdx6500LfcmBasePort"))
if mibBuilder.loadTexts: cdx6500PSTPortBasePortEntry.setStatus('mandatory')
cdx6500LfcmBasePort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmBasePort.setStatus('mandatory')
cdx6500LfcmBridgeLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 5, 6, 7, 50))).clone(namedValues=NamedValues(("configErr", 0), ("swDisabled", 1), ("userDisabled", 3), ("congested", 4), ("inactive", 5), ("active", 6), ("unconfig", 7), ("newvalConfigErr", 50)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmBridgeLinkStatus.setStatus('mandatory')
cdx6500LfcmClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("resetStats", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmClearStats.setStatus('mandatory')
cdx6500LfcmLastStatsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmLastStatsReset.setStatus('mandatory')
cdx6500LfcmBridgeBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("boot", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmBridgeBoot.setStatus('mandatory')
cdx6500LfcmPortBridgeLinkBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("boot", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmPortBridgeLinkBoot.setStatus('mandatory')
cdx6500LfcmPortBlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmPortBlEnable.setStatus('mandatory')
cdx6500LfcmPortBlDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("disable", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmPortBlDisable.setStatus('mandatory')
cdx6500LfcmCtrlsPortSetLinkProt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("setUcastProtection", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmCtrlsPortSetLinkProt.setStatus('mandatory')
cdx6500LfcmCtrlsPortClrLinkProt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clearUcastProtection", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmCtrlsPortClrLinkProt.setStatus('mandatory')
cdx6500LfcmCtrlsPortSetMultProt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("setMcastProtection", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmCtrlsPortSetMultProt.setStatus('mandatory')
cdx6500LfcmCtrlsPortClrMultProt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 11, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clearMcastProtection", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500LfcmCtrlsPortClrMultProt.setStatus('mandatory')
cdx6500dot1dTpPortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 10, 2))
cdx6500LfcmTpPortLearnedEntries = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 10, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortLearnedEntries.setStatus('mandatory')
cdx6500LfcmTpPortAvailEntries = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 10, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortAvailEntries.setStatus('mandatory')
cdx6500LfcmTpPortMaximumEntries = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 10, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmTpPortMaximumEntries.setStatus('mandatory')
cdx6500dot1dBaseLinkStats = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 10, 3))
cdx6500LfcmNumLinks = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 5, 10, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500LfcmNumLinks.setStatus('mandatory')
mibBuilder.exportSymbols("BRIDGE-OPT-MIB", cdx6500LfcmLtrmWanTimeout3=cdx6500LfcmLtrmWanTimeout3, cdx6500LfcmLssBridgeId=cdx6500LfcmLssBridgeId, cdx6500LfcmSrLinkDupSegDisc=cdx6500LfcmSrLinkDupSegDisc, cdx6500LfcmSrLinkSegMisDisc=cdx6500LfcmSrLinkSegMisDisc, cdx6500LfcmLssVirtualPortMacAddr=cdx6500LfcmLssVirtualPortMacAddr, cdx6500LfcmTpPortMLPOutBoundDisc=cdx6500LfcmTpPortMLPOutBoundDisc, cdx6500LfcmLinkFilProtOutDisc=cdx6500LfcmLinkFilProtOutDisc, cdx6500PSTLtrmStatsTable=cdx6500PSTLtrmStatsTable, cdx6500LfcmLtrmStatsCtFrXidOut=cdx6500LfcmLtrmStatsCtFrXidOut, cdx6500LfcmLinkStaticStatus=cdx6500LfcmLinkStaticStatus, cdx6500LfcmSrLinkVsegNum=cdx6500LfcmSrLinkVsegNum, cdx6500LfcmNbiosOutAction=cdx6500LfcmNbiosOutAction, cdx6500PSTPortFilterEntry=cdx6500PSTPortFilterEntry, cdx6500LfcmStaticType=cdx6500LfcmStaticType, cdx6500LfcmNbiosHexName=cdx6500LfcmNbiosHexName, cdx6500LfcmNbiosAsciiName=cdx6500LfcmNbiosAsciiName, cdx6500dot1dTpPortStats=cdx6500dot1dTpPortStats, cdx6500LfcmTpPortUnicastTx=cdx6500LfcmTpPortUnicastTx, cdx6500LfcmSrPortFramesRx=cdx6500LfcmSrPortFramesRx, cdx6500LfcmStaticMacMask=cdx6500LfcmStaticMacMask, cdx6500LfcmCtrlsLinkSetMultProt=cdx6500LfcmCtrlsLinkSetMultProt, cdx6500CfgProtocolGroup=cdx6500CfgProtocolGroup, cdx6500PCTPortStaticProtTable=cdx6500PCTPortStaticProtTable, cdx6500LfcmBridgedProtocols=cdx6500LfcmBridgedProtocols, cdx6500LfcmPortFilSrcAddrOutDisc=cdx6500LfcmPortFilSrcAddrOutDisc, cdx6500LfcmCtrlsLinkClrLinkProt=cdx6500LfcmCtrlsLinkClrLinkProt, cdx6500PSTSrPortTable=cdx6500PSTSrPortTable, cdx6500PCTStaticLinkEntry=cdx6500PCTStaticLinkEntry, cdx6500PSTPortBaseTable=cdx6500PSTPortBaseTable, cdx6500LfcmSrLinkMode=cdx6500LfcmSrLinkMode, cdx6500LfcmPortFilDestAddrOutDisc=cdx6500LfcmPortFilDestAddrOutDisc, cdx6500LfcmLtrmStatsTotFrOutData=cdx6500LfcmLtrmStatsTotFrOutData, cdx6500LfcmLinkType=cdx6500LfcmLinkType, cdx6500LfcmLssCalculationInter=cdx6500LfcmLssCalculationInter, cdx6500LfcmTpPortOutboundDisc=cdx6500LfcmTpPortOutboundDisc, cdx6500LfcmLinkFilProtInDisc=cdx6500LfcmLinkFilProtInDisc, cdx6500LfcmNumLinks=cdx6500LfcmNumLinks, cdx6500LfcmPortBridgeLinkBoot=cdx6500LfcmPortBridgeLinkBoot, cdx6500LfcmPortProtFiltAction=cdx6500LfcmPortProtFiltAction, cdx6500PCTBridgeGroup=cdx6500PCTBridgeGroup, cdx6500LfcmTpPortMulticastTx=cdx6500LfcmTpPortMulticastTx, cdx6500LfcmSrLink=cdx6500LfcmSrLink, cdx6500PSTTpPortEntry=cdx6500PSTTpPortEntry, cdx6500LfcmStaticAddrEntryNumber=cdx6500LfcmStaticAddrEntryNumber, cdx6500LtrmCfg=cdx6500LtrmCfg, cdx6500LfcmTpPortIfIndex=cdx6500LfcmTpPortIfIndex, MacAddress=MacAddress, cdx6500LfcmCtrlsPortClrLinkProt=cdx6500LfcmCtrlsPortClrLinkProt, cdx6500PCTPortStaticAddrEntry=cdx6500PCTPortStaticAddrEntry, cdx6500LfcmBaseLinkLastStatReset=cdx6500LfcmBaseLinkLastStatReset, cdx6500LfcmSrLinkIfIndex=cdx6500LfcmSrLinkIfIndex, cdx6500LfcmBridgeLfMode=cdx6500LfcmBridgeLfMode, cdx6500LfcmPortFilProtInDisc=cdx6500LfcmPortFilProtInDisc, cdx6500LfcmProtocolFilterAction=cdx6500LfcmProtocolFilterAction, cdx6500LfcmStaticOutDestLinkAct=cdx6500LfcmStaticOutDestLinkAct, cdx6500LfcmBridgeBoot=cdx6500LfcmBridgeBoot, cdx6500LfcmMacAddrFilterAction=cdx6500LfcmMacAddrFilterAction, cdx6500LfcmPortFilDestAddrInDisc=cdx6500LfcmPortFilDestAddrInDisc, cdx6500LfcmStpLink=cdx6500LfcmStpLink, cdx6500dot1dBridgeStatsGroup=cdx6500dot1dBridgeStatsGroup, cdx6500Statistics=cdx6500Statistics, cdx6500LfcmStaticOutProtList=cdx6500LfcmStaticOutProtList, cdx6500LfcmTpPortLocalMacAddress=cdx6500LfcmTpPortLocalMacAddress, cdx6500LfcmTpLinkUnicastRx=cdx6500LfcmTpLinkUnicastRx, cdx6500PSTStpLinkEntry=cdx6500PSTStpLinkEntry, cdx6500LfcmSrLinkHopCount=cdx6500LfcmSrLinkHopCount, cdx6500LfcmSrLinkTotalFramesRx=cdx6500LfcmSrLinkTotalFramesRx, cdx6500LfcmLtrmProfTimeout3=cdx6500LfcmLtrmProfTimeout3, cdx6500LfcmLinkFilTotalOutDisc=cdx6500LfcmLinkFilTotalOutDisc, cdx6500LfcmTpPortUnicastRx=cdx6500LfcmTpPortUnicastRx, cdx6500PCTLtrmProfTable=cdx6500PCTLtrmProfTable, cdx6500LfcmLinkFilDestAddrInDisc=cdx6500LfcmLinkFilDestAddrInDisc, cdx6500LfcmStpState=cdx6500LfcmStpState, cdx6500LfcmBaseLinkCircuit=cdx6500LfcmBaseLinkCircuit, cdx6500LfcmCtrlsPortSetLinkProt=cdx6500LfcmCtrlsPortSetLinkProt, cdx6500LfcmSrPortIfIndex=cdx6500LfcmSrPortIfIndex, cdx6500PCTNetBiosEntry=cdx6500PCTNetBiosEntry, cdx6500LfcmSrLinkSteinFrames=cdx6500LfcmSrLinkSteinFrames, cdx6500LfcmStpDesignatedBridge=cdx6500LfcmStpDesignatedBridge, cdx6500LfcmSrLinkApeOutFrames=cdx6500LfcmSrLinkApeOutFrames, cdx6500LfcmBridgeLinkStatus=cdx6500LfcmBridgeLinkStatus, cdx6500dot1dBaseLinkStats=cdx6500dot1dBaseLinkStats, cdx6500LfcmLtrmProfLlcName=cdx6500LfcmLtrmProfLlcName, cdx6500LfcmNetBiosIndex=cdx6500LfcmNetBiosIndex, cdx6500LfcmCtrlsLinkClrMultProt=cdx6500LfcmCtrlsLinkClrMultProt, cdx6500LfcmPortFilSrcAddrInDisc=cdx6500LfcmPortFilSrcAddrInDisc, cdx6500LfcmTpPortMLPInBoundDisc=cdx6500LfcmTpPortMLPInBoundDisc, cdx6500LfcmBaseLinkBlStatus=cdx6500LfcmBaseLinkBlStatus, cdx6500LfcmSrLinkSteSpanMode=cdx6500LfcmSrLinkSteSpanMode, cdx6500LfcmSrLinkSteOutFrames=cdx6500LfcmSrLinkSteOutFrames, cdx6500LfcmLtrmMacAddress=cdx6500LfcmLtrmMacAddress, cdx6500LfcmTpLinkUnicastTx=cdx6500LfcmTpLinkUnicastTx, cdx6500LfcmSrLinkTotalFramesTx=cdx6500LfcmSrLinkTotalFramesTx, cdx6500LfcmLtrmStatsCtFrRrIn=cdx6500LfcmLtrmStatsCtFrRrIn, cdx6500LfcmLtrmStatsCtFrSabmeIn=cdx6500LfcmLtrmStatsCtFrSabmeIn, cdx6500LfcmSrLinkApeInFrames=cdx6500LfcmSrLinkApeInFrames, cdx6500PSTBaseLinkEntry=cdx6500PSTBaseLinkEntry, cdx6500LfcmStaticOutSrcList=cdx6500LfcmStaticOutSrcList, cdx6500LfcmLinkStaticReceivePort=cdx6500LfcmLinkStaticReceivePort, cdx6500LfcmLinkBlEnable=cdx6500LfcmLinkBlEnable, cdx6500LfcmLtrmWanN2=cdx6500LfcmLtrmWanN2, cdx6500LfcmLtrmStatsCtFrRnrIn=cdx6500LfcmLtrmStatsCtFrRnrIn, cdx6500StatProtocolGroup=cdx6500StatProtocolGroup, cdx6500dot1dStpPortCfg=cdx6500dot1dStpPortCfg, cdx6500LfcmLinkBlDisable=cdx6500LfcmLinkBlDisable, cdx6500LfcmTpPortMaximumEntries=cdx6500LfcmTpPortMaximumEntries, cdx6500LfcmLtrmStatsCtFrSabmeOut=cdx6500LfcmLtrmStatsCtFrSabmeOut, cdx6500LfcmStpForwardTransitions=cdx6500LfcmStpForwardTransitions, cdx6500LfcmLtrmStatsDataCharOut=cdx6500LfcmLtrmStatsDataCharOut, cdx6500LssCfg=cdx6500LssCfg, cdx6500PCTLtrmStnTable=cdx6500PCTLtrmStnTable, cdx6500LfcmLssNotificationInter=cdx6500LfcmLssNotificationInter, cdx6500LfcmTpLinkBroadcastTx=cdx6500LfcmTpLinkBroadcastTx, cdx6500LfcmPortFilTotalOutDisc=cdx6500LfcmPortFilTotalOutDisc, cdx6500PSTSrPortEntry=cdx6500PSTSrPortEntry, cdx6500PCTBasePortEntry=cdx6500PCTBasePortEntry, cdx6500LfcmLinkFilDestAddrOutDisc=cdx6500LfcmLinkFilDestAddrOutDisc, cdx6500PCTdot1dBaseLinkTable=cdx6500PCTdot1dBaseLinkTable, BridgeId=BridgeId, cdx6500PCTLtrmStnEntry=cdx6500PCTLtrmStnEntry, cdx6500LfcmSrLinkSpecInFrames=cdx6500LfcmSrLinkSpecInFrames, cdx6500LfcmStaticIncSrcLinkAct=cdx6500LfcmStaticIncSrcLinkAct, cdx6500LfcmNbiosOutList=cdx6500LfcmNbiosOutList, cdx6500LfcmTpPortBroadcastRx=cdx6500LfcmTpPortBroadcastRx, cdx6500PSTTpLinkTable=cdx6500PSTTpLinkTable, cdx6500LfcmStpPathCost=cdx6500LfcmStpPathCost, cdx6500LfcmTpPortInboundDisc=cdx6500LfcmTpPortInboundDisc, cdx6500dot1dBridgeCfgGroup=cdx6500dot1dBridgeCfgGroup, cdx6500PCTStaticLinkTable=cdx6500PCTStaticLinkTable, cdx6500LfcmTpPortLearnedEntries=cdx6500LfcmTpPortLearnedEntries, cdx6500Configuration=cdx6500Configuration, cdx6500dot1dBasePortStats=cdx6500dot1dBasePortStats, cdx6500LfcmBaseLinkIfIndex=cdx6500LfcmBaseLinkIfIndex, cdx6500PSTStaticStatsLinkTable=cdx6500PSTStaticStatsLinkTable, cdx6500LfcmTpLinkMaxInfo=cdx6500LfcmTpLinkMaxInfo, cdx6500LfcmNbiosIncList=cdx6500LfcmNbiosIncList, cdx6500LfcmSrLinkLargestFrame=cdx6500LfcmSrLinkLargestFrame, cdx6500PCTBasePortTable=cdx6500PCTBasePortTable, cdx6500LfcmSrLinkNextRingNumber=cdx6500LfcmSrLinkNextRingNumber, cdx6500LfcmLearnOnlyPeriod=cdx6500LfcmLearnOnlyPeriod, cdx6500LfcmLinkStaticAddress=cdx6500LfcmLinkStaticAddress, cdx6500LfcmTpLink=cdx6500LfcmTpLink, cdx6500LfcmLtrmProfEntryNumber=cdx6500LfcmLtrmProfEntryNumber, cdx6500LfcmStpLinkManState=cdx6500LfcmStpLinkManState, cdx6500PSTTpPortTable=cdx6500PSTTpPortTable, cdx6500LfcmClearStats=cdx6500LfcmClearStats, cdx6500PSTTpLinkEntry=cdx6500PSTTpLinkEntry, cdx6500LfcmLtrmStatsCtFrXidIn=cdx6500LfcmLtrmStatsCtFrXidIn, cdx6500LfcmSrLinkTargetSegment=cdx6500LfcmSrLinkTargetSegment, cdx6500LfcmBaseLinkClearStats=cdx6500LfcmBaseLinkClearStats, cdx6500PSTLtrmStatsEntry=cdx6500PSTLtrmStatsEntry, cdx6500LfcmLtrmStatsCtFrRnrOut=cdx6500LfcmLtrmStatsCtFrRnrOut, cdx6500LfcmLtrmStatsCtFrRejIn=cdx6500LfcmLtrmStatsCtFrRejIn, cdx6500LfcmPortStptManState=cdx6500LfcmPortStptManState, cdx6500LfcmLtrmStatsCtFrRejOut=cdx6500LfcmLtrmStatsCtFrRejOut, cdx6500LfcmSrLinkSpecOutFrames=cdx6500LfcmSrLinkSpecOutFrames, cdx6500LfcmTpPortBroadcastTx=cdx6500LfcmTpPortBroadcastTx, cdx6500LfcmStaticValue2=cdx6500LfcmStaticValue2, cdx6500LfcmSrPortFramesTx=cdx6500LfcmSrPortFramesTx, cdx6500PSTBridgeGroup=cdx6500PSTBridgeGroup, cdx6500LfcmStaticValue1=cdx6500LfcmStaticValue1, cdx6500LfcmStaticProtEntryNumber=cdx6500LfcmStaticProtEntryNumber, cdx6500LfcmLtrmStatsDataCharIn=cdx6500LfcmLtrmStatsDataCharIn, cdx6500dot1dBasePortCfg=cdx6500dot1dBasePortCfg, cdx6500PCTPortStaticAddrTable=cdx6500PCTPortStaticAddrTable, cdx6500LfcmBridgeId=cdx6500LfcmBridgeId, cdx6500LfcmNbiosIncAction=cdx6500LfcmNbiosIncAction, cdx6500LfcmLtrmStatsDataFrIn=cdx6500LfcmLtrmStatsDataFrIn, cdx6500LfcmStaticIncProtList=cdx6500LfcmStaticIncProtList, cdx6500LfcmStaticOutSrcLinkAct=cdx6500LfcmStaticOutSrcLinkAct, cdx6500LfcmLtrmProfN3=cdx6500LfcmLtrmProfN3, cdx6500LfcmLtrmProfTxWindowsize=cdx6500LfcmLtrmProfTxWindowsize, cdx6500LfcmLinkBridgeLinkBoot=cdx6500LfcmLinkBridgeLinkBoot, cdx6500PSTStpLinkTable=cdx6500PSTStpLinkTable, cdx6500LfcmBaseLink=cdx6500LfcmBaseLink, cdx6500LfcmPortBlDisable=cdx6500LfcmPortBlDisable, cdx6500LfcmStpDesignatedCost=cdx6500LfcmStpDesignatedCost, cdx6500LfcmStaticIncDestList=cdx6500LfcmStaticIncDestList, cdx6500LfcmLinkFilTotalInDisc=cdx6500LfcmLinkFilTotalInDisc, cdx6500LfcmTbEntry=cdx6500LfcmTbEntry, cdx6500LfcmTpPortMulticastRx=cdx6500LfcmTpPortMulticastRx, cdx6500LfcmStpDesignatedRoot=cdx6500LfcmStpDesignatedRoot, cdx6500LfcmLtrmStatsTotFrInData=cdx6500LfcmLtrmStatsTotFrInData, cdx6500LfcmLastStatsReset=cdx6500LfcmLastStatsReset, cdx6500LfcmTpPortAvailEntries=cdx6500LfcmTpPortAvailEntries, cdx6500PCTTbPermEntry=cdx6500PCTTbPermEntry, cdxProductSpecific=cdxProductSpecific, cdx6500LfcmStaticOutProtLinkAct=cdx6500LfcmStaticOutProtLinkAct, cdx6500LfcmLtrmStatsDataFrOut=cdx6500LfcmLtrmStatsDataFrOut, cdx6500LfcmLssPathTraceCtrl=cdx6500LfcmLssPathTraceCtrl, cdx6500LfcmStaticOutDestList=cdx6500LfcmStaticOutDestList, cdx6500LfcmWanDataPri=cdx6500LfcmWanDataPri, cdx6500=cdx6500, cdx6500LfcmLinkStaticAllowToGoTo=cdx6500LfcmLinkStaticAllowToGoTo, cdx6500LfcmTpLinkInDiscards=cdx6500LfcmTpLinkInDiscards, cdx6500LfcmStpDesignatedPort=cdx6500LfcmStpDesignatedPort, cdx6500LfcmBaseLinkIndex=cdx6500LfcmBaseLinkIndex, cdx6500LfcmStpEnable=cdx6500LfcmStpEnable, cdx6500LfcmLinkFilSrcAddrOutDisc=cdx6500LfcmLinkFilSrcAddrOutDisc, cdx6500LfcmLtrmStatsIndex=cdx6500LfcmLtrmStatsIndex, cdx6500LfcmStaticMacAddr=cdx6500LfcmStaticMacAddr, cdx6500LfcmSrLinkBridgeNum=cdx6500LfcmSrLinkBridgeNum, cdx6500LfcmPortFilProtOutDisc=cdx6500LfcmPortFilProtOutDisc, cdx6500LfcmLtrmWanN3=cdx6500LfcmLtrmWanN3, cdx6500LfcmLtrmWanTimeout1=cdx6500LfcmLtrmWanTimeout1, cdx6500LfcmPortAddrFiltAction=cdx6500LfcmPortAddrFiltAction, cdx6500LfcmBasePortIndex=cdx6500LfcmBasePortIndex, codex=codex, cdx6500LfcmLtrmSap=cdx6500LfcmLtrmSap, cdx6500PSTPortFilterTable=cdx6500PSTPortFilterTable, cdx6500LfcmTpLinkInBoundDisc=cdx6500LfcmTpLinkInBoundDisc, cdx6500LfcmTpLinkULPInBoundDisc=cdx6500LfcmTpLinkULPInBoundDisc, cdx6500LfcmLtrmProfN2=cdx6500LfcmLtrmProfN2, cdx6500PCTLtrmProfEntry=cdx6500PCTLtrmProfEntry, cdx6500PSTBaseLinkTable=cdx6500PSTBaseLinkTable, cdx6500PSTPortBasePortEntry=cdx6500PSTPortBasePortEntry, cdx6500LfcmStpControl=cdx6500LfcmStpControl, cdx6500LfcmTpPortULPOutBoundDisc=cdx6500LfcmTpPortULPOutBoundDisc, cdx6500LfcmLtrmWanTimeout2=cdx6500LfcmLtrmWanTimeout2, cdx6500LfcmTpLinkInFrames=cdx6500LfcmTpLinkInFrames, cdx6500LfcmLtrmProfTimeout2=cdx6500LfcmLtrmProfTimeout2, cdx6500LfcmNbiosStrType=cdx6500LfcmNbiosStrType, cdx6500LfcmTpLinkMulticastRx=cdx6500LfcmTpLinkMulticastRx, cdx6500LfcmTpLinkOutBoundDisc=cdx6500LfcmTpLinkOutBoundDisc, cdx6500LfcmTpPortULPInBoundDisc=cdx6500LfcmTpPortULPInBoundDisc, cdx6500PCTTbPermTable=cdx6500PCTTbPermTable, cdx6500LfcmTpLinkOutFrames=cdx6500LfcmTpLinkOutFrames, cdx6500LfcmStpBadHelloThreshold=cdx6500LfcmStpBadHelloThreshold, cdx6500LfcmLinkFilSrcAddrInDisc=cdx6500LfcmLinkFilSrcAddrInDisc, cdx6500LfcmBaseLlcLtrmDataPri=cdx6500LfcmBaseLlcLtrmDataPri, cdx6500LfcmBasePort=cdx6500LfcmBasePort, cdx6500LfcmLtrmStnEntryNumber=cdx6500LfcmLtrmStnEntryNumber, cdx6500LfcmLssRingNumber=cdx6500LfcmLssRingNumber, cdx6500LfcmStaticValue=cdx6500LfcmStaticValue, cdx6500LfcmTpLinkMulticastTx=cdx6500LfcmTpLinkMulticastTx, DisplayString=DisplayString, cdx6500LfcmTpLinkULPOutBoundDisc=cdx6500LfcmTpLinkULPOutBoundDisc, cdx6500LfcmCtrlsPortClrMultProt=cdx6500LfcmCtrlsPortClrMultProt, cdx6500LfcmLtrmStatsBoot=cdx6500LfcmLtrmStatsBoot, cdx6500LfcmLtrmProfileName=cdx6500LfcmLtrmProfileName, cdx6500LfcmLtrmProfTimeout1=cdx6500LfcmLtrmProfTimeout1, cdx6500LfcmLtrmStatsCtFrRrOut=cdx6500LfcmLtrmStatsCtFrRrOut, cdx6500PCTSrLinkTable=cdx6500PCTSrLinkTable, cdx6500PSTStaticsStatsLinkEntry=cdx6500PSTStaticsStatsLinkEntry, cdx6500LfcmTpLinkBroadcastRx=cdx6500LfcmTpLinkBroadcastRx, cdx6500LfcmStpPriority=cdx6500LfcmStpPriority, cdx6500LfcmMaxBridgeLinks=cdx6500LfcmMaxBridgeLinks, cdx6500LfcmTpLinkMLPInBoundDisc=cdx6500LfcmTpLinkMLPInBoundDisc, cdx6500LfcmLinkFilterIndex=cdx6500LfcmLinkFilterIndex, cdx6500LfcmLtrmWanTxWindowSize=cdx6500LfcmLtrmWanTxWindowSize, cdx6500PCTPortStaticProtEntry=cdx6500PCTPortStaticProtEntry, cdx6500LfcmTpPortBridgeLinkNums=cdx6500LfcmTpPortBridgeLinkNums, cdx6500LfcmStaticIncDestLinkAct=cdx6500LfcmStaticIncDestLinkAct, cdx6500PCTdot1dBaseLinkEntry=cdx6500PCTdot1dBaseLinkEntry)
mibBuilder.exportSymbols("BRIDGE-OPT-MIB", cdx6500LfcmSrPortRingNumber=cdx6500LfcmSrPortRingNumber, cdx6500PSTSrLinkTable=cdx6500PSTSrLinkTable, cdx6500LfcmStaticIncSrcList=cdx6500LfcmStaticIncSrcList, cdx6500LfcmNbiosFilterAction=cdx6500LfcmNbiosFilterAction, cdx6500LfcmPortFilTotalInDisc=cdx6500LfcmPortFilTotalInDisc, cdx6500LfcmCtrlsPortSetMultProt=cdx6500LfcmCtrlsPortSetMultProt, cdx6500PCTSrLinkEntry=cdx6500PCTSrLinkEntry, cdx6500LfcmPortFilterIfIndex=cdx6500LfcmPortFilterIfIndex, cdx6500LfcmCtrlsLinkSetLinkProt=cdx6500LfcmCtrlsLinkSetLinkProt, cdx6500PCTNetBiosTable=cdx6500PCTNetBiosTable, cdx6500LfcmStaticIncProtLinkAct=cdx6500LfcmStaticIncProtLinkAct, cdx6500LfcmSrLinkHopCountExcDisc=cdx6500LfcmSrLinkHopCountExcDisc, cdx6500PSTSrLinkEntry=cdx6500PSTSrLinkEntry, cdx6500LfcmTpLinkMLPOutBoundDisc=cdx6500LfcmTpLinkMLPOutBoundDisc, cdx6500LfcmStpBadHelloTimeout=cdx6500LfcmStpBadHelloTimeout, cdx6500LfcmPortBlEnable=cdx6500LfcmPortBlEnable)
