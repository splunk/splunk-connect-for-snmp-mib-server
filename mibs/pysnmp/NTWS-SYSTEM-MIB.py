#
# PySNMP MIB module NTWS-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NTWS-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ntwsMibs, = mibBuilder.importSymbols("NTWS-ROOT-MIB", "ntwsMibs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, ObjectIdentity, Counter32, NotificationType, Gauge32, Bits, IpAddress, iso, ModuleIdentity, MibIdentifier, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "ObjectIdentity", "Counter32", "NotificationType", "Gauge32", "Bits", "IpAddress", "iso", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ntwsSystemMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8))
ntwsSystemMib.setRevisions(('2007-08-31 00:13', '2007-08-14 00:12', '2007-05-04 00:10', '2007-03-14 00:07', '2006-11-09 00:04', '2006-06-06 00:03',))
if mibBuilder.loadTexts: ntwsSystemMib.setLastUpdated('200708310013Z')
if mibBuilder.loadTexts: ntwsSystemMib.setOrganization('Nortel Networks')
class NtwsSysCpuLoad(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 100)

class NtwsSysMemoryAmount(TextualConvention, Unsigned32):
    status = 'current'

class NtwsSysPowerSupplyStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("ac-failed", 3), ("dc-failed", 4), ("ac-ok-dc-ok", 5))

ntwsSysObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1))
ntwsSysDataObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1))
ntwsSysCpuMemoryUsedBytes = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuMemoryUsedBytes.setStatus('obsolete')
ntwsSysCpuMemoryTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuMemoryTotalBytes.setStatus('obsolete')
ntwsSysFlashMemoryUsedBytes = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysFlashMemoryUsedBytes.setStatus('current')
ntwsSysFlashMemoryTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysFlashMemoryTotalBytes.setStatus('current')
ntwsSysCpuAverageLoad = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 5), NtwsSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuAverageLoad.setStatus('current')
ntwsSysCpuMemorySize = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 6), NtwsSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuMemorySize.setStatus('current')
ntwsSysCpuLoadDetail = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 11))
ntwsSysCpuMemoryUsageDetail = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 12))
ntwsSysChassisComponents = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 13))
ntwsSysCpuInstantLoad = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 11, 1), NtwsSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuInstantLoad.setStatus('current')
ntwsSysCpuLastMinuteLoad = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 11, 2), NtwsSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuLastMinuteLoad.setStatus('current')
ntwsSysCpuLast5MinutesLoad = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 11, 3), NtwsSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuLast5MinutesLoad.setStatus('current')
ntwsSysCpuLastHourLoad = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 11, 4), NtwsSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuLastHourLoad.setStatus('current')
ntwsSysCpuLastDayLoad = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 11, 5), NtwsSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuLastDayLoad.setStatus('current')
ntwsSysCpuLast3DaysLoad = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 11, 6), NtwsSysCpuLoad()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuLast3DaysLoad.setStatus('current')
ntwsSysCpuMemoryInstantUsage = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 12, 1), NtwsSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuMemoryInstantUsage.setStatus('current')
ntwsSysCpuMemoryLastMinuteUsage = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 12, 2), NtwsSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuMemoryLastMinuteUsage.setStatus('current')
ntwsSysCpuMemoryLast5MinutesUsage = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 12, 3), NtwsSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuMemoryLast5MinutesUsage.setStatus('current')
ntwsSysCpuMemoryLastHourUsage = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 12, 4), NtwsSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuMemoryLastHourUsage.setStatus('current')
ntwsSysCpuMemoryLastDayUsage = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 12, 5), NtwsSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuMemoryLastDayUsage.setStatus('current')
ntwsSysCpuMemoryLast3DaysUsage = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 12, 6), NtwsSysMemoryAmount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysCpuMemoryLast3DaysUsage.setStatus('current')
ntwsSysChasCompPowerSupplies = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 13, 1))
ntwsSysNumPowerSuppliesSupported = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 13, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysNumPowerSuppliesSupported.setStatus('current')
ntwsSysPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 13, 1, 2), )
if mibBuilder.loadTexts: ntwsSysPowerSupplyTable.setStatus('current')
ntwsSysPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 13, 1, 2, 1), ).setIndexNames((0, "NTWS-SYSTEM-MIB", "ntwsSysPowerSupplyDeviceOID"))
if mibBuilder.loadTexts: ntwsSysPowerSupplyEntry.setStatus('current')
ntwsSysPowerSupplyDeviceOID = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 13, 1, 2, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: ntwsSysPowerSupplyDeviceOID.setStatus('current')
ntwsSysPowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 13, 1, 2, 1, 2), NtwsSysPowerSupplyStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysPowerSupplyStatus.setStatus('current')
ntwsSysPowerSupplyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 8, 1, 1, 13, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsSysPowerSupplyDescr.setStatus('current')
mibBuilder.exportSymbols("NTWS-SYSTEM-MIB", ntwsSysFlashMemoryTotalBytes=ntwsSysFlashMemoryTotalBytes, ntwsSysCpuMemoryUsedBytes=ntwsSysCpuMemoryUsedBytes, ntwsSysCpuLastDayLoad=ntwsSysCpuLastDayLoad, ntwsSysCpuLoadDetail=ntwsSysCpuLoadDetail, ntwsSysCpuMemoryTotalBytes=ntwsSysCpuMemoryTotalBytes, NtwsSysMemoryAmount=NtwsSysMemoryAmount, ntwsSysCpuLastHourLoad=ntwsSysCpuLastHourLoad, ntwsSysCpuLast5MinutesLoad=ntwsSysCpuLast5MinutesLoad, ntwsSysCpuAverageLoad=ntwsSysCpuAverageLoad, ntwsSysCpuMemoryLastMinuteUsage=ntwsSysCpuMemoryLastMinuteUsage, ntwsSysPowerSupplyTable=ntwsSysPowerSupplyTable, ntwsSysPowerSupplyDeviceOID=ntwsSysPowerSupplyDeviceOID, PYSNMP_MODULE_ID=ntwsSystemMib, ntwsSysObjects=ntwsSysObjects, NtwsSysCpuLoad=NtwsSysCpuLoad, ntwsSysCpuMemoryLastHourUsage=ntwsSysCpuMemoryLastHourUsage, ntwsSysPowerSupplyStatus=ntwsSysPowerSupplyStatus, NtwsSysPowerSupplyStatus=NtwsSysPowerSupplyStatus, ntwsSysPowerSupplyDescr=ntwsSysPowerSupplyDescr, ntwsSysCpuMemoryLast5MinutesUsage=ntwsSysCpuMemoryLast5MinutesUsage, ntwsSysCpuInstantLoad=ntwsSysCpuInstantLoad, ntwsSysCpuMemoryLast3DaysUsage=ntwsSysCpuMemoryLast3DaysUsage, ntwsSysCpuMemorySize=ntwsSysCpuMemorySize, ntwsSysCpuMemoryUsageDetail=ntwsSysCpuMemoryUsageDetail, ntwsSysCpuLast3DaysLoad=ntwsSysCpuLast3DaysLoad, ntwsSysFlashMemoryUsedBytes=ntwsSysFlashMemoryUsedBytes, ntwsSysCpuMemoryInstantUsage=ntwsSysCpuMemoryInstantUsage, ntwsSysChasCompPowerSupplies=ntwsSysChasCompPowerSupplies, ntwsSysChassisComponents=ntwsSysChassisComponents, ntwsSysPowerSupplyEntry=ntwsSysPowerSupplyEntry, ntwsSysCpuLastMinuteLoad=ntwsSysCpuLastMinuteLoad, ntwsSysCpuMemoryLastDayUsage=ntwsSysCpuMemoryLastDayUsage, ntwsSysDataObjects=ntwsSysDataObjects, ntwsSystemMib=ntwsSystemMib, ntwsSysNumPowerSuppliesSupported=ntwsSysNumPowerSuppliesSupported)
