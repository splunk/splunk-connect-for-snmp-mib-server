#
# PySNMP MIB module DNOS-PORTSECURITY-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNOS-PORTSECURITY-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:37:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
dnOS, = mibBuilder.importSymbols("DELL-REF-MIB", "dnOS")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter64, IpAddress, NotificationType, Bits, MibIdentifier, iso, ObjectIdentity, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "IpAddress", "NotificationType", "Bits", "MibIdentifier", "iso", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32", "Integer32")
RowStatus, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "DisplayString", "TextualConvention")
fastPathPortSecurity = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20))
fastPathPortSecurity.setRevisions(('2011-01-26 00:00', '2007-05-23 00:00',))
if mibBuilder.loadTexts: fastPathPortSecurity.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: fastPathPortSecurity.setOrganization('Dell, Inc.')
agentPortSecurityGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1))
agentGlobalPortSecurityMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGlobalPortSecurityMode.setStatus('current')
agentPortSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2), )
if mibBuilder.loadTexts: agentPortSecurityTable.setStatus('current')
agentPortSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentPortSecurityEntry.setStatus('current')
agentPortSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSecurityMode.setStatus('current')
agentPortSecurityDynamicLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSecurityDynamicLimit.setStatus('current')
agentPortSecurityStaticLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSecurityStaticLimit.setStatus('current')
agentPortSecurityViolationTrapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSecurityViolationTrapMode.setStatus('current')
agentPortSecurityStaticMACs = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortSecurityStaticMACs.setStatus('current')
agentPortSecurityLastDiscardedMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortSecurityLastDiscardedMAC.setStatus('current')
agentPortSecurityMACAddressAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSecurityMACAddressAdd.setStatus('current')
agentPortSecurityMACAddressRemove = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSecurityMACAddressRemove.setStatus('current')
agentPortSecurityMACAddressMove = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSecurityMACAddressMove.setStatus('current')
agentPortSecurityStickyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSecurityStickyMode.setStatus('current')
agentPortSecurityDynamicTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 3), )
if mibBuilder.loadTexts: agentPortSecurityDynamicTable.setStatus('current')
agentPortSecurityDynamicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DNOS-PORTSECURITY-PRIVATE-MIB", "agentPortSecurityDynamicVLANId"), (0, "DNOS-PORTSECURITY-PRIVATE-MIB", "agentPortSecurityDynamicMACAddress"))
if mibBuilder.loadTexts: agentPortSecurityDynamicEntry.setStatus('current')
agentPortSecurityDynamicVLANId = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortSecurityDynamicVLANId.setStatus('current')
agentPortSecurityDynamicMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortSecurityDynamicMACAddress.setStatus('current')
agentGlobalPortSecurityStickyMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGlobalPortSecurityStickyMode.setStatus('current')
agentGlobalPortSecurityViolationTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGlobalPortSecurityViolationTrapMode.setStatus('current')
agentPortSecurityTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 2))
agentPortSecurityViolation = NotificationType((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 20, 2, 1)).setObjects(("IF-MIB", "ifIndex"), ("DNOS-PORTSECURITY-PRIVATE-MIB", "agentPortSecurityLastDiscardedMAC"))
if mibBuilder.loadTexts: agentPortSecurityViolation.setStatus('current')
mibBuilder.exportSymbols("DNOS-PORTSECURITY-PRIVATE-MIB", agentPortSecurityDynamicLimit=agentPortSecurityDynamicLimit, agentPortSecurityStickyMode=agentPortSecurityStickyMode, agentPortSecurityTable=agentPortSecurityTable, agentPortSecurityGroup=agentPortSecurityGroup, agentPortSecurityDynamicVLANId=agentPortSecurityDynamicVLANId, agentPortSecurityMACAddressAdd=agentPortSecurityMACAddressAdd, agentPortSecurityMode=agentPortSecurityMode, agentPortSecurityMACAddressRemove=agentPortSecurityMACAddressRemove, agentPortSecurityViolation=agentPortSecurityViolation, agentPortSecurityTraps=agentPortSecurityTraps, PYSNMP_MODULE_ID=fastPathPortSecurity, agentGlobalPortSecurityMode=agentGlobalPortSecurityMode, agentPortSecurityStaticLimit=agentPortSecurityStaticLimit, agentGlobalPortSecurityViolationTrapMode=agentGlobalPortSecurityViolationTrapMode, agentPortSecurityViolationTrapMode=agentPortSecurityViolationTrapMode, agentPortSecurityDynamicTable=agentPortSecurityDynamicTable, agentPortSecurityMACAddressMove=agentPortSecurityMACAddressMove, agentPortSecurityDynamicEntry=agentPortSecurityDynamicEntry, agentGlobalPortSecurityStickyMode=agentGlobalPortSecurityStickyMode, fastPathPortSecurity=fastPathPortSecurity, agentPortSecurityEntry=agentPortSecurityEntry, agentPortSecurityDynamicMACAddress=agentPortSecurityDynamicMACAddress, agentPortSecurityLastDiscardedMAC=agentPortSecurityLastDiscardedMAC, agentPortSecurityStaticMACs=agentPortSecurityStaticMACs)
