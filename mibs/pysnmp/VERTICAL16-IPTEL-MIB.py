#
# PySNMP MIB module VERTICAL16-IPTEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VERTICAL16-IPTEL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:27:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, NotificationType, iso, Counter32, ObjectIdentity, TimeTicks, MibIdentifier, Unsigned32, IpAddress, Counter64, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "iso", "Counter32", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Unsigned32", "IpAddress", "Counter64", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vertical = MibIdentifier((1, 3, 6, 1, 4, 1, 2338))
iptel = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 16))
iptelTrunkSize = MibScalar((1, 3, 6, 1, 4, 1, 2338, 16, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iptelTrunkSize.setStatus('mandatory')
ipTelTrunkSummary = MibTable((1, 3, 6, 1, 4, 1, 2338, 16, 2), )
if mibBuilder.loadTexts: ipTelTrunkSummary.setStatus('mandatory')
ipTelTrunkInfo = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1), ).setIndexNames((0, "VERTICAL16-IPTEL-MIB", "TrunkIndex"))
if mibBuilder.loadTexts: ipTelTrunkInfo.setStatus('mandatory')
trunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trunkIndex.setStatus('mandatory')
trunkState = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("not-configured", 0), ("out-of-service", 1), ("initializing", 2), ("idle", 3), ("outgoing", 4), ("incoming", 5), ("connected", 6), ("disconnecting", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trunkState.setStatus('mandatory')
calledParty = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: calledParty.setStatus('mandatory')
callingParty = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callingParty.setStatus('mandatory')
remoteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteGateway.setStatus('mandatory')
localAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: localAlarmThreshold.setStatus('mandatory')
remoteAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteAlarmThreshold.setStatus('mandatory')
ipTelReconfigComplete = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,64)).setObjects(("VERTICAL16-IPTEL-MIB", "iptelTrunkSize"))
ipTelTrunkFailure = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,65)).setObjects(("VERTICAL16-IPTEL-MIB", "trunkIndex"))
ipTelTrunkAlarmInfo = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,66)).setObjects(("VERTICAL16-IPTEL-MIB", "trunkIndex"), ("VERTICAL16-IPTEL-MIB", "localAlarmThreshold"), ("VERTICAL16-IPTEL-MIB", "remoteAlarmThreshold"))
mibBuilder.exportSymbols("VERTICAL16-IPTEL-MIB", vertical=vertical, ipTelTrunkSummary=ipTelTrunkSummary, iptelTrunkSize=iptelTrunkSize, iptel=iptel, ipTelTrunkInfo=ipTelTrunkInfo, ipTelReconfigComplete=ipTelReconfigComplete, ipTelTrunkFailure=ipTelTrunkFailure, localAlarmThreshold=localAlarmThreshold, ipTelTrunkAlarmInfo=ipTelTrunkAlarmInfo, trunkIndex=trunkIndex, remoteGateway=remoteGateway, remoteAlarmThreshold=remoteAlarmThreshold, trunkState=trunkState, callingParty=callingParty, calledParty=calledParty)
