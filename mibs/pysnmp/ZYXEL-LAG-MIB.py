#
# PySNMP MIB module ZYXEL-LAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-LAG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:44:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Unsigned32, Bits, IpAddress, Counter32, Integer32, ObjectIdentity, NotificationType, MibIdentifier, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "Bits", "IpAddress", "Counter32", "Integer32", "ObjectIdentity", "NotificationType", "MibIdentifier", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelLinkAggregation = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42))
if mibBuilder.loadTexts: zyxelLinkAggregation.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelLinkAggregation.setOrganization('Enterprise Solution ZyXEL')
zyxelAggregationSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1))
zyxelAggregationStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 2))
zyAggregationState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyAggregationState.setStatus('current')
zyAggregationSysPriority = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyAggregationSysPriority.setStatus('current')
zyxelAggregationGroupTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 3), )
if mibBuilder.loadTexts: zyxelAggregationGroupTable.setStatus('current')
zyxelAggregationGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 3, 1), ).setIndexNames((0, "ZYXEL-LAG-MIB", "zyAggregationGroupIndex"))
if mibBuilder.loadTexts: zyxelAggregationGroupEntry.setStatus('current')
zyAggregationGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: zyAggregationGroupIndex.setStatus('current')
zyAggregationGroupState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 3, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyAggregationGroupState.setStatus('current')
zyAggregationGroupDynamicState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 3, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyAggregationGroupDynamicState.setStatus('current')
zyAggregationGroupCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("srcMac", 1), ("dstMac", 2), ("srcDstMac", 3), ("srcIp", 4), ("dstIp", 5), ("srcDstIp", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyAggregationGroupCriteria.setStatus('current')
zyxelAggregationPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 4), )
if mibBuilder.loadTexts: zyxelAggregationPortTable.setStatus('current')
zyxelAggregationPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 4, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelAggregationPortEntry.setStatus('current')
zyAggregationPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("none", 0), ("t1", 1), ("t2", 2), ("t3", 3), ("t4", 4), ("t5", 5), ("t6", 6), ("t7", 7), ("t8", 8), ("t9", 9), ("t10", 10), ("t11", 11), ("t12", 12), ("t13", 13), ("t14", 14), ("t15", 15), ("t16", 16), ("t17", 17), ("t18", 18), ("t19", 19), ("t20", 20), ("t21", 21), ("t22", 22), ("t23", 23), ("t24", 24)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyAggregationPortGroup.setStatus('current')
zyAggregationPortDynamicStateTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyAggregationPortDynamicStateTimeout.setStatus('current')
zyAggregationAutoLacpState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 1, 5), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyAggregationAutoLacpState.setStatus('current')
zyAggregationAutoLacpTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 2, 1), )
if mibBuilder.loadTexts: zyAggregationAutoLacpTable.setStatus('current')
zyAggregationAutoLacpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 2, 1, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyAggregationAutoLacpEntry.setStatus('current')
zyAggregationAutoLacpTrunkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("none", 0), ("t1", 1), ("t2", 2), ("t3", 3), ("t4", 4), ("t5", 5), ("t6", 6), ("t7", 7), ("t8", 8), ("t9", 9), ("t10", 10), ("t11", 11), ("t12", 12), ("t13", 13), ("t14", 14), ("t15", 15), ("t16", 16), ("t17", 17), ("t18", 18), ("t19", 19), ("t20", 20), ("t21", 21), ("t22", 22), ("t23", 23), ("t24", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyAggregationAutoLacpTrunkGroup.setStatus('current')
zyAggregationAutoLacpRemoteChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyAggregationAutoLacpRemoteChassisId.setStatus('current')
zyAggregationAutoLacpRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 42, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyAggregationAutoLacpRemotePort.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-LAG-MIB", zyAggregationAutoLacpState=zyAggregationAutoLacpState, zyAggregationAutoLacpTrunkGroup=zyAggregationAutoLacpTrunkGroup, zyAggregationGroupCriteria=zyAggregationGroupCriteria, zyxelAggregationStatus=zyxelAggregationStatus, zyxelAggregationGroupEntry=zyxelAggregationGroupEntry, zyxelAggregationGroupTable=zyxelAggregationGroupTable, zyAggregationGroupState=zyAggregationGroupState, zyAggregationGroupDynamicState=zyAggregationGroupDynamicState, zyxelAggregationSetup=zyxelAggregationSetup, zyAggregationSysPriority=zyAggregationSysPriority, zyAggregationPortGroup=zyAggregationPortGroup, zyxelLinkAggregation=zyxelLinkAggregation, PYSNMP_MODULE_ID=zyxelLinkAggregation, zyxelAggregationPortTable=zyxelAggregationPortTable, zyAggregationAutoLacpRemotePort=zyAggregationAutoLacpRemotePort, zyxelAggregationPortEntry=zyxelAggregationPortEntry, zyAggregationAutoLacpEntry=zyAggregationAutoLacpEntry, zyAggregationPortDynamicStateTimeout=zyAggregationPortDynamicStateTimeout, zyAggregationGroupIndex=zyAggregationGroupIndex, zyAggregationAutoLacpRemoteChassisId=zyAggregationAutoLacpRemoteChassisId, zyAggregationState=zyAggregationState, zyAggregationAutoLacpTable=zyAggregationAutoLacpTable)
