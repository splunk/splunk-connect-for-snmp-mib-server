#
# PySNMP MIB module CCTEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CCTEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:29:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
cctExt, = mibBuilder.importSymbols("APENT-MIB", "cctExt")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, TimeTicks, Unsigned32, iso, Counter64, MibIdentifier, NotificationType, Integer32, Gauge32, ModuleIdentity, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "TimeTicks", "Unsigned32", "iso", "Counter64", "MibIdentifier", "NotificationType", "Integer32", "Gauge32", "ModuleIdentity", "ObjectIdentity", "Bits")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
apCctExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 29, 1))
if mibBuilder.loadTexts: apCctExtMib.setLastUpdated('9710092000Z')
if mibBuilder.loadTexts: apCctExtMib.setOrganization('ArrowPoint Communications Inc.')
apCctTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2), )
if mibBuilder.loadTexts: apCctTable.setStatus('current')
apCctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1), ).setIndexNames((0, "CCTEXT-MIB", "apCctIfIndex"))
if mibBuilder.loadTexts: apCctEntry.setStatus('current')
apCctIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apCctIfIndex.setStatus('current')
apCctName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apCctName.setStatus('current')
apCctDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apCctDescription.setStatus('current')
apCctIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 18, 22, 23, 30, 32, 81, 82, 108, 1000, 1001))).clone(namedValues=NamedValues(("ethernet", 6), ("ds1", 18), ("console", 22), ("ppp", 23), ("ds3", 30), ("frameRelay", 32), ("ds0", 81), ("ds0Bundle", 82), ("pppMultilink", 108), ("tunnel", 1000), ("vlan", 1001)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apCctIfType.setStatus('current')
apCctState = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("down-ipDisabled", 0), ("active-ipDisabled", 1), ("down-ipEnabled", 2), ("active-ipEnabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apCctState.setStatus('current')
apCctLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apCctLinkCount.setStatus('current')
apCctAclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apCctAclIndex.setStatus('current')
apCctL2Redundancy = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apCctL2Redundancy.setStatus('current')
apCctIrdpUseLimitedBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apCctIrdpUseLimitedBcast.setStatus('current')
apCctIrdpMaxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1800)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apCctIrdpMaxInterval.setStatus('current')
apCctIrdpMinInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apCctIrdpMinInterval.setStatus('current')
apCctIrdpLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 29, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apCctIrdpLifetime.setStatus('current')
mibBuilder.exportSymbols("CCTEXT-MIB", apCctAclIndex=apCctAclIndex, apCctState=apCctState, apCctIfType=apCctIfType, PYSNMP_MODULE_ID=apCctExtMib, apCctExtMib=apCctExtMib, apCctLinkCount=apCctLinkCount, apCctIrdpUseLimitedBcast=apCctIrdpUseLimitedBcast, apCctIrdpMaxInterval=apCctIrdpMaxInterval, apCctTable=apCctTable, apCctIfIndex=apCctIfIndex, apCctEntry=apCctEntry, apCctIrdpLifetime=apCctIrdpLifetime, apCctL2Redundancy=apCctL2Redundancy, apCctName=apCctName, apCctIrdpMinInterval=apCctIrdpMinInterval, apCctDescription=apCctDescription)
