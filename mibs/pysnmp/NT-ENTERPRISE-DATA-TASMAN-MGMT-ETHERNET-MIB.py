#
# PySNMP MIB module NT-ENTERPRISE-DATA-TASMAN-MGMT-ETHERNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NT-ENTERPRISE-DATA-TASMAN-MGMT-ETHERNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:15:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ntEnterpriseDataTasmanInterfaces, = mibBuilder.importSymbols("NT-ENTERPRISE-DATA-MIB", "ntEnterpriseDataTasmanInterfaces")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Counter64, ModuleIdentity, iso, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, Unsigned32, ObjectIdentity, NotificationType, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "ModuleIdentity", "iso", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "Unsigned32", "ObjectIdentity", "NotificationType", "Bits", "TimeTicks")
TruthValue, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "DisplayString")
nnethernetMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4))
nnethernetMib.setRevisions(('1999-07-01 00:00',))
if mibBuilder.loadTexts: nnethernetMib.setLastUpdated('9907010000Z')
if mibBuilder.loadTexts: nnethernetMib.setOrganization('Nortel')
nnethernetTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1), )
if mibBuilder.loadTexts: nnethernetTable.setStatus('current')
nnethernetTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1), ).setIndexNames((0, "NT-ENTERPRISE-DATA-TASMAN-MGMT-ETHERNET-MIB", "nnethernetId"))
if mibBuilder.loadTexts: nnethernetTableEntry.setStatus('current')
nnethernetId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnethernetId.setStatus('deprecated')
nnethernetDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 25))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetDescr.setStatus('current')
nnethernetDhcpRelayServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetDhcpRelayServerAddr.setStatus('current')
nnethernetDhcpRelayGatewayAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetDhcpRelayGatewayAddr.setStatus('current')
nnethernetFailOverEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetFailOverEnable.setStatus('current')
nnethernetHoldDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 900)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetHoldDownTime.setStatus('current')
nnethernetIcmpRedirectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetIcmpRedirectEnable.setStatus('current')
nnethernetIcmpUnreachableEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetIcmpUnreachableEnable.setStatus('current')
nnethernetIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetIpAddr.setStatus('current')
nnethernetSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 10), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetSubnetMask.setStatus('current')
nnethernetIpDirectedBroadcastEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetIpDirectedBroadcastEnable.setStatus('current')
nnethernetIpMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pass", 1), ("block", 2), ("ospfrip2", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetIpMulticast.setStatus('current')
nnethernetMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 13), Integer32().clone(1500)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetMtu.setStatus('current')
nnethernetSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("speed-10MBPs", 1), ("speed-100MBPs", 2), ("speed-Auto", 3))).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetSpeed.setStatus('current')
nnethernetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half-duplex", 1), ("full-duplex", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetMode.setStatus('current')
nnethernetShutdownEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetShutdownEnable.setStatus('current')
nnethernetVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4098))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetVlanId.setStatus('current')
nnethernetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnethernetRowStatus.setStatus('current')
nnethernetDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 4, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnethernetDropPackets.setStatus('current')
mibBuilder.exportSymbols("NT-ENTERPRISE-DATA-TASMAN-MGMT-ETHERNET-MIB", nnethernetMode=nnethernetMode, nnethernetSpeed=nnethernetSpeed, nnethernetMtu=nnethernetMtu, nnethernetRowStatus=nnethernetRowStatus, nnethernetShutdownEnable=nnethernetShutdownEnable, nnethernetIcmpRedirectEnable=nnethernetIcmpRedirectEnable, nnethernetFailOverEnable=nnethernetFailOverEnable, nnethernetId=nnethernetId, nnethernetSubnetMask=nnethernetSubnetMask, nnethernetVlanId=nnethernetVlanId, nnethernetDescr=nnethernetDescr, nnethernetIcmpUnreachableEnable=nnethernetIcmpUnreachableEnable, nnethernetIpMulticast=nnethernetIpMulticast, nnethernetIpAddr=nnethernetIpAddr, nnethernetDropPackets=nnethernetDropPackets, PYSNMP_MODULE_ID=nnethernetMib, nnethernetTable=nnethernetTable, nnethernetHoldDownTime=nnethernetHoldDownTime, nnethernetDhcpRelayServerAddr=nnethernetDhcpRelayServerAddr, nnethernetTableEntry=nnethernetTableEntry, nnethernetMib=nnethernetMib, nnethernetDhcpRelayGatewayAddr=nnethernetDhcpRelayGatewayAddr, nnethernetIpDirectedBroadcastEnable=nnethernetIpDirectedBroadcastEnable)
