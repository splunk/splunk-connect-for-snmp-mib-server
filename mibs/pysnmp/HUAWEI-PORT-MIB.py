#
# PySNMP MIB module HUAWEI-PORT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-PORT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:36:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, iso, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, Integer32, ObjectIdentity, ModuleIdentity, IpAddress, MibIdentifier, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "Integer32", "ObjectIdentity", "ModuleIdentity", "IpAddress", "MibIdentifier", "NotificationType", "Bits")
TruthValue, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "RowStatus")
hwPortMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157))
if mibBuilder.loadTexts: hwPortMIB.setLastUpdated('200710210930Z')
if mibBuilder.loadTexts: hwPortMIB.setOrganization('Huawei Technologies Co.,Ltd.')
hwPortMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1))
hwEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1))
hwEthernetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1), )
if mibBuilder.loadTexts: hwEthernetTable.setStatus('current')
hwEthernetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1), ).setIndexNames((0, "HUAWEI-PORT-MIB", "hwEthernetIfIndex"))
if mibBuilder.loadTexts: hwEthernetEntry.setStatus('current')
hwEthernetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwEthernetIfIndex.setStatus('current')
hwEthernetLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("otherLoop", 1), ("stopLoopback", 2), ("local", 3), ("remote", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetLoopback.setStatus('current')
hwEthernetPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("copper", 2), ("fiber", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetPortType.setStatus('current')
hwEthernetSpeedSet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("speed10", 2), ("speed100", 3), ("speed1000", 4), ("speed10000", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetSpeedSet.setStatus('current')
hwEthernetDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full", 1), ("half", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetDuplex.setStatus('current')
hwEthernetNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 15), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetNegotiation.setStatus('current')
hwEthernetPortTypeOperate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("copper", 2), ("fiber100", 3), ("fiber1000", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetPortTypeOperate.setStatus('current')
hwEthernetClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetClock.setStatus('current')
hwEthernetFlagJ0Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("j01ByteMode", 1), ("j016ByteMode", 2), ("j064ByteOrNullMode", 3), ("peer", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetFlagJ0Mode.setStatus('current')
hwEthernetFlagJ0Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetFlagJ0Value.setStatus('current')
hwEthernetFlagJ0Trace = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetFlagJ0Trace.setStatus('current')
hwEthernetFlagJ1Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("j11ByteMode", 1), ("j116ByteMode", 2), ("j164ByteOrNullMode", 3), ("peer", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetFlagJ1Mode.setStatus('current')
hwEthernetFlagJ1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetFlagJ1Value.setStatus('current')
hwEthernetFlagJ1Trace = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetFlagJ1Trace.setStatus('current')
hwEthernetFlagC2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetFlagC2Value.setStatus('current')
hwEthernetUpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetUpHoldTime.setStatus('current')
hwEthernetDownHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetDownHoldTime.setStatus('current')
hwEthernetSubinterfaceStatisticEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 1, 1, 1, 33), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetSubinterfaceStatisticEnable.setStatus('current')
hwPos = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2))
hwPosTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1), )
if mibBuilder.loadTexts: hwPosTable.setStatus('current')
hwPosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-PORT-MIB", "hwPosIfIndex"))
if mibBuilder.loadTexts: hwPosEntry.setStatus('current')
hwPosIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwPosIfIndex.setStatus('current')
hwPosLinkProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ietf", 1), ("nonstandard", 2), ("hdlc", 3), ("ppp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosLinkProtocol.setStatus('current')
hwPosFrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sonet", 1), ("sdh", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosFrameFormat.setStatus('current')
hwPosLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("otherLoop", 1), ("stopLoopback", 2), ("local", 3), ("remote", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosLoopback.setStatus('current')
hwPosScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 14), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosScramble.setStatus('current')
hwPosClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosClock.setStatus('current')
hwPosCrcVerifyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc16", 1), ("crc32", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosCrcVerifyCode.setStatus('current')
hwPosFlagJ0Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("j01ByteMode", 1), ("j016ByteMode", 2), ("j064ByteOrNullMode", 3), ("peer", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosFlagJ0Mode.setStatus('current')
hwPosFlagJ0Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosFlagJ0Value.setStatus('current')
hwPosFlagJ0Trace = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosFlagJ0Trace.setStatus('current')
hwPosFlagJ1Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("j11ByteMode", 1), ("j116ByteMode", 2), ("j164ByteOrNullMode", 3), ("peer", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosFlagJ1Mode.setStatus('current')
hwPosFlagJ1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosFlagJ1Value.setStatus('current')
hwPosFlagJ1Trace = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosFlagJ1Trace.setStatus('current')
hwPosFlagC2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 2, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPosFlagC2Value.setStatus('current')
hwCpos = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3))
hwCposTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1), )
if mibBuilder.loadTexts: hwCposTable.setStatus('current')
hwCposEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1), ).setIndexNames((0, "HUAWEI-PORT-MIB", "hwCposIfIndex"))
if mibBuilder.loadTexts: hwCposEntry.setStatus('current')
hwCposIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwCposIfIndex.setStatus('current')
hwCposClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposClock.setStatus('current')
hwCposIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stm1", 1), ("stm16", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposIfType.setStatus('current')
hwCposFrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sonet", 1), ("sdh", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposFrameFormat.setStatus('current')
hwCposMultiplex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("au3", 1), ("au4", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposMultiplex.setStatus('current')
hwCposLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("otherloop", 1), ("stopLoopback", 2), ("local", 3), ("remote", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposLoopback.setStatus('current')
hwCposFlagJ0Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("j01ByteMode", 1), ("j016ByteMode", 2), ("j064ByteOrNullMode", 3), ("peer", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposFlagJ0Mode.setStatus('current')
hwCposFlagJ0Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposFlagJ0Value.setStatus('current')
hwCposFlagJ0Trace = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposFlagJ0Trace.setStatus('current')
hwCposFlagJ1Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("j11ByteMode", 1), ("j116ByteMode", 2), ("j164ByteOrNullMode", 3), ("peer", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposFlagJ1Mode.setStatus('current')
hwCposFlagJ1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposFlagJ1Value.setStatus('current')
hwCposFlagJ1Trace = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposFlagJ1Trace.setStatus('current')
hwCposFlagC2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 3, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCposFlagC2Value.setStatus('current')
hwDs0ChannelBundle = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4))
hwDs0ChannelBundleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4, 1), )
if mibBuilder.loadTexts: hwDs0ChannelBundleTable.setStatus('current')
hwDs0ChannelBundleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4, 1, 1), ).setIndexNames((0, "HUAWEI-PORT-MIB", "hwDs0ChannelBundleParentIfIndex"), (0, "HUAWEI-PORT-MIB", "hwDs0ChannelBundleDs1ChannelId"), (0, "HUAWEI-PORT-MIB", "hwDs0ChannelBundleId"))
if mibBuilder.loadTexts: hwDs0ChannelBundleEntry.setStatus('current')
hwDs0ChannelBundleParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwDs0ChannelBundleParentIfIndex.setStatus('current')
hwDs0ChannelBundleDs1ChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: hwDs0ChannelBundleDs1ChannelId.setStatus('current')
hwDs0ChannelBundleId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)))
if mibBuilder.loadTexts: hwDs0ChannelBundleId.setStatus('current')
hwDs0ChannelBundleIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4, 1, 1, 11), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs0ChannelBundleIfIndex.setStatus('current')
hwDs0ChannelBundleTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 61))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs0ChannelBundleTimeSlots.setStatus('current')
hwDs0ChannelBundleSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("s56", 1), ("s64", 2))).clone(64)).setUnits('kilo bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs0ChannelBundleSpeed.setStatus('current')
hwDs0ChannelBundleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 4, 1, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs0ChannelBundleRowStatus.setStatus('current')
hwDs1 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5))
hwDs1Table = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1), )
if mibBuilder.loadTexts: hwDs1Table.setStatus('current')
hwDs1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1), ).setIndexNames((0, "HUAWEI-PORT-MIB", "hwDs1ParentIfIndex"), (0, "HUAWEI-PORT-MIB", "hwDs1ChannelId"), (0, "HUAWEI-PORT-MIB", "hwDs1IfIndex"))
if mibBuilder.loadTexts: hwDs1Entry.setStatus('current')
hwDs1ParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwDs1ParentIfIndex.setStatus('current')
hwDs1ChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: hwDs1ChannelId.setStatus('current')
hwDs1IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: hwDs1IfIndex.setStatus('current')
hwDs1ChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs1ChannelType.setStatus('current')
hwDs1IfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("e3", 1), ("t3", 2), ("cpos", 3), ("atm", 4), ("none", 255))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs1IfType.setStatus('current')
hwDs1Channelized = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 13), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs1Channelized.setStatus('current')
hwDs1CodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ami", 1), ("hdb3", 2), ("b8zs", 3))).clone('hdb3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs1CodeType.setStatus('current')
hwDs1Clock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs1Clock.setStatus('current')
hwDs1FrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("esf", 1), ("sf", 2), ("noCrc4", 3), ("crc", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs1FrameFormat.setStatus('current')
hwDs1Cable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("long", 1), ("short", 2))).clone('short')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs1Cable.setStatus('current')
hwDs1Loopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("payload", 3), ("cell", 4), ("none", 255))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs1Loopback.setStatus('current')
hwDs1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 5, 1, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs1RowStatus.setStatus('current')
hwDs3 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6))
hwDs3Table = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1), )
if mibBuilder.loadTexts: hwDs3Table.setStatus('current')
hwDs3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1), ).setIndexNames((0, "HUAWEI-PORT-MIB", "hwDs3ParentIfIndex"), (0, "HUAWEI-PORT-MIB", "hwDs3ChannelId"), (0, "HUAWEI-PORT-MIB", "hwDs3IfIndex"))
if mibBuilder.loadTexts: hwDs3Entry.setStatus('current')
hwDs3ParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwDs3ParentIfIndex.setStatus('current')
hwDs3ChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: hwDs3ChannelId.setStatus('current')
hwDs3IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: hwDs3IfIndex.setStatus('current')
hwDs3ChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t3", 1), ("e3", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3ChannelType.setStatus('current')
hwDs3IfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("cpos", 1), ("none", 255))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3IfType.setStatus('current')
hwDs3Channelized = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 13), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3Channelized.setStatus('current')
hwDs3Clock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3Clock.setStatus('current')
hwDs3FrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("g832Adm", 1), ("g751Adm", 2), ("g751Plcp", 3), ("cbitAdm", 4), ("cbitPlcp", 5), ("m23Adm", 6), ("m23Plcp", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3FrameFormat.setStatus('current')
hwDs3Scramble = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3Scramble.setStatus('current')
hwDs3Cable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("long", 1), ("short", 2))).clone('short')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3Cable.setStatus('current')
hwDs3NationalBit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("n0", 1), ("n1", 2))).clone('n0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3NationalBit.setStatus('current')
hwDs3Loopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("payload", 3), ("cell", 4), ("none", 255))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3Loopback.setStatus('current')
hwDs3CreateSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 20), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3CreateSerial.setStatus('current')
hwDs3RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 6, 1, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDs3RowStatus.setStatus('current')
hwBundleSerial = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 7))
hwBundleSerialTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 7, 1), )
if mibBuilder.loadTexts: hwBundleSerialTable.setStatus('current')
hwBundleSerialEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 7, 1, 1), ).setIndexNames((0, "HUAWEI-PORT-MIB", "hwBundleSerialIfIndex"))
if mibBuilder.loadTexts: hwBundleSerialEntry.setStatus('current')
hwBundleSerialIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 7, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwBundleSerialIfIndex.setStatus('current')
hwBundleSerialLinkProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ietf", 1), ("nonstandard", 2), ("hdlc", 3), ("ppp", 4), ("lapb", 5), ("atm", 6), ("tdm", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBundleSerialLinkProtocol.setStatus('current')
hwBundleSerialTimerHold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBundleSerialTimerHold.setStatus('current')
hwBundleSerialLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 7, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBundleSerialLoopback.setStatus('current')
hwBundleSerialCrcVerifyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 1, 7, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc16", 1), ("crc32", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBundleSerialCrcVerifyCode.setStatus('current')
hwPortConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11))
hwPortCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 1))
hwPortCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 1, 1)).setObjects(("HUAWEI-PORT-MIB", "hwEthernetObjectGroup"), ("HUAWEI-PORT-MIB", "hwPosObjectGroup"), ("HUAWEI-PORT-MIB", "hwCposObjectGroup"), ("HUAWEI-PORT-MIB", "hwBundleSerialObjectGroup"), ("HUAWEI-PORT-MIB", "hwDs0ChannelBundleObjectGroup"), ("HUAWEI-PORT-MIB", "hwDs1ObjectGroup"), ("HUAWEI-PORT-MIB", "hwDs3ObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPortCompliance = hwPortCompliance.setStatus('current')
hwPortGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 2))
hwEthernetObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 2, 1)).setObjects(("HUAWEI-PORT-MIB", "hwEthernetLoopback"), ("HUAWEI-PORT-MIB", "hwEthernetPortType"), ("HUAWEI-PORT-MIB", "hwEthernetSpeedSet"), ("HUAWEI-PORT-MIB", "hwEthernetDuplex"), ("HUAWEI-PORT-MIB", "hwEthernetNegotiation"), ("HUAWEI-PORT-MIB", "hwEthernetPortTypeOperate"), ("HUAWEI-PORT-MIB", "hwEthernetClock"), ("HUAWEI-PORT-MIB", "hwEthernetFlagJ0Mode"), ("HUAWEI-PORT-MIB", "hwEthernetFlagJ0Value"), ("HUAWEI-PORT-MIB", "hwEthernetFlagJ0Trace"), ("HUAWEI-PORT-MIB", "hwEthernetFlagJ1Mode"), ("HUAWEI-PORT-MIB", "hwEthernetFlagJ1Value"), ("HUAWEI-PORT-MIB", "hwEthernetFlagJ1Trace"), ("HUAWEI-PORT-MIB", "hwEthernetFlagC2Value"), ("HUAWEI-PORT-MIB", "hwEthernetUpHoldTime"), ("HUAWEI-PORT-MIB", "hwEthernetDownHoldTime"), ("HUAWEI-PORT-MIB", "hwEthernetSubinterfaceStatisticEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetObjectGroup = hwEthernetObjectGroup.setStatus('current')
hwPosObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 2, 2)).setObjects(("HUAWEI-PORT-MIB", "hwPosLinkProtocol"), ("HUAWEI-PORT-MIB", "hwPosFrameFormat"), ("HUAWEI-PORT-MIB", "hwPosLoopback"), ("HUAWEI-PORT-MIB", "hwPosScramble"), ("HUAWEI-PORT-MIB", "hwPosClock"), ("HUAWEI-PORT-MIB", "hwPosCrcVerifyCode"), ("HUAWEI-PORT-MIB", "hwPosFlagJ0Mode"), ("HUAWEI-PORT-MIB", "hwPosFlagJ0Value"), ("HUAWEI-PORT-MIB", "hwPosFlagJ0Trace"), ("HUAWEI-PORT-MIB", "hwPosFlagJ1Mode"), ("HUAWEI-PORT-MIB", "hwPosFlagJ1Value"), ("HUAWEI-PORT-MIB", "hwPosFlagJ1Trace"), ("HUAWEI-PORT-MIB", "hwPosFlagC2Value"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPosObjectGroup = hwPosObjectGroup.setStatus('current')
hwCposObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 2, 3)).setObjects(("HUAWEI-PORT-MIB", "hwCposFrameFormat"), ("HUAWEI-PORT-MIB", "hwCposMultiplex"), ("HUAWEI-PORT-MIB", "hwCposClock"), ("HUAWEI-PORT-MIB", "hwCposIfType"), ("HUAWEI-PORT-MIB", "hwCposLoopback"), ("HUAWEI-PORT-MIB", "hwCposFlagJ0Mode"), ("HUAWEI-PORT-MIB", "hwCposFlagJ0Value"), ("HUAWEI-PORT-MIB", "hwCposFlagJ0Trace"), ("HUAWEI-PORT-MIB", "hwCposFlagJ1Mode"), ("HUAWEI-PORT-MIB", "hwCposFlagJ1Value"), ("HUAWEI-PORT-MIB", "hwCposFlagJ1Trace"), ("HUAWEI-PORT-MIB", "hwCposFlagC2Value"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCposObjectGroup = hwCposObjectGroup.setStatus('current')
hwDs0ChannelBundleObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 2, 4)).setObjects(("HUAWEI-PORT-MIB", "hwDs0ChannelBundleIfIndex"), ("HUAWEI-PORT-MIB", "hwDs0ChannelBundleTimeSlots"), ("HUAWEI-PORT-MIB", "hwDs0ChannelBundleSpeed"), ("HUAWEI-PORT-MIB", "hwDs0ChannelBundleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDs0ChannelBundleObjectGroup = hwDs0ChannelBundleObjectGroup.setStatus('current')
hwDs1ObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 2, 5)).setObjects(("HUAWEI-PORT-MIB", "hwDs1ChannelType"), ("HUAWEI-PORT-MIB", "hwDs1IfType"), ("HUAWEI-PORT-MIB", "hwDs1Channelized"), ("HUAWEI-PORT-MIB", "hwDs1CodeType"), ("HUAWEI-PORT-MIB", "hwDs1Clock"), ("HUAWEI-PORT-MIB", "hwDs1FrameFormat"), ("HUAWEI-PORT-MIB", "hwDs1Cable"), ("HUAWEI-PORT-MIB", "hwDs1Loopback"), ("HUAWEI-PORT-MIB", "hwDs1RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDs1ObjectGroup = hwDs1ObjectGroup.setStatus('current')
hwDs3ObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 2, 6)).setObjects(("HUAWEI-PORT-MIB", "hwDs3ChannelType"), ("HUAWEI-PORT-MIB", "hwDs3IfType"), ("HUAWEI-PORT-MIB", "hwDs3Channelized"), ("HUAWEI-PORT-MIB", "hwDs3Clock"), ("HUAWEI-PORT-MIB", "hwDs3FrameFormat"), ("HUAWEI-PORT-MIB", "hwDs3Scramble"), ("HUAWEI-PORT-MIB", "hwDs3Cable"), ("HUAWEI-PORT-MIB", "hwDs3NationalBit"), ("HUAWEI-PORT-MIB", "hwDs3Loopback"), ("HUAWEI-PORT-MIB", "hwDs3CreateSerial"), ("HUAWEI-PORT-MIB", "hwDs3RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDs3ObjectGroup = hwDs3ObjectGroup.setStatus('current')
hwBundleSerialObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 157, 11, 2, 7)).setObjects(("HUAWEI-PORT-MIB", "hwBundleSerialLinkProtocol"), ("HUAWEI-PORT-MIB", "hwBundleSerialTimerHold"), ("HUAWEI-PORT-MIB", "hwBundleSerialCrcVerifyCode"), ("HUAWEI-PORT-MIB", "hwBundleSerialLoopback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBundleSerialObjectGroup = hwBundleSerialObjectGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-PORT-MIB", hwEthernetEntry=hwEthernetEntry, hwEthernetDuplex=hwEthernetDuplex, hwDs3FrameFormat=hwDs3FrameFormat, hwPosClock=hwPosClock, hwCposObjectGroup=hwCposObjectGroup, hwDs0ChannelBundleSpeed=hwDs0ChannelBundleSpeed, hwDs1IfType=hwDs1IfType, hwDs3ObjectGroup=hwDs3ObjectGroup, hwCposClock=hwCposClock, hwDs1ChannelId=hwDs1ChannelId, hwDs3Scramble=hwDs3Scramble, hwEthernetFlagJ0Value=hwEthernetFlagJ0Value, hwBundleSerialEntry=hwBundleSerialEntry, hwEthernetUpHoldTime=hwEthernetUpHoldTime, hwPortCompliance=hwPortCompliance, hwPosTable=hwPosTable, hwCposFlagJ1Mode=hwCposFlagJ1Mode, hwEthernetSpeedSet=hwEthernetSpeedSet, hwPosFrameFormat=hwPosFrameFormat, hwDs3IfType=hwDs3IfType, hwDs0ChannelBundleIfIndex=hwDs0ChannelBundleIfIndex, hwPortGroups=hwPortGroups, hwDs1ChannelType=hwDs1ChannelType, hwDs3ChannelId=hwDs3ChannelId, hwEthernetPortType=hwEthernetPortType, hwPosLoopback=hwPosLoopback, hwCposFlagC2Value=hwCposFlagC2Value, hwCpos=hwCpos, hwBundleSerialIfIndex=hwBundleSerialIfIndex, hwDs0ChannelBundleTable=hwDs0ChannelBundleTable, hwBundleSerial=hwBundleSerial, hwDs1ObjectGroup=hwDs1ObjectGroup, hwDs0ChannelBundleObjectGroup=hwDs0ChannelBundleObjectGroup, hwDs3IfIndex=hwDs3IfIndex, hwPosIfIndex=hwPosIfIndex, hwDs1FrameFormat=hwDs1FrameFormat, hwPos=hwPos, hwCposIfIndex=hwCposIfIndex, hwDs0ChannelBundleTimeSlots=hwDs0ChannelBundleTimeSlots, hwPortCompliances=hwPortCompliances, hwEthernetFlagJ1Trace=hwEthernetFlagJ1Trace, hwBundleSerialLinkProtocol=hwBundleSerialLinkProtocol, hwDs0ChannelBundleId=hwDs0ChannelBundleId, hwPosFlagJ0Trace=hwPosFlagJ0Trace, hwDs3ParentIfIndex=hwDs3ParentIfIndex, hwEthernetFlagJ0Mode=hwEthernetFlagJ0Mode, hwDs0ChannelBundleParentIfIndex=hwDs0ChannelBundleParentIfIndex, hwDs1IfIndex=hwDs1IfIndex, hwDs3ChannelType=hwDs3ChannelType, hwPortMIBObjects=hwPortMIBObjects, hwDs3Entry=hwDs3Entry, hwDs3=hwDs3, hwPosFlagJ0Mode=hwPosFlagJ0Mode, hwDs1ParentIfIndex=hwDs1ParentIfIndex, hwDs1Cable=hwDs1Cable, hwDs0ChannelBundleRowStatus=hwDs0ChannelBundleRowStatus, hwDs3Clock=hwDs3Clock, hwDs3Channelized=hwDs3Channelized, hwCposFlagJ0Trace=hwCposFlagJ0Trace, hwEthernet=hwEthernet, hwPosObjectGroup=hwPosObjectGroup, PYSNMP_MODULE_ID=hwPortMIB, hwPosFlagC2Value=hwPosFlagC2Value, hwCposTable=hwCposTable, hwEthernetLoopback=hwEthernetLoopback, hwDs3NationalBit=hwDs3NationalBit, hwEthernetPortTypeOperate=hwEthernetPortTypeOperate, hwDs1RowStatus=hwDs1RowStatus, hwDs3CreateSerial=hwDs3CreateSerial, hwEthernetFlagJ1Mode=hwEthernetFlagJ1Mode, hwPosFlagJ0Value=hwPosFlagJ0Value, hwCposFrameFormat=hwCposFrameFormat, hwDs1Entry=hwDs1Entry, hwCposIfType=hwCposIfType, hwDs1Table=hwDs1Table, hwCposFlagJ0Mode=hwCposFlagJ0Mode, hwPortMIB=hwPortMIB, hwDs0ChannelBundle=hwDs0ChannelBundle, hwEthernetSubinterfaceStatisticEnable=hwEthernetSubinterfaceStatisticEnable, hwDs0ChannelBundleEntry=hwDs0ChannelBundleEntry, hwBundleSerialTable=hwBundleSerialTable, hwPosEntry=hwPosEntry, hwBundleSerialObjectGroup=hwBundleSerialObjectGroup, hwEthernetFlagC2Value=hwEthernetFlagC2Value, hwPosCrcVerifyCode=hwPosCrcVerifyCode, hwCposFlagJ0Value=hwCposFlagJ0Value, hwDs3Loopback=hwDs3Loopback, hwPosLinkProtocol=hwPosLinkProtocol, hwCposFlagJ1Trace=hwCposFlagJ1Trace, hwDs1CodeType=hwDs1CodeType, hwEthernetIfIndex=hwEthernetIfIndex, hwEthernetNegotiation=hwEthernetNegotiation, hwDs3RowStatus=hwDs3RowStatus, hwDs0ChannelBundleDs1ChannelId=hwDs0ChannelBundleDs1ChannelId, hwBundleSerialTimerHold=hwBundleSerialTimerHold, hwPosFlagJ1Value=hwPosFlagJ1Value, hwDs1=hwDs1, hwDs1Loopback=hwDs1Loopback, hwDs1Clock=hwDs1Clock, hwDs1Channelized=hwDs1Channelized, hwEthernetClock=hwEthernetClock, hwPosFlagJ1Trace=hwPosFlagJ1Trace, hwCposFlagJ1Value=hwCposFlagJ1Value, hwDs3Table=hwDs3Table, hwBundleSerialLoopback=hwBundleSerialLoopback, hwCposMultiplex=hwCposMultiplex, hwPortConformance=hwPortConformance, hwEthernetObjectGroup=hwEthernetObjectGroup, hwPosFlagJ1Mode=hwPosFlagJ1Mode, hwPosScramble=hwPosScramble, hwCposLoopback=hwCposLoopback, hwEthernetDownHoldTime=hwEthernetDownHoldTime, hwBundleSerialCrcVerifyCode=hwBundleSerialCrcVerifyCode, hwDs3Cable=hwDs3Cable, hwEthernetTable=hwEthernetTable, hwCposEntry=hwCposEntry, hwEthernetFlagJ0Trace=hwEthernetFlagJ0Trace, hwEthernetFlagJ1Value=hwEthernetFlagJ1Value)
