#
# PySNMP MIB module SECURITY-MANAGEMENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SECURITY-MANAGEMENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:53:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
avEntPhySeverity, = mibBuilder.importSymbols("AVAYA-ENTITY-MIB", "avEntPhySeverity")
lsg, = mibBuilder.importSymbols("AVAYAGEN-MIB", "lsg")
cmgTrapOnIccMissing, cmgTrapSubsystem, cmgTrapModule, cmgTrapOnBoard, cmgTrapLocation = mibBuilder.importSymbols("G700-MG-MIB", "cmgTrapOnIccMissing", "cmgTrapSubsystem", "cmgTrapModule", "cmgTrapOnBoard", "cmgTrapLocation")
ifType, ifPhysAddress, ifName, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifType", "ifPhysAddress", "ifName", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
genAppFileName, genOpLastFailureDisplay, genAppFileId, genAppFileVersionNumber = mibBuilder.importSymbols("LOAD-MIB", "genAppFileName", "genOpLastFailureDisplay", "genAppFileId", "genAppFileVersionNumber")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, Bits, NotificationType, ObjectIdentity, TimeTicks, Gauge32, Counter32, Counter64, Unsigned32, Integer32, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "Bits", "NotificationType", "ObjectIdentity", "TimeTicks", "Gauge32", "Counter32", "Counter64", "Unsigned32", "Integer32", "iso", "MibIdentifier")
TextualConvention, DateAndTime, PhysAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "PhysAddress", "DisplayString")
secMngModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1))
secMngModule.setRevisions(('2006-03-13 18:49', '2005-11-23 13:21', '2005-01-11 16:54', '2005-03-02 16:02', '2005-04-20 16:06', '2006-02-27 19:16', '2010-03-23 10:45',))
if mibBuilder.loadTexts: secMngModule.setLastUpdated('201003231045Z')
if mibBuilder.loadTexts: secMngModule.setOrganization('Avaya')
class OnOffType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("on", 1), ("off", 2))

class ServiceStateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("on", 1), ("off", 2), ("notSupported", 3))

avayaSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14))
secMode = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 1), OnOffType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secMode.setStatus('current')
secTcpSynCookies = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 2))
secTcpSynCkiOpState = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 2, 1), OnOffType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secTcpSynCkiOpState.setStatus('current')
secTcpSynCkiCfgState = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 2, 2), OnOffType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secTcpSynCkiCfgState.setStatus('current')
secMngProtoTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 3), )
if mibBuilder.loadTexts: secMngProtoTable.setStatus('current')
secMngProtoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 3, 1), ).setIndexNames((0, "SECURITY-MANAGEMENT-MIB", "secMngProtoId"))
if mibBuilder.loadTexts: secMngProtoEntry.setStatus('current')
secMngProtoId = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("scpConfigFiles", 1), ("scpImageFiles", 2), ("ssh", 3), ("telnet", 4), ("snmpv3", 5), ("http", 6), ("https", 7), ("telnetClient", 8), ("icmpRedirection", 9), ("icmp", 10), ("recoveryPassword", 11), ("sshClient", 12), ("snmpv1", 13), ("icmpEcho", 14), ("ftpClient", 15), ("tftp", 16), ("dhcp", 17), ("dnsResolver", 18), ("scpClient", 19), ("tftpClient", 20), ("telnetServices", 21), ("dnsRelay", 22), ("arpInspection", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: secMngProtoId.setStatus('current')
secMngProtoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 3, 1, 2), ServiceStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secMngProtoStatus.setStatus('current')
secMngConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 4))
secMngGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 4, 1))
secMngBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 4, 1, 1)).setObjects(("SECURITY-MANAGEMENT-MIB", "secMode"), ("SECURITY-MANAGEMENT-MIB", "secMngProtoId"), ("SECURITY-MANAGEMENT-MIB", "secMngProtoStatus"), ("SECURITY-MANAGEMENT-MIB", "secTcpSynCkiOpState"), ("SECURITY-MANAGEMENT-MIB", "secTcpSynCkiCfgState"), ("SECURITY-MANAGEMENT-MIB", "fipsEnhancedSecurityFlg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    secMngBasicGroup = secMngBasicGroup.setStatus('current')
secMngCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 4, 2))
lsgLicManagement = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5))
if mibBuilder.loadTexts: lsgLicManagement.setStatus('current')
lsgLicMngTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 1), )
if mibBuilder.loadTexts: lsgLicMngTable.setStatus('current')
lsgLicMngEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 1, 1), ).setIndexNames((0, "SECURITY-MANAGEMENT-MIB", "lsgLicMngFeatureKeyword"))
if mibBuilder.loadTexts: lsgLicMngEntry.setStatus('current')
lsgLicMngFeatureKeyword = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 1, 1, 1), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: lsgLicMngFeatureKeyword.setStatus('current')
lsgLicMngFeatureType = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onOffFeature", 1), ("quantifiableFeature", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lsgLicMngFeatureType.setStatus('current')
lsgLicMngAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 1, 1, 3), OnOffType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lsgLicMngAdminStatus.setStatus('current')
lsgLicMngOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 1, 1, 4), OnOffType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lsgLicMngOperStatus.setStatus('current')
lsgLicMngCountedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lsgLicMngCountedValue.setStatus('current')
lsgLicMngLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("licNoError", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lsgLicMngLastError.setStatus('current')
lsgLicMngConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 20))
if mibBuilder.loadTexts: lsgLicMngConformance.setStatus('current')
lsgLicMngGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 20, 1))
if mibBuilder.loadTexts: lsgLicMngGroups.setStatus('current')
lsgLicMngBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 5, 20, 1, 1)).setObjects(("SECURITY-MANAGEMENT-MIB", "lsgLicMngFeatureKeyword"), ("SECURITY-MANAGEMENT-MIB", "lsgLicMngFeatureType"), ("SECURITY-MANAGEMENT-MIB", "lsgLicMngAdminStatus"), ("SECURITY-MANAGEMENT-MIB", "lsgLicMngOperStatus"), ("SECURITY-MANAGEMENT-MIB", "lsgLicMngCountedValue"), ("SECURITY-MANAGEMENT-MIB", "lsgLicMngLastError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lsgLicMngBasicGroup = lsgLicMngBasicGroup.setStatus('current')
fips140 = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 6))
if mibBuilder.loadTexts: fips140.setStatus('current')
fipsEnhancedSecurityFlg = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 6, 1), OnOffType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fipsEnhancedSecurityFlg.setStatus('current')
avMssNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7))
if mibBuilder.loadTexts: avMssNotifications.setStatus('current')
avMssNotificationPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 0))
if mibBuilder.loadTexts: avMssNotificationPrefix.setStatus('current')
avMSSDenialOfService = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 0, 1)).setObjects(("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsDoSType"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsSrcAddr"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsDstAddr"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsDstPort"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsCount"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsIpProtocol"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsSrcMACAddr"))
if mibBuilder.loadTexts: avMSSDenialOfService.setStatus('current')
avMSSNotificationRate = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 28800)).clone(300)).setUnits('Second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: avMSSNotificationRate.setStatus('current')
avMSSVarbinds = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 4))
if mibBuilder.loadTexts: avMSSVarbinds.setStatus('current')
avMSSVarbindsDoSType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 100, 101, 102, 103, 104, 105))).clone(namedValues=NamedValues(("avMSSDoSMalformedARPs", 1), ("avMSSDoSLandAttack", 2), ("avMSSDoSICMPReflectAttack", 3), ("avMSSDoSUknownPort", 4), ("avMSSDoSUrgTCPOption", 5), ("avMSSDoSMalformedIP", 6), ("avMSSDoSSynFlood", 7), ("avMSSDoSSmurfAttack", 8), ("avMSSDoSFraggleAttack", 9), ("avMSSDoSMalFragmentIP", 10), ("avMSSSpoofedIP", 11), ("avMSSUnknownL4Protocol", 12), ("avMSSunAuthenticatedAccess", 13), ("avMSSUserDefinedDoSAttack100", 100), ("avMSSUserDefinedDoSAttack101", 101), ("avMSSUserDefinedDoSAttack102", 102), ("avMSSUserDefinedDoSAttack103", 103), ("avMSSUserDefinedDoSAttack104", 104), ("avMSSUserDefinedDoSAttack105", 105)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avMSSVarbindsDoSType.setStatus('current')
avMSSVarbindsDescription = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 4, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avMSSVarbindsDescription.setStatus('current')
avMSSVarbindsSrcAddr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 4, 3), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avMSSVarbindsSrcAddr.setStatus('current')
avMSSVarbindsDstAddr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 4, 4), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avMSSVarbindsDstAddr.setStatus('current')
avMSSVarbindsDstPort = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avMSSVarbindsDstPort.setStatus('current')
avMSSVarbindsIpProtocol = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avMSSVarbindsIpProtocol.setStatus('current')
avMSSVarbindsCount = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 4, 7), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avMSSVarbindsCount.setStatus('current')
avMSSVarbindsSrcMACAddr = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 7, 4, 8), PhysAddress().clone('00:00:00:00:00:00')).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avMSSVarbindsSrcMACAddr.setStatus('current')
avMSSgroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 8)).setObjects(("SECURITY-MANAGEMENT-MIB", "avMSSNotificationRate"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsSrcAddr"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsDstAddr"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsDstPort"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsDescription"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsIpProtocol"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsDoSType"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsCount"), ("SECURITY-MANAGEMENT-MIB", "avMSSVarbindsSrcMACAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avMSSgroup = avMSSgroup.setStatus('current')
mssNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 9)).setObjects(("SECURITY-MANAGEMENT-MIB", "avMSSDenialOfService"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mssNotificationGroup = mssNotificationGroup.setStatus('current')
secMngNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10))
if mibBuilder.loadTexts: secMngNotifications.setStatus('current')
secMngNotificationsPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 0))
if mibBuilder.loadTexts: secMngNotificationsPrefix.setStatus('current')
avConfigurationEncKeyMismatchFault = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 0, 1)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("LOAD-MIB", "genAppFileId"), ("LOAD-MIB", "genAppFileName"), ("LOAD-MIB", "genAppFileVersionNumber"), ("LOAD-MIB", "genOpLastFailureDisplay"))
if mibBuilder.loadTexts: avConfigurationEncKeyMismatchFault.setStatus('current')
avConfigurationMasterKeyChange = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 0, 2)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"))
if mibBuilder.loadTexts: avConfigurationMasterKeyChange.setStatus('current')
avPasswordToExpireAlert = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 0, 3)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("SECURITY-MANAGEMENT-MIB", "secMngNumOfDays2Expire"))
if mibBuilder.loadTexts: avPasswordToExpireAlert.setStatus('current')
avUnAuthAccessEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 0, 200)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("SECURITY-MANAGEMENT-MIB", "avUnauthUserName"), ("SECURITY-MANAGEMENT-MIB", "avUnauthInetAddressType"), ("SECURITY-MANAGEMENT-MIB", "avUnauthInetAddress"), ("SECURITY-MANAGEMENT-MIB", "avUnauthProtocol"), ("SECURITY-MANAGEMENT-MIB", "avASGAuthFileAFID"), ("AVAYA-ENTITY-MIB", "avEntPhySeverity"))
if mibBuilder.loadTexts: avUnAuthAccessEvent.setStatus('current')
avAccountLockoutEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 0, 201)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("SECURITY-MANAGEMENT-MIB", "avUnauthUserName"), ("SECURITY-MANAGEMENT-MIB", "avUnauthInetAddressType"), ("SECURITY-MANAGEMENT-MIB", "avUnauthInetAddress"), ("SECURITY-MANAGEMENT-MIB", "avUnauthProtocol"), ("SECURITY-MANAGEMENT-MIB", "avASGAuthFileAFID"), ("AVAYA-ENTITY-MIB", "avEntPhySeverity"))
if mibBuilder.loadTexts: avAccountLockoutEvent.setStatus('current')
avIPv6AddressDuplicationEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 0, 202)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("SECURITY-MANAGEMENT-MIB", "avDuplicatedInetAddressType"), ("SECURITY-MANAGEMENT-MIB", "avDuplicatedInetAddress"), ("SECURITY-MANAGEMENT-MIB", "avDuplicatedMACAddress"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"), ("SECURITY-MANAGEMENT-MIB", "avASGAuthFileAFID"), ("AVAYA-ENTITY-MIB", "avEntPhySeverity"))
if mibBuilder.loadTexts: avIPv6AddressDuplicationEvent.setStatus('current')
secMngVarbinds = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 1))
if mibBuilder.loadTexts: secMngVarbinds.setStatus('current')
secMngNumOfDays2Expire = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 1, 1), Unsigned32()).setUnits('Days').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: secMngNumOfDays2Expire.setStatus('current')
avUnauthUserName = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avUnauthUserName.setStatus('current')
avUnauthProtocol = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(22, 23, 80, 161, 443, 500, 6889, 6890, 6891))).clone(namedValues=NamedValues(("avSSHAccess", 22), ("avTELNETAccess", 23), ("avHTTPAccess", 80), ("avSNMPAccess", 161), ("avHTTPSAccess", 443), ("avIKEAccess", 500), ("avRASAccess", 6889), ("avConsoleAccess", 6890), ("avPPPAccess", 6891)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avUnauthProtocol.setStatus('current')
avUnauthInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 1, 9), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avUnauthInetAddressType.setStatus('current')
avUnauthInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 1, 10), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avUnauthInetAddress.setStatus('current')
avDuplicatedInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 1, 11), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avDuplicatedInetAddressType.setStatus('current')
avDuplicatedInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 1, 12), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avDuplicatedInetAddress.setStatus('current')
avDuplicatedMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 1, 13), PhysAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avDuplicatedMACAddress.setStatus('current')
avMngNotificationCompliance = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 10, 2)).setObjects(("SECURITY-MANAGEMENT-MIB", "secMngNumOfDays2Expire"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avMngNotificationCompliance = avMngNotificationCompliance.setStatus('current')
secMngNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 11)).setObjects(("SECURITY-MANAGEMENT-MIB", "avConfigurationEncKeyMismatchFault"), ("SECURITY-MANAGEMENT-MIB", "avConfigurationMasterKeyChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    secMngNotificationGroup = secMngNotificationGroup.setStatus('current')
avASGAuthenticationFiles = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12))
if mibBuilder.loadTexts: avASGAuthenticationFiles.setStatus('current')
avASGAuthFileHeader = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 3))
if mibBuilder.loadTexts: avASGAuthFileHeader.setStatus('current')
avASGAuthFileAFID = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avASGAuthFileAFID.setStatus('current')
avASGAuthFileGenDate = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 3, 2), DisplayString()).setUnits('YYYY/MM/DD').setMaxAccess("readonly")
if mibBuilder.loadTexts: avASGAuthFileGenDate.setStatus('current')
avASGAuthFileGenTime = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setUnits('HH:MM:SS').setMaxAccess("readonly")
if mibBuilder.loadTexts: avASGAuthFileGenTime.setStatus('current')
avASGAuthFileRelease = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avASGAuthFileRelease.setStatus('current')
avASGNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 3, 5))
if mibBuilder.loadTexts: avASGNotifications.setStatus('current')
avASGNotificationsPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 3, 5, 0))
if mibBuilder.loadTexts: avASGNotificationsPrefix.setStatus('current')
avASGAFDownloadSuccess = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 3, 5, 0, 1)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("LOAD-MIB", "genAppFileId"), ("LOAD-MIB", "genAppFileName"), ("LOAD-MIB", "genAppFileVersionNumber"), ("SECURITY-MANAGEMENT-MIB", "avASGAuthFileAFID"))
if mibBuilder.loadTexts: avASGAFDownloadSuccess.setStatus('current')
avASGAFDownloadFailure = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 3, 5, 0, 2)).setObjects(("G700-MG-MIB", "cmgTrapSubsystem"), ("G700-MG-MIB", "cmgTrapOnBoard"), ("G700-MG-MIB", "cmgTrapLocation"), ("LOAD-MIB", "genAppFileId"), ("LOAD-MIB", "genAppFileName"), ("LOAD-MIB", "genAppFileVersionNumber"), ("LOAD-MIB", "genOpLastFailureDisplay"), ("SECURITY-MANAGEMENT-MIB", "avASGAuthFileAFID"))
if mibBuilder.loadTexts: avASGAFDownloadFailure.setStatus('current')
avASGAuthFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 1000)).setObjects(("SECURITY-MANAGEMENT-MIB", "avASGAuthFileAFID"), ("SECURITY-MANAGEMENT-MIB", "avASGAuthFileGenDate"), ("SECURITY-MANAGEMENT-MIB", "avASGAuthFileGenTime"), ("SECURITY-MANAGEMENT-MIB", "avASGAuthFileRelease"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avASGAuthFileGroup = avASGAuthFileGroup.setStatus('current')
avASGAuthFileNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 12, 1001)).setObjects(("SECURITY-MANAGEMENT-MIB", "avASGAFDownloadFailure"), ("SECURITY-MANAGEMENT-MIB", "avASGAFDownloadSuccess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avASGAuthFileNotificationGroup = avASGAuthFileNotificationGroup.setStatus('current')
avSecLocalDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 14, 1, 13), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avSecLocalDateAndTime.setStatus('current')
mibBuilder.exportSymbols("SECURITY-MANAGEMENT-MIB", avASGNotifications=avASGNotifications, avIPv6AddressDuplicationEvent=avIPv6AddressDuplicationEvent, secMngProtoStatus=secMngProtoStatus, avASGAuthFileNotificationGroup=avASGAuthFileNotificationGroup, secMngBasicGroup=secMngBasicGroup, secMode=secMode, avMSSVarbindsDstPort=avMSSVarbindsDstPort, lsgLicManagement=lsgLicManagement, avConfigurationMasterKeyChange=avConfigurationMasterKeyChange, secMngNotificationsPrefix=secMngNotificationsPrefix, secMngGroups=secMngGroups, avASGAuthenticationFiles=avASGAuthenticationFiles, avMssNotificationPrefix=avMssNotificationPrefix, avConfigurationEncKeyMismatchFault=avConfigurationEncKeyMismatchFault, lsgLicMngAdminStatus=lsgLicMngAdminStatus, OnOffType=OnOffType, avUnauthInetAddress=avUnauthInetAddress, avMSSVarbindsSrcMACAddr=avMSSVarbindsSrcMACAddr, avMSSVarbindsDoSType=avMSSVarbindsDoSType, lsgLicMngConformance=lsgLicMngConformance, avASGNotificationsPrefix=avASGNotificationsPrefix, avUnauthUserName=avUnauthUserName, lsgLicMngCountedValue=lsgLicMngCountedValue, secMngVarbinds=secMngVarbinds, secTcpSynCookies=secTcpSynCookies, avAccountLockoutEvent=avAccountLockoutEvent, secMngModule=secMngModule, avPasswordToExpireAlert=avPasswordToExpireAlert, secMngCompliance=secMngCompliance, secMngProtoId=secMngProtoId, ServiceStateType=ServiceStateType, avMSSVarbinds=avMSSVarbinds, avMSSNotificationRate=avMSSNotificationRate, avMSSVarbindsDstAddr=avMSSVarbindsDstAddr, avMssNotifications=avMssNotifications, secMngConformance=secMngConformance, lsgLicMngBasicGroup=lsgLicMngBasicGroup, lsgLicMngLastError=lsgLicMngLastError, avDuplicatedInetAddressType=avDuplicatedInetAddressType, avUnauthProtocol=avUnauthProtocol, lsgLicMngGroups=lsgLicMngGroups, avASGAFDownloadSuccess=avASGAFDownloadSuccess, avMSSVarbindsDescription=avMSSVarbindsDescription, avMngNotificationCompliance=avMngNotificationCompliance, avDuplicatedMACAddress=avDuplicatedMACAddress, secMngProtoEntry=secMngProtoEntry, avASGAuthFileGenDate=avASGAuthFileGenDate, fipsEnhancedSecurityFlg=fipsEnhancedSecurityFlg, lsgLicMngEntry=lsgLicMngEntry, avASGAuthFileHeader=avASGAuthFileHeader, secMngProtoTable=secMngProtoTable, avASGAuthFileAFID=avASGAuthFileAFID, mssNotificationGroup=mssNotificationGroup, secMngNumOfDays2Expire=secMngNumOfDays2Expire, secTcpSynCkiOpState=secTcpSynCkiOpState, avMSSgroup=avMSSgroup, avMSSVarbindsIpProtocol=avMSSVarbindsIpProtocol, avUnAuthAccessEvent=avUnAuthAccessEvent, avMSSVarbindsCount=avMSSVarbindsCount, PYSNMP_MODULE_ID=secMngModule, avMSSDenialOfService=avMSSDenialOfService, avASGAuthFileGroup=avASGAuthFileGroup, avASGAuthFileGenTime=avASGAuthFileGenTime, avayaSecurity=avayaSecurity, lsgLicMngTable=lsgLicMngTable, lsgLicMngFeatureType=lsgLicMngFeatureType, secMngNotificationGroup=secMngNotificationGroup, avMSSVarbindsSrcAddr=avMSSVarbindsSrcAddr, lsgLicMngOperStatus=lsgLicMngOperStatus, avSecLocalDateAndTime=avSecLocalDateAndTime, avASGAuthFileRelease=avASGAuthFileRelease, lsgLicMngFeatureKeyword=lsgLicMngFeatureKeyword, secMngNotifications=secMngNotifications, avASGAFDownloadFailure=avASGAFDownloadFailure, fips140=fips140, avUnauthInetAddressType=avUnauthInetAddressType, avDuplicatedInetAddress=avDuplicatedInetAddress, secTcpSynCkiCfgState=secTcpSynCkiCfgState)
