#
# PySNMP MIB module ELTEX-MES-HWENVIROMENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-HWENVIROMENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:46:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
eltMes, = mibBuilder.importSymbols("ELTEX-MES", "eltMes")
RlEnvMonState, = mibBuilder.importSymbols("RADLAN-HWENVIROMENT", "RlEnvMonState")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, NotificationType, MibIdentifier, IpAddress, Integer32, Gauge32, ModuleIdentity, Unsigned32, Counter64, ObjectIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "MibIdentifier", "IpAddress", "Integer32", "Gauge32", "ModuleIdentity", "Unsigned32", "Counter64", "ObjectIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
eltMesEnv = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 11))
eltMesEnv.setRevisions(('2016-03-04 00:00', '2015-06-11 00:00',))
if mibBuilder.loadTexts: eltMesEnv.setLastUpdated('201603040000Z')
if mibBuilder.loadTexts: eltMesEnv.setOrganization('Eltex Enterprise Co, Ltd.')
eltEnvMonBatteryStatusTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 11, 1), )
if mibBuilder.loadTexts: eltEnvMonBatteryStatusTable.setStatus('current')
eltEnvMonBatteryStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 11, 1, 1), ).setIndexNames((0, "ELTEX-MES-HWENVIROMENT-MIB", "eltEnvMonBatteryStatusIndex"))
if mibBuilder.loadTexts: eltEnvMonBatteryStatusEntry.setStatus('current')
eltEnvMonBatteryStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 11, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: eltEnvMonBatteryStatusIndex.setStatus('current')
eltEnvMonBatteryState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 11, 1, 1, 2), RlEnvMonState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltEnvMonBatteryState.setStatus('current')
eltEnvMonBatteryStatusCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 100), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltEnvMonBatteryStatusCharge.setStatus('current')
eltEnvResetButtonMode = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1), ("reset-only", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltEnvResetButtonMode.setStatus('current')
mibBuilder.exportSymbols("ELTEX-MES-HWENVIROMENT-MIB", eltEnvMonBatteryStatusTable=eltEnvMonBatteryStatusTable, eltEnvMonBatteryStatusIndex=eltEnvMonBatteryStatusIndex, PYSNMP_MODULE_ID=eltMesEnv, eltEnvResetButtonMode=eltEnvResetButtonMode, eltMesEnv=eltMesEnv, eltEnvMonBatteryStatusCharge=eltEnvMonBatteryStatusCharge, eltEnvMonBatteryState=eltEnvMonBatteryState, eltEnvMonBatteryStatusEntry=eltEnvMonBatteryStatusEntry)
