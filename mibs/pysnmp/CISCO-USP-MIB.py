#
# PySNMP MIB module CISCO-USP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-USP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:01:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, Bits, Counter64, TimeTicks, ObjectIdentity, Gauge32, NotificationType, Integer32, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "Bits", "Counter64", "TimeTicks", "ObjectIdentity", "Gauge32", "NotificationType", "Integer32", "iso", "IpAddress")
TimeStamp, DateAndTime, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DateAndTime", "TruthValue", "TextualConvention", "DisplayString")
ciscoUspMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 827))
ciscoUspMIB.setRevisions(('2015-07-20 00:00',))
if mibBuilder.loadTexts: ciscoUspMIB.setLastUpdated('201507200000Z')
if mibBuilder.loadTexts: ciscoUspMIB.setOrganization('Cisco Systems, Inc.')
ciscoUspMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 0))
cuspSystemStateAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 1)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspNotifDetail"), ("CISCO-USP-MIB", "cuspSystemState"))
if mibBuilder.loadTexts: cuspSystemStateAlert.setStatus('current')
cuspServerGroupElementAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 2)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspElementName"), ("CISCO-USP-MIB", "cuspElementStatus"))
if mibBuilder.loadTexts: cuspServerGroupElementAlert.setStatus('current')
cuspServerGroupAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 3)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspServerGroupName"), ("CISCO-USP-MIB", "cuspServerGroupStatus"))
if mibBuilder.loadTexts: cuspServerGroupAlert.setStatus('current')
cuspMemoryThresholdAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 4)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspMemoryThresholdValue"), ("CISCO-USP-MIB", "cuspConfiguredMemory"), ("CISCO-USP-MIB", "cuspMemoryUsed"))
if mibBuilder.loadTexts: cuspMemoryThresholdAlert.setStatus('current')
cuspLicenseExceededAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 5)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspCPS"), ("CISCO-USP-MIB", "cuspLicenseLimit"))
if mibBuilder.loadTexts: cuspLicenseExceededAlert.setStatus('current')
cuspLicenseStateAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 6)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspLicenseState"))
if mibBuilder.loadTexts: cuspLicenseStateAlert.setStatus('current')
cuspExtensiveLoggingAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 7)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspNotifDetail"))
if mibBuilder.loadTexts: cuspExtensiveLoggingAlert.setStatus('current')
cuspDiskSpaceThresholdAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 8)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspDiskSpaceThresholdValue"), ("CISCO-USP-MIB", "cuspDiskSpaceUsed"))
if mibBuilder.loadTexts: cuspDiskSpaceThresholdAlert.setStatus('current')
cuspBackupProcessFailAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 9)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspNotifDetail"))
if mibBuilder.loadTexts: cuspBackupProcessFailAlert.setStatus('current')
cuspConnectionExceptionAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 827, 0, 10)).setObjects(("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspNotifDetail"))
if mibBuilder.loadTexts: cuspConnectionExceptionAlert.setStatus('current')
ciscoUspMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 1))
ciscoUspMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 2))
cuspScalar = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1))
cuspTable = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2))
ciscoUspMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 2, 1))
ciscoUspMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 2, 2))
ciscoUspMIBModuleCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 827, 2, 1, 1)).setObjects(("CISCO-USP-MIB", "ciscoUspMIBMainObjectGroup"), ("CISCO-USP-MIB", "ciscoUspMIBNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUspMIBModuleCompliance = ciscoUspMIBModuleCompliance.setStatus('current')
ciscoUspMIBMainObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 827, 2, 2, 1)).setObjects(("CISCO-USP-MIB", "cuspLicenseLimit"), ("CISCO-USP-MIB", "cuspLastCounterResetTime"), ("CISCO-USP-MIB", "cuspTotalCalls"), ("CISCO-USP-MIB", "cuspTotalFailedCalls"), ("CISCO-USP-MIB", "cuspCPS"), ("CISCO-USP-MIB", "cuspAvgCPSOneMin"), ("CISCO-USP-MIB", "cuspMaxCPSOneMin"), ("CISCO-USP-MIB", "cuspDroppedCallsOneSec"), ("CISCO-USP-MIB", "cuspAvgDroppedCPSOneMin"), ("CISCO-USP-MIB", "cuspMaxDroppedCPSOneMin"), ("CISCO-USP-MIB", "cuspCallsRoutedOneSec"), ("CISCO-USP-MIB", "cuspAvgCallsRoutedOneMin"), ("CISCO-USP-MIB", "cuspMaxCallsRoutedOneMin"), ("CISCO-USP-MIB", "cuspCallsDroppedExceedingLicense"), ("CISCO-USP-MIB", "cuspSystemState"), ("CISCO-USP-MIB", "cuspSystemUpTime"), ("CISCO-USP-MIB", "cuspNoOfMessagesRecieved"), ("CISCO-USP-MIB", "cuspSmartAgentState"), ("CISCO-USP-MIB", "cuspStrayMessageCount"), ("CISCO-USP-MIB", "cuspConfiguredMemory"), ("CISCO-USP-MIB", "cuspMemoryUsed"), ("CISCO-USP-MIB", "cuspSystemStateAlertEnable"), ("CISCO-USP-MIB", "cuspServerGroupAlertEnable"), ("CISCO-USP-MIB", "cuspDiskSpaceThresholdAlertEnable"), ("CISCO-USP-MIB", "cuspBackupProcessFailAlertEnable"), ("CISCO-USP-MIB", "cuspExtensiveLoggingAlertEnable"), ("CISCO-USP-MIB", "cuspMemoryThresholdValue"), ("CISCO-USP-MIB", "cuspDiskSpaceThresholdValue"), ("CISCO-USP-MIB", "cuspServerGroupName"), ("CISCO-USP-MIB", "cuspServerGroupNetwork"), ("CISCO-USP-MIB", "cuspServerGroupStatus"), ("CISCO-USP-MIB", "cuspElementName"), ("CISCO-USP-MIB", "cuspElementStatus"), ("CISCO-USP-MIB", "cuspElementQValue"), ("CISCO-USP-MIB", "cuspElementWeight"), ("CISCO-USP-MIB", "cuspElementTransport"), ("CISCO-USP-MIB", "cuspElementTotalCalls"), ("CISCO-USP-MIB", "cuspElementFailedCalls"), ("CISCO-USP-MIB", "cuspNotifSeverity"), ("CISCO-USP-MIB", "cuspNotifDetail"), ("CISCO-USP-MIB", "cuspLicenseExceededAlertEnable"), ("CISCO-USP-MIB", "cuspServerGroupPingStatus"), ("CISCO-USP-MIB", "cuspServerGroupLBType"), ("CISCO-USP-MIB", "cuspDiskSpaceUsed"), ("CISCO-USP-MIB", "cuspElementPort"), ("CISCO-USP-MIB", "cuspServerGroupElementAlertEnable"), ("CISCO-USP-MIB", "cuspLicenseStateAlertEnable"), ("CISCO-USP-MIB", "cuspMemoryThresholdAlertEnable"), ("CISCO-USP-MIB", "cuspConnectionExceptionAlertEnable"), ("CISCO-USP-MIB", "cuspLicenseState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUspMIBMainObjectGroup = ciscoUspMIBMainObjectGroup.setStatus('current')
ciscoUspMIBNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 827, 2, 2, 2)).setObjects(("CISCO-USP-MIB", "cuspSystemStateAlert"), ("CISCO-USP-MIB", "cuspBackupProcessFailAlert"), ("CISCO-USP-MIB", "cuspDiskSpaceThresholdAlert"), ("CISCO-USP-MIB", "cuspConnectionExceptionAlert"), ("CISCO-USP-MIB", "cuspServerGroupElementAlert"), ("CISCO-USP-MIB", "cuspServerGroupAlert"), ("CISCO-USP-MIB", "cuspMemoryThresholdAlert"), ("CISCO-USP-MIB", "cuspLicenseExceededAlert"), ("CISCO-USP-MIB", "cuspExtensiveLoggingAlert"), ("CISCO-USP-MIB", "cuspLicenseStateAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoUspMIBNotifyGroup = ciscoUspMIBNotifyGroup.setStatus('current')
cuspNotifControlInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3))
cuspLastCounterResetTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspLastCounterResetTime.setStatus('current')
cuspSystemState = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspSystemState.setStatus('current')
cuspSystemUpTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspSystemUpTime.setStatus('current')
cuspLicenseLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('CPS').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspLicenseLimit.setStatus('current')
cuspLicenseState = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("waiting", 1), ("overage", 2), ("outofcompliance", 3), ("notapplicable", 4), ("invalidtag", 5), ("invalid", 6), ("init", 7), ("incompliance", 8), ("evalexpired", 9), ("eval", 10), ("disabled", 11), ("authorizedperiodexpired", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspLicenseState.setStatus('current')
cuspSmartAgentState = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unconfigured", 1), ("unidentified", 2), ("evalexpired", 3), ("registered", 4), ("outofcomplaince", 5), ("authorized", 6), ("authorizationexpiry", 7), ("transient", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspSmartAgentState.setStatus('current')
cuspConfiguredMemory = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 7), Unsigned32()).setUnits('MegaByte').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspConfiguredMemory.setStatus('current')
cuspMemoryUsed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 8), Unsigned32()).setUnits('MegaByte').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspMemoryUsed.setStatus('current')
cuspDiskSpaceUsed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspDiskSpaceUsed.setStatus('current')
cuspCallStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10))
cuspMessageStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 11))
cuspThresholdValues = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 12))
cuspTotalCalls = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspTotalCalls.setStatus('current')
cuspTotalFailedCalls = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspTotalFailedCalls.setStatus('current')
cuspCPS = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 3), Unsigned32()).setUnits('CPS').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspCPS.setStatus('current')
cuspAvgCPSOneMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 4), Unsigned32()).setUnits('CPS').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspAvgCPSOneMin.setStatus('current')
cuspMaxCPSOneMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 5), Unsigned32()).setUnits('CPS').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspMaxCPSOneMin.setStatus('current')
cuspDroppedCallsOneSec = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspDroppedCallsOneSec.setStatus('current')
cuspAvgDroppedCPSOneMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspAvgDroppedCPSOneMin.setStatus('current')
cuspMaxDroppedCPSOneMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspMaxDroppedCPSOneMin.setStatus('current')
cuspCallsRoutedOneSec = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspCallsRoutedOneSec.setStatus('current')
cuspAvgCallsRoutedOneMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspAvgCallsRoutedOneMin.setStatus('current')
cuspMaxCallsRoutedOneMin = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspMaxCallsRoutedOneMin.setStatus('current')
cuspCallsDroppedExceedingLicense = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 10, 12), Unsigned32()).setUnits('CPS').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspCallsDroppedExceedingLicense.setStatus('current')
cuspStrayMessageCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 11, 1), Unsigned32()).setUnits('Messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspStrayMessageCount.setStatus('current')
cuspNoOfMessagesRecieved = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 11, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspNoOfMessagesRecieved.setStatus('current')
cuspDiskSpaceThresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 12, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspDiskSpaceThresholdValue.setStatus('current')
cuspMemoryThresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 1, 12, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspMemoryThresholdValue.setStatus('current')
cuspServerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 1), )
if mibBuilder.loadTexts: cuspServerGroupTable.setStatus('current')
cuspServerGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-USP-MIB", "cuspServerGroupIndex"))
if mibBuilder.loadTexts: cuspServerGroupEntry.setStatus('current')
cuspServerGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cuspServerGroupIndex.setStatus('current')
cuspServerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspServerGroupName.setStatus('current')
cuspServerGroupNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspServerGroupNetwork.setStatus('current')
cuspServerGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("partialdown", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspServerGroupStatus.setStatus('current')
cuspServerGroupPingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspServerGroupPingStatus.setStatus('current')
cuspServerGroupLBType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("global", 1), ("highestq", 2), ("requesturi", 3), ("callid", 4), ("touri", 5), ("weight", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspServerGroupLBType.setStatus('current')
cuspElementTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2), )
if mibBuilder.loadTexts: cuspElementTable.setStatus('current')
cuspElementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-USP-MIB", "cuspServerGroupIndex"), (0, "CISCO-USP-MIB", "cuspElementIndex"))
if mibBuilder.loadTexts: cuspElementEntry.setStatus('current')
cuspElementIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cuspElementIndex.setStatus('current')
cuspElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspElementName.setStatus('current')
cuspElementStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspElementStatus.setStatus('current')
cuspElementQValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspElementQValue.setStatus('current')
cuspElementWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspElementWeight.setStatus('current')
cuspElementPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspElementPort.setStatus('current')
cuspElementTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2), ("tls", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspElementTransport.setStatus('current')
cuspElementTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspElementTotalCalls.setStatus('current')
cuspElementFailedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 2, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuspElementFailedCalls.setStatus('current')
cuspNotifSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("error", 1), ("warning", 2), ("informational", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuspNotifSeverity.setStatus('current')
cuspNotifDetail = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuspNotifDetail.setStatus('current')
cuspSystemStateAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspSystemStateAlertEnable.setStatus('current')
cuspServerGroupAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspServerGroupAlertEnable.setStatus('current')
cuspServerGroupElementAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspServerGroupElementAlertEnable.setStatus('current')
cuspLicenseExceededAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspLicenseExceededAlertEnable.setStatus('current')
cuspLicenseStateAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspLicenseStateAlertEnable.setStatus('current')
cuspExtensiveLoggingAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspExtensiveLoggingAlertEnable.setStatus('current')
cuspDiskSpaceThresholdAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspDiskSpaceThresholdAlertEnable.setStatus('current')
cuspMemoryThresholdAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspMemoryThresholdAlertEnable.setStatus('current')
cuspBackupProcessFailAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspBackupProcessFailAlertEnable.setStatus('current')
cuspConnectionExceptionAlertEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 827, 1, 3, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuspConnectionExceptionAlertEnable.setStatus('current')
mibBuilder.exportSymbols("CISCO-USP-MIB", cuspMemoryUsed=cuspMemoryUsed, cuspCallStats=cuspCallStats, cuspThresholdValues=cuspThresholdValues, cuspServerGroupElementAlert=cuspServerGroupElementAlert, cuspMaxCPSOneMin=cuspMaxCPSOneMin, cuspServerGroupNetwork=cuspServerGroupNetwork, cuspLicenseState=cuspLicenseState, cuspServerGroupLBType=cuspServerGroupLBType, ciscoUspMIBObjects=ciscoUspMIBObjects, cuspSmartAgentState=cuspSmartAgentState, cuspStrayMessageCount=cuspStrayMessageCount, cuspSystemStateAlert=cuspSystemStateAlert, ciscoUspMIBCompliances=ciscoUspMIBCompliances, cuspSystemUpTime=cuspSystemUpTime, cuspSystemState=cuspSystemState, cuspLicenseStateAlert=cuspLicenseStateAlert, cuspBackupProcessFailAlert=cuspBackupProcessFailAlert, cuspAvgCallsRoutedOneMin=cuspAvgCallsRoutedOneMin, cuspElementQValue=cuspElementQValue, ciscoUspMIB=ciscoUspMIB, cuspServerGroupAlert=cuspServerGroupAlert, PYSNMP_MODULE_ID=ciscoUspMIB, cuspScalar=cuspScalar, cuspMemoryThresholdAlert=cuspMemoryThresholdAlert, cuspAvgCPSOneMin=cuspAvgCPSOneMin, cuspElementEntry=cuspElementEntry, cuspAvgDroppedCPSOneMin=cuspAvgDroppedCPSOneMin, cuspMaxDroppedCPSOneMin=cuspMaxDroppedCPSOneMin, ciscoUspMIBNotifs=ciscoUspMIBNotifs, cuspNotifDetail=cuspNotifDetail, cuspElementTotalCalls=cuspElementTotalCalls, ciscoUspMIBGroups=ciscoUspMIBGroups, ciscoUspMIBConform=ciscoUspMIBConform, cuspElementFailedCalls=cuspElementFailedCalls, cuspServerGroupEntry=cuspServerGroupEntry, cuspExtensiveLoggingAlert=cuspExtensiveLoggingAlert, cuspMemoryThresholdValue=cuspMemoryThresholdValue, cuspServerGroupPingStatus=cuspServerGroupPingStatus, cuspMemoryThresholdAlertEnable=cuspMemoryThresholdAlertEnable, cuspDroppedCallsOneSec=cuspDroppedCallsOneSec, cuspConnectionExceptionAlert=cuspConnectionExceptionAlert, cuspElementTransport=cuspElementTransport, cuspSystemStateAlertEnable=cuspSystemStateAlertEnable, cuspElementName=cuspElementName, cuspConnectionExceptionAlertEnable=cuspConnectionExceptionAlertEnable, cuspServerGroupAlertEnable=cuspServerGroupAlertEnable, cuspServerGroupIndex=cuspServerGroupIndex, cuspCallsRoutedOneSec=cuspCallsRoutedOneSec, cuspLastCounterResetTime=cuspLastCounterResetTime, cuspLicenseExceededAlertEnable=cuspLicenseExceededAlertEnable, cuspTotalCalls=cuspTotalCalls, cuspConfiguredMemory=cuspConfiguredMemory, cuspCallsDroppedExceedingLicense=cuspCallsDroppedExceedingLicense, cuspExtensiveLoggingAlertEnable=cuspExtensiveLoggingAlertEnable, cuspServerGroupElementAlertEnable=cuspServerGroupElementAlertEnable, cuspElementTable=cuspElementTable, cuspCPS=cuspCPS, cuspLicenseStateAlertEnable=cuspLicenseStateAlertEnable, cuspDiskSpaceThresholdAlert=cuspDiskSpaceThresholdAlert, cuspServerGroupStatus=cuspServerGroupStatus, cuspDiskSpaceThresholdAlertEnable=cuspDiskSpaceThresholdAlertEnable, cuspElementStatus=cuspElementStatus, cuspServerGroupName=cuspServerGroupName, cuspElementPort=cuspElementPort, ciscoUspMIBMainObjectGroup=ciscoUspMIBMainObjectGroup, cuspBackupProcessFailAlertEnable=cuspBackupProcessFailAlertEnable, ciscoUspMIBModuleCompliance=ciscoUspMIBModuleCompliance, cuspMaxCallsRoutedOneMin=cuspMaxCallsRoutedOneMin, ciscoUspMIBNotifyGroup=ciscoUspMIBNotifyGroup, cuspNotifSeverity=cuspNotifSeverity, cuspServerGroupTable=cuspServerGroupTable, cuspTotalFailedCalls=cuspTotalFailedCalls, cuspTable=cuspTable, cuspElementIndex=cuspElementIndex, cuspLicenseExceededAlert=cuspLicenseExceededAlert, cuspNotifControlInfo=cuspNotifControlInfo, cuspElementWeight=cuspElementWeight, cuspLicenseLimit=cuspLicenseLimit, cuspMessageStats=cuspMessageStats, cuspDiskSpaceUsed=cuspDiskSpaceUsed, cuspDiskSpaceThresholdValue=cuspDiskSpaceThresholdValue, cuspNoOfMessagesRecieved=cuspNoOfMessagesRecieved)
