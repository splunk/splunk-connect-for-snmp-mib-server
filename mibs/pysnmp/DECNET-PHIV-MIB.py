#
# PySNMP MIB module DECNET-PHIV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DECNET-PHIV-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:22:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibIdentifier, TimeTicks, Unsigned32, IpAddress, Integer32, Bits, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, mib_2, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "TimeTicks", "Unsigned32", "IpAddress", "Integer32", "Bits", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "mib-2", "ModuleIdentity", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
phiv = MibIdentifier((1, 3, 6, 1, 2, 1, 18))
class PhivAddr(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

class PhivCounter(Integer32):
    pass

class InterfaceIndex(Integer32):
    pass

phivSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 1))
phivManagement = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 2))
session = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 3))
end = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 4))
routing = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 5))
circuit = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 6))
ddcmp = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 7))
control = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 8))
ethernet = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 9))
counters = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 10))
adjacency = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 11))
line = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 12))
nonBroadcastLine = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 14))
area = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 15))
phivSystemState = MibScalar((1, 3, 6, 1, 2, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("shut", 3), ("restricted", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivSystemState.setStatus('mandatory')
phivExecIdent = MibScalar((1, 3, 6, 1, 2, 1, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivExecIdent.setStatus('mandatory')
phivMgmtMgmtVers = MibScalar((1, 3, 6, 1, 2, 1, 18, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivMgmtMgmtVers.setStatus('mandatory')
phivSessionSystemName = MibScalar((1, 3, 6, 1, 2, 1, 18, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivSessionSystemName.setStatus('mandatory')
phivSessionInTimer = MibScalar((1, 3, 6, 1, 2, 1, 18, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivSessionInTimer.setStatus('mandatory')
phivSessionOutTimer = MibScalar((1, 3, 6, 1, 2, 1, 18, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivSessionOutTimer.setStatus('mandatory')
phivEndRemoteTable = MibTable((1, 3, 6, 1, 2, 1, 18, 4, 1), )
if mibBuilder.loadTexts: phivEndRemoteTable.setStatus('mandatory')
phivEndRemoteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 4, 1, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivEndRemoteHostNodeID"))
if mibBuilder.loadTexts: phivEndRemoteEntry.setStatus('mandatory')
phivEndRemoteHostNodeID = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 1), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndRemoteHostNodeID.setStatus('mandatory')
phivEndRemoteState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("shut", 3), ("restricted", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEndRemoteState.setStatus('mandatory')
phivEndCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCircuitIndex.setStatus('mandatory')
phivEndActiveLinks = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndActiveLinks.setStatus('mandatory')
phivEndDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndDelay.setStatus('mandatory')
phivEndCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 4, 2), )
if mibBuilder.loadTexts: phivEndCountTable.setStatus('mandatory')
phivEndCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 4, 2, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivEndCountHostNodeID"))
if mibBuilder.loadTexts: phivEndCountEntry.setStatus('mandatory')
phivEndCountHostNodeID = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 1), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountHostNodeID.setStatus('mandatory')
phivEndCountSecsLastZeroed = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 2), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountSecsLastZeroed.setStatus('mandatory')
phivEndCountUsrBytesRec = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 3), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountUsrBytesRec.setStatus('mandatory')
phivEndCountUsrBytesSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 4), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountUsrBytesSent.setStatus('mandatory')
phivEndUCountUsrMessRec = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 5), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndUCountUsrMessRec.setStatus('mandatory')
phivEndCountUsrMessSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 6), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountUsrMessSent.setStatus('mandatory')
phivEndCountTotalBytesRec = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 7), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountTotalBytesRec.setStatus('mandatory')
phivEndCountTotalBytesSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 8), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountTotalBytesSent.setStatus('mandatory')
phivEndCountTotalMessRec = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 9), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountTotalMessRec.setStatus('mandatory')
phivEndCountTotalMessSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 10), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountTotalMessSent.setStatus('mandatory')
phivEndCountConnectsRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 11), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountConnectsRecd.setStatus('mandatory')
phivEndCountConnectsSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 12), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountConnectsSent.setStatus('mandatory')
phivEndCountReponseTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 13), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountReponseTimeouts.setStatus('mandatory')
phivEndCountRecdConnectResErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 14), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndCountRecdConnectResErrs.setStatus('mandatory')
phivEndMaxLinks = MibScalar((1, 3, 6, 1, 2, 1, 18, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEndMaxLinks.setStatus('mandatory')
phivEndNSPVers = MibScalar((1, 3, 6, 1, 2, 1, 18, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEndNSPVers.setStatus('mandatory')
phivEndRetransmitFactor = MibScalar((1, 3, 6, 1, 2, 1, 18, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEndRetransmitFactor.setStatus('mandatory')
phivEndDelayFact = MibScalar((1, 3, 6, 1, 2, 1, 18, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEndDelayFact.setStatus('mandatory')
phivEndDelayWeight = MibScalar((1, 3, 6, 1, 2, 1, 18, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEndDelayWeight.setStatus('mandatory')
phivEndInactivityTimer = MibScalar((1, 3, 6, 1, 2, 1, 18, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEndInactivityTimer.setStatus('mandatory')
phivEndCountZeroCount = MibScalar((1, 3, 6, 1, 2, 1, 18, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEndCountZeroCount.setStatus('mandatory')
phivEndMaxLinksActive = MibScalar((1, 3, 6, 1, 2, 1, 18, 4, 10), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEndMaxLinksActive.setStatus('mandatory')
phivRouteBroadcastRouteTimer = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteBroadcastRouteTimer.setStatus('mandatory')
phivRouteBuffSize = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteBuffSize.setStatus('mandatory')
phivRouteRoutingVers = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteRoutingVers.setStatus('mandatory')
phivRouteMaxAddr = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteMaxAddr.setStatus('mandatory')
phivRouteMaxBdcastNonRouters = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteMaxBdcastNonRouters.setStatus('mandatory')
phivRouteMaxBdcastRouters = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteMaxBdcastRouters.setStatus('mandatory')
phivRouteMaxBuffs = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteMaxBuffs.setStatus('mandatory')
phivRouteMaxCircuits = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteMaxCircuits.setStatus('mandatory')
phivRouteMaxCost = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1022))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteMaxCost.setStatus('mandatory')
phivRouteMaxHops = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteMaxHops.setStatus('mandatory')
phivRouteMaxVisits = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteMaxVisits.setStatus('mandatory')
phivRouteRoutingTimer = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteRoutingTimer.setStatus('mandatory')
phivRouteSegBuffSize = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteSegBuffSize.setStatus('mandatory')
phivRouteType = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("routing-III", 1), ("nonrouting-III", 2), ("area", 3), ("routing-IV", 4), ("nonrouting-IV", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteType.setStatus('obsolete')
phivRouteCountAgedPktLoss = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 15), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteCountAgedPktLoss.setStatus('mandatory')
phivRouteCountNodeUnrPktLoss = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 16), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteCountNodeUnrPktLoss.setStatus('mandatory')
phivRouteCountOutRngePktLoss = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 17), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteCountOutRngePktLoss.setStatus('mandatory')
phivRouteCountOverSzePktLoss = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 18), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteCountOverSzePktLoss.setStatus('mandatory')
phivRouteCountPacketFmtErr = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 19), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteCountPacketFmtErr.setStatus('mandatory')
phivRouteCountPtlRteUpdtLoss = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 20), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteCountPtlRteUpdtLoss.setStatus('mandatory')
phivRouteCountVerifReject = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 21), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteCountVerifReject.setStatus('mandatory')
phivLevel1RouteTable = MibTable((1, 3, 6, 1, 2, 1, 18, 5, 22), )
if mibBuilder.loadTexts: phivLevel1RouteTable.setStatus('mandatory')
phivLevel1RouteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 5, 22, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivLevel1RouteNodeAddr"))
if mibBuilder.loadTexts: phivLevel1RouteEntry.setStatus('mandatory')
phivLevel1RouteNodeAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 1), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLevel1RouteNodeAddr.setStatus('mandatory')
phivLevel1RouteCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLevel1RouteCircuitIndex.setStatus('mandatory')
phivLevel1RouteCost = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLevel1RouteCost.setStatus('mandatory')
phivLevel1RouteHops = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLevel1RouteHops.setStatus('mandatory')
phivLevel1RouteNextNode = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 5), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLevel1RouteNextNode.setStatus('mandatory')
phivRouteCountZeroCount = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteCountZeroCount.setStatus('mandatory')
phivRouteSystemAddr = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 24), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivRouteSystemAddr.setStatus('obsolete')
phivRouteRoutingType = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("routing-III", 1), ("nonrouting-III", 2), ("area", 3), ("routing-IV", 4), ("nonrouting-IV", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteRoutingType.setStatus('mandatory')
phivRouteSystemAddress = MibScalar((1, 3, 6, 1, 2, 1, 18, 5, 26), PhivAddr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteSystemAddress.setStatus('mandatory')
phivCircuitParametersTable = MibTable((1, 3, 6, 1, 2, 1, 18, 6, 1), )
if mibBuilder.loadTexts: phivCircuitParametersTable.setStatus('mandatory')
phivCircuitParametersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 6, 1, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivCircuitIndex"))
if mibBuilder.loadTexts: phivCircuitParametersEntry.setStatus('mandatory')
phivCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitIndex.setStatus('mandatory')
phivCircuitLineIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitLineIndex.setStatus('mandatory')
phivCircuitCommonState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("service", 3), ("cleared", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivCircuitCommonState.setStatus('mandatory')
phivCircuitCommonSubState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("starting", 1), ("reflecting", 2), ("looping", 3), ("loading", 4), ("dumping", 5), ("triggering", 6), ("autoservice", 7), ("autoloading", 8), ("autodumping", 9), ("autotriggering", 10), ("synchronizing", 11), ("failed", 12), ("running", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCommonSubState.setStatus('mandatory')
phivCircuitCommonName = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCommonName.setStatus('mandatory')
phivCircuitExecRecallTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivCircuitExecRecallTimer.setStatus('mandatory')
phivCircuitCommonType = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15))).clone(namedValues=NamedValues(("ddcmp-point", 1), ("ddcmp-control", 2), ("ddcmp-tributary", 3), ("x25", 4), ("ddcmp-dmc", 5), ("ethernet", 6), ("ci", 7), ("qp2-dte20", 8), ("bisync", 9), ("other", 14), ("fddi", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCommonType.setStatus('mandatory')
phivCircuitService = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivCircuitService.setStatus('mandatory')
phivCircuitExecCost = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivCircuitExecCost.setStatus('mandatory')
phivCircuitExecHelloTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivCircuitExecHelloTimer.setStatus('mandatory')
phivCircuitCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 6, 2), )
if mibBuilder.loadTexts: phivCircuitCountTable.setStatus('mandatory')
phivCircuitCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 6, 2, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivCircuitIndex"))
if mibBuilder.loadTexts: phivCircuitCountEntry.setStatus('mandatory')
phivCircuitCountSecLastZeroed = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 1), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountSecLastZeroed.setStatus('mandatory')
phivCircuitCountTermPacketsRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 2), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountTermPacketsRecd.setStatus('mandatory')
phivCircuitCountOriginPackSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 3), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountOriginPackSent.setStatus('mandatory')
phivCircuitCountTermCongLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 4), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountTermCongLoss.setStatus('mandatory')
phivCircuitCountCorruptLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 5), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountCorruptLoss.setStatus('mandatory')
phivCircuitCountTransitPksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 6), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountTransitPksRecd.setStatus('mandatory')
phivCircuitCountTransitPkSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 7), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountTransitPkSent.setStatus('mandatory')
phivCircuitCountTransitCongestLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 8), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountTransitCongestLoss.setStatus('mandatory')
phivCircuitCountCircuitDown = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 9), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountCircuitDown.setStatus('mandatory')
phivCircuitCountInitFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 10), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountInitFailure.setStatus('mandatory')
phivCircuitCountAdjDown = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 11), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountAdjDown.setStatus('mandatory')
phivCircuitCountPeakAdj = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 12), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountPeakAdj.setStatus('mandatory')
phivCircuitCountBytesRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 13), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountBytesRecd.setStatus('mandatory')
phivCircuitCountBytesSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 14), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountBytesSent.setStatus('mandatory')
phivCircuitCountDataBlocksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 15), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountDataBlocksRecd.setStatus('mandatory')
phivCircuitCountDataBlocksSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 16), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountDataBlocksSent.setStatus('mandatory')
phivCircuitCountUsrBuffUnav = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 17), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCircuitCountUsrBuffUnav.setStatus('mandatory')
phivCircuitOrigQueueLimit = MibScalar((1, 3, 6, 1, 2, 1, 18, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivCircuitOrigQueueLimit.setStatus('mandatory')
phivCircuitCountZeroCount = MibScalar((1, 3, 6, 1, 2, 1, 18, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivCircuitCountZeroCount.setStatus('mandatory')
phivDDCMPCircuitParametersTable = MibTable((1, 3, 6, 1, 2, 1, 18, 7, 1), )
if mibBuilder.loadTexts: phivDDCMPCircuitParametersTable.setStatus('mandatory')
phivDDCMPCircuitParametersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 7, 1, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivDDCMPCircuitIndex"))
if mibBuilder.loadTexts: phivDDCMPCircuitParametersEntry.setStatus('mandatory')
phivDDCMPCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitIndex.setStatus('mandatory')
phivDDCMPCircuitAdjNodeAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 1, 1, 2), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitAdjNodeAddr.setStatus('mandatory')
phivDDCMPCircuitTributary = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitTributary.setStatus('mandatory')
phivDDCMPCircuitCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 7, 2), )
if mibBuilder.loadTexts: phivDDCMPCircuitCountTable.setStatus('mandatory')
phivDDCMPCircuitCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 7, 2, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivCircuitIndex"))
if mibBuilder.loadTexts: phivDDCMPCircuitCountEntry.setStatus('mandatory')
phivDDCMPCircuitErrorsInbd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 1), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitErrorsInbd.setStatus('mandatory')
phivDDCMPCircuitErrorsOutbd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 2), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitErrorsOutbd.setStatus('mandatory')
phivDDCMPCircuitRmteReplyTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 3), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitRmteReplyTimeouts.setStatus('mandatory')
phivDDCMPCircuitLocalReplyTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 4), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitLocalReplyTimeouts.setStatus('mandatory')
phivDDCMPCircuitRmteBuffErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 5), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitRmteBuffErrors.setStatus('mandatory')
phivDDCMPCircuitLocalBuffErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 6), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitLocalBuffErrors.setStatus('mandatory')
phivDDCMPCircuitSelectIntervalsElap = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 7), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitSelectIntervalsElap.setStatus('mandatory')
phivDDCMPCircuitSelectTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPCircuitSelectTimeouts.setStatus('mandatory')
phivDDCMPLineCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 7, 3), )
if mibBuilder.loadTexts: phivDDCMPLineCountTable.setStatus('mandatory')
phivDDCMPLineCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 7, 3, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivDDCMPLineCountIndex"))
if mibBuilder.loadTexts: phivDDCMPLineCountEntry.setStatus('mandatory')
phivDDCMPLineCountIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPLineCountIndex.setStatus('mandatory')
phivDDCMPLineCountDataErrsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 2), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPLineCountDataErrsIn.setStatus('mandatory')
phivDDCMPLineCountRmteStationErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 3), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPLineCountRmteStationErrs.setStatus('mandatory')
phivDDCMPLineCountLocalStationErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 4), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivDDCMPLineCountLocalStationErrs.setStatus('mandatory')
phivControlSchedTimer = MibScalar((1, 3, 6, 1, 2, 1, 18, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 65535)).clone(200)).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivControlSchedTimer.setStatus('mandatory')
phivControlDeadTimer = MibScalar((1, 3, 6, 1, 2, 1, 18, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivControlDeadTimer.setStatus('mandatory')
phivControlDelayTimer = MibScalar((1, 3, 6, 1, 2, 1, 18, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivControlDelayTimer.setStatus('mandatory')
phivControlStreamTimer = MibScalar((1, 3, 6, 1, 2, 1, 18, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(6000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivControlStreamTimer.setStatus('mandatory')
phivControlParametersTable = MibTable((1, 3, 6, 1, 2, 1, 18, 8, 5), )
if mibBuilder.loadTexts: phivControlParametersTable.setStatus('mandatory')
phivControlParametersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 8, 5, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivControlCircuitIndex"))
if mibBuilder.loadTexts: phivControlParametersEntry.setStatus('mandatory')
phivControlCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivControlCircuitIndex.setStatus('mandatory')
phivControlBabbleTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(6000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlBabbleTimer.setStatus('mandatory')
phivControlMaxBuffs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlMaxBuffs.setStatus('mandatory')
phivControlMaxTransmits = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlMaxTransmits.setStatus('mandatory')
phivControlDyingBase = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlDyingBase.setStatus('mandatory')
phivControlDyingIncrement = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlDyingIncrement.setStatus('mandatory')
phivControlDeadThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlDeadThreshold.setStatus('mandatory')
phivControlDyingThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlDyingThreshold.setStatus('mandatory')
phivControlInactTreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlInactTreshold.setStatus('mandatory')
phivControlPollingState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("automatic", 1), ("active", 2), ("inactive", 3), ("dying", 4), ("dead", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlPollingState.setStatus('mandatory')
phivControlPollingSubState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("dying", 3), ("dead", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivControlPollingSubState.setStatus('mandatory')
phivControlTransTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivControlTransTimer.setStatus('mandatory')
phivEthLinkParametersTable = MibTable((1, 3, 6, 1, 2, 1, 18, 9, 1), )
if mibBuilder.loadTexts: phivEthLinkParametersTable.setStatus('mandatory')
phivEthLinkParametersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 9, 1, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivEthLinkIndex"))
if mibBuilder.loadTexts: phivEthLinkParametersEntry.setStatus('mandatory')
phivEthLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEthLinkIndex.setStatus('mandatory')
phivEthDesigRouterNodeAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 2), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEthDesigRouterNodeAddr.setStatus('mandatory')
phivEthMaxRouters = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEthMaxRouters.setStatus('mandatory')
phivEthRouterPri = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivEthRouterPri.setStatus('mandatory')
phivEthHardwareAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivEthHardwareAddr.setStatus('mandatory')
phivCountersCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 10, 1), )
if mibBuilder.loadTexts: phivCountersCountTable.setStatus('mandatory')
phivCountersCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 10, 1, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivCountersIndex"))
if mibBuilder.loadTexts: phivCountersCountEntry.setStatus('mandatory')
phivCountersIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersIndex.setStatus('mandatory')
phivCountersCountBytesRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 2), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountBytesRecd.setStatus('mandatory')
phivCountersCountBytesSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 3), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountBytesSent.setStatus('mandatory')
phivCountersCountDataBlocksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 4), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountDataBlocksRecd.setStatus('obsolete')
phivCountersCountDataBlocksSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 5), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountDataBlocksSent.setStatus('obsolete')
phivCountersCountEthUsrBuffUnav = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 6), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountEthUsrBuffUnav.setStatus('mandatory')
phivCountersCountMcastBytesRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 7), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountMcastBytesRecd.setStatus('mandatory')
phivCountersCountDataBlksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 8), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountDataBlksRecd.setStatus('mandatory')
phivCountersCountDataBlksSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 9), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountDataBlksSent.setStatus('mandatory')
phivCountersCountMcastBlksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 10), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountMcastBlksRecd.setStatus('mandatory')
phivCountersCountBlksSentDef = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 11), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountBlksSentDef.setStatus('mandatory')
phivCountersCountBlksSentSingleCol = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 12), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountBlksSentSingleCol.setStatus('mandatory')
phivCountersCountBlksSentMultCol = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 13), PhivCounter().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountBlksSentMultCol.setStatus('mandatory')
phivCountersCountSendFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountSendFailure.setStatus('mandatory')
phivCountersCountCollDetectFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountCollDetectFailure.setStatus('mandatory')
phivCountersCountReceiveFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountReceiveFailure.setStatus('mandatory')
phivCountersCountUnrecFrameDest = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountUnrecFrameDest.setStatus('mandatory')
phivCountersCountDataOver = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountDataOver.setStatus('mandatory')
phivCountersCountSysBuffUnav = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountSysBuffUnav.setStatus('mandatory')
phivCountersCountUsrBuffUnav = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivCountersCountUsrBuffUnav.setStatus('mandatory')
phivAdjTable = MibTable((1, 3, 6, 1, 2, 1, 18, 11, 1), )
if mibBuilder.loadTexts: phivAdjTable.setStatus('obsolete')
phivAdjEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 11, 1, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivAdjCircuitIndex"))
if mibBuilder.loadTexts: phivAdjEntry.setStatus('obsolete')
phivAdjCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjCircuitIndex.setStatus('obsolete')
phivAdjNodeAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 2), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjNodeAddr.setStatus('obsolete')
phivAdjBlockSize = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjBlockSize.setStatus('obsolete')
phivAdjListenTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjListenTimer.setStatus('obsolete')
phivAdjCircuitEtherServPhysAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjCircuitEtherServPhysAddr.setStatus('obsolete')
phivAdjType = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("routing-III", 1), ("nonrouting-III", 2), ("area", 3), ("routing-IV", 4), ("nonrouting-IV", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjType.setStatus('obsolete')
phivAdjState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initializing", 1), ("up", 2), ("run", 3), ("circuit-rejected", 4), ("data-link-start", 5), ("routing-layer-initialize", 6), ("routing-layer-verify", 7), ("routing-layer-complete", 8), ("off", 9), ("halt", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjState.setStatus('obsolete')
phivAdjPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjPriority.setStatus('obsolete')
phivAdjExecListenTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjExecListenTimer.setStatus('obsolete')
phivAdjNodeTable = MibTable((1, 3, 6, 1, 2, 1, 18, 11, 2), )
if mibBuilder.loadTexts: phivAdjNodeTable.setStatus('mandatory')
phivAdjNodeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 11, 2, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivAdjNodeCircuitIndex"), (0, "DECNET-PHIV-MIB", "phivAdjAddr"))
if mibBuilder.loadTexts: phivAdjNodeEntry.setStatus('mandatory')
phivAdjNodeCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjNodeCircuitIndex.setStatus('mandatory')
phivAdjAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 2), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjAddr.setStatus('mandatory')
phivAdjNodeBlockSize = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjNodeBlockSize.setStatus('mandatory')
phivAdjNodeListenTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjNodeListenTimer.setStatus('mandatory')
phivAdjNodeCircuitEtherServPhysAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjNodeCircuitEtherServPhysAddr.setStatus('mandatory')
phivAdjNodeType = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("routing-III", 1), ("nonrouting-III", 2), ("area", 3), ("routing-IV", 4), ("nonrouting-IV", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjNodeType.setStatus('mandatory')
phivAdjNodeState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initializing", 1), ("up", 2), ("run", 3), ("circuit-rejected", 4), ("data-link-start", 5), ("routing-layer-initialize", 6), ("routing-layer-verify", 7), ("routing-layer-complete", 8), ("off", 9), ("halt", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjNodeState.setStatus('mandatory')
phivAdjNodePriority = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAdjNodePriority.setStatus('mandatory')
phivLineTable = MibTable((1, 3, 6, 1, 2, 1, 18, 12, 1), )
if mibBuilder.loadTexts: phivLineTable.setStatus('mandatory')
phivLineEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 12, 1, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivLineIndex"))
if mibBuilder.loadTexts: phivLineEntry.setStatus('mandatory')
phivLineIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineIndex.setStatus('mandatory')
phivLineName = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineName.setStatus('mandatory')
phivLineState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("service", 3), ("cleared", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineState.setStatus('mandatory')
phivLineSubstate = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("starting", 1), ("reflecting", 2), ("looping", 3), ("loading", 4), ("dumping", 5), ("triggering", 6), ("auto-service", 7), ("auto-loading", 8), ("auto-dumping", 9), ("auto-triggering", 10), ("synchronizing", 11), ("failed", 12), ("running", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineSubstate.setStatus('mandatory')
phivLineService = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("starting", 1), ("reflecting", 2), ("looping", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineService.setStatus('mandatory')
phivLineDevice = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineDevice.setStatus('mandatory')
phivLineReceiveBuffs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineReceiveBuffs.setStatus('mandatory')
phivLineProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15))).clone(namedValues=NamedValues(("ddcmp-point", 1), ("ddcmp-control", 2), ("ddcmp-tributary", 3), ("reserved", 4), ("ddcmp-dmc", 5), ("olapb", 6), ("ethernet", 7), ("ci", 8), ("qp2", 9), ("other", 14), ("fddi", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineProtocol.setStatus('mandatory')
phivLineServiceTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineServiceTimer.setStatus('mandatory')
phivLineMaxBlock = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivLineMaxBlock.setStatus('mandatory')
phivNonBroadcastTable = MibTable((1, 3, 6, 1, 2, 1, 18, 14, 1), )
if mibBuilder.loadTexts: phivNonBroadcastTable.setStatus('mandatory')
phivNonBroadcastEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 14, 1, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivNonBroadcastIndex"))
if mibBuilder.loadTexts: phivNonBroadcastEntry.setStatus('mandatory')
phivNonBroadcastIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivNonBroadcastIndex.setStatus('mandatory')
phivNonBroadcastController = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("loopback", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivNonBroadcastController.setStatus('mandatory')
phivNonBroadcastDuplex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full", 1), ("half", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivNonBroadcastDuplex.setStatus('mandatory')
phivNonBroadcastClock = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("external", 1), ("internal", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivNonBroadcastClock.setStatus('mandatory')
phivNonBroadcastRetransmitTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(3000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivNonBroadcastRetransmitTimer.setStatus('mandatory')
phivAreaTable = MibTable((1, 3, 6, 1, 2, 1, 18, 15, 1), )
if mibBuilder.loadTexts: phivAreaTable.setStatus('mandatory')
phivAreaEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 15, 1, 1), ).setIndexNames((0, "DECNET-PHIV-MIB", "phivAreaNum"))
if mibBuilder.loadTexts: phivAreaEntry.setStatus('mandatory')
phivAreaNum = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAreaNum.setStatus('mandatory')
phivAreaState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5))).clone(namedValues=NamedValues(("reachable", 4), ("unreachable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAreaState.setStatus('mandatory')
phivAreaCost = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAreaCost.setStatus('mandatory')
phivAreaHops = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAreaHops.setStatus('mandatory')
phivAreaNextNode = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 5), PhivAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAreaNextNode.setStatus('mandatory')
phivAreaCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: phivAreaCircuitIndex.setStatus('mandatory')
phivAreaMaxCost = MibScalar((1, 3, 6, 1, 2, 1, 18, 15, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1022))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivAreaMaxCost.setStatus('mandatory')
phivAreaMaxHops = MibScalar((1, 3, 6, 1, 2, 1, 18, 15, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivAreaMaxHops.setStatus('mandatory')
phivRouteMaxArea = MibScalar((1, 3, 6, 1, 2, 1, 18, 15, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: phivRouteMaxArea.setStatus('mandatory')
mibBuilder.exportSymbols("DECNET-PHIV-MIB", phivAdjNodeEntry=phivAdjNodeEntry, phivAdjNodeBlockSize=phivAdjNodeBlockSize, phivCountersCountMcastBlksRecd=phivCountersCountMcastBlksRecd, phivCircuitParametersTable=phivCircuitParametersTable, phivAdjState=phivAdjState, phivCircuitCountOriginPackSent=phivCircuitCountOriginPackSent, phivEthLinkParametersEntry=phivEthLinkParametersEntry, phivAdjCircuitEtherServPhysAddr=phivAdjCircuitEtherServPhysAddr, phivRouteCountOutRngePktLoss=phivRouteCountOutRngePktLoss, phivCountersCountDataBlocksRecd=phivCountersCountDataBlocksRecd, phivAdjType=phivAdjType, phivControlCircuitIndex=phivControlCircuitIndex, phivCountersCountBytesRecd=phivCountersCountBytesRecd, phivDDCMPCircuitErrorsOutbd=phivDDCMPCircuitErrorsOutbd, phivAdjNodeListenTimer=phivAdjNodeListenTimer, phivEndCountTotalMessRec=phivEndCountTotalMessRec, phivCircuitCountBytesRecd=phivCircuitCountBytesRecd, phivEthLinkIndex=phivEthLinkIndex, phivCountersCountDataBlksRecd=phivCountersCountDataBlksRecd, phivAreaMaxHops=phivAreaMaxHops, phivControlBabbleTimer=phivControlBabbleTimer, phivControlParametersEntry=phivControlParametersEntry, control=control, phivSessionSystemName=phivSessionSystemName, phivRouteRoutingVers=phivRouteRoutingVers, phivAdjListenTimer=phivAdjListenTimer, phivDDCMPCircuitParametersEntry=phivDDCMPCircuitParametersEntry, phivRouteCountZeroCount=phivRouteCountZeroCount, phivSessionOutTimer=phivSessionOutTimer, phivCircuitCommonType=phivCircuitCommonType, phivRouteSystemAddress=phivRouteSystemAddress, phivCountersCountEntry=phivCountersCountEntry, phivSystemState=phivSystemState, phivEthDesigRouterNodeAddr=phivEthDesigRouterNodeAddr, phivCircuitExecRecallTimer=phivCircuitExecRecallTimer, phivNonBroadcastClock=phivNonBroadcastClock, phivCountersCountBlksSentDef=phivCountersCountBlksSentDef, phivRouteMaxArea=phivRouteMaxArea, phivEndDelayFact=phivEndDelayFact, phivLineReceiveBuffs=phivLineReceiveBuffs, phivCountersCountReceiveFailure=phivCountersCountReceiveFailure, phivDDCMPCircuitParametersTable=phivDDCMPCircuitParametersTable, phivCircuitCountInitFailure=phivCircuitCountInitFailure, phivControlDeadThreshold=phivControlDeadThreshold, phivRouteSegBuffSize=phivRouteSegBuffSize, phivRouteBuffSize=phivRouteBuffSize, phivCircuitExecCost=phivCircuitExecCost, phivCircuitCountTermPacketsRecd=phivCircuitCountTermPacketsRecd, phivCircuitCountTermCongLoss=phivCircuitCountTermCongLoss, phivDDCMPLineCountRmteStationErrs=phivDDCMPLineCountRmteStationErrs, phivCircuitCountTransitCongestLoss=phivCircuitCountTransitCongestLoss, phivControlSchedTimer=phivControlSchedTimer, phivControlPollingSubState=phivControlPollingSubState, phivDDCMPLineCountIndex=phivDDCMPLineCountIndex, phivControlDyingBase=phivControlDyingBase, phivEndCountZeroCount=phivEndCountZeroCount, phivCountersCountUsrBuffUnav=phivCountersCountUsrBuffUnav, circuit=circuit, phivControlTransTimer=phivControlTransTimer, phivCountersCountDataBlocksSent=phivCountersCountDataBlocksSent, phivLineServiceTimer=phivLineServiceTimer, phivAreaNum=phivAreaNum, phivCountersCountBlksSentSingleCol=phivCountersCountBlksSentSingleCol, phivEndCountUsrMessSent=phivEndCountUsrMessSent, phivAreaHops=phivAreaHops, phivControlParametersTable=phivControlParametersTable, phivCountersCountBytesSent=phivCountersCountBytesSent, phivDDCMPLineCountTable=phivDDCMPLineCountTable, phivManagement=phivManagement, phivLevel1RouteEntry=phivLevel1RouteEntry, phivLineEntry=phivLineEntry, phivDDCMPLineCountDataErrsIn=phivDDCMPLineCountDataErrsIn, phivControlMaxBuffs=phivControlMaxBuffs, phivRouteRoutingType=phivRouteRoutingType, phivCircuitCountCorruptLoss=phivCircuitCountCorruptLoss, phivDDCMPCircuitIndex=phivDDCMPCircuitIndex, phivAdjExecListenTimer=phivAdjExecListenTimer, phivLineMaxBlock=phivLineMaxBlock, phivEndCountReponseTimeouts=phivEndCountReponseTimeouts, phivLevel1RouteNextNode=phivLevel1RouteNextNode, phivCircuitCountDataBlocksSent=phivCircuitCountDataBlocksSent, phivEndCountConnectsSent=phivEndCountConnectsSent, phivRouteType=phivRouteType, phivEndCountRecdConnectResErrs=phivEndCountRecdConnectResErrs, phivDDCMPCircuitSelectIntervalsElap=phivDDCMPCircuitSelectIntervalsElap, phivEndCountTotalBytesRec=phivEndCountTotalBytesRec, phivEndCountEntry=phivEndCountEntry, phivDDCMPCircuitCountEntry=phivDDCMPCircuitCountEntry, phivAdjPriority=phivAdjPriority, phivLevel1RouteCost=phivLevel1RouteCost, phivEndRemoteState=phivEndRemoteState, phivCircuitIndex=phivCircuitIndex, phivEndCountUsrBytesRec=phivEndCountUsrBytesRec, phivRouteMaxHops=phivRouteMaxHops, phivDDCMPCircuitLocalReplyTimeouts=phivDDCMPCircuitLocalReplyTimeouts, phivEndRemoteTable=phivEndRemoteTable, phivNonBroadcastDuplex=phivNonBroadcastDuplex, phivEndCountConnectsRecd=phivEndCountConnectsRecd, phivDDCMPCircuitCountTable=phivDDCMPCircuitCountTable, phivControlDeadTimer=phivControlDeadTimer, phivEndCountSecsLastZeroed=phivEndCountSecsLastZeroed, phivLineTable=phivLineTable, phivNonBroadcastIndex=phivNonBroadcastIndex, phivMgmtMgmtVers=phivMgmtMgmtVers, phivEndInactivityTimer=phivEndInactivityTimer, phivCircuitCountUsrBuffUnav=phivCircuitCountUsrBuffUnav, phivControlPollingState=phivControlPollingState, phivLevel1RouteHops=phivLevel1RouteHops, phiv=phiv, phivRouteCountOverSzePktLoss=phivRouteCountOverSzePktLoss, phivCountersCountEthUsrBuffUnav=phivCountersCountEthUsrBuffUnav, phivLineIndex=phivLineIndex, ddcmp=ddcmp, phivAreaState=phivAreaState, phivCircuitCountAdjDown=phivCircuitCountAdjDown, phivCircuitCountPeakAdj=phivCircuitCountPeakAdj, phivEndRetransmitFactor=phivEndRetransmitFactor, phivRouteMaxBuffs=phivRouteMaxBuffs, phivCircuitCountEntry=phivCircuitCountEntry, phivAdjCircuitIndex=phivAdjCircuitIndex, phivEndNSPVers=phivEndNSPVers, phivAdjNodeAddr=phivAdjNodeAddr, phivAreaCircuitIndex=phivAreaCircuitIndex, phivCircuitCountZeroCount=phivCircuitCountZeroCount, phivEndCountUsrBytesSent=phivEndCountUsrBytesSent, phivEndCountTotalBytesSent=phivEndCountTotalBytesSent, phivRouteBroadcastRouteTimer=phivRouteBroadcastRouteTimer, phivCircuitCommonName=phivCircuitCommonName, phivCountersCountDataOver=phivCountersCountDataOver, phivRouteMaxVisits=phivRouteMaxVisits, phivAdjBlockSize=phivAdjBlockSize, phivEndCountTotalMessSent=phivEndCountTotalMessSent, phivAdjNodeType=phivAdjNodeType, area=area, phivCircuitService=phivCircuitService, phivNonBroadcastTable=phivNonBroadcastTable, phivCircuitCommonSubState=phivCircuitCommonSubState, phivRouteMaxAddr=phivRouteMaxAddr, phivDDCMPCircuitRmteReplyTimeouts=phivDDCMPCircuitRmteReplyTimeouts, phivAdjAddr=phivAdjAddr, phivCircuitCountTransitPksRecd=phivCircuitCountTransitPksRecd, phivRouteCountNodeUnrPktLoss=phivRouteCountNodeUnrPktLoss, phivRouteMaxCost=phivRouteMaxCost, phivSessionInTimer=phivSessionInTimer, PhivCounter=PhivCounter, phivCircuitCountBytesSent=phivCircuitCountBytesSent, phivNonBroadcastController=phivNonBroadcastController, phivControlDelayTimer=phivControlDelayTimer, phivEndCountHostNodeID=phivEndCountHostNodeID, phivLineService=phivLineService, phivDDCMPLineCountLocalStationErrs=phivDDCMPLineCountLocalStationErrs, phivCountersIndex=phivCountersIndex, phivExecIdent=phivExecIdent, phivCircuitParametersEntry=phivCircuitParametersEntry, phivCircuitCountSecLastZeroed=phivCircuitCountSecLastZeroed, phivEndCircuitIndex=phivEndCircuitIndex, InterfaceIndex=InterfaceIndex, phivNonBroadcastEntry=phivNonBroadcastEntry, phivEndActiveLinks=phivEndActiveLinks, phivAdjNodePriority=phivAdjNodePriority, phivLineName=phivLineName, phivAdjNodeTable=phivAdjNodeTable, phivAreaTable=phivAreaTable, phivLineSubstate=phivLineSubstate, phivEthMaxRouters=phivEthMaxRouters, phivLevel1RouteCircuitIndex=phivLevel1RouteCircuitIndex, phivDDCMPLineCountEntry=phivDDCMPLineCountEntry, phivEndDelay=phivEndDelay, phivCircuitCountDataBlocksRecd=phivCircuitCountDataBlocksRecd, phivNonBroadcastRetransmitTimer=phivNonBroadcastRetransmitTimer, phivEndCountTable=phivEndCountTable, phivRouteCountVerifReject=phivRouteCountVerifReject, phivCountersCountSendFailure=phivCountersCountSendFailure, phivAdjNodeState=phivAdjNodeState, nonBroadcastLine=nonBroadcastLine, phivEndUCountUsrMessRec=phivEndUCountUsrMessRec, phivCircuitExecHelloTimer=phivCircuitExecHelloTimer, phivLineDevice=phivLineDevice, phivDDCMPCircuitSelectTimeouts=phivDDCMPCircuitSelectTimeouts, phivControlDyingThreshold=phivControlDyingThreshold, phivAreaCost=phivAreaCost, PhivAddr=PhivAddr, phivRouteMaxBdcastRouters=phivRouteMaxBdcastRouters, phivDDCMPCircuitAdjNodeAddr=phivDDCMPCircuitAdjNodeAddr, phivLevel1RouteTable=phivLevel1RouteTable, phivCircuitLineIndex=phivCircuitLineIndex, phivCircuitCountTransitPkSent=phivCircuitCountTransitPkSent, phivAreaNextNode=phivAreaNextNode, phivAreaEntry=phivAreaEntry, phivEthHardwareAddr=phivEthHardwareAddr, phivAdjNodeCircuitIndex=phivAdjNodeCircuitIndex, phivCountersCountDataBlksSent=phivCountersCountDataBlksSent, routing=routing, phivAreaMaxCost=phivAreaMaxCost, phivRouteMaxCircuits=phivRouteMaxCircuits, phivDDCMPCircuitTributary=phivDDCMPCircuitTributary, phivCountersCountTable=phivCountersCountTable, phivLevel1RouteNodeAddr=phivLevel1RouteNodeAddr, phivControlMaxTransmits=phivControlMaxTransmits, phivEthLinkParametersTable=phivEthLinkParametersTable, phivCountersCountUnrecFrameDest=phivCountersCountUnrecFrameDest, line=line, phivEndDelayWeight=phivEndDelayWeight, session=session, phivRouteCountAgedPktLoss=phivRouteCountAgedPktLoss, phivCountersCountCollDetectFailure=phivCountersCountCollDetectFailure, phivCircuitOrigQueueLimit=phivCircuitOrigQueueLimit, phivRouteCountPacketFmtErr=phivRouteCountPacketFmtErr, phivCircuitCountTable=phivCircuitCountTable, phivControlDyingIncrement=phivControlDyingIncrement, phivCountersCountMcastBytesRecd=phivCountersCountMcastBytesRecd, phivDDCMPCircuitLocalBuffErrors=phivDDCMPCircuitLocalBuffErrors, phivRouteSystemAddr=phivRouteSystemAddr, phivControlInactTreshold=phivControlInactTreshold, phivEthRouterPri=phivEthRouterPri, phivCountersCountBlksSentMultCol=phivCountersCountBlksSentMultCol, phivControlStreamTimer=phivControlStreamTimer, phivRouteMaxBdcastNonRouters=phivRouteMaxBdcastNonRouters, phivAdjTable=phivAdjTable, end=end, phivLineProtocol=phivLineProtocol, phivRouteRoutingTimer=phivRouteRoutingTimer, phivCircuitCommonState=phivCircuitCommonState, adjacency=adjacency, phivEndRemoteHostNodeID=phivEndRemoteHostNodeID, ethernet=ethernet, phivEndRemoteEntry=phivEndRemoteEntry, phivCountersCountSysBuffUnav=phivCountersCountSysBuffUnav, phivEndMaxLinks=phivEndMaxLinks, phivEndMaxLinksActive=phivEndMaxLinksActive, phivDDCMPCircuitRmteBuffErrors=phivDDCMPCircuitRmteBuffErrors, phivSystem=phivSystem, phivAdjEntry=phivAdjEntry, phivAdjNodeCircuitEtherServPhysAddr=phivAdjNodeCircuitEtherServPhysAddr, phivLineState=phivLineState, phivRouteCountPtlRteUpdtLoss=phivRouteCountPtlRteUpdtLoss, phivDDCMPCircuitErrorsInbd=phivDDCMPCircuitErrorsInbd, counters=counters, phivCircuitCountCircuitDown=phivCircuitCountCircuitDown)
