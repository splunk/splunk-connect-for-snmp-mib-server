#
# PySNMP MIB module A3COM-HUAWEI-8021PAE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-8021PAE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:48:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
huaweiMgmt, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "huaweiMgmt")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
dot1xPaePortNumber, = mibBuilder.importSymbols("IEEE8021-PAE-MIB", "dot1xPaePortNumber")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Counter64, Integer32, MibIdentifier, Unsigned32, TimeTicks, IpAddress, ModuleIdentity, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "Integer32", "MibIdentifier", "Unsigned32", "TimeTicks", "IpAddress", "ModuleIdentity", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "NotificationType")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
hwpaeExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22))
hwpaeExtMib.setRevisions(('2001-06-29 00:00',))
if mibBuilder.loadTexts: hwpaeExtMib.setLastUpdated('200106290000Z')
if mibBuilder.loadTexts: hwpaeExtMib.setOrganization('')
hwpaeExtMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1))
hwdot1xPaeSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 1))
hwdot1xPaeAuthenticator = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2))
hwdot1xAuthQuietPeriod = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 1, 1), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xAuthQuietPeriod.setStatus('current')
hwdot1xAuthTxPeriod = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 1, 2), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xAuthTxPeriod.setStatus('current')
hwdot1xAuthSuppTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 1, 3), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xAuthSuppTimeout.setStatus('current')
hwdot1xAuthServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 1, 4), Unsigned32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xAuthServerTimeout.setStatus('current')
hwdot1xAuthMaxReq = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 1, 5), Unsigned32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xAuthMaxReq.setStatus('current')
hwdot1xAuthReAuthPeriod = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 1, 6), Unsigned32().clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xAuthReAuthPeriod.setStatus('current')
hwdot1xAuthMethod = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("chap", 1), ("pap", 2), ("eap", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xAuthMethod.setStatus('current')
hwdot1xAuthConfigExtTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2, 1), )
if mibBuilder.loadTexts: hwdot1xAuthConfigExtTable.setStatus('current')
hwdot1xAuthConfigExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"))
if mibBuilder.loadTexts: hwdot1xAuthConfigExtEntry.setStatus('current')
hwdot1xpaeportAuthAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xpaeportAuthAdminStatus.setStatus('current')
hwdot1xpaeportControlledType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("port", 1), ("mac", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xpaeportControlledType.setStatus('current')
hwdot1xpaeportMaxUserNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2, 1, 1, 3), Integer32().clone(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xpaeportMaxUserNum.setStatus('current')
hwdot1xpaeportUserNumNow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1xpaeportUserNumNow.setStatus('current')
hwdot1xpaeportClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xpaeportClearStatistics.setStatus('current')
hwdot1xpaeportMcastTrigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xpaeportMcastTrigStatus.setStatus('current')
hwdot1xpaeportHandshakeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1xpaeportHandshakeStatus.setStatus('current')
hwdot1xPaeTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 0))
supplicantproxycheck = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 0, 1)).setObjects(("A3COM-HUAWEI-8021PAE-MIB", "proxycheckVlanId"), ("A3COM-HUAWEI-8021PAE-MIB", "proxycheckPortName"), ("A3COM-HUAWEI-8021PAE-MIB", "proxycheckMacAddr"), ("A3COM-HUAWEI-8021PAE-MIB", "proxycheckIpaddr"), ("A3COM-HUAWEI-8021PAE-MIB", "proxycheckUsrName"))
if mibBuilder.loadTexts: supplicantproxycheck.setStatus('current')
proxycheckVlanId = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 0, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: proxycheckVlanId.setStatus('current')
proxycheckPortName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 0, 3), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: proxycheckPortName.setStatus('current')
proxycheckMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 0, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: proxycheckMacAddr.setStatus('current')
proxycheckIpaddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 0, 5), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: proxycheckIpaddr.setStatus('current')
proxycheckUsrName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 22, 1, 0, 6), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: proxycheckUsrName.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-8021PAE-MIB", hwdot1xAuthConfigExtEntry=hwdot1xAuthConfigExtEntry, proxycheckVlanId=proxycheckVlanId, hwdot1xAuthServerTimeout=hwdot1xAuthServerTimeout, hwdot1xAuthTxPeriod=hwdot1xAuthTxPeriod, hwdot1xpaeportMcastTrigStatus=hwdot1xpaeportMcastTrigStatus, hwdot1xpaeportHandshakeStatus=hwdot1xpaeportHandshakeStatus, hwdot1xAuthConfigExtTable=hwdot1xAuthConfigExtTable, hwdot1xpaeportUserNumNow=hwdot1xpaeportUserNumNow, PYSNMP_MODULE_ID=hwpaeExtMib, proxycheckMacAddr=proxycheckMacAddr, hwdot1xpaeportClearStatistics=hwdot1xpaeportClearStatistics, proxycheckIpaddr=proxycheckIpaddr, hwpaeExtMib=hwpaeExtMib, proxycheckUsrName=proxycheckUsrName, proxycheckPortName=proxycheckPortName, hwdot1xAuthMaxReq=hwdot1xAuthMaxReq, hwdot1xPaeSystem=hwdot1xPaeSystem, hwdot1xpaeportControlledType=hwdot1xpaeportControlledType, hwdot1xPaeTraps=hwdot1xPaeTraps, hwdot1xAuthReAuthPeriod=hwdot1xAuthReAuthPeriod, hwdot1xAuthMethod=hwdot1xAuthMethod, supplicantproxycheck=supplicantproxycheck, hwdot1xAuthSuppTimeout=hwdot1xAuthSuppTimeout, hwdot1xAuthQuietPeriod=hwdot1xAuthQuietPeriod, hwdot1xpaeportMaxUserNum=hwdot1xpaeportMaxUserNum, hwdot1xpaeportAuthAdminStatus=hwdot1xpaeportAuthAdminStatus, hwpaeExtMibObjects=hwpaeExtMibObjects, hwdot1xPaeAuthenticator=hwdot1xPaeAuthenticator)
