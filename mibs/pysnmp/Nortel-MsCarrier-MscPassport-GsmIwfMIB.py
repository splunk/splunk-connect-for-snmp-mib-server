#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-GsmIwfMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-GsmIwfMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
Integer32, StorageType, Gauge32, Unsigned32, RowStatus, RowPointer, Counter32, DisplayString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "StorageType", "Gauge32", "Unsigned32", "RowStatus", "RowPointer", "Counter32", "DisplayString")
Link, AsciiString, FixedPoint2, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Link", "AsciiString", "FixedPoint2", "NonReplicated")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, Unsigned32, Counter64, iso, Counter32, TimeTicks, Bits, NotificationType, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "Unsigned32", "Counter64", "iso", "Counter32", "TimeTicks", "Bits", "NotificationType", "ObjectIdentity", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
gsmIwfMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 129))
mscGsmCs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127))
mscGsmCsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 1), )
if mibBuilder.loadTexts: mscGsmCsRowStatusTable.setStatus('mandatory')
mscGsmCsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: mscGsmCsRowStatusEntry.setStatus('mandatory')
mscGsmCsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsRowStatus.setStatus('mandatory')
mscGsmCsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsComponentName.setStatus('mandatory')
mscGsmCsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsStorageType.setStatus('mandatory')
mscGsmCsTrunkGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: mscGsmCsTrunkGrpIndex.setStatus('mandatory')
mscGsmCsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 100), )
if mibBuilder.loadTexts: mscGsmCsProvTable.setStatus('mandatory')
mscGsmCsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: mscGsmCsProvEntry.setStatus('mandatory')
mscGsmCsCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 100, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsCommentText.setStatus('mandatory')
mscGsmCsMscIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 100, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsMscIpAddress.setStatus('mandatory')
mscGsmCsVirtualRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 100, 1, 4), RowPointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsVirtualRouterName.setStatus('mandatory')
mscGsmCsVoiceLaw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 100, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aLaw", 0), ("muLaw", 1))).clone('aLaw')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsVoiceLaw.setStatus('mandatory')
mscGsmCsCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 103), )
if mibBuilder.loadTexts: mscGsmCsCidDataTable.setStatus('mandatory')
mscGsmCsCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 103, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: mscGsmCsCidDataEntry.setStatus('mandatory')
mscGsmCsCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 103, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsCustomerIdentifier.setStatus('mandatory')
mscGsmCsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 104), )
if mibBuilder.loadTexts: mscGsmCsStateTable.setStatus('mandatory')
mscGsmCsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 104, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: mscGsmCsStateEntry.setStatus('mandatory')
mscGsmCsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 104, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsAdminState.setStatus('mandatory')
mscGsmCsOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 104, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsOperationalState.setStatus('mandatory')
mscGsmCsUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 104, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsUsageState.setStatus('mandatory')
mscGsmCsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121), )
if mibBuilder.loadTexts: mscGsmCsStatsTable.setStatus('mandatory')
mscGsmCsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: mscGsmCsStatsEntry.setStatus('mandatory')
mscGsmCsCurrentCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsCurrentCalls.setStatus('mandatory')
mscGsmCsCallsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsCallsRequested.setStatus('mandatory')
mscGsmCsCallsSetup = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsCallsSetup.setStatus('mandatory')
mscGsmCsCallsActivated = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsCallsActivated.setStatus('mandatory')
mscGsmCsCallsReleasedNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsCallsReleasedNormal.setStatus('mandatory')
mscGsmCsCallsReleasedAbnormal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsCallsReleasedAbnormal.setStatus('mandatory')
mscGsmCsChannelConfigChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsChannelConfigChanges.setStatus('mandatory')
mscGsmCsChannelModeModifyRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsChannelModeModifyRequests.setStatus('mandatory')
mscGsmCsStatusMessagesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsStatusMessagesRx.setStatus('mandatory')
mscGsmCsErroredMipFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 121, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsErroredMipFrames.setStatus('mandatory')
mscGsmCsModem = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 2))
mscGsmCsModemRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 2, 1), )
if mibBuilder.loadTexts: mscGsmCsModemRowStatusTable.setStatus('mandatory')
mscGsmCsModemRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsModemIndex"))
if mibBuilder.loadTexts: mscGsmCsModemRowStatusEntry.setStatus('mandatory')
mscGsmCsModemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsModemRowStatus.setStatus('mandatory')
mscGsmCsModemComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsModemComponentName.setStatus('mandatory')
mscGsmCsModemStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsModemStorageType.setStatus('mandatory')
mscGsmCsModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6, 7, 8, 9))).clone(namedValues=NamedValues(("v17", 0), ("v21", 1), ("v22", 2), ("v22bis", 3), ("v23", 4), ("v27ter", 6), ("v29", 7), ("v32", 8), ("v32bis", 9))))
if mibBuilder.loadTexts: mscGsmCsModemIndex.setStatus('mandatory')
mscGsmCsRlp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3))
mscGsmCsRlpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 1), )
if mibBuilder.loadTexts: mscGsmCsRlpRowStatusTable.setStatus('mandatory')
mscGsmCsRlpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsRlpIndex"))
if mibBuilder.loadTexts: mscGsmCsRlpRowStatusEntry.setStatus('mandatory')
mscGsmCsRlpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsRlpRowStatus.setStatus('mandatory')
mscGsmCsRlpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsRlpComponentName.setStatus('mandatory')
mscGsmCsRlpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsRlpStorageType.setStatus('mandatory')
mscGsmCsRlpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("half6kRate", 0), ("full6kRate", 1), ("full12kRate", 2), ("full14k5Rate", 3))))
if mibBuilder.loadTexts: mscGsmCsRlpIndex.setStatus('mandatory')
mscGsmCsRlpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 10), )
if mibBuilder.loadTexts: mscGsmCsRlpProvTable.setStatus('mandatory')
mscGsmCsRlpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsRlpIndex"))
if mibBuilder.loadTexts: mscGsmCsRlpProvEntry.setStatus('mandatory')
mscGsmCsRlpHighestVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsRlpHighestVersion.setStatus('mandatory')
mscGsmCsRlpIwfToMsWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61)).clone(61)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsRlpIwfToMsWindowSize.setStatus('mandatory')
mscGsmCsRlpMsToIwfWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61)).clone(61)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsRlpMsToIwfWindowSize.setStatus('mandatory')
mscGsmCsRlpT1AckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(380, 1020))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsRlpT1AckTimer.setStatus('mandatory')
mscGsmCsRlpT2AckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 79)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsRlpT2AckDelayTimer.setStatus('mandatory')
mscGsmCsRlpN2RetransmitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsRlpN2RetransmitCount.setStatus('mandatory')
mscGsmCsFax = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4))
mscGsmCsFaxRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4, 1), )
if mibBuilder.loadTexts: mscGsmCsFaxRowStatusTable.setStatus('mandatory')
mscGsmCsFaxRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsFaxIndex"))
if mibBuilder.loadTexts: mscGsmCsFaxRowStatusEntry.setStatus('mandatory')
mscGsmCsFaxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsFaxRowStatus.setStatus('mandatory')
mscGsmCsFaxComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsFaxComponentName.setStatus('mandatory')
mscGsmCsFaxStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsFaxStorageType.setStatus('mandatory')
mscGsmCsFaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmCsFaxIndex.setStatus('mandatory')
mscGsmCsFaxProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4, 10), )
if mibBuilder.loadTexts: mscGsmCsFaxProvTable.setStatus('mandatory')
mscGsmCsFaxProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsFaxIndex"))
if mibBuilder.loadTexts: mscGsmCsFaxProvEntry.setStatus('mandatory')
mscGsmCsFaxT1CalledToneTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 4, 10, 1, 1), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(150, 300)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsFaxT1CalledToneTimer.setStatus('mandatory')
mscGsmCsV42 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5))
mscGsmCsV42RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 1), )
if mibBuilder.loadTexts: mscGsmCsV42RowStatusTable.setStatus('mandatory')
mscGsmCsV42RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsV42Index"))
if mibBuilder.loadTexts: mscGsmCsV42RowStatusEntry.setStatus('mandatory')
mscGsmCsV42RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsV42RowStatus.setStatus('mandatory')
mscGsmCsV42ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsV42ComponentName.setStatus('mandatory')
mscGsmCsV42StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsV42StorageType.setStatus('mandatory')
mscGsmCsV42Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmCsV42Index.setStatus('mandatory')
mscGsmCsV42ProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10), )
if mibBuilder.loadTexts: mscGsmCsV42ProvTable.setStatus('mandatory')
mscGsmCsV42ProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsV42Index"))
if mibBuilder.loadTexts: mscGsmCsV42ProvEntry.setStatus('mandatory')
mscGsmCsV42T400DetectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1, 1), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(75, 254)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42T400DetectTimer.setStatus('mandatory')
mscGsmCsV42T401AckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1, 2), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(50, 900)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42T401AckTimer.setStatus('mandatory')
mscGsmCsV42T402AckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1, 3), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(25, 450)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42T402AckDelayTimer.setStatus('mandatory')
mscGsmCsV42T403IdleProbeTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 90)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42T403IdleProbeTimer.setStatus('mandatory')
mscGsmCsV42TxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42TxN401FrameSize.setStatus('mandatory')
mscGsmCsV42RxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42RxN401FrameSize.setStatus('mandatory')
mscGsmCsV42TxKwindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42TxKwindowSize.setStatus('mandatory')
mscGsmCsV42RxKwindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42RxKwindowSize.setStatus('mandatory')
mscGsmCsV42N400RetransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 5, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42N400RetransLimit.setStatus('mandatory')
mscGsmCsV42bis = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6))
mscGsmCsV42bisRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 1), )
if mibBuilder.loadTexts: mscGsmCsV42bisRowStatusTable.setStatus('mandatory')
mscGsmCsV42bisRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsV42bisIndex"))
if mibBuilder.loadTexts: mscGsmCsV42bisRowStatusEntry.setStatus('mandatory')
mscGsmCsV42bisRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsV42bisRowStatus.setStatus('mandatory')
mscGsmCsV42bisComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsV42bisComponentName.setStatus('mandatory')
mscGsmCsV42bisStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsV42bisStorageType.setStatus('mandatory')
mscGsmCsV42bisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmCsV42bisIndex.setStatus('mandatory')
mscGsmCsV42bisProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 10), )
if mibBuilder.loadTexts: mscGsmCsV42bisProvTable.setStatus('mandatory')
mscGsmCsV42bisProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsV42bisIndex"))
if mibBuilder.loadTexts: mscGsmCsV42bisProvEntry.setStatus('mandatory')
mscGsmCsV42bisCompressionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("encode", 1), ("decode", 2), ("both", 3))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42bisCompressionDirection.setStatus('mandatory')
mscGsmCsV42bisMaximumCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(512, 512), ValueRangeConstraint(1024, 1024), ValueRangeConstraint(2048, 2048), ValueRangeConstraint(4096, 4096), )).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42bisMaximumCodewords.setStatus('mandatory')
mscGsmCsV42bisMaximumStringSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 250)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42bisMaximumStringSize.setStatus('mandatory')
mscGsmCsV42bisActionOnError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("resetLink", 0), ("takeDownCall", 1))).clone('resetLink')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsV42bisActionOnError.setStatus('mandatory')
mscGsmCsLp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7))
mscGsmCsLpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 1), )
if mibBuilder.loadTexts: mscGsmCsLpRowStatusTable.setStatus('mandatory')
mscGsmCsLpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsLpIndex"))
if mibBuilder.loadTexts: mscGsmCsLpRowStatusEntry.setStatus('mandatory')
mscGsmCsLpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmCsLpRowStatus.setStatus('mandatory')
mscGsmCsLpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsLpComponentName.setStatus('mandatory')
mscGsmCsLpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsLpStorageType.setStatus('mandatory')
mscGsmCsLpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscGsmCsLpIndex.setStatus('mandatory')
mscGsmCsLpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 10), )
if mibBuilder.loadTexts: mscGsmCsLpOperTable.setStatus('mandatory')
mscGsmCsLpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmCsLpIndex"))
if mibBuilder.loadTexts: mscGsmCsLpOperEntry.setStatus('mandatory')
mscGsmCsLpConfiguredBearerChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsLpConfiguredBearerChannels.setStatus('mandatory')
mscGsmCsLpActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsLpActiveCalls.setStatus('mandatory')
mscGsmCsLpAssignedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsLpAssignedCapacity.setStatus('mandatory')
mscGsmCsLpModemsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 127, 7, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmCsLpModemsSupported.setStatus('mandatory')
mscGsmBc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128))
mscGsmBcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 1), )
if mibBuilder.loadTexts: mscGsmBcRowStatusTable.setStatus('mandatory')
mscGsmBcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"))
if mibBuilder.loadTexts: mscGsmBcRowStatusEntry.setStatus('mandatory')
mscGsmBcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmBcRowStatus.setStatus('mandatory')
mscGsmBcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcComponentName.setStatus('mandatory')
mscGsmBcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcStorageType.setStatus('mandatory')
mscGsmBcTrunkGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: mscGsmBcTrunkGrpIndex.setStatus('mandatory')
mscGsmBcCicIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047)))
if mibBuilder.loadTexts: mscGsmBcCicIndex.setStatus('mandatory')
mscGsmBcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101), )
if mibBuilder.loadTexts: mscGsmBcOperTable.setStatus('mandatory')
mscGsmBcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"))
if mibBuilder.loadTexts: mscGsmBcOperEntry.setStatus('mandatory')
mscGsmBcMipState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 0), ("pendingSetup", 1), ("setup", 2), ("pendingActivation", 3), ("activated", 4), ("holdDisconnect", 5), ("suspended", 6))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcMipState.setStatus('mandatory')
mscGsmBcMaxUserDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("n300", 0), ("n600", 1), ("n1200", 2), ("n120075", 3), ("n2400", 4), ("n4800", 5), ("n7200", 6), ("n9600", 7), ("n12000", 8), ("n14400", 9), ("n16800", 10), ("n19200", 11), ("n21600", 12), ("n24000", 13), ("n26400", 14), ("n28800", 15), ("n31200", 16), ("n32000", 17), ("n33600", 18), ("n38400", 19), ("n43200", 20), ("n48000", 21), ("n56000", 22), ("n57600", 23), ("n64000", 24), ("none", 25))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcMaxUserDataRate.setStatus('mandatory')
mscGsmBcConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("synchronous", 0), ("asynchronous", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcConnectionType.setStatus('mandatory')
mscGsmBcDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 99))).clone(namedValues=NamedValues(("n7", 0), ("n8", 1), ("notApplicable", 99))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcDataBits.setStatus('mandatory')
mscGsmBcStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 99))).clone(namedValues=NamedValues(("n1", 0), ("n2", 1), ("notApplicable", 99))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcStopBits.setStatus('mandatory')
mscGsmBcParity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("none", 0), ("odd", 1), ("even", 2), ("forced0", 3), ("forced1", 4), ("notApplicable", 99))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcParity.setStatus('mandatory')
mscGsmBcFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noFlowControlActive", 0), ("inband", 1), ("v110FlowCntrl", 2), ("errorCntrl", 3))).clone('noFlowControlActive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFlowControl.setStatus('mandatory')
mscGsmBcCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("faxG3", 0), ("cda31khz", 1), ("cdaUdi", 2), ("cdsUdi", 3), ("cds31khz", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcCallType.setStatus('mandatory')
mscGsmBcLastResponseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 99))).clone(namedValues=NamedValues(("requestDone", 0), ("systemError", 1), ("applicationError", 2), ("noResources", 3), ("msgSizeMismatch", 4), ("protocolViolation", 5), ("requestNotSupported", 6), ("requestDenied", 7), ("invalidMessage", 8), ("bufferNotFlushed", 9), ("notApplicable", 99))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLastResponseCode.setStatus('mandatory')
mscGsmBcMateBearerChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 101, 1, 10), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcMateBearerChannel.setStatus('mandatory')
mscGsmBcCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 104), )
if mibBuilder.loadTexts: mscGsmBcCidDataTable.setStatus('mandatory')
mscGsmBcCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 104, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"))
if mibBuilder.loadTexts: mscGsmBcCidDataEntry.setStatus('mandatory')
mscGsmBcCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 104, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmBcCustomerIdentifier.setStatus('mandatory')
mscGsmBcStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 105), )
if mibBuilder.loadTexts: mscGsmBcStateTable.setStatus('mandatory')
mscGsmBcStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 105, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"))
if mibBuilder.loadTexts: mscGsmBcStateEntry.setStatus('mandatory')
mscGsmBcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 105, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcAdminState.setStatus('mandatory')
mscGsmBcOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 105, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcOperationalState.setStatus('mandatory')
mscGsmBcUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 105, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUsageState.setStatus('mandatory')
mscGsmBcFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2))
mscGsmBcFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 1), )
if mibBuilder.loadTexts: mscGsmBcFramerRowStatusTable.setStatus('mandatory')
mscGsmBcFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcFramerIndex"))
if mibBuilder.loadTexts: mscGsmBcFramerRowStatusEntry.setStatus('mandatory')
mscGsmBcFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerRowStatus.setStatus('mandatory')
mscGsmBcFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerComponentName.setStatus('mandatory')
mscGsmBcFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerStorageType.setStatus('mandatory')
mscGsmBcFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcFramerIndex.setStatus('mandatory')
mscGsmBcFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 10), )
if mibBuilder.loadTexts: mscGsmBcFramerProvTable.setStatus('mandatory')
mscGsmBcFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcFramerIndex"))
if mibBuilder.loadTexts: mscGsmBcFramerProvEntry.setStatus('mandatory')
mscGsmBcFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmBcFramerInterfaceName.setStatus('mandatory')
mscGsmBcFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11), )
if mibBuilder.loadTexts: mscGsmBcFramerStatsTable.setStatus('mandatory')
mscGsmBcFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcFramerIndex"))
if mibBuilder.loadTexts: mscGsmBcFramerStatsEntry.setStatus('mandatory')
mscGsmBcFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerFrmToIf.setStatus('mandatory')
mscGsmBcFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerFrmFromIf.setStatus('mandatory')
mscGsmBcFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerOctetFromIf.setStatus('mandatory')
mscGsmBcFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerCrcErrors.setStatus('mandatory')
mscGsmBcFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerLrcErrors.setStatus('mandatory')
mscGsmBcFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerNonOctetErrors.setStatus('mandatory')
mscGsmBcFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerOverruns.setStatus('mandatory')
mscGsmBcFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerUnderruns.setStatus('mandatory')
mscGsmBcFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 12), )
if mibBuilder.loadTexts: mscGsmBcFramerLinkTable.setStatus('mandatory')
mscGsmBcFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcFramerIndex"))
if mibBuilder.loadTexts: mscGsmBcFramerLinkEntry.setStatus('mandatory')
mscGsmBcFramerFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 8))).clone(namedValues=NamedValues(("btdsFraming", 2), ("gsmFraming", 8))).clone('gsmFraming')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmBcFramerFramingType.setStatus('mandatory')
mscGsmBcFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 13), )
if mibBuilder.loadTexts: mscGsmBcFramerStateTable.setStatus('mandatory')
mscGsmBcFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcFramerIndex"))
if mibBuilder.loadTexts: mscGsmBcFramerStateEntry.setStatus('mandatory')
mscGsmBcFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerAdminState.setStatus('mandatory')
mscGsmBcFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerOperationalState.setStatus('mandatory')
mscGsmBcFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFramerUsageState.setStatus('mandatory')
mscGsmBcLayer1 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3))
mscGsmBcLayer1RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 1), )
if mibBuilder.loadTexts: mscGsmBcLayer1RowStatusTable.setStatus('mandatory')
mscGsmBcLayer1RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcLayer1Index"))
if mibBuilder.loadTexts: mscGsmBcLayer1RowStatusEntry.setStatus('mandatory')
mscGsmBcLayer1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1RowStatus.setStatus('mandatory')
mscGsmBcLayer1ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1ComponentName.setStatus('mandatory')
mscGsmBcLayer1StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1StorageType.setStatus('mandatory')
mscGsmBcLayer1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcLayer1Index.setStatus('mandatory')
mscGsmBcLayer1OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 10), )
if mibBuilder.loadTexts: mscGsmBcLayer1OperTable.setStatus('mandatory')
mscGsmBcLayer1OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcLayer1Index"))
if mibBuilder.loadTexts: mscGsmBcLayer1OperEntry.setStatus('mandatory')
mscGsmBcLayer1ActiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("v110", 0), ("aTrau", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1ActiveMode.setStatus('mandatory')
mscGsmBcLayer1Connection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transparent", 0), ("nonTransparent", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1Connection.setStatus('mandatory')
mscGsmBcLayer1DataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1DataRate.setStatus('mandatory')
mscGsmBcLayer1IntermediateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1IntermediateRate.setStatus('mandatory')
mscGsmBcLayer1StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11), )
if mibBuilder.loadTexts: mscGsmBcLayer1StatsTable.setStatus('mandatory')
mscGsmBcLayer1StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcLayer1Index"))
if mibBuilder.loadTexts: mscGsmBcLayer1StatsEntry.setStatus('mandatory')
mscGsmBcLayer1FramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1FramesTx.setStatus('mandatory')
mscGsmBcLayer1FramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1FramesRx.setStatus('mandatory')
mscGsmBcLayer1BytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1BytesTx.setStatus('mandatory')
mscGsmBcLayer1BytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1BytesRx.setStatus('mandatory')
mscGsmBcLayer1UnderRunsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1UnderRunsTx.setStatus('mandatory')
mscGsmBcLayer1OverRunsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1OverRunsRx.setStatus('mandatory')
mscGsmBcLayer1NonOctetErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1NonOctetErrorsRx.setStatus('mandatory')
mscGsmBcLayer1LargeFrameErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1LargeFrameErrorsRx.setStatus('mandatory')
mscGsmBcLayer1FramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1FramesDiscarded.setStatus('mandatory')
mscGsmBcLayer1LrcErrorsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 3, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcLayer1LrcErrorsTx.setStatus('mandatory')
mscGsmBcModem = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4))
mscGsmBcModemRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 1), )
if mibBuilder.loadTexts: mscGsmBcModemRowStatusTable.setStatus('mandatory')
mscGsmBcModemRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcModemIndex"))
if mibBuilder.loadTexts: mscGsmBcModemRowStatusEntry.setStatus('mandatory')
mscGsmBcModemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemRowStatus.setStatus('mandatory')
mscGsmBcModemComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemComponentName.setStatus('mandatory')
mscGsmBcModemStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemStorageType.setStatus('mandatory')
mscGsmBcModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcModemIndex.setStatus('mandatory')
mscGsmBcModemOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10), )
if mibBuilder.loadTexts: mscGsmBcModemOperTable.setStatus('mandatory')
mscGsmBcModemOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcModemIndex"))
if mibBuilder.loadTexts: mscGsmBcModemOperEntry.setStatus('mandatory')
mscGsmBcModemRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("n300", 0), ("n600", 1), ("n1200", 2), ("n120075", 3), ("n2400", 4), ("n4800", 5), ("n7200", 6), ("n9600", 7), ("n12000", 8), ("n14400", 9), ("n16800", 10), ("n19200", 11), ("n21600", 12), ("n24000", 13), ("n26400", 14), ("n28800", 15), ("n31200", 16), ("n32000", 17), ("n33600", 18), ("n38400", 19), ("n43200", 20), ("n48000", 21), ("n56000", 22), ("n57600", 23), ("n64000", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemRate.setStatus('mandatory')
mscGsmBcModemAlgorithmInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemAlgorithmInUse.setStatus('mandatory')
mscGsmBcModemProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("training", 1), ("connected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemProtocolState.setStatus('mandatory')
mscGsmBcModemReceiverTransmitter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 0), ("rxOnTxOff", 1), ("rxOffTxOn", 2), ("rxTxOn", 3))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemReceiverTransmitter.setStatus('mandatory')
mscGsmBcModemTraining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 99))).clone(namedValues=NamedValues(("short", 0), ("long", 1), ("notApplicable", 99))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemTraining.setStatus('mandatory')
mscGsmBcModemToUpperFlowControlActive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemToUpperFlowControlActive.setStatus('mandatory')
mscGsmBcModemToDspFlowControlActive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemToDspFlowControlActive.setStatus('mandatory')
mscGsmBcModemAsyncMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemAsyncMode.setStatus('mandatory')
mscGsmBcModemAutoHdlcMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemAutoHdlcMode.setStatus('mandatory')
mscGsmBcModemOutbandFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemOutbandFlowControl.setStatus('mandatory')
mscGsmBcModemOutbandBreak = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemOutbandBreak.setStatus('mandatory')
mscGsmBcModemAutobaud = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemAutobaud.setStatus('mandatory')
mscGsmBcModemStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 11), )
if mibBuilder.loadTexts: mscGsmBcModemStatsTable.setStatus('mandatory')
mscGsmBcModemStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcModemIndex"))
if mibBuilder.loadTexts: mscGsmBcModemStatsEntry.setStatus('mandatory')
mscGsmBcModemBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemBytesTx.setStatus('mandatory')
mscGsmBcModemBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemBytesRx.setStatus('mandatory')
mscGsmBcModemFramingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 4, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcModemFramingErrors.setStatus('mandatory')
mscGsmBcV110 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5))
mscGsmBcV110RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 1), )
if mibBuilder.loadTexts: mscGsmBcV110RowStatusTable.setStatus('mandatory')
mscGsmBcV110RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcV110Index"))
if mibBuilder.loadTexts: mscGsmBcV110RowStatusEntry.setStatus('mandatory')
mscGsmBcV110RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110RowStatus.setStatus('mandatory')
mscGsmBcV110ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110ComponentName.setStatus('mandatory')
mscGsmBcV110StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110StorageType.setStatus('mandatory')
mscGsmBcV110Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcV110Index.setStatus('mandatory')
mscGsmBcV110OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 10), )
if mibBuilder.loadTexts: mscGsmBcV110OperTable.setStatus('mandatory')
mscGsmBcV110OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcV110Index"))
if mibBuilder.loadTexts: mscGsmBcV110OperEntry.setStatus('mandatory')
mscGsmBcV110DataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110DataRate.setStatus('mandatory')
mscGsmBcV110IntermediateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n8KbitS", 0), ("n16KbitS", 1), ("n32KbitS", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110IntermediateRate.setStatus('mandatory')
mscGsmBcV110StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11), )
if mibBuilder.loadTexts: mscGsmBcV110StatsTable.setStatus('mandatory')
mscGsmBcV110StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcV110Index"))
if mibBuilder.loadTexts: mscGsmBcV110StatsEntry.setStatus('mandatory')
mscGsmBcV110FramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110FramesTx.setStatus('mandatory')
mscGsmBcV110FramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110FramesRx.setStatus('mandatory')
mscGsmBcV110BytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110BytesTx.setStatus('mandatory')
mscGsmBcV110BytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110BytesRx.setStatus('mandatory')
mscGsmBcV110UnderRunsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110UnderRunsTx.setStatus('mandatory')
mscGsmBcV110OverRunsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110OverRunsRx.setStatus('mandatory')
mscGsmBcV110NonOctetErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110NonOctetErrorsRx.setStatus('mandatory')
mscGsmBcV110LargeFrameErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110LargeFrameErrorsRx.setStatus('mandatory')
mscGsmBcV110FramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110FramesDiscarded.setStatus('mandatory')
mscGsmBcV110LrcErrorsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 5, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV110LrcErrorsTx.setStatus('mandatory')
mscGsmBcFax = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6))
mscGsmBcFaxRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 1), )
if mibBuilder.loadTexts: mscGsmBcFaxRowStatusTable.setStatus('mandatory')
mscGsmBcFaxRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcFaxIndex"))
if mibBuilder.loadTexts: mscGsmBcFaxRowStatusEntry.setStatus('mandatory')
mscGsmBcFaxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxRowStatus.setStatus('mandatory')
mscGsmBcFaxComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxComponentName.setStatus('mandatory')
mscGsmBcFaxStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxStorageType.setStatus('mandatory')
mscGsmBcFaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcFaxIndex.setStatus('mandatory')
mscGsmBcFaxOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 10), )
if mibBuilder.loadTexts: mscGsmBcFaxOperTable.setStatus('mandatory')
mscGsmBcFaxOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcFaxIndex"))
if mibBuilder.loadTexts: mscGsmBcFaxOperEntry.setStatus('mandatory')
mscGsmBcFaxActiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("ecm", 1))).clone('normal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxActiveMode.setStatus('mandatory')
mscGsmBcFaxProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("setup", 0), ("idle", 1), ("bcsRx", 2), ("bcsTx", 3), ("msgRx", 4), ("msgTx", 5))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxProtocolState.setStatus('mandatory')
mscGsmBcFaxMessageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxMessageRate.setStatus('mandatory')
mscGsmBcFaxStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11), )
if mibBuilder.loadTexts: mscGsmBcFaxStatsTable.setStatus('mandatory')
mscGsmBcFaxStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcFaxIndex"))
if mibBuilder.loadTexts: mscGsmBcFaxStatsEntry.setStatus('mandatory')
mscGsmBcFaxMessageFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxMessageFramesRx.setStatus('mandatory')
mscGsmBcFaxMessageFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxMessageFramesTx.setStatus('mandatory')
mscGsmBcFaxBcsFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxBcsFramesRx.setStatus('mandatory')
mscGsmBcFaxBcsFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxBcsFramesTx.setStatus('mandatory')
mscGsmBcFaxPagesRxFromMobile = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxPagesRxFromMobile.setStatus('mandatory')
mscGsmBcFaxPagesTxToMobile = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxPagesTxToMobile.setStatus('mandatory')
mscGsmBcFaxChannelModeModify = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxChannelModeModify.setStatus('mandatory')
mscGsmBcFaxBcsFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 6, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcFaxBcsFrameErrors.setStatus('mandatory')
mscGsmBcRlp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7))
mscGsmBcRlpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 1), )
if mibBuilder.loadTexts: mscGsmBcRlpRowStatusTable.setStatus('mandatory')
mscGsmBcRlpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcRlpIndex"))
if mibBuilder.loadTexts: mscGsmBcRlpRowStatusEntry.setStatus('mandatory')
mscGsmBcRlpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpRowStatus.setStatus('mandatory')
mscGsmBcRlpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpComponentName.setStatus('mandatory')
mscGsmBcRlpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpStorageType.setStatus('mandatory')
mscGsmBcRlpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcRlpIndex.setStatus('mandatory')
mscGsmBcRlpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10), )
if mibBuilder.loadTexts: mscGsmBcRlpOperTable.setStatus('mandatory')
mscGsmBcRlpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcRlpIndex"))
if mibBuilder.loadTexts: mscGsmBcRlpOperEntry.setStatus('mandatory')
mscGsmBcRlpProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("detached", 0), ("disconnected", 1), ("connPending", 2), ("discPending", 3), ("connectEstablished", 4), ("synchronized", 5))).clone('detached')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpProtocolState.setStatus('mandatory')
mscGsmBcRlpFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpFrameSize.setStatus('mandatory')
mscGsmBcRlpHighestVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpHighestVersion.setStatus('mandatory')
mscGsmBcRlpIwfToMsWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpIwfToMsWindowSize.setStatus('mandatory')
mscGsmBcRlpMsToIwfWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpMsToIwfWindowSize.setStatus('mandatory')
mscGsmBcRlpT1AckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(380, 1020))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpT1AckTimer.setStatus('mandatory')
mscGsmBcRlpT2AckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpT2AckDelayTimer.setStatus('mandatory')
mscGsmBcRlpN2RetransmitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscGsmBcRlpN2RetransmitCount.setStatus('mandatory')
mscGsmBcRlpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11), )
if mibBuilder.loadTexts: mscGsmBcRlpStatsTable.setStatus('mandatory')
mscGsmBcRlpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcRlpIndex"))
if mibBuilder.loadTexts: mscGsmBcRlpStatsEntry.setStatus('mandatory')
mscGsmBcRlpIFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpIFramesTx.setStatus('mandatory')
mscGsmBcRlpIFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpIFramesRx.setStatus('mandatory')
mscGsmBcRlpFramesRetransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpFramesRetransmitted.setStatus('mandatory')
mscGsmBcRlpT1AckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpT1AckTimeouts.setStatus('mandatory')
mscGsmBcRlpInvalidFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpInvalidFrames.setStatus('mandatory')
mscGsmBcRlpCrcErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpCrcErrorsRx.setStatus('mandatory')
mscGsmBcRlpOutOfSequenceFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpOutOfSequenceFrames.setStatus('mandatory')
mscGsmBcRlpRemoteBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpRemoteBusyIndications.setStatus('mandatory')
mscGsmBcRlpLocalBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpLocalBusyIndications.setStatus('mandatory')
mscGsmBcRlpIFramesTxDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpIFramesTxDiscarded.setStatus('mandatory')
mscGsmBcRlpResetsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 7, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcRlpResetsRx.setStatus('mandatory')
mscGsmBcV42 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8))
mscGsmBcV42RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 1), )
if mibBuilder.loadTexts: mscGsmBcV42RowStatusTable.setStatus('mandatory')
mscGsmBcV42RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcV42Index"))
if mibBuilder.loadTexts: mscGsmBcV42RowStatusEntry.setStatus('mandatory')
mscGsmBcV42RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42RowStatus.setStatus('mandatory')
mscGsmBcV42ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42ComponentName.setStatus('mandatory')
mscGsmBcV42StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42StorageType.setStatus('mandatory')
mscGsmBcV42Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcV42Index.setStatus('mandatory')
mscGsmBcV42OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 10), )
if mibBuilder.loadTexts: mscGsmBcV42OperTable.setStatus('mandatory')
mscGsmBcV42OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcV42Index"))
if mibBuilder.loadTexts: mscGsmBcV42OperEntry.setStatus('mandatory')
mscGsmBcV42ProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notActive", 0), ("disconnected", 1), ("linksetup", 2), ("frameReject", 3), ("disconnectRequest", 4), ("informationTransfer", 5), ("waitingAck", 6))).clone('notActive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42ProtocolState.setStatus('mandatory')
mscGsmBcV42TxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65355))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42TxN401FrameSize.setStatus('mandatory')
mscGsmBcV42RxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42RxN401FrameSize.setStatus('mandatory')
mscGsmBcV42TxKwindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42TxKwindowSize.setStatus('mandatory')
mscGsmBcV42RxKwindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42RxKwindowSize.setStatus('mandatory')
mscGsmBcV42StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11), )
if mibBuilder.loadTexts: mscGsmBcV42StatsTable.setStatus('mandatory')
mscGsmBcV42StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcV42Index"))
if mibBuilder.loadTexts: mscGsmBcV42StatsEntry.setStatus('mandatory')
mscGsmBcV42IBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42IBytesRx.setStatus('mandatory')
mscGsmBcV42IBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42IBytesTx.setStatus('mandatory')
mscGsmBcV42IFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42IFramesRx.setStatus('mandatory')
mscGsmBcV42IFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42IFramesTx.setStatus('mandatory')
mscGsmBcV42FramesRetransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42FramesRetransmitted.setStatus('mandatory')
mscGsmBcV42T1AckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42T1AckTimeouts.setStatus('mandatory')
mscGsmBcV42RemoteBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42RemoteBusyIndications.setStatus('mandatory')
mscGsmBcV42LocalBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42LocalBusyIndications.setStatus('mandatory')
mscGsmBcV42BadFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42BadFramesRx.setStatus('mandatory')
mscGsmBcV42CrcErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 8, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42CrcErrorsRx.setStatus('mandatory')
mscGsmBcV42bis = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9))
mscGsmBcV42bisRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 1), )
if mibBuilder.loadTexts: mscGsmBcV42bisRowStatusTable.setStatus('mandatory')
mscGsmBcV42bisRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcV42bisIndex"))
if mibBuilder.loadTexts: mscGsmBcV42bisRowStatusEntry.setStatus('mandatory')
mscGsmBcV42bisRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisRowStatus.setStatus('mandatory')
mscGsmBcV42bisComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisComponentName.setStatus('mandatory')
mscGsmBcV42bisStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisStorageType.setStatus('mandatory')
mscGsmBcV42bisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcV42bisIndex.setStatus('mandatory')
mscGsmBcV42bisOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10), )
if mibBuilder.loadTexts: mscGsmBcV42bisOperTable.setStatus('mandatory')
mscGsmBcV42bisOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcV42bisIndex"))
if mibBuilder.loadTexts: mscGsmBcV42bisOperEntry.setStatus('mandatory')
mscGsmBcV42bisProtocolModeEncoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transparent", 0), ("compressed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisProtocolModeEncoder.setStatus('mandatory')
mscGsmBcV42bisProtocolModeDecoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transparent", 0), ("compressed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisProtocolModeDecoder.setStatus('mandatory')
mscGsmBcV42bisCompressionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("encode", 1), ("decode", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisCompressionDirection.setStatus('mandatory')
mscGsmBcV42bisMaximumCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisMaximumCodewords.setStatus('mandatory')
mscGsmBcV42bisMaximumStringSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisMaximumStringSize.setStatus('mandatory')
mscGsmBcV42bisLastDecodeError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("badStepup", 1), ("codewordEqC1", 2), ("emptyCodeword", 3), ("reservedCommand", 4), ("generalError", 5))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisLastDecodeError.setStatus('mandatory')
mscGsmBcV42bisCompRatioEncoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10, 1, 7), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisCompRatioEncoder.setStatus('mandatory')
mscGsmBcV42bisCompRatioDecoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 10, 1, 8), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisCompRatioDecoder.setStatus('mandatory')
mscGsmBcV42bisStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 11), )
if mibBuilder.loadTexts: mscGsmBcV42bisStatsTable.setStatus('mandatory')
mscGsmBcV42bisStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcV42bisIndex"))
if mibBuilder.loadTexts: mscGsmBcV42bisStatsEntry.setStatus('mandatory')
mscGsmBcV42bisModeChangesEncode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisModeChangesEncode.setStatus('mandatory')
mscGsmBcV42bisModeChangesDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisModeChangesDecode.setStatus('mandatory')
mscGsmBcV42bisResetsEncode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisResetsEncode.setStatus('mandatory')
mscGsmBcV42bisResetsDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisResetsDecode.setStatus('mandatory')
mscGsmBcV42bisReInitializations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisReInitializations.setStatus('mandatory')
mscGsmBcV42bisErrorsInDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 9, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcV42bisErrorsInDecode.setStatus('mandatory')
mscGsmBcL2RCop = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10))
mscGsmBcL2RCopRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 1), )
if mibBuilder.loadTexts: mscGsmBcL2RCopRowStatusTable.setStatus('mandatory')
mscGsmBcL2RCopRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcL2RCopIndex"))
if mibBuilder.loadTexts: mscGsmBcL2RCopRowStatusEntry.setStatus('mandatory')
mscGsmBcL2RCopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcL2RCopRowStatus.setStatus('mandatory')
mscGsmBcL2RCopComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcL2RCopComponentName.setStatus('mandatory')
mscGsmBcL2RCopStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcL2RCopStorageType.setStatus('mandatory')
mscGsmBcL2RCopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcL2RCopIndex.setStatus('mandatory')
mscGsmBcL2RCopOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 10), )
if mibBuilder.loadTexts: mscGsmBcL2RCopOperTable.setStatus('mandatory')
mscGsmBcL2RCopOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcL2RCopIndex"))
if mibBuilder.loadTexts: mscGsmBcL2RCopOperEntry.setStatus('mandatory')
mscGsmBcL2RCopFlowControlStateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcL2RCopFlowControlStateTx.setStatus('mandatory')
mscGsmBcL2RCopFlowControlStateRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcL2RCopFlowControlStateRx.setStatus('mandatory')
mscGsmBcL2RCopStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 11), )
if mibBuilder.loadTexts: mscGsmBcL2RCopStatsTable.setStatus('mandatory')
mscGsmBcL2RCopStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcL2RCopIndex"))
if mibBuilder.loadTexts: mscGsmBcL2RCopStatsEntry.setStatus('mandatory')
mscGsmBcL2RCopBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcL2RCopBytesTx.setStatus('mandatory')
mscGsmBcL2RCopBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcL2RCopBytesRx.setStatus('mandatory')
mscGsmBcL2RCopBreakCountRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcL2RCopBreakCountRx.setStatus('mandatory')
mscGsmBcL2RCopBreakCountTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 10, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcL2RCopBreakCountTx.setStatus('mandatory')
mscGsmBcUpperRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11))
mscGsmBcUpperRelayRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 1), )
if mibBuilder.loadTexts: mscGsmBcUpperRelayRowStatusTable.setStatus('mandatory')
mscGsmBcUpperRelayRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcUpperRelayIndex"))
if mibBuilder.loadTexts: mscGsmBcUpperRelayRowStatusEntry.setStatus('mandatory')
mscGsmBcUpperRelayRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUpperRelayRowStatus.setStatus('mandatory')
mscGsmBcUpperRelayComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUpperRelayComponentName.setStatus('mandatory')
mscGsmBcUpperRelayStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUpperRelayStorageType.setStatus('mandatory')
mscGsmBcUpperRelayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscGsmBcUpperRelayIndex.setStatus('mandatory')
mscGsmBcUpperRelayOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 10), )
if mibBuilder.loadTexts: mscGsmBcUpperRelayOperTable.setStatus('mandatory')
mscGsmBcUpperRelayOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcUpperRelayIndex"))
if mibBuilder.loadTexts: mscGsmBcUpperRelayOperEntry.setStatus('mandatory')
mscGsmBcUpperRelayBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUpperRelayBufferSize.setStatus('mandatory')
mscGsmBcUpperRelayFlowControlStateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUpperRelayFlowControlStateTx.setStatus('mandatory')
mscGsmBcUpperRelayFlowControlStateRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUpperRelayFlowControlStateRx.setStatus('mandatory')
mscGsmBcUpperRelayStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 11), )
if mibBuilder.loadTexts: mscGsmBcUpperRelayStatsTable.setStatus('mandatory')
mscGsmBcUpperRelayStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcTrunkGrpIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcCicIndex"), (0, "Nortel-MsCarrier-MscPassport-GsmIwfMIB", "mscGsmBcUpperRelayIndex"))
if mibBuilder.loadTexts: mscGsmBcUpperRelayStatsEntry.setStatus('mandatory')
mscGsmBcUpperRelayFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUpperRelayFramesTx.setStatus('mandatory')
mscGsmBcUpperRelayFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUpperRelayFramesRx.setStatus('mandatory')
mscGsmBcUpperRelayUnacknowledgedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 128, 11, 11, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscGsmBcUpperRelayUnacknowledgedFrames.setStatus('mandatory')
gsmIwfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 129, 1))
gsmIwfGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 129, 1, 1))
gsmIwfGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 129, 1, 1, 3))
gsmIwfGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 129, 1, 1, 3, 2))
gsmIwfCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 129, 3))
gsmIwfCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 129, 3, 1))
gsmIwfCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 129, 3, 1, 3))
gsmIwfCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 129, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-GsmIwfMIB", gsmIwfCapabilities=gsmIwfCapabilities, mscGsmBcFaxActiveMode=mscGsmBcFaxActiveMode, mscGsmBcV110RowStatusTable=mscGsmBcV110RowStatusTable, mscGsmBcV110OperEntry=mscGsmBcV110OperEntry, mscGsmCsV42bisIndex=mscGsmCsV42bisIndex, mscGsmBcV42bis=mscGsmBcV42bis, mscGsmBcRlpIFramesTxDiscarded=mscGsmBcRlpIFramesTxDiscarded, mscGsmCsModem=mscGsmCsModem, mscGsmCsVirtualRouterName=mscGsmCsVirtualRouterName, mscGsmBcV42bisResetsDecode=mscGsmBcV42bisResetsDecode, mscGsmBcUpperRelayStatsEntry=mscGsmBcUpperRelayStatsEntry, mscGsmCsCallsSetup=mscGsmCsCallsSetup, mscGsmBcUpperRelayStorageType=mscGsmBcUpperRelayStorageType, mscGsmBcFaxMessageRate=mscGsmBcFaxMessageRate, mscGsmCsV42T400DetectTimer=mscGsmCsV42T400DetectTimer, mscGsmBcLayer1OperEntry=mscGsmBcLayer1OperEntry, mscGsmCsLpRowStatusTable=mscGsmCsLpRowStatusTable, mscGsmBcModemOperTable=mscGsmBcModemOperTable, mscGsmBcFramerStateEntry=mscGsmBcFramerStateEntry, mscGsmCsErroredMipFrames=mscGsmCsErroredMipFrames, mscGsmBcFramerStateTable=mscGsmBcFramerStateTable, mscGsmBcV42bisIndex=mscGsmBcV42bisIndex, mscGsmBcFaxBcsFramesTx=mscGsmBcFaxBcsFramesTx, mscGsmBcFramerLinkEntry=mscGsmBcFramerLinkEntry, mscGsmBcV42RemoteBusyIndications=mscGsmBcV42RemoteBusyIndications, mscGsmBcRlpCrcErrorsRx=mscGsmBcRlpCrcErrorsRx, mscGsmBcCustomerIdentifier=mscGsmBcCustomerIdentifier, mscGsmCsCidDataTable=mscGsmCsCidDataTable, mscGsmBcV42RxN401FrameSize=mscGsmBcV42RxN401FrameSize, mscGsmBcRowStatusEntry=mscGsmBcRowStatusEntry, mscGsmBcFramerProvTable=mscGsmBcFramerProvTable, mscGsmBcFramerOverruns=mscGsmBcFramerOverruns, mscGsmBcRlpResetsRx=mscGsmBcRlpResetsRx, mscGsmBcFaxPagesTxToMobile=mscGsmBcFaxPagesTxToMobile, mscGsmBcModemBytesRx=mscGsmBcModemBytesRx, mscGsmBcV110UnderRunsTx=mscGsmBcV110UnderRunsTx, mscGsmBcFramerNonOctetErrors=mscGsmBcFramerNonOctetErrors, mscGsmBcV42bisResetsEncode=mscGsmBcV42bisResetsEncode, mscGsmBcFaxRowStatus=mscGsmBcFaxRowStatus, mscGsmBcUpperRelayIndex=mscGsmBcUpperRelayIndex, mscGsmCsV42bisRowStatusTable=mscGsmCsV42bisRowStatusTable, mscGsmCsLpStorageType=mscGsmCsLpStorageType, mscGsmBcFaxComponentName=mscGsmBcFaxComponentName, mscGsmBcRlpMsToIwfWindowSize=mscGsmBcRlpMsToIwfWindowSize, mscGsmBcUpperRelayFramesRx=mscGsmBcUpperRelayFramesRx, mscGsmCsLpConfiguredBearerChannels=mscGsmCsLpConfiguredBearerChannels, mscGsmBcRlpIwfToMsWindowSize=mscGsmBcRlpIwfToMsWindowSize, mscGsmBcConnectionType=mscGsmBcConnectionType, mscGsmBcV42bisRowStatusEntry=mscGsmBcV42bisRowStatusEntry, mscGsmCsModemRowStatusTable=mscGsmCsModemRowStatusTable, mscGsmBcL2RCopFlowControlStateTx=mscGsmBcL2RCopFlowControlStateTx, mscGsmBcV42bisLastDecodeError=mscGsmBcV42bisLastDecodeError, mscGsmBcFaxProtocolState=mscGsmBcFaxProtocolState, mscGsmBcFramerStatsTable=mscGsmBcFramerStatsTable, mscGsmBcV42RowStatusEntry=mscGsmBcV42RowStatusEntry, mscGsmBcV110OperTable=mscGsmBcV110OperTable, mscGsmBcOperationalState=mscGsmBcOperationalState, mscGsmBcLayer1Connection=mscGsmBcLayer1Connection, mscGsmBcFlowControl=mscGsmBcFlowControl, mscGsmBcFramerCrcErrors=mscGsmBcFramerCrcErrors, mscGsmBcModemFramingErrors=mscGsmBcModemFramingErrors, mscGsmBcV42bisCompressionDirection=mscGsmBcV42bisCompressionDirection, mscGsmBcRlpStatsTable=mscGsmBcRlpStatsTable, mscGsmBcV42bisRowStatusTable=mscGsmBcV42bisRowStatusTable, mscGsmBcV42StorageType=mscGsmBcV42StorageType, mscGsmBcTrunkGrpIndex=mscGsmBcTrunkGrpIndex, mscGsmBcLayer1ActiveMode=mscGsmBcLayer1ActiveMode, mscGsmBcV110FramesRx=mscGsmBcV110FramesRx, mscGsmBcCidDataEntry=mscGsmBcCidDataEntry, mscGsmBcV110OverRunsRx=mscGsmBcV110OverRunsRx, mscGsmBcV42FramesRetransmitted=mscGsmBcV42FramesRetransmitted, mscGsmCsV42bisActionOnError=mscGsmCsV42bisActionOnError, mscGsmBcLayer1IntermediateRate=mscGsmBcLayer1IntermediateRate, mscGsmCsV42ProvTable=mscGsmCsV42ProvTable, mscGsmBcModemRowStatusTable=mscGsmBcModemRowStatusTable, mscGsmBcOperEntry=mscGsmBcOperEntry, mscGsmCsCustomerIdentifier=mscGsmCsCustomerIdentifier, mscGsmBcL2RCopStorageType=mscGsmBcL2RCopStorageType, mscGsmBcL2RCopRowStatusEntry=mscGsmBcL2RCopRowStatusEntry, mscGsmCsLpAssignedCapacity=mscGsmCsLpAssignedCapacity, mscGsmBcV42TxKwindowSize=mscGsmBcV42TxKwindowSize, gsmIwfGroup=gsmIwfGroup, mscGsmCsRlpHighestVersion=mscGsmCsRlpHighestVersion, mscGsmBcV110FramesDiscarded=mscGsmBcV110FramesDiscarded, mscGsmCsCallsActivated=mscGsmCsCallsActivated, mscGsmCsV42N400RetransLimit=mscGsmCsV42N400RetransLimit, mscGsmBcModem=mscGsmBcModem, mscGsmBcRlpOutOfSequenceFrames=mscGsmBcRlpOutOfSequenceFrames, mscGsmBcCallType=mscGsmBcCallType, mscGsmBcFaxOperEntry=mscGsmBcFaxOperEntry, mscGsmCsStatsEntry=mscGsmCsStatsEntry, mscGsmBcModemTraining=mscGsmBcModemTraining, mscGsmBcLayer1StatsEntry=mscGsmBcLayer1StatsEntry, mscGsmBcUpperRelayRowStatusEntry=mscGsmBcUpperRelayRowStatusEntry, mscGsmBcStateTable=mscGsmBcStateTable, mscGsmBcOperTable=mscGsmBcOperTable, mscGsmBcV42BadFramesRx=mscGsmBcV42BadFramesRx, mscGsmCsV42RowStatusEntry=mscGsmCsV42RowStatusEntry, mscGsmCsRlpN2RetransmitCount=mscGsmCsRlpN2RetransmitCount, mscGsmBcV110FramesTx=mscGsmBcV110FramesTx, mscGsmBcComponentName=mscGsmBcComponentName, mscGsmBcStateEntry=mscGsmBcStateEntry, mscGsmBcFaxMessageFramesRx=mscGsmBcFaxMessageFramesRx, mscGsmBcL2RCopFlowControlStateRx=mscGsmBcL2RCopFlowControlStateRx, mscGsmBcRlpHighestVersion=mscGsmBcRlpHighestVersion, mscGsmCsRlpT2AckDelayTimer=mscGsmCsRlpT2AckDelayTimer, mscGsmBcFaxBcsFramesRx=mscGsmBcFaxBcsFramesRx, mscGsmBcDataBits=mscGsmBcDataBits, mscGsmCsRlp=mscGsmCsRlp, mscGsmBcFramerIndex=mscGsmBcFramerIndex, mscGsmCsLp=mscGsmCsLp, mscGsmBcAdminState=mscGsmBcAdminState, mscGsmBcV42IBytesRx=mscGsmBcV42IBytesRx, mscGsmBcUpperRelay=mscGsmBcUpperRelay, mscGsmBcV110LrcErrorsTx=mscGsmBcV110LrcErrorsTx, mscGsmCsCidDataEntry=mscGsmCsCidDataEntry, mscGsmBcRlpLocalBusyIndications=mscGsmBcRlpLocalBusyIndications, mscGsmCsRlpRowStatusTable=mscGsmCsRlpRowStatusTable, mscGsmBcModemToUpperFlowControlActive=mscGsmBcModemToUpperFlowControlActive, mscGsmBcV42T1AckTimeouts=mscGsmBcV42T1AckTimeouts, mscGsmBcLayer1RowStatus=mscGsmBcLayer1RowStatus, mscGsmCsChannelModeModifyRequests=mscGsmCsChannelModeModifyRequests, mscGsmCsV42bisCompressionDirection=mscGsmCsV42bisCompressionDirection, mscGsmBcL2RCopOperEntry=mscGsmBcL2RCopOperEntry, mscGsmCsLpOperTable=mscGsmCsLpOperTable, mscGsmBcRlpRowStatusTable=mscGsmBcRlpRowStatusTable, mscGsmBcMaxUserDataRate=mscGsmBcMaxUserDataRate, mscGsmCsModemRowStatusEntry=mscGsmCsModemRowStatusEntry, mscGsmBcRlpRowStatus=mscGsmBcRlpRowStatus, mscGsmCsComponentName=mscGsmCsComponentName, mscGsmBcV110Index=mscGsmBcV110Index, mscGsmCsCurrentCalls=mscGsmCsCurrentCalls, mscGsmBcRlpT1AckTimer=mscGsmBcRlpT1AckTimer, mscGsmBcV42TxN401FrameSize=mscGsmBcV42TxN401FrameSize, mscGsmBcFramerAdminState=mscGsmBcFramerAdminState, mscGsmBcV42bisModeChangesEncode=mscGsmBcV42bisModeChangesEncode, mscGsmBcStopBits=mscGsmBcStopBits, mscGsmCsOperationalState=mscGsmCsOperationalState, mscGsmBcRlpOperTable=mscGsmBcRlpOperTable, mscGsmCsV42RxKwindowSize=mscGsmCsV42RxKwindowSize, mscGsmBcV110RowStatusEntry=mscGsmBcV110RowStatusEntry, mscGsmBcFaxChannelModeModify=mscGsmBcFaxChannelModeModify, mscGsmCsAdminState=mscGsmCsAdminState, mscGsmBcLayer1FramesRx=mscGsmBcLayer1FramesRx, mscGsmBcMipState=mscGsmBcMipState, mscGsmBcFramerStatsEntry=mscGsmBcFramerStatsEntry, mscGsmCsV42bisRowStatus=mscGsmCsV42bisRowStatus, mscGsmBcModemOutbandBreak=mscGsmBcModemOutbandBreak, mscGsmBcL2RCopStatsEntry=mscGsmBcL2RCopStatsEntry, gsmIwfGroupCA02A=gsmIwfGroupCA02A, mscGsmBcModemStorageType=mscGsmBcModemStorageType, mscGsmBcV42IFramesTx=mscGsmBcV42IFramesTx, mscGsmCsLpOperEntry=mscGsmCsLpOperEntry, mscGsmBcRowStatusTable=mscGsmBcRowStatusTable, mscGsmBcV110RowStatus=mscGsmBcV110RowStatus, mscGsmCsModemRowStatus=mscGsmCsModemRowStatus, mscGsmBcRlpT2AckDelayTimer=mscGsmBcRlpT2AckDelayTimer, mscGsmBcV42=mscGsmBcV42, mscGsmBcL2RCop=mscGsmBcL2RCop, mscGsmBcLayer1BytesTx=mscGsmBcLayer1BytesTx, mscGsmBcModemAlgorithmInUse=mscGsmBcModemAlgorithmInUse, mscGsmBcV42bisProtocolModeDecoder=mscGsmBcV42bisProtocolModeDecoder, mscGsmBcModemBytesTx=mscGsmBcModemBytesTx, mscGsmBcFaxIndex=mscGsmBcFaxIndex, mscGsmBcV42bisErrorsInDecode=mscGsmBcV42bisErrorsInDecode, mscGsmBcFramerRowStatusTable=mscGsmBcFramerRowStatusTable, mscGsmBcFramerUsageState=mscGsmBcFramerUsageState, mscGsmBcModemToDspFlowControlActive=mscGsmBcModemToDspFlowControlActive, mscGsmBcV110StatsTable=mscGsmBcV110StatsTable, gsmIwfCapabilitiesCA02=gsmIwfCapabilitiesCA02, mscGsmCsV42ComponentName=mscGsmCsV42ComponentName, mscGsmCsV42ProvEntry=mscGsmCsV42ProvEntry, mscGsmBcStorageType=mscGsmBcStorageType, mscGsmBcRlpIFramesRx=mscGsmBcRlpIFramesRx, mscGsmBcParity=mscGsmBcParity, mscGsmBcModemStatsEntry=mscGsmBcModemStatsEntry, mscGsmBcV42RowStatus=mscGsmBcV42RowStatus, mscGsmCsV42StorageType=mscGsmCsV42StorageType, mscGsmCsRlpProvTable=mscGsmCsRlpProvTable, mscGsmBcModemOperEntry=mscGsmBcModemOperEntry, mscGsmBcLayer1RowStatusEntry=mscGsmBcLayer1RowStatusEntry, mscGsmBcFramerOctetFromIf=mscGsmBcFramerOctetFromIf, mscGsmCsRlpProvEntry=mscGsmCsRlpProvEntry, mscGsmBcFaxStatsTable=mscGsmBcFaxStatsTable, mscGsmCsRlpComponentName=mscGsmCsRlpComponentName, mscGsmCsFax=mscGsmCsFax, mscGsmBcL2RCopIndex=mscGsmBcL2RCopIndex, mscGsmCsRlpStorageType=mscGsmCsRlpStorageType, mscGsmCsRlpRowStatusEntry=mscGsmCsRlpRowStatusEntry, mscGsmBcModemAutobaud=mscGsmBcModemAutobaud, mscGsmBcV110NonOctetErrorsRx=mscGsmBcV110NonOctetErrorsRx, mscGsmCsLpModemsSupported=mscGsmCsLpModemsSupported, mscGsmBcLayer1StatsTable=mscGsmBcLayer1StatsTable, mscGsmBcV110BytesRx=mscGsmBcV110BytesRx, mscGsmBcFramer=mscGsmBcFramer, mscGsmBcV42OperTable=mscGsmBcV42OperTable, mscGsmCs=mscGsmCs, mscGsmBcModemAsyncMode=mscGsmBcModemAsyncMode, mscGsmBcV42LocalBusyIndications=mscGsmBcV42LocalBusyIndications, mscGsmBcRlpStatsEntry=mscGsmBcRlpStatsEntry, mscGsmBcV42bisOperEntry=mscGsmBcV42bisOperEntry, mscGsmBcUpperRelayBufferSize=mscGsmBcUpperRelayBufferSize, gsmIwfMIB=gsmIwfMIB, mscGsmBcFramerFrmToIf=mscGsmBcFramerFrmToIf, mscGsmCsProvEntry=mscGsmCsProvEntry, mscGsmBcLayer1ComponentName=mscGsmBcLayer1ComponentName, mscGsmBcV110ComponentName=mscGsmBcV110ComponentName, mscGsmCsRowStatusEntry=mscGsmCsRowStatusEntry, mscGsmCsFaxIndex=mscGsmCsFaxIndex, mscGsmBcLayer1=mscGsmBcLayer1, mscGsmBcV42RxKwindowSize=mscGsmBcV42RxKwindowSize, mscGsmCsFaxRowStatus=mscGsmCsFaxRowStatus, mscGsmBcFaxStorageType=mscGsmBcFaxStorageType, mscGsmBcFramerLrcErrors=mscGsmBcFramerLrcErrors, mscGsmBcFramerProvEntry=mscGsmBcFramerProvEntry, mscGsmBcV42bisCompRatioEncoder=mscGsmBcV42bisCompRatioEncoder, mscGsmBcFramerFramingType=mscGsmBcFramerFramingType, mscGsmBcLastResponseCode=mscGsmBcLastResponseCode, mscGsmBcV42StatsEntry=mscGsmBcV42StatsEntry, mscGsmBcMateBearerChannel=mscGsmBcMateBearerChannel, gsmIwfCapabilitiesCA=gsmIwfCapabilitiesCA, mscGsmCsV42bisComponentName=mscGsmCsV42bisComponentName, mscGsmCsV42bisProvTable=mscGsmCsV42bisProvTable, mscGsmBcLayer1Index=mscGsmBcLayer1Index, mscGsmCsFaxStorageType=mscGsmCsFaxStorageType, mscGsmCsFaxRowStatusEntry=mscGsmCsFaxRowStatusEntry, mscGsmBcV42CrcErrorsRx=mscGsmBcV42CrcErrorsRx, mscGsmCsModemStorageType=mscGsmCsModemStorageType, mscGsmBcLayer1StorageType=mscGsmBcLayer1StorageType, mscGsmBcCidDataTable=mscGsmBcCidDataTable, mscGsmBcLayer1OverRunsRx=mscGsmBcLayer1OverRunsRx, mscGsmCsFaxComponentName=mscGsmCsFaxComponentName, mscGsmBcModemProtocolState=mscGsmBcModemProtocolState, mscGsmBcRlpIndex=mscGsmBcRlpIndex, gsmIwfCapabilitiesCA02A=gsmIwfCapabilitiesCA02A, mscGsmBcFax=mscGsmBcFax, mscGsmCsLpIndex=mscGsmCsLpIndex, mscGsmCsMscIpAddress=mscGsmCsMscIpAddress, mscGsmBcV42Index=mscGsmBcV42Index, mscGsmBcV110IntermediateRate=mscGsmBcV110IntermediateRate, mscGsmCsFaxProvEntry=mscGsmCsFaxProvEntry, mscGsmCsStatsTable=mscGsmCsStatsTable, mscGsmBcV42ComponentName=mscGsmBcV42ComponentName, mscGsmCsV42bisMaximumStringSize=mscGsmCsV42bisMaximumStringSize, mscGsmBcUpperRelayRowStatusTable=mscGsmBcUpperRelayRowStatusTable, mscGsmBcFaxMessageFramesTx=mscGsmBcFaxMessageFramesTx, mscGsmCsRlpT1AckTimer=mscGsmCsRlpT1AckTimer, mscGsmBcFaxRowStatusTable=mscGsmBcFaxRowStatusTable, mscGsmBcFaxPagesRxFromMobile=mscGsmBcFaxPagesRxFromMobile, mscGsmBcV42RowStatusTable=mscGsmBcV42RowStatusTable, mscGsmBcFramerInterfaceName=mscGsmBcFramerInterfaceName, mscGsmBcV42StatsTable=mscGsmBcV42StatsTable, mscGsmCsRowStatus=mscGsmCsRowStatus, mscGsmCsV42bisProvEntry=mscGsmCsV42bisProvEntry)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-GsmIwfMIB", mscGsmBcUpperRelayOperEntry=mscGsmBcUpperRelayOperEntry, mscGsmBcV42bisCompRatioDecoder=mscGsmBcV42bisCompRatioDecoder, mscGsmBcFramerUnderruns=mscGsmBcFramerUnderruns, mscGsmCsTrunkGrpIndex=mscGsmCsTrunkGrpIndex, mscGsmBcLayer1UnderRunsTx=mscGsmBcLayer1UnderRunsTx, mscGsmBcFramerStorageType=mscGsmBcFramerStorageType, mscGsmBcUpperRelayComponentName=mscGsmBcUpperRelayComponentName, mscGsmCsUsageState=mscGsmCsUsageState, mscGsmBcL2RCopBytesTx=mscGsmBcL2RCopBytesTx, mscGsmBcLayer1LargeFrameErrorsRx=mscGsmBcLayer1LargeFrameErrorsRx, mscGsmBcV42bisComponentName=mscGsmBcV42bisComponentName, mscGsmBcFramerLinkTable=mscGsmBcFramerLinkTable, mscGsmCsModemIndex=mscGsmCsModemIndex, mscGsmCsLpRowStatus=mscGsmCsLpRowStatus, mscGsmBcLayer1RowStatusTable=mscGsmBcLayer1RowStatusTable, mscGsmBc=mscGsmBc, mscGsmBcV110StatsEntry=mscGsmBcV110StatsEntry, mscGsmBcRlp=mscGsmBcRlp, mscGsmCsV42T401AckTimer=mscGsmCsV42T401AckTimer, mscGsmBcV42bisMaximumCodewords=mscGsmBcV42bisMaximumCodewords, mscGsmCsV42TxKwindowSize=mscGsmCsV42TxKwindowSize, mscGsmBcL2RCopOperTable=mscGsmBcL2RCopOperTable, mscGsmBcUpperRelayRowStatus=mscGsmBcUpperRelayRowStatus, mscGsmCsCallsReleasedAbnormal=mscGsmCsCallsReleasedAbnormal, mscGsmBcUpperRelayOperTable=mscGsmBcUpperRelayOperTable, mscGsmBcV42bisStatsEntry=mscGsmBcV42bisStatsEntry, mscGsmBcV110LargeFrameErrorsRx=mscGsmBcV110LargeFrameErrorsRx, mscGsmBcFaxStatsEntry=mscGsmBcFaxStatsEntry, mscGsmCsV42bisMaximumCodewords=mscGsmCsV42bisMaximumCodewords, mscGsmBcModemIndex=mscGsmBcModemIndex, mscGsmBcRlpIFramesTx=mscGsmBcRlpIFramesTx, mscGsmBcV42bisStatsTable=mscGsmBcV42bisStatsTable, mscGsmBcL2RCopStatsTable=mscGsmBcL2RCopStatsTable, mscGsmCsFaxRowStatusTable=mscGsmCsFaxRowStatusTable, mscGsmCsV42bis=mscGsmCsV42bis, mscGsmCsRowStatusTable=mscGsmCsRowStatusTable, mscGsmCsV42RowStatus=mscGsmCsV42RowStatus, mscGsmBcRlpN2RetransmitCount=mscGsmBcRlpN2RetransmitCount, mscGsmCsV42RxN401FrameSize=mscGsmCsV42RxN401FrameSize, mscGsmBcV110DataRate=mscGsmBcV110DataRate, mscGsmCsRlpIwfToMsWindowSize=mscGsmCsRlpIwfToMsWindowSize, mscGsmBcFramerRowStatus=mscGsmBcFramerRowStatus, mscGsmCsV42T402AckDelayTimer=mscGsmCsV42T402AckDelayTimer, mscGsmBcUpperRelayFlowControlStateTx=mscGsmBcUpperRelayFlowControlStateTx, mscGsmBcFramerOperationalState=mscGsmBcFramerOperationalState, mscGsmBcLayer1LrcErrorsTx=mscGsmBcLayer1LrcErrorsTx, mscGsmBcRlpFrameSize=mscGsmBcRlpFrameSize, mscGsmCsV42Index=mscGsmCsV42Index, mscGsmBcFaxRowStatusEntry=mscGsmBcFaxRowStatusEntry, mscGsmBcLayer1FramesTx=mscGsmBcLayer1FramesTx, mscGsmBcLayer1BytesRx=mscGsmBcLayer1BytesRx, mscGsmCsV42=mscGsmCsV42, mscGsmCsModemComponentName=mscGsmCsModemComponentName, mscGsmBcV42IBytesTx=mscGsmBcV42IBytesTx, mscGsmBcL2RCopBytesRx=mscGsmBcL2RCopBytesRx, mscGsmBcModemRowStatus=mscGsmBcModemRowStatus, mscGsmBcModemComponentName=mscGsmBcModemComponentName, mscGsmBcV42bisStorageType=mscGsmBcV42bisStorageType, mscGsmBcV42OperEntry=mscGsmBcV42OperEntry, mscGsmBcRlpOperEntry=mscGsmBcRlpOperEntry, mscGsmBcFramerRowStatusEntry=mscGsmBcFramerRowStatusEntry, mscGsmCsCallsReleasedNormal=mscGsmCsCallsReleasedNormal, mscGsmBcRlpRemoteBusyIndications=mscGsmBcRlpRemoteBusyIndications, mscGsmBcUsageState=mscGsmBcUsageState, mscGsmBcFaxBcsFrameErrors=mscGsmBcFaxBcsFrameErrors, mscGsmCsStorageType=mscGsmCsStorageType, mscGsmCsV42bisRowStatusEntry=mscGsmCsV42bisRowStatusEntry, mscGsmBcV110StorageType=mscGsmBcV110StorageType, mscGsmBcV42bisMaximumStringSize=mscGsmBcV42bisMaximumStringSize, mscGsmBcV42bisReInitializations=mscGsmBcV42bisReInitializations, mscGsmBcRlpT1AckTimeouts=mscGsmBcRlpT1AckTimeouts, mscGsmBcModemReceiverTransmitter=mscGsmBcModemReceiverTransmitter, mscGsmCsStatusMessagesRx=mscGsmCsStatusMessagesRx, mscGsmCsRlpMsToIwfWindowSize=mscGsmCsRlpMsToIwfWindowSize, mscGsmCsLpActiveCalls=mscGsmCsLpActiveCalls, mscGsmCsV42bisStorageType=mscGsmCsV42bisStorageType, mscGsmBcModemRate=mscGsmBcModemRate, mscGsmBcUpperRelayFramesTx=mscGsmBcUpperRelayFramesTx, mscGsmCsLpComponentName=mscGsmCsLpComponentName, mscGsmBcLayer1OperTable=mscGsmBcLayer1OperTable, mscGsmCsVoiceLaw=mscGsmCsVoiceLaw, mscGsmCsFaxT1CalledToneTimer=mscGsmCsFaxT1CalledToneTimer, mscGsmBcL2RCopRowStatusTable=mscGsmBcL2RCopRowStatusTable, mscGsmBcL2RCopBreakCountTx=mscGsmBcL2RCopBreakCountTx, mscGsmBcModemAutoHdlcMode=mscGsmBcModemAutoHdlcMode, mscGsmBcRlpFramesRetransmitted=mscGsmBcRlpFramesRetransmitted, mscGsmBcL2RCopBreakCountRx=mscGsmBcL2RCopBreakCountRx, mscGsmBcRlpRowStatusEntry=mscGsmBcRlpRowStatusEntry, mscGsmCsCommentText=mscGsmCsCommentText, mscGsmCsCallsRequested=mscGsmCsCallsRequested, mscGsmBcRlpComponentName=mscGsmBcRlpComponentName, mscGsmBcModemStatsTable=mscGsmBcModemStatsTable, mscGsmBcL2RCopComponentName=mscGsmBcL2RCopComponentName, mscGsmBcV42bisOperTable=mscGsmBcV42bisOperTable, mscGsmCsRlpRowStatus=mscGsmCsRlpRowStatus, mscGsmCsStateEntry=mscGsmCsStateEntry, mscGsmCsLpRowStatusEntry=mscGsmCsLpRowStatusEntry, mscGsmBcModemRowStatusEntry=mscGsmBcModemRowStatusEntry, mscGsmCsProvTable=mscGsmCsProvTable, mscGsmBcUpperRelayUnacknowledgedFrames=mscGsmBcUpperRelayUnacknowledgedFrames, mscGsmBcCicIndex=mscGsmBcCicIndex, mscGsmBcRlpProtocolState=mscGsmBcRlpProtocolState, mscGsmCsV42TxN401FrameSize=mscGsmCsV42TxN401FrameSize, mscGsmBcUpperRelayStatsTable=mscGsmBcUpperRelayStatsTable, mscGsmBcV110BytesTx=mscGsmBcV110BytesTx, mscGsmBcRlpInvalidFrames=mscGsmBcRlpInvalidFrames, mscGsmCsChannelConfigChanges=mscGsmCsChannelConfigChanges, mscGsmBcFramerComponentName=mscGsmBcFramerComponentName, mscGsmCsRlpIndex=mscGsmCsRlpIndex, mscGsmBcModemOutbandFlowControl=mscGsmBcModemOutbandFlowControl, mscGsmBcUpperRelayFlowControlStateRx=mscGsmBcUpperRelayFlowControlStateRx, mscGsmBcFaxOperTable=mscGsmBcFaxOperTable, mscGsmBcRowStatus=mscGsmBcRowStatus, mscGsmBcLayer1NonOctetErrorsRx=mscGsmBcLayer1NonOctetErrorsRx, mscGsmBcV42ProtocolState=mscGsmBcV42ProtocolState, mscGsmCsV42RowStatusTable=mscGsmCsV42RowStatusTable, mscGsmCsStateTable=mscGsmCsStateTable, gsmIwfGroupCA02=gsmIwfGroupCA02, mscGsmBcFramerFrmFromIf=mscGsmBcFramerFrmFromIf, mscGsmBcV42bisModeChangesDecode=mscGsmBcV42bisModeChangesDecode, mscGsmBcL2RCopRowStatus=mscGsmBcL2RCopRowStatus, gsmIwfGroupCA=gsmIwfGroupCA, mscGsmBcV110=mscGsmBcV110, mscGsmCsFaxProvTable=mscGsmCsFaxProvTable, mscGsmBcLayer1FramesDiscarded=mscGsmBcLayer1FramesDiscarded, mscGsmBcV42bisProtocolModeEncoder=mscGsmBcV42bisProtocolModeEncoder, mscGsmBcLayer1DataRate=mscGsmBcLayer1DataRate, mscGsmCsV42T403IdleProbeTimer=mscGsmCsV42T403IdleProbeTimer, mscGsmBcV42bisRowStatus=mscGsmBcV42bisRowStatus, mscGsmBcRlpStorageType=mscGsmBcRlpStorageType, mscGsmBcV42IFramesRx=mscGsmBcV42IFramesRx)
