#
# PySNMP MIB module Wellfleet-HSSI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-HSSI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, ObjectIdentity, Counter64, Gauge32, TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, NotificationType, ModuleIdentity, Integer32, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "Counter64", "Gauge32", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "NotificationType", "ModuleIdentity", "Integer32", "iso", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfLine, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfLine")
wfHssiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 7), )
if mibBuilder.loadTexts: wfHssiTable.setStatus('mandatory')
wfHssiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1), ).setIndexNames((0, "Wellfleet-HSSI-MIB", "wfHssiSlot"), (0, "Wellfleet-HSSI-MIB", "wfHssiConnector"))
if mibBuilder.loadTexts: wfHssiEntry.setStatus('mandatory')
wfHssiDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiDelete.setStatus('mandatory')
wfHssiDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiDisable.setStatus('mandatory')
wfHssiState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 20))).clone(namedValues=NamedValues(("up", 1), ("lmiwait", 2), ("boflwait", 3), ("cawait", 4), ("init", 5), ("notpresent", 6), ("dteloopback", 7), ("dceloopback", 8), ("dceloopbackwait", 9), ("dceloopbacktmo", 10), ("lineloopbofltest", 19), ("notpres", 20))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiState.setStatus('mandatory')
wfHssiSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiSlot.setStatus('mandatory')
wfHssiConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiConnector.setStatus('mandatory')
wfHssiCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiCct.setStatus('mandatory')
wfHssiBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiBofl.setStatus('mandatory')
wfHssiBoflTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiBoflTmo.setStatus('mandatory')
wfHssiMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 4608)).clone(4608)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiMtu.setStatus('mandatory')
wfHssiMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiMadr.setStatus('mandatory')
wfHssiService = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transparent", 1), ("undefined", 2))).clone('transparent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiService.setStatus('mandatory')
wfHssiWanProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("standard", 1), ("passthru", 2), ("ppp", 3), ("smds", 4), ("framerelay", 5), ("atm", 6), ("sw", 7), ("switch", 8))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiWanProtocol.setStatus('mandatory')
wfHssiTransmissionInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("dsone", 1), ("dsthree", 3))).clone('dsthree')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiTransmissionInterface.setStatus('mandatory')
wfHssiExternalClkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(307200, 52638515)).clone(46359642)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiExternalClkSpeed.setStatus('mandatory')
wfHssiCrcSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc16bit", 1), ("crc32bit", 2))).clone('crc32bit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiCrcSize.setStatus('mandatory')
wfHssiInternalClkTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiInternalClkTestMode.setStatus('mandatory')
wfHssiRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxOctets.setStatus('mandatory')
wfHssiRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxFrames.setStatus('mandatory')
wfHssiTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxOctets.setStatus('mandatory')
wfHssiTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxFrames.setStatus('mandatory')
wfHssiInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiInDiscards.setStatus('mandatory')
wfHssiInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiInErrors.setStatus('mandatory')
wfHssiOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiOutDiscards.setStatus('mandatory')
wfHssiOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiOutErrors.setStatus('mandatory')
wfHssiRxLongFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxLongFrames.setStatus('mandatory')
wfHssiTxClipFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxClipFrames.setStatus('mandatory')
wfHssiRxReplenMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxReplenMisses.setStatus('mandatory')
wfHssiLastRxErrorCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiLastRxErrorCtrl.setStatus('mandatory')
wfHssiRxCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxCrcErrors.setStatus('mandatory')
wfHssiRxOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxOverruns.setStatus('mandatory')
wfHssiRxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxAborts.setStatus('mandatory')
wfHssiLastTxErrorCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiLastTxErrorCtrl.setStatus('mandatory')
wfHssiTxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxAborts.setStatus('mandatory')
wfHssiTxUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxUnderruns.setStatus('mandatory')
wfHssiRxRingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxRingErrors.setStatus('mandatory')
wfHssiLastRxRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiLastRxRingState.setStatus('mandatory')
wfHssiRxRingOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxRingOverruns.setStatus('mandatory')
wfHssiTxRingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxRingErrors.setStatus('mandatory')
wfHssiLastTxRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiLastTxRingState.setStatus('mandatory')
wfHssiPortOpErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiPortOpErrors.setStatus('mandatory')
wfHssiInternOpErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiInternOpErrors.setStatus('mandatory')
wfHssiHostErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiHostErrors.setStatus('mandatory')
wfHssiRxProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxProcessings.setStatus('mandatory')
wfHssiTxProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxProcessings.setStatus('mandatory')
wfHssiTxCmplProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxCmplProcessings.setStatus('mandatory')
wfHssiIntrProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiIntrProcessings.setStatus('mandatory')
wfHssiBoflNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiBoflNum.setStatus('mandatory')
wfHssiBoflLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(22, 4450)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiBoflLen.setStatus('mandatory')
wfHssiRxBufferLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(64, 128))).clone(namedValues=NamedValues(("length4k", 64), ("length8k", 128))).clone('length4k')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiRxBufferLength.setStatus('mandatory')
wfHssiMemPageLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("length32", 1), ("length256", 3))).clone('length32')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiMemPageLength.setStatus('mandatory')
wfHssiRxRingLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiRxRingLength.setStatus('mandatory')
wfHssiTxRingLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiTxRingLength.setStatus('mandatory')
wfHssiRxFifoWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiRxFifoWatermark.setStatus('mandatory')
wfHssiTxFifoWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiTxFifoWatermark.setStatus('mandatory')
wfHssiMaxRxMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiMaxRxMemory.setStatus('mandatory')
wfHssiLinkInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("ace25", 2), ("ace32", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiLinkInterface.setStatus('mandatory')
wfHssiTurboBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiTurboBofl.setStatus('mandatory')
wfHssiCfgRxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiCfgRxQueueLength.setStatus('mandatory')
wfHssiCfgTxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiCfgTxQueueLength.setStatus('mandatory')
wfHssiLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 60), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiLineNumber.setStatus('mandatory')
wfHssiCfgCngstCtlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiCfgCngstCtlEnable.setStatus('mandatory')
wfHssiLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 62), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiLastChange.setStatus('mandatory')
wfHssiOutQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiOutQLen.setStatus('mandatory')
wfHssiCarrLossDebounceTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiCarrLossDebounceTmo.setStatus('mandatory')
wfHssiModule = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiModule.setStatus('mandatory')
wfHssiActualConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4), ("five", 5), ("six", 6), ("seven", 7), ("eight", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfHssiActualConnector.setStatus('mandatory')
wfHssiLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("localdigital", 2), ("localline", 3), ("remoteline", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiLoopback.setStatus('mandatory')
wfHssiReceiveAllFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 7, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfHssiReceiveAllFrames.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-HSSI-MIB", wfHssiMadr=wfHssiMadr, wfHssiTxCmplProcessings=wfHssiTxCmplProcessings, wfHssiLastTxErrorCtrl=wfHssiLastTxErrorCtrl, wfHssiLineNumber=wfHssiLineNumber, wfHssiRxLongFrames=wfHssiRxLongFrames, wfHssiRxOctets=wfHssiRxOctets, wfHssiHostErrors=wfHssiHostErrors, wfHssiRxFifoWatermark=wfHssiRxFifoWatermark, wfHssiCfgCngstCtlEnable=wfHssiCfgCngstCtlEnable, wfHssiRxProcessings=wfHssiRxProcessings, wfHssiEntry=wfHssiEntry, wfHssiDisable=wfHssiDisable, wfHssiState=wfHssiState, wfHssiInternOpErrors=wfHssiInternOpErrors, wfHssiCfgTxQueueLength=wfHssiCfgTxQueueLength, wfHssiBoflTmo=wfHssiBoflTmo, wfHssiTxOctets=wfHssiTxOctets, wfHssiTxUnderruns=wfHssiTxUnderruns, wfHssiTxRingErrors=wfHssiTxRingErrors, wfHssiTxAborts=wfHssiTxAborts, wfHssiCfgRxQueueLength=wfHssiCfgRxQueueLength, wfHssiLastRxRingState=wfHssiLastRxRingState, wfHssiMemPageLength=wfHssiMemPageLength, wfHssiIntrProcessings=wfHssiIntrProcessings, wfHssiTurboBofl=wfHssiTurboBofl, wfHssiOutQLen=wfHssiOutQLen, wfHssiCarrLossDebounceTmo=wfHssiCarrLossDebounceTmo, wfHssiRxOverruns=wfHssiRxOverruns, wfHssiRxRingErrors=wfHssiRxRingErrors, wfHssiCct=wfHssiCct, wfHssiLastChange=wfHssiLastChange, wfHssiRxBufferLength=wfHssiRxBufferLength, wfHssiCrcSize=wfHssiCrcSize, wfHssiTransmissionInterface=wfHssiTransmissionInterface, wfHssiRxReplenMisses=wfHssiRxReplenMisses, wfHssiTxFrames=wfHssiTxFrames, wfHssiConnector=wfHssiConnector, wfHssiBoflLen=wfHssiBoflLen, wfHssiRxCrcErrors=wfHssiRxCrcErrors, wfHssiLastTxRingState=wfHssiLastTxRingState, wfHssiLoopback=wfHssiLoopback, wfHssiReceiveAllFrames=wfHssiReceiveAllFrames, wfHssiInDiscards=wfHssiInDiscards, wfHssiSlot=wfHssiSlot, wfHssiDelete=wfHssiDelete, wfHssiService=wfHssiService, wfHssiBoflNum=wfHssiBoflNum, wfHssiLastRxErrorCtrl=wfHssiLastRxErrorCtrl, wfHssiRxRingLength=wfHssiRxRingLength, wfHssiWanProtocol=wfHssiWanProtocol, wfHssiPortOpErrors=wfHssiPortOpErrors, wfHssiRxFrames=wfHssiRxFrames, wfHssiTxProcessings=wfHssiTxProcessings, wfHssiTxFifoWatermark=wfHssiTxFifoWatermark, wfHssiInErrors=wfHssiInErrors, wfHssiActualConnector=wfHssiActualConnector, wfHssiInternalClkTestMode=wfHssiInternalClkTestMode, wfHssiTable=wfHssiTable, wfHssiTxRingLength=wfHssiTxRingLength, wfHssiLinkInterface=wfHssiLinkInterface, wfHssiRxRingOverruns=wfHssiRxRingOverruns, wfHssiBofl=wfHssiBofl, wfHssiRxAborts=wfHssiRxAborts, wfHssiOutDiscards=wfHssiOutDiscards, wfHssiTxClipFrames=wfHssiTxClipFrames, wfHssiMtu=wfHssiMtu, wfHssiModule=wfHssiModule, wfHssiMaxRxMemory=wfHssiMaxRxMemory, wfHssiExternalClkSpeed=wfHssiExternalClkSpeed, wfHssiOutErrors=wfHssiOutErrors)
