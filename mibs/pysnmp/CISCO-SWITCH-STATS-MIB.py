#
# PySNMP MIB module CISCO-SWITCH-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SWITCH-STATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:57:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, NotificationType, ObjectIdentity, MibIdentifier, iso, Counter32, IpAddress, TimeTicks, Gauge32, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "ObjectIdentity", "MibIdentifier", "iso", "Counter32", "IpAddress", "TimeTicks", "Gauge32", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
ciscoSwitchStatsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 652))
ciscoSwitchStatsMIB.setRevisions(('2013-01-30 00:00', '2009-10-30 00:00',))
if mibBuilder.loadTexts: ciscoSwitchStatsMIB.setLastUpdated('201301300000Z')
if mibBuilder.loadTexts: ciscoSwitchStatsMIB.setOrganization('Cisco Systems, Inc.')
ciscoSwitchStatsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 0))
ciscoSwitchStatsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 1))
ciscoSwitchStatsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 2))
csstConfigurableStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1))
csstVlanStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 2))
csstSwitchTrafficStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3))
csstHwInternalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4))
csstRewriteEngineStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 5))
csstConfigStatsOptionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 1), )
if mibBuilder.loadTexts: csstConfigStatsOptionTable.setStatus('current')
csstConfigStatsOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-SWITCH-STATS-MIB", "csstConfigStatsOptionIndex"))
if mibBuilder.loadTexts: csstConfigStatsOptionEntry.setStatus('current')
csstConfigStatsOptionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: csstConfigStatsOptionIndex.setStatus('current')
csstConfigStatsOptionDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsOptionDesc.setStatus('current')
csstConfigStatsMapSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsMapSize.setStatus('current')
csstConfigStatsMap = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csstConfigStatsMap.setStatus('current')
csstConfigStatsIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4), )
if mibBuilder.loadTexts: csstConfigStatsIfTable.setStatus('current')
csstConfigStatsIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: csstConfigStatsIfEntry.setStatus('current')
csstConfigStatsIfPackets1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 1), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfPackets1.setStatus('current')
csstConfigStatsIfOctets1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 2), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfOctets1.setStatus('current')
csstConfigStatsIfPackets2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfPackets2.setStatus('current')
csstConfigStatsIfOctets2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 4), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfOctets2.setStatus('current')
csstConfigStatsIfPackets3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfPackets3.setStatus('current')
csstConfigStatsIfOctets3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 6), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfOctets3.setStatus('current')
csstConfigStatsIfPackets4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 7), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfPackets4.setStatus('current')
csstConfigStatsIfOctets4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 8), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfOctets4.setStatus('current')
csstConfigStatsIfPackets5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 9), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfPackets5.setStatus('current')
csstConfigStatsIfOctets5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 10), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfOctets5.setStatus('current')
csstConfigStatsIfPackets6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfPackets6.setStatus('current')
csstConfigStatsIfOctets6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 12), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfOctets6.setStatus('current')
csstConfigStatsIfPackets7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfPackets7.setStatus('current')
csstConfigStatsIfOctets7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 14), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfOctets7.setStatus('current')
csstConfigStatsIfPackets8 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 15), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfPackets8.setStatus('current')
csstConfigStatsIfOctets8 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 1, 4, 1, 16), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstConfigStatsIfOctets8.setStatus('current')
csstVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 2, 1), )
if mibBuilder.loadTexts: csstVlanStatsTable.setStatus('current')
csstVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-SWITCH-STATS-MIB", "csstVlanIndex"))
if mibBuilder.loadTexts: csstVlanStatsEntry.setStatus('current')
csstVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 2, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: csstVlanIndex.setStatus('current')
csstVlanKnownBridgedUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 2, 1, 1, 2), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstVlanKnownBridgedUcastPkts.setStatus('current')
csstVlanKnownBridgedUcastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 2, 1, 1, 3), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstVlanKnownBridgedUcastOctets.setStatus('current')
csstVlanKnownBridgedNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 2, 1, 1, 4), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstVlanKnownBridgedNUcastPkts.setStatus('current')
csstVlanKnownBridgedNUcastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 2, 1, 1, 5), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstVlanKnownBridgedNUcastOctets.setStatus('current')
csstSwitchStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1), )
if mibBuilder.loadTexts: csstSwitchStatsTable.setStatus('current')
csstSwitchStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: csstSwitchStatsEntry.setStatus('current')
csstL2TotalBridgedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL2TotalBridgedPkts.setStatus('current')
csstL3FibSwitchedIpv4UcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3FibSwitchedIpv4UcastPkts.setStatus('current')
csstL3FibSwitchedIpv6UcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3FibSwitchedIpv6UcastPkts.setStatus('current')
csstL3FibSwitchedEoMplsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3FibSwitchedEoMplsPkts.setStatus('current')
csstL3FibSwitchedMplsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3FibSwitchedMplsPkts.setStatus('current')
csstL3TotalMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3TotalMulticastPkts.setStatus('current')
csstL3IgmpMldPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3IgmpMldPkts.setStatus('current')
csstL3Ipv4MulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3Ipv4MulticastPkts.setStatus('current')
csstL3Ipv6MulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3Ipv6MulticastPkts.setStatus('current')
csstL3MulticastLeakPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3MulticastLeakPkts.setStatus('current')
csstL3InputAclRoutedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3InputAclRoutedPkts.setStatus('current')
csstL3OutputAclRoutedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3OutputAclRoutedPkts.setStatus('current')
csstL3InputNetflowSwitchedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3InputNetflowSwitchedPkts.setStatus('current')
csstL3OutputNetflowSwitchedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3OutputNetflowSwitchedPkts.setStatus('current')
csstL3InExceptionRedirectPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3InExceptionRedirectPkts.setStatus('current')
csstL3OutExceptionRedirectPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3OutExceptionRedirectPkts.setStatus('current')
csstL3TotalNetflowSwitchedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 17), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3TotalNetflowSwitchedPkts.setStatus('current')
csstL3TotalAclRoutedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstL3TotalAclRoutedPkts.setStatus('current')
csstTotalAclDenyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 3, 1, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstTotalAclDenyPkts.setStatus('current')
csstHwInternalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 1), )
if mibBuilder.loadTexts: csstHwInternalStatsTable.setStatus('current')
csstHwInternalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalStatsDeviceId"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalStatsInstanceNum"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalStatsDirection"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalStatsType"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalStatsIndex"))
if mibBuilder.loadTexts: csstHwInternalStatsEntry.setStatus('current')
csstHwInternalStatsDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: csstHwInternalStatsDeviceId.setStatus('current')
csstHwInternalStatsInstanceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: csstHwInternalStatsInstanceNum.setStatus('current')
csstHwInternalStatsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ingressIn", 1), ("ingressOut", 2), ("egressIn", 3), ("egressOut", 4))))
if mibBuilder.loadTexts: csstHwInternalStatsDirection.setStatus('current')
csstHwInternalStatsType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packetsPerSec", 1), ("bytesPerSec", 2))))
if mibBuilder.loadTexts: csstHwInternalStatsType.setStatus('current')
csstHwInternalStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 1, 1, 5), Unsigned32())
if mibBuilder.loadTexts: csstHwInternalStatsIndex.setStatus('current')
csstHwInternalStatsDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstHwInternalStatsDescr.setStatus('current')
csstHwInternalStatsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstHwInternalStatsRate.setStatus('current')
csstHwInternalErrorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 2), )
if mibBuilder.loadTexts: csstHwInternalErrorTable.setStatus('current')
csstHwInternalErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorDeviceId"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorCategory"))
if mibBuilder.loadTexts: csstHwInternalErrorEntry.setStatus('current')
csstHwInternalErrorDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: csstHwInternalErrorDeviceId.setStatus('current')
csstHwInternalErrorCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("error", 1), ("congestion", 2), ("qos", 3))))
if mibBuilder.loadTexts: csstHwInternalErrorCategory.setStatus('current')
csstHwInternalErrorDeviceInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstHwInternalErrorDeviceInfo.setStatus('current')
csstHwInternalErrorLastCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstHwInternalErrorLastCleared.setStatus('current')
csstHwInternalErrorInstTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 3), )
if mibBuilder.loadTexts: csstHwInternalErrorInstTable.setStatus('current')
csstHwInternalErrorInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorDeviceId"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorCategory"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorInstNum"), (0, "CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorInstErrorId"))
if mibBuilder.loadTexts: csstHwInternalErrorInstEntry.setStatus('current')
csstHwInternalErrorInstNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: csstHwInternalErrorInstNum.setStatus('current')
csstHwInternalErrorInstErrorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: csstHwInternalErrorInstErrorId.setStatus('current')
csstHwInternalErrorInstDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 3, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstHwInternalErrorInstDescr.setStatus('current')
csstHwInternalErrorInstCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstHwInternalErrorInstCount.setStatus('current')
csstHwInternalErrorInstPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 4, 3, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstHwInternalErrorInstPorts.setStatus('current')
csstRewriteEnginePktDropStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 5, 1), )
if mibBuilder.loadTexts: csstRewriteEnginePktDropStatsTable.setStatus('current')
csstRewriteEnginePktDropStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 5, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-SWITCH-STATS-MIB", "csstRewriteEngineChannelIndex"))
if mibBuilder.loadTexts: csstRewriteEnginePktDropStatsEntry.setStatus('current')
csstRewriteEngineChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: csstRewriteEngineChannelIndex.setStatus('current')
csstRewriteEngineDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 5, 1, 1, 2), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csstRewriteEngineDropPkts.setStatus('current')
csstRewriteEngineTotalOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 652, 1, 5, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csstRewriteEngineTotalOverruns.setStatus('current')
csstSwitchStatsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 1))
csstSwitchStatsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2))
csstSwitchStatsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 1, 1)).setObjects(("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsConfOptionGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsConfMapGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsConfIfGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsVlanGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsL2Group"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsL3Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csstSwitchStatsMIBCompliance = csstSwitchStatsMIBCompliance.setStatus('deprecated')
csstSwitchStatsMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 1, 2)).setObjects(("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsConfOptionGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsConfMapGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsConfIfGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsVlanGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsL2Group"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsLayer3Group"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsLayer3ExtGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsTotalGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsInternalStatsGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsInternalErrorGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsInternalInstanceGroup"), ("CISCO-SWITCH-STATS-MIB", "ciscoSwitchStatsRewriteEngineStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csstSwitchStatsMIBCompliance2 = csstSwitchStatsMIBCompliance2.setStatus('current')
ciscoSwitchStatsConfOptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 1)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstConfigStatsOptionDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsConfOptionGroup = ciscoSwitchStatsConfOptionGroup.setStatus('current')
ciscoSwitchStatsConfMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 2)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstConfigStatsMapSize"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsMap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsConfMapGroup = ciscoSwitchStatsConfMapGroup.setStatus('current')
ciscoSwitchStatsConfIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 3)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfPackets1"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfOctets1"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfPackets2"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfOctets2"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfPackets3"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfOctets3"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfPackets4"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfOctets4"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfPackets5"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfOctets5"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfPackets6"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfOctets6"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfPackets7"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfOctets7"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfPackets8"), ("CISCO-SWITCH-STATS-MIB", "csstConfigStatsIfOctets8"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsConfIfGroup = ciscoSwitchStatsConfIfGroup.setStatus('current')
ciscoSwitchStatsVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 4)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstVlanKnownBridgedUcastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstVlanKnownBridgedUcastOctets"), ("CISCO-SWITCH-STATS-MIB", "csstVlanKnownBridgedNUcastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstVlanKnownBridgedNUcastOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsVlanGroup = ciscoSwitchStatsVlanGroup.setStatus('current')
ciscoSwitchStatsL2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 5)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstL2TotalBridgedPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsL2Group = ciscoSwitchStatsL2Group.setStatus('current')
ciscoSwitchStatsL3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 6)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstL3FibSwitchedIpv4UcastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3FibSwitchedIpv6UcastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3FibSwitchedEoMplsPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3FibSwitchedMplsPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3TotalMulticastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3IgmpMldPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3Ipv4MulticastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3Ipv6MulticastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3MulticastLeakPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3InputAclRoutedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3OutputAclRoutedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3InputNetflowSwitchedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3OutputNetflowSwitchedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3InExceptionRedirectPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3OutExceptionRedirectPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsL3Group = ciscoSwitchStatsL3Group.setStatus('deprecated')
ciscoSwitchStatsLayer3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 7)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstL3FibSwitchedIpv4UcastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3FibSwitchedIpv6UcastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3FibSwitchedEoMplsPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3FibSwitchedMplsPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3IgmpMldPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3Ipv4MulticastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3Ipv6MulticastPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3MulticastLeakPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3InputAclRoutedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3OutputAclRoutedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3InputNetflowSwitchedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3OutputNetflowSwitchedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3InExceptionRedirectPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3OutExceptionRedirectPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsLayer3Group = ciscoSwitchStatsLayer3Group.setStatus('current')
ciscoSwitchStatsLayer3ExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 8)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstL3TotalMulticastPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsLayer3ExtGroup = ciscoSwitchStatsLayer3ExtGroup.setStatus('current')
ciscoSwitchStatsTotalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 9)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstL3TotalNetflowSwitchedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstL3TotalAclRoutedPkts"), ("CISCO-SWITCH-STATS-MIB", "csstTotalAclDenyPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsTotalGroup = ciscoSwitchStatsTotalGroup.setStatus('current')
ciscoSwitchStatsInternalStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 10)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstHwInternalStatsDescr"), ("CISCO-SWITCH-STATS-MIB", "csstHwInternalStatsRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsInternalStatsGroup = ciscoSwitchStatsInternalStatsGroup.setStatus('current')
ciscoSwitchStatsInternalErrorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 11)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorDeviceInfo"), ("CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorLastCleared"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsInternalErrorGroup = ciscoSwitchStatsInternalErrorGroup.setStatus('current')
ciscoSwitchStatsInternalInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 12)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorInstDescr"), ("CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorInstCount"), ("CISCO-SWITCH-STATS-MIB", "csstHwInternalErrorInstPorts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsInternalInstanceGroup = ciscoSwitchStatsInternalInstanceGroup.setStatus('current')
ciscoSwitchStatsRewriteEngineStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 652, 2, 2, 13)).setObjects(("CISCO-SWITCH-STATS-MIB", "csstRewriteEngineDropPkts"), ("CISCO-SWITCH-STATS-MIB", "csstRewriteEngineTotalOverruns"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSwitchStatsRewriteEngineStatsGroup = ciscoSwitchStatsRewriteEngineStatsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SWITCH-STATS-MIB", ciscoSwitchStatsConfIfGroup=ciscoSwitchStatsConfIfGroup, csstL3InputAclRoutedPkts=csstL3InputAclRoutedPkts, ciscoSwitchStatsInternalStatsGroup=ciscoSwitchStatsInternalStatsGroup, ciscoSwitchStatsLayer3ExtGroup=ciscoSwitchStatsLayer3ExtGroup, csstHwInternalStatsDescr=csstHwInternalStatsDescr, csstVlanKnownBridgedUcastOctets=csstVlanKnownBridgedUcastOctets, csstConfigStatsMapSize=csstConfigStatsMapSize, csstSwitchStatsMIBCompliance2=csstSwitchStatsMIBCompliance2, csstSwitchStatsMIBGroups=csstSwitchStatsMIBGroups, csstHwInternalStatsType=csstHwInternalStatsType, csstConfigStatsOptionEntry=csstConfigStatsOptionEntry, csstHwInternalErrorInstEntry=csstHwInternalErrorInstEntry, csstHwInternalStatsDirection=csstHwInternalStatsDirection, ciscoSwitchStatsMIB=ciscoSwitchStatsMIB, csstRewriteEnginePktDropStatsEntry=csstRewriteEnginePktDropStatsEntry, csstVlanKnownBridgedNUcastPkts=csstVlanKnownBridgedNUcastPkts, csstConfigStatsIfOctets3=csstConfigStatsIfOctets3, ciscoSwitchStatsL3Group=ciscoSwitchStatsL3Group, csstConfigStatsIfEntry=csstConfigStatsIfEntry, csstL3OutputAclRoutedPkts=csstL3OutputAclRoutedPkts, csstHwInternalErrorInstDescr=csstHwInternalErrorInstDescr, csstVlanStatsTable=csstVlanStatsTable, csstL3FibSwitchedIpv4UcastPkts=csstL3FibSwitchedIpv4UcastPkts, csstConfigStatsIfPackets5=csstConfigStatsIfPackets5, csstVlanStats=csstVlanStats, ciscoSwitchStatsMIBObjects=ciscoSwitchStatsMIBObjects, PYSNMP_MODULE_ID=ciscoSwitchStatsMIB, csstVlanKnownBridgedUcastPkts=csstVlanKnownBridgedUcastPkts, csstConfigStatsOptionDesc=csstConfigStatsOptionDesc, csstConfigStatsIfTable=csstConfigStatsIfTable, csstL3TotalNetflowSwitchedPkts=csstL3TotalNetflowSwitchedPkts, csstConfigStatsIfOctets5=csstConfigStatsIfOctets5, csstL3TotalAclRoutedPkts=csstL3TotalAclRoutedPkts, csstSwitchStatsTable=csstSwitchStatsTable, csstHwInternalStats=csstHwInternalStats, csstHwInternalErrorInstNum=csstHwInternalErrorInstNum, csstConfigStatsIfPackets1=csstConfigStatsIfPackets1, csstL3OutputNetflowSwitchedPkts=csstL3OutputNetflowSwitchedPkts, csstL3OutExceptionRedirectPkts=csstL3OutExceptionRedirectPkts, ciscoSwitchStatsMIBConform=ciscoSwitchStatsMIBConform, csstHwInternalErrorInstErrorId=csstHwInternalErrorInstErrorId, csstRewriteEngineStats=csstRewriteEngineStats, csstHwInternalErrorLastCleared=csstHwInternalErrorLastCleared, csstConfigurableStats=csstConfigurableStats, csstHwInternalStatsEntry=csstHwInternalStatsEntry, csstHwInternalErrorInstTable=csstHwInternalErrorInstTable, csstSwitchStatsMIBCompliances=csstSwitchStatsMIBCompliances, csstVlanStatsEntry=csstVlanStatsEntry, csstConfigStatsIfPackets8=csstConfigStatsIfPackets8, ciscoSwitchStatsTotalGroup=ciscoSwitchStatsTotalGroup, csstVlanKnownBridgedNUcastOctets=csstVlanKnownBridgedNUcastOctets, csstHwInternalStatsIndex=csstHwInternalStatsIndex, csstL3InExceptionRedirectPkts=csstL3InExceptionRedirectPkts, csstL3Ipv4MulticastPkts=csstL3Ipv4MulticastPkts, csstHwInternalStatsTable=csstHwInternalStatsTable, csstHwInternalStatsRate=csstHwInternalStatsRate, csstHwInternalErrorTable=csstHwInternalErrorTable, csstL3MulticastLeakPkts=csstL3MulticastLeakPkts, csstHwInternalErrorDeviceId=csstHwInternalErrorDeviceId, csstConfigStatsIfPackets6=csstConfigStatsIfPackets6, ciscoSwitchStatsLayer3Group=ciscoSwitchStatsLayer3Group, csstConfigStatsIfOctets2=csstConfigStatsIfOctets2, csstVlanIndex=csstVlanIndex, csstHwInternalErrorDeviceInfo=csstHwInternalErrorDeviceInfo, csstRewriteEngineDropPkts=csstRewriteEngineDropPkts, csstSwitchStatsMIBCompliance=csstSwitchStatsMIBCompliance, ciscoSwitchStatsMIBNotifs=ciscoSwitchStatsMIBNotifs, csstConfigStatsOptionIndex=csstConfigStatsOptionIndex, csstConfigStatsMap=csstConfigStatsMap, csstConfigStatsIfOctets6=csstConfigStatsIfOctets6, ciscoSwitchStatsInternalErrorGroup=ciscoSwitchStatsInternalErrorGroup, csstL3FibSwitchedMplsPkts=csstL3FibSwitchedMplsPkts, ciscoSwitchStatsConfMapGroup=ciscoSwitchStatsConfMapGroup, csstHwInternalErrorInstCount=csstHwInternalErrorInstCount, csstConfigStatsIfPackets7=csstConfigStatsIfPackets7, csstHwInternalErrorCategory=csstHwInternalErrorCategory, ciscoSwitchStatsConfOptionGroup=ciscoSwitchStatsConfOptionGroup, ciscoSwitchStatsVlanGroup=ciscoSwitchStatsVlanGroup, ciscoSwitchStatsL2Group=ciscoSwitchStatsL2Group, csstConfigStatsIfOctets7=csstConfigStatsIfOctets7, csstHwInternalErrorInstPorts=csstHwInternalErrorInstPorts, csstL3InputNetflowSwitchedPkts=csstL3InputNetflowSwitchedPkts, csstL3TotalMulticastPkts=csstL3TotalMulticastPkts, csstSwitchStatsEntry=csstSwitchStatsEntry, csstTotalAclDenyPkts=csstTotalAclDenyPkts, csstL2TotalBridgedPkts=csstL2TotalBridgedPkts, csstConfigStatsIfPackets3=csstConfigStatsIfPackets3, csstL3Ipv6MulticastPkts=csstL3Ipv6MulticastPkts, csstConfigStatsIfOctets8=csstConfigStatsIfOctets8, csstL3IgmpMldPkts=csstL3IgmpMldPkts, csstConfigStatsIfPackets4=csstConfigStatsIfPackets4, csstConfigStatsIfOctets4=csstConfigStatsIfOctets4, ciscoSwitchStatsInternalInstanceGroup=ciscoSwitchStatsInternalInstanceGroup, csstSwitchTrafficStats=csstSwitchTrafficStats, csstHwInternalStatsInstanceNum=csstHwInternalStatsInstanceNum, csstConfigStatsIfOctets1=csstConfigStatsIfOctets1, csstConfigStatsOptionTable=csstConfigStatsOptionTable, ciscoSwitchStatsRewriteEngineStatsGroup=ciscoSwitchStatsRewriteEngineStatsGroup, csstConfigStatsIfPackets2=csstConfigStatsIfPackets2, csstL3FibSwitchedIpv6UcastPkts=csstL3FibSwitchedIpv6UcastPkts, csstL3FibSwitchedEoMplsPkts=csstL3FibSwitchedEoMplsPkts, csstRewriteEngineTotalOverruns=csstRewriteEngineTotalOverruns, csstRewriteEnginePktDropStatsTable=csstRewriteEnginePktDropStatsTable, csstRewriteEngineChannelIndex=csstRewriteEngineChannelIndex, csstHwInternalErrorEntry=csstHwInternalErrorEntry, csstHwInternalStatsDeviceId=csstHwInternalStatsDeviceId)
