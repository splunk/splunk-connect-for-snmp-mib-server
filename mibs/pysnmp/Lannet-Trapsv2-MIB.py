#
# PySNMP MIB module Lannet-Trapsv2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Lannet-Trapsv2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:58:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
vnsPacketMACAddress, vnsPacketExpectedIfName, vnsPacketDetectedIfName, vnsPacketDetectedVLAN, vnsPacketBoxAgentIP, vnsPacketIPNetMask, vnsPacketIPAddress, lseIntPortCAMLastChange, vnsPacketExpectedVLAN = mibBuilder.importSymbols("APPLIC-MIB", "vnsPacketMACAddress", "vnsPacketExpectedIfName", "vnsPacketDetectedIfName", "vnsPacketDetectedVLAN", "vnsPacketBoxAgentIP", "vnsPacketIPNetMask", "vnsPacketIPAddress", "lseIntPortCAMLastChange", "vnsPacketExpectedVLAN")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
softRedundancyName, genPortGroupId, chHWIntTempWarning, genGroupCascadDownStatus, genPortId, genPortFunctionalStatus, softRedundancyStatus, genGroupMPSActivityStatus, genGroupFaultMask, genPortFaultMask, chHWIntTempThresh, softRedundancyGroupId2, genGroupCascadUpStatus, softRedundancyPortId2, softRedundancyPortId1, genGroupId, softRedundancyGroupId1, genGroupBUPSActivityStatus, chLntAgIntTemp = mibBuilder.importSymbols("CONFIG-MIB", "softRedundancyName", "genPortGroupId", "chHWIntTempWarning", "genGroupCascadDownStatus", "genPortId", "genPortFunctionalStatus", "softRedundancyStatus", "genGroupMPSActivityStatus", "genGroupFaultMask", "genPortFaultMask", "chHWIntTempThresh", "softRedundancyGroupId2", "genGroupCascadUpStatus", "softRedundancyPortId2", "softRedundancyPortId1", "genGroupId", "softRedundancyGroupId1", "genGroupBUPSActivityStatus", "chLntAgIntTemp")
dsx1LineStatus, = mibBuilder.importSymbols("DS1-MIB", "dsx1LineStatus")
lannet, = mibBuilder.importSymbols("GEN-MIB", "lannet")
ifName, ifIndex, ifOperStatus, ifAdminStatus, ifAlias = mibBuilder.importSymbols("IF-MIB", "ifName", "ifIndex", "ifOperStatus", "ifAdminStatus", "ifAlias")
ipNetToMediaNetAddress, ipNetToMediaPhysAddress = mibBuilder.importSymbols("IP-MIB", "ipNetToMediaNetAddress", "ipNetToMediaPhysAddress")
ipPolicyActivationSubContext, ipPolicyRuleListID, ipPolicyActivationEntID, ipPolicyAccessControlViolationIfIndex, ipPolicyAccessControlViolationSubCtxt, ipPolicyAccessControlViolationSrcAddr, ipPolicyAccessControlViolationDstAddr, ipPolicyAccessControlViolationL4SrcPort, ipPolicyListID, ipPolicyAccessControlViolationEstablished, ipPolicyAccessControlViolationProtocol, ipPolicyActivationifIndex, ipPolicyAccessControlViolationEntID, ipPolicyAccessControlViolationRuleType, ipPolicyAccessControlViolationTime, ipPolicyRuleDescription, ipPolicyActivationList, ipPolicyAccessControlViolationL4DstPort, ipPolicyControlSlot, ipPolicyRuleID = mibBuilder.importSymbols("POLICY-MIB", "ipPolicyActivationSubContext", "ipPolicyRuleListID", "ipPolicyActivationEntID", "ipPolicyAccessControlViolationIfIndex", "ipPolicyAccessControlViolationSubCtxt", "ipPolicyAccessControlViolationSrcAddr", "ipPolicyAccessControlViolationDstAddr", "ipPolicyAccessControlViolationL4SrcPort", "ipPolicyListID", "ipPolicyAccessControlViolationEstablished", "ipPolicyAccessControlViolationProtocol", "ipPolicyActivationifIndex", "ipPolicyAccessControlViolationEntID", "ipPolicyAccessControlViolationRuleType", "ipPolicyAccessControlViolationTime", "ipPolicyRuleDescription", "ipPolicyActivationList", "ipPolicyAccessControlViolationL4DstPort", "ipPolicyControlSlot", "ipPolicyRuleID")
rmonNotificationGroup, = mibBuilder.importSymbols("RMON-MIB", "rmonNotificationGroup")
ModuleCompliance, AgentCapabilities, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "AgentCapabilities", "ObjectGroup", "NotificationGroup")
coldStart, warmStart, authenticationFailure = mibBuilder.importSymbols("SNMPv2-MIB", "coldStart", "warmStart", "authenticationFailure")
Counter32, TimeTicks, Integer32, iso, Bits, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, MibIdentifier, NotificationType, ObjectIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "Integer32", "iso", "Bits", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "MibIdentifier", "NotificationType", "ObjectIdentity", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
scEthPortId, scGenGroupDot1xSystemMaxNumSupplicant, scEthPortGroupId, scGenLinkAggregationId, scGenGroupBUPSFansStatus, scGenLinkAggregationStatus, scGenLinkAggregationName, scEthPortFunctionalStatus, scGenPortLastIntruderSourceAddr, scGenGroupFansStatus, scGenPortId, scGenLinkAggregationFaultMask, scGenLinkAggregationFunctionalStatus, scGenSwitchDot1xPortMaxSuppNum, scGenPortDot1xMAC, scGenPortGroupId, scGenLinkAggregationAutoNegResults = mibBuilder.importSymbols("XSWITCH-MIB", "scEthPortId", "scGenGroupDot1xSystemMaxNumSupplicant", "scEthPortGroupId", "scGenLinkAggregationId", "scGenGroupBUPSFansStatus", "scGenLinkAggregationStatus", "scGenLinkAggregationName", "scEthPortFunctionalStatus", "scGenPortLastIntruderSourceAddr", "scGenGroupFansStatus", "scGenPortId", "scGenLinkAggregationFaultMask", "scGenLinkAggregationFunctionalStatus", "scGenSwitchDot1xPortMaxSuppNum", "scGenPortDot1xMAC", "scGenPortGroupId", "scGenLinkAggregationAutoNegResults")
lntTraps = ModuleIdentity((1, 3, 6, 1, 4, 1, 81, 38))
if mibBuilder.loadTexts: lntTraps.setLastUpdated('200903180953Z')
if mibBuilder.loadTexts: lntTraps.setOrganization('Avaya')
lntConfigChangeEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 1))
if mibBuilder.loadTexts: lntConfigChangeEvents.setStatus('current')
lntConfigChangePrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 1, 0))
if mibBuilder.loadTexts: lntConfigChangePrefix.setStatus('current')
lntConfigChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 1, 0, 1)).setObjects(("Lannet-Trapsv2-MIB", "lntConfigChangeOID"), ("Lannet-Trapsv2-MIB", "lntConfigChangeValue"))
if mibBuilder.loadTexts: lntConfigChangeEvent.setStatus('current')
lntStackMasterReelection = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 1, 0, 82)).setObjects(("CONFIG-MIB", "genGroupId"))
if mibBuilder.loadTexts: lntStackMasterReelection.setStatus('current')
lntSWRedundancyEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 2))
if mibBuilder.loadTexts: lntSWRedundancyEvents.setStatus('current')
lntSWRedundancyPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 2, 0))
if mibBuilder.loadTexts: lntSWRedundancyPrefix.setStatus('current')
lntSoftRedDelEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 2, 0, 12)).setObjects(("CONFIG-MIB", "softRedundancyStatus"))
if mibBuilder.loadTexts: lntSoftRedDelEvent.setStatus('current')
lntSoftRedNewEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 2, 0, 13)).setObjects(("CONFIG-MIB", "softRedundancyName"), ("CONFIG-MIB", "softRedundancyGroupId1"), ("CONFIG-MIB", "softRedundancyPortId1"), ("CONFIG-MIB", "softRedundancyGroupId2"), ("CONFIG-MIB", "softRedundancyPortId2"), ("CONFIG-MIB", "softRedundancyStatus"))
if mibBuilder.loadTexts: lntSoftRedNewEvent.setStatus('current')
lntTempratureEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 3))
if mibBuilder.loadTexts: lntTempratureEvents.setStatus('current')
lntTempratureWarningPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 3, 0))
if mibBuilder.loadTexts: lntTempratureWarningPrefix.setStatus('current')
lntTempratureWarning = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 3, 0, 14)).setObjects(("CONFIG-MIB", "chHWIntTempWarning"), ("CONFIG-MIB", "chHWIntTempThresh"), ("CONFIG-MIB", "chLntAgIntTemp"))
if mibBuilder.loadTexts: lntTempratureWarning.setStatus('current')
lntTempratureOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 3, 0, 23)).setObjects(("CONFIG-MIB", "chHWIntTempWarning"), ("CONFIG-MIB", "chHWIntTempThresh"), ("CONFIG-MIB", "chLntAgIntTemp"))
if mibBuilder.loadTexts: lntTempratureOk.setStatus('current')
lntCAMChangeEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 4))
if mibBuilder.loadTexts: lntCAMChangeEvents.setStatus('current')
lntCAMChangePrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 4, 0))
if mibBuilder.loadTexts: lntCAMChangePrefix.setStatus('current')
lntPortCAMLastChange = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 4, 0, 22)).setObjects(("APPLIC-MIB", "lseIntPortCAMLastChange"))
if mibBuilder.loadTexts: lntPortCAMLastChange.setStatus('obsolete')
lntPSUEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 5))
if mibBuilder.loadTexts: lntPSUEvents.setStatus('current')
lntPSUPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 5, 0))
if mibBuilder.loadTexts: lntPSUPrefix.setStatus('current')
lntMainPSUFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 5, 0, 2303)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("CONFIG-MIB", "genGroupMPSActivityStatus"))
if mibBuilder.loadTexts: lntMainPSUFlt.setStatus('current')
lntMainPSUOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 5, 0, 2304)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("CONFIG-MIB", "genGroupMPSActivityStatus"))
if mibBuilder.loadTexts: lntMainPSUOk.setStatus('current')
lntBackupPSUFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 5, 0, 2305)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("CONFIG-MIB", "genGroupBUPSActivityStatus"))
if mibBuilder.loadTexts: lntBackupPSUFlt.setStatus('current')
lntBackupPSUOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 5, 0, 2306)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("CONFIG-MIB", "genGroupMPSActivityStatus"))
if mibBuilder.loadTexts: lntBackupPSUOk.setStatus('current')
lntL3Events = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 6))
if mibBuilder.loadTexts: lntL3Events.setStatus('current')
lntL3FaultsPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 6, 0))
if mibBuilder.loadTexts: lntL3FaultsPrefix.setStatus('current')
lntDuplicateIPFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 6, 0, 27)).setObjects(("IP-MIB", "ipNetToMediaPhysAddress"), ("IP-MIB", "ipNetToMediaNetAddress"))
if mibBuilder.loadTexts: lntDuplicateIPFlt.setStatus('current')
lntVLANViolationEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 6, 0, 28)).setObjects(("APPLIC-MIB", "vnsPacketMACAddress"), ("APPLIC-MIB", "vnsPacketIPAddress"), ("APPLIC-MIB", "vnsPacketIPNetMask"), ("APPLIC-MIB", "vnsPacketExpectedVLAN"), ("APPLIC-MIB", "vnsPacketDetectedVLAN"), ("APPLIC-MIB", "vnsPacketBoxAgentIP"))
if mibBuilder.loadTexts: lntVLANViolationEvent.setStatus('current')
lntARPViolationEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 6, 0, 70)).setObjects(("APPLIC-MIB", "vnsPacketMACAddress"), ("APPLIC-MIB", "vnsPacketIPAddress"), ("APPLIC-MIB", "vnsPacketIPNetMask"), ("APPLIC-MIB", "vnsPacketExpectedVLAN"), ("APPLIC-MIB", "vnsPacketDetectedVLAN"), ("APPLIC-MIB", "vnsPacketBoxAgentIP"), ("APPLIC-MIB", "vnsPacketExpectedIfName"), ("APPLIC-MIB", "vnsPacketDetectedIfName"))
if mibBuilder.loadTexts: lntARPViolationEvent.setStatus('current')
lntLinkEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 7))
if mibBuilder.loadTexts: lntLinkEvents.setStatus('current')
lntLinkEventsPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 7, 0))
if mibBuilder.loadTexts: lntLinkEventsPrefix.setStatus('current')
lntPortLinkDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 7, 0, 3039)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntPortLinkDownEvent.setStatus('current')
lntPortLinkUpEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 7, 0, 3040)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntPortLinkUpEvent.setStatus('current')
lntVPortLinkDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 7, 0, 3041)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntVPortLinkDownEvent.setStatus('current')
lntVPortLinkUpEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 7, 0, 3042)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntVPortLinkUpEvent.setStatus('current')
lntLAGEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 8))
if mibBuilder.loadTexts: lntLAGEvents.setStatus('current')
lntLAGPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 8, 0))
if mibBuilder.loadTexts: lntLAGPrefix.setStatus('current')
lntLAGConnLostFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 8, 0, 44)).setObjects(("XSWITCH-MIB", "scGenLinkAggregationFaultMask"), ("XSWITCH-MIB", "scGenLinkAggregationId"), ("XSWITCH-MIB", "scGenLinkAggregationName"), ("XSWITCH-MIB", "scGenLinkAggregationFunctionalStatus"))
if mibBuilder.loadTexts: lntLAGConnLostFlt.setStatus('current')
lntLAGConnLostOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 8, 0, 46)).setObjects(("XSWITCH-MIB", "scGenLinkAggregationFaultMask"), ("XSWITCH-MIB", "scGenLinkAggregationId"), ("XSWITCH-MIB", "scGenLinkAggregationName"), ("XSWITCH-MIB", "scGenLinkAggregationFunctionalStatus"))
if mibBuilder.loadTexts: lntLAGConnLostOk.setStatus('current')
lntLAGPartialConnLostFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 8, 0, 48)).setObjects(("XSWITCH-MIB", "scGenLinkAggregationFaultMask"), ("XSWITCH-MIB", "scGenLinkAggregationId"), ("XSWITCH-MIB", "scGenLinkAggregationName"), ("XSWITCH-MIB", "scGenLinkAggregationFunctionalStatus"))
if mibBuilder.loadTexts: lntLAGPartialConnLostFlt.setStatus('current')
lntLAGPartialConnLostOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 8, 0, 50)).setObjects(("XSWITCH-MIB", "scGenLinkAggregationFaultMask"), ("XSWITCH-MIB", "scGenLinkAggregationId"), ("XSWITCH-MIB", "scGenLinkAggregationName"), ("XSWITCH-MIB", "scGenLinkAggregationFunctionalStatus"))
if mibBuilder.loadTexts: lntLAGPartialConnLostOk.setStatus('current')
lntLAGAutoNegFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 8, 0, 52)).setObjects(("XSWITCH-MIB", "scGenLinkAggregationFaultMask"), ("XSWITCH-MIB", "scGenLinkAggregationId"), ("XSWITCH-MIB", "scGenLinkAggregationName"), ("XSWITCH-MIB", "scGenLinkAggregationAutoNegResults"))
if mibBuilder.loadTexts: lntLAGAutoNegFlt.setStatus('current')
lntLAGAutoNegOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 8, 0, 54)).setObjects(("XSWITCH-MIB", "scGenLinkAggregationFaultMask"), ("XSWITCH-MIB", "scGenLinkAggregationId"), ("XSWITCH-MIB", "scGenLinkAggregationName"), ("XSWITCH-MIB", "scGenLinkAggregationAutoNegResults"))
if mibBuilder.loadTexts: lntLAGAutoNegOk.setStatus('current')
lntLAGDeleteEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 8, 0, 56)).setObjects(("XSWITCH-MIB", "scGenLinkAggregationId"), ("XSWITCH-MIB", "scGenLinkAggregationName"), ("XSWITCH-MIB", "scGenLinkAggregationStatus"))
if mibBuilder.loadTexts: lntLAGDeleteEvent.setStatus('current')
lntLAGCreateEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 8, 0, 58)).setObjects(("XSWITCH-MIB", "scGenLinkAggregationId"), ("XSWITCH-MIB", "scGenLinkAggregationName"), ("XSWITCH-MIB", "scGenLinkAggregationStatus"))
if mibBuilder.loadTexts: lntLAGCreateEvent.setStatus('current')
lntFansEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 9))
if mibBuilder.loadTexts: lntFansEvents.setStatus('current')
lntFansPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 9, 0))
if mibBuilder.loadTexts: lntFansPrefix.setStatus('current')
lntMainFansFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 9, 0, 2307)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("XSWITCH-MIB", "scGenGroupFansStatus"))
if mibBuilder.loadTexts: lntMainFansFlt.setStatus('current')
lntMainFansOK = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 9, 0, 2308)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("XSWITCH-MIB", "scGenGroupFansStatus"))
if mibBuilder.loadTexts: lntMainFansOK.setStatus('current')
lntBackupFansFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 9, 0, 2309)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("XSWITCH-MIB", "scGenGroupBUPSFansStatus"))
if mibBuilder.loadTexts: lntBackupFansFlt.setStatus('current')
lntBackupFansOK = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 9, 0, 2310)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("XSWITCH-MIB", "scGenGroupBUPSFansStatus"))
if mibBuilder.loadTexts: lntBackupFansOK.setStatus('current')
lntCascadeEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 10))
if mibBuilder.loadTexts: lntCascadeEvents.setStatus('current')
lntCascadeFaultsPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 10, 0))
if mibBuilder.loadTexts: lntCascadeFaultsPrefix.setStatus('current')
lntCascadUpConnFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 10, 0, 2315)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("CONFIG-MIB", "genGroupCascadUpStatus"))
if mibBuilder.loadTexts: lntCascadUpConnFlt.setStatus('current')
lntCascadUpConnOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 10, 0, 2316)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("CONFIG-MIB", "genGroupCascadUpStatus"))
if mibBuilder.loadTexts: lntCascadUpConnOk.setStatus('current')
lntCascadDownConnFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 10, 0, 2317)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("CONFIG-MIB", "genGroupCascadDownStatus"))
if mibBuilder.loadTexts: lntCascadDownConnFlt.setStatus('current')
lntCascadDownConnOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 10, 0, 2318)).setObjects(("CONFIG-MIB", "genGroupFaultMask"), ("CONFIG-MIB", "genGroupId"), ("CONFIG-MIB", "genGroupCascadDownStatus"))
if mibBuilder.loadTexts: lntCascadDownConnOk.setStatus('current')
lntPolicyEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 11))
if mibBuilder.loadTexts: lntPolicyEvents.setStatus('current')
lntPolicyPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 11, 0))
if mibBuilder.loadTexts: lntPolicyPrefix.setStatus('current')
lntPolicyChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 11, 0, 60)).setObjects(("POLICY-MIB", "ipPolicyActivationEntID"), ("POLICY-MIB", "ipPolicyActivationList"), ("POLICY-MIB", "ipPolicyActivationifIndex"), ("POLICY-MIB", "ipPolicyActivationSubContext"))
if mibBuilder.loadTexts: lntPolicyChangeEvent.setStatus('current')
lntPolicyAccessControlListLvlRuleTrap = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 11, 0, 62)).setObjects(("POLICY-MIB", "ipPolicyAccessControlViolationEntID"), ("POLICY-MIB", "ipPolicyAccessControlViolationSrcAddr"), ("POLICY-MIB", "ipPolicyAccessControlViolationDstAddr"), ("POLICY-MIB", "ipPolicyAccessControlViolationProtocol"), ("POLICY-MIB", "ipPolicyAccessControlViolationL4SrcPort"), ("POLICY-MIB", "ipPolicyAccessControlViolationL4DstPort"), ("POLICY-MIB", "ipPolicyAccessControlViolationEstablished"), ("POLICY-MIB", "ipPolicyAccessControlViolationRuleType"), ("POLICY-MIB", "ipPolicyListID"), ("POLICY-MIB", "ipPolicyAccessControlViolationIfIndex"), ("POLICY-MIB", "ipPolicyAccessControlViolationSubCtxt"), ("POLICY-MIB", "ipPolicyAccessControlViolationTime"))
if mibBuilder.loadTexts: lntPolicyAccessControlListLvlRuleTrap.setStatus('current')
lntPolicyAccessControlViolationFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 11, 0, 64)).setObjects(("POLICY-MIB", "ipPolicyAccessControlViolationEntID"), ("POLICY-MIB", "ipPolicyAccessControlViolationSrcAddr"), ("POLICY-MIB", "ipPolicyAccessControlViolationDstAddr"), ("POLICY-MIB", "ipPolicyAccessControlViolationProtocol"), ("POLICY-MIB", "ipPolicyAccessControlViolationL4SrcPort"), ("POLICY-MIB", "ipPolicyAccessControlViolationL4DstPort"), ("POLICY-MIB", "ipPolicyAccessControlViolationEstablished"), ("POLICY-MIB", "ipPolicyRuleID"), ("POLICY-MIB", "ipPolicyRuleListID"), ("POLICY-MIB", "ipPolicyAccessControlViolationIfIndex"), ("POLICY-MIB", "ipPolicyAccessControlViolationSubCtxt"), ("POLICY-MIB", "ipPolicyAccessControlViolationTime"), ("POLICY-MIB", "ipPolicyRuleDescription"))
if mibBuilder.loadTexts: lntPolicyAccessControlViolationFlt.setStatus('current')
lntEthPortFaultEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 12))
if mibBuilder.loadTexts: lntEthPortFaultEvents.setStatus('current')
lntEthPortFaultPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 12, 0))
if mibBuilder.loadTexts: lntEthPortFaultPrefix.setStatus('current')
lntEthPortAutoNegotiationFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3001)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntEthPortAutoNegotiationFlt.setStatus('current')
lntEthPortAutoNegotiationOK = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3002)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntEthPortAutoNegotiationOK.setStatus('current')
lntPortFEFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3005)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntPortFEFlt.setStatus('current')
lntPortFEOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3006)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntPortFEOk.setStatus('current')
lntVPortFEFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3015)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntVPortFEFlt.setStatus('current')
lntVPortFEOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3016)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntVPortFEOk.setStatus('current')
lntPortAutoPartFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3023)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntPortAutoPartFlt.setStatus('current')
lntPortAutoPartOk = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3024)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntPortAutoPartOk.setStatus('current')
lntVPortAutoPartFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3025)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntVPortAutoPartFlt.setStatus('current')
lntVPortAutoPartOK = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3026)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntVPortAutoPartOK.setStatus('current')
lntEthVPortAutoNegotiationFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3031)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntEthVPortAutoNegotiationFlt.setStatus('current')
lntEthVPortAutoNegotiationOK = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3032)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntEthVPortAutoNegotiationOK.setStatus('current')
lntPortInlinePowerFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3933)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntPortInlinePowerFlt.setStatus('current')
lntPortInlinePowerOK = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 12, 0, 3934)).setObjects(("CONFIG-MIB", "genPortFaultMask"), ("CONFIG-MIB", "genPortGroupId"), ("CONFIG-MIB", "genPortId"))
if mibBuilder.loadTexts: lntPortInlinePowerOK.setStatus('current')
lntSecurityEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 13))
if mibBuilder.loadTexts: lntSecurityEvents.setStatus('current')
lntSecurityPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 13, 0))
if mibBuilder.loadTexts: lntSecurityPrefix.setStatus('current')
lntUnAuthAccessEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 68)).setObjects(("Lannet-Trapsv2-MIB", "lntUnauthUserName"), ("Lannet-Trapsv2-MIB", "lntUnauthIpAddress"), ("Lannet-Trapsv2-MIB", "lntUnauthProtocol"))
if mibBuilder.loadTexts: lntUnAuthAccessEvent.setStatus('current')
lntMACSecurityEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 104)).setObjects(("XSWITCH-MIB", "scGenPortLastIntruderSourceAddr"), ("XSWITCH-MIB", "scGenPortGroupId"), ("XSWITCH-MIB", "scGenPortId"))
if mibBuilder.loadTexts: lntMACSecurityEvent.setStatus('current')
lntUnknownHostCopyEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 1002)).setObjects(("Lannet-Trapsv2-MIB", "lntUnauthUserName"), ("Lannet-Trapsv2-MIB", "lntUnauthIpAddress"), ("Lannet-Trapsv2-MIB", "lntSCPStrictCheckingMode"))
if mibBuilder.loadTexts: lntUnknownHostCopyEvent.setStatus('current')
lntAccountLockoutEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 1003)).setObjects(("Lannet-Trapsv2-MIB", "lntUnauthUserName"), ("Lannet-Trapsv2-MIB", "lntUnauthIpAddress"), ("Lannet-Trapsv2-MIB", "lntUnauthProtocol"))
if mibBuilder.loadTexts: lntAccountLockoutEvent.setStatus('current')
lntLicenseStartupValidationFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 1004)).setObjects(("Lannet-Trapsv2-MIB", "lntLicenseErrorCodes"))
if mibBuilder.loadTexts: lntLicenseStartupValidationFlt.setStatus('current')
lntLicenseDownloadValidationFlt = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 1005)).setObjects(("Lannet-Trapsv2-MIB", "lntLicenseErrorCodes"))
if mibBuilder.loadTexts: lntLicenseDownloadValidationFlt.setStatus('current')
lntDot1xMaxAuthRateReachedEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 1006)).setObjects(("XSWITCH-MIB", "scGenPortGroupId"))
if mibBuilder.loadTexts: lntDot1xMaxAuthRateReachedEvent.setStatus('current')
lntDot1xAuthFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 1007)).setObjects(("XSWITCH-MIB", "scGenPortDot1xMAC"), ("XSWITCH-MIB", "scGenPortGroupId"), ("XSWITCH-MIB", "scGenPortId"), ("Lannet-Trapsv2-MIB", "scGenPortDot1xFailureString"))
if mibBuilder.loadTexts: lntDot1xAuthFailureEvent.setStatus('current')
lntDot1xMaxAuthModuleNumReachedEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 1008)).setObjects(("XSWITCH-MIB", "scGenGroupDot1xSystemMaxNumSupplicant"), ("XSWITCH-MIB", "scGenPortGroupId"))
if mibBuilder.loadTexts: lntDot1xMaxAuthModuleNumReachedEvent.setStatus('current')
lntDot1xMaxAuthPortNumReachedEvent = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 13, 0, 1009)).setObjects(("XSWITCH-MIB", "scGenSwitchDot1xPortMaxSuppNum"), ("XSWITCH-MIB", "scGenPortGroupId"), ("XSWITCH-MIB", "scGenPortId"))
if mibBuilder.loadTexts: lntDot1xMaxAuthPortNumReachedEvent.setStatus('current')
lntNotificationVarbinds = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 14))
if mibBuilder.loadTexts: lntNotificationVarbinds.setStatus('current')
lntConfigChangeValue = MibScalar((1, 3, 6, 1, 4, 1, 81, 38, 14, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: lntConfigChangeValue.setStatus('current')
lntConfigChangeOID = MibScalar((1, 3, 6, 1, 4, 1, 81, 38, 14, 2), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: lntConfigChangeOID.setStatus('current')
lntUnauthUserName = MibScalar((1, 3, 6, 1, 4, 1, 81, 38, 14, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: lntUnauthUserName.setStatus('current')
lntUnauthIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 81, 38, 14, 4), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: lntUnauthIpAddress.setStatus('current')
lntUnauthProtocol = MibScalar((1, 3, 6, 1, 4, 1, 81, 38, 14, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(22, 23, 80, 161, 443, 500, 6889, 6890, 6891))).clone(namedValues=NamedValues(("lntSSHAccess", 22), ("lntTELNETAccess", 23), ("lntHTTPAccess", 80), ("lntSNMPAccess", 161), ("lntHTTPSAccess", 443), ("lntIKEAccess", 500), ("lntRASAccess", 6889), ("lntConsoleAccess", 6890), ("lntPPPAccess", 6891)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: lntUnauthProtocol.setStatus('current')
lntSCPStrictCheckingMode = MibScalar((1, 3, 6, 1, 4, 1, 81, 38, 14, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("ask", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: lntSCPStrictCheckingMode.setStatus('current')
lntLicenseErrorCodes = MibScalar((1, 3, 6, 1, 4, 1, 81, 38, 14, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lntSerialNumMismatch", 1), ("lntInvalidSignature", 2), ("lntPlatformTypeMismatch", 3), ("lntInvalidLicFeture", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: lntLicenseErrorCodes.setStatus('current')
scGenPortDot1xFailureString = MibScalar((1, 3, 6, 1, 4, 1, 81, 38, 14, 8), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: scGenPortDot1xFailureString.setStatus('current')
lntWanEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 15))
if mibBuilder.loadTexts: lntWanEvents.setStatus('current')
lntWanPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 81, 38, 15, 0))
if mibBuilder.loadTexts: lntWanPrefix.setStatus('current')
lntWanPhysicalAlarmOn = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 15, 0, 30)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifName"), ("IF-MIB", "ifAlias"), ("DS1-MIB", "dsx1LineStatus"))
if mibBuilder.loadTexts: lntWanPhysicalAlarmOn.setStatus('current')
lntWanPhysicalAlarmOff = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 15, 0, 31)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifName"), ("IF-MIB", "ifAlias"), ("DS1-MIB", "dsx1LineStatus"))
if mibBuilder.loadTexts: lntWanPhysicalAlarmOff.setStatus('current')
lntWanLocalAlarmOn = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 15, 0, 32)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifName"), ("IF-MIB", "ifAlias"), ("DS1-MIB", "dsx1LineStatus"))
if mibBuilder.loadTexts: lntWanLocalAlarmOn.setStatus('current')
lntWanLocalAlarmOff = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 15, 0, 33)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifName"), ("IF-MIB", "ifAlias"), ("DS1-MIB", "dsx1LineStatus"))
if mibBuilder.loadTexts: lntWanLocalAlarmOff.setStatus('current')
lntWanRemoteAlarmOn = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 15, 0, 34)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifName"), ("IF-MIB", "ifAlias"), ("DS1-MIB", "dsx1LineStatus"))
if mibBuilder.loadTexts: lntWanRemoteAlarmOn.setStatus('current')
lntWanRemoteAlarmOff = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 15, 0, 35)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifName"), ("IF-MIB", "ifAlias"), ("DS1-MIB", "dsx1LineStatus"))
if mibBuilder.loadTexts: lntWanRemoteAlarmOff.setStatus('current')
lntWanMinorAlarmOn = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 15, 0, 36)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifName"), ("IF-MIB", "ifAlias"), ("DS1-MIB", "dsx1LineStatus"))
if mibBuilder.loadTexts: lntWanMinorAlarmOn.setStatus('current')
lntWanMinorAlarmOff = NotificationType((1, 3, 6, 1, 4, 1, 81, 38, 15, 0, 37)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifName"), ("IF-MIB", "ifAlias"), ("DS1-MIB", "dsx1LineStatus"))
if mibBuilder.loadTexts: lntWanMinorAlarmOff.setStatus('current')
lntNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 81, 38, 10007))
lntConfigChangeVarbinds = ObjectGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 1)).setObjects(("Lannet-Trapsv2-MIB", "lntConfigChangeValue"), ("Lannet-Trapsv2-MIB", "lntConfigChangeOID"), ("Lannet-Trapsv2-MIB", "lntUnauthIpAddress"), ("Lannet-Trapsv2-MIB", "lntUnauthUserName"), ("Lannet-Trapsv2-MIB", "lntLicenseErrorCodes"), ("Lannet-Trapsv2-MIB", "lntSCPStrictCheckingMode"), ("Lannet-Trapsv2-MIB", "lntUnauthProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntConfigChangeVarbinds = lntConfigChangeVarbinds.setStatus('current')
lntLagNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 5)).setObjects(("Lannet-Trapsv2-MIB", "lntLAGConnLostFlt"), ("Lannet-Trapsv2-MIB", "lntLAGConnLostOk"), ("Lannet-Trapsv2-MIB", "lntLAGPartialConnLostFlt"), ("Lannet-Trapsv2-MIB", "lntLAGPartialConnLostOk"), ("Lannet-Trapsv2-MIB", "lntLAGAutoNegFlt"), ("Lannet-Trapsv2-MIB", "lntLAGAutoNegOk"), ("Lannet-Trapsv2-MIB", "lntLAGDeleteEvent"), ("Lannet-Trapsv2-MIB", "lntLAGCreateEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntLagNotificationGroup = lntLagNotificationGroup.setStatus('current')
lntSWRedundancyNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 6)).setObjects(("Lannet-Trapsv2-MIB", "lntSoftRedDelEvent"), ("Lannet-Trapsv2-MIB", "lntSoftRedNewEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntSWRedundancyNotificationGroup = lntSWRedundancyNotificationGroup.setStatus('current')
lntPSUFaultNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 7)).setObjects(("Lannet-Trapsv2-MIB", "lntMainPSUFlt"), ("Lannet-Trapsv2-MIB", "lntMainPSUOk"), ("Lannet-Trapsv2-MIB", "lntBackupPSUFlt"), ("Lannet-Trapsv2-MIB", "lntBackupPSUOk"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntPSUFaultNotificationGroup = lntPSUFaultNotificationGroup.setStatus('current')
lntTempratureNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 8)).setObjects(("Lannet-Trapsv2-MIB", "lntTempratureOk"), ("Lannet-Trapsv2-MIB", "lntTempratureWarning"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntTempratureNotificationGroup = lntTempratureNotificationGroup.setStatus('current')
lntL3FaultNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 9)).setObjects(("Lannet-Trapsv2-MIB", "lntDuplicateIPFlt"), ("Lannet-Trapsv2-MIB", "lntVLANViolationEvent"), ("Lannet-Trapsv2-MIB", "lntARPViolationEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntL3FaultNotificationGroup = lntL3FaultNotificationGroup.setStatus('current')
lntLinkDownNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 10)).setObjects(("Lannet-Trapsv2-MIB", "lntPortLinkDownEvent"), ("Lannet-Trapsv2-MIB", "lntPortLinkUpEvent"), ("Lannet-Trapsv2-MIB", "lntVPortLinkDownEvent"), ("Lannet-Trapsv2-MIB", "lntVPortLinkUpEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntLinkDownNotificationGroup = lntLinkDownNotificationGroup.setStatus('current')
lntCascadeNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 11)).setObjects(("Lannet-Trapsv2-MIB", "lntCascadUpConnFlt"), ("Lannet-Trapsv2-MIB", "lntCascadUpConnOk"), ("Lannet-Trapsv2-MIB", "lntCascadDownConnOk"), ("Lannet-Trapsv2-MIB", "lntCascadDownConnFlt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntCascadeNotificationGroup = lntCascadeNotificationGroup.setStatus('current')
lntEthPortNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 12)).setObjects(("Lannet-Trapsv2-MIB", "lntPortFEFlt"), ("Lannet-Trapsv2-MIB", "lntPortFEOk"), ("Lannet-Trapsv2-MIB", "lntVPortFEFlt"), ("Lannet-Trapsv2-MIB", "lntVPortFEOk"), ("Lannet-Trapsv2-MIB", "lntPortAutoPartFlt"), ("Lannet-Trapsv2-MIB", "lntPortAutoPartOk"), ("Lannet-Trapsv2-MIB", "lntVPortAutoPartFlt"), ("Lannet-Trapsv2-MIB", "lntVPortAutoPartOK"), ("Lannet-Trapsv2-MIB", "lntEthVPortAutoNegotiationOK"), ("Lannet-Trapsv2-MIB", "lntEthPortAutoNegotiationOK"), ("Lannet-Trapsv2-MIB", "lntEthPortAutoNegotiationFlt"), ("Lannet-Trapsv2-MIB", "lntEthVPortAutoNegotiationFlt"), ("Lannet-Trapsv2-MIB", "lntPortInlinePowerFlt"), ("Lannet-Trapsv2-MIB", "lntPortInlinePowerOK"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntEthPortNotificationGroup = lntEthPortNotificationGroup.setStatus('current')
lntCAMNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 13)).setObjects(("Lannet-Trapsv2-MIB", "lntPortCAMLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntCAMNotificationGroup = lntCAMNotificationGroup.setStatus('obsolete')
lntConfigChangeNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 14)).setObjects(("Lannet-Trapsv2-MIB", "lntConfigChangeEvent"), ("Lannet-Trapsv2-MIB", "lntStackMasterReelection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntConfigChangeNotificationGroup = lntConfigChangeNotificationGroup.setStatus('current')
lntPolicyNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 15)).setObjects(("Lannet-Trapsv2-MIB", "lntPolicyAccessControlListLvlRuleTrap"), ("Lannet-Trapsv2-MIB", "lntPolicyAccessControlViolationFlt"), ("Lannet-Trapsv2-MIB", "lntPolicyChangeEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntPolicyNotificationGroup = lntPolicyNotificationGroup.setStatus('current')
lntFansNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 16)).setObjects(("Lannet-Trapsv2-MIB", "lntBackupFansFlt"), ("Lannet-Trapsv2-MIB", "lntBackupFansOK"), ("Lannet-Trapsv2-MIB", "lntMainFansFlt"), ("Lannet-Trapsv2-MIB", "lntMainFansOK"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntFansNotificationGroup = lntFansNotificationGroup.setStatus('current')
lntSecurityNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 17)).setObjects(("Lannet-Trapsv2-MIB", "lntAccountLockoutEvent"), ("Lannet-Trapsv2-MIB", "lntMACSecurityEvent"), ("Lannet-Trapsv2-MIB", "lntUnAuthAccessEvent"), ("Lannet-Trapsv2-MIB", "lntUnknownHostCopyEvent"), ("Lannet-Trapsv2-MIB", "lntLicenseStartupValidationFlt"), ("Lannet-Trapsv2-MIB", "lntLicenseDownloadValidationFlt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntSecurityNotificationGroup = lntSecurityNotificationGroup.setStatus('current')
lntWanNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 81, 38, 10007, 18)).setObjects(("Lannet-Trapsv2-MIB", "lntWanPhysicalAlarmOn"), ("Lannet-Trapsv2-MIB", "lntWanPhysicalAlarmOff"), ("Lannet-Trapsv2-MIB", "lntWanLocalAlarmOn"), ("Lannet-Trapsv2-MIB", "lntWanLocalAlarmOff"), ("Lannet-Trapsv2-MIB", "lntWanRemoteAlarmOn"), ("Lannet-Trapsv2-MIB", "lntWanRemoteAlarmOff"), ("Lannet-Trapsv2-MIB", "lntWanMinorAlarmOn"), ("Lannet-Trapsv2-MIB", "lntWanMinorAlarmOff"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntWanNotificationGroup = lntWanNotificationGroup.setStatus('current')
lntNotificationAgentCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 81, 38, 10008))
lntP330L3NotificationAgentCapabilities = AgentCapabilities((1, 3, 6, 1, 4, 1, 81, 38, 10008, 1))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntP330L3NotificationAgentCapabilities = lntP330L3NotificationAgentCapabilities.setProductRelease('')
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntP330L3NotificationAgentCapabilities = lntP330L3NotificationAgentCapabilities.setStatus('current')
lntP330L2NotificationAgentCapabilities = AgentCapabilities((1, 3, 6, 1, 4, 1, 81, 38, 10008, 2))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntP330L2NotificationAgentCapabilities = lntP330L2NotificationAgentCapabilities.setProductRelease('')
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntP330L2NotificationAgentCapabilities = lntP330L2NotificationAgentCapabilities.setStatus('current')
lntP130TrapAgentCapabilities = AgentCapabilities((1, 3, 6, 1, 4, 1, 81, 38, 10008, 3))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntP130TrapAgentCapabilities = lntP130TrapAgentCapabilities.setProductRelease('')
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntP130TrapAgentCapabilities = lntP130TrapAgentCapabilities.setStatus('current')
lntP330MLNotificationAgentCapabilities = AgentCapabilities((1, 3, 6, 1, 4, 1, 81, 38, 10008, 4))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntP330MLNotificationAgentCapabilities = lntP330MLNotificationAgentCapabilities.setProductRelease('')
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntP330MLNotificationAgentCapabilities = lntP330MLNotificationAgentCapabilities.setStatus('current')
lntG350NotificationAgentCapability = AgentCapabilities((1, 3, 6, 1, 4, 1, 81, 38, 10008, 5))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntG350NotificationAgentCapability = lntG350NotificationAgentCapability.setProductRelease('')
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lntG350NotificationAgentCapability = lntG350NotificationAgentCapability.setStatus('current')
mibBuilder.exportSymbols("Lannet-Trapsv2-MIB", lntEthPortAutoNegotiationOK=lntEthPortAutoNegotiationOK, lntLAGCreateEvent=lntLAGCreateEvent, lntVPortAutoPartOK=lntVPortAutoPartOK, lntTempratureWarningPrefix=lntTempratureWarningPrefix, lntDot1xAuthFailureEvent=lntDot1xAuthFailureEvent, lntWanMinorAlarmOff=lntWanMinorAlarmOff, lntPortCAMLastChange=lntPortCAMLastChange, lntEthPortAutoNegotiationFlt=lntEthPortAutoNegotiationFlt, lntLAGEvents=lntLAGEvents, lntMainFansOK=lntMainFansOK, lntBackupFansFlt=lntBackupFansFlt, lntDot1xMaxAuthModuleNumReachedEvent=lntDot1xMaxAuthModuleNumReachedEvent, lntCascadeNotificationGroup=lntCascadeNotificationGroup, lntFansEvents=lntFansEvents, lntLAGPartialConnLostFlt=lntLAGPartialConnLostFlt, lntSCPStrictCheckingMode=lntSCPStrictCheckingMode, lntMainPSUFlt=lntMainPSUFlt, lntVPortAutoPartFlt=lntVPortAutoPartFlt, scGenPortDot1xFailureString=scGenPortDot1xFailureString, lntAccountLockoutEvent=lntAccountLockoutEvent, lntBackupPSUOk=lntBackupPSUOk, lntTraps=lntTraps, lntLicenseStartupValidationFlt=lntLicenseStartupValidationFlt, lntP130TrapAgentCapabilities=lntP130TrapAgentCapabilities, lntTempratureWarning=lntTempratureWarning, lntWanMinorAlarmOn=lntWanMinorAlarmOn, lntWanLocalAlarmOff=lntWanLocalAlarmOff, lntPortFEOk=lntPortFEOk, lntL3FaultsPrefix=lntL3FaultsPrefix, lntP330L3NotificationAgentCapabilities=lntP330L3NotificationAgentCapabilities, lntSWRedundancyEvents=lntSWRedundancyEvents, lntPolicyAccessControlViolationFlt=lntPolicyAccessControlViolationFlt, lntEthPortNotificationGroup=lntEthPortNotificationGroup, lntSoftRedNewEvent=lntSoftRedNewEvent, lntPolicyNotificationGroup=lntPolicyNotificationGroup, lntPSUPrefix=lntPSUPrefix, lntLicenseDownloadValidationFlt=lntLicenseDownloadValidationFlt, lntSecurityNotificationGroup=lntSecurityNotificationGroup, lntLinkEventsPrefix=lntLinkEventsPrefix, lntCascadDownConnOk=lntCascadDownConnOk, lntPolicyEvents=lntPolicyEvents, lntWanRemoteAlarmOff=lntWanRemoteAlarmOff, lntPortInlinePowerFlt=lntPortInlinePowerFlt, lntSoftRedDelEvent=lntSoftRedDelEvent, lntPortLinkDownEvent=lntPortLinkDownEvent, lntLinkDownNotificationGroup=lntLinkDownNotificationGroup, lntLAGPartialConnLostOk=lntLAGPartialConnLostOk, lntDot1xMaxAuthRateReachedEvent=lntDot1xMaxAuthRateReachedEvent, lntMainFansFlt=lntMainFansFlt, lntConfigChangeNotificationGroup=lntConfigChangeNotificationGroup, lntCAMChangePrefix=lntCAMChangePrefix, lntEthVPortAutoNegotiationOK=lntEthVPortAutoNegotiationOK, lntWanEvents=lntWanEvents, lntBackupPSUFlt=lntBackupPSUFlt, lntCascadDownConnFlt=lntCascadDownConnFlt, lntConfigChangeOID=lntConfigChangeOID, lntLAGAutoNegFlt=lntLAGAutoNegFlt, lntSecurityEvents=lntSecurityEvents, lntUnauthProtocol=lntUnauthProtocol, lntUnauthUserName=lntUnauthUserName, lntLAGDeleteEvent=lntLAGDeleteEvent, lntLAGConnLostFlt=lntLAGConnLostFlt, lntWanPhysicalAlarmOn=lntWanPhysicalAlarmOn, lntUnAuthAccessEvent=lntUnAuthAccessEvent, lntBackupFansOK=lntBackupFansOK, lntPortAutoPartFlt=lntPortAutoPartFlt, lntNotificationVarbinds=lntNotificationVarbinds, lntL3Events=lntL3Events, lntVPortFEOk=lntVPortFEOk, lntWanNotificationGroup=lntWanNotificationGroup, lntLAGConnLostOk=lntLAGConnLostOk, lntEthPortFaultEvents=lntEthPortFaultEvents, lntSWRedundancyNotificationGroup=lntSWRedundancyNotificationGroup, lntPortLinkUpEvent=lntPortLinkUpEvent, lntVPortFEFlt=lntVPortFEFlt, lntCascadeEvents=lntCascadeEvents, lntWanPhysicalAlarmOff=lntWanPhysicalAlarmOff, lntMACSecurityEvent=lntMACSecurityEvent, lntVPortLinkUpEvent=lntVPortLinkUpEvent, lntConfigChangeValue=lntConfigChangeValue, lntPortFEFlt=lntPortFEFlt, lntStackMasterReelection=lntStackMasterReelection, lntCAMChangeEvents=lntCAMChangeEvents, lntDuplicateIPFlt=lntDuplicateIPFlt, lntP330L2NotificationAgentCapabilities=lntP330L2NotificationAgentCapabilities, lntConfigChangeVarbinds=lntConfigChangeVarbinds, lntNotificationGroups=lntNotificationGroups, lntTempratureEvents=lntTempratureEvents, lntDot1xMaxAuthPortNumReachedEvent=lntDot1xMaxAuthPortNumReachedEvent, lntPSUFaultNotificationGroup=lntPSUFaultNotificationGroup, lntTempratureNotificationGroup=lntTempratureNotificationGroup, lntLagNotificationGroup=lntLagNotificationGroup, lntCAMNotificationGroup=lntCAMNotificationGroup, lntPSUEvents=lntPSUEvents, lntVPortLinkDownEvent=lntVPortLinkDownEvent, lntPolicyAccessControlListLvlRuleTrap=lntPolicyAccessControlListLvlRuleTrap, lntWanLocalAlarmOn=lntWanLocalAlarmOn, lntLicenseErrorCodes=lntLicenseErrorCodes, lntSecurityPrefix=lntSecurityPrefix, lntWanPrefix=lntWanPrefix, lntFansNotificationGroup=lntFansNotificationGroup, lntTempratureOk=lntTempratureOk, lntPortAutoPartOk=lntPortAutoPartOk, lntCascadeFaultsPrefix=lntCascadeFaultsPrefix, lntUnknownHostCopyEvent=lntUnknownHostCopyEvent, lntConfigChangeEvent=lntConfigChangeEvent, lntVLANViolationEvent=lntVLANViolationEvent, lntLinkEvents=lntLinkEvents, lntConfigChangePrefix=lntConfigChangePrefix, lntNotificationAgentCapabilities=lntNotificationAgentCapabilities, lntCascadUpConnOk=lntCascadUpConnOk, lntCascadUpConnFlt=lntCascadUpConnFlt, lntFansPrefix=lntFansPrefix, lntPolicyChangeEvent=lntPolicyChangeEvent, lntG350NotificationAgentCapability=lntG350NotificationAgentCapability, lntSWRedundancyPrefix=lntSWRedundancyPrefix, lntPortInlinePowerOK=lntPortInlinePowerOK, lntEthPortFaultPrefix=lntEthPortFaultPrefix, lntLAGPrefix=lntLAGPrefix, PYSNMP_MODULE_ID=lntTraps, lntConfigChangeEvents=lntConfigChangeEvents, lntARPViolationEvent=lntARPViolationEvent, lntL3FaultNotificationGroup=lntL3FaultNotificationGroup, lntUnauthIpAddress=lntUnauthIpAddress, lntEthVPortAutoNegotiationFlt=lntEthVPortAutoNegotiationFlt, lntLAGAutoNegOk=lntLAGAutoNegOk, lntMainPSUOk=lntMainPSUOk, lntP330MLNotificationAgentCapabilities=lntP330MLNotificationAgentCapabilities, lntPolicyPrefix=lntPolicyPrefix, lntWanRemoteAlarmOn=lntWanRemoteAlarmOn)
