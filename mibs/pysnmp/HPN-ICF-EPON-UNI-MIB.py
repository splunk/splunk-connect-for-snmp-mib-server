#
# PySNMP MIB module HPN-ICF-EPON-UNI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-EPON-UNI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hpnicfEpon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfEpon")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, ModuleIdentity, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, MibIdentifier, Integer32, NotificationType, IpAddress, TimeTicks, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "MibIdentifier", "Integer32", "NotificationType", "IpAddress", "TimeTicks", "Counter32", "Unsigned32")
DisplayString, RowStatus, TextualConvention, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue", "MacAddress")
hpnicfEponUni = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5))
if mibBuilder.loadTexts: hpnicfEponUni.setLastUpdated('200807281743Z')
if mibBuilder.loadTexts: hpnicfEponUni.setOrganization('')
hpnicfEponUniSysMan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1))
hpnicfEponUniSysManTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1), )
if mibBuilder.loadTexts: hpnicfEponUniSysManTable.setStatus('current')
hpnicfEponUniSysManEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"))
if mibBuilder.loadTexts: hpnicfEponUniSysManEntry.setStatus('current')
hpnicfEponUniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponUniIndex.setStatus('current')
hpnicfEponUniDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniDescr.setStatus('current')
hpnicfEponUniAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniAdminStatus.setStatus('current')
hpnicfEponUniMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mdi-ii", 1), ("mdi-x", 2), ("mdi-auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniMdi.setStatus('current')
hpnicfEponUniPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPriority.setStatus('current')
hpnicfEponUniVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("vlantrunk", 1), ("access", 2), ("hybrid", 3), ("untagged", 4), ("transparent", 5), ("doubletagged", 6), ("tag", 7), ("translation", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniVlanType.setStatus('current')
hpnicfEponUniAccessVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniAccessVlan.setStatus('current')
hpnicfEponUniTrunkPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniTrunkPvid.setStatus('current')
hpnicfEponUniVLANTrunkAllowListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniVLANTrunkAllowListLow.setStatus('current')
hpnicfEponUniVLANTrunkAllowListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniVLANTrunkAllowListHigh.setStatus('current')
hpnicfEponUniInboundLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniInboundLineRate.setStatus('current')
hpnicfEponUniOutboundLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniOutboundLineRate.setStatus('current')
hpnicfEponUniFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniFlowControl.setStatus('current')
hpnicfEponUniSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 10, 100, 1000, 10000, 24000))).clone(namedValues=NamedValues(("auto", 0), ("s10M", 10), ("s100M", 100), ("s1000M", 1000), ("s10000M", 10000), ("s24000M", 24000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniSpeed.setStatus('current')
hpnicfEponUniDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniDuplex.setStatus('current')
hpnicfEponUniVlanVPNStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniVlanVPNStatus.setStatus('current')
hpnicfEponUniCountReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniCountReset.setStatus('current')
hpnicfEponUniPortIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortIsolate.setStatus('current')
hpnicfEponUniVlanConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniVlanConfiguration.setStatus('current')
hpnicfEponUniAutoNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniAutoNegotiation.setStatus('current')
hpnicfEponUniRestartAutoNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("autoNegotiation", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniRestartAutoNeg.setStatus('current')
hpnicfEponUniLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniLinkStatus.setStatus('current')
hpnicfEponUniInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("gigabitethernetport", 1), ("fastethernetport", 2), ("voipport", 3), ("e1port", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInterfaceType.setStatus('current')
hpnicfEponUniVitualCableTest = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniVitualCableTest.setStatus('current')
hpnicfEponUniVCTCableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("abnormal", 2), ("abnormalOpen", 3), ("abnormalShort", 4), ("failure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniVCTCableStatus.setStatus('current')
hpnicfEponUniVCTCableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniVCTCableLength.setStatus('current')
hpnicfEponUniVCTImpedanceMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("not-support", 1), ("true", 2), ("false", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniVCTImpedanceMismatch.setStatus('current')
hpnicfEponUniVCTPairSkew = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniVCTPairSkew.setStatus('current')
hpnicfEponUniVCTPairSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupport", 1), ("true", 2), ("false", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniVCTPairSwap.setStatus('current')
hpnicfEponUniVCTPolaritySwap = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupport", 1), ("true", 2), ("false", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniVCTPolaritySwap.setStatus('current')
hpnicfEponUniVCTInsertionLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniVCTInsertionLoss.setStatus('current')
hpnicfEponUniVCTReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniVCTReturnLoss.setStatus('current')
hpnicfEponUniVCTNearendCrosstalk = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniVCTNearendCrosstalk.setStatus('current')
hpnicfEponUniVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 1, 1, 41), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponUniVlan.setStatus('current')
hpnicfEponUniCountTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2), )
if mibBuilder.loadTexts: hpnicfEponUniCountTable.setStatus('current')
hpnicfEponUniCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"))
if mibBuilder.loadTexts: hpnicfEponUniCountEntry.setStatus('current')
hpnicfEponUniInStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInStatsPkts.setStatus('current')
hpnicfEponUniInStatsUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInStatsUnicastPkts.setStatus('current')
hpnicfEponUniInStatsBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInStatsBroadcastPkts.setStatus('current')
hpnicfEponUniInStatsMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInStatsMulticastPkts.setStatus('current')
hpnicfEponUniInPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInPausePkts.setStatus('current')
hpnicfEponUniInTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInTotalErrors.setStatus('current')
hpnicfEponUniInStatsCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInStatsCRCAlignErrors.setStatus('current')
hpnicfEponUniInStatsUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInStatsUndersizePkts.setStatus('current')
hpnicfEponUniInStatsOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInStatsOversizePkts.setStatus('current')
hpnicfEponUniInErrorbyOther = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniInErrorbyOther.setStatus('current')
hpnicfEponUniOutStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutStatsPkts.setStatus('current')
hpnicfEponUniOutStatsUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutStatsUnicastPkts.setStatus('current')
hpnicfEponUniOutStatsBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutStatsBroadcastPkts.setStatus('current')
hpnicfEponUniOutStatsMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutStatsMulticastPkts.setStatus('current')
hpnicfEponUniOutStatsPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutStatsPausePkts.setStatus('current')
hpnicfEponUniOutTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutTotalErrors.setStatus('current')
hpnicfEponUniOutStatsCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutStatsCollisions.setStatus('current')
hpnicfEponUniOutDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutDelayExceededDiscards.setStatus('current')
hpnicfEponUniOutErrorbyOther = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutErrorbyOther.setStatus('current')
hpnicfEponUniOutDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 2, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniOutDroppedFrames.setStatus('current')
hpnicfEponUniIgmpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 3), )
if mibBuilder.loadTexts: hpnicfEponUniIgmpInfoTable.setStatus('current')
hpnicfEponUniIgmpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniMacIndex"))
if mibBuilder.loadTexts: hpnicfEponUniIgmpInfoEntry.setStatus('current')
hpnicfEponUniMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfEponUniMacIndex.setStatus('current')
hpnicfEponUniIgmpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniIgmpMacAddress.setStatus('current')
hpnicfEponUniIgmpVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniIgmpVlanId.setStatus('current')
hpnicfEponUniParaMan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 4))
hpnicfEponUniLineRateMax = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniLineRateMax.setStatus('current')
hpnicfEponUniLineRateStep = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniLineRateStep.setStatus('current')
hpnicfEponUniNumberOnOnu = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniNumberOnOnu.setStatus('current')
hpnicfEponUniScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 5))
hpnicfEponUniPortPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6), )
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyTable.setStatus('current')
hpnicfEponUniPortPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"))
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyEntry.setStatus('current')
hpnicfEponUniPortPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyStatus.setStatus('current')
hpnicfEponUniPortPolicyCir = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1, 2), Integer32().clone(102400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyCir.setStatus('current')
hpnicfEponUniPortPolicyBucketDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyBucketDepth.setStatus('current')
hpnicfEponUniPortPolicyExtraBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyExtraBurst.setStatus('current')
hpnicfEponUniPortPolicyInboundCir = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyInboundCir.setStatus('current')
hpnicfEponUniPortPolicyInboundBucketDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyInboundBucketDepth.setStatus('current')
hpnicfEponUniPortPolicyInboundExtraBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyInboundExtraBurst.setStatus('current')
hpnicfEponUniPortPolicyOutboundCir = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyOutboundCir.setStatus('current')
hpnicfEponUniPortPolicyOutboundPir = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 6, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniPortPolicyOutboundPir.setStatus('current')
hpnicfEponUniMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 7), )
if mibBuilder.loadTexts: hpnicfEponUniMulticastTable.setStatus('current')
hpnicfEponUniMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"))
if mibBuilder.loadTexts: hpnicfEponUniMulticastEntry.setStatus('current')
hpnicfEponUniMulticastGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 7, 1, 1), Integer32().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniMulticastGroupNumber.setStatus('current')
hpnicfEponUniMulticastVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniMulticastVlanList.setStatus('current')
hpnicfEponUniMulticastStripStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniMulticastStripStatus.setStatus('current')
hpnicfEponUniMulticastFastleave = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 7, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniMulticastFastleave.setStatus('current')
hpnicfEponUniTechAbilityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 8), )
if mibBuilder.loadTexts: hpnicfEponUniTechAbilityTable.setStatus('current')
hpnicfEponUniTechAbilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"))
if mibBuilder.loadTexts: hpnicfEponUniTechAbilityEntry.setStatus('current')
hpnicfEponUniLocalTechAbility = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniLocalTechAbility.setStatus('current')
hpnicfEponUniAdvertisedTechAbility = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniAdvertisedTechAbility.setStatus('current')
hpnicfEponUniMulticastControlTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9), )
if mibBuilder.loadTexts: hpnicfEponUniMulticastControlTable.setStatus('current')
hpnicfEponUniMulticastControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniMulticastIndex"))
if mibBuilder.loadTexts: hpnicfEponUniMulticastControlEntry.setStatus('current')
hpnicfEponUniMulticastVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastVlanIndex.setStatus('current')
hpnicfEponUniMulticastAddressList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastAddressList.setStatus('current')
hpnicfEponUniMulticastAccessRule = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2), ("preview", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastAccessRule.setStatus('current')
hpnicfEponUniMulticastChannelLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastChannelLimit.setStatus('current')
hpnicfEponUniMulticastPreTimeSlice = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastPreTimeSlice.setStatus('current')
hpnicfEponUniMulticastPreTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastPreTimes.setStatus('current')
hpnicfEponUniMulticastPreInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastPreInterval.setStatus('current')
hpnicfEponUniMulticastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastRowStatus.setStatus('current')
hpnicfEponUniMulticastIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 9), Integer32())
if mibBuilder.loadTexts: hpnicfEponUniMulticastIndex.setStatus('current')
hpnicfEponUniMulticastSourceIpList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastSourceIpList.setStatus('current')
hpnicfEponUniMulticastResetInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 9, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMulticastResetInterval.setStatus('current')
hpnicfEponUniQosIndexNextTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 10), )
if mibBuilder.loadTexts: hpnicfEponUniQosIndexNextTable.setStatus('current')
hpnicfEponUniQosIndexNextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"))
if mibBuilder.loadTexts: hpnicfEponUniQosIndexNextEntry.setStatus('current')
hpnicfEponUniQosConfIndexNext = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniQosConfIndexNext.setStatus('current')
hpnicfEponUniQosConfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 11), )
if mibBuilder.loadTexts: hpnicfEponUniQosConfTable.setStatus('current')
hpnicfEponUniQosConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniQosConfIndex"))
if mibBuilder.loadTexts: hpnicfEponUniQosConfEntry.setStatus('current')
hpnicfEponUniQosConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfEponUniQosConfIndex.setStatus('current')
hpnicfEponUniQosConfRuleIndexNext = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniQosConfRuleIndexNext.setStatus('current')
hpnicfEponUniQosConfMappedQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 11, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniQosConfMappedQueue.setStatus('current')
hpnicfEponUniQosConfMarkedPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 11, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniQosConfMarkedPriority.setStatus('current')
hpnicfEponUniQosConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 11, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniQosConfRowStatus.setStatus('current')
hpnicfEponUniQosRuleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 12), )
if mibBuilder.loadTexts: hpnicfEponUniQosRuleTable.setStatus('current')
hpnicfEponUniQosRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniQosConfIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniQosRuleIndex"))
if mibBuilder.loadTexts: hpnicfEponUniQosRuleEntry.setStatus('current')
hpnicfEponUniQosRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hpnicfEponUniQosRuleIndex.setStatus('current')
hpnicfEponUniQosRuleSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("dstmac", 1), ("srcmac", 2), ("ethernetpriority", 3), ("vlanid", 4), ("ethernettype", 5), ("dstip", 6), ("srcip", 7), ("ipprototype", 8), ("ipv4tosdscp", 9), ("ipv6precedence", 10), ("srcport", 11), ("dstport", 12)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniQosRuleSelector.setStatus('current')
hpnicfEponUniQosRuleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 12, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniQosRuleValue.setStatus('current')
hpnicfEponUniQosRuleMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 12, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniQosRuleMacAddress.setStatus('current')
hpnicfEponUniQosRuleOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("nevermatch", 1), ("equal", 2), ("notequal", 3), ("lessthanequal", 4), ("greaterthanequal", 5), ("fieldexist", 6), ("fieldnotexist", 7), ("alwaysmatch", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniQosRuleOperator.setStatus('current')
hpnicfEponUniQosRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 12, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniQosRuleRowStatus.setStatus('current')
hpnicfEponUniMirrorGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 13), )
if mibBuilder.loadTexts: hpnicfEponUniMirrorGroupTable.setStatus('current')
hpnicfEponUniMirrorGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 13, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniMirrorGroupID"))
if mibBuilder.loadTexts: hpnicfEponUniMirrorGroupEntry.setStatus('current')
hpnicfEponUniMirrorGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 13, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfEponUniMirrorGroupID.setStatus('current')
hpnicfEponUniMirrorInboundPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 13, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponUniMirrorInboundPortList.setStatus('current')
hpnicfEponUniMirrorOutboundPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 13, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMirrorOutboundPortList.setStatus('current')
hpnicfEponUniMonitorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 13, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMonitorPort.setStatus('current')
hpnicfEponUniMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 13, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponUniMirrorRowStatus.setStatus('current')
hpnicfEponUniMirrorGroupIdNextTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 14), )
if mibBuilder.loadTexts: hpnicfEponUniMirrorGroupIdNextTable.setStatus('current')
hpnicfEponUniMirrorGroupIdNextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 14, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfEponUniMirrorGroupIdNextEntry.setStatus('current')
hpnicfEponUniMirrorGroupIDNext = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniMirrorGroupIDNext.setStatus('current')
hpnicfEponUniMulticastCtrlInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 15), )
if mibBuilder.loadTexts: hpnicfEponUniMulticastCtrlInfoTable.setStatus('current')
hpnicfEponUniMulticastCtrlInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 15, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniMultActVlan"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniMultActAddress"))
if mibBuilder.loadTexts: hpnicfEponUniMulticastCtrlInfoEntry.setStatus('current')
hpnicfEponUniMultActVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 15, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfEponUniMultActVlan.setStatus('current')
hpnicfEponUniMultActAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 15, 1, 2), IpAddress())
if mibBuilder.loadTexts: hpnicfEponUniMultActAddress.setStatus('current')
hpnicfEponUniMultActAccessRule = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2), ("preview", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniMultActAccessRule.setStatus('current')
hpnicfEponUniMultActPreTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniMultActPreTimes.setStatus('current')
hpnicfEponUniMultActPreRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 15, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniMultActPreRemain.setStatus('current')
hpnicfEponUniMulticastIndexNextTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 16), )
if mibBuilder.loadTexts: hpnicfEponUniMulticastIndexNextTable.setStatus('current')
hpnicfEponUniMulticastIndexNextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 16, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"))
if mibBuilder.loadTexts: hpnicfEponUniMulticastIndexNextEntry.setStatus('current')
hpnicfEponUniMulticastConfIndexNext = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 1, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponUniMulticastConfIndexNext.setStatus('current')
hpnicfEponUniTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 2))
hpnicfEponUniTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 2, 0))
hpnicfEponUniLinkUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 2, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniDescr"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniAdminStatus"))
if mibBuilder.loadTexts: hpnicfEponUniLinkUpTrap.setStatus('current')
hpnicfEponUniLinkDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 2, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniDescr"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniAdminStatus"))
if mibBuilder.loadTexts: hpnicfEponUniLinkDownTrap.setStatus('current')
hpnicfEponUniLoopBackDetectedTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 2, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniDescr"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniVlan"))
if mibBuilder.loadTexts: hpnicfEponUniLoopBackDetectedTrap.setStatus('current')
hpnicfEponUniLoopBackRecoveredTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 5, 2, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniIndex"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniDescr"), ("HPN-ICF-EPON-UNI-MIB", "hpnicfEponUniVlan"))
if mibBuilder.loadTexts: hpnicfEponUniLoopBackRecoveredTrap.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-EPON-UNI-MIB", hpnicfEponUniVCTInsertionLoss=hpnicfEponUniVCTInsertionLoss, hpnicfEponUniQosConfEntry=hpnicfEponUniQosConfEntry, hpnicfEponUniQosConfTable=hpnicfEponUniQosConfTable, hpnicfEponUniCountEntry=hpnicfEponUniCountEntry, hpnicfEponUniInStatsBroadcastPkts=hpnicfEponUniInStatsBroadcastPkts, hpnicfEponUniPortPolicyInboundExtraBurst=hpnicfEponUniPortPolicyInboundExtraBurst, hpnicfEponUniVLANTrunkAllowListLow=hpnicfEponUniVLANTrunkAllowListLow, hpnicfEponUniInboundLineRate=hpnicfEponUniInboundLineRate, hpnicfEponUniPortPolicyInboundCir=hpnicfEponUniPortPolicyInboundCir, hpnicfEponUniPortPolicyOutboundCir=hpnicfEponUniPortPolicyOutboundCir, hpnicfEponUniVCTCableLength=hpnicfEponUniVCTCableLength, hpnicfEponUniQosConfMappedQueue=hpnicfEponUniQosConfMappedQueue, hpnicfEponUniVCTNearendCrosstalk=hpnicfEponUniVCTNearendCrosstalk, hpnicfEponUniDuplex=hpnicfEponUniDuplex, hpnicfEponUniIndex=hpnicfEponUniIndex, hpnicfEponUniQosConfIndexNext=hpnicfEponUniQosConfIndexNext, hpnicfEponUniPortPolicyTable=hpnicfEponUniPortPolicyTable, hpnicfEponUniInPausePkts=hpnicfEponUniInPausePkts, hpnicfEponUniMulticastFastleave=hpnicfEponUniMulticastFastleave, hpnicfEponUniSysManTable=hpnicfEponUniSysManTable, hpnicfEponUniLinkStatus=hpnicfEponUniLinkStatus, hpnicfEponUniOutboundLineRate=hpnicfEponUniOutboundLineRate, hpnicfEponUniMultActPreRemain=hpnicfEponUniMultActPreRemain, hpnicfEponUniPortPolicyBucketDepth=hpnicfEponUniPortPolicyBucketDepth, hpnicfEponUniMulticastCtrlInfoEntry=hpnicfEponUniMulticastCtrlInfoEntry, hpnicfEponUniMultActPreTimes=hpnicfEponUniMultActPreTimes, hpnicfEponUniQosRuleMacAddress=hpnicfEponUniQosRuleMacAddress, hpnicfEponUniVlanConfiguration=hpnicfEponUniVlanConfiguration, hpnicfEponUniMirrorGroupEntry=hpnicfEponUniMirrorGroupEntry, hpnicfEponUniMulticastVlanList=hpnicfEponUniMulticastVlanList, hpnicfEponUniVCTPolaritySwap=hpnicfEponUniVCTPolaritySwap, hpnicfEponUniMirrorGroupIdNextTable=hpnicfEponUniMirrorGroupIdNextTable, hpnicfEponUniQosConfMarkedPriority=hpnicfEponUniQosConfMarkedPriority, hpnicfEponUniSysMan=hpnicfEponUniSysMan, hpnicfEponUniIgmpMacAddress=hpnicfEponUniIgmpMacAddress, hpnicfEponUniPortPolicyStatus=hpnicfEponUniPortPolicyStatus, hpnicfEponUniCountReset=hpnicfEponUniCountReset, hpnicfEponUniPortPolicyOutboundPir=hpnicfEponUniPortPolicyOutboundPir, hpnicfEponUniVlanVPNStatus=hpnicfEponUniVlanVPNStatus, hpnicfEponUniVCTImpedanceMismatch=hpnicfEponUniVCTImpedanceMismatch, hpnicfEponUniMulticastPreInterval=hpnicfEponUniMulticastPreInterval, hpnicfEponUniMulticastResetInterval=hpnicfEponUniMulticastResetInterval, hpnicfEponUniInErrorbyOther=hpnicfEponUniInErrorbyOther, hpnicfEponUniPortPolicyEntry=hpnicfEponUniPortPolicyEntry, hpnicfEponUniLocalTechAbility=hpnicfEponUniLocalTechAbility, hpnicfEponUniAutoNegotiation=hpnicfEponUniAutoNegotiation, hpnicfEponUniMulticastVlanIndex=hpnicfEponUniMulticastVlanIndex, hpnicfEponUniQosRuleOperator=hpnicfEponUniQosRuleOperator, hpnicfEponUniInStatsPkts=hpnicfEponUniInStatsPkts, hpnicfEponUniOutStatsMulticastPkts=hpnicfEponUniOutStatsMulticastPkts, hpnicfEponUniVlanType=hpnicfEponUniVlanType, hpnicfEponUniVCTReturnLoss=hpnicfEponUniVCTReturnLoss, hpnicfEponUniPortPolicyCir=hpnicfEponUniPortPolicyCir, hpnicfEponUniVLANTrunkAllowListHigh=hpnicfEponUniVLANTrunkAllowListHigh, hpnicfEponUniQosRuleRowStatus=hpnicfEponUniQosRuleRowStatus, hpnicfEponUniMultActAccessRule=hpnicfEponUniMultActAccessRule, hpnicfEponUniMonitorPort=hpnicfEponUniMonitorPort, hpnicfEponUniLinkUpTrap=hpnicfEponUniLinkUpTrap, hpnicfEponUniQosConfRowStatus=hpnicfEponUniQosConfRowStatus, hpnicfEponUniMdi=hpnicfEponUniMdi, hpnicfEponUniTechAbilityTable=hpnicfEponUniTechAbilityTable, hpnicfEponUniIgmpInfoEntry=hpnicfEponUniIgmpInfoEntry, hpnicfEponUniMulticastIndexNextEntry=hpnicfEponUniMulticastIndexNextEntry, hpnicfEponUniLinkDownTrap=hpnicfEponUniLinkDownTrap, hpnicfEponUniOutErrorbyOther=hpnicfEponUniOutErrorbyOther, hpnicfEponUniQosConfIndex=hpnicfEponUniQosConfIndex, hpnicfEponUniQosRuleIndex=hpnicfEponUniQosRuleIndex, hpnicfEponUniPortIsolate=hpnicfEponUniPortIsolate, hpnicfEponUniRestartAutoNeg=hpnicfEponUniRestartAutoNeg, hpnicfEponUniMulticastEntry=hpnicfEponUniMulticastEntry, hpnicfEponUniMultActVlan=hpnicfEponUniMultActVlan, hpnicfEponUniQosRuleSelector=hpnicfEponUniQosRuleSelector, hpnicfEponUniMulticastIndexNextTable=hpnicfEponUniMulticastIndexNextTable, hpnicfEponUniAccessVlan=hpnicfEponUniAccessVlan, hpnicfEponUniAdminStatus=hpnicfEponUniAdminStatus, hpnicfEponUniAdvertisedTechAbility=hpnicfEponUniAdvertisedTechAbility, hpnicfEponUniMirrorGroupIdNextEntry=hpnicfEponUniMirrorGroupIdNextEntry, hpnicfEponUniMulticastPreTimes=hpnicfEponUniMulticastPreTimes, hpnicfEponUniLoopBackDetectedTrap=hpnicfEponUniLoopBackDetectedTrap, hpnicfEponUniMirrorGroupID=hpnicfEponUniMirrorGroupID, hpnicfEponUniMultActAddress=hpnicfEponUniMultActAddress, hpnicfEponUniTrunkPvid=hpnicfEponUniTrunkPvid, hpnicfEponUniInterfaceType=hpnicfEponUniInterfaceType, hpnicfEponUniMulticastAddressList=hpnicfEponUniMulticastAddressList, hpnicfEponUniMirrorGroupIDNext=hpnicfEponUniMirrorGroupIDNext, hpnicfEponUniPriority=hpnicfEponUniPriority, hpnicfEponUniMulticastPreTimeSlice=hpnicfEponUniMulticastPreTimeSlice, hpnicfEponUniScalarGroup=hpnicfEponUniScalarGroup, hpnicfEponUniSysManEntry=hpnicfEponUniSysManEntry, hpnicfEponUniTrap=hpnicfEponUniTrap, hpnicfEponUniSpeed=hpnicfEponUniSpeed, hpnicfEponUniQosRuleTable=hpnicfEponUniQosRuleTable, hpnicfEponUniQosRuleEntry=hpnicfEponUniQosRuleEntry, hpnicfEponUniQosConfRuleIndexNext=hpnicfEponUniQosConfRuleIndexNext, hpnicfEponUniVCTPairSkew=hpnicfEponUniVCTPairSkew, hpnicfEponUniMulticastChannelLimit=hpnicfEponUniMulticastChannelLimit, hpnicfEponUniLineRateMax=hpnicfEponUniLineRateMax, hpnicfEponUniInStatsMulticastPkts=hpnicfEponUniInStatsMulticastPkts, hpnicfEponUniOutTotalErrors=hpnicfEponUniOutTotalErrors, hpnicfEponUniMulticastGroupNumber=hpnicfEponUniMulticastGroupNumber, hpnicfEponUniMulticastSourceIpList=hpnicfEponUniMulticastSourceIpList, hpnicfEponUniMulticastIndex=hpnicfEponUniMulticastIndex, hpnicfEponUniPortPolicyExtraBurst=hpnicfEponUniPortPolicyExtraBurst, hpnicfEponUniMulticastCtrlInfoTable=hpnicfEponUniMulticastCtrlInfoTable, hpnicfEponUniVlan=hpnicfEponUniVlan, hpnicfEponUniLoopBackRecoveredTrap=hpnicfEponUniLoopBackRecoveredTrap, hpnicfEponUniOutDroppedFrames=hpnicfEponUniOutDroppedFrames, hpnicfEponUniInTotalErrors=hpnicfEponUniInTotalErrors, hpnicfEponUniMirrorInboundPortList=hpnicfEponUniMirrorInboundPortList, hpnicfEponUni=hpnicfEponUni, hpnicfEponUniMulticastControlEntry=hpnicfEponUniMulticastControlEntry, hpnicfEponUniLineRateStep=hpnicfEponUniLineRateStep, hpnicfEponUniMulticastTable=hpnicfEponUniMulticastTable, hpnicfEponUniMacIndex=hpnicfEponUniMacIndex, hpnicfEponUniQosIndexNextEntry=hpnicfEponUniQosIndexNextEntry, hpnicfEponUniNumberOnOnu=hpnicfEponUniNumberOnOnu, PYSNMP_MODULE_ID=hpnicfEponUni, hpnicfEponUniMirrorGroupTable=hpnicfEponUniMirrorGroupTable, hpnicfEponUniParaMan=hpnicfEponUniParaMan, hpnicfEponUniTechAbilityEntry=hpnicfEponUniTechAbilityEntry, hpnicfEponUniInStatsUnicastPkts=hpnicfEponUniInStatsUnicastPkts, hpnicfEponUniInStatsCRCAlignErrors=hpnicfEponUniInStatsCRCAlignErrors, hpnicfEponUniMulticastAccessRule=hpnicfEponUniMulticastAccessRule, hpnicfEponUniQosRuleValue=hpnicfEponUniQosRuleValue, hpnicfEponUniInStatsOversizePkts=hpnicfEponUniInStatsOversizePkts, hpnicfEponUniOutStatsCollisions=hpnicfEponUniOutStatsCollisions, hpnicfEponUniDescr=hpnicfEponUniDescr, hpnicfEponUniOutStatsUnicastPkts=hpnicfEponUniOutStatsUnicastPkts, hpnicfEponUniOutStatsPausePkts=hpnicfEponUniOutStatsPausePkts, hpnicfEponUniFlowControl=hpnicfEponUniFlowControl, hpnicfEponUniVCTPairSwap=hpnicfEponUniVCTPairSwap, hpnicfEponUniMirrorOutboundPortList=hpnicfEponUniMirrorOutboundPortList, hpnicfEponUniTrapPrefix=hpnicfEponUniTrapPrefix, hpnicfEponUniQosIndexNextTable=hpnicfEponUniQosIndexNextTable, hpnicfEponUniPortPolicyInboundBucketDepth=hpnicfEponUniPortPolicyInboundBucketDepth, hpnicfEponUniVCTCableStatus=hpnicfEponUniVCTCableStatus, hpnicfEponUniVitualCableTest=hpnicfEponUniVitualCableTest, hpnicfEponUniMulticastRowStatus=hpnicfEponUniMulticastRowStatus, hpnicfEponUniMulticastConfIndexNext=hpnicfEponUniMulticastConfIndexNext, hpnicfEponUniMulticastControlTable=hpnicfEponUniMulticastControlTable, hpnicfEponUniIgmpInfoTable=hpnicfEponUniIgmpInfoTable, hpnicfEponUniMirrorRowStatus=hpnicfEponUniMirrorRowStatus, hpnicfEponUniOutStatsBroadcastPkts=hpnicfEponUniOutStatsBroadcastPkts, hpnicfEponUniOutDelayExceededDiscards=hpnicfEponUniOutDelayExceededDiscards, hpnicfEponUniIgmpVlanId=hpnicfEponUniIgmpVlanId, hpnicfEponUniInStatsUndersizePkts=hpnicfEponUniInStatsUndersizePkts, hpnicfEponUniOutStatsPkts=hpnicfEponUniOutStatsPkts, hpnicfEponUniCountTable=hpnicfEponUniCountTable, hpnicfEponUniMulticastStripStatus=hpnicfEponUniMulticastStripStatus)
