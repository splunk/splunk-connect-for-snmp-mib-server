#
# PySNMP MIB module HiplexAF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HiplexAF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:38:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Bits, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, enterprises, TimeTicks, ObjectIdentity, Integer32, MibIdentifier, Unsigned32, Gauge32, Counter64, iso, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "enterprises", "TimeTicks", "ObjectIdentity", "Integer32", "MibIdentifier", "Unsigned32", "Gauge32", "Counter64", "iso", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sni = MibIdentifier((1, 3, 6, 1, 4, 1, 231))
sniProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2))
sniHiplexAF = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35))
hiplexAFObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 1))
hiplexAFGlobalData = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 1))
hiplexAFHostInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2))
hiplexAFSWUInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3))
hiplexAFSWUHostParamInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 4))
hiplexAFSWUHostFEPInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 5))
hiplexAFSWUVolumeInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 6))
hiplexAFSWUApplicationInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 7))
hiplexAFPubsetVolumeInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 8))
hiplexAFVersion = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFVersion.setStatus('mandatory')
hiplexAFSPVSUserid = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSPVSUserid.setStatus('mandatory')
hiplexAFSPVSCatid = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFSPVSCatid.setStatus('mandatory')
hiplexAFState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("started", 1), ("stopped", 2), ("undefined", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFState.setStatus('mandatory')
hiplexAFTermHost = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFTermHost.setStatus('mandatory')
hiplexAFHostTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFHostTabNum.setStatus('mandatory')
hiplexAFHostTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2), )
if mibBuilder.loadTexts: hiplexAFHostTable.setStatus('mandatory')
hiplexAFHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1), ).setIndexNames((0, "HiplexAF-MIB", "hiplexAFHostName"))
if mibBuilder.loadTexts: hiplexAFHostEntry.setStatus('mandatory')
hiplexAFHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFHostName.setStatus('mandatory')
hiplexAFHostEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("no-event", 1), ("termination-requested", 2), ("undefined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFHostEventId.setStatus('mandatory')
hiplexAFHostStateInd = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("working", 1), ("terminated", 2), ("undefined", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFHostStateInd.setStatus('mandatory')
hiplexAFHostOperatorRole = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFHostOperatorRole.setStatus('mandatory')
hiplexAFHostHomeCatid = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFHostHomeCatid.setStatus('mandatory')
hiplexAFHostSystemId = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFHostSystemId.setStatus('mandatory')
hiplexAFHostBS2Version = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFHostBS2Version.setStatus('mandatory')
hiplexAFHostImcatInd = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 255))).clone(namedValues=NamedValues(("check", 1), ("crash", 2), ("excat", 3), ("imcat", 4), ("mchange", 5), ("readerr", 6), ("shutdown", 7), ("wrterr", 8), ("undefined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFHostImcatInd.setStatus('mandatory')
hiplexAFHostMasterSlaveInd = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("master", 1), ("backup", 2), ("slave", 3), ("undefined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFHostMasterSlaveInd.setStatus('mandatory')
hiplexAFHostSnmpAgentStateInd = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("working", 1), ("not-working", 2), ("undefined", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFHostSnmpAgentStateInd.setStatus('mandatory')
hiplexAFSWUTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUTabNum.setStatus('mandatory')
hiplexAFSWUTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2), )
if mibBuilder.loadTexts: hiplexAFSWUTable.setStatus('mandatory')
hiplexAFSWUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1), ).setIndexNames((0, "HiplexAF-MIB", "hiplexAFSWUName"))
if mibBuilder.loadTexts: hiplexAFSWUEntry.setStatus('mandatory')
hiplexAFSWUName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUName.setStatus('mandatory')
hiplexAFSWUCreaTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUCreaTime.setStatus('mandatory')
hiplexAFSWUWorkSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFSWUWorkSystem.setStatus('mandatory')
hiplexAFSWUVirtHost = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUVirtHost.setStatus('mandatory')
hiplexAFSWUVirtHostAct = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUVirtHostAct.setStatus('mandatory')
hiplexAFSWUVirtHostDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUVirtHostDeact.setStatus('mandatory')
hiplexAFSWUFEPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUFEPNumber.setStatus('mandatory')
hiplexAFSWUPubsetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUPubsetNumber.setStatus('mandatory')
hiplexAFSWUApplicationNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 3, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUApplicationNumber.setStatus('mandatory')
hiplexAFSWUHostParamTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 4, 1), )
if mibBuilder.loadTexts: hiplexAFSWUHostParamTable.setStatus('mandatory')
hiplexAFSWUHostParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 4, 1, 1), ).setIndexNames((0, "HiplexAF-MIB", "hiplexAFSWUName"), (0, "HiplexAF-MIB", "hiplexAFHostName"))
if mibBuilder.loadTexts: hiplexAFSWUHostParamEntry.setStatus('mandatory')
hiplexAFSWUHostParamEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("no-action", 1), ("pass-over", 2), ("take-over", 3), ("terminate", 4), ("undefined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUHostParamEventId.setStatus('mandatory')
hiplexAFSWUHostParamStateInd = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("work", 1), ("standby", 2), ("crashed", 3), ("terminated", 4), ("undefined", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFSWUHostParamStateInd.setStatus('mandatory')
hiplexAFSWUHostParamPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFSWUHostParamPriority.setStatus('mandatory')
hiplexAFSWUHostParamOperatorRole = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 4, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFSWUHostParamOperatorRole.setStatus('mandatory')
hiplexAFSWUHostFEPTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUHostFEPTabNum.setStatus('mandatory')
hiplexAFSWUHostFEPTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 5, 2), )
if mibBuilder.loadTexts: hiplexAFSWUHostFEPTable.setStatus('mandatory')
hiplexAFSWUHostFEPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 5, 2, 1), ).setIndexNames((0, "HiplexAF-MIB", "hiplexAFSWUName"), (0, "HiplexAF-MIB", "hiplexAFHostName"), (0, "HiplexAF-MIB", "hiplexAFSWUHostFEPIndex"))
if mibBuilder.loadTexts: hiplexAFSWUHostFEPEntry.setStatus('mandatory')
hiplexAFSWUHostFEPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUHostFEPIndex.setStatus('mandatory')
hiplexAFSWUHostFEPName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 5, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFSWUHostFEPName.setStatus('mandatory')
hiplexAFSWUHostFEPPortnumber = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 5, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFSWUHostFEPPortnumber.setStatus('mandatory')
hiplexAFSWUVolumeTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUVolumeTabNum.setStatus('mandatory')
hiplexAFSWUVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 6, 2), )
if mibBuilder.loadTexts: hiplexAFSWUVolumeTable.setStatus('mandatory')
hiplexAFSWUVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 6, 2, 1), ).setIndexNames((0, "HiplexAF-MIB", "hiplexAFSWUName"), (0, "HiplexAF-MIB", "hiplexAFSWUVolumeName"))
if mibBuilder.loadTexts: hiplexAFSWUVolumeEntry.setStatus('mandatory')
hiplexAFSWUVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 6, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUVolumeName.setStatus('mandatory')
hiplexAFSWUVolumeTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 6, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUVolumeTypeName.setStatus('mandatory')
hiplexAFSWUVolumeType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("shared-pubset", 1), ("pubset", 2), ("private-disk", 3), ("by-user", 4), ("undefined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUVolumeType.setStatus('mandatory')
hiplexAFSWUVolumeImportProc = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 6, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUVolumeImportProc.setStatus('mandatory')
hiplexAFSWUVolumeExportProc = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 6, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUVolumeExportProc.setStatus('mandatory')
hiplexAFSWUApplicationTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUApplicationTabNum.setStatus('mandatory')
hiplexAFSWUApplicationTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 7, 2), )
if mibBuilder.loadTexts: hiplexAFSWUApplicationTable.setStatus('mandatory')
hiplexAFSWUApplicationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 7, 2, 1), ).setIndexNames((0, "HiplexAF-MIB", "hiplexAFSWUName"), (0, "HiplexAF-MIB", "hiplexAFSWUApplicationMonJVName"))
if mibBuilder.loadTexts: hiplexAFSWUApplicationEntry.setStatus('mandatory')
hiplexAFSWUApplicationMonJVName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 7, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUApplicationMonJVName.setStatus('mandatory')
hiplexAFSWUApplicationType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("job", 1), ("utm", 2), ("bcam", 3), ("by-user", 4), ("undefined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUApplicationType.setStatus('mandatory')
hiplexAFSWUApplicationStartProc = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 7, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUApplicationStartProc.setStatus('mandatory')
hiplexAFSWUApplicationStopProc = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 7, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFSWUApplicationStopProc.setStatus('mandatory')
hiplexAFTrapFilterTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 20), )
if mibBuilder.loadTexts: hiplexAFTrapFilterTable.setStatus('mandatory')
hiplexAFTrapFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 20, 1), ).setIndexNames((0, "HiplexAF-MIB", "hiplexAFTrapFilterHost1Name"), (0, "HiplexAF-MIB", "hiplexAFTrapFilterHost2Name"))
if mibBuilder.loadTexts: hiplexAFTrapFilterEntry.setStatus('mandatory')
hiplexAFTrapFilterHost1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 20, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFTrapFilterHost1Name.setStatus('mandatory')
hiplexAFTrapFilterHost2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 20, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hiplexAFTrapFilterHost2Name.setStatus('mandatory')
hiplexAFTrapFilterTrapSendInd = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 35, 1, 20, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("undefined", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hiplexAFTrapFilterTrapSendInd.setStatus('mandatory')
hiplexAFTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 35, 2))
hiplexAFStart = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 35, 2) + (0,301)).setObjects(("HiplexAF-MIB", "hiplexAFHostName"))
hiplexAFSWUStart = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 35, 2) + (0,302)).setObjects(("HiplexAF-MIB", "hiplexAFSWUHostParamStateInd"), ("HiplexAF-MIB", "hiplexAFSWUName"), ("HiplexAF-MIB", "hiplexAFHostName"))
hiplexAFStop = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 35, 2) + (0,303)).setObjects(("HiplexAF-MIB", "hiplexAFTermHost"))
hiplexAFCrash = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 35, 2) + (0,304)).setObjects(("HiplexAF-MIB", "hiplexAFHostName"))
hiplexAFSWUAppStop = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 35, 2) + (0,305)).setObjects(("HiplexAF-MIB", "hiplexAFSWUHostParamStateInd"), ("HiplexAF-MIB", "hiplexAFSWUName"), ("HiplexAF-MIB", "hiplexAFHostName"))
hiplexAFSWUAppStart = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 35, 2) + (0,306)).setObjects(("HiplexAF-MIB", "hiplexAFSWUHostParamStateInd"), ("HiplexAF-MIB", "hiplexAFSWUName"), ("HiplexAF-MIB", "hiplexAFHostName"))
hiplexAFSWUStop = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 35, 2) + (0,307)).setObjects(("HiplexAF-MIB", "hiplexAFSWUHostParamStateInd"), ("HiplexAF-MIB", "hiplexAFSWUName"), ("HiplexAF-MIB", "hiplexAFHostName"))
mibBuilder.exportSymbols("HiplexAF-MIB", hiplexAFSWUInfo=hiplexAFSWUInfo, hiplexAFTraps=hiplexAFTraps, hiplexAFSWUVolumeType=hiplexAFSWUVolumeType, hiplexAFSWUAppStop=hiplexAFSWUAppStop, hiplexAFHostSystemId=hiplexAFHostSystemId, hiplexAFSWUVolumeTabNum=hiplexAFSWUVolumeTabNum, hiplexAFSWUVolumeInfo=hiplexAFSWUVolumeInfo, hiplexAFSWUVolumeExportProc=hiplexAFSWUVolumeExportProc, hiplexAFSWUHostFEPTabNum=hiplexAFSWUHostFEPTabNum, hiplexAFHostStateInd=hiplexAFHostStateInd, hiplexAFSWUHostParamPriority=hiplexAFSWUHostParamPriority, hiplexAFSWUApplicationTable=hiplexAFSWUApplicationTable, hiplexAFSWUHostFEPName=hiplexAFSWUHostFEPName, hiplexAFSWUWorkSystem=hiplexAFSWUWorkSystem, hiplexAFSWUApplicationInfo=hiplexAFSWUApplicationInfo, hiplexAFHostTable=hiplexAFHostTable, hiplexAFSWUVolumeName=hiplexAFSWUVolumeName, hiplexAFStart=hiplexAFStart, hiplexAFSWUApplicationStopProc=hiplexAFSWUApplicationStopProc, hiplexAFHostOperatorRole=hiplexAFHostOperatorRole, hiplexAFSWUHostParamInfo=hiplexAFSWUHostParamInfo, hiplexAFSWUApplicationType=hiplexAFSWUApplicationType, hiplexAFHostName=hiplexAFHostName, sniHiplexAF=sniHiplexAF, hiplexAFSWUVolumeTable=hiplexAFSWUVolumeTable, hiplexAFSWUEntry=hiplexAFSWUEntry, hiplexAFHostSnmpAgentStateInd=hiplexAFHostSnmpAgentStateInd, hiplexAFState=hiplexAFState, hiplexAFObjects=hiplexAFObjects, hiplexAFSPVSUserid=hiplexAFSPVSUserid, sni=sni, hiplexAFSWUTabNum=hiplexAFSWUTabNum, hiplexAFHostBS2Version=hiplexAFHostBS2Version, hiplexAFSWUStop=hiplexAFSWUStop, hiplexAFSWUVolumeTypeName=hiplexAFSWUVolumeTypeName, hiplexAFTrapFilterHost2Name=hiplexAFTrapFilterHost2Name, hiplexAFSWUHostParamStateInd=hiplexAFSWUHostParamStateInd, hiplexAFSPVSCatid=hiplexAFSPVSCatid, hiplexAFSWUFEPNumber=hiplexAFSWUFEPNumber, hiplexAFSWUAppStart=hiplexAFSWUAppStart, hiplexAFHostEventId=hiplexAFHostEventId, hiplexAFSWUHostFEPEntry=hiplexAFSWUHostFEPEntry, hiplexAFSWUApplicationMonJVName=hiplexAFSWUApplicationMonJVName, sniProductMibs=sniProductMibs, hiplexAFTrapFilterTable=hiplexAFTrapFilterTable, hiplexAFPubsetVolumeInfo=hiplexAFPubsetVolumeInfo, hiplexAFSWUHostFEPInfo=hiplexAFSWUHostFEPInfo, hiplexAFVersion=hiplexAFVersion, hiplexAFHostEntry=hiplexAFHostEntry, hiplexAFCrash=hiplexAFCrash, hiplexAFSWUHostFEPIndex=hiplexAFSWUHostFEPIndex, hiplexAFHostTabNum=hiplexAFHostTabNum, hiplexAFStop=hiplexAFStop, hiplexAFHostHomeCatid=hiplexAFHostHomeCatid, hiplexAFTrapFilterTrapSendInd=hiplexAFTrapFilterTrapSendInd, hiplexAFSWUHostParamTable=hiplexAFSWUHostParamTable, hiplexAFSWUName=hiplexAFSWUName, hiplexAFHostImcatInd=hiplexAFHostImcatInd, hiplexAFSWUApplicationStartProc=hiplexAFSWUApplicationStartProc, hiplexAFSWUVolumeImportProc=hiplexAFSWUVolumeImportProc, hiplexAFSWUHostParamEventId=hiplexAFSWUHostParamEventId, hiplexAFSWUHostParamEntry=hiplexAFSWUHostParamEntry, hiplexAFSWUApplicationNumber=hiplexAFSWUApplicationNumber, hiplexAFHostInfo=hiplexAFHostInfo, hiplexAFTrapFilterHost1Name=hiplexAFTrapFilterHost1Name, hiplexAFSWUStart=hiplexAFSWUStart, hiplexAFGlobalData=hiplexAFGlobalData, hiplexAFSWUVirtHostDeact=hiplexAFSWUVirtHostDeact, hiplexAFTermHost=hiplexAFTermHost, hiplexAFSWUHostFEPPortnumber=hiplexAFSWUHostFEPPortnumber, hiplexAFSWUCreaTime=hiplexAFSWUCreaTime, hiplexAFSWUVirtHost=hiplexAFSWUVirtHost, hiplexAFSWUVolumeEntry=hiplexAFSWUVolumeEntry, hiplexAFSWUVirtHostAct=hiplexAFSWUVirtHostAct, hiplexAFTrapFilterEntry=hiplexAFTrapFilterEntry, hiplexAFSWUHostParamOperatorRole=hiplexAFSWUHostParamOperatorRole, hiplexAFSWUTable=hiplexAFSWUTable, hiplexAFHostMasterSlaveInd=hiplexAFHostMasterSlaveInd, hiplexAFSWUApplicationEntry=hiplexAFSWUApplicationEntry, hiplexAFSWUPubsetNumber=hiplexAFSWUPubsetNumber, hiplexAFSWUHostFEPTable=hiplexAFSWUHostFEPTable, hiplexAFSWUApplicationTabNum=hiplexAFSWUApplicationTabNum)
