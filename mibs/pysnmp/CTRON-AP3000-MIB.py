#
# PySNMP MIB module CTRON-AP3000-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CTRON-AP3000-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:13:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, ModuleIdentity, ObjectIdentity, mgmt, MibIdentifier, enterprises, iso, Counter64, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "ModuleIdentity", "ObjectIdentity", "mgmt", "MibIdentifier", "enterprises", "iso", "Counter64", "TimeTicks", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class DisplayString(OctetString):
    pass

class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 1))
    namedValues = NamedValues(("false", 2), ("true", 1))

cabletron = MibIdentifier((1, 3, 6, 1, 4, 1, 52))
mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4))
ctronAP3000 = ModuleIdentity((1, 3, 6, 1, 4, 1, 52, 4, 13))
ctronAP3000.setRevisions(('2007-10-30 18:45',))
if mibBuilder.loadTexts: ctronAP3000.setLastUpdated('200710301845Z')
if mibBuilder.loadTexts: ctronAP3000.setOrganization('Enterasys Networks, Inc')
comPortMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 1))
macFilterMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 2))
qosMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 3))
linkQualityMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 4))
apSnmpMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 5))
sysEntity = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 6))
apSecurityMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 7))
apRadioInterfaceMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 8))
apEtherInterfaceMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 9))
apFilterControlMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 10))
apVLANMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 11))
apAuthenticationMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 12))
apWStationSessionMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 13))
apRogueApMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 14))
apAdminMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 15))
apResetMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 16))
apSNTPMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 17))
apDNSMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 18))
apIappMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 19))
apSyslogConfigMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 20))
apEventLogMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 21))
apWSLSupportMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 22))
apWMMMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 23))
apNotificationTrapTree = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 100))
apFilterControlBridge = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apFilterControlBridge.setStatus('current')
enterpriseApFilterControlAPManage = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApFilterControlAPManage.setStatus('current')
enterpriseApFilterControlEthernet = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApFilterControlEthernet.setStatus('current')
enterpriseApFilterProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 4), )
if mibBuilder.loadTexts: enterpriseApFilterProtocolTable.setStatus('current')
enterpriseApFilterProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 4, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "enterpriseApFilterProtocolIndex"))
if mibBuilder.loadTexts: enterpriseApFilterProtocolEntry.setStatus('current')
enterpriseApFilterProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: enterpriseApFilterProtocolIndex.setStatus('current')
enterpriseApFilterProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApFilterProtocolName.setStatus('current')
enterpriseApFilterProtocolISODesignator = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApFilterProtocolISODesignator.setStatus('current')
enterpriseApFilterProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApFilterProtocolState.setStatus('current')
apvGlobalIBSSRelayMode = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("perVapModeEnable", 1), ("allVapModeEnable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apvGlobalIBSSRelayMode.setStatus('current')
apvFilterControlTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 6), )
if mibBuilder.loadTexts: apvFilterControlTable.setStatus('current')
apvFilterControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 6, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "apvFilterControlIndex"))
if mibBuilder.loadTexts: apvFilterControlEntry.setStatus('current')
apvFilterControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apvFilterControlIndex.setStatus('current')
apvIBSSFilterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apvIBSSFilterControl.setStatus('current')
apvAPManageFilterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 10, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apvAPManageFilterControl.setStatus('current')
comPortControl = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: comPortControl.setStatus('current')
macFilterTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 1), )
if mibBuilder.loadTexts: macFilterTable.setStatus('deprecated')
macFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 1, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "macFilterIndex"))
if mibBuilder.loadTexts: macFilterEntry.setStatus('deprecated')
macFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: macFilterIndex.setStatus('deprecated')
macFilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 1, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macFilterAddress.setStatus('deprecated')
macFilterAllowedToGo = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macFilterAllowedToGo.setStatus('deprecated')
macFilterOpeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("other", 0), ("valid", 1), ("invalid", 2), ("create", 3))).clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macFilterOpeStatus.setStatus('deprecated')
apMacFilterControl = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apMacFilterControl.setStatus('deprecated')
apvMacFilterOperateTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 3), )
if mibBuilder.loadTexts: apvMacFilterOperateTable.setStatus('current')
apvMacFilterOperateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: apvMacFilterOperateEntry.setStatus('current')
apvMacFilterPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allowed", 1), ("denied", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apvMacFilterPermission.setStatus('current')
apvMacFilterAddressToAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 3, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apvMacFilterAddressToAdd.setStatus('current')
apvMacFilterTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 4), )
if mibBuilder.loadTexts: apvMacFilterTable.setStatus('current')
apvMacFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CTRON-AP3000-MIB", "apvMacFilterIndex"))
if mibBuilder.loadTexts: apvMacFilterEntry.setStatus('current')
apvMacFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apvMacFilterIndex.setStatus('current')
apvMacFilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apvMacFilterAddress.setStatus('current')
apvMacFilterActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allow", 1), ("denied", 2), ("deleteEntry", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apvMacFilterActivity.setStatus('current')
qosModeControl = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("qosoff", 1), ("qossa", 2), ("qosda", 3), ("qosether", 4), ("qos8021p", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosModeControl.setStatus('current')
qosMACTypeTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 2), )
if mibBuilder.loadTexts: qosMACTypeTable.setStatus('current')
qosMACTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 2, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "qosMACTypeIndex"))
if mibBuilder.loadTexts: qosMACTypeEntry.setStatus('current')
qosMACTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: qosMACTypeIndex.setStatus('current')
qosMACTypeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 2, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosMACTypeAddress.setStatus('current')
qosMACTypePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosMACTypePriority.setStatus('current')
qosMACTypeOpeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("other", 0), ("valid", 1), ("invalid", 2), ("create", 3))).clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosMACTypeOpeStatus.setStatus('current')
qosEtherTypeTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 3), )
if mibBuilder.loadTexts: qosEtherTypeTable.setStatus('current')
qosEtherTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 3, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "qosMACTypeIndex"))
if mibBuilder.loadTexts: qosEtherTypeEntry.setStatus('current')
qosEtherTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: qosEtherTypeIndex.setStatus('current')
qosEtherTypeHexValue = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosEtherTypeHexValue.setStatus('current')
qosEtherTypePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosEtherTypePriority.setStatus('current')
qosEtherTypeOpeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("other", 0), ("valid", 1), ("invalid", 2), ("create", 3))).clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosEtherTypeOpeStatus.setStatus('current')
qosQueueingMode = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("weighted-fair", 1), ("strict-priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosQueueingMode.setStatus('current')
qosSVPStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosSVPStatus.setStatus('current')
linkQualityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 4, 1), )
if mibBuilder.loadTexts: linkQualityTable.setStatus('current')
linkQualityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 4, 1, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "linkQualityRadioIndex"), (0, "CTRON-AP3000-MIB", "linkQualityStaIndex"))
if mibBuilder.loadTexts: linkQualityEntry.setStatus('current')
linkQualityRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: linkQualityRadioIndex.setStatus('current')
linkQualityStaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: linkQualityStaIndex.setStatus('current')
linkQualityStaMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 4, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkQualityStaMacAddress.setStatus('current')
linkQualityStaRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkQualityStaRssi.setStatus('current')
trapControl = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapControl.setStatus('current')
trapConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2))
trapSysSystemUp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapSysSystemUp.setStatus('current')
trapSysSystemDown = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapSysSystemDown.setStatus('current')
trapSysRadiusServerChanged = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapSysRadiusServerChanged.setStatus('current')
trapDot11StationAssociation = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot11StationAssociation.setStatus('current')
trapDot11StationReAssociation = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot11StationReAssociation.setStatus('current')
trapDot11StationAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot11StationAuthentication.setStatus('current')
trapDot11StationRequestFail = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot11StationRequestFail.setStatus('current')
trapLocalMacAddrAuthFail = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapLocalMacAddrAuthFail.setStatus('current')
trapLocalMacAddrAuthSuccess = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapLocalMacAddrAuthSuccess.setStatus('current')
trapDot1xAuthNotInitiated = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot1xAuthNotInitiated.setStatus('current')
trapDot1xAuthSuccess = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot1xAuthSuccess.setStatus('current')
trapDot1xAuthFail = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot1xAuthFail.setStatus('current')
trapDot1xMacAddrAuthSuccess = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot1xMacAddrAuthSuccess.setStatus('current')
trapDot1xMacAddrAuthFail = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot1xMacAddrAuthFail.setStatus('current')
trapPppLogonFail = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapPppLogonFail.setStatus('current')
trapIappStationRoamedFrom = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIappStationRoamedFrom.setStatus('current')
trapIappStationRoamedTo = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIappStationRoamedTo.setStatus('current')
trapIappContextDataSent = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIappContextDataSent.setStatus('current')
trapSntpServerFail = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapSntpServerFail.setStatus('current')
trapDot11InterfaceAFail = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot11InterfaceAFail.setStatus('current')
trapDot11InterfaceGFail = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot11InterfaceGFail.setStatus('current')
trapDot11WirelessSTPDetection = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDot11WirelessSTPDetection.setStatus('current')
apSnmpTrapDestinationTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 3), )
if mibBuilder.loadTexts: apSnmpTrapDestinationTable.setStatus('current')
apSnmpTrapDestinationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 3, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "apSnmpTrapDestinationIndex"))
if mibBuilder.loadTexts: apSnmpTrapDestinationEntry.setStatus('current')
apSnmpTrapDestinationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: apSnmpTrapDestinationIndex.setStatus('current')
apSnmpTrapDestinationCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpTrapDestinationCommunity.setStatus('current')
apSnmpTrapDestinationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpTrapDestinationIP.setStatus('current')
apSnmpTrapDestinationState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpTrapDestinationState.setStatus('current')
apSnmpCommunityReadOnly = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpCommunityReadOnly.setStatus('current')
apSnmpCommunityReadWrite = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpCommunityReadWrite.setStatus('current')
apSnmpVersionFilter = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableSNMPv1SNMPv2c", 1), ("disableSNMPv1SNMPv2c", 2))).clone('enableSNMPv1SNMPv2c')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpVersionFilter.setStatus('current')
swHardwareVer = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swHardwareVer.setStatus('current')
swBootRomVer = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 6, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBootRomVer.setStatus('current')
swOpCodeVer = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 6, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swOpCodeVer.setStatus('current')
swSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 6, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSerialNumber.setStatus('current')
swProductName = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 6, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swProductName.setStatus('current')
swCountrySetting = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 6, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swCountrySetting.setStatus('current')
apRadioSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1), )
if mibBuilder.loadTexts: apRadioSecurityTable.setStatus('current')
apRadioSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "apRadioSecurityIndex"))
if mibBuilder.loadTexts: apRadioSecurityEntry.setStatus('current')
apRadioSecurityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apRadioSecurityIndex.setStatus('current')
apRadioSecurityWEPAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("opensystem", 0), ("sharedkey", 1), ("wpa", 2), ("wpapsk", 3), ("wpawpa2mixed", 4), ("wpawpa2pskmixed", 5), ("wpa2", 6), ("wpa2psk", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioSecurityWEPAuthType.setStatus('current')
apRadioSecuritySharedKeyLen = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("sixtyFour", 1), ("oneHundredTwentyEight", 2), ("oneHundredFiftyTwo", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apRadioSecuritySharedKeyLen.setStatus('current')
apRadioSecurityWPAMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("supported", 0), ("required", 1), ("notSupported", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioSecurityWPAMode.setStatus('current')
apRadioSecurityWPAKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dot1x", 0), ("presharedkey", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioSecurityWPAKeyType.setStatus('current')
apRadioSecurityWPACipher = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wep", 0), ("tkip", 1), ("aes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioSecurityWPACipher.setStatus('obsolete')
apRadioSecurityWPAPSKType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hex", 0), ("alphanumeric", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioSecurityWPAPSKType.setStatus('current')
apRadioSecurityWPAPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioSecurityWPAPSK.setStatus('current')
apRadioSecurityWEPKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hexadecimal", 0), ("alphanumeric", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioSecurityWEPKeyType.setStatus('current')
apRadioSecurityWEPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioSecurityWEPEnabled.setStatus('current')
apRadioSecurityWPACipherSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("aesccmp", 0), ("tkip", 1), ("wep", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioSecurityWPACipherSuite.setStatus('current')
apRadioApSecurityWPAPreAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioApSecurityWPAPreAuthentication.setStatus('current')
apRadioApSecurityWPAPmksaLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRadioApSecurityWPAPmksaLifetime.setStatus('current')
apSecuritySsh = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 2))
apSecuritySshServerEnabled = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSecuritySshServerEnabled.setStatus('current')
apSecuritySshServerPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 2, 2), Integer32().clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSecuritySshServerPort.setStatus('current')
apSecuritySshTelnetServerEnabled = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 7, 2, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSecuritySshTelnetServerEnabled.setStatus('current')
enterpriseApRadioTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2), )
if mibBuilder.loadTexts: enterpriseApRadioTable.setStatus('current')
enterpriseApRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "enterpriseApRadioIndex"))
if mibBuilder.loadTexts: enterpriseApRadioEntry.setStatus('current')
enterpriseApRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: enterpriseApRadioIndex.setStatus('current')
enterpriseApRadioAutoChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAutoChannel.setStatus('current')
enterpriseApRadioTransmitPower = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("quarter", 3), ("eighth", 4), ("min", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioTransmitPower.setStatus('current')
enterpriseApRadioTurboMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioTurboMode.setStatus('current')
enterpriseApRadioDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 9, 11, 12, 18, 24, 36, 48, 54, 255))).clone(namedValues=NamedValues(("oneMbps", 1), ("twoMbps", 2), ("fiveAndHalfMbps", 5), ("sixMbps", 6), ("nineMbps", 9), ("elevenMbps", 11), ("twelveMbps", 12), ("eighteenMbps", 18), ("twentyFourMbps", 24), ("thirtySixMbps", 36), ("fourtyEightMbps", 48), ("fiftyFourMbps", 54), ("auto", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioDataRate.setStatus('current')
enterpriseApRadioGMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bOnly", 1), ("gOnly", 2), ("bg", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioGMode.setStatus('current')
enterpriseApRadioAntennaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("both", 1), ("left", 2), ("right", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAntennaMode.setStatus('current')
rogueApState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApState.setStatus('current')
rogueApInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 10080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApInterval.setStatus('current')
rogueApDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApDuration.setStatus('current')
rogueApScanNow = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApScanNow.setStatus('current')
enterpriseApRadioAntennaModeControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApRadioAntennaModeControl.setStatus('current')
enterpriseApRadioFixedAntennaType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("diversity", 1), ("left", 2), ("right", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioFixedAntennaType.setStatus('current')
enterpriseApRadioAntennaID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAntennaID.setStatus('current')
enterpriseApRadioMulticastDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 9, 11, 12, 18, 24, 36, 48, 54))).clone(namedValues=NamedValues(("oneMbps", 1), ("twoMbps", 2), ("fiveAndHalfMbps", 5), ("sixMbps", 6), ("nineMbps", 9), ("elevenMbps", 11), ("twelveMbps", 12), ("eighteenMbps", 18), ("twentyFourMbps", 24), ("thirtySixMbps", 36), ("fortyEightMbps", 48), ("fiftyFourMbps", 54)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioMulticastDataRate.setStatus('current')
enterpriseApRadioAutoDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAutoDataRate.setStatus('current')
enterpriseApRadioPreamble = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("long", 1), ("short", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioPreamble.setStatus('current')
enterpriseApRadioSWRetryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioSWRetryMode.setStatus('current')
enterpriseApVapRadioTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 3), )
if mibBuilder.loadTexts: enterpriseApVapRadioTable.setStatus('current')
enterpriseApVapRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 3, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "enterpriseApVapRadioIndex"))
if mibBuilder.loadTexts: enterpriseApVapRadioEntry.setStatus('current')
enterpriseApVapRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: enterpriseApVapRadioIndex.setStatus('current')
enterpriseApVapRadioState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioState.setStatus('current')
enterpriseApVapRadioSecureAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioSecureAccess.setStatus('current')
enterpriseApVapRadioMaxAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioMaxAssoc.setStatus('current')
enterpriseApVapRadioTransmitKey = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioTransmitKey.setStatus('current')
enterpriseApVapRadioDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioDescription.setStatus('current')
enterpriseApVapRadioDefefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioDefefaultPriority.setStatus('current')
enterpriseApRadioWdsTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 4), )
if mibBuilder.loadTexts: enterpriseApRadioWdsTable.setStatus('current')
enterpriseApRadioWdsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 4, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "enterpriseApRadioIndex"))
if mibBuilder.loadTexts: enterpriseApRadioWdsEntry.setStatus('current')
wdsApRole = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("roleAp", 1), ("roleBridgeMaster", 2), ("roleBridge", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsApRole.setStatus('current')
wdsApAckTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsApAckTimeout.setStatus('current')
enterpriseApRadioWdsPeerTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 5), )
if mibBuilder.loadTexts: enterpriseApRadioWdsPeerTable.setStatus('current')
enterpriseApRadioWdsPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 5, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "enterpriseApRadioIndex"), (0, "CTRON-AP3000-MIB", "wdsPeerIndex"))
if mibBuilder.loadTexts: enterpriseApRadioWdsPeerEntry.setStatus('current')
wdsPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: wdsPeerIndex.setStatus('current')
wdsPeerBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsPeerBssid.setStatus('current')
wdsPeerRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsPeerRSSI.setStatus('current')
enterpriseApRadioWEPKeysTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 6), )
if mibBuilder.loadTexts: enterpriseApRadioWEPKeysTable.setStatus('current')
enterpriseApRadioWEPKeysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 6, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "enterpriseApRadioIndex"), (0, "CTRON-AP3000-MIB", "enterpriseApRadioWEPKeysIndex"))
if mibBuilder.loadTexts: enterpriseApRadioWEPKeysEntry.setStatus('current')
enterpriseApRadioWEPKeysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: enterpriseApRadioWEPKeysIndex.setStatus('current')
enterpriseApRadioWEPKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hexadecimalKey", 1), ("alphanumericKey", 2), ("otherKey", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApRadioWEPKeyType.setStatus('current')
enterpriseApRadioWEPKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("keyLength64Bit", 1), ("keyLength128Bit", 2), ("keyLength152Bit", 3), ("keyLengthOther", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApRadioWEPKeyLength.setStatus('current')
enterpriseApRadioAvAntennaListTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 7), )
if mibBuilder.loadTexts: enterpriseApRadioAvAntennaListTable.setStatus('current')
enterpriseApRadioAvAntennaListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 7, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "enterpriseApRadioIndex"), (0, "CTRON-AP3000-MIB", "enterpriseApRadioAvAntennaIndex"))
if mibBuilder.loadTexts: enterpriseApRadioAvAntennaListEntry.setStatus('current')
enterpriseApRadioAvAntennaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: enterpriseApRadioAvAntennaIndex.setStatus('current')
enterpriseApRadioAvAntennaId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApRadioAvAntennaId.setStatus('current')
enterpriseApRadioAvAntennaDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApRadioAvAntennaDesc.setStatus('current')
enterpriseApRadioAvChannelListTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 8), )
if mibBuilder.loadTexts: enterpriseApRadioAvChannelListTable.setStatus('current')
enterpriseApRadioAvChannelListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 8, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "enterpriseApRadioIndex"), (0, "CTRON-AP3000-MIB", "enterpriseApRadioAvChannelIndex"))
if mibBuilder.loadTexts: enterpriseApRadioAvChannelListEntry.setStatus('current')
enterpriseApRadioAvChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: enterpriseApRadioAvChannelIndex.setStatus('current')
enterpriseApRadioAvChannelNo = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 8, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApRadioAvChannelNo.setStatus('current')
apEtherNetConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 9, 1))
netConfigIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 9, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigIPAddress.setStatus('current')
netConfigSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 9, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigSubnetMask.setStatus('current')
netConfigDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 9, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigDefaultGateway.setStatus('current')
netConfigHttpState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpState.setStatus('current')
netConfigHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(514, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpPort.setStatus('current')
netConfigHttpsState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpsState.setStatus('current')
netConfigHttpsPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(514, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpsPort.setStatus('current')
netConfigDHCPState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigDHCPState.setStatus('current')
apVLANMgntNativeId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apVLANMgntNativeId.setStatus('current')
apVLANMgntState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apVLANMgntState.setStatus('current')
apVLANMgntStateNextBoot = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apVLANMgntStateNextBoot.setStatus('current')
apVLANMgntEtherUntaggedVlanId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apVLANMgntEtherUntaggedVlanId.setStatus('current')
apNativeVlanTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 6), )
if mibBuilder.loadTexts: apNativeVlanTable.setStatus('current')
apNativeVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 6, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "apNativeVlanIfIndex"), (0, "CTRON-AP3000-MIB", "apNativeVlanSsidNumber"))
if mibBuilder.loadTexts: apNativeVlanEntry.setStatus('current')
apNativeVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apNativeVlanIfIndex.setStatus('current')
apNativeVlanSsidNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apNativeVlanSsidNumber.setStatus('current')
apNativeVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apNativeVlanVlanId.setStatus('current')
apNativeVlanState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 11, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apNativeVlanState.setStatus('current')
apAuthenticationSetupEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 1))
ap8021xState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("supported", 1), ("required", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ap8021xState.setStatus('current')
ap8021xBroadcastKeyRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ap8021xBroadcastKeyRefreshRate.setStatus('current')
ap8021xSessionKeyRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ap8021xSessionKeyRefreshRate.setStatus('current')
ap8021xReauthenticationTimeout = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ap8021xReauthenticationTimeout.setStatus('current')
apAuthenticationMode = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("local", 1), ("radius", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAuthenticationMode.setStatus('current')
apAuthenticationServerTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2), )
if mibBuilder.loadTexts: apAuthenticationServerTable.setStatus('current')
apAuthenticationServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "apAuthenticationServerIndex"))
if mibBuilder.loadTexts: apAuthenticationServerEntry.setStatus('current')
apAuthenticationServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apAuthenticationServerIndex.setStatus('current')
apAuthenticationServer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAuthenticationServer.setStatus('current')
apAuthenticationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAuthenticationPort.setStatus('current')
apAuthenticationKey = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAuthenticationKey.setStatus('current')
apAuthenticationRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAuthenticationRetransmit.setStatus('current')
apAuthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAuthenticationTimeout.setStatus('current')
apAuthenticationAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAuthenticationAcctPort.setStatus('current')
apAuthenticationAcctInterimUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAuthenticationAcctInterimUpdate.setStatus('current')
apAuthenticationAcctState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAuthenticationAcctState.setStatus('current')
apAuthenticationSupplicantTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 3), )
if mibBuilder.loadTexts: apAuthenticationSupplicantTable.setStatus('current')
apAuthenticationSupplicantEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 3, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "ap8021xSuppIndex"))
if mibBuilder.loadTexts: apAuthenticationSupplicantEntry.setStatus('current')
ap8021xSuppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ap8021xSuppIndex.setStatus('current')
ap8021xSuppState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ap8021xSuppState.setStatus('current')
ap8021xSuppUser = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ap8021xSuppUser.setStatus('current')
ap8021xSuppPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ap8021xSuppPasswd.setStatus('current')
apvAuthenticationSetupTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4), )
if mibBuilder.loadTexts: apvAuthenticationSetupTable.setStatus('current')
apvAuthenticationSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "apv8021xIndex"))
if mibBuilder.loadTexts: apvAuthenticationSetupEntry.setStatus('current')
apv8021xIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apv8021xIndex.setStatus('current')
apv8021xState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("supported", 1), ("required", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apv8021xState.setStatus('current')
apv8021xBroadcastKeyRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apv8021xBroadcastKeyRefreshRate.setStatus('current')
apv8021xSessionKeyRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apv8021xSessionKeyRefreshRate.setStatus('current')
apv8021xReauthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apv8021xReauthenticationTimeout.setStatus('current')
apvMACAuthenticationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("local", 1), ("remote", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apvMACAuthenticationMode.setStatus('current')
apvMACAuthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apvMACAuthenticationTimeout.setStatus('current')
apvMACAuthenticationPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 12, 4, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apvMACAuthenticationPasswd.setStatus('current')
apWStationSessionTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1), )
if mibBuilder.loadTexts: apWStationSessionTable.setStatus('current')
apWStationSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "apWStationSessionIfIndex"), (0, "CTRON-AP3000-MIB", "apWStationSessionStationAddres"))
if mibBuilder.loadTexts: apWStationSessionEntry.setStatus('current')
apWStationSessionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apWStationSessionIfIndex.setStatus('current')
apWStationSessionStationAddres = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: apWStationSessionStationAddres.setStatus('current')
apWStationSessionAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionAuthenticated.setStatus('current')
apWStationSessionAssociated = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionAssociated.setStatus('current')
apWStationSessionIsForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionIsForwarding.setStatus('current')
apWStationSessionKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("staticWep", 2), ("dynamicWep", 3), ("wpaWep", 4), ("wpaTkip", 5), ("wpaAes", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionKeyType.setStatus('current')
apWStationSessionAssociationId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionAssociationId.setStatus('current')
apWStationSessionLastAuthenticatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionLastAuthenticatedTime.setStatus('current')
apWStationSessionAssociatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionAssociatedTime.setStatus('current')
apWStationSessionLastAssociatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionLastAssociatedTime.setStatus('current')
apWStationSessionLastDisassociatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionLastDisassociatedTime.setStatus('current')
apWStationSessionTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionTxPacketCount.setStatus('current')
apWStationSessionRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionRxPacketCount.setStatus('current')
apWStationSessionTxByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionTxByteCount.setStatus('current')
apWStationSessionRxByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionRxByteCount.setStatus('current')
apWStationSessionVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 13, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWStationSessionVlanID.setStatus('current')
rogueApDetectionTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 1), )
if mibBuilder.loadTexts: rogueApDetectionTable.setStatus('current')
rogueApDetectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 1, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "rogueApIndex"))
if mibBuilder.loadTexts: rogueApDetectionEntry.setStatus('current')
rogueApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: rogueApIndex.setStatus('current')
rogueApBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApBssid.setStatus('current')
rogueApSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApSsid.setStatus('current')
rogueApPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApPortNumber.setStatus('current')
rogueApChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApChannelNumber.setStatus('current')
rogueApRSSIValue = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApRSSIValue.setStatus('current')
apRougeApControl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 2))
rogueApRADIUSAuthenticate = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApRADIUSAuthenticate.setStatus('current')
rogueApClear = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 14, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApClear.setStatus('current')
apAdminUsername = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 15, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apAdminUsername.setStatus('current')
appAdminPassword = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 15, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appAdminPassword.setStatus('current')
apRestartOpCodeFile = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 16, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRestartOpCodeFile.setStatus('current')
apRestartControl = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("warmBoot", 2), ("coldBoot", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRestartControl.setStatus('current')
apSNTPState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSNTPState.setStatus('current')
apSNTPPrimaryServer = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 17, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSNTPPrimaryServer.setStatus('current')
apSNTPSecondaryServer = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 17, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSNTPSecondaryServer.setStatus('current')
apSNTPTimezone = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53))).clone(namedValues=NamedValues(("enewetakKwajalein", 0), ("midwayIsland", 1), ("hawaii", 2), ("alaska", 3), ("pacific", 4), ("arizona", 5), ("mountain", 6), ("central", 7), ("mexicoCity", 8), ("saskatchewan", 9), ("bogota", 10), ("eastern", 11), ("indiana", 12), ("atlantic", 13), ("caracas", 14), ("santiago", 15), ("newfoundland", 16), ("brasilia", 17), ("buenos", 18), ("midAtlantic", 19), ("azores", 20), ("casablanca", 21), ("greenwichMeanTimeDublin", 22), ("greenwichMeanTimeLisbon", 23), ("amsterdam", 24), ("stockholm", 25), ("bratislava", 26), ("prague", 27), ("paris", 28), ("sofija", 29), ("athens", 30), ("bucharest", 31), ("cairo", 32), ("harare", 33), ("helsinki", 34), ("israel", 35), ("baghdad", 36), ("moscow", 37), ("tehran", 38), ("abuDhabi", 39), ("vogograd", 40), ("islamabad", 41), ("almaty", 42), ("bangkok", 43), ("beijing", 44), ("taipei", 45), ("tokyo", 46), ("brisbane", 47), ("canberra", 48), ("guam", 49), ("hobart", 50), ("magadan", 51), ("fiji", 52), ("wellington", 53)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSNTPTimezone.setStatus('current')
apSNTPDST = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 17, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSNTPDST.setStatus('current')
apSNTPDSTStartMonth = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 17, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSNTPDSTStartMonth.setStatus('current')
apSNTPDSTStartDay = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 17, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSNTPDSTStartDay.setStatus('current')
apSNTPDSTEndMonth = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 17, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSNTPDSTEndMonth.setStatus('current')
apSNTPDSTEndDay = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 17, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSNTPDSTEndDay.setStatus('current')
apDNSPrimaryServer = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 18, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apDNSPrimaryServer.setStatus('current')
apDNSSecondaryServer = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 18, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apDNSSecondaryServer.setStatus('current')
apIappEnabled = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apIappEnabled.setStatus('current')
apLogConfigState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apLogConfigState.setStatus('current')
apSyslogConsoleState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSyslogConsoleState.setStatus('current')
apSyslogLevel = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 20, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSyslogLevel.setStatus('current')
apSyslogServerTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 20, 4), )
if mibBuilder.loadTexts: apSyslogServerTable.setStatus('current')
apSyslogServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 20, 4, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "apSyslogServerIndex"))
if mibBuilder.loadTexts: apSyslogServerEntry.setStatus('current')
apSyslogServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: apSyslogServerIndex.setStatus('current')
apSyslogServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 20, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSyslogServerState.setStatus('current')
apSyslogServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 20, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSyslogServerIPAddress.setStatus('current')
apSyslogServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 20, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSyslogServerPort.setStatus('current')
apEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 21, 1), )
if mibBuilder.loadTexts: apEventLogTable.setStatus('current')
apEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 21, 1, 1), ).setIndexNames((0, "CTRON-AP3000-MIB", "apEventLogIndex"))
if mibBuilder.loadTexts: apEventLogEntry.setStatus('current')
apEventLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 21, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: apEventLogIndex.setStatus('current')
apEventLogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 21, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEventLogMessage.setStatus('current')
apEventLogClear = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clearLog", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apEventLogClear.setStatus('current')
apWSLSupportControl = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWSLSupportControl.setStatus('current')
apWSLSupportMasterAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWSLSupportMasterAddress.setStatus('current')
apWSLSupportSecondaryAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWSLSupportSecondaryAddress.setStatus('current')
apWSLSupportPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWSLSupportPort.setStatus('current')
apWSLSupportHeartbeatInterval = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWSLSupportHeartbeatInterval.setStatus('current')
apWSLSupportHeartbeatLastChange = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWSLSupportHeartbeatLastChange.setStatus('current')
apWSLSupportOperationMode = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standalone", 0), ("associated", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWSLSupportOperationMode.setStatus('current')
apWSLSupportRxThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWSLSupportRxThreshold.setStatus('current')
apWSLSupportControlStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWSLSupportControlStatus.setStatus('current')
apWSLRFAreaPollControl = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWSLRFAreaPollControl.setStatus('current')
apWSLRFAreaPollControlStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 22, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apWSLRFAreaPollControlStatus.setStatus('current')
apWMMControlTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 1), )
if mibBuilder.loadTexts: apWMMControlTable.setStatus('current')
apWMMControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: apWMMControlEntry.setStatus('current')
apWMMState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("required", 1), ("supported", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMState.setStatus('current')
apWMMBssParamTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 2), )
if mibBuilder.loadTexts: apWMMBssParamTable.setStatus('current')
apWMMBssParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CTRON-AP3000-MIB", "apWMMBssParamIndex"))
if mibBuilder.loadTexts: apWMMBssParamEntry.setStatus('current')
apWMMBssParamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: apWMMBssParamIndex.setStatus('current')
apWMMBssParamCWmin = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMBssParamCWmin.setStatus('current')
apWMMBssParamCWmax = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMBssParamCWmax.setStatus('current')
apWMMBssParamAIFSN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMBssParamAIFSN.setStatus('current')
apWMMBssParamTXOPLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMBssParamTXOPLimit.setStatus('current')
apWMMBssParamAdmissionControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMBssParamAdmissionControl.setStatus('current')
apWMMApParamTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 3), )
if mibBuilder.loadTexts: apWMMApParamTable.setStatus('current')
apWMMApParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CTRON-AP3000-MIB", "apWMMApParamIndex"))
if mibBuilder.loadTexts: apWMMApParamEntry.setStatus('current')
apWMMApParamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: apWMMApParamIndex.setStatus('current')
apWMMApParamCWmin = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMApParamCWmin.setStatus('current')
apWMMApParamCWmax = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMApParamCWmax.setStatus('current')
apWMMApParamAIFSN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMApParamAIFSN.setStatus('current')
apWMMApParamTXOPLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMApParamTXOPLimit.setStatus('current')
apWMMApParamAdmissionControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 13, 23, 3, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWMMApParamAdmissionControl.setStatus('current')
apNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 1))
apNotificationDot11MacAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apNotificationDot11MacAddr.setStatus('current')
apNotificationDot11Station = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apNotificationDot11Station.setStatus('current')
apNotificationDot11RequestType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("association", 2), ("reAssociation", 3), ("authentication", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apNotificationDot11RequestType.setStatus('current')
apNotificationDot11ReasonCode = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("invalidModeOrState", 1), ("unAuthenticatedStation", 2), ("internalError", 3), ("outOfSequenceFrame", 4), ("unsupportedAlgorithm", 5), ("invalidFrameLngth", 6), ("wepRequiredOnAP", 7), ("wepNotAllowed", 8), ("challengeTextMismatch", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apNotificationDot11ReasonCode.setStatus('current')
apNotificationDot11IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apNotificationDot11IpAddress.setStatus('current')
apNotificationDot11AuthenticatorMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apNotificationDot11AuthenticatorMacAddr.setStatus('current')
apNotificationTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2))
sysSystemUp = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 1))
if mibBuilder.loadTexts: sysSystemUp.setStatus('current')
sysSystemDown = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 2))
if mibBuilder.loadTexts: sysSystemDown.setStatus('current')
sysRadiusServerChanged = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 3))
if mibBuilder.loadTexts: sysRadiusServerChanged.setStatus('current')
dot11StationAssociation = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 4)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot11StationAssociation.setStatus('current')
dot11StationReAssociation = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 5)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot11StationReAssociation.setStatus('current')
dot11StationAuthentication = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 6)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot11StationAuthentication.setStatus('current')
dot11StationRequestFail = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 7)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"), ("CTRON-AP3000-MIB", "apNotificationDot11RequestType"), ("CTRON-AP3000-MIB", "apNotificationDot11ReasonCode"))
if mibBuilder.loadTexts: dot11StationRequestFail.setStatus('current')
dot1xMacAddrAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 9)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xMacAddrAuthSuccess.setStatus('current')
dot1xMacAddrAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 10)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xMacAddrAuthFail.setStatus('current')
dot1xAuthNotInitiated = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 11)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xAuthNotInitiated.setStatus('current')
dot1xAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 12)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xAuthSuccess.setStatus('current')
dot1xAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 13)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xAuthFail.setStatus('current')
localMacAddrAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 14)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: localMacAddrAuthSuccess.setStatus('current')
localMacAddrAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 15)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: localMacAddrAuthFail.setStatus('current')
pppLogonFail = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 16))
if mibBuilder.loadTexts: pppLogonFail.setStatus('current')
iappStationRoamedFrom = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 17)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"), ("CTRON-AP3000-MIB", "apNotificationDot11IpAddress"))
if mibBuilder.loadTexts: iappStationRoamedFrom.setStatus('current')
iappStationRoamedTo = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 18)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"), ("CTRON-AP3000-MIB", "apNotificationDot11IpAddress"))
if mibBuilder.loadTexts: iappStationRoamedTo.setStatus('current')
iappContextDataSent = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 19)).setObjects(("CTRON-AP3000-MIB", "apNotificationDot11Station"), ("CTRON-AP3000-MIB", "apNotificationDot11IpAddress"))
if mibBuilder.loadTexts: iappContextDataSent.setStatus('current')
sntpServerFail = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 20))
if mibBuilder.loadTexts: sntpServerFail.setStatus('current')
dot11InterfaceAFail = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 21))
if mibBuilder.loadTexts: dot11InterfaceAFail.setStatus('current')
dot11InterfaceGFail = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 22))
if mibBuilder.loadTexts: dot11InterfaceGFail.setStatus('current')
dot11WirelessSTPDetection = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 13, 100, 2, 23))
if mibBuilder.loadTexts: dot11WirelessSTPDetection.setStatus('current')
mibBuilder.exportSymbols("CTRON-AP3000-MIB", apWSLSupportOperationMode=apWSLSupportOperationMode, ap8021xSuppState=ap8021xSuppState, apNotificationDot11RequestType=apNotificationDot11RequestType, apSecuritySshTelnetServerEnabled=apSecuritySshTelnetServerEnabled, rogueApDetectionTable=rogueApDetectionTable, enterpriseApRadioWEPKeysTable=enterpriseApRadioWEPKeysTable, trapDot11WirelessSTPDetection=trapDot11WirelessSTPDetection, trapDot1xMacAddrAuthFail=trapDot1xMacAddrAuthFail, apAuthenticationSupplicantEntry=apAuthenticationSupplicantEntry, apv8021xSessionKeyRefreshRate=apv8021xSessionKeyRefreshRate, linkQualityStaRssi=linkQualityStaRssi, ap8021xSessionKeyRefreshRate=ap8021xSessionKeyRefreshRate, apNotificationDot11AuthenticatorMacAddr=apNotificationDot11AuthenticatorMacAddr, apNativeVlanState=apNativeVlanState, apv8021xState=apv8021xState, ctronAP3000=ctronAP3000, swProductName=swProductName, apWSLSupportControl=apWSLSupportControl, apIappEnabled=apIappEnabled, macFilterAddress=macFilterAddress, rogueApRADIUSAuthenticate=rogueApRADIUSAuthenticate, apWSLRFAreaPollControlStatus=apWSLRFAreaPollControlStatus, apWMMApParamTXOPLimit=apWMMApParamTXOPLimit, apRadioSecurityWEPEnabled=apRadioSecurityWEPEnabled, enterpriseApVapRadioDescription=enterpriseApVapRadioDescription, apNativeVlanVlanId=apNativeVlanVlanId, trapControl=trapControl, apNotificationDot11MacAddr=apNotificationDot11MacAddr, apFilterControlBridge=apFilterControlBridge, enterpriseApRadioAntennaID=enterpriseApRadioAntennaID, macFilterEntry=macFilterEntry, apWMMBssParamAdmissionControl=apWMMBssParamAdmissionControl, enterpriseApRadioWdsEntry=enterpriseApRadioWdsEntry, DisplayString=DisplayString, dot1xAuthNotInitiated=dot1xAuthNotInitiated, rogueApDuration=rogueApDuration, apNativeVlanEntry=apNativeVlanEntry, enterpriseApVapRadioMaxAssoc=enterpriseApVapRadioMaxAssoc, apWStationSessionTxByteCount=apWStationSessionTxByteCount, PYSNMP_MODULE_ID=ctronAP3000, macFilterTable=macFilterTable, apRadioApSecurityWPAPreAuthentication=apRadioApSecurityWPAPreAuthentication, dot11StationAssociation=dot11StationAssociation, apWStationSessionTable=apWStationSessionTable, trapSntpServerFail=trapSntpServerFail, apSnmpCommunityReadWrite=apSnmpCommunityReadWrite, dot1xAuthFail=dot1xAuthFail, apRogueApMgnt=apRogueApMgnt, qosEtherTypeEntry=qosEtherTypeEntry, sysEntity=sysEntity, apEventLogEntry=apEventLogEntry, apWMMApParamAdmissionControl=apWMMApParamAdmissionControl, apRestartControl=apRestartControl, apWMMApParamIndex=apWMMApParamIndex, enterpriseApRadioAvChannelIndex=enterpriseApRadioAvChannelIndex, apWSLRFAreaPollControl=apWSLRFAreaPollControl, apvFilterControlTable=apvFilterControlTable, apWStationSessionLastAssociatedTime=apWStationSessionLastAssociatedTime, qosEtherTypeTable=qosEtherTypeTable, apSnmpTrapDestinationIP=apSnmpTrapDestinationIP, appAdminPassword=appAdminPassword, trapIappContextDataSent=trapIappContextDataSent, apRadioSecuritySharedKeyLen=apRadioSecuritySharedKeyLen, apNotificationDot11ReasonCode=apNotificationDot11ReasonCode, apWMMApParamTable=apWMMApParamTable, enterpriseApRadioIndex=enterpriseApRadioIndex, apSnmpTrapDestinationTable=apSnmpTrapDestinationTable, apAuthenticationTimeout=apAuthenticationTimeout, apAuthenticationMgnt=apAuthenticationMgnt, apEventLogMgnt=apEventLogMgnt, apSecuritySshServerEnabled=apSecuritySshServerEnabled, apSyslogConfigMgnt=apSyslogConfigMgnt, trapSysSystemDown=trapSysSystemDown, trapDot1xAuthFail=trapDot1xAuthFail, rogueApDetectionEntry=rogueApDetectionEntry, dot11StationRequestFail=dot11StationRequestFail, sntpServerFail=sntpServerFail, trapLocalMacAddrAuthFail=trapLocalMacAddrAuthFail, trapDot11InterfaceAFail=trapDot11InterfaceAFail, iappStationRoamedFrom=iappStationRoamedFrom, rogueApClear=rogueApClear, apvIBSSFilterControl=apvIBSSFilterControl, swSerialNumber=swSerialNumber, enterpriseApRadioAntennaMode=enterpriseApRadioAntennaMode, enterpriseApRadioAvAntennaIndex=enterpriseApRadioAvAntennaIndex, dot11StationReAssociation=dot11StationReAssociation, apvMacFilterPermission=apvMacFilterPermission, macFilterIndex=macFilterIndex, apWSLSupportSecondaryAddress=apWSLSupportSecondaryAddress, apSNTPMgnt=apSNTPMgnt, apvMacFilterAddress=apvMacFilterAddress, enterpriseApVapRadioSecureAccess=enterpriseApVapRadioSecureAccess, ap8021xSuppPasswd=ap8021xSuppPasswd, trapSysRadiusServerChanged=trapSysRadiusServerChanged, apSNTPDSTStartMonth=apSNTPDSTStartMonth, apRadioSecurityWPAPSKType=apRadioSecurityWPAPSKType, swCountrySetting=swCountrySetting, apNativeVlanSsidNumber=apNativeVlanSsidNumber, apWSLSupportRxThreshold=apWSLSupportRxThreshold, apvMacFilterIndex=apvMacFilterIndex, enterpriseApRadioAvAntennaId=enterpriseApRadioAvAntennaId, enterpriseApRadioGMode=enterpriseApRadioGMode, rogueApBssid=rogueApBssid, qosQueueingMode=qosQueueingMode, apMacFilterControl=apMacFilterControl, apSnmpVersionFilter=apSnmpVersionFilter, trapIappStationRoamedTo=trapIappStationRoamedTo, enterpriseApRadioDataRate=enterpriseApRadioDataRate, enterpriseApRadioWEPKeysEntry=enterpriseApRadioWEPKeysEntry, enterpriseApRadioAutoDataRate=enterpriseApRadioAutoDataRate, apAuthenticationAcctState=apAuthenticationAcctState, apWMMControlEntry=apWMMControlEntry, rogueApSsid=rogueApSsid, apRestartOpCodeFile=apRestartOpCodeFile, apSyslogServerEntry=apSyslogServerEntry, apvGlobalIBSSRelayMode=apvGlobalIBSSRelayMode, apVLANMgnt=apVLANMgnt, localMacAddrAuthSuccess=localMacAddrAuthSuccess, trapDot11InterfaceGFail=trapDot11InterfaceGFail, apRadioSecurityWPACipherSuite=apRadioSecurityWPACipherSuite, comPortControl=comPortControl, apRadioSecurityWPAMode=apRadioSecurityWPAMode, trapDot11StationReAssociation=trapDot11StationReAssociation, macFilterOpeStatus=macFilterOpeStatus, qosMgnt=qosMgnt, sysSystemUp=sysSystemUp, enterpriseApRadioTable=enterpriseApRadioTable, qosEtherTypePriority=qosEtherTypePriority, apRougeApControl=apRougeApControl, wdsApRole=wdsApRole, enterpriseApVapRadioIndex=enterpriseApVapRadioIndex, enterpriseApFilterProtocolName=enterpriseApFilterProtocolName, apSNTPState=apSNTPState, apEventLogIndex=apEventLogIndex, enterpriseApRadioWdsTable=enterpriseApRadioWdsTable, enterpriseApFilterProtocolTable=enterpriseApFilterProtocolTable, dot11InterfaceAFail=dot11InterfaceAFail, swBootRomVer=swBootRomVer, apWMMState=apWMMState, linkQualityRadioIndex=linkQualityRadioIndex, apDNSPrimaryServer=apDNSPrimaryServer, apWMMBssParamTable=apWMMBssParamTable, cabletron=cabletron, apWSLSupportMasterAddress=apWSLSupportMasterAddress, qosEtherTypeOpeStatus=qosEtherTypeOpeStatus, apSyslogLevel=apSyslogLevel, enterpriseApRadioAvAntennaListEntry=enterpriseApRadioAvAntennaListEntry, apFilterControlMgnt=apFilterControlMgnt, MacAddress=MacAddress, enterpriseApFilterProtocolEntry=enterpriseApFilterProtocolEntry, enterpriseApFilterControlAPManage=enterpriseApFilterControlAPManage, ap8021xState=ap8021xState, apSNTPDSTEndDay=apSNTPDSTEndDay, apDNSMgnt=apDNSMgnt, netConfigDHCPState=netConfigDHCPState, apWMMBssParamAIFSN=apWMMBssParamAIFSN, apvMacFilterAddressToAdd=apvMacFilterAddressToAdd, apRadioApSecurityWPAPmksaLifetime=apRadioApSecurityWPAPmksaLifetime, apWStationSessionAuthenticated=apWStationSessionAuthenticated, apVLANMgntStateNextBoot=apVLANMgntStateNextBoot, trapDot1xMacAddrAuthSuccess=trapDot1xMacAddrAuthSuccess, apWStationSessionAssociated=apWStationSessionAssociated, trapDot11StationRequestFail=trapDot11StationRequestFail, apSyslogServerIndex=apSyslogServerIndex, netConfigHttpsState=netConfigHttpsState, swOpCodeVer=swOpCodeVer, apResetMgt=apResetMgt, linkQualityTable=linkQualityTable, apEventLogMessage=apEventLogMessage, macFilterMgnt=macFilterMgnt, apSyslogServerState=apSyslogServerState, netConfigHttpState=netConfigHttpState, enterpriseApVapRadioEntry=enterpriseApVapRadioEntry, apvAPManageFilterControl=apvAPManageFilterControl, enterpriseApRadioAvChannelListEntry=enterpriseApRadioAvChannelListEntry, apSnmpTrapDestinationIndex=apSnmpTrapDestinationIndex, apWMMApParamAIFSN=apWMMApParamAIFSN, apWSLSupportPort=apWSLSupportPort, apSecurityMgnt=apSecurityMgnt, apAdminMgnt=apAdminMgnt, rogueApRSSIValue=rogueApRSSIValue, apvMacFilterEntry=apvMacFilterEntry, enterpriseApVapRadioTransmitKey=enterpriseApVapRadioTransmitKey, dot11InterfaceGFail=dot11InterfaceGFail, apEventLogClear=apEventLogClear, apRadioSecurityWEPKeyType=apRadioSecurityWEPKeyType, apAuthenticationSupplicantTable=apAuthenticationSupplicantTable, apWSLSupportMgnt=apWSLSupportMgnt, trapPppLogonFail=trapPppLogonFail, apRadioSecurityWEPAuthType=apRadioSecurityWEPAuthType, enterpriseApRadioAvChannelListTable=enterpriseApRadioAvChannelListTable, localMacAddrAuthFail=localMacAddrAuthFail, apWMMBssParamEntry=apWMMBssParamEntry, apVLANMgntEtherUntaggedVlanId=apVLANMgntEtherUntaggedVlanId, dot1xAuthSuccess=dot1xAuthSuccess, qosMACTypeTable=qosMACTypeTable, apSNTPPrimaryServer=apSNTPPrimaryServer, apWStationSessionEntry=apWStationSessionEntry, apv8021xIndex=apv8021xIndex, apWStationSessionIsForwarding=apWStationSessionIsForwarding, qosMACTypeIndex=qosMACTypeIndex, apAuthenticationServerIndex=apAuthenticationServerIndex, dot1xMacAddrAuthSuccess=dot1xMacAddrAuthSuccess, apNativeVlanTable=apNativeVlanTable, rogueApChannelNumber=rogueApChannelNumber, apNativeVlanIfIndex=apNativeVlanIfIndex, apRadioSecurityIndex=apRadioSecurityIndex, apEtherNetConfig=apEtherNetConfig, apSNTPSecondaryServer=apSNTPSecondaryServer, apWMMControlTable=apWMMControlTable, apvAuthenticationSetupTable=apvAuthenticationSetupTable, enterpriseApRadioAvAntennaDesc=enterpriseApRadioAvAntennaDesc, enterpriseApVapRadioTable=enterpriseApVapRadioTable, apSnmpMgnt=apSnmpMgnt, apNotificationTrapObjects=apNotificationTrapObjects, apAuthenticationMode=apAuthenticationMode, apWMMApParamEntry=apWMMApParamEntry, sysSystemDown=sysSystemDown, enterpriseApRadioAvChannelNo=enterpriseApRadioAvChannelNo, apNotificationDot11Station=apNotificationDot11Station, macFilterAllowedToGo=macFilterAllowedToGo, enterpriseApRadioAntennaModeControl=enterpriseApRadioAntennaModeControl, enterpriseApVapRadioState=enterpriseApVapRadioState, qosMACTypeEntry=qosMACTypeEntry, apSyslogServerTable=apSyslogServerTable, rogueApInterval=rogueApInterval, rogueApState=rogueApState, netConfigDefaultGateway=netConfigDefaultGateway, apRadioSecurityEntry=apRadioSecurityEntry, enterpriseApRadioMulticastDataRate=enterpriseApRadioMulticastDataRate, trapDot11StationAssociation=trapDot11StationAssociation, apNotificationTrapTree=apNotificationTrapTree, linkQualityStaMacAddress=linkQualityStaMacAddress, apSyslogServerIPAddress=apSyslogServerIPAddress, enterpriseApVapRadioDefefaultPriority=enterpriseApVapRadioDefefaultPriority, apAdminUsername=apAdminUsername, wdsPeerIndex=wdsPeerIndex, qosMACTypePriority=qosMACTypePriority, apRadioSecurityWPAKeyType=apRadioSecurityWPAKeyType, apWStationSessionLastDisassociatedTime=apWStationSessionLastDisassociatedTime, apvFilterControlIndex=apvFilterControlIndex, apWStationSessionTxPacketCount=apWStationSessionTxPacketCount, iappStationRoamedTo=iappStationRoamedTo, qosEtherTypeHexValue=qosEtherTypeHexValue, apAuthenticationSetupEntry=apAuthenticationSetupEntry, enterpriseApFilterProtocolState=enterpriseApFilterProtocolState, apNotificationObjects=apNotificationObjects, apvAuthenticationSetupEntry=apvAuthenticationSetupEntry, apAuthenticationServer=apAuthenticationServer, trapIappStationRoamedFrom=trapIappStationRoamedFrom, enterpriseApRadioSWRetryMode=enterpriseApRadioSWRetryMode, comPortMgnt=comPortMgnt, apRadioInterfaceMgnt=apRadioInterfaceMgnt, trapSysSystemUp=trapSysSystemUp)
mibBuilder.exportSymbols("CTRON-AP3000-MIB", enterpriseApRadioWdsPeerEntry=enterpriseApRadioWdsPeerEntry, enterpriseApRadioTransmitPower=enterpriseApRadioTransmitPower, apNotificationDot11IpAddress=apNotificationDot11IpAddress, apSNTPDST=apSNTPDST, netConfigHttpsPort=netConfigHttpsPort, qosMACTypeOpeStatus=qosMACTypeOpeStatus, linkQualityMgnt=linkQualityMgnt, apDNSSecondaryServer=apDNSSecondaryServer, ap8021xBroadcastKeyRefreshRate=ap8021xBroadcastKeyRefreshRate, apWStationSessionMgnt=apWStationSessionMgnt, iappContextDataSent=iappContextDataSent, apWMMBssParamTXOPLimit=apWMMBssParamTXOPLimit, trapLocalMacAddrAuthSuccess=trapLocalMacAddrAuthSuccess, apRadioSecurityWPAPSK=apRadioSecurityWPAPSK, apRadioSecurityTable=apRadioSecurityTable, dot11WirelessSTPDetection=dot11WirelessSTPDetection, enterpriseApFilterProtocolIndex=enterpriseApFilterProtocolIndex, linkQualityEntry=linkQualityEntry, apvMacFilterOperateTable=apvMacFilterOperateTable, apvMACAuthenticationTimeout=apvMACAuthenticationTimeout, apRadioSecurityWPACipher=apRadioSecurityWPACipher, apWStationSessionKeyType=apWStationSessionKeyType, apWMMBssParamIndex=apWMMBssParamIndex, enterpriseApRadioAutoChannel=enterpriseApRadioAutoChannel, apSnmpTrapDestinationEntry=apSnmpTrapDestinationEntry, enterpriseApRadioFixedAntennaType=enterpriseApRadioFixedAntennaType, apvMacFilterTable=apvMacFilterTable, sysRadiusServerChanged=sysRadiusServerChanged, apWSLSupportHeartbeatInterval=apWSLSupportHeartbeatInterval, apWStationSessionStationAddres=apWStationSessionStationAddres, apvMACAuthenticationPasswd=apvMACAuthenticationPasswd, apWStationSessionRxPacketCount=apWStationSessionRxPacketCount, wdsPeerRSSI=wdsPeerRSSI, apVLANMgntNativeId=apVLANMgntNativeId, ap8021xSuppIndex=ap8021xSuppIndex, apWStationSessionAssociationId=apWStationSessionAssociationId, rogueApPortNumber=rogueApPortNumber, apWStationSessionIfIndex=apWStationSessionIfIndex, rogueApScanNow=rogueApScanNow, apWStationSessionLastAuthenticatedTime=apWStationSessionLastAuthenticatedTime, apSNTPDSTStartDay=apSNTPDSTStartDay, enterpriseApRadioPreamble=enterpriseApRadioPreamble, apWMMApParamCWmax=apWMMApParamCWmax, enterpriseApFilterControlEthernet=enterpriseApFilterControlEthernet, TruthValue=TruthValue, apv8021xReauthenticationTimeout=apv8021xReauthenticationTimeout, wdsApAckTimeout=wdsApAckTimeout, enterpriseApRadioTurboMode=enterpriseApRadioTurboMode, enterpriseApRadioWEPKeysIndex=enterpriseApRadioWEPKeysIndex, apAuthenticationServerEntry=apAuthenticationServerEntry, apAuthenticationPort=apAuthenticationPort, linkQualityStaIndex=linkQualityStaIndex, qosEtherTypeIndex=qosEtherTypeIndex, apWStationSessionRxByteCount=apWStationSessionRxByteCount, apEtherInterfaceMgnt=apEtherInterfaceMgnt, apLogConfigState=apLogConfigState, trapConfiguration=trapConfiguration, apSecuritySsh=apSecuritySsh, apAuthenticationAcctPort=apAuthenticationAcctPort, swHardwareVer=swHardwareVer, apWStationSessionVlanID=apWStationSessionVlanID, rogueApIndex=rogueApIndex, apSyslogServerPort=apSyslogServerPort, apvMACAuthenticationMode=apvMACAuthenticationMode, enterpriseApRadioWEPKeyLength=enterpriseApRadioWEPKeyLength, apSnmpTrapDestinationCommunity=apSnmpTrapDestinationCommunity, trapDot11StationAuthentication=trapDot11StationAuthentication, apWMMMgnt=apWMMMgnt, enterpriseApRadioEntry=enterpriseApRadioEntry, apv8021xBroadcastKeyRefreshRate=apv8021xBroadcastKeyRefreshRate, qosModeControl=qosModeControl, apWSLSupportControlStatus=apWSLSupportControlStatus, apVLANMgntState=apVLANMgntState, enterpriseApRadioWEPKeyType=enterpriseApRadioWEPKeyType, apWMMBssParamCWmax=apWMMBssParamCWmax, apvMacFilterActivity=apvMacFilterActivity, dot1xMacAddrAuthFail=dot1xMacAddrAuthFail, wdsPeerBssid=wdsPeerBssid, apWStationSessionAssociatedTime=apWStationSessionAssociatedTime, enterpriseApFilterProtocolISODesignator=enterpriseApFilterProtocolISODesignator, apvMacFilterOperateEntry=apvMacFilterOperateEntry, apSNTPTimezone=apSNTPTimezone, apWMMBssParamCWmin=apWMMBssParamCWmin, apSNTPDSTEndMonth=apSNTPDSTEndMonth, qosMACTypeAddress=qosMACTypeAddress, apAuthenticationKey=apAuthenticationKey, apvFilterControlEntry=apvFilterControlEntry, netConfigIPAddress=netConfigIPAddress, apSnmpTrapDestinationState=apSnmpTrapDestinationState, apAuthenticationRetransmit=apAuthenticationRetransmit, apEventLogTable=apEventLogTable, apAuthenticationServerTable=apAuthenticationServerTable, pppLogonFail=pppLogonFail, apAuthenticationAcctInterimUpdate=apAuthenticationAcctInterimUpdate, enterpriseApRadioAvAntennaListTable=enterpriseApRadioAvAntennaListTable, apIappMgnt=apIappMgnt, enterpriseApRadioWdsPeerTable=enterpriseApRadioWdsPeerTable, apSecuritySshServerPort=apSecuritySshServerPort, apSyslogConsoleState=apSyslogConsoleState, qosSVPStatus=qosSVPStatus, apWMMApParamCWmin=apWMMApParamCWmin, trapDot1xAuthNotInitiated=trapDot1xAuthNotInitiated, apWSLSupportHeartbeatLastChange=apWSLSupportHeartbeatLastChange, apSnmpCommunityReadOnly=apSnmpCommunityReadOnly, trapDot1xAuthSuccess=trapDot1xAuthSuccess, mibs=mibs, dot11StationAuthentication=dot11StationAuthentication, ap8021xSuppUser=ap8021xSuppUser, netConfigHttpPort=netConfigHttpPort, ap8021xReauthenticationTimeout=ap8021xReauthenticationTimeout, netConfigSubnetMask=netConfigSubnetMask)
