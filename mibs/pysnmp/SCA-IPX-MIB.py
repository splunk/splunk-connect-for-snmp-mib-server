#
# PySNMP MIB module SCA-IPX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SCA-IPX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:52:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
scanet, = mibBuilder.importSymbols("SCANET-MIB", "scanet")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Gauge32, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, Integer32, NotificationType, ObjectIdentity, MibIdentifier, IpAddress, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "Integer32", "NotificationType", "ObjectIdentity", "MibIdentifier", "IpAddress", "Unsigned32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ipx = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 25))
ipxCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 25, 1))
ipxSAP = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 25, 2))
ipxRIP = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 25, 3))
ipxLink = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 25, 4))
ipxControl = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 25, 5))
ipxCntTxTotal = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxTotal.setStatus('mandatory')
ipxCntTxMcast = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxMcast.setStatus('mandatory')
ipxCntTxBcast = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxBcast.setStatus('mandatory')
ipxCntRxTotal = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntRxTotal.setStatus('mandatory')
ipxCntRxMcast = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntRxMcast.setStatus('mandatory')
ipxCntRxBcast = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntRxBcast.setStatus('mandatory')
ipxCntForward = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntForward.setStatus('mandatory')
ipxCntFiltered = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntFiltered.setStatus('mandatory')
ipxCntLocal = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntLocal.setStatus('mandatory')
ipxCntUnknown = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntUnknown.setStatus('mandatory')
ipxCntDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntDiscarded.setStatus('mandatory')
ipxCntBadChksum = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntBadChksum.setStatus('mandatory')
ipxCntBadLen = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntBadLen.setStatus('mandatory')
ipxCntBadHop = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntBadHop.setStatus('mandatory')
ipxCntNoRoute = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntNoRoute.setStatus('mandatory')
ipxCntTooBig = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTooBig.setStatus('mandatory')
ipxCntRxSapReq = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntRxSapReq.setStatus('mandatory')
ipxRxCntSapRsp = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRxCntSapRsp.setStatus('mandatory')
ipxTxCntSapReq = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxTxCntSapReq.setStatus('mandatory')
ipxCntTxSapRpl = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxSapRpl.setStatus('mandatory')
ipxCntSapInvalid = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntSapInvalid.setStatus('mandatory')
ipxCntRxRipReq = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntRxRipReq.setStatus('mandatory')
ipxCntRxRipRsp = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntRxRipRsp.setStatus('mandatory')
ipxCntTxRipReq = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxRipReq.setStatus('mandatory')
ipxCntTxRipRpl = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxRipRpl.setStatus('mandatory')
ipxCntRipInvalid = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntRipInvalid.setStatus('mandatory')
ipxCntTxFailed = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxFailed.setStatus('mandatory')
ipxCntTxPrefFailed = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxPrefFailed.setStatus('mandatory')
ipxCntRxFiltered = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntRxFiltered.setStatus('mandatory')
ipxCntTxFiltered = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxFiltered.setStatus('mandatory')
ipxCntForwarded = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntForwarded.setStatus('mandatory')
ipxCntCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntCacheHits.setStatus('mandatory')
ipxCntSpoofed = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntSpoofed.setStatus('mandatory')
ipxCntSPXCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntSPXCacheHits.setStatus('mandatory')
ipxCntRxType20 = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntRxType20.setStatus('mandatory')
ipxCntTxType20 = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntTxType20.setStatus('mandatory')
ipxCntType20Disc = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntType20Disc.setStatus('mandatory')
ipxCntConfigTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 1, 38), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCntConfigTimeStamp.setStatus('mandatory')
ipxSAPTable = MibTable((1, 3, 6, 1, 4, 1, 208, 25, 2, 1), )
if mibBuilder.loadTexts: ipxSAPTable.setStatus('mandatory')
ipxSAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 25, 2, 1, 1), ).setIndexNames((0, "SCA-IPX-MIB", "ipxSAPServerNet"), (0, "SCA-IPX-MIB", "ipxSAPServerNode"), (0, "SCA-IPX-MIB", "ipxSAPServerSocket"), (0, "SCA-IPX-MIB", "ipxSAPServerType"))
if mibBuilder.loadTexts: ipxSAPEntry.setStatus('mandatory')
ipxSAPServerNet = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSAPServerNet.setStatus('mandatory')
ipxSAPServerNode = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSAPServerNode.setStatus('mandatory')
ipxSAPServerSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSAPServerSocket.setStatus('mandatory')
ipxSAPServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 71, 72, 73, 74, 75, 76, 77, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 256, 257, 258, 259, 261, 262, 263, 268, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 311, 319, 320, 321, 323, 324, 325, 327, 329, 330, 331, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 392, 393, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441), SingleValueConstraint(443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 541, 546, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 626, 627, 628, 629, 631, 632, 640, 641, 642, 643, 644, 645, 646, 647, 648, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 899, 900, 901, 902, 903, 904, 905, 922, 923, 924, 925, 926, 927), SingleValueConstraint(928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 968, 970, 971, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1128, 1130, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213), SingleValueConstraint(1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1317, 1318, 1319, 1320, 1321, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1497, 1508, 1509, 1510, 1515, 1516, 1517, 1518, 1519, 1522, 1523, 1524, 1525, 1528, 1530, 1539), SingleValueConstraint(1542, 1543, 1544, 1545, 1546, 1548, 1549, 1552, 1553, 1555, 1556, 1557, 1558, 1564, 1565, 1566, 1567, 1568, 1573, 1583, 1590, 1591, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1869, 1870, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1898, 1899, 1901, 1904, 1905, 1907, 1908, 1909, 1915, 1919, 1920, 1921, 1922, 1923, 1931, 1944, 1945, 1946, 1951, 1952, 1959, 1960, 1961, 1964, 1967, 1968, 1971, 1972, 1976, 1978, 1983, 1984, 1985, 1998, 2001, 2002, 2003, 2004, 2009, 2010, 2011, 2012, 2013, 2016, 2017, 2018, 2019, 2020, 2022, 2028, 2029, 2030, 2032, 2034, 2040, 2041, 2044, 2045, 2047, 2049, 2061, 2062, 2064, 2065, 2067, 2068, 2070, 2071, 2072, 2077, 2087, 2089, 2090, 2091, 2095, 2096, 2098, 2099, 2100, 2101, 2102, 2103, 2109, 2110, 2112, 2113, 2124, 2125, 2128, 2131, 2132, 2133, 2136, 2138, 2140, 2143, 2144, 2152, 2153, 2160, 3113, 3114, 3116, 3121, 9100, 9101, 9102, 38432, 65535))).clone(namedValues=NamedValues(("user", 1), ("userGroup", 2), ("printQueue", 3), ("fileServer", 4), ("jobServer5", 5), ("gateway", 6), ("printServer7", 7), ("archiveQueue", 8), ("archiveServer9", 9), ("jobQueue10", 10), ("adminsitration", 11), ("nasSnaGateway", 33), ("companySperryCorpComputerSystems", 34), ("nacs35", 35), ("remoteBridgeServer", 36), ("companyComputerLogics", 38), ("tcpIpGateway39", 39), ("pointPoint", 40), ("multiPoint", 41), ("companyChiCorp", 42), ("companyIntelAmericanFork44", 44), ("timeSynchronizationVap", 45), ("archiveServerSAP", 46), ("advertisingPrintServer", 71), ("tcpIpGateway72", 72), ("companyBusinessRecordsCorp73", 73), ("companyParadataComputerNetworks", 74), ("btriveVAP50", 75), ("sqlVAP", 76), ("xtreeNetworkVersion", 77), ("btriveVAP411", 80), ("macProject", 83), ("valueAddedFileSystem", 84), ("termEmulator", 85), ("stocknetBrokerSapType", 86), ("stocknetExchangerSapType", 87), ("multiPointX25", 88), ("companyBusinessRecordsCorp90", 90), ("companyBusinessRecordsCorp91", 91), ("companyBusinessRecordsCorp92", 92), ("companyBusinessRecordsCorp93", 93), ("companyBusinessRecordsCorp94", 94), ("companyBusinessRecordsCorp95", 95), ("stocknetBrokerStatic", 96), ("stocknetQueueType", 97), ("stocknetPlayerType", 98), ("companyInteractiveFinancialSolInc99", 99), ("companyInteractiveFinancialSolInc100", 100), ("companyInteractiveFinancialSolInc101", 101), ("companyInteractiveFinancialSolInc102", 102), ("companyInteractiveFinancialSolInc103", 103), ("companyInteractiveFinancialSolInc104", 104), ("companyInteractiveFinancialSolInc105", 105), ("companyInteractiveFinancialSolInc106", 106), ("companyInteractiveFinancialSolInc107", 107), ("companyInteractiveFinancialSolInc108", 108), ("stocknetExchangeStatic", 109), ("nacs110", 110), ("mvdFrm111", 111), ("micSnaDfvServer", 112), ("tapeDriveServer", 113), ("wancopyUtility", 114), ("companyNovellProvoCorpHq115", 115), ("companyNovellProvoCorpHq116", 116), ("netwareBtrieve", 117), ("netwareSql", 118), ("companyNovellProvoCorpHq119", 119), ("companyNovellProvoCorpHq120", 120), ("companyNovellProvoCorpHq121", 121), ("tesNetwareVms", 122), ("chgdFrm", 123), ("companyInteractiveFinancialSolInc124", 124), ("companyInteractiveFinancialSolInc125", 125), ("companyInteractiveFinancialSolInc126", 126), ("companyInteractiveFinancialSolInc127", 127), ("companyInteractiveFinancialSolInc128", 128), ("companyInteractiveFinancialSolInc129", 129), ("companyInteractiveFinancialSolInc130", 130), ("companyInteractiveFinancialSolInc131", 131), ("companyInteractiveFinancialSolInc132", 132), ("companyInteractiveFinancialSolInc133", 133), ("companyInteractiveFinancialSolInc134", 134), ("companyInteractiveFinancialSolInc135", 135), ("companyInteractiveFinancialSolInc136", 136), ("companyInteractiveFinancialSolInc137", 137), ("companyInteractiveFinancialSolInc138", 138), ("companyInteractiveFinancialSolInc139", 139), ("companyInteractiveFinancialSolInc140", 140), ("mailServer", 141), ("companyRationalDataSystems142", 142), ("queueTypes", 143), ("tnetX21IdaBridge", 144), ("tnetX21Bridge", 145), ("companyWatcom147", 147), ("silaComSoftware", 148), ("vmsRouterControl", 149), ("companyMicroDataBaseSystems", 150), ("dart", 151), ("netwareAccessServer", 152), ("networkCourier", 153), ("namedPipesServer", 154), ("jobServer155", 155), ("companyRaylynnKnight", 156), ("cq3270Lan", 157), ("unixPortableGroup", 158), ("progressDatabase", 159), ("guptaSqlBaseServer", 160), ("powerchuteVapNlmServerPowerSupply", 161), ("auditorPackage", 162), ("security", 163), ("corelDriverProductUnderNovell386", 164), ("archiveServer165", 165), ("menuProgram166", 166), ("nlm386", 167), ("lan1Router", 168), ("objectType169", 169), ("objectType170", 170), ("idaStatusUtilMvdFrm", 172), ("lanportVirtualExtensionOfPorts", 173), ("companyPeerLogic256", 256), ("r21px", 257), ("companyIntelAmericanFork258", 258), ("sequelnet", 259), ("gatewayToUnisys", 261), ("gatewaysToUnisys", 262), ("netware386", 263), ("net3270", 268), ("sap", 271), ("companyArtefactNetworkSupport", 272), ("printServer274", 274), ("communicationServer275", 275), ("communicationServer276", 276), ("communicationServer277", 277), ("communicationServer278", 278), ("communicationServer279", 279), ("communicationServer280", 280), ("communicationServer281", 281), ("communicationServer282", 282), ("communicationServer283", 283), ("saaDataLinkAgent", 284), ("communicationServer285", 285), ("communicationServer286", 286), ("communicationServer287", 287), ("communicationServer288", 288), ("communicationServer289", 289), ("communicationServer290", 290), ("communicationServer291", 291), ("communicationServer292", 292), ("communicationServer293", 293), ("communicationServer294", 294), ("communicationServer295", 295), ("communicationServer296", 296), ("communicationServer297", 297), ("communicationServer298", 298), ("superSnaAgent", 299), ("communicationServer300", 300), ("communicationsServer301", 301), ("communicationsServer302", 302), ("communicationsServer303", 303), ("communicationsServer304", 304), ("btX25", 306), ("nnsDomain", 307), ("netWare386PrintQueue", 311), ("companyNetworkDesignersLtd", 319), ("networkManagementSystem", 320), ("softwareGmbh", 321), ("cdrom", 323), ("companyNetwiseInc", 324), ("communicationProcessor", 325), ("piggybackLoginNetInc", 327), ("advertisingRemoteServer329", 329), ("id5001WeatherStation", 330), ("companyNovellProvoCorpHq331", 331), ("dcsSystemServer", 337), ("formsCapability340", 340), ("formsCapability341", 341), ("formsCapability342", 342), ("formsCapability343", 343), ("formsCapability344", 344), ("formsCapability345", 345), ("formsCapability346", 346), ("formsCapability347", 347), ("companyNetworkComputingIncNci348", 348), ("companyNetworkComputingIncNci349", 349), ("companyNetworkComputingIncNci350", 350), ("companyNetworkComputingIncNci351", 351), ("companyNetworkComputingIncNci352", 352), ("advertisingRemoteServer353", 353), ("system9354", 354), ("system9355", 355), ("system9356", 356), ("system9357", 357), ("nwManagement", 358), ("pickitCommServer", 360), ("companyPeerLogic361", 361), ("txd", 368), ("lanfaxRedirector", 369), ("fileShare370", 370), ("fileShare371", 371), ("fileShare372", 372), ("fileShare373", 373), ("fileShare374", 374), ("lanwareMvdFrm375", 375), ("lanwareMvdFrm376", 376), ("lanwareMvdFrm377", 377), ("lanwareMvdFrm378", 378), ("lanwareMvdFrm379", 379), ("lanwareMvdFrm380", 380), ("lanwareMvdFrm381", 381), ("lanwareMvdFrm382", 382), ("lanwareMvdFrm383", 383), ("sysmLan2", 392), ("xtreeServrMvdFrm", 393), ("pcMetro398", 398), ("pcMetro399", 399), ("servicePoint400", 400), ("servicePoint401", 401), ("netway2000", 402), ("netwaySna", 403), ("maxway500", 404), ("tcpIpGateway405", 405), ("companyIntegratedTechnologiesInc", 406), ("shareMaster", 407), ("companyZenithDataSystems408", 408), ("companyZenithDataSystems409", 409), ("companyZenithDataSystems410", 410), ("aptNetRemote411", 411), ("aptNetRemote412", 412), ("aptNetRemote413", 413), ("aptNetRemote414", 414), ("mailslotsChgdFrom", 415), ("dbServer", 417), ("spare", 418), ("gatewayCompositePageAndEtcServers419", 419), ("gatewayCompositePageAndEtcServers420", 420), ("gatewayCompositePageAndEtcServers421", 421), ("gatewayCompositePageAndEtcServers422", 422), ("gatewayCompositePageAndEtcServers423", 423), ("gatewayCompositePageAndEtcServers424", 424), ("gatewayCompositePageAndEtcServers425", 425), ("gatewayCompositePageAndEtcServers426", 426), ("gatewayCompositePageAndEtcServers427", 427), ("gatewayCompositePageAndEtcServers428", 428), ("menuProgram429", 429), ("menuProgram430", 430), ("objectTypeForGarpServer", 432), ("licensingRestrictionsBinderyType433", 433), ("licensingRestrictionsBinderyType434", 434), ("companyMediaTouchSystems435", 435), ("networkManagementProduct436", 436), ("networkManagementProduct437", 437), ("networkManagementProduct438", 438), ("networkManagementProduct439", 439), ("networkManagementProduct440", 440), ("companyBonsaiTechnologies441", 441)) + NamedValues(("companyBonsaiTechnologies443", 443), ("companyBonsaiTechnologies444", 444), ("companyBonsaiTechnologies445", 445), ("serverType", 446), ("objectType448", 448), ("objectTypes449", 449), ("objectTypes450", 450), ("objectTypes451", 451), ("objectTypes452", 452), ("objectTypes453", 453), ("distributedApplication", 454), ("binderyType455", 455), ("objectBinderyType", 456), ("objectTypes457", 457), ("objectTypes458", 458), ("companyShivaCorp459", 459), ("companyShivaCorp460", 460), ("companyShivaCorp461", 461), ("companyShivaCorp462", 462), ("eMailQueueObjectType", 463), ("eMailServerObjectType", 464), ("lanlordProduct", 465), ("companyCentersForDiseaseControl", 469), ("onQueueTaskQueue", 470), ("onQueueTaskServer", 471), ("companyCastelleInc472", 472), ("companyCastelleInc473", 473), ("companyCastelleInc474", 474), ("companyCastelleInc475", 475), ("companyCastelleInc476", 476), ("companyCastelleInc477", 477), ("companyCastelleInc478", 478), ("companyCastelleInc479", 479), ("companyCastelleInc480", 480), ("companyCastelleInc481", 481), ("areaCodeAndExchangeLookUpServer", 482), ("sortingServer", 483), ("companyWallData", 484), ("companyRationalDataSystems487", 487), ("companyRationalDataSystems488", 488), ("companyRationalDataSystems489", 489), ("companyRationalDataSystems490", 490), ("companyMediaTouchSystems491", 491), ("companyIntegralisLtd493", 493), ("companyIntegralisLtd494", 494), ("companyFelsinaSoftware", 495), ("companyLegatoSystems496", 496), ("companyLegatoSystems497", 497), ("companyLegatoSystems498", 498), ("companyLegatoSystems499", 499), ("companyLegatoSystems500", 500), ("companyLegatoSystems501", 501), ("companyAndersenConsultingChicago", 502), ("companySytronCorp", 504), ("forUnibaseBvBasedInHolland", 505), ("companyNortheastBroadcastConsultant", 507), ("companyExtendedSystems", 508), ("companyIbmEndicott", 509), ("npSqlServer", 512), ("theMakeServer", 513), ("genericJobServer", 514), ("companyNovellProvoCorpHq516", 516), ("companyNovellProvoCorpHq517", 517), ("companyNovellProvoCorpHq518", 518), ("companyNovellProvoCorpHq519", 519), ("companyNovellProvoCorpHq520", 520), ("companyNovellProvoCorpHq521", 521), ("companyNovellProvoCorpHq522", 522), ("companyNovellProvoCorpHq523", 523), ("companyNovellProvoCorpHq524", 524), ("companyNovellProvoCorpHq525", 525), ("companyNovellProvoCorpHq526", 526), ("companyNovellProvoCorpHq527", 527), ("companyNovellProvoCorpHq528", 528), ("companyNovellProvoCorpHq529", 529), ("companyNovellProvoCorpHq530", 530), ("companyNovellProvoCorpHq531", 531), ("companyNovellProvoCorpHq532", 532), ("companyNovellProvoCorpHq533", 533), ("otMessagingServer", 538), ("homeRouter", 541), ("companyNovellProvo", 546), ("networkManagementAgent563", 563), ("networkManagementInfoServer", 564), ("companyNovellSaltLakeCity", 566), ("netwareManagementLantern567", 567), ("netwareManagementLantern568", 568), ("netwareManagement569", 569), ("netwareManagement570", 570), ("binderyTypeForBroadcast", 571), ("dosTargetServiceAgent", 572), ("smsWorkstationNameObject", 573), ("smsTestingAndDevelopment574", 574), ("smsTestingAndDevelopment575", 575), ("companyNovellSanJose576", 576), ("companyNovellSanJose577", 577), ("companyNovellSanJose578", 578), ("novellMhsDsGatewayForOce", 579), ("ndsGatewayForOce", 580), ("superlabFileDistributionServer", 581), ("versionControlQueue", 582), ("nvtRemoteLoginOverSpx", 583), ("queueServerForIbmPsf2", 584), ("lanternRmon", 585), ("latTransportServiceProvider", 586), ("latSessionManager", 587), ("latNetworkFromNetware", 588), ("addressServer", 589), ("xapiaInterfaceForNw311", 606), ("x400ProtocolAccessModule", 607), ("snadsProtocolAccessModule", 608), ("superlabNetworkSwitchServer", 609), ("hubServices", 610), ("netwareManagementAgent", 611), ("globalMhs", 612), ("snmp", 613), ("versionControlServer", 614), ("applicationRightsProgram", 615), ("companyNovellSanJose616", 616), ("superlabAutomationServer", 617), ("networkManagementServices", 618), ("timeSynchronization", 619), ("advertisingJobServer", 621), ("datalinkSwitchingDlsw", 626), ("nestDevice", 627), ("groupwiseMessageMultipleServers", 628), ("sampleCodeFromDevSupport", 629), ("sapServerType", 631), ("directoryServer", 632), ("companyNovellWalnutCreek", 640), ("domainApplicationServices641", 641), ("domainApplicationServices642", 642), ("domainApplicationServices643", 643), ("domainApplicationServices644", 644), ("domainApplicationServices645", 645), ("domainApplicationServices646", 646), ("domainApplicationServices647", 647), ("domainApplicationServices648", 648), ("companyNovellProvoCorpHq767", 767), ("vapAdvertisingServices768", 768), ("vapAdvertisingServices769", 769), ("vapAdvertisingServices770", 770), ("vapAdvertisingServices771", 771), ("vapAdvertisingServices772", 772), ("vapAdvertisingServices773", 773), ("npsNetwarePrintServices", 774), ("npsSpoolClient", 775), ("hpNsUtil", 776), ("documentManagementPackage", 777), ("bbsServer", 778), ("quickSilver", 780), ("companyAttachmateCorporation", 800), ("companyChicagoResearchAndTrading", 801), ("companyFryeComputerSystems", 802), ("companyWangLaboratories803", 803), ("companyWangLaboratories804", 804), ("x500DsaServer", 805), ("novellRemoteIsdnRouter", 806), ("bootwareMsd", 807), ("companyWatcom808", 808), ("companyAetnaLifeAndCasualty809", 809), ("companyAetnaLifeAndCasualty810", 810), ("faxServer811", 811), ("voiceServer", 812), ("interprocessExchangeServer", 813), ("applicationServer814", 814), ("sasShareServer", 816), ("sasConnect", 817), ("companyArchetype818", 818), ("companyArchetype819", 819), ("companyAetnaLifeAndCasualty820", 820), ("communicationsServer821", 821), ("communicationsServer822", 822), ("companyMageeEnterprisesInc823", 823), ("companyMageeEnterprisesInc824", 824), ("companyMageeEnterprisesInc825", 825), ("companyMageeEnterprisesInc826", 826), ("companyMageeEnterprisesInc827", 827), ("companyMageeEnterprisesInc828", 828), ("companyMageeEnterprisesInc829", 829), ("companyMageeEnterprisesInc830", 830), ("companyMageeEnterprisesInc831", 831), ("companyMageeEnterprisesInc832", 832), ("dataServiceToWorkstationSchoolAdmin", 833), ("binderyType834", 834), ("binderyType835", 835), ("binderyType836", 836), ("binderyType837", 837), ("binderyType838", 838), ("binderyType839", 839), ("binderyType840", 840), ("binderyType841", 841), ("companyPreferredSystemsInc842", 842), ("companyPreferredSystemsInc843", 843), ("companyPreferredSystemsInc844", 844), ("companyPreferredSystemsInc845", 845), ("companyPreferredSystemsInc846", 846), ("companyPreferredSystemsInc847", 847), ("companyPreferredSystemsInc848", 848), ("companyPreferredSystemsInc849", 849), ("binderyType850", 850), ("binderyType851", 851), ("binderyType852", 852), ("companyArcadaSoftware", 853), ("companyLanovation854", 854), ("companyLanovation855", 855), ("binderyObjectType", 856), ("companyMbac", 858), ("rightHandManEMailSchedulingPkg", 859), ("faxServer860", 860), ("faxPrintServer", 861), ("faxMergeServer", 862), ("networkManagementServer", 863), ("objectType864", 864), ("printServerLaserJet", 867), ("serverTypeForLanTimesJapanArticle", 868), ("queueTypeForLanTimesJapanArticle", 869), ("mgateCommunicationGatewayLansVax", 870), ("companyExcaliburTechnologiesCorp871", 871), ("companyExcaliburTechnologiesCorp872", 872), ("companyExcaliburTechnologiesCorp873", 873), ("companyExcaliburTechnologiesCorp874", 874), ("binderyType875", 875), ("ipxLayerPeerToPeerCommunications", 876), ("companyMicroIntegration", 877), ("nlmServer878", 878), ("binderyType879", 879), ("companyDigitalEquipmentMerrimack", 882), ("nlmAdvertisingForUpsInfo883", 883), ("sharewareCommunicationsServer", 884), ("enterpriseEcs", 885), ("enterpriseInitializationMode", 886), ("commSvrNetBiosIpxMvdFrm273411", 887), ("nlmAdvertisingForUpsInfo888", 888), ("faxServer889", 889), ("faxServer890", 890), ("faxServer891", 891), ("faxServer892", 892), ("gatewayManagement", 893), ("powerchuteAlertUpsMonitoring", 894), ("mvdFrm895", 895), ("faxServer896", 896), ("powerchuteAdministrative", 899), ("sequelLinkClientServerMiddleware", 900), ("mailSystems", 901), ("hewlettPackardBridges", 902), ("hewlettPackardHubs", 903), ("workstationPeerToPeerCommunications", 904), ("companyDatanexCorporation", 905), ("hpOpenMailAndPortableNetware", 922), ("companyIrisAssociates", 923), ("communicationsServerBindery", 924), ("communicationsServerSap", 925), ("faxServer926", 926), ("companyComputervisionServices", 927)) + NamedValues(("binderyTypeForCdServer", 928), ("companyNeumeierAndWalchSystemtechnik", 929), ("companyHyprotechLtd", 930), ("companyKyoceraCorpYohagaOffice931", 931), ("companyKyoceraCorpYohagaOffice932", 932), ("companyKyoceraCorpYohagaOffice933", 933), ("companyKyoceraCorpYohagaOffice934", 934), ("objectTypeForAGroup", 935), ("objectTypeForAQueue", 936), ("objectTypeForAServer", 937), ("companyUdsMotorola938", 938), ("companyUdsMotorola939", 939), ("companyUdsMotorola940", 940), ("companyUdsMotorola941", 941), ("companyRaimaCorp", 942), ("copyProtectionServer", 943), ("tnaCommunicationWith2NlmS", 944), ("ethernetLanControllerForNetware", 945), ("serverIdForNlm", 946), ("fileManagementServices", 947), ("queueManagementServices", 948), ("objectType949", 949), ("companyLantechServices", 950), ("modemProtocallSharingSerialPorts", 952), ("globalInfoApplicationExecEnvironment", 953), ("magixDatabaseServer", 954), ("performanceMonitor", 955), ("netportAdvertising956", 956), ("wanConnectionServer", 957), ("wicat", 958), ("wicatServer", 959), ("embeddedInOemPlotterProduct960", 960), ("embeddedInOemPlotterProduct961", 961), ("embeddedInOemPlotterProduct962", 962), ("embeddedInOemPlotterProduct963", 963), ("arcServe40", 964), ("lanSpool35", 967), ("networkManagement", 968), ("pointOfSaleServer", 970), ("softwareAccessControlServer", 971), ("databaseEngine", 975), ("reportEngine", 976), ("jobServer977", 977), ("objectType978", 978), ("objectType979", 979), ("visinetNlmId", 980), ("printServers981", 981), ("printServers982", 982), ("printServers983", 983), ("printServers984", 984), ("serverMonitoringProgram", 985), ("multipleServicesAndApplications986", 986), ("multipleServicesAndApplications987", 987), ("multipleServicesAndApplications988", 988), ("developingServerPerformanceAnalizer", 989), ("guptaSequelBaseServer", 990), ("remoteDatabaseServices", 991), ("objectStoreServer", 992), ("univelServerType993", 993), ("univelServerType994", 994), ("univelServerType995", 995), ("univelServerType996", 996), ("univelServerType997", 997), ("univelServerType998", 998), ("univelServerType999", 999), ("univelServerType1000", 1000), ("univelServerType1001", 1001), ("univelServerType1002", 1002), ("univelServerType1003", 1003), ("univelServerType1004", 1004), ("univelServerType1005", 1005), ("univelServerType1006", 1006), ("univelServerType1007", 1007), ("univelServerType1008", 1008), ("firstCall", 1009), ("vitalSignsLanServer", 1011), ("laaServerBindery", 1012), ("microsoftSqlServerIpxSpxSupport", 1013), ("asynchronousSerialCommunications1014", 1014), ("asynchronousSerialCommunications1015", 1015), ("asynchronousSerialCommunications1016", 1016), ("asynchronousSerialCommunications1017", 1017), ("watsonCommunicationsServer", 1018), ("netportAdvertising1019", 1019), ("netportAdvertising1020", 1020), ("netportAdvertising1021", 1021), ("netportAdvertising1022", 1022), ("companyModularSoftwareCorporation", 1023), ("binderyObjectTypes1024", 1024), ("binderyObjectTypes1025", 1025), ("binderyObjectTypes1026", 1026), ("binderyObjectTypes1027", 1027), ("binderyObjectTypes1028", 1028), ("binderyObjectTypes1029", 1029), ("binderyObjectTypes1030", 1030), ("binderyObjectTypes1031", 1031), ("binderyObjectTypes1032", 1032), ("binderyObjectTypes1033", 1033), ("imageApplication1034", 1034), ("imageApplication1035", 1035), ("imageApplication1036", 1036), ("imageApplication1037", 1037), ("imageApplication1038", 1038), ("imageApplication1039", 1039), ("imageApplication1040", 1040), ("imageApplication1041", 1041), ("imageApplication1042", 1042), ("imageApplication1043", 1043), ("netsprint", 1044), ("remoteDatabaseServicesBindery", 1045), ("dealingRoomServers1046", 1046), ("dealingRoomServers1047", 1047), ("dealingRoomServers1048", 1048), ("dealingRoomServers1049", 1049), ("dealingRoomServers1050", 1050), ("dealingRoomServers1051", 1051), ("dealingRoomServers1052", 1052), ("dealingRoomServers1053", 1053), ("dealingRoomServers1054", 1054), ("dealingRoomServers1055", 1055), ("dealingRoomServers1056", 1056), ("dealingRoomServers1057", 1057), ("dealingRoomServers1058", 1058), ("dealingRoomServers1059", 1059), ("dealingRoomServers1060", 1060), ("dealingRoomServers1061", 1061), ("dealingRoomServers1062", 1062), ("dealingRoomServers1063", 1063), ("dealingRoomServers1064", 1064), ("dealingRoomServers1065", 1065), ("fullTextRetrievalClientServerDbEng", 1066), ("gatewaySoftware1067", 1067), ("gatewaySoftware1068", 1068), ("clientServerDriverForIpxSpx", 1069), ("companyIntrakInc", 1070), ("loaderBinderyType", 1071), ("finderBinderyType", 1072), ("filemakerPro", 1074), ("networkingHub", 1075), ("networkTerminalEmulator", 1076), ("administrationServer", 1077), ("networkDynamicDataExchange", 1078), ("asynchCommSvrMvdFrm", 1079), ("backUpProduct1080", 1080), ("backUpProduct1081", 1081), ("miscellaneousSoftwareCommunications", 1082), ("enterpriseInMaintenanceMode", 1083), ("connectionStationServiceType1084", 1084), ("connectionStationServiceType1085", 1085), ("connectionStationServiceType1086", 1086), ("connectionStationServiceType1087", 1087), ("connectionStationServiceType1088", 1088), ("connectionStationServiceType1089", 1089), ("connectionStationServiceType1090", 1090), ("connectionStationServiceType1091", 1091), ("snaGateway", 1092), ("workstationTerminalAccess", 1093), ("companyDeInternationalLtd", 1094), ("distributiveCacheProduct", 1095), ("ibmHostGateway", 1101), ("projectId", 1102), ("commonCommunicationInterface", 1103), ("communicationsServerSddSynthesizer", 1104), ("tapeBackUpForNlmApplications1105", 1105), ("tapeBackUpForNlmApplications1106", 1106), ("tapeBackUpForNlmApplications1107", 1107), ("tapeBackUpForNlmApplications1108", 1108), ("tapeBackUpForNlmApplications1109", 1109), ("tapeBackUpForNlmApplications1110", 1110), ("canonPeripheralServer", 1111), ("netwareServerProduct", 1112), ("objectOrientedDatabaseSystem", 1113), ("qmsPrinterRemoteConfiguration", 1114), ("clientServerMonitoringUtility", 1115), ("binderyTypeApplicationDefinition", 1116), ("faxServer1117", 1117), ("faxServer1118", 1118), ("faxServer1119", 1119), ("faxServer1120", 1120), ("communicationsGatewayOsi", 1121), ("communicationsGatewaySna", 1122), ("batchfilerApplication", 1124), ("nlmOnFileServer", 1125), ("timeSynchronizationServer", 1126), ("telephoneAnsweringSystem", 1128), ("faxServer1130", 1130), ("measureserversAndMeasureclients", 1136), ("diskMonitor", 1137), ("enterpriseNetworkServices", 1138), ("sybaseSqlServer", 1140), ("sybaseSqlServerConsole", 1141), ("sybaseSqlServerMonitor", 1142), ("sybaseSqlServerBackUp", 1143), ("sybaseOpenServer", 1144), ("sybaseOpenServerConsole", 1145), ("remotePrinterConsole", 1148), ("autoOnOffControlNlm", 1149), ("ascomFaxServer", 1150), ("ascomAdvertisingFaxServer", 1151), ("ascomFaxQueue", 1152), ("jobServer1153", 1153), ("jobQueue1154", 1154), ("finance", 1155), ("forcasting", 1156), ("schema", 1157), ("failSafeAnalysis", 1158), ("companyThinkSystemsCorp", 1159), ("communicationBetweenClientAndServer", 1160), ("storeNameOfSpecialFileOnFileserver", 1161), ("mainNlmServerForCalendarManager", 1162), ("arrayMonitorServer", 1163), ("documentProcessingServerNlm1164", 1164), ("documentProcessingServerNlm1165", 1165), ("documentProcessingServerNlm1166", 1166), ("documentProcessingServerNlm1167", 1167), ("powerProductForFileServer", 1168), ("netblazerCommunicationServer", 1169), ("remoteBackUpDevice", 1173), ("sqlServerIpxSpxHiddenServer", 1174), ("databaseLockServer", 1175), ("meterServer", 1176), ("lancorpEoms", 1177), ("bullHnSdm", 1178), ("networkManagementAgent1179", 1179), ("icotSnaGateway", 1180), ("softwareNlmMvdFrm0086794", 1181), ("internetGateway", 1182), ("emailAndCalendaringCommunicationServer", 1183), ("automationInformationRouter", 1185), ("xbaseRecordEngine", 1186), ("remoteProcedureCallSystem", 1187), ("delvryOfValuableInfoWUsageTracking", 1188), ("remoteAccessServer1189", 1189), ("binderyForProgramMeteringDatabase", 1190), ("ltAuditor400Plus", 1191), ("binderyService1192", 1192), ("binderyService1193", 1193), ("sapService1194", 1194), ("sapService1195", 1195), ("calendarServer1196", 1196), ("ledServer", 1198), ("cdnetServer", 1200), ("policyEngine1201", 1201), ("policyEngine1202", 1202), ("policyEngine1203", 1203), ("policyEngine1204", 1204), ("policyEngine1205", 1205), ("policyEngine1206", 1206), ("lanAssistPlusRemoteControl1207", 1207), ("lanAssistPlusRemoteControl1208", 1208), ("lanAssistPlusRemoteControl1209", 1209), ("lanAssistPlusRemoteControl1210", 1210), ("mapAssistPeerToPeer1211", 1211), ("mapAssistPeerToPeer1212", 1212), ("mapAssistPeerToPeer1213", 1213)) + NamedValues(("mapAssistPeerToPeer1214", 1214), ("jetnetDriverForNovellIpxProtocols", 1215), ("databaseServerRunningAsNlm", 1216), ("asynchronousCommunicationsServers", 1217), ("databaseServer1218", 1218), ("taurusDatabaseServer", 1219), ("taurusSerialServer", 1220), ("casperQueue", 1221), ("casperGhost", 1222), ("conferencingService", 1223), ("mailSystemQueueService", 1224), ("videoServer", 1225), ("messageExpressProduct", 1226), ("cdRomServer", 1227), ("costRecoveryServer", 1228), ("pcBasedSnaGateway", 1229), ("userRestrictions1231", 1231), ("userRestrictions1232", 1232), ("sapAdvertisingOnPrintServer", 1233), ("otEllipseServer", 1234), ("asynchronousAccessServer", 1235), ("enterpriseDescriptionObject", 1236), ("printServer1237", 1237), ("cubixQlServer", 1239), ("cubixQlClient", 1240), ("jobServer1241", 1241), ("communicationServer1242", 1242), ("communicationServer1243", 1243), ("communicationServer1244", 1244), ("communicationServer1245", 1245), ("communicationServer1246", 1246), ("communicationServer1247", 1247), ("communicationServer1248", 1248), ("communicationServer1249", 1249), ("communicationServer1250", 1250), ("communicationServer1251", 1251), ("communicationServer1252", 1252), ("communicationServer1253", 1253), ("communicationServer1254", 1254), ("communicationServer1255", 1255), ("communicationServer1256", 1256), ("communicationServer1257", 1257), ("communicationServer1258", 1258), ("communicationServer1259", 1259), ("communicationServer1260", 1260), ("communicationServer1261", 1261), ("remoteAccessServer1262", 1262), ("statisticManagement1263", 1263), ("statisticManagement1264", 1264), ("remoteControlSoftware1265", 1265), ("remoteControlSoftware1266", 1266), ("companyMultitech", 1267), ("netlynxCommunicationServer1268", 1268), ("netlynxCommunicationServer1269", 1269), ("netlynxCommunicationServer1270", 1270), ("netlynxCommunicationServer1271", 1271), ("netlynxCommunicationServer1272", 1272), ("netlynxCommunicationServer1273", 1273), ("netlynxCommunicationServer1274", 1274), ("netlynxCommunicationServer1275", 1275), ("netlynxCommunicationServer1276", 1276), ("netlynxCommunicationServer1277", 1277), ("netlynxCommunicationServer1278", 1278), ("netlynxCommunicationServer1279", 1279), ("netlynxCommunicationServer1280", 1280), ("netlynxCommunicationServer1281", 1281), ("netlynxCommunicationServer1282", 1282), ("netlynxCommunicationServer1283", 1283), ("deskviewXBinderyType", 1284), ("printServerAddOn", 1285), ("indexSequentialAccessNlm", 1286), ("associativeIndexServer", 1287), ("netscribeServer", 1288), ("printServerForRemoteWorkstations", 1289), ("netmagicBinderyId", 1290), ("financialMarketInformationServer", 1291), ("networkModem1292", 1292), ("networkModem1293", 1293), ("documentManagementService", 1294), ("imageManagementService", 1295), ("massStorageService", 1296), ("databaseServer1297", 1297), ("teliLinkVoiceServer", 1298), ("printServer1299", 1299), ("hubAgent10121300", 1300), ("hubAgent10121301", 1301), ("hubAgent10121302", 1302), ("hubAgent10121303", 1303), ("hubAgent10121304", 1304), ("hubAgent10121305", 1305), ("hubAgent10121306", 1306), ("hubAgent10121307", 1307), ("hubAgent10121308", 1308), ("hubAgent10121309", 1309), ("advertisingNetworkModems", 1310), ("applicationPrograms", 1311), ("bloombergAudioServer", 1312), ("bloombergProcessServer", 1313), ("netModemServer", 1314), ("agentForHubManagement", 1317), ("namedPipeCommunicationsService", 1318), ("printServerRemotePrinter", 1319), ("printServer1320", 1320), ("interserverFileCopying", 1321), ("faxAndVoiceServer", 1322), ("remoteLoginTerminal", 1324), ("applicationServer1325", 1325), ("otBloomberg", 1326), ("microcomRemoteAccessServer", 1327), ("remarkVoiceServer", 1328), ("ipxCommunicationServer", 1329), ("accessServerForModemSharing", 1330), ("gatewayBetweenNetworkAndVisaPosPort", 1331), ("deviceLocationViaRemoteConfigTool1332", 1332), ("deviceLocationViaRemoteConfigTool1333", 1333), ("deviceLocationViaRemoteConfigTool1334", 1334), ("deviceLocationViaRemoteConfigTool1335", 1335), ("deviceLocationViaRemoteConfigTool1336", 1336), ("deviceLocationViaRemoteConfigTool1337", 1337), ("deviceLocationViaRemoteConfigTool1338", 1338), ("deviceLocationViaRemoteConfigTool1339", 1339), ("deviceLocationViaRemoteConfigTool1340", 1340), ("deviceLocationViaRemoteConfigTool1341", 1341), ("remotedSmsServer", 1342), ("listenerNetware", 1343), ("listenerDos", 1344), ("listenerWindows", 1345), ("listenerOs2", 1346), ("listenerMac", 1347), ("listenerUnix", 1348), ("techraClientServerRdbms", 1349), ("docraClientServerDocMgmtSystem", 1350), ("voiceFaxRespondingMachine", 1351), ("i4LsNamingService", 1352), ("tnsiNetworkUtilities", 1353), ("rm3Configuration", 1354), ("snmpConfiguration", 1355), ("imagesolveOfs", 1357), ("districtCommunicationGateway", 1358), ("districtLink", 1359), ("edmClientPc", 1360), ("printersPlottersAndRouters", 1365), ("faxServices1366", 1366), ("faxServices1367", 1367), ("faxServices1368", 1368), ("atAndTJointVentureTelephonyServer1369", 1369), ("atAndTJointVentureTelephonyServer1370", 1370), ("atAndTJointVentureTelephonyServer1371", 1371), ("atAndTJointVentureTelephonyServer1372", 1372), ("hostviewUtility", 1373), ("printServer1374", 1374), ("printServer1375", 1375), ("printServer1376", 1376), ("printServer1377", 1377), ("statisticsGatheringAgent", 1378), ("erlDatabaseServer", 1379), ("erlDirectoryServer", 1380), ("newswireNotification", 1381), ("ziffProprietaryServices", 1382), ("timeServerNlm", 1383), ("xBaseDatabaseServer", 1384), ("advertisingMediaDbServer", 1385), ("oemRemoteAccessForEthernet", 1386), ("oemRemoteAccessForTokenring", 1387), ("integratedRemoteAccessForEthernet", 1388), ("integratedRemoteAccessForTokenring", 1389), ("medStationServer", 1391), ("telnetIpxRouter", 1392), ("nlmServer1393", 1393), ("advertisingNetmodemServer", 1394), ("satelliteConnections", 1395), ("lanCdServer", 1396), ("peerCommunicationsTool", 1398), ("communicationServer1399", 1399), ("modemSharingSoftware", 1400), ("hopsDatabaseServer", 1401), ("datafileAccessHandler", 1402), ("novusGatewayProduct", 1403), ("lgs", 1404), ("lgsPft", 1405), ("lgsPps", 1406), ("tn3270Gateway", 1407), ("mcafeeVirusPatternServer", 1408), ("opticalServer", 1409), ("prorideX500LdapSupport", 1410), ("netTraxAlarmMonitor", 1411), ("netTraxFileServerAgent", 1412), ("netTraxWorkstationAgent", 1413), ("netTraxBridgeAgent", 1414), ("teamOfficeProduct", 1415), ("hyperdeskDistributeObjectMgmtSystem", 1417), ("hyperdeskDatabaseType", 1418), ("tcpSuperlatHostPrintSap", 1419), ("ocsSafeserver", 1420), ("jukeboxUserGroup", 1421), ("fullScreenLogin", 1422), ("meetingSpaceServer", 1423), ("lanProductServer", 1424), ("cbtServer", 1425), ("netTuneService", 1426), ("printServer1427", 1427), ("remotePrinter", 1428), ("slathpStatusNlm", 1429), ("ipxNamedPipesCommunicationService", 1431), ("appmeterForSuites", 1432), ("serverlog", 1436), ("serviceLocationProtocol", 1440), ("nmsIcons1441", 1441), ("nmsIcons1442", 1442), ("nmsIcons1443", 1443), ("nmsIcons1444", 1444), ("nmsIcons1445", 1445), ("nmsIcons1446", 1446), ("nmsIcons1447", 1447), ("nmsIcons1448", 1448), ("nmsIcons1449", 1449), ("nmsIcons1450", 1450), ("nmsIcons1451", 1451), ("nmsIcons1452", 1452), ("nmsIcons1453", 1453), ("nmsIcons1454", 1454), ("nmsIcons1455", 1455), ("nmsIcons1456", 1456), ("nmsIcons1457", 1457), ("nmsIcons1458", 1458), ("multiSystemManagerNetviewInterface", 1459), ("onlineTransactionTransportationSystem", 1460), ("datastarNlm", 1462), ("dsLccLogicalLinkController", 1463), ("databaseManagementServices", 1464), ("distributionServicesDiscovery", 1465), ("managingHardwareRouters", 1466), ("calendarServer1472", 1472), ("networkManagementApplication1473", 1473), ("networkManagementApplication1474", 1474), ("networkManagementApplication1475", 1475), ("networkManagementApplication1476", 1476), ("networkManagementApplication1477", 1477), ("networkManagementApplication1478", 1478), ("ethernetManagedStackableHub", 1497), ("filenetNetworkClearinghouse", 1508), ("hpcsDataBasedProducts", 1509), ("astSnmpInstrumentedServer", 1510), ("officeExtendServer", 1515), ("windowsNtNamedPipeServer", 1516), ("gatewayServer", 1517), ("binderyFile", 1518), ("faxWorkstationObject", 1519), ("routerAdministrationServer", 1522), ("clientServerArrayMonitorProgram", 1523), ("evergreenManagementAgent", 1524), ("windowsBulletinBoardSystem", 1525), ("upsSnmpMonitorNlm", 1528), ("goodallVirtualProtocolAdaptor", 1530), ("timeCardServer", 1539)) + NamedValues(("imageServerAddressLookUp", 1542), ("artsRlogindServer", 1543), ("artsGenericServer", 1544), ("artsRuupdAreYouUpDaemon", 1545), ("moneyCenterDataServer", 1546), ("axisPrinterServer", 1548), ("unixMailServer", 1549), ("scsiManagement", 1552), ("stealthEventCaptureEngine", 1553), ("universalDataTransporter", 1555), ("communicationSoftwareNlm1556", 1556), ("communicationSoftwareNlm1557", 1557), ("faxGatewayServer", 1558), ("printServer1564", 1564), ("printServer1565", 1565), ("printServer1566", 1566), ("printServer1567", 1567), ("printServer1568", 1568), ("setupManagerAccessControl", 1573), ("meteringProgram", 1583), ("cometTerminalServer", 1590), ("cometFileServer", 1591), ("connectDirectNlmServer1853", 1853), ("connectDirectNlmServer1854", 1854), ("connectDirectNlmServer1855", 1855), ("connectDirectNlmServer1856", 1856), ("connectDirectNlmServer1857", 1857), ("connectDirectNlmServer1858", 1858), ("maxserv3270", 1859), ("maxservPrice", 1860), ("maxservMail", 1861), ("maxservMacs", 1862), ("maxservReserved1863", 1863), ("maxservReserved1864", 1864), ("taskingIpxLwsiGateway", 1865), ("nlmApplications1869", 1869), ("nlmApplications1870", 1870), ("nlmApplications1871", 1871), ("nlmApplications1872", 1872), ("stpProtocolServiceAgentCsaFtp", 1875), ("indFileFileTranasferAgtCsaIndfile", 1876), ("allKalpanaSwitches", 1877), ("chatServer", 1878), ("titaniumDatabaseEngine", 1879), ("tcsCommunicationServer", 1880), ("pcCommunicationPartnerSap1881", 1881), ("pcCommunicationPartnerSap1882", 1882), ("pcCommunicationPartnerBindery", 1883), ("dpcServerSap", 1884), ("dpcServerBindery", 1885), ("camHost", 1886), ("serverMnitoringApplication", 1887), ("alarmManagerNlm", 1898), ("eventManagerNlm", 1899), ("desktopManagementNlm", 1901), ("realTimeIntegrationServices", 1904), ("landeepServerMonitor", 1905), ("hitecsoftApiManager", 1907), ("hitecsoftPublicLibrary", 1908), ("hitecsoftPhoneServer", 1909), ("advantageXBaseServer", 1915), ("securityAuditor", 1919), ("uOfWisconsinUtilities1920", 1920), ("uOfWisconsinUtilities1921", 1921), ("uOfWisconsinUtilities1922", 1922), ("uOfWisconsinUtilities1923", 1923), ("aNonNamePipePipeServer", 1931), ("nethopperRouter", 1944), ("nethopperClientRouter", 1945), ("nethopperClient", 1946), ("timbuktuAddressResolutions", 1951), ("remoteAccessServer1952", 1952), ("backupExecJobQueue", 1959), ("backupExecJobManager", 1960), ("backupExecJobService", 1961), ("serviceNwConnectPwServer", 1964), ("siteMeterServer", 1967), ("proxyAgentSiteMter", 1968), ("discDisasterRecoverySWScheduler", 1971), ("cubixCommServer", 1972), ("identifyServerVendorForNms", 1976), ("fileTransferBetweenLanMainframe", 1978), ("databaseServer1983", 1983), ("applicationAdvertisement", 1984), ("internetAppsOnNwPcs", 1985), ("computerSupportedTelephonyApps", 1998), ("aSynchronousCommunication", 2001), ("rmAuditorMonitoringNwUsage", 2002), ("genericNwManagementProduct", 2003), ("scsiMngmt", 2004), ("distribtionJobServer", 2009), ("distributionQue", 2010), ("distributionFeedbackJobServer", 2011), ("voiceProcessingServer", 2012), ("telephonyServerMonitor", 2013), ("printServer2016", 2016), ("boxRouterSupportingIpIpxAndAppleT", 2017), ("telServe", 2018), ("telemarketingLibrary", 2019), ("multiServerMetoring", 2020), ("stressMagicInstallationUtilityHandle", 2022), ("financialDataServer", 2028), ("isdnSoftwareSharingOfIsdnBoards", 2029), ("comgateCommGatewayForIbmAs400", 2030), ("zipCodeServer", 2032), ("nortonAntiVirusClientServerComm", 2034), ("softwareEntertainment", 2040), ("remoteManagementOfRemoteAccessServ", 2041), ("ftmanagerControlsNetwareServer", 2044), ("sapForAudittrackVs20", 2045), ("softTubAgentProxyForTriComAdaptor", 2047), ("sapForOnguard", 2049), ("ifonyFlowForNetware", 2061), ("printServerForNw3X", 2062), ("elanLicenseServerDemo", 2064), ("elanLicenseServer", 2065), ("bvncsEnterpriseWan", 2067), ("evergreenWindcapManagementAgent", 2068), ("policyEngine2070", 2070), ("policyEngine2071", 2071), ("policyEngine2072", 2072), ("offLineCopying", 2077), ("palindromeServiceBroker", 2087), ("lanLensServer", 2089), ("lanLensProbe", 2090), ("jobQueue2091", 2091), ("dbServer3X", 2095), ("pin64", 2096), ("appmeter2LicensingProduct", 2098), ("communicationServer2099", 2099), ("ftanalyzer", 2100), ("instantInternet", 2101), ("highSpeedCommunicationServer", 2102), ("atlanta3PrintServer", 2103), ("applicationServerForNt", 2109), ("customAuthenticationLoadBalancing", 2110), ("ipToIpxGateway", 2112), ("rdb7000", 2113), ("boxTypeHdwrRouterSupptsAppletalk", 2124), ("snapInToolForNms", 2125), ("aplinkterm", 2128), ("aplinkgate", 2131), ("automationProtocolServer", 2132), ("tapeIdServer", 2133), ("netwareToInternetGateway", 2136), ("rdb7000ServerForNw", 2138), ("dbExpress", 2140), ("agentRouterProxy", 2143), ("catalogServer", 2144), ("soundbyteServer", 2152), ("peerToPeerFileRedirection", 2153), ("dpsSv", 2160), ("licenseProfile", 3113), ("virusFileList", 3114), ("globalLicenseSap", 3116), ("licenseReportDefinition", 3121), ("meetingMakerXp", 9100), ("nlm9101", 9101), ("nlm9102", 9102), ("licenseProfileAdministrator", 38432), ("allTypes", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSAPServerType.setStatus('mandatory')
ipxSAPServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSAPServerName.setStatus('mandatory')
ipxSAPhops = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSAPhops.setStatus('mandatory')
ipxRIPTable = MibTable((1, 3, 6, 1, 4, 1, 208, 25, 3, 1), )
if mibBuilder.loadTexts: ipxRIPTable.setStatus('mandatory')
ipxRIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 25, 3, 1, 1), ).setIndexNames((0, "SCA-IPX-MIB", "ipxRIPnet"))
if mibBuilder.loadTexts: ipxRIPEntry.setStatus('mandatory')
ipxRIPnet = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRIPnet.setStatus('mandatory')
ipxRIPRouterNet = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRIPRouterNet.setStatus('mandatory')
ipxRIPRouterNode = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRIPRouterNode.setStatus('mandatory')
ipxRIPRouterSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRIPRouterSocket.setStatus('mandatory')
ipxRIPhops = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRIPhops.setStatus('mandatory')
ipxRIPdelay = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRIPdelay.setStatus('mandatory')
ipxLinkTable = MibTable((1, 3, 6, 1, 4, 1, 208, 25, 4, 1), )
if mibBuilder.loadTexts: ipxLinkTable.setStatus('mandatory')
ipxLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1), ).setIndexNames((0, "SCA-IPX-MIB", "ipxLinkNet"), (0, "SCA-IPX-MIB", "ipxLinkIndex"))
if mibBuilder.loadTexts: ipxLinkEntry.setStatus('mandatory')
ipxLinkNet = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkNet.setStatus('mandatory')
ipxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkIndex.setStatus('mandatory')
ipxLinkFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 16))).clone(namedValues=NamedValues(("type", 1), ("ieee8022", 2), ("snap", 4), ("ieee8023", 5), ("wan", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkFrameType.setStatus('mandatory')
ipxLinkFrameParam = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkFrameParam.setStatus('mandatory')
ipxLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkState.setStatus('mandatory')
ipxLinkRIPTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 6), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkRIPTimer.setStatus('mandatory')
ipxLinkRIPTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRIPTrigger.setStatus('mandatory')
ipxLinkSAPTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 8), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkSAPTimer.setStatus('mandatory')
ipxLinkSAPTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkSAPTrigger.setStatus('mandatory')
ipxLinkCntTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxTotal.setStatus('mandatory')
ipxLinkCntTxMcast = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxMcast.setStatus('mandatory')
ipxLinkCntTxBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxBcast.setStatus('mandatory')
ipxLinkCntRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxTotal.setStatus('mandatory')
ipxLinkCntRxMcast = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxMcast.setStatus('mandatory')
ipxLinkCntRxBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxBcast.setStatus('mandatory')
ipxLinkCntForward = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntForward.setStatus('mandatory')
ipxLinkCntFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntFiltered.setStatus('mandatory')
ipxLinkCntLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntLocal.setStatus('mandatory')
ipxLinkCntUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntUnknown.setStatus('mandatory')
ipxLinkCntDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntDiscarded.setStatus('mandatory')
ipxLinkCntBadChksum = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntBadChksum.setStatus('mandatory')
ipxLinkCntBadLen = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntBadLen.setStatus('mandatory')
ipxLinkCntBadHop = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntBadHop.setStatus('mandatory')
ipxLinkCntNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntNoRoute.setStatus('mandatory')
ipxLinkCntTooBig = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTooBig.setStatus('mandatory')
ipxLinkCntRxSapReq = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxSapReq.setStatus('mandatory')
ipxLinkCntRxSapRsp = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxSapRsp.setStatus('mandatory')
ipxLinkCntTxSapReq = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxSapReq.setStatus('mandatory')
ipxLinkCntTxSapRpl = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxSapRpl.setStatus('mandatory')
ipxLinkCntSapInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntSapInvalid.setStatus('mandatory')
ipxLinkCntRxRipReq = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxRipReq.setStatus('mandatory')
ipxLinkCntRxRipRsp = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxRipRsp.setStatus('mandatory')
ipxLinkCntTxRipReq = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxRipReq.setStatus('mandatory')
ipxLinkCntTxRipRpl = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxRipRpl.setStatus('mandatory')
ipxLinkCntRipInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRipInvalid.setStatus('mandatory')
ipxLinkTxFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxFailed.setStatus('mandatory')
ipxLinkTxPrefFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxPrefFailed.setStatus('mandatory')
ipxLinkRxFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRxFiltered.setStatus('mandatory')
ipxLinkTxFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxFiltered.setStatus('mandatory')
ipxLinkForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkForwarded.setStatus('mandatory')
ipxLinkCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCacheHits.setStatus('mandatory')
ipxLinkSpoofed = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkSpoofed.setStatus('mandatory')
ipxLinkSPXCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkSPXCacheHits.setStatus('mandatory')
ipxLinkType20Rx = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkType20Rx.setStatus('mandatory')
ipxLinkType20Tx = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkType20Tx.setStatus('mandatory')
ipxLinkType20Disc = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkType20Disc.setStatus('mandatory')
ipxLinkRxBytesOther = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRxBytesOther.setStatus('mandatory')
ipxLinkRxBytesNCP = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRxBytesNCP.setStatus('mandatory')
ipxLinkRxBytesSPX = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRxBytesSPX.setStatus('mandatory')
ipxLinkRxBytesNetbios = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRxBytesNetbios.setStatus('mandatory')
ipxLinkRxBytesRIP = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRxBytesRIP.setStatus('mandatory')
ipxLinkRxBytesSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRxBytesSAP.setStatus('mandatory')
ipxLinkRxBytesType20 = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRxBytesType20.setStatus('mandatory')
ipxLinkTxBytesOther = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxBytesOther.setStatus('mandatory')
ipxLinkTxBytesNCP = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxBytesNCP.setStatus('mandatory')
ipxLinkTxBytesSPX = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxBytesSPX.setStatus('mandatory')
ipxLinkTxBytesNetbios = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxBytesNetbios.setStatus('mandatory')
ipxLinkTxBytesRIP = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxBytesRIP.setStatus('mandatory')
ipxLinkTxBytesSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxBytesSAP.setStatus('mandatory')
ipxLinkTxBytesType20 = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxBytesType20.setStatus('mandatory')
ipxLinkRxBytesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkRxBytesTotal.setStatus('mandatory')
ipxLinkTxBytesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 25, 4, 1, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkTxBytesTotal.setStatus('mandatory')
ipxControlCommand = MibScalar((1, 3, 6, 1, 4, 1, 208, 25, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxControlCommand.setStatus('mandatory')
mibBuilder.exportSymbols("SCA-IPX-MIB", ipxCntRxRipReq=ipxCntRxRipReq, ipxLinkCntFiltered=ipxLinkCntFiltered, ipxCntTxRipReq=ipxCntTxRipReq, ipxRIPRouterNode=ipxRIPRouterNode, ipxCntRipInvalid=ipxCntRipInvalid, ipxCntRxMcast=ipxCntRxMcast, ipxCntCacheHits=ipxCntCacheHits, ipxLinkCntTxSapRpl=ipxLinkCntTxSapRpl, ipxSAP=ipxSAP, ipxLinkCntForward=ipxLinkCntForward, ipxLinkFrameType=ipxLinkFrameType, ipxCntTxSapRpl=ipxCntTxSapRpl, ipxLinkCntRxRipReq=ipxLinkCntRxRipReq, ipxCntNoRoute=ipxCntNoRoute, ipxCntUnknown=ipxCntUnknown, ipxLinkCntTxTotal=ipxLinkCntTxTotal, ipxSAPServerName=ipxSAPServerName, ipxCntTxFiltered=ipxCntTxFiltered, ipxLinkRIPTrigger=ipxLinkRIPTrigger, ipxLinkCacheHits=ipxLinkCacheHits, ipxLinkRxBytesNetbios=ipxLinkRxBytesNetbios, ipxLinkType20Tx=ipxLinkType20Tx, ipxCntBadChksum=ipxCntBadChksum, ipxCntForwarded=ipxCntForwarded, ipxCntDiscarded=ipxCntDiscarded, ipxLinkForwarded=ipxLinkForwarded, ipxRIP=ipxRIP, ipx=ipx, ipxLinkNet=ipxLinkNet, ipxLinkRxFiltered=ipxLinkRxFiltered, ipxRIPTable=ipxRIPTable, ipxRIPdelay=ipxRIPdelay, ipxCntSPXCacheHits=ipxCntSPXCacheHits, ipxCntTxType20=ipxCntTxType20, ipxLinkIndex=ipxLinkIndex, ipxLinkCntRxBcast=ipxLinkCntRxBcast, ipxControlCommand=ipxControlCommand, ipxCntRxFiltered=ipxCntRxFiltered, ipxCntTxRipRpl=ipxCntTxRipRpl, ipxRIPnet=ipxRIPnet, ipxLinkCntRxRipRsp=ipxLinkCntRxRipRsp, ipxLinkRxBytesTotal=ipxLinkRxBytesTotal, ipxSAPTable=ipxSAPTable, ipxLinkRxBytesRIP=ipxLinkRxBytesRIP, ipxRIPRouterNet=ipxRIPRouterNet, ipxLinkRxBytesType20=ipxLinkRxBytesType20, ipxSAPServerSocket=ipxSAPServerSocket, ipxControl=ipxControl, ipxLinkTxBytesNetbios=ipxLinkTxBytesNetbios, ipxCntSapInvalid=ipxCntSapInvalid, ipxCntSpoofed=ipxCntSpoofed, ipxLinkCntTxMcast=ipxLinkCntTxMcast, ipxLinkCntTxRipReq=ipxLinkCntTxRipReq, ipxLinkRxBytesOther=ipxLinkRxBytesOther, ipxCntBadLen=ipxCntBadLen, ipxSAPServerType=ipxSAPServerType, ipxLinkState=ipxLinkState, ipxCntRxBcast=ipxCntRxBcast, ipxLinkType20Disc=ipxLinkType20Disc, ipxLinkTxBytesRIP=ipxLinkTxBytesRIP, ipxCntFiltered=ipxCntFiltered, ipxCntBadHop=ipxCntBadHop, ipxLinkTxBytesOther=ipxLinkTxBytesOther, ipxCntTxMcast=ipxCntTxMcast, ipxLinkCntBadLen=ipxLinkCntBadLen, ipxLinkType20Rx=ipxLinkType20Rx, ipxCntRxTotal=ipxCntRxTotal, ipxLinkCntRxTotal=ipxLinkCntRxTotal, ipxCntConfigTimeStamp=ipxCntConfigTimeStamp, ipxCntTooBig=ipxCntTooBig, ipxLinkCntUnknown=ipxLinkCntUnknown, ipxLinkTxBytesSAP=ipxLinkTxBytesSAP, ipxLinkRIPTimer=ipxLinkRIPTimer, ipxCntTxPrefFailed=ipxCntTxPrefFailed, ipxLinkRxBytesNCP=ipxLinkRxBytesNCP, ipxSAPServerNode=ipxSAPServerNode, ipxLinkTxFailed=ipxLinkTxFailed, ipxLinkSPXCacheHits=ipxLinkSPXCacheHits, ipxLinkCntSapInvalid=ipxLinkCntSapInvalid, ipxLinkCntNoRoute=ipxLinkCntNoRoute, ipxCntTxTotal=ipxCntTxTotal, ipxLinkCntTooBig=ipxLinkCntTooBig, ipxCntRxType20=ipxCntRxType20, ipxLinkSAPTrigger=ipxLinkSAPTrigger, ipxLinkTxBytesType20=ipxLinkTxBytesType20, ipxLinkCntTxRipRpl=ipxLinkCntTxRipRpl, ipxLinkRxBytesSPX=ipxLinkRxBytesSPX, ipxLinkCntDiscarded=ipxLinkCntDiscarded, ipxLinkTxBytesNCP=ipxLinkTxBytesNCP, ipxRIPEntry=ipxRIPEntry, ipxLinkFrameParam=ipxLinkFrameParam, ipxLink=ipxLink, ipxLinkCntBadChksum=ipxLinkCntBadChksum, ipxSAPhops=ipxSAPhops, ipxLinkTxBytesSPX=ipxLinkTxBytesSPX, ipxSAPEntry=ipxSAPEntry, ipxSAPServerNet=ipxSAPServerNet, ipxCntRxSapReq=ipxCntRxSapReq, ipxLinkRxBytesSAP=ipxLinkRxBytesSAP, ipxLinkTxPrefFailed=ipxLinkTxPrefFailed, ipxRIPRouterSocket=ipxRIPRouterSocket, ipxLinkTxBytesTotal=ipxLinkTxBytesTotal, ipxCntType20Disc=ipxCntType20Disc, ipxLinkCntRxSapReq=ipxLinkCntRxSapReq, ipxCntLocal=ipxCntLocal, ipxLinkCntTxSapReq=ipxLinkCntTxSapReq, ipxLinkCntRxMcast=ipxLinkCntRxMcast, ipxRxCntSapRsp=ipxRxCntSapRsp, ipxLinkCntBadHop=ipxLinkCntBadHop, ipxCounters=ipxCounters, ipxLinkSAPTimer=ipxLinkSAPTimer, ipxLinkTxFiltered=ipxLinkTxFiltered, ipxCntTxBcast=ipxCntTxBcast, ipxLinkEntry=ipxLinkEntry, ipxLinkCntLocal=ipxLinkCntLocal, ipxRIPhops=ipxRIPhops, ipxLinkCntRxSapRsp=ipxLinkCntRxSapRsp, ipxCntTxFailed=ipxCntTxFailed, ipxCntForward=ipxCntForward, ipxLinkCntRipInvalid=ipxLinkCntRipInvalid, ipxLinkSpoofed=ipxLinkSpoofed, ipxTxCntSapReq=ipxTxCntSapReq, ipxLinkCntTxBcast=ipxLinkCntTxBcast, ipxCntRxRipRsp=ipxCntRxRipRsp, ipxLinkTable=ipxLinkTable)
