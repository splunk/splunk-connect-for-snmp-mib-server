#
# PySNMP MIB module ERI-DNX-OCTAL-T1E1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ERI-DNX-OCTAL-T1E1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:51:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
FunctionSwitch, devices, DataSwitch, LinkPortAddress, DecisionType, OneByteField, trapSequence, LinkCmdStatus, PortStatus = mibBuilder.importSymbols("ERI-DNX-SMC-MIB", "FunctionSwitch", "devices", "DataSwitch", "LinkPortAddress", "DecisionType", "OneByteField", "trapSequence", "LinkCmdStatus", "PortStatus")
eriMibs, = mibBuilder.importSymbols("ERI-ROOT-SMI", "eriMibs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, ModuleIdentity, IpAddress, Bits, Counter32, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, MibIdentifier, ObjectIdentity, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "IpAddress", "Bits", "Counter32", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "MibIdentifier", "ObjectIdentity", "Unsigned32", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
eriDNXOctalT1E1MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 644, 3, 2))
if mibBuilder.loadTexts: eriDNXOctalT1E1MIB.setLastUpdated('200203080000Z')
if mibBuilder.loadTexts: eriDNXOctalT1E1MIB.setOrganization('Eastern Research, Inc.')
dnxOT1E1 = MibIdentifier((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4))
oteConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1))
oteDiag = MibIdentifier((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 2))
oT1E1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1), )
if mibBuilder.loadTexts: oT1E1ConfigTable.setStatus('current')
oT1E1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1), ).setIndexNames((0, "ERI-DNX-OCTAL-T1E1-MIB", "oT1E1CfgLinkAddr"))
if mibBuilder.loadTexts: oT1E1ConfigEntry.setStatus('current')
oT1E1CfgLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 1), LinkPortAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oT1E1CfgLinkAddr.setStatus('current')
oT1E1CfgResource = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oT1E1CfgResource.setStatus('current')
oT1E1CfgLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1CfgLinkName.setStatus('current')
oT1E1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 4), PortStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1Status.setStatus('current')
oT1E1ClearT1E1 = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("framed", 1), ("unframed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1ClearT1E1.setStatus('current')
oT1E1LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13))).clone(namedValues=NamedValues(("e1", 0), ("e1-crc", 1), ("e1-cas", 2), ("e1-cas-crc", 3), ("e1-unframed", 4), ("t1-esf-b8zs", 5), ("t1-esf-ami-62411", 6), ("t1-d4-b8zs", 7), ("t1-d4-ami-62411", 8), ("t1-b8zs-unframed", 10), ("t1-ami-unframed", 11), ("t1-d4-ami-clear", 12), ("t1-esf-ami-clear", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1LineType.setStatus('current')
oT1E1NetLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 7), FunctionSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1NetLoop.setStatus('current')
oT1E1YelAlrm = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 8), DecisionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1YelAlrm.setStatus('current')
oT1E1RecoverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 10, 15))).clone(namedValues=NamedValues(("timeout-3-secs", 3), ("timeout-10-secs", 10), ("timeout-15-secs", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1RecoverTime.setStatus('current')
oT1E1IdleCode = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("busy", 0), ("idle", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1IdleCode.setStatus('current')
oT1E1EsfFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("att-54016", 1), ("ansi-t1-403", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1EsfFormat.setStatus('current')
oT1E1CfgLBO = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("e1-shortHaul-0-6db", 1), ("e1-longHaul-0-34db", 2), ("t1-longHaul-0-0db", 3), ("t1-longHaul-7-5db", 4), ("t1-longHaul-15-0db", 5), ("t1-longHaul-22-5db", 6), ("t1-shortHaul-0-133ft", 7), ("t1-shortHaul-133-266ft", 8), ("t1-shortHaul-266-399ft", 9), ("t1-shortHaul-399-533ft", 10), ("t1-shortHaul-533-655ft", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1CfgLBO.setStatus('current')
oT1E1CfgCmdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 13), LinkCmdStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1CfgCmdStatus.setStatus('current')
oT1E1Gr303Facility = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 14), DecisionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oT1E1Gr303Facility.setStatus('obsolete')
oT1E1NationalBits = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 15), OneByteField()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1NationalBits.setStatus('current')
oT1E1InterNational = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 1, 1, 1, 16), OneByteField()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oT1E1InterNational.setStatus('current')
dnxOT1E1Enterprise = ObjectIdentity((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 0))
if mibBuilder.loadTexts: dnxOT1E1Enterprise.setStatus('current')
oT1E1ConfigTrap = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 4, 0, 1)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-OCTAL-T1E1-MIB", "oT1E1CfgLinkAddr"), ("ERI-DNX-OCTAL-T1E1-MIB", "oT1E1CfgCmdStatus"))
if mibBuilder.loadTexts: oT1E1ConfigTrap.setStatus('current')
mibBuilder.exportSymbols("ERI-DNX-OCTAL-T1E1-MIB", oT1E1CfgCmdStatus=oT1E1CfgCmdStatus, oT1E1RecoverTime=oT1E1RecoverTime, oT1E1CfgLBO=oT1E1CfgLBO, oteConfig=oteConfig, oT1E1CfgLinkAddr=oT1E1CfgLinkAddr, oT1E1CfgResource=oT1E1CfgResource, oT1E1Status=oT1E1Status, oT1E1YelAlrm=oT1E1YelAlrm, oT1E1ConfigTable=oT1E1ConfigTable, oT1E1NetLoop=oT1E1NetLoop, oT1E1IdleCode=oT1E1IdleCode, dnxOT1E1Enterprise=dnxOT1E1Enterprise, oT1E1NationalBits=oT1E1NationalBits, oT1E1ClearT1E1=oT1E1ClearT1E1, oT1E1EsfFormat=oT1E1EsfFormat, eriDNXOctalT1E1MIB=eriDNXOctalT1E1MIB, PYSNMP_MODULE_ID=eriDNXOctalT1E1MIB, oteDiag=oteDiag, dnxOT1E1=dnxOT1E1, oT1E1LineType=oT1E1LineType, oT1E1Gr303Facility=oT1E1Gr303Facility, oT1E1ConfigTrap=oT1E1ConfigTrap, oT1E1CfgLinkName=oT1E1CfgLinkName, oT1E1ConfigEntry=oT1E1ConfigEntry, oT1E1InterNational=oT1E1InterNational)
