#
# PySNMP MIB module TERAWAVE-teraEvent-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-teraEvent-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, enterprises, IpAddress, MibIdentifier, TimeTicks, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Gauge32, Counter64, ObjectIdentity, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "enterprises", "IpAddress", "MibIdentifier", "TimeTicks", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Gauge32", "Counter64", "ObjectIdentity", "Counter32", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
teratraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 1))
teraAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 1, 1))
teraLocalEventTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11), )
if mibBuilder.loadTexts: teraLocalEventTable.setStatus('mandatory')
teraLocalEventTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1), ).setIndexNames((0, "TERAWAVE-teraEvent-MIB", "teraLocalEventIndex"))
if mibBuilder.loadTexts: teraLocalEventTableEntry.setStatus('mandatory')
teraLocalEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 1), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventIndex.setStatus('mandatory')
teraLocalEventPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventPort.setStatus('mandatory')
teraLocalEventPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventPortType.setStatus('mandatory')
teraLocalEventCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventCardType.setStatus('mandatory')
teraLocalEventSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventSlot.setStatus('mandatory')
teraLocalEventPhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventPhysPort.setStatus('mandatory')
teraLocalEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventType.setStatus('mandatory')
teraLocalEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nominal", 1), ("informational", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventSeverity.setStatus('mandatory')
teraLocalEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventTime.setStatus('mandatory')
teraLocalEventMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventMessage.setStatus('mandatory')
teraLocalEventTimeInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 11, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalEventTimeInSecs.setStatus('mandatory')
teraLocalRmonEventTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 12), )
if mibBuilder.loadTexts: teraLocalRmonEventTable.setStatus('mandatory')
teraLocalRmonEventTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 12, 1), ).setIndexNames((0, "TERAWAVE-teraEvent-MIB", "teraLocalRmonEventIndex"))
if mibBuilder.loadTexts: teraLocalRmonEventTableEntry.setStatus('mandatory')
teraLocalRmonEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 12, 1, 1), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalRmonEventIndex.setStatus('mandatory')
teraLocalRmonEventAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalRmonEventAlarmIndex.setStatus('mandatory')
teraLocalRmonEventTrapType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rising", 1), ("falling", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalRmonEventTrapType.setStatus('mandatory')
teraLocalRmonEventSampleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalRmonEventSampleValue.setStatus('mandatory')
teraLocalRmonEventSampeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalRmonEventSampeThreshold.setStatus('mandatory')
teraLocalRmonEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 12, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalRmonEventTime.setStatus('mandatory')
teraLocalRmonEventTimeInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalRmonEventTimeInSecs.setStatus('mandatory')
teraLocalTcaEventTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 13), )
if mibBuilder.loadTexts: teraLocalTcaEventTable.setStatus('mandatory')
teraLocalTcaEventTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 13, 1), ).setIndexNames((0, "TERAWAVE-teraEvent-MIB", "teraLocalTcaEventIndex"))
if mibBuilder.loadTexts: teraLocalTcaEventTableEntry.setStatus('mandatory')
teraLocalTcaEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 13, 1, 1), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalTcaEventIndex.setStatus('mandatory')
teraLocalTcaEventAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalTcaEventAlarmIndex.setStatus('mandatory')
teraLocalTcaEventTrapType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rising", 1), ("falling", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalTcaEventTrapType.setStatus('mandatory')
teraLocalTcaEventSampleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalTcaEventSampleValue.setStatus('mandatory')
teraLocalTcaEventSampeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalTcaEventSampeThreshold.setStatus('mandatory')
teraLocalTcaEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 13, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalTcaEventTime.setStatus('mandatory')
teraLocalTcaEventTimeInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 13, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalTcaEventTimeInSecs.setStatus('mandatory')
mibBuilder.exportSymbols("TERAWAVE-teraEvent-MIB", teraLocalRmonEventTrapType=teraLocalRmonEventTrapType, teraLocalEventPortType=teraLocalEventPortType, teraLocalTcaEventTable=teraLocalTcaEventTable, teraLocalRmonEventAlarmIndex=teraLocalRmonEventAlarmIndex, teraLocalRmonEventTime=teraLocalRmonEventTime, teraLocalEventSeverity=teraLocalEventSeverity, teraLocalRmonEventTable=teraLocalRmonEventTable, teraLocalTcaEventTrapType=teraLocalTcaEventTrapType, teraLocalEventCardType=teraLocalEventCardType, teraLocalEventType=teraLocalEventType, teraLocalEventTime=teraLocalEventTime, teraLocalEventPhysPort=teraLocalEventPhysPort, teraLocalEventMessage=teraLocalEventMessage, teraLocalTcaEventTableEntry=teraLocalTcaEventTableEntry, terawave=terawave, teraLocalEventIndex=teraLocalEventIndex, teraLocalEventTable=teraLocalEventTable, teraLocalRmonEventTableEntry=teraLocalRmonEventTableEntry, teraLocalEventTimeInSecs=teraLocalEventTimeInSecs, teraLocalTcaEventTime=teraLocalTcaEventTime, teraLocalTcaEventTimeInSecs=teraLocalTcaEventTimeInSecs, teraLocalRmonEventSampeThreshold=teraLocalRmonEventSampeThreshold, teraLocalTcaEventIndex=teraLocalTcaEventIndex, teraLocalTcaEventSampleValue=teraLocalTcaEventSampleValue, teraLocalTcaEventSampeThreshold=teraLocalTcaEventSampeThreshold, teraLocalEventTableEntry=teraLocalEventTableEntry, teratraps=teratraps, teraAlarms=teraAlarms, teraLocalEventPort=teraLocalEventPort, teraLocalTcaEventAlarmIndex=teraLocalTcaEventAlarmIndex, teraLocalRmonEventTimeInSecs=teraLocalRmonEventTimeInSecs, teraLocalRmonEventIndex=teraLocalRmonEventIndex, teraLocalRmonEventSampleValue=teraLocalRmonEventSampleValue, teraLocalEventSlot=teraLocalEventSlot)
