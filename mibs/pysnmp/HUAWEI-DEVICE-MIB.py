#
# PySNMP MIB module HUAWEI-DEVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-DEVICE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:31:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
huaweiUtility, = mibBuilder.importSymbols("HUAWEI-MIB", "huaweiUtility")
HWPCBType, HWSubPCBType, HWFrameType, HWPortType = mibBuilder.importSymbols("HUAWEI-TC-MIB", "HWPCBType", "HWSubPCBType", "HWFrameType", "HWPortType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ModuleIdentity, Counter32, iso, MibIdentifier, IpAddress, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Gauge32, ObjectIdentity, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "Counter32", "iso", "MibIdentifier", "IpAddress", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Gauge32", "ObjectIdentity", "TimeTicks", "Unsigned32")
RowStatus, DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DateAndTime", "DisplayString", "TextualConvention")
hwDev = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 6, 3))
if mibBuilder.loadTexts: hwDev.setLastUpdated('200406280900Z')
if mibBuilder.loadTexts: hwDev.setOrganization('Fix-Net Dept, Huawei Technologies Co.,Ltd.')
hwSystemPara = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 1))
hwSysIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysIpAddr.setStatus('current')
hwSysIpMask = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysIpMask.setStatus('current')
hwSysVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysVersion.setStatus('current')
hwSysTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 1, 4), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysTime.setStatus('current')
hwNmsParaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2), )
if mibBuilder.loadTexts: hwNmsParaTable.setStatus('current')
hwNmsParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwNmsIndex"))
if mibBuilder.loadTexts: hwNmsParaEntry.setStatus('current')
hwNmsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNmsIndex.setStatus('current')
hwNmsName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsName.setStatus('current')
hwNmsIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsIp.setStatus('current')
hwNmsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsMask.setStatus('deprecated')
hwNmsMaintainMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inBandwidth", 1), ("outBandwidth", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsMaintainMode.setStatus('deprecated')
hwNmsGetCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsGetCommunity.setStatus('current')
hwNmsSetCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsSetCommunity.setStatus('current')
hwNmsSnmpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsSnmpPort.setStatus('deprecated')
hwNmsTrapPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsTrapPort.setStatus('deprecated')
hwNmsClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ro", 1), ("rw", 2), ("rwWithTrap", 3), ("trapOnly", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsClass.setStatus('deprecated')
hwNmsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwNmsStatus.setStatus('current')
hwSlotConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3))
hwFrameTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 1), )
if mibBuilder.loadTexts: hwFrameTable.setStatus('current')
hwFrameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 1, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"))
if mibBuilder.loadTexts: hwFrameEntry.setStatus('current')
hwFrameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrameIndex.setStatus('current')
hwFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 1, 1, 2), HWFrameType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFrameType.setStatus('current')
hwFrameDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFrameDesc.setStatus('current')
hwSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlots.setStatus('current')
hwFrameOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("fault", 2), ("other", 3), ("discovery", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrameOperStatus.setStatus('current')
hwFrameAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("reset", 3), ("test", 4), ("confirm", 5), ("delete", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFrameAdminStatus.setStatus('current')
hwFrameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFrameRowStatus.setStatus('current')
hwSlotTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2), )
if mibBuilder.loadTexts: hwSlotTable.setStatus('current')
hwSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"))
if mibBuilder.loadTexts: hwSlotEntry.setStatus('current')
hwSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotIndex.setStatus('current')
hwSlotType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 2), HWPCBType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSlotType.setStatus('current')
hwSlotDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSlotDesc.setStatus('current')
hwSlotPcbVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotPcbVersion.setStatus('deprecated')
hwSlotVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 640))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotVersion.setStatus('current')
hwSlotWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("main", 1), ("standby", 2), ("other", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotWorkMode.setStatus('current')
hwSubSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSubSlots.setStatus('current')
hwSlotOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("uninstall", 1), ("normal", 2), ("fault", 3), ("forbidden", 4), ("discovery", 5), ("config", 6), ("offline", 7), ("abnormal", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotOperStatus.setStatus('current')
hwSlotAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("reset", 3), ("test", 4), ("confirm", 5), ("switch", 6), ("delete", 7), ("forbidden", 8), ("unforbidden", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSlotAdminStatus.setStatus('current')
hwSlotRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSlotRowStatus.setStatus('current')
hwSlotPhySerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotPhySerialNum.setStatus('current')
hwSubslotTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3), )
if mibBuilder.loadTexts: hwSubslotTable.setStatus('current')
hwSubslotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSubslotIndex"))
if mibBuilder.loadTexts: hwSubslotEntry.setStatus('current')
hwSubslotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSubslotIndex.setStatus('current')
hwSubslotType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3, 1, 2), HWSubPCBType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubslotType.setStatus('current')
hwSubslotPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSubslotPorts.setStatus('current')
hwSubslotOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("uninstall", 1), ("normal", 2), ("fault", 3), ("forbidden", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSubslotOperStatus.setStatus('current')
hwSubslotAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("reset", 3), ("test", 4), ("confirm", 5), ("delete", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubslotAdminStatus.setStatus('current')
hwSubslotVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubslotVersion.setStatus('current')
hwSubSlotDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubSlotDesc.setStatus('current')
hwSubslotRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubslotRowStatus.setStatus('current')
hwPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 4), )
if mibBuilder.loadTexts: hwPortTable.setStatus('current')
hwPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 4, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSubslotIndex"), (0, "HUAWEI-DEVICE-MIB", "hwPortIndex"))
if mibBuilder.loadTexts: hwPortEntry.setStatus('current')
hwPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortIndex.setStatus('current')
hwPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 4, 1, 2), HWPortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortType.setStatus('current')
hwPortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortDesc.setStatus('current')
hwPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortSpeed.setStatus('deprecated')
hwPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("normal", 1), ("fault", 2), ("localLoopback", 3), ("forbidden", 4), ("test", 5), ("remoteLoopback", 6), ("activing", 10), ("deactive", 11), ("block", 12), ("nolight", 13), ("innerLocalLoopback", 14), ("innerRemoteLoopback", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortOperStatus.setStatus('current')
hwPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("active", 1), ("deactive", 2), ("block", 3), ("unblock", 4), ("confirm", 5), ("delete", 6), ("reset", 7), ("localLoopback", 8), ("remoteLoopback", 9), ("stopLoopback", 11), ("innerLocalLoopback", 12), ("innerRemoteLoopback", 13), ("rtuLocalLoopback", 14), ("rtuRemoteLoopback", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortAdminStatus.setStatus('current')
hwFrameLinks = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5))
hwFrameLinkNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkNumber.setStatus('current')
hwFrameLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2), )
if mibBuilder.loadTexts: hwFrameLinkTable.setStatus('current')
hwFrameLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameLinkIndex"))
if mibBuilder.loadTexts: hwFrameLinkEntry.setStatus('current')
hwFrameLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrameLinkIndex.setStatus('current')
hwFrameLinkLeftFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkLeftFrame.setStatus('current')
hwFrameLinkLeftSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkLeftSlot.setStatus('current')
hwFrameLinkLeftSubSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkLeftSubSlot.setStatus('current')
hwFrameLinkLeftPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkLeftPort.setStatus('current')
hwFrameLinkRightFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkRightFrame.setStatus('current')
hwFrameLinkRightSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkRightSlot.setStatus('current')
hwFrameLinkRightSubSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkRightSubSlot.setStatus('current')
hwFrameLinkRightPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkRightPort.setStatus('current')
hwFrameLinkOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("fault", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrameLinkOperStatus.setStatus('current')
hwFrameLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFrameLinkRowStatus.setStatus('current')
hwFrameLinkNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrameLinkNextIndex.setStatus('current')
hwNarrowBoard = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 6))
hwBoardAttrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 6, 1), )
if mibBuilder.loadTexts: hwBoardAttrTable.setStatus('current')
hwBoardAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 6, 1, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"))
if mibBuilder.loadTexts: hwBoardAttrEntry.setStatus('current')
hwBoardAulaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBoardAulaw.setStatus('current')
hwBoardCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBoardCurrent.setStatus('current')
hwBoardImpedance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 3, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 8), ValueRangeConstraint(255, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBoardImpedance.setStatus('current')
hwCpuDevTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 4), )
if mibBuilder.loadTexts: hwCpuDevTable.setStatus('current')
hwCpuDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 4, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"), (0, "HUAWEI-DEVICE-MIB", "hwCpuDevIndex"))
if mibBuilder.loadTexts: hwCpuDevEntry.setStatus('current')
hwCpuDevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: hwCpuDevIndex.setStatus('current')
hwCpuDevDuty = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCpuDevDuty.setStatus('current')
hwAvgDuty1min = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAvgDuty1min.setStatus('current')
hwAvgDuty5min = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAvgDuty5min.setStatus('current')
hwMemoryDev = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5))
hwMemoryDevTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1), )
if mibBuilder.loadTexts: hwMemoryDevTable.setStatus('current')
hwMemoryDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"), (0, "HUAWEI-DEVICE-MIB", "hwMemoryDevModuleIndex"))
if mibBuilder.loadTexts: hwMemoryDevEntry.setStatus('current')
hwMemoryDevModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwMemoryDevModuleIndex.setStatus('current')
hwMemoryDevSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevSize.setStatus('current')
hwMemoryDevFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevFree.setStatus('current')
hwMemoryDevRawSliceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevRawSliceUsed.setStatus('current')
hwMemoryDevLargestFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevLargestFree.setStatus('current')
hwMemoryDevFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevFail.setStatus('current')
hwMemoryDevFailNoMem = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMemoryDevFailNoMem.setStatus('current')
hwBufferTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2), )
if mibBuilder.loadTexts: hwBufferTable.setStatus('current')
hwBufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"), (0, "HUAWEI-DEVICE-MIB", "hwBufferModuleIndex"), (0, "HUAWEI-DEVICE-MIB", "hwBufferSize"))
if mibBuilder.loadTexts: hwBufferEntry.setStatus('current')
hwBufferModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwBufferModuleIndex.setStatus('current')
hwBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwBufferSize.setStatus('current')
hwBufferCurrentTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBufferCurrentTotal.setStatus('current')
hwBufferCurrentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBufferCurrentUsed.setStatus('current')
hwFlashDev = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 6))
hwFlashDevTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 6, 1), )
if mibBuilder.loadTexts: hwFlashDevTable.setStatus('current')
hwFlashDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 6, 1, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwFrameIndex"), (0, "HUAWEI-DEVICE-MIB", "hwSlotIndex"), (0, "HUAWEI-DEVICE-MIB", "hwFlashDevIndex"))
if mibBuilder.loadTexts: hwFlashDevEntry.setStatus('current')
hwFlashDevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwFlashDevIndex.setStatus('current')
hwFlashDevSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFlashDevSize.setStatus('current')
hwFlashDevFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFlashDevFree.setStatus('current')
hwFlashDevEraseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 6, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFlashDevEraseTime.setStatus('current')
hwFlashDevEraseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("flashErasing", 1), ("flashErasedSuccessful", 2), ("flashErasedFail", 3), ("flashReadOnly", 4), ("flashOpenFailure", 5), ("bufferAllocationFailure", 6), ("noEraseAfterPowerOn", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFlashDevEraseStatus.setStatus('current')
hwFlashDevStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("busy", 1), ("available", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFlashDevStatus.setStatus('current')
hwAlarmInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 7))
hwAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 7, 1), )
if mibBuilder.loadTexts: hwAlarmTable.setStatus('obsolete')
hwAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 7, 1, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwAlarmSerialIndex"))
if mibBuilder.loadTexts: hwAlarmEntry.setStatus('obsolete')
hwAlarmSerialIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAlarmSerialIndex.setStatus('obsolete')
hwAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("alarm", 1), ("restore", 2), ("event", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAlarmType.setStatus('obsolete')
hwAlarmOcurTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 7, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAlarmOcurTime.setStatus('obsolete')
trapObjectIdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 7, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapObjectIdValue.setStatus('obsolete')
hwDevTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8))
hwDevTrapVbOids = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 1))
hwFrameAdminResult = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("fail", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwFrameAdminResult.setStatus('current')
hwSlotAdminResult = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("fail", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwSlotAdminResult.setStatus('current')
hwSubslotAdminResult = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("fail", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwSubslotAdminResult.setStatus('current')
hwPortAdminResult = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("fail", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwPortAdminResult.setStatus('current')
hwDevGeneralTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 5, 0))
hwFrameAdminResultTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 5, 0, 1)).setObjects(("HUAWEI-DEVICE-MIB", "hwFrameIndex"), ("HUAWEI-DEVICE-MIB", "hwFrameAdminStatus"), ("HUAWEI-DEVICE-MIB", "hwFrameAdminResult"))
if mibBuilder.loadTexts: hwFrameAdminResultTrap.setStatus('current')
hwSlotAdminResultTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 5, 0, 2)).setObjects(("HUAWEI-DEVICE-MIB", "hwFrameIndex"), ("HUAWEI-DEVICE-MIB", "hwSlotIndex"), ("HUAWEI-DEVICE-MIB", "hwSlotAdminStatus"), ("HUAWEI-DEVICE-MIB", "hwSlotAdminResult"))
if mibBuilder.loadTexts: hwSlotAdminResultTrap.setStatus('current')
hwSubSlotAdminResultTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 5, 0, 3)).setObjects(("HUAWEI-DEVICE-MIB", "hwFrameIndex"), ("HUAWEI-DEVICE-MIB", "hwSlotIndex"), ("HUAWEI-DEVICE-MIB", "hwSubslotIndex"), ("HUAWEI-DEVICE-MIB", "hwSubslotAdminStatus"), ("HUAWEI-DEVICE-MIB", "hwSubslotAdminResult"))
if mibBuilder.loadTexts: hwSubSlotAdminResultTrap.setStatus('current')
hwPortAdminResultTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 3, 8, 5, 0, 4)).setObjects(("HUAWEI-DEVICE-MIB", "hwFrameIndex"), ("HUAWEI-DEVICE-MIB", "hwSlotIndex"), ("HUAWEI-DEVICE-MIB", "hwSubslotIndex"), ("HUAWEI-DEVICE-MIB", "hwPortIndex"), ("HUAWEI-DEVICE-MIB", "hwPortAdminStatus"), ("HUAWEI-DEVICE-MIB", "hwPortAdminResult"))
if mibBuilder.loadTexts: hwPortAdminResultTrap.setStatus('current')
hwCliUserMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10))
hwCliUserParaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 1), )
if mibBuilder.loadTexts: hwCliUserParaTable.setStatus('current')
hwCliUserParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 1, 1), ).setIndexNames((1, "HUAWEI-DEVICE-MIB", "hwCliUserName"))
if mibBuilder.loadTexts: hwCliUserParaEntry.setStatus('current')
hwCliUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: hwCliUserName.setStatus('current')
hwCliUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCliUserPassword.setStatus('current')
hwCliUserLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("common", 1), ("operator", 2), ("administrator", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCliUserLevel.setStatus('current')
hwCliUserLogins = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCliUserLogins.setStatus('current')
hwCliUserDecr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCliUserDecr.setStatus('current')
hwCliUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCliUserRowStatus.setStatus('current')
hwCliClientTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 2), )
if mibBuilder.loadTexts: hwCliClientTable.setStatus('current')
hwCliClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 2, 1), ).setIndexNames((0, "HUAWEI-DEVICE-MIB", "hwCliClientID"))
if mibBuilder.loadTexts: hwCliClientEntry.setStatus('current')
hwCliClientID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: hwCliClientID.setStatus('current')
hwCliClientUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCliClientUserName.setStatus('current')
hwCliClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("serial", 1), ("telnet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCliClientType.setStatus('current')
hwCliClientIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCliClientIp.setStatus('current')
hwCliClientLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 2, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCliClientLoginTime.setStatus('current')
hwCliClientAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 3, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("disconnect", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCliClientAdminStatus.setStatus('current')
hwDevCompatibleTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 3, 11))
hwCompatibleSysOid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 11, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCompatibleSysOid.setStatus('current')
hwCompatibleVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 11, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCompatibleVersion.setStatus('current')
hwCompatibleVRCB = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 11, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCompatibleVRCB.setStatus('current')
hwCompatibleProductName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 3, 11, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCompatibleProductName.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-DEVICE-MIB", hwBoardAttrTable=hwBoardAttrTable, hwMemoryDevTable=hwMemoryDevTable, hwBoardAttrEntry=hwBoardAttrEntry, hwAlarmInfo=hwAlarmInfo, hwFrameAdminResult=hwFrameAdminResult, hwDevCompatibleTable=hwDevCompatibleTable, hwDevTrapVbOids=hwDevTrapVbOids, hwNarrowBoard=hwNarrowBoard, hwCliUserMgmt=hwCliUserMgmt, hwFlashDevSize=hwFlashDevSize, hwFrameEntry=hwFrameEntry, hwSlotAdminStatus=hwSlotAdminStatus, hwBufferSize=hwBufferSize, hwSlotPhySerialNum=hwSlotPhySerialNum, hwSlotOperStatus=hwSlotOperStatus, hwFrameAdminResultTrap=hwFrameAdminResultTrap, hwNmsParaTable=hwNmsParaTable, hwSlotIndex=hwSlotIndex, hwCliUserName=hwCliUserName, hwCliUserLogins=hwCliUserLogins, hwSysIpMask=hwSysIpMask, hwNmsIp=hwNmsIp, hwFrameLinkTable=hwFrameLinkTable, hwFrameLinkRightPort=hwFrameLinkRightPort, hwCliClientID=hwCliClientID, hwCompatibleVRCB=hwCompatibleVRCB, hwBufferCurrentTotal=hwBufferCurrentTotal, hwSlotType=hwSlotType, hwCliUserLevel=hwCliUserLevel, hwMemoryDevSize=hwMemoryDevSize, hwCliClientUserName=hwCliClientUserName, hwPortAdminResult=hwPortAdminResult, hwFrameLinkEntry=hwFrameLinkEntry, hwBoardAulaw=hwBoardAulaw, hwNmsSetCommunity=hwNmsSetCommunity, hwFrameTable=hwFrameTable, hwSysIpAddr=hwSysIpAddr, hwAvgDuty5min=hwAvgDuty5min, hwPortAdminResultTrap=hwPortAdminResultTrap, hwAlarmSerialIndex=hwAlarmSerialIndex, hwSlotConf=hwSlotConf, hwFlashDev=hwFlashDev, hwFrameLinkLeftPort=hwFrameLinkLeftPort, hwFlashDevFree=hwFlashDevFree, hwFlashDevEraseStatus=hwFlashDevEraseStatus, hwFrameLinkRightFrame=hwFrameLinkRightFrame, hwSubslotVersion=hwSubslotVersion, hwNmsTrapPort=hwNmsTrapPort, hwFlashDevTable=hwFlashDevTable, hwAlarmEntry=hwAlarmEntry, PYSNMP_MODULE_ID=hwDev, hwNmsParaEntry=hwNmsParaEntry, hwPortSpeed=hwPortSpeed, hwSlotWorkMode=hwSlotWorkMode, hwMemoryDevLargestFree=hwMemoryDevLargestFree, hwFlashDevEntry=hwFlashDevEntry, trapObjectIdValue=trapObjectIdValue, hwPortEntry=hwPortEntry, hwSystemPara=hwSystemPara, hwCliClientLoginTime=hwCliClientLoginTime, hwNmsIndex=hwNmsIndex, hwBufferModuleIndex=hwBufferModuleIndex, hwFrameLinkRightSubSlot=hwFrameLinkRightSubSlot, hwPortIndex=hwPortIndex, hwMemoryDevRawSliceUsed=hwMemoryDevRawSliceUsed, hwFrameLinkLeftSlot=hwFrameLinkLeftSlot, hwDevGeneralTraps=hwDevGeneralTraps, hwSlotAdminResult=hwSlotAdminResult, hwMemoryDev=hwMemoryDev, hwAlarmTable=hwAlarmTable, hwFrameRowStatus=hwFrameRowStatus, hwCompatibleVersion=hwCompatibleVersion, hwSlotEntry=hwSlotEntry, hwCliUserDecr=hwCliUserDecr, hwBufferTable=hwBufferTable, hwFrameLinkLeftSubSlot=hwFrameLinkLeftSubSlot, hwBufferCurrentUsed=hwBufferCurrentUsed, hwCliUserParaTable=hwCliUserParaTable, hwCliUserRowStatus=hwCliUserRowStatus, hwSubslotType=hwSubslotType, hwSubslotEntry=hwSubslotEntry, hwCpuDevDuty=hwCpuDevDuty, hwCpuDevIndex=hwCpuDevIndex, hwSubslotAdminResult=hwSubslotAdminResult, hwFrameLinkRightSlot=hwFrameLinkRightSlot, hwCliClientAdminStatus=hwCliClientAdminStatus, hwPortDesc=hwPortDesc, hwCliClientEntry=hwCliClientEntry, hwSlots=hwSlots, hwSlotTable=hwSlotTable, hwMemoryDevFree=hwMemoryDevFree, hwBufferEntry=hwBufferEntry, hwFrameIndex=hwFrameIndex, hwFlashDevEraseTime=hwFlashDevEraseTime, hwSubSlotAdminResultTrap=hwSubSlotAdminResultTrap, hwFrameLinkOperStatus=hwFrameLinkOperStatus, hwSubslotRowStatus=hwSubslotRowStatus, hwAlarmOcurTime=hwAlarmOcurTime, hwNmsSnmpPort=hwNmsSnmpPort, hwSlotVersion=hwSlotVersion, hwMemoryDevEntry=hwMemoryDevEntry, hwSubslotIndex=hwSubslotIndex, hwFrameType=hwFrameType, hwSlotRowStatus=hwSlotRowStatus, hwAlarmType=hwAlarmType, hwSysVersion=hwSysVersion, hwCliClientTable=hwCliClientTable, hwSubslotOperStatus=hwSubslotOperStatus, hwSlotAdminResultTrap=hwSlotAdminResultTrap, hwPortType=hwPortType, hwSlotPcbVersion=hwSlotPcbVersion, hwFrameLinkIndex=hwFrameLinkIndex, hwSysTime=hwSysTime, hwSubslotAdminStatus=hwSubslotAdminStatus, hwFrameLinks=hwFrameLinks, hwSubslotPorts=hwSubslotPorts, hwNmsName=hwNmsName, hwSubslotTable=hwSubslotTable, hwPortOperStatus=hwPortOperStatus, hwCpuDevTable=hwCpuDevTable, hwMemoryDevFailNoMem=hwMemoryDevFailNoMem, hwCompatibleProductName=hwCompatibleProductName, hwCliClientIp=hwCliClientIp, hwDev=hwDev, hwFrameLinkRowStatus=hwFrameLinkRowStatus, hwFlashDevStatus=hwFlashDevStatus, hwNmsClass=hwNmsClass, hwCpuDevEntry=hwCpuDevEntry, hwAvgDuty1min=hwAvgDuty1min, hwDevTraps=hwDevTraps, hwPortTable=hwPortTable, hwCliUserPassword=hwCliUserPassword, hwSubSlotDesc=hwSubSlotDesc, hwCliUserParaEntry=hwCliUserParaEntry, hwCompatibleSysOid=hwCompatibleSysOid, hwNmsGetCommunity=hwNmsGetCommunity, hwNmsStatus=hwNmsStatus, hwMemoryDevModuleIndex=hwMemoryDevModuleIndex, hwBoardImpedance=hwBoardImpedance, hwNmsMask=hwNmsMask, hwSubSlots=hwSubSlots, hwFrameLinkNumber=hwFrameLinkNumber, hwBoardCurrent=hwBoardCurrent, hwFrameLinkLeftFrame=hwFrameLinkLeftFrame, hwPortAdminStatus=hwPortAdminStatus, hwFrameAdminStatus=hwFrameAdminStatus, hwFlashDevIndex=hwFlashDevIndex, hwSlotDesc=hwSlotDesc, hwCliClientType=hwCliClientType, hwMemoryDevFail=hwMemoryDevFail, hwFrameDesc=hwFrameDesc, hwFrameOperStatus=hwFrameOperStatus, hwFrameLinkNextIndex=hwFrameLinkNextIndex, hwNmsMaintainMode=hwNmsMaintainMode)
