#
# PySNMP MIB module BIANCA-BRICK-PROXY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-PROXY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
DisplayString, = mibBuilder.importSymbols("RFC1158-MIB", "DisplayString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, Unsigned32, MibIdentifier, IpAddress, Bits, ModuleIdentity, Counter32, Integer32, NotificationType, enterprises, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "Unsigned32", "MibIdentifier", "IpAddress", "Bits", "ModuleIdentity", "Counter32", "Integer32", "NotificationType", "enterprises", "iso", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
biboip = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 5))
media = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 50))
ipProxyTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 50), )
if mibBuilder.loadTexts: ipProxyTable.setStatus('mandatory')
ipProxyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1), ).setIndexNames((0, "BIANCA-BRICK-PROXY-MIB", "ipProxyDescr"))
if mibBuilder.loadTexts: ipProxyEntry.setStatus('mandatory')
ipProxyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipProxyDescr.setStatus('mandatory')
ipProxyAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipProxyAdminStatus.setStatus('mandatory')
ipProxyApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8, 15))).clone(namedValues=NamedValues(("sip", 1), ("mgcp", 2), ("rtsp", 3), ("h323udp", 4), ("h323tcp", 8), ("none", 15))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipProxyApplication.setStatus('mandatory')
ipProxyProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 17))).clone(namedValues=NamedValues(("tcp", 6), ("udp", 17))).clone('udp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipProxyProtocol.setStatus('mandatory')
ipProxyIntPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipProxyIntPort.setStatus('mandatory')
ipProxyExtPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipProxyExtPort.setStatus('mandatory')
ipProxyIntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipProxyIntAddr.setStatus('mandatory')
ipProxyPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("default", 1), ("low-latency", 2), ("high", 3), ("medium", 4), ("low", 5))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipProxyPriority.setStatus('mandatory')
ipProxyTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 50, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(7200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipProxyTimeout.setStatus('mandatory')
mediaConnTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 50, 1), )
if mibBuilder.loadTexts: mediaConnTable.setStatus('mandatory')
mediaConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 50, 1, 1), ).setIndexNames((0, "BIANCA-BRICK-PROXY-MIB", "mediaConnIndex"))
if mibBuilder.loadTexts: mediaConnEntry.setStatus('mandatory')
mediaConnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 1, 1, 1), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaConnIndex.setStatus('mandatory')
mediaConnIntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaConnIntAddr.setStatus('mandatory')
mediaConnIntPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaConnIntPort.setStatus('mandatory')
mediaConnExtAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaConnExtAddr.setStatus('mandatory')
mediaConnExtPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaConnExtPort.setStatus('mandatory')
mediaConnRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaConnRemoteAddr.setStatus('mandatory')
mediaConnRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaConnRemotePort.setStatus('mandatory')
mediaConnAge = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaConnAge.setStatus('mandatory')
mediaTerminalTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 50, 2), )
if mibBuilder.loadTexts: mediaTerminalTable.setStatus('mandatory')
mediaTerminalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1), ).setIndexNames((0, "BIANCA-BRICK-PROXY-MIB", "mediaTerminalIntAddr"), (0, "BIANCA-BRICK-PROXY-MIB", "mediaTerminalIntPort"))
if mibBuilder.loadTexts: mediaTerminalEntry.setStatus('mandatory')
mediaTerminalIntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaTerminalIntAddr.setStatus('mandatory')
mediaTerminalIntPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaTerminalIntPort.setStatus('mandatory')
mediaTerminalExtPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaTerminalExtPort.setStatus('mandatory')
mediaTerminalRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaTerminalRemotePort.setStatus('mandatory')
mediaTerminalLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaTerminalLifetime.setStatus('mandatory')
mediaTerminalAge = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaTerminalAge.setStatus('mandatory')
mediaTerminalProto = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 17))).clone(namedValues=NamedValues(("tcp", 6), ("udp", 17))).clone('udp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaTerminalProto.setStatus('mandatory')
mediaTerminalType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 8))).clone(namedValues=NamedValues(("client", 1), ("server", 2), ("delete", 8))).clone('client')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaTerminalType.setStatus('mandatory')
mediaTerminalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 50, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaTerminalSessions.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-PROXY-MIB", mediaConnAge=mediaConnAge, ipProxyAdminStatus=ipProxyAdminStatus, mediaConnIntPort=mediaConnIntPort, mediaConnIntAddr=mediaConnIntAddr, mediaTerminalType=mediaTerminalType, mediaTerminalLifetime=mediaTerminalLifetime, mediaConnIndex=mediaConnIndex, mediaConnRemotePort=mediaConnRemotePort, mediaTerminalEntry=mediaTerminalEntry, mediaTerminalRemotePort=mediaTerminalRemotePort, ipProxyExtPort=ipProxyExtPort, mediaTerminalProto=mediaTerminalProto, mediaTerminalIntPort=mediaTerminalIntPort, ipProxyDescr=ipProxyDescr, ipProxyIntAddr=ipProxyIntAddr, ipProxyTimeout=ipProxyTimeout, mediaConnTable=mediaConnTable, mediaTerminalExtPort=mediaTerminalExtPort, mediaConnExtPort=mediaConnExtPort, ipProxyTable=ipProxyTable, ipProxyEntry=ipProxyEntry, mediaConnRemoteAddr=mediaConnRemoteAddr, mediaTerminalTable=mediaTerminalTable, mediaTerminalIntAddr=mediaTerminalIntAddr, biboip=biboip, mediaTerminalAge=mediaTerminalAge, ipProxyIntPort=ipProxyIntPort, ipProxyProtocol=ipProxyProtocol, ipProxyApplication=ipProxyApplication, mediaConnEntry=mediaConnEntry, bibo=bibo, mediaConnExtAddr=mediaConnExtAddr, bintec=bintec, media=media, ipProxyPriority=ipProxyPriority, mediaTerminalSessions=mediaTerminalSessions)
