#
# PySNMP MIB module CIENA-CES-RSVPTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-RSVPTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
cienaCesNotifications, cienaCesConfig = mibBuilder.importSymbols("CIENA-SMI", "cienaCesNotifications", "cienaCesConfig")
CienaGlobalState, = mibBuilder.importSymbols("CIENA-TC", "CienaGlobalState")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, ObjectIdentity, Bits, TimeTicks, Counter32, Counter64, NotificationType, Integer32, MibIdentifier, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "Bits", "TimeTicks", "Counter32", "Counter64", "NotificationType", "Integer32", "MibIdentifier", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity")
TruthValue, RowStatus, MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "MacAddress", "TextualConvention", "DisplayString")
cienaCesRsvpteMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16))
cienaCesRsvpteMIB.setRevisions(('2016-07-15 00:00', '2016-07-14 00:00', '2016-07-04 00:00', '2013-05-08 00:00', '2011-02-02 00:00',))
if mibBuilder.loadTexts: cienaCesRsvpteMIB.setLastUpdated('201607150000Z')
if mibBuilder.loadTexts: cienaCesRsvpteMIB.setOrganization('Ciena, Inc')
class AdvertisedLabel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 99))
    namedValues = NamedValues(("implicitnull", 1), ("nonreserved", 99))

class RsvpOperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("operStatusUp", 1), ("operStatusDown", 2), ("operStatusGoingUp", 3), ("operStatusGoingDown", 4), ("operStatusActFailed", 5))

class RsvpGRMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("helpNeighbor", 1), ("restartCapable", 2), ("notApplicable", 3))

cienaCesRsvpteMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1))
cienaCesRsvpteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1))
cienaCesRsvpte = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2))
cienaCesRsvpteAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 1), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteAdminStatus.setStatus('current')
cienaCesRsvpteOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 2), RsvpOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteOperStatus.setStatus('current')
cienaCesRsvpteRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 65)).clone(3)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRetryInterval.setStatus('current')
cienaCesRsvpteRetryInfiniteState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRetryInfiniteState.setStatus('current')
cienaCesRsvpteRetryMax = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRetryMax.setStatus('current')
cienaCesRsvpteRefreshInterval = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 6), Integer32().clone(30000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRefreshInterval.setStatus('current')
cienaCesRsvpteRefreshMultiple = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRefreshMultiple.setStatus('current')
cienaCesRsvpteRfrshSlewDenom = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRfrshSlewDenom.setStatus('deprecated')
cienaCesRsvpteRfrshSlewNumerator = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRfrshSlewNumerator.setStatus('deprecated')
cienaCesRsvpteBlockadeMultiple = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteBlockadeMultiple.setStatus('current')
cienaCesRsvpteLSPSetupPriority = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteLSPSetupPriority.setStatus('current')
cienaCesRsvpteLSPHoldingPriority = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteLSPHoldingPriority.setStatus('current')
cienaCesRsvpteUseHopByHop = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteUseHopByHop.setStatus('current')
cienaCesRsvpteRestartCapable = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 14), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRestartCapable.setStatus('current')
cienaCesRsvpteRestartTime = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 15), Unsigned32().clone(60000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRestartTime.setStatus('current')
cienaCesRsvpteRecoveryTime = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 16), Unsigned32().clone(120000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRecoveryTime.setStatus('current')
cienaCesRsvpteMinPeerRestart = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteMinPeerRestart.setStatus('current')
cienaCesRsvpteRefreshSlewDenominator = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRefreshSlewDenominator.setStatus('current')
cienaCesRsvpteRefreshSlewNumerator = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteRefreshSlewNumerator.setStatus('current')
cienaCesRsvpteGRAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 20), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteGRAdminStatus.setStatus('current')
cienaCesRsvpteGRMode = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 1, 21), RsvpGRMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteGRMode.setStatus('current')
cienaCesRsvpteIfTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1), )
if mibBuilder.loadTexts: cienaCesRsvpteIfTable.setStatus('current')
cienaCesRsvpteIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1), ).setIndexNames((0, "CIENA-CES-RSVPTE-MIB", "cienaCesRsvpteIfIndex"))
if mibBuilder.loadTexts: cienaCesRsvpteIfEntry.setStatus('current')
cienaCesRsvpteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: cienaCesRsvpteIfIndex.setStatus('current')
cienaCesRsvpteIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteIfName.setStatus('current')
cienaCesRsvpteIfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteIfIpAddr.setStatus('current')
cienaCesRsvpteIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 9216))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteIfMtu.setStatus('deprecated')
cienaCesRsvpteIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1, 5), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteIfAdminStatus.setStatus('current')
cienaCesRsvpteIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteIfOperStatus.setStatus('current')
cienaCesRsvpteIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteIfHelloInterval.setStatus('current')
cienaCesRsvpteIfHelloTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteIfHelloTolerance.setStatus('current')
cienaCesRsvpteIfAdvertisedLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 16, 1, 2, 1, 1, 9), AdvertisedLabel().clone(99)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRsvpteIfAdvertisedLabel.setStatus('current')
mibBuilder.exportSymbols("CIENA-CES-RSVPTE-MIB", PYSNMP_MODULE_ID=cienaCesRsvpteMIB, cienaCesRsvpteUseHopByHop=cienaCesRsvpteUseHopByHop, cienaCesRsvpteLSPSetupPriority=cienaCesRsvpteLSPSetupPriority, cienaCesRsvpteGRAdminStatus=cienaCesRsvpteGRAdminStatus, cienaCesRsvpteObjects=cienaCesRsvpteObjects, cienaCesRsvpteRfrshSlewNumerator=cienaCesRsvpteRfrshSlewNumerator, cienaCesRsvpteIfMtu=cienaCesRsvpteIfMtu, cienaCesRsvpteGRMode=cienaCesRsvpteGRMode, cienaCesRsvpteRfrshSlewDenom=cienaCesRsvpteRfrshSlewDenom, cienaCesRsvpteIfOperStatus=cienaCesRsvpteIfOperStatus, cienaCesRsvpteIfAdminStatus=cienaCesRsvpteIfAdminStatus, cienaCesRsvpteRetryInfiniteState=cienaCesRsvpteRetryInfiniteState, cienaCesRsvpteRestartCapable=cienaCesRsvpteRestartCapable, cienaCesRsvpteRefreshMultiple=cienaCesRsvpteRefreshMultiple, cienaCesRsvpteRetryInterval=cienaCesRsvpteRetryInterval, cienaCesRsvpteRecoveryTime=cienaCesRsvpteRecoveryTime, cienaCesRsvpteIfName=cienaCesRsvpteIfName, cienaCesRsvpteBlockadeMultiple=cienaCesRsvpteBlockadeMultiple, RsvpOperStatus=RsvpOperStatus, cienaCesRsvpteAdminStatus=cienaCesRsvpteAdminStatus, cienaCesRsvpteIfAdvertisedLabel=cienaCesRsvpteIfAdvertisedLabel, cienaCesRsvpteLSPHoldingPriority=cienaCesRsvpteLSPHoldingPriority, cienaCesRsvpteRefreshSlewDenominator=cienaCesRsvpteRefreshSlewDenominator, cienaCesRsvpteRetryMax=cienaCesRsvpteRetryMax, RsvpGRMode=RsvpGRMode, cienaCesRsvpteRestartTime=cienaCesRsvpteRestartTime, cienaCesRsvpteIfIndex=cienaCesRsvpteIfIndex, AdvertisedLabel=AdvertisedLabel, cienaCesRsvpteRefreshInterval=cienaCesRsvpteRefreshInterval, cienaCesRsvpteRefreshSlewNumerator=cienaCesRsvpteRefreshSlewNumerator, cienaCesRsvpteMinPeerRestart=cienaCesRsvpteMinPeerRestart, cienaCesRsvpteIfHelloInterval=cienaCesRsvpteIfHelloInterval, cienaCesRsvpte=cienaCesRsvpte, cienaCesRsvpteIfTable=cienaCesRsvpteIfTable, cienaCesRsvpteIfHelloTolerance=cienaCesRsvpteIfHelloTolerance, cienaCesRsvpteMIBObjects=cienaCesRsvpteMIBObjects, cienaCesRsvpteOperStatus=cienaCesRsvpteOperStatus, cienaCesRsvpteIfEntry=cienaCesRsvpteIfEntry, cienaCesRsvpteIfIpAddr=cienaCesRsvpteIfIpAddr, cienaCesRsvpteMIB=cienaCesRsvpteMIB)
