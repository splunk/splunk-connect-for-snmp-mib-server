#
# PySNMP MIB module CISCO-ADAPTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ADAPTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:32:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter32, ObjectIdentity, Gauge32, ModuleIdentity, MibIdentifier, IpAddress, Integer32, Bits, NotificationType, Unsigned32, enterprises, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "ObjectIdentity", "Gauge32", "ModuleIdentity", "MibIdentifier", "IpAddress", "Integer32", "Bits", "NotificationType", "Unsigned32", "enterprises", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cisco = MibIdentifier((1, 3, 6, 1, 4, 1, 9))
workgroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 5))
adapterCard = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 5, 2))
adptrNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 5, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrNumber.setStatus('mandatory')
adptrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 5, 2, 2), )
if mibBuilder.loadTexts: adptrTable.setStatus('mandatory')
adptrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1), ).setIndexNames((0, "CISCO-ADAPTER-MIB", "adptrIndex"))
if mibBuilder.loadTexts: adptrEntry.setStatus('mandatory')
adptrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrIndex.setStatus('mandatory')
adptrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 10))).clone(namedValues=NamedValues(("other", 1), ("sBusCddi", 2), ("sBusFddiSt", 3), ("sBusFddi", 4), ("mcaCddi", 5), ("mcaFddiSt", 6), ("mcaFddi", 7), ("eisaCddi", 8), ("eisaFddi", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrType.setStatus('mandatory')
adptrSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrSerialNumber.setStatus('mandatory')
adptrHwHiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrHwHiVersion.setStatus('mandatory')
adptrHwLoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrHwLoVersion.setStatus('mandatory')
adptrFwHiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrFwHiVersion.setStatus('mandatory')
adptrFwLoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrFwLoVersion.setStatus('mandatory')
adptrSwHiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrSwHiVersion.setStatus('mandatory')
adptrSwLoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrSwLoVersion.setStatus('mandatory')
adptrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("minorFault", 3), ("majorFault", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrStatus.setStatus('mandatory')
adptrSelfTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrSelfTestResult.setStatus('mandatory')
adptrDriverHiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrDriverHiVersion.setStatus('mandatory')
adptrDriverLoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrDriverLoVersion.setStatus('mandatory')
adptrMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("cddi", 2), ("fiber", 3), ("tppmd", 4), ("mlt3", 5), ("sddi", 6), ("smf", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrMediaType.setStatus('mandatory')
adptrModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrModel.setStatus('mandatory')
adptrTrapReceiverTable = MibTable((1, 3, 6, 1, 4, 1, 9, 5, 2, 3), )
if mibBuilder.loadTexts: adptrTrapReceiverTable.setStatus('mandatory')
adptrTrapReceiverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 5, 2, 3, 1), ).setIndexNames((0, "CISCO-ADAPTER-MIB", "adptrTrapReceiverAddr"))
if mibBuilder.loadTexts: adptrTrapReceiverEntry.setStatus('mandatory')
adptrTrapReceiverType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adptrTrapReceiverType.setStatus('mandatory')
adptrTrapReceiverAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrTrapReceiverAddr.setStatus('mandatory')
adptrTrapReceiverComm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adptrTrapReceiverComm.setStatus('mandatory')
adptrCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 5, 2, 4), )
if mibBuilder.loadTexts: adptrCommunityTable.setStatus('mandatory')
adptrCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 5, 2, 4, 1), ).setIndexNames((0, "CISCO-ADAPTER-MIB", "adptrCommunityAccess"))
if mibBuilder.loadTexts: adptrCommunityEntry.setStatus('mandatory')
adptrCommunityAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("readOnly", 2), ("readWrite", 3), ("readWriteAll", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrCommunityAccess.setStatus('mandatory')
adptrCommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 5, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adptrCommunityString.setStatus('mandatory')
adptrMgmtType = MibScalar((1, 3, 6, 1, 4, 1, 9, 5, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("snmp", 2), ("smux", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrMgmtType.setStatus('mandatory')
adptrMgmtHiVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 5, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrMgmtHiVersion.setStatus('mandatory')
adptrMgmtLoVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 5, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adptrMgmtLoVersion.setStatus('mandatory')
mibBuilder.exportSymbols("CISCO-ADAPTER-MIB", adptrIndex=adptrIndex, adptrTable=adptrTable, adptrDriverLoVersion=adptrDriverLoVersion, adptrMgmtHiVersion=adptrMgmtHiVersion, adptrType=adptrType, adapterCard=adapterCard, adptrModel=adptrModel, adptrSwHiVersion=adptrSwHiVersion, adptrCommunityEntry=adptrCommunityEntry, adptrCommunityAccess=adptrCommunityAccess, adptrFwLoVersion=adptrFwLoVersion, adptrTrapReceiverTable=adptrTrapReceiverTable, adptrCommunityString=adptrCommunityString, adptrMgmtType=adptrMgmtType, adptrDriverHiVersion=adptrDriverHiVersion, adptrTrapReceiverEntry=adptrTrapReceiverEntry, adptrSerialNumber=adptrSerialNumber, adptrTrapReceiverType=adptrTrapReceiverType, adptrMgmtLoVersion=adptrMgmtLoVersion, workgroup=workgroup, adptrHwLoVersion=adptrHwLoVersion, adptrEntry=adptrEntry, adptrStatus=adptrStatus, cisco=cisco, adptrSwLoVersion=adptrSwLoVersion, adptrCommunityTable=adptrCommunityTable, adptrTrapReceiverAddr=adptrTrapReceiverAddr, adptrHwHiVersion=adptrHwHiVersion, adptrNumber=adptrNumber, adptrMediaType=adptrMediaType, adptrTrapReceiverComm=adptrTrapReceiverComm, adptrSelfTestResult=adptrSelfTestResult, adptrFwHiVersion=adptrFwHiVersion)
