#
# PySNMP MIB module CISCO-WAN-NCDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-NCDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:04:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
iso, ModuleIdentity, TimeTicks, IpAddress, Counter64, Gauge32, MibIdentifier, Unsigned32, Integer32, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "TimeTicks", "IpAddress", "Counter64", "Gauge32", "MibIdentifier", "Unsigned32", "Integer32", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32")
TimeStamp, TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
ciscoWanNcdpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 223))
ciscoWanNcdpMIB.setRevisions(('2001-11-07 00:00',))
if mibBuilder.loadTexts: ciscoWanNcdpMIB.setLastUpdated('200111070000Z')
if mibBuilder.loadTexts: ciscoWanNcdpMIB.setOrganization('Cisco System Inc.')
cwnMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 1))
cwnGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 1))
cwnClockSource = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 2))
cwnManualSource = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 3))
cwnAtmSource = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 4))
cwnAtmInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 5))
class ClockStratum(TextualConvention, Integer32):
    reference = "American National Standards Institute, ANSI T1.101, 'Synchronization Interface for Digital Networks'. Bell Communications Research, GR-436-CORE, 'Digital Network Synchronization Plan'."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("other", 1), ("s1", 2), ("s2e", 3), ("s2", 4), ("s3e", 5), ("s3", 6), ("s4e", 7), ("s4", 8))

class ClockHealthStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("good", 1), ("bad", 2), ("unknown", 3))

class ClockSourceIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

cwnDistributionMethod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ncdp", 1), ("manual", 2))).clone('ncdp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwnDistributionMethod.setStatus('current')
cwnNodeStratum = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 1, 2), ClockStratum().clone('s2')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnNodeStratum.setStatus('current')
cwnMaxDiameter = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 255)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwnMaxDiameter.setStatus('current')
cwnMessageInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(75, 60000)).clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwnMessageInterval.setStatus('current')
cwnHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(75, 60000)).clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwnHoldTime.setStatus('current')
cwnChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("lossOfLock", 3), ("lossOfActivity", 4), ("ncdpRestructure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnChangeReason.setStatus('current')
cwnChangeTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnChangeTimeStamp.setStatus('current')
cwnRootClockSource = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 1, 8), ClockSourceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnRootClockSource.setStatus('current')
cwnClockSourceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 2, 1), )
if mibBuilder.loadTexts: cwnClockSourceTable.setStatus('current')
cwnClockSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-WAN-NCDP-MIB", "cwnClockSourceIndex"))
if mibBuilder.loadTexts: cwnClockSourceEntry.setStatus('current')
cwnClockSourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 2, 1, 1, 1), ClockSourceIndex())
if mibBuilder.loadTexts: cwnClockSourceIndex.setStatus('current')
cwnClockSourceDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnClockSourceDesc.setStatus('current')
cwnInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 2, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnInterfaceIndex.setStatus('current')
cwnOtherClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("internalOscillator", 2), ("bitsClockE1", 3), ("bitsClockT1", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnOtherClockSource.setStatus('current')
cwnManualSourceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 3, 1), )
if mibBuilder.loadTexts: cwnManualSourceTable.setStatus('current')
cwnManualSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-WAN-NCDP-MIB", "cwnManualSourcePriority"))
if mibBuilder.loadTexts: cwnManualSourceEntry.setStatus('current')
cwnManualSourcePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("default", 3))))
if mibBuilder.loadTexts: cwnManualSourcePriority.setStatus('current')
cwnManualSourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 3, 1, 1, 2), ClockSourceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwnManualSourceIndex.setStatus('current')
cwnManualClockHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 3, 1, 1, 3), ClockHealthStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnManualClockHealth.setStatus('current')
cwnManualRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 3, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwnManualRowStatus.setStatus('current')
cwnAtmSourceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 4, 1), )
if mibBuilder.loadTexts: cwnAtmSourceTable.setStatus('current')
cwnAtmSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-WAN-NCDP-MIB", "cwnClockSourceIndex"))
if mibBuilder.loadTexts: cwnAtmSourceEntry.setStatus('current')
cwnAtmSourceBestClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 4, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnAtmSourceBestClockSource.setStatus('current')
cwnAtmSourcePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwnAtmSourcePriority.setStatus('current')
cwnAtmSourceStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 4, 1, 1, 3), ClockStratum().clone('s2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwnAtmSourceStratum.setStatus('current')
cwnAtmSourcePRSReference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwnAtmSourcePRSReference.setStatus('current')
cwnAtmSourceClockHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 4, 1, 1, 5), ClockHealthStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwnAtmSourceClockHealth.setStatus('current')
cwnAtmSourceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 4, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwnAtmSourceRowStatus.setStatus('current')
cwnAtmInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 5, 1), )
if mibBuilder.loadTexts: cwnAtmInterfaceTable.setStatus('current')
cwnAtmInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwnAtmInterfaceEntry.setStatus('current')
cwnAtmInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 5, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwnAtmInterfaceEnable.setStatus('current')
cwnAtmInterfaceAdminWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwnAtmInterfaceAdminWeight.setStatus('current')
cwnAtmInterfaceVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwnAtmInterfaceVpi.setStatus('current')
cwnAtmInterfaceVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 223, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(34)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwnAtmInterfaceVci.setStatus('current')
ciscoWanNcdpMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 2))
ciscoWanNcdpMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 2, 0))
ciscoWanNcdpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 3))
ciscoWanNcdpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 3, 1))
ciscoWanNcdpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 223, 3, 2))
ciscoWanMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 223, 3, 1, 1)).setObjects(("CISCO-WAN-NCDP-MIB", "ciscoWanNcdpGlobalGroup"), ("CISCO-WAN-NCDP-MIB", "ciscoWanNcdpClockSourceGroup"), ("CISCO-WAN-NCDP-MIB", "ciscoWanNcdpManualGroup"), ("CISCO-WAN-NCDP-MIB", "ciscoWanNcdpAtmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanMIBCompliance = ciscoWanMIBCompliance.setStatus('current')
ciscoWanNcdpGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 223, 3, 2, 1)).setObjects(("CISCO-WAN-NCDP-MIB", "cwnDistributionMethod"), ("CISCO-WAN-NCDP-MIB", "cwnNodeStratum"), ("CISCO-WAN-NCDP-MIB", "cwnMaxDiameter"), ("CISCO-WAN-NCDP-MIB", "cwnMessageInterval"), ("CISCO-WAN-NCDP-MIB", "cwnHoldTime"), ("CISCO-WAN-NCDP-MIB", "cwnChangeReason"), ("CISCO-WAN-NCDP-MIB", "cwnChangeTimeStamp"), ("CISCO-WAN-NCDP-MIB", "cwnRootClockSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanNcdpGlobalGroup = ciscoWanNcdpGlobalGroup.setStatus('current')
ciscoWanNcdpClockSourceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 223, 3, 2, 2)).setObjects(("CISCO-WAN-NCDP-MIB", "cwnClockSourceDesc"), ("CISCO-WAN-NCDP-MIB", "cwnInterfaceIndex"), ("CISCO-WAN-NCDP-MIB", "cwnOtherClockSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanNcdpClockSourceGroup = ciscoWanNcdpClockSourceGroup.setStatus('current')
ciscoWanNcdpManualGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 223, 3, 2, 3)).setObjects(("CISCO-WAN-NCDP-MIB", "cwnManualSourceIndex"), ("CISCO-WAN-NCDP-MIB", "cwnManualClockHealth"), ("CISCO-WAN-NCDP-MIB", "cwnManualRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanNcdpManualGroup = ciscoWanNcdpManualGroup.setStatus('current')
ciscoWanNcdpAtmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 223, 3, 2, 4)).setObjects(("CISCO-WAN-NCDP-MIB", "cwnAtmSourceBestClockSource"), ("CISCO-WAN-NCDP-MIB", "cwnAtmSourcePriority"), ("CISCO-WAN-NCDP-MIB", "cwnAtmSourceStratum"), ("CISCO-WAN-NCDP-MIB", "cwnAtmSourcePRSReference"), ("CISCO-WAN-NCDP-MIB", "cwnAtmSourceClockHealth"), ("CISCO-WAN-NCDP-MIB", "cwnAtmSourceRowStatus"), ("CISCO-WAN-NCDP-MIB", "cwnAtmInterfaceEnable"), ("CISCO-WAN-NCDP-MIB", "cwnAtmInterfaceAdminWeight"), ("CISCO-WAN-NCDP-MIB", "cwnAtmInterfaceVpi"), ("CISCO-WAN-NCDP-MIB", "cwnAtmInterfaceVci"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanNcdpAtmGroup = ciscoWanNcdpAtmGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-WAN-NCDP-MIB", cwnAtmSourceClockHealth=cwnAtmSourceClockHealth, cwnMessageInterval=cwnMessageInterval, cwnAtmInterface=cwnAtmInterface, PYSNMP_MODULE_ID=ciscoWanNcdpMIB, cwnManualSourceIndex=cwnManualSourceIndex, cwnAtmInterfaceEnable=cwnAtmInterfaceEnable, ciscoWanNcdpMIBCompliances=ciscoWanNcdpMIBCompliances, cwnDistributionMethod=cwnDistributionMethod, cwnManualClockHealth=cwnManualClockHealth, cwnAtmSourceTable=cwnAtmSourceTable, cwnChangeReason=cwnChangeReason, cwnAtmSourceRowStatus=cwnAtmSourceRowStatus, cwnClockSourceDesc=cwnClockSourceDesc, cwnManualSourceEntry=cwnManualSourceEntry, cwnManualSourcePriority=cwnManualSourcePriority, cwnAtmInterfaceVpi=cwnAtmInterfaceVpi, cwnAtmInterfaceVci=cwnAtmInterfaceVci, ciscoWanNcdpMIBGroups=ciscoWanNcdpMIBGroups, cwnAtmInterfaceTable=cwnAtmInterfaceTable, ciscoWanNcdpGlobalGroup=ciscoWanNcdpGlobalGroup, cwnAtmSourceBestClockSource=cwnAtmSourceBestClockSource, cwnChangeTimeStamp=cwnChangeTimeStamp, cwnMaxDiameter=cwnMaxDiameter, cwnNodeStratum=cwnNodeStratum, cwnAtmSourceStratum=cwnAtmSourceStratum, ClockSourceIndex=ClockSourceIndex, ciscoWanNcdpMIBNotifications=ciscoWanNcdpMIBNotifications, cwnClockSourceEntry=cwnClockSourceEntry, cwnAtmSourceEntry=cwnAtmSourceEntry, ciscoWanNcdpAtmGroup=ciscoWanNcdpAtmGroup, cwnClockSource=cwnClockSource, cwnManualSource=cwnManualSource, cwnOtherClockSource=cwnOtherClockSource, cwnAtmInterfaceAdminWeight=cwnAtmInterfaceAdminWeight, ciscoWanMIBCompliance=ciscoWanMIBCompliance, cwnRootClockSource=cwnRootClockSource, cwnAtmInterfaceEntry=cwnAtmInterfaceEntry, ciscoWanNcdpMIBNotificationPrefix=ciscoWanNcdpMIBNotificationPrefix, ClockHealthStatus=ClockHealthStatus, cwnMIBObjects=cwnMIBObjects, ciscoWanNcdpClockSourceGroup=ciscoWanNcdpClockSourceGroup, cwnClockSourceTable=cwnClockSourceTable, cwnManualSourceTable=cwnManualSourceTable, cwnInterfaceIndex=cwnInterfaceIndex, cwnGlobal=cwnGlobal, cwnAtmSource=cwnAtmSource, ciscoWanNcdpMIBConformance=ciscoWanNcdpMIBConformance, ciscoWanNcdpManualGroup=ciscoWanNcdpManualGroup, cwnAtmSourcePriority=cwnAtmSourcePriority, ClockStratum=ClockStratum, cwnClockSourceIndex=cwnClockSourceIndex, cwnAtmSourcePRSReference=cwnAtmSourcePRSReference, ciscoWanNcdpMIB=ciscoWanNcdpMIB, cwnHoldTime=cwnHoldTime, cwnManualRowStatus=cwnManualRowStatus)
