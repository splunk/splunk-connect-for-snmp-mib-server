#
# PySNMP MIB module PRIVATE-SW0657840-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PRIVATE-SW0657840-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:33:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, Counter64, Counter32, MibIdentifier, iso, Gauge32, enterprises, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, Unsigned32, IpAddress, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "Counter32", "MibIdentifier", "iso", "Gauge32", "enterprises", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "IpAddress", "Bits", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
privatetech = ModuleIdentity((1, 3, 6, 1, 4, 1, 5205))
if mibBuilder.loadTexts: privatetech.setLastUpdated('200607030000Z')
if mibBuilder.loadTexts: privatetech.setOrganization('xxx Tech Corp.')
switch = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2))
sw0657840ProductID = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9))
sw0657840Produces = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1))
sw0657840System = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1))
sw0657840CommonSys = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1))
sw0657840Reboot = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840Reboot.setStatus('current')
sw0657840BiosVsersion = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840BiosVsersion.setStatus('current')
sw0657840FirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840FirmwareVersion.setStatus('current')
sw0657840HardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840HardwareVersion.setStatus('current')
sw0657840MechanicalVersion = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840MechanicalVersion.setStatus('current')
sw0657840SerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SerialNumber.setStatus('current')
sw0657840HostMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840HostMacAddress.setStatus('current')
sw0657840DevicePort = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840DevicePort.setStatus('current')
sw0657840RamSize = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840RamSize.setStatus('current')
sw0657840FlashSize = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840FlashSize.setStatus('current')
sw0657840IP = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 2))
sw0657840DhcpSetting = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DhcpSetting.setStatus('current')
sw0657840IPAddress = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840IPAddress.setStatus('current')
sw0657840NetMask = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840NetMask.setStatus('current')
sw0657840DefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DefaultGateway.setStatus('current')
sw0657840DnsSetting = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DnsSetting.setStatus('current')
sw0657840DnsServer = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 2, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DnsServer.setStatus('current')
sw0657840Time = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 3))
sw0657840SystemCurrentTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SystemCurrentTime.setStatus('current')
sw0657840ManualTimeSetting = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840ManualTimeSetting.setStatus('current')
sw0657840NTPServer = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840NTPServer.setStatus('current')
sw0657840NTPTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840NTPTimeZone.setStatus('current')
sw0657840NTPTimeSync = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840NTPTimeSync.setStatus('current')
sw0657840DaylightSavingTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-5, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DaylightSavingTime.setStatus('current')
sw0657840DaylightStartTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 3, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DaylightStartTime.setStatus('current')
sw0657840DaylightEndTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 3, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DaylightEndTime.setStatus('current')
sw0657840Account = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4))
sw0657840AccountNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840AccountNumber.setStatus('current')
sw0657840AccountTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 2), )
if mibBuilder.loadTexts: sw0657840AccountTable.setStatus('current')
sw0657840AccountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 2, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840AccountIndex"))
if mibBuilder.loadTexts: sw0657840AccountEntry.setStatus('current')
sw0657840AccountIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840AccountIndex.setStatus('current')
sw0657840AccountAuthorization = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840AccountAuthorization.setStatus('current')
sw0657840AccountName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840AccountName.setStatus('current')
sw0657840AccountPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840AccountPassword.setStatus('current')
sw0657840AccountAddName = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840AccountAddName.setStatus('current')
sw0657840AccountAddPassword = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840AccountAddPassword.setStatus('current')
sw0657840DoAccountAdd = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DoAccountAdd.setStatus('current')
sw0657840AccountDel = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840AccountDel.setStatus('current')
sw0657840Snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2))
sw0657840GetCommunity = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840GetCommunity.setStatus('current')
sw0657840SetCommunity = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840SetCommunity.setStatus('current')
sw0657840TrapHostNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840TrapHostNumber.setStatus('current')
sw0657840TrapHostTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2, 4), )
if mibBuilder.loadTexts: sw0657840TrapHostTable.setStatus('current')
sw0657840TrapHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2, 4, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840TrapHostIndex"))
if mibBuilder.loadTexts: sw0657840TrapHostEntry.setStatus('current')
sw0657840TrapHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840TrapHostIndex.setStatus('current')
sw0657840TrapHostIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840TrapHostIP.setStatus('current')
sw0657840TrapHostPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840TrapHostPort.setStatus('current')
sw0657840TrapHostCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 2, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840TrapHostCommunity.setStatus('current')
sw0657840Alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3))
sw0657840Event = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 1))
sw0657840EventNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840EventNumber.setStatus('current')
sw0657840EventTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 1, 2), )
if mibBuilder.loadTexts: sw0657840EventTable.setStatus('current')
sw0657840EventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 1, 2, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840EventIndex"))
if mibBuilder.loadTexts: sw0657840EventEntry.setStatus('current')
sw0657840EventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840EventIndex.setStatus('current')
sw0657840EventName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840EventName.setStatus('current')
sw0657840EventSendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840EventSendEmail.setStatus('current')
sw0657840EventSendSMS = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840EventSendSMS.setStatus('current')
sw0657840EventSendTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840EventSendTrap.setStatus('current')
sw0657840Email = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 2))
sw0657840EmailServer = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840EmailServer.setStatus('current')
sw0657840EmailUsername = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840EmailUsername.setStatus('current')
sw0657840EmailPassword = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840EmailPassword.setStatus('current')
sw0657840EmailUserNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840EmailUserNumber.setStatus('current')
sw0657840EmailUserTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 2, 5), )
if mibBuilder.loadTexts: sw0657840EmailUserTable.setStatus('current')
sw0657840EmailUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 2, 5, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840EmailUserIndex"))
if mibBuilder.loadTexts: sw0657840EmailUserEntry.setStatus('current')
sw0657840EmailUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840EmailUserIndex.setStatus('current')
sw0657840EmailUserAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 2, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840EmailUserAddress.setStatus('current')
sw0657840SMS = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 3))
sw0657840SMSServer = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840SMSServer.setStatus('current')
sw0657840SMSUsername = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840SMSUsername.setStatus('current')
sw0657840SMSPassword = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840SMSPassword.setStatus('current')
sw0657840SMSUserNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SMSUserNumber.setStatus('current')
sw0657840SMSUserTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 3, 5), )
if mibBuilder.loadTexts: sw0657840SMSUserTable.setStatus('current')
sw0657840SMSUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 3, 5, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840SMSUserIndex"))
if mibBuilder.loadTexts: sw0657840SMSUserEntry.setStatus('current')
sw0657840SMSUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SMSUserIndex.setStatus('current')
sw0657840SMSUserMobilePhone = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 3, 3, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840SMSUserMobilePhone.setStatus('current')
sw0657840Tftp = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 4))
sw0657840TftpServer = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 4, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840TftpServer.setStatus('current')
sw0657840Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5))
sw0657840SaveRestore = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 1))
sw0657840SaveStart = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840SaveStart.setStatus('current')
sw0657840SaveUser = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840SaveUser.setStatus('current')
sw0657840RestoreDefault = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840RestoreDefault.setStatus('current')
sw0657840RestoreUser = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840RestoreUser.setStatus('current')
sw0657840ConfigFile = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 2))
sw0657840ExportConfigName = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840ExportConfigName.setStatus('current')
sw0657840DoExportConfig = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DoExportConfig.setStatus('current')
sw0657840ImportConfigName = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840ImportConfigName.setStatus('current')
sw0657840DoImportConfig = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 5, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DoImportConfig.setStatus('current')
sw0657840Diagnostic = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 6))
sw0657840EEPROMTest = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 6, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840EEPROMTest.setStatus('current')
sw0657840UartTest = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 6, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840UartTest.setStatus('current')
sw0657840DramTest = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 6, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840DramTest.setStatus('current')
sw0657840FlashTest = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 6, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840FlashTest.setStatus('current')
sw0657840InternalLoopbackTest = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 6, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840InternalLoopbackTest.setStatus('current')
sw0657840ExternalLoopbackTest = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 6, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840ExternalLoopbackTest.setStatus('current')
sw0657840PingTest = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 6, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840PingTest.setStatus('current')
sw0657840Log = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 7))
sw0657840ClearLog = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840ClearLog.setStatus('current')
sw0657840UploadLog = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840UploadLog.setStatus('current')
sw0657840AutoUploadLogState = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840AutoUploadLogState.setStatus('current')
sw0657840LogNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840LogNumber.setStatus('current')
sw0657840LogTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 7, 5), )
if mibBuilder.loadTexts: sw0657840LogTable.setStatus('current')
sw0657840LogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 7, 5, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840LogIndex"))
if mibBuilder.loadTexts: sw0657840LogEntry.setStatus('current')
sw0657840LogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 7, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840LogIndex.setStatus('current')
sw0657840LogEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 7, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840LogEvent.setStatus('current')
sw0657840Firmware = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 8))
sw0657840FirmwareFileName = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840FirmwareFileName.setStatus('current')
sw0657840DoFirmwareUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840DoFirmwareUpgrade.setStatus('current')
sw0657840Port = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9))
sw0657840PortStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1))
sw0657840PortStatusNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortStatusNumber.setStatus('current')
sw0657840PortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2), )
if mibBuilder.loadTexts: sw0657840PortStatusTable.setStatus('current')
sw0657840PortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840PortStatusIndex"))
if mibBuilder.loadTexts: sw0657840PortStatusEntry.setStatus('current')
sw0657840PortStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortStatusIndex.setStatus('current')
sw0657840PortStatusMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortStatusMedia.setStatus('current')
sw0657840PortStatusLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortStatusLink.setStatus('current')
sw0657840PortStatusPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortStatusPortState.setStatus('current')
sw0657840PortStatusAutoNego = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortStatusAutoNego.setStatus('current')
sw0657840PortStatusSpdDpx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortStatusSpdDpx.setStatus('current')
sw0657840PortStatusFlwCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortStatusFlwCtrl.setStatus('current')
sw0657840PortStatuDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 1, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortStatuDescription.setStatus('current')
sw0657840PortConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 2))
sw0657840PortConfNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortConfNumber.setStatus('current')
sw0657840PortConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 2, 2), )
if mibBuilder.loadTexts: sw0657840PortConfTable.setStatus('current')
sw0657840PortConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 2, 2, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840PortConfIndex"))
if mibBuilder.loadTexts: sw0657840PortConfEntry.setStatus('current')
sw0657840PortConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840PortConfIndex.setStatus('current')
sw0657840PortConfPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840PortConfPortState.setStatus('current')
sw0657840PortConfSpdDpx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840PortConfSpdDpx.setStatus('current')
sw0657840PortConfFlwCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840PortConfFlwCtrl.setStatus('current')
sw0657840PortConfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 9, 2, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840PortConfDescription.setStatus('current')
sw0657840Mirror = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 10))
sw0657840MirrorMode = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840MirrorMode.setStatus('current')
sw0657840MirroringPort = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 10, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840MirroringPort.setStatus('current')
sw0657840MirroredPorts = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 10, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840MirroredPorts.setStatus('current')
sw0657840MaxPktLen = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 11))
sw0657840MaxPktLen1 = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 11, 1))
sw0657840MaxPktLenPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840MaxPktLenPortNumber.setStatus('current')
sw0657840MaxPktLenConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 11, 1, 2), )
if mibBuilder.loadTexts: sw0657840MaxPktLenConfTable.setStatus('current')
sw0657840MaxPktLenConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 11, 1, 2, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840MaxPktLenConfIndex"))
if mibBuilder.loadTexts: sw0657840MaxPktLenConfEntry.setStatus('current')
sw0657840MaxPktLenConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 11, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840MaxPktLenConfIndex.setStatus('current')
sw0657840MaxPktLenConfSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 11, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1518, 1518), ValueRangeConstraint(1532, 1532), ValueRangeConstraint(9216, 9216), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840MaxPktLenConfSetting.setStatus('current')
sw0657840Bandwidth = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12))
sw0657840Bandwidth1 = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1))
sw0657840BandwidthPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840BandwidthPortNumber.setStatus('current')
sw0657840BandwidthConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 2), )
if mibBuilder.loadTexts: sw0657840BandwidthConfTable.setStatus('current')
sw0657840BandwidthConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 2, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840BandwidthConfIndex"))
if mibBuilder.loadTexts: sw0657840BandwidthConfEntry.setStatus('current')
sw0657840BandwidthConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840BandwidthConfIndex.setStatus('current')
sw0657840BandwidthConfIngressState = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840BandwidthConfIngressState.setStatus('current')
sw0657840BandwidthConfIngressBW = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840BandwidthConfIngressBW.setStatus('current')
sw0657840BandwidthConfStormState = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840BandwidthConfStormState.setStatus('current')
sw0657840BandwidthConfStormBW = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840BandwidthConfStormBW.setStatus('current')
sw0657840BandwidthConfEgressState = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840BandwidthConfEgressState.setStatus('current')
sw0657840BandwidthConfEgressBW = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 12, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840BandwidthConfEgressBW.setStatus('current')
sw0657840LoopDetectedConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 13))
sw0657840LoopDetectedNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840LoopDetectedNumber.setStatus('current')
sw0657840LoopDetectedTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 13, 2), )
if mibBuilder.loadTexts: sw0657840LoopDetectedTable.setStatus('current')
sw0657840LoopDetectedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 13, 2, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840LoopDetectedfIndex"))
if mibBuilder.loadTexts: sw0657840LoopDetectedEntry.setStatus('current')
sw0657840LoopDetectedfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840LoopDetectedfIndex.setStatus('current')
sw0657840LoopDetectedStateEbl = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840LoopDetectedStateEbl.setStatus('current')
sw0657840LoopDetectedCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840LoopDetectedCurrentStatus.setStatus('current')
sw0657840LoopDetectedResumed = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 13, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840LoopDetectedResumed.setStatus('current')
sw0657840LoopDetectedAction = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657840LoopDetectedAction.setStatus('current')
sw0657840SFPInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14))
sw0657840SFPInfoNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPInfoNumber.setStatus('current')
sw0657840SFPInfoTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2), )
if mibBuilder.loadTexts: sw0657840SFPInfoTable.setStatus('current')
sw0657840SFPInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1), ).setIndexNames((0, "PRIVATE-SW0657840-MIB", "sw0657840SFPInfoIndex"))
if mibBuilder.loadTexts: sw0657840SFPInfoEntry.setStatus('current')
sw0657840SFPInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPInfoIndex.setStatus('current')
sw0657840SFPConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPConnectorType.setStatus('current')
sw0657840SFPFiberType = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPFiberType.setStatus('current')
sw0657840SFPWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPWavelength.setStatus('current')
sw0657840SFPBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPBaudRate.setStatus('current')
sw0657840SFPVendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPVendorOUI.setStatus('current')
sw0657840SFPVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPVendorName.setStatus('current')
sw0657840SFPVendorPN = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPVendorPN.setStatus('current')
sw0657840SFPVendorRev = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPVendorRev.setStatus('current')
sw0657840SFPVendorSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPVendorSN.setStatus('current')
sw0657840SFPDateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPDateCode.setStatus('current')
sw0657840SFPTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPTemperature.setStatus('current')
sw0657840SFPVcc = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPVcc.setStatus('current')
sw0657840SFPTxBias = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPTxBias.setStatus('current')
sw0657840SFPTxPWR = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPTxPWR.setStatus('current')
sw0657840SFPRxPWR = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 14, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657840SFPRxPWR.setStatus('current')
sw0657840TrapEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20))
sw0657840ModuleInserted = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 1)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657840ModuleInserted.setStatus('current')
sw0657840ModuleRemoved = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 2)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657840ModuleRemoved.setStatus('current')
sw0657840DualMediaSwapped = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 3)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657840DualMediaSwapped.setStatus('current')
sw0657840LoopDetected = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 5)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657840LoopDetected.setStatus('current')
sw0657840StpStateDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 100))
if mibBuilder.loadTexts: sw0657840StpStateDisabled.setStatus('current')
sw0657840StpStateEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 101))
if mibBuilder.loadTexts: sw0657840StpStateEnabled.setStatus('current')
sw0657840StpTopologyChanged = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 102)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657840StpTopologyChanged.setStatus('current')
sw0657840LacpStateDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 120)).setObjects(("IF-MIB", "ifIndex"), ("PRIVATE-SW0657840-MIB", "groupId"))
if mibBuilder.loadTexts: sw0657840LacpStateDisabled.setStatus('current')
sw0657840LacpStateEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 121)).setObjects(("IF-MIB", "ifIndex"), ("PRIVATE-SW0657840-MIB", "groupId"))
if mibBuilder.loadTexts: sw0657840LacpStateEnabled.setStatus('current')
sw0657840LacpPortAdded = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 123)).setObjects(("IF-MIB", "ifIndex"), ("PRIVATE-SW0657840-MIB", "actorkey"), ("PRIVATE-SW0657840-MIB", "partnerkey"))
if mibBuilder.loadTexts: sw0657840LacpPortAdded.setStatus('current')
sw0657840LacpPortTrunkFailure = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 124)).setObjects(("IF-MIB", "ifIndex"), ("PRIVATE-SW0657840-MIB", "actorkey"), ("PRIVATE-SW0657840-MIB", "partnerkey"))
if mibBuilder.loadTexts: sw0657840LacpPortTrunkFailure.setStatus('current')
sw0657840GvrpStateDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 140))
if mibBuilder.loadTexts: sw0657840GvrpStateDisabled.setStatus('current')
sw0657840GvrpStateEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 141))
if mibBuilder.loadTexts: sw0657840GvrpStateEnabled.setStatus('current')
sw0657840VlanStateDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 150))
if mibBuilder.loadTexts: sw0657840VlanStateDisabled.setStatus('current')
sw0657840VlanPortBaseEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 151))
if mibBuilder.loadTexts: sw0657840VlanPortBaseEnabled.setStatus('current')
sw0657840VlanTagBaseEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 152))
if mibBuilder.loadTexts: sw0657840VlanTagBaseEnabled.setStatus('current')
sw0657840VlanMetroModeEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 153)).setObjects(("PRIVATE-SW0657840-MIB", "uplink"))
if mibBuilder.loadTexts: sw0657840VlanMetroModeEnabled.setStatus('current')
sw0657840VlanDoubleTagEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 154))
if mibBuilder.loadTexts: sw0657840VlanDoubleTagEnabled.setStatus('current')
sw0657840UserLogin = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 200)).setObjects(("PRIVATE-SW0657840-MIB", "username"))
if mibBuilder.loadTexts: sw0657840UserLogin.setStatus('current')
sw0657840UserLogout = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 20, 201)).setObjects(("PRIVATE-SW0657840-MIB", "username"))
if mibBuilder.loadTexts: sw0657840UserLogout.setStatus('current')
sw0657840TrapVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 21))
username = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 21, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: username.setStatus('current')
groupId = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 21, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: groupId.setStatus('current')
actorkey = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 21, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: actorkey.setStatus('current')
partnerkey = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 21, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: partnerkey.setStatus('current')
uplink = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 9, 1, 21, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uplink.setStatus('current')
mibBuilder.exportSymbols("PRIVATE-SW0657840-MIB", sw0657840Diagnostic=sw0657840Diagnostic, sw0657840SMSUserTable=sw0657840SMSUserTable, sw0657840PortConfFlwCtrl=sw0657840PortConfFlwCtrl, sw0657840SerialNumber=sw0657840SerialNumber, sw0657840DevicePort=sw0657840DevicePort, sw0657840SFPTxPWR=sw0657840SFPTxPWR, username=username, sw0657840PortConfTable=sw0657840PortConfTable, sw0657840PingTest=sw0657840PingTest, sw0657840Time=sw0657840Time, sw0657840PortStatusTable=sw0657840PortStatusTable, sw0657840SFPVendorRev=sw0657840SFPVendorRev, sw0657840ModuleInserted=sw0657840ModuleInserted, sw0657840AccountNumber=sw0657840AccountNumber, sw0657840ModuleRemoved=sw0657840ModuleRemoved, sw0657840SFPWavelength=sw0657840SFPWavelength, sw0657840PortStatusLink=sw0657840PortStatusLink, sw0657840BandwidthConfStormBW=sw0657840BandwidthConfStormBW, sw0657840UploadLog=sw0657840UploadLog, sw0657840EventSendSMS=sw0657840EventSendSMS, sw0657840PortConf=sw0657840PortConf, sw0657840DoImportConfig=sw0657840DoImportConfig, sw0657840PortConfSpdDpx=sw0657840PortConfSpdDpx, sw0657840Alarm=sw0657840Alarm, switch=switch, sw0657840EEPROMTest=sw0657840EEPROMTest, sw0657840LoopDetectedConf=sw0657840LoopDetectedConf, sw0657840LacpStateDisabled=sw0657840LacpStateDisabled, sw0657840BandwidthConfIngressBW=sw0657840BandwidthConfIngressBW, sw0657840TrapHostIndex=sw0657840TrapHostIndex, actorkey=actorkey, sw0657840ExternalLoopbackTest=sw0657840ExternalLoopbackTest, sw0657840MirroringPort=sw0657840MirroringPort, sw0657840RestoreDefault=sw0657840RestoreDefault, sw0657840SFPVendorOUI=sw0657840SFPVendorOUI, sw0657840AccountIndex=sw0657840AccountIndex, sw0657840MirroredPorts=sw0657840MirroredPorts, sw0657840AutoUploadLogState=sw0657840AutoUploadLogState, sw0657840DoAccountAdd=sw0657840DoAccountAdd, sw0657840BandwidthPortNumber=sw0657840BandwidthPortNumber, sw0657840RamSize=sw0657840RamSize, sw0657840EventIndex=sw0657840EventIndex, sw0657840Produces=sw0657840Produces, sw0657840FlashSize=sw0657840FlashSize, sw0657840EmailPassword=sw0657840EmailPassword, sw0657840SMSUsername=sw0657840SMSUsername, sw0657840Mirror=sw0657840Mirror, sw0657840Configuration=sw0657840Configuration, sw0657840BandwidthConfStormState=sw0657840BandwidthConfStormState, sw0657840NTPTimeSync=sw0657840NTPTimeSync, sw0657840LoopDetectedfIndex=sw0657840LoopDetectedfIndex, sw0657840TrapEntry=sw0657840TrapEntry, sw0657840SMSServer=sw0657840SMSServer, sw0657840MirrorMode=sw0657840MirrorMode, sw0657840SFPTemperature=sw0657840SFPTemperature, sw0657840UartTest=sw0657840UartTest, sw0657840GvrpStateEnabled=sw0657840GvrpStateEnabled, sw0657840TrapVariable=sw0657840TrapVariable, sw0657840SaveRestore=sw0657840SaveRestore, sw0657840PortConfNumber=sw0657840PortConfNumber, sw0657840PortStatusIndex=sw0657840PortStatusIndex, sw0657840AccountPassword=sw0657840AccountPassword, sw0657840PortStatusMedia=sw0657840PortStatusMedia, sw0657840SMSUserEntry=sw0657840SMSUserEntry, sw0657840DoExportConfig=sw0657840DoExportConfig, sw0657840Bandwidth=sw0657840Bandwidth, sw0657840TrapHostTable=sw0657840TrapHostTable, sw0657840SystemCurrentTime=sw0657840SystemCurrentTime, sw0657840EventEntry=sw0657840EventEntry, sw0657840EventSendTrap=sw0657840EventSendTrap, sw0657840LoopDetectedEntry=sw0657840LoopDetectedEntry, sw0657840SFPRxPWR=sw0657840SFPRxPWR, sw0657840MaxPktLenConfTable=sw0657840MaxPktLenConfTable, sw0657840LoopDetectedAction=sw0657840LoopDetectedAction, sw0657840ProductID=sw0657840ProductID, sw0657840VlanPortBaseEnabled=sw0657840VlanPortBaseEnabled, sw0657840LogIndex=sw0657840LogIndex, sw0657840UserLogin=sw0657840UserLogin, sw0657840SFPBaudRate=sw0657840SFPBaudRate, sw0657840Account=sw0657840Account, sw0657840TrapHostCommunity=sw0657840TrapHostCommunity, sw0657840LacpPortTrunkFailure=sw0657840LacpPortTrunkFailure, sw0657840EventTable=sw0657840EventTable, sw0657840LoopDetectedCurrentStatus=sw0657840LoopDetectedCurrentStatus, sw0657840FirmwareVersion=sw0657840FirmwareVersion, sw0657840ImportConfigName=sw0657840ImportConfigName, sw0657840PortStatusAutoNego=sw0657840PortStatusAutoNego, sw0657840MaxPktLen=sw0657840MaxPktLen, sw0657840DhcpSetting=sw0657840DhcpSetting, sw0657840Reboot=sw0657840Reboot, sw0657840SaveUser=sw0657840SaveUser, sw0657840PortStatusPortState=sw0657840PortStatusPortState, sw0657840BandwidthConfIngressState=sw0657840BandwidthConfIngressState, sw0657840SetCommunity=sw0657840SetCommunity, sw0657840VlanDoubleTagEnabled=sw0657840VlanDoubleTagEnabled, sw0657840Log=sw0657840Log, sw0657840DoFirmwareUpgrade=sw0657840DoFirmwareUpgrade, sw0657840HostMacAddress=sw0657840HostMacAddress, sw0657840FirmwareFileName=sw0657840FirmwareFileName, sw0657840LoopDetectedTable=sw0657840LoopDetectedTable, sw0657840ManualTimeSetting=sw0657840ManualTimeSetting, sw0657840LogEvent=sw0657840LogEvent, sw0657840ClearLog=sw0657840ClearLog, sw0657840EventName=sw0657840EventName, sw0657840PortStatuDescription=sw0657840PortStatuDescription, sw0657840NTPTimeZone=sw0657840NTPTimeZone, sw0657840LacpStateEnabled=sw0657840LacpStateEnabled, sw0657840SMSUserMobilePhone=sw0657840SMSUserMobilePhone, sw0657840StpStateEnabled=sw0657840StpStateEnabled, sw0657840VlanTagBaseEnabled=sw0657840VlanTagBaseEnabled, sw0657840DnsServer=sw0657840DnsServer, sw0657840LogTable=sw0657840LogTable, sw0657840MaxPktLen1=sw0657840MaxPktLen1, sw0657840EmailUserIndex=sw0657840EmailUserIndex, sw0657840ConfigFile=sw0657840ConfigFile, sw0657840LoopDetected=sw0657840LoopDetected, sw0657840EmailUserTable=sw0657840EmailUserTable, sw0657840DaylightEndTime=sw0657840DaylightEndTime, sw0657840SaveStart=sw0657840SaveStart, sw0657840SMS=sw0657840SMS, sw0657840DnsSetting=sw0657840DnsSetting, sw0657840Snmp=sw0657840Snmp, sw0657840IPAddress=sw0657840IPAddress, sw0657840DefaultGateway=sw0657840DefaultGateway, sw0657840AccountDel=sw0657840AccountDel, sw0657840EmailUserNumber=sw0657840EmailUserNumber, sw0657840AccountAddPassword=sw0657840AccountAddPassword, sw0657840SFPVendorSN=sw0657840SFPVendorSN, sw0657840EmailUserAddress=sw0657840EmailUserAddress, sw0657840NTPServer=sw0657840NTPServer, sw0657840EventNumber=sw0657840EventNumber, sw0657840BandwidthConfEntry=sw0657840BandwidthConfEntry, sw0657840LoopDetectedStateEbl=sw0657840LoopDetectedStateEbl, sw0657840GvrpStateDisabled=sw0657840GvrpStateDisabled, sw0657840AccountName=sw0657840AccountName, sw0657840EmailUsername=sw0657840EmailUsername, sw0657840DramTest=sw0657840DramTest, sw0657840FlashTest=sw0657840FlashTest, sw0657840Tftp=sw0657840Tftp, sw0657840RestoreUser=sw0657840RestoreUser, sw0657840EmailUserEntry=sw0657840EmailUserEntry, sw0657840VlanMetroModeEnabled=sw0657840VlanMetroModeEnabled, sw0657840SFPInfoIndex=sw0657840SFPInfoIndex, sw0657840PortStatusFlwCtrl=sw0657840PortStatusFlwCtrl, partnerkey=partnerkey, sw0657840DualMediaSwapped=sw0657840DualMediaSwapped, sw0657840SFPInfoNumber=sw0657840SFPInfoNumber, sw0657840Email=sw0657840Email, sw0657840MaxPktLenPortNumber=sw0657840MaxPktLenPortNumber, sw0657840LoopDetectedNumber=sw0657840LoopDetectedNumber, groupId=groupId, sw0657840SFPInfo=sw0657840SFPInfo, sw0657840PortStatus=sw0657840PortStatus, sw0657840TrapHostIP=sw0657840TrapHostIP, sw0657840TftpServer=sw0657840TftpServer, sw0657840Event=sw0657840Event, sw0657840BandwidthConfEgressBW=sw0657840BandwidthConfEgressBW, sw0657840SFPFiberType=sw0657840SFPFiberType, sw0657840BiosVsersion=sw0657840BiosVsersion, sw0657840Bandwidth1=sw0657840Bandwidth1, sw0657840ExportConfigName=sw0657840ExportConfigName, sw0657840SFPInfoEntry=sw0657840SFPInfoEntry, sw0657840SFPInfoTable=sw0657840SFPInfoTable, sw0657840AccountAddName=sw0657840AccountAddName, sw0657840TrapHostPort=sw0657840TrapHostPort, sw0657840TrapHostEntry=sw0657840TrapHostEntry, sw0657840CommonSys=sw0657840CommonSys, privatetech=privatetech, sw0657840VlanStateDisabled=sw0657840VlanStateDisabled, sw0657840DaylightSavingTime=sw0657840DaylightSavingTime, sw0657840AccountTable=sw0657840AccountTable, sw0657840BandwidthConfTable=sw0657840BandwidthConfTable, sw0657840LoopDetectedResumed=sw0657840LoopDetectedResumed, sw0657840SMSUserIndex=sw0657840SMSUserIndex, sw0657840StpStateDisabled=sw0657840StpStateDisabled, sw0657840PortStatusEntry=sw0657840PortStatusEntry, sw0657840SMSUserNumber=sw0657840SMSUserNumber, sw0657840BandwidthConfEgressState=sw0657840BandwidthConfEgressState, sw0657840LogEntry=sw0657840LogEntry, sw0657840MechanicalVersion=sw0657840MechanicalVersion, sw0657840NetMask=sw0657840NetMask, sw0657840GetCommunity=sw0657840GetCommunity, sw0657840SFPConnectorType=sw0657840SFPConnectorType, sw0657840TrapHostNumber=sw0657840TrapHostNumber, sw0657840SFPVcc=sw0657840SFPVcc, sw0657840LogNumber=sw0657840LogNumber, sw0657840LacpPortAdded=sw0657840LacpPortAdded, sw0657840SFPVendorPN=sw0657840SFPVendorPN, sw0657840UserLogout=sw0657840UserLogout, sw0657840EmailServer=sw0657840EmailServer, sw0657840EventSendEmail=sw0657840EventSendEmail, sw0657840Port=sw0657840Port, sw0657840IP=sw0657840IP, sw0657840HardwareVersion=sw0657840HardwareVersion, sw0657840MaxPktLenConfEntry=sw0657840MaxPktLenConfEntry, sw0657840DaylightStartTime=sw0657840DaylightStartTime, sw0657840SFPVendorName=sw0657840SFPVendorName, sw0657840PortConfIndex=sw0657840PortConfIndex, sw0657840PortConfDescription=sw0657840PortConfDescription, sw0657840BandwidthConfIndex=sw0657840BandwidthConfIndex, sw0657840PortStatusNumber=sw0657840PortStatusNumber, sw0657840AccountEntry=sw0657840AccountEntry, sw0657840StpTopologyChanged=sw0657840StpTopologyChanged, sw0657840InternalLoopbackTest=sw0657840InternalLoopbackTest, sw0657840MaxPktLenConfSetting=sw0657840MaxPktLenConfSetting, sw0657840SFPTxBias=sw0657840SFPTxBias, sw0657840PortConfEntry=sw0657840PortConfEntry, sw0657840MaxPktLenConfIndex=sw0657840MaxPktLenConfIndex, uplink=uplink, sw0657840PortStatusSpdDpx=sw0657840PortStatusSpdDpx, sw0657840PortConfPortState=sw0657840PortConfPortState, sw0657840System=sw0657840System, sw0657840Firmware=sw0657840Firmware, PYSNMP_MODULE_ID=privatetech, sw0657840SMSPassword=sw0657840SMSPassword, sw0657840SFPDateCode=sw0657840SFPDateCode, sw0657840AccountAuthorization=sw0657840AccountAuthorization)
