#
# PySNMP MIB module CISCO-SNA-LLC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SNA-LLC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:35:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, Counter64, MibIdentifier, Bits, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, TimeTicks, Counter32, NotificationType, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "MibIdentifier", "Bits", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "TimeTicks", "Counter32", "NotificationType", "IpAddress", "ModuleIdentity")
DisplayString, TimeStamp, MacAddress, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "MacAddress", "TextualConvention", "RowStatus")
ciscoSnaLlcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 8))
ciscoSnaLlcMIB.setRevisions(('1995-05-10 00:00',))
if mibBuilder.loadTexts: ciscoSnaLlcMIB.setLastUpdated('9505100000Z')
if mibBuilder.loadTexts: ciscoSnaLlcMIB.setOrganization('cisco IBM engineering Working Group')
ciscoSnaLlcMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 8, 1))
llcPortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1))
llcSapGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2))
llcCcGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3))
llcPortAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1), )
if mibBuilder.loadTexts: llcPortAdminTable.setStatus('current')
llcPortAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SNA-LLC-MIB", "llcPortVirtualIndex"))
if mibBuilder.loadTexts: llcPortAdminEntry.setStatus('current')
llcPortVirtualIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: llcPortVirtualIndex.setStatus('current')
llcPortAdminName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminName.setStatus('current')
llcPortAdminMaxSaps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 3), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminMaxSaps.setStatus('current')
llcPortAdminMaxCcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminMaxCcs.setStatus('current')
llcPortAdminMaxPDUOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 5), Integer32()).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminMaxPDUOctets.setStatus('current')
llcPortAdminMaxUnackedIPDUsSend = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminMaxUnackedIPDUsSend.setStatus('current')
llcPortAdminMaxUnackedIPDUsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminMaxUnackedIPDUsRcv.setStatus('current')
llcPortAdminMaxRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 8), Integer32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminMaxRetransmits.setStatus('current')
llcPortAdminAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 9), TimeTicks().clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminAckTimer.setStatus('current')
llcPortAdminPbitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 10), TimeTicks().clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminPbitTimer.setStatus('current')
llcPortAdminRejTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 11), TimeTicks().clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminRejTimer.setStatus('current')
llcPortAdminBusyTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 12), TimeTicks().clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminBusyTimer.setStatus('current')
llcPortAdminInactTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 13), TimeTicks().clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminInactTimer.setStatus('current')
llcPortAdminDelayAckCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 14), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminDelayAckCount.setStatus('current')
llcPortAdminDelayAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 15), TimeTicks().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminDelayAckTimer.setStatus('current')
llcPortAdminNw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 1, 1, 16), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcPortAdminNw.setStatus('current')
llcPortOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2), )
if mibBuilder.loadTexts: llcPortOperTable.setStatus('current')
llcPortOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SNA-LLC-MIB", "llcPortVirtualIndex"))
if mibBuilder.loadTexts: llcPortOperEntry.setStatus('current')
llcPortOperMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortOperMacAddress.setStatus('current')
llcPortOperNumSaps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortOperNumSaps.setStatus('current')
llcPortOperHiWaterNumSaps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortOperHiWaterNumSaps.setStatus('current')
llcPortOperSimRim = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortOperSimRim.setStatus('current')
llcPortOperLastModifyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 2, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortOperLastModifyTime.setStatus('current')
llcPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3), )
if mibBuilder.loadTexts: llcPortStatsTable.setStatus('current')
llcPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SNA-LLC-MIB", "llcPortVirtualIndex"))
if mibBuilder.loadTexts: llcPortStatsEntry.setStatus('current')
llcPortStatsPDUsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortStatsPDUsIn.setStatus('current')
llcPortStatsPDUsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortStatsPDUsOut.setStatus('current')
llcPortStatsOctetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 3), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortStatsOctetsIn.setStatus('current')
llcPortStatsOctetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 4), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortStatsOctetsOut.setStatus('current')
llcPortStatsTESTCommandsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortStatsTESTCommandsIn.setStatus('current')
llcPortStatsTESTResponsesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortStatsTESTResponsesOut.setStatus('current')
llcPortStatsLocalBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortStatsLocalBusies.setStatus('current')
llcPortStatsUnknownSaps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcPortStatsUnknownSaps.setStatus('current')
llcSapAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1), )
if mibBuilder.loadTexts: llcSapAdminTable.setStatus('current')
llcSapAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SNA-LLC-MIB", "llcPortVirtualIndex"), (0, "CISCO-SNA-LLC-MIB", "llcSapNumber"))
if mibBuilder.loadTexts: llcSapAdminEntry.setStatus('current')
llcSapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: llcSapNumber.setStatus('current')
llcSapAdminMaxPDUOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 2), Integer32()).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminMaxPDUOctets.setStatus('current')
llcSapAdminMaxUnackedIPDUsSend = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminMaxUnackedIPDUsSend.setStatus('current')
llcSapAdminMaxUnackedIPDUsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminMaxUnackedIPDUsRcv.setStatus('current')
llcSapAdminMaxRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminMaxRetransmits.setStatus('current')
llcSapAdminAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminAckTimer.setStatus('current')
llcSapAdminPbitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 7), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminPbitTimer.setStatus('current')
llcSapAdminRejTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 8), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminRejTimer.setStatus('current')
llcSapAdminBusyTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 9), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminBusyTimer.setStatus('current')
llcSapAdminInactTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 10), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminInactTimer.setStatus('current')
llcSapAdminDelayAckCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminDelayAckCount.setStatus('current')
llcSapAdminDelayAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 12), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminDelayAckTimer.setStatus('current')
llcSapAdminNw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcSapAdminNw.setStatus('current')
llcSapOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2), )
if mibBuilder.loadTexts: llcSapOperTable.setStatus('current')
llcSapOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SNA-LLC-MIB", "llcPortVirtualIndex"), (0, "CISCO-SNA-LLC-MIB", "llcSapNumber"))
if mibBuilder.loadTexts: llcSapOperEntry.setStatus('current')
llcSapOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapOperStatus.setStatus('current')
llcSapOperNumCcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapOperNumCcs.setStatus('current')
llcSapOperHiWaterNumCcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapOperHiWaterNumCcs.setStatus('current')
llcSapOperLlc2Support = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapOperLlc2Support.setStatus('current')
llcSapStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3), )
if mibBuilder.loadTexts: llcSapStatsTable.setStatus('current')
llcSapStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SNA-LLC-MIB", "llcPortVirtualIndex"), (0, "CISCO-SNA-LLC-MIB", "llcSapNumber"))
if mibBuilder.loadTexts: llcSapStatsEntry.setStatus('current')
llcSapStatsLocalBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsLocalBusies.setStatus('current')
llcSapStatsRemoteBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsRemoteBusies.setStatus('current')
llcSapStatsIFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsIFramesIn.setStatus('current')
llcSapStatsIFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsIFramesOut.setStatus('current')
llcSapStatsIOctetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsIOctetsIn.setStatus('current')
llcSapStatsIOctetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsIOctetsOut.setStatus('current')
llcSapStatsSFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsSFramesIn.setStatus('current')
llcSapStatsSFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsSFramesOut.setStatus('current')
llcSapStatsRetransmitsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsRetransmitsOut.setStatus('current')
llcSapStatsREJsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsREJsIn.setStatus('current')
llcSapStatsREJsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsREJsOut.setStatus('current')
llcSapStatsWwCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsWwCount.setStatus('current')
llcSapStatsTESTCommandsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsTESTCommandsIn.setStatus('current')
llcSapStatsTESTCommandsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsTESTCommandsOut.setStatus('current')
llcSapStatsTESTResponsesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsTESTResponsesIn.setStatus('current')
llcSapStatsTESTResponsesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsTESTResponsesOut.setStatus('current')
llcSapStatsXIDCommandsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsXIDCommandsIn.setStatus('current')
llcSapStatsXIDCommandsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsXIDCommandsOut.setStatus('current')
llcSapStatsXIDResponsesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsXIDResponsesIn.setStatus('current')
llcSapStatsXIDResponsesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsXIDResponsesOut.setStatus('current')
llcSapStatsUIFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsUIFramesIn.setStatus('current')
llcSapStatsUIFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsUIFramesOut.setStatus('current')
llcSapStatsUIOctetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsUIOctetsIn.setStatus('current')
llcSapStatsUIOctetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsUIOctetsOut.setStatus('current')
llcSapStatsConnectOk = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsConnectOk.setStatus('current')
llcSapStatsConnectFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsConnectFail.setStatus('current')
llcSapStatsDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsDisconnect.setStatus('current')
llcSapStatsDisconnectFRMRSend = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsDisconnectFRMRSend.setStatus('current')
llcSapStatsDisconnectFRMRRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsDisconnectFRMRRcv.setStatus('current')
llcSapStatsDisconnectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsDisconnectTimer.setStatus('current')
llcSapStatsDMsInABM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsDMsInABM.setStatus('current')
llcSapStatsSABMEsInABM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 2, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcSapStatsSABMEsInABM.setStatus('current')
llcCcAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1), )
if mibBuilder.loadTexts: llcCcAdminTable.setStatus('current')
llcCcAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SNA-LLC-MIB", "llcPortVirtualIndex"), (0, "CISCO-SNA-LLC-MIB", "llcSapNumber"), (0, "CISCO-SNA-LLC-MIB", "llcCcRMac"), (0, "CISCO-SNA-LLC-MIB", "llcCcRSap"))
if mibBuilder.loadTexts: llcCcAdminEntry.setStatus('current')
llcCcRMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: llcCcRMac.setStatus('current')
llcCcRSap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: llcCcRSap.setStatus('current')
llcCcAdminBounce = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminBounce.setStatus('current')
llcCcAdminMaxPDUOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 4), Integer32()).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminMaxPDUOctets.setStatus('current')
llcCcAdminMaxUnackedIPDUsSend = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminMaxUnackedIPDUsSend.setStatus('current')
llcCcAdminMaxUnackedIPDUsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminMaxUnackedIPDUsRcv.setStatus('current')
llcCcAdminMaxRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminMaxRetransmits.setStatus('current')
llcCcAdminAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 8), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminAckTimer.setStatus('current')
llcCcAdminPbitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 9), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminPbitTimer.setStatus('current')
llcCcAdminRejTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 10), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminRejTimer.setStatus('current')
llcCcAdminBusyTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 11), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminBusyTimer.setStatus('current')
llcCcAdminInactTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 12), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminInactTimer.setStatus('current')
llcCcAdminDelayAckCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminDelayAckCount.setStatus('current')
llcCcAdminDelayAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 14), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminDelayAckTimer.setStatus('current')
llcCcAdminNw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminNw.setStatus('current')
llcCcAdminRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: llcCcAdminRowStatus.setStatus('current')
llcCcOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2), )
if mibBuilder.loadTexts: llcCcOperTable.setStatus('current')
llcCcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SNA-LLC-MIB", "llcPortVirtualIndex"), (0, "CISCO-SNA-LLC-MIB", "llcSapNumber"), (0, "CISCO-SNA-LLC-MIB", "llcCcRMac"), (0, "CISCO-SNA-LLC-MIB", "llcCcRSap"))
if mibBuilder.loadTexts: llcCcOperEntry.setStatus('current')
llcCcOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("aDM", 1), ("setup", 2), ("normal", 3), ("busy", 4), ("reject", 5), ("await", 6), ("awaitBusy", 7), ("awaitReject", 8), ("dConn", 9), ("reset", 10), ("error", 11), ("conn", 12), ("resetCheck", 13), ("resetWait", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperState.setStatus('current')
llcCcOperMaxIPDUOctetsSend = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperMaxIPDUOctetsSend.setStatus('current')
llcCcOperMaxIPDUOctetsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperMaxIPDUOctetsRcv.setStatus('current')
llcCcOperMaxUnackedIPDUsSend = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperMaxUnackedIPDUsSend.setStatus('current')
llcCcOperMaxUnackedIPDUsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperMaxUnackedIPDUsRcv.setStatus('current')
llcCcOperMaxRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperMaxRetransmits.setStatus('current')
llcCcOperAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperAckTimer.setStatus('current')
llcCcOperPbitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperPbitTimer.setStatus('current')
llcCcOperRejTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperRejTimer.setStatus('current')
llcCcOperBusyTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperBusyTimer.setStatus('current')
llcCcOperInactTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperInactTimer.setStatus('current')
llcCcOperDelayAckCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperDelayAckCount.setStatus('current')
llcCcOperDelayAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperDelayAckTimer.setStatus('current')
llcCcOperNw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperNw.setStatus('current')
llcCcOperWw = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperWw.setStatus('current')
llcCcOperCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 16), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperCreateTime.setStatus('current')
llcCcOperLastModifyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 17), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperLastModifyTime.setStatus('current')
llcCcOperLastFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperLastFailTime.setStatus('current')
llcCcOperLastFailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("undefined", 1), ("rxFRMR", 2), ("txFRMR", 3), ("discReceived", 4), ("discSent", 5), ("retriesExpired", 6), ("forcedShutdown", 7))).clone('undefined')).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperLastFailCause.setStatus('current')
llcCcOperLastFailFRMRInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperLastFailFRMRInfo.setStatus('current')
llcCcOperLastWwCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("neverInvoked", 1), ("lostData", 2), ("macLayerCongestion", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcOperLastWwCause.setStatus('current')
llcCcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3), )
if mibBuilder.loadTexts: llcCcStatsTable.setStatus('current')
llcCcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-SNA-LLC-MIB", "llcPortVirtualIndex"), (0, "CISCO-SNA-LLC-MIB", "llcSapNumber"), (0, "CISCO-SNA-LLC-MIB", "llcCcRMac"), (0, "CISCO-SNA-LLC-MIB", "llcCcRSap"))
if mibBuilder.loadTexts: llcCcStatsEntry.setStatus('current')
llcCcStatsLocalBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsLocalBusies.setStatus('current')
llcCcStatsRemoteBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsRemoteBusies.setStatus('current')
llcCcStatsIFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsIFramesIn.setStatus('current')
llcCcStatsIFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsIFramesOut.setStatus('current')
llcCcStatsIOctetsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsIOctetsIn.setStatus('current')
llcCcStatsIOctetsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsIOctetsOut.setStatus('current')
llcCcStatsSFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsSFramesIn.setStatus('current')
llcCcStatsSFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsSFramesOut.setStatus('current')
llcCcStatsRetransmitsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsRetransmitsOut.setStatus('current')
llcCcStatsREJsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsREJsIn.setStatus('current')
llcCcStatsREJsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsREJsOut.setStatus('current')
llcCcStatsWwCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 8, 1, 3, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcCcStatsWwCount.setStatus('current')
snaLlcMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 8, 2))
snaLlcMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 8, 2, 0))
llcCcStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 8, 2, 0, 1)).setObjects(("CISCO-SNA-LLC-MIB", "llcCcOperState"), ("CISCO-SNA-LLC-MIB", "llcCcOperLastFailTime"), ("CISCO-SNA-LLC-MIB", "llcCcOperLastFailCause"), ("CISCO-SNA-LLC-MIB", "llcCcOperLastFailFRMRInfo"))
if mibBuilder.loadTexts: llcCcStatusChange.setStatus('current')
snaLlcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 8, 3))
snaLlcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 1))
snaLlcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 2))
llcCoreCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 1, 1)).setObjects(("CISCO-SNA-LLC-MIB", "llcCorePortGroup"), ("CISCO-SNA-LLC-MIB", "llcCoreSapGroup"), ("CISCO-SNA-LLC-MIB", "llcCoreCcGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    llcCoreCompliance = llcCoreCompliance.setStatus('current')
llcCorePortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 2, 1)).setObjects(("CISCO-SNA-LLC-MIB", "llcPortAdminName"), ("CISCO-SNA-LLC-MIB", "llcPortAdminMaxSaps"), ("CISCO-SNA-LLC-MIB", "llcPortAdminMaxCcs"), ("CISCO-SNA-LLC-MIB", "llcPortAdminMaxPDUOctets"), ("CISCO-SNA-LLC-MIB", "llcPortAdminMaxUnackedIPDUsSend"), ("CISCO-SNA-LLC-MIB", "llcPortAdminMaxUnackedIPDUsRcv"), ("CISCO-SNA-LLC-MIB", "llcPortAdminMaxRetransmits"), ("CISCO-SNA-LLC-MIB", "llcPortAdminAckTimer"), ("CISCO-SNA-LLC-MIB", "llcPortAdminPbitTimer"), ("CISCO-SNA-LLC-MIB", "llcPortAdminRejTimer"), ("CISCO-SNA-LLC-MIB", "llcPortAdminBusyTimer"), ("CISCO-SNA-LLC-MIB", "llcPortAdminInactTimer"), ("CISCO-SNA-LLC-MIB", "llcPortAdminDelayAckCount"), ("CISCO-SNA-LLC-MIB", "llcPortAdminDelayAckTimer"), ("CISCO-SNA-LLC-MIB", "llcPortAdminNw"), ("CISCO-SNA-LLC-MIB", "llcPortOperMacAddress"), ("CISCO-SNA-LLC-MIB", "llcPortOperNumSaps"), ("CISCO-SNA-LLC-MIB", "llcPortOperHiWaterNumSaps"), ("CISCO-SNA-LLC-MIB", "llcPortOperSimRim"), ("CISCO-SNA-LLC-MIB", "llcPortOperLastModifyTime"), ("CISCO-SNA-LLC-MIB", "llcPortStatsPDUsIn"), ("CISCO-SNA-LLC-MIB", "llcPortStatsPDUsOut"), ("CISCO-SNA-LLC-MIB", "llcPortStatsOctetsIn"), ("CISCO-SNA-LLC-MIB", "llcPortStatsOctetsOut"), ("CISCO-SNA-LLC-MIB", "llcPortStatsTESTCommandsIn"), ("CISCO-SNA-LLC-MIB", "llcPortStatsTESTResponsesOut"), ("CISCO-SNA-LLC-MIB", "llcPortStatsLocalBusies"), ("CISCO-SNA-LLC-MIB", "llcPortStatsUnknownSaps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    llcCorePortGroup = llcCorePortGroup.setStatus('current')
llcCoreSapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 2, 2)).setObjects(("CISCO-SNA-LLC-MIB", "llcSapAdminMaxPDUOctets"), ("CISCO-SNA-LLC-MIB", "llcSapAdminMaxUnackedIPDUsSend"), ("CISCO-SNA-LLC-MIB", "llcSapAdminMaxUnackedIPDUsRcv"), ("CISCO-SNA-LLC-MIB", "llcSapAdminMaxRetransmits"), ("CISCO-SNA-LLC-MIB", "llcSapAdminAckTimer"), ("CISCO-SNA-LLC-MIB", "llcSapAdminPbitTimer"), ("CISCO-SNA-LLC-MIB", "llcSapAdminRejTimer"), ("CISCO-SNA-LLC-MIB", "llcSapAdminBusyTimer"), ("CISCO-SNA-LLC-MIB", "llcSapAdminInactTimer"), ("CISCO-SNA-LLC-MIB", "llcSapAdminDelayAckCount"), ("CISCO-SNA-LLC-MIB", "llcSapAdminDelayAckTimer"), ("CISCO-SNA-LLC-MIB", "llcSapAdminNw"), ("CISCO-SNA-LLC-MIB", "llcSapOperStatus"), ("CISCO-SNA-LLC-MIB", "llcSapOperNumCcs"), ("CISCO-SNA-LLC-MIB", "llcSapOperHiWaterNumCcs"), ("CISCO-SNA-LLC-MIB", "llcSapOperLlc2Support"), ("CISCO-SNA-LLC-MIB", "llcSapStatsLocalBusies"), ("CISCO-SNA-LLC-MIB", "llcSapStatsRemoteBusies"), ("CISCO-SNA-LLC-MIB", "llcSapStatsIFramesIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsIFramesOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsIOctetsIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsIOctetsOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsSFramesIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsSFramesOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsRetransmitsOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsREJsIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsREJsOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsWwCount"), ("CISCO-SNA-LLC-MIB", "llcSapStatsTESTCommandsIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsTESTCommandsOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsTESTResponsesIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsTESTResponsesOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsXIDCommandsIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsXIDCommandsOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsXIDResponsesIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsXIDResponsesOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsUIFramesIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsUIFramesOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsUIOctetsIn"), ("CISCO-SNA-LLC-MIB", "llcSapStatsUIOctetsOut"), ("CISCO-SNA-LLC-MIB", "llcSapStatsConnectOk"), ("CISCO-SNA-LLC-MIB", "llcSapStatsConnectFail"), ("CISCO-SNA-LLC-MIB", "llcSapStatsDisconnect"), ("CISCO-SNA-LLC-MIB", "llcSapStatsDisconnectFRMRSend"), ("CISCO-SNA-LLC-MIB", "llcSapStatsDisconnectFRMRRcv"), ("CISCO-SNA-LLC-MIB", "llcSapStatsDisconnectTimer"), ("CISCO-SNA-LLC-MIB", "llcSapStatsDMsInABM"), ("CISCO-SNA-LLC-MIB", "llcSapStatsSABMEsInABM"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    llcCoreSapGroup = llcCoreSapGroup.setStatus('current')
llcCoreCcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 8, 3, 2, 3)).setObjects(("CISCO-SNA-LLC-MIB", "llcCcAdminBounce"), ("CISCO-SNA-LLC-MIB", "llcCcAdminMaxPDUOctets"), ("CISCO-SNA-LLC-MIB", "llcCcAdminMaxUnackedIPDUsSend"), ("CISCO-SNA-LLC-MIB", "llcCcAdminMaxUnackedIPDUsRcv"), ("CISCO-SNA-LLC-MIB", "llcCcAdminMaxRetransmits"), ("CISCO-SNA-LLC-MIB", "llcCcAdminAckTimer"), ("CISCO-SNA-LLC-MIB", "llcCcAdminPbitTimer"), ("CISCO-SNA-LLC-MIB", "llcCcAdminRejTimer"), ("CISCO-SNA-LLC-MIB", "llcCcAdminBusyTimer"), ("CISCO-SNA-LLC-MIB", "llcCcAdminInactTimer"), ("CISCO-SNA-LLC-MIB", "llcCcAdminDelayAckCount"), ("CISCO-SNA-LLC-MIB", "llcCcAdminDelayAckTimer"), ("CISCO-SNA-LLC-MIB", "llcCcAdminNw"), ("CISCO-SNA-LLC-MIB", "llcCcAdminRowStatus"), ("CISCO-SNA-LLC-MIB", "llcCcOperState"), ("CISCO-SNA-LLC-MIB", "llcCcOperMaxIPDUOctetsSend"), ("CISCO-SNA-LLC-MIB", "llcCcOperMaxIPDUOctetsRcv"), ("CISCO-SNA-LLC-MIB", "llcCcOperMaxUnackedIPDUsSend"), ("CISCO-SNA-LLC-MIB", "llcCcOperMaxUnackedIPDUsRcv"), ("CISCO-SNA-LLC-MIB", "llcCcOperMaxRetransmits"), ("CISCO-SNA-LLC-MIB", "llcCcOperAckTimer"), ("CISCO-SNA-LLC-MIB", "llcCcOperPbitTimer"), ("CISCO-SNA-LLC-MIB", "llcCcOperRejTimer"), ("CISCO-SNA-LLC-MIB", "llcCcOperBusyTimer"), ("CISCO-SNA-LLC-MIB", "llcCcOperInactTimer"), ("CISCO-SNA-LLC-MIB", "llcCcOperDelayAckCount"), ("CISCO-SNA-LLC-MIB", "llcCcOperDelayAckTimer"), ("CISCO-SNA-LLC-MIB", "llcCcOperNw"), ("CISCO-SNA-LLC-MIB", "llcCcOperWw"), ("CISCO-SNA-LLC-MIB", "llcCcOperCreateTime"), ("CISCO-SNA-LLC-MIB", "llcCcOperLastModifyTime"), ("CISCO-SNA-LLC-MIB", "llcCcOperLastFailTime"), ("CISCO-SNA-LLC-MIB", "llcCcOperLastFailCause"), ("CISCO-SNA-LLC-MIB", "llcCcOperLastFailFRMRInfo"), ("CISCO-SNA-LLC-MIB", "llcCcOperLastWwCause"), ("CISCO-SNA-LLC-MIB", "llcCcStatsLocalBusies"), ("CISCO-SNA-LLC-MIB", "llcCcStatsRemoteBusies"), ("CISCO-SNA-LLC-MIB", "llcCcStatsIFramesIn"), ("CISCO-SNA-LLC-MIB", "llcCcStatsIFramesOut"), ("CISCO-SNA-LLC-MIB", "llcCcStatsIOctetsIn"), ("CISCO-SNA-LLC-MIB", "llcCcStatsIOctetsOut"), ("CISCO-SNA-LLC-MIB", "llcCcStatsSFramesIn"), ("CISCO-SNA-LLC-MIB", "llcCcStatsSFramesOut"), ("CISCO-SNA-LLC-MIB", "llcCcStatsRetransmitsOut"), ("CISCO-SNA-LLC-MIB", "llcCcStatsREJsIn"), ("CISCO-SNA-LLC-MIB", "llcCcStatsREJsOut"), ("CISCO-SNA-LLC-MIB", "llcCcStatsWwCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    llcCoreCcGroup = llcCoreCcGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SNA-LLC-MIB", llcSapAdminEntry=llcSapAdminEntry, llcSapOperStatus=llcSapOperStatus, llcPortStatsOctetsOut=llcPortStatsOctetsOut, llcCcStatsWwCount=llcCcStatsWwCount, llcCcAdminRejTimer=llcCcAdminRejTimer, llcPortAdminMaxUnackedIPDUsSend=llcPortAdminMaxUnackedIPDUsSend, llcSapOperLlc2Support=llcSapOperLlc2Support, llcCcRSap=llcCcRSap, llcSapStatsDisconnectTimer=llcSapStatsDisconnectTimer, llcCcOperTable=llcCcOperTable, llcCcOperAckTimer=llcCcOperAckTimer, llcCcOperWw=llcCcOperWw, snaLlcMIBCompliances=snaLlcMIBCompliances, llcCcOperLastModifyTime=llcCcOperLastModifyTime, llcSapAdminDelayAckCount=llcSapAdminDelayAckCount, llcCcAdminNw=llcCcAdminNw, llcSapAdminMaxPDUOctets=llcSapAdminMaxPDUOctets, llcCoreCcGroup=llcCoreCcGroup, llcSapStatsTESTCommandsOut=llcSapStatsTESTCommandsOut, llcCcOperMaxUnackedIPDUsSend=llcCcOperMaxUnackedIPDUsSend, llcCcOperLastWwCause=llcCcOperLastWwCause, llcPortAdminTable=llcPortAdminTable, llcPortAdminMaxRetransmits=llcPortAdminMaxRetransmits, llcSapStatsDisconnectFRMRRcv=llcSapStatsDisconnectFRMRRcv, llcCcOperEntry=llcCcOperEntry, llcCcStatsREJsOut=llcCcStatsREJsOut, llcPortGroup=llcPortGroup, llcPortAdminMaxPDUOctets=llcPortAdminMaxPDUOctets, llcSapAdminBusyTimer=llcSapAdminBusyTimer, llcSapStatsXIDCommandsIn=llcSapStatsXIDCommandsIn, snaLlcMIBNotifications=snaLlcMIBNotifications, llcCcAdminRowStatus=llcCcAdminRowStatus, llcCcStatsTable=llcCcStatsTable, llcCcOperMaxIPDUOctetsRcv=llcCcOperMaxIPDUOctetsRcv, llcSapStatsIFramesOut=llcSapStatsIFramesOut, llcSapOperNumCcs=llcSapOperNumCcs, llcPortVirtualIndex=llcPortVirtualIndex, llcPortOperMacAddress=llcPortOperMacAddress, llcPortOperLastModifyTime=llcPortOperLastModifyTime, llcCcStatsIFramesOut=llcCcStatsIFramesOut, llcSapStatsDMsInABM=llcSapStatsDMsInABM, llcCcRMac=llcCcRMac, llcCcOperDelayAckCount=llcCcOperDelayAckCount, llcPortStatsEntry=llcPortStatsEntry, llcPortStatsPDUsOut=llcPortStatsPDUsOut, llcSapStatsLocalBusies=llcSapStatsLocalBusies, llcCcStatsLocalBusies=llcCcStatsLocalBusies, llcCcAdminMaxPDUOctets=llcCcAdminMaxPDUOctets, llcSapStatsDisconnectFRMRSend=llcSapStatsDisconnectFRMRSend, llcCcAdminBounce=llcCcAdminBounce, llcCcOperLastFailCause=llcCcOperLastFailCause, llcSapStatsSABMEsInABM=llcSapStatsSABMEsInABM, llcSapGroup=llcSapGroup, llcSapStatsSFramesOut=llcSapStatsSFramesOut, llcCcOperLastFailFRMRInfo=llcCcOperLastFailFRMRInfo, llcPortAdminMaxUnackedIPDUsRcv=llcPortAdminMaxUnackedIPDUsRcv, llcPortOperTable=llcPortOperTable, llcCcStatsREJsIn=llcCcStatsREJsIn, llcSapStatsConnectOk=llcSapStatsConnectOk, llcSapStatsUIOctetsIn=llcSapStatsUIOctetsIn, llcPortAdminPbitTimer=llcPortAdminPbitTimer, llcSapAdminMaxUnackedIPDUsSend=llcSapAdminMaxUnackedIPDUsSend, llcSapAdminNw=llcSapAdminNw, llcSapStatsTESTResponsesIn=llcSapStatsTESTResponsesIn, llcPortAdminName=llcPortAdminName, llcPortAdminEntry=llcPortAdminEntry, llcSapOperEntry=llcSapOperEntry, llcPortOperHiWaterNumSaps=llcPortOperHiWaterNumSaps, llcCcGroup=llcCcGroup, llcSapStatsRemoteBusies=llcSapStatsRemoteBusies, llcCcAdminTable=llcCcAdminTable, llcCcStatsSFramesOut=llcCcStatsSFramesOut, llcCcOperMaxRetransmits=llcCcOperMaxRetransmits, llcCcAdminPbitTimer=llcCcAdminPbitTimer, llcCcAdminAckTimer=llcCcAdminAckTimer, snaLlcMIBNotificationPrefix=snaLlcMIBNotificationPrefix, snaLlcMIBGroups=snaLlcMIBGroups, llcCcOperCreateTime=llcCcOperCreateTime, llcSapAdminPbitTimer=llcSapAdminPbitTimer, llcCcAdminMaxUnackedIPDUsSend=llcCcAdminMaxUnackedIPDUsSend, llcCcOperNw=llcCcOperNw, llcCcOperLastFailTime=llcCcOperLastFailTime, llcCcStatsRetransmitsOut=llcCcStatsRetransmitsOut, llcSapNumber=llcSapNumber, llcCcAdminEntry=llcCcAdminEntry, llcCcOperMaxIPDUOctetsSend=llcCcOperMaxIPDUOctetsSend, llcCoreSapGroup=llcCoreSapGroup, llcSapStatsREJsIn=llcSapStatsREJsIn, llcCcStatsIOctetsOut=llcCcStatsIOctetsOut, llcSapStatsUIOctetsOut=llcSapStatsUIOctetsOut, llcSapStatsIOctetsOut=llcSapStatsIOctetsOut, llcSapAdminAckTimer=llcSapAdminAckTimer, llcPortAdminInactTimer=llcPortAdminInactTimer, llcPortStatsTESTCommandsIn=llcPortStatsTESTCommandsIn, llcCcOperDelayAckTimer=llcCcOperDelayAckTimer, llcSapAdminRejTimer=llcSapAdminRejTimer, llcCcOperPbitTimer=llcCcOperPbitTimer, llcPortAdminMaxSaps=llcPortAdminMaxSaps, llcSapStatsXIDResponsesIn=llcSapStatsXIDResponsesIn, llcPortStatsLocalBusies=llcPortStatsLocalBusies, llcSapOperTable=llcSapOperTable, llcSapAdminMaxUnackedIPDUsRcv=llcSapAdminMaxUnackedIPDUsRcv, llcSapStatsIFramesIn=llcSapStatsIFramesIn, llcPortStatsPDUsIn=llcPortStatsPDUsIn, llcSapStatsUIFramesIn=llcSapStatsUIFramesIn, llcCcStatusChange=llcCcStatusChange, llcPortStatsTable=llcPortStatsTable, llcCcOperMaxUnackedIPDUsRcv=llcCcOperMaxUnackedIPDUsRcv, llcSapStatsIOctetsIn=llcSapStatsIOctetsIn, llcSapStatsWwCount=llcSapStatsWwCount, llcSapOperHiWaterNumCcs=llcSapOperHiWaterNumCcs, llcCcAdminDelayAckCount=llcCcAdminDelayAckCount, llcSapAdminTable=llcSapAdminTable, llcSapStatsTESTCommandsIn=llcSapStatsTESTCommandsIn, llcPortOperNumSaps=llcPortOperNumSaps, llcSapStatsXIDResponsesOut=llcSapStatsXIDResponsesOut, llcSapStatsTESTResponsesOut=llcSapStatsTESTResponsesOut, ciscoSnaLlcMIBObjects=ciscoSnaLlcMIBObjects, llcPortStatsUnknownSaps=llcPortStatsUnknownSaps, llcSapStatsSFramesIn=llcSapStatsSFramesIn, llcSapStatsTable=llcSapStatsTable, llcSapStatsREJsOut=llcSapStatsREJsOut, llcCcStatsIFramesIn=llcCcStatsIFramesIn, llcCoreCompliance=llcCoreCompliance, llcSapStatsRetransmitsOut=llcSapStatsRetransmitsOut, llcCcOperBusyTimer=llcCcOperBusyTimer, llcSapStatsXIDCommandsOut=llcSapStatsXIDCommandsOut, llcCcAdminMaxUnackedIPDUsRcv=llcCcAdminMaxUnackedIPDUsRcv, llcPortAdminRejTimer=llcPortAdminRejTimer, llcPortStatsOctetsIn=llcPortStatsOctetsIn, snaLlcMIBConformance=snaLlcMIBConformance, llcCcStatsSFramesIn=llcCcStatsSFramesIn, llcPortAdminAckTimer=llcPortAdminAckTimer, llcSapAdminDelayAckTimer=llcSapAdminDelayAckTimer, llcCcAdminBusyTimer=llcCcAdminBusyTimer, llcCcAdminInactTimer=llcCcAdminInactTimer, llcCcOperRejTimer=llcCcOperRejTimer, ciscoSnaLlcMIB=ciscoSnaLlcMIB, llcSapStatsEntry=llcSapStatsEntry, llcCcStatsEntry=llcCcStatsEntry, llcSapStatsConnectFail=llcSapStatsConnectFail, llcPortAdminDelayAckTimer=llcPortAdminDelayAckTimer, llcPortAdminNw=llcPortAdminNw, llcSapAdminInactTimer=llcSapAdminInactTimer, llcPortOperSimRim=llcPortOperSimRim, llcSapStatsDisconnect=llcSapStatsDisconnect, llcCcStatsIOctetsIn=llcCcStatsIOctetsIn, llcPortAdminDelayAckCount=llcPortAdminDelayAckCount, PYSNMP_MODULE_ID=ciscoSnaLlcMIB, llcPortAdminMaxCcs=llcPortAdminMaxCcs, llcPortStatsTESTResponsesOut=llcPortStatsTESTResponsesOut, llcCcOperState=llcCcOperState, llcCcOperInactTimer=llcCcOperInactTimer, llcSapStatsUIFramesOut=llcSapStatsUIFramesOut, llcSapAdminMaxRetransmits=llcSapAdminMaxRetransmits, llcCcAdminMaxRetransmits=llcCcAdminMaxRetransmits, llcCorePortGroup=llcCorePortGroup, llcCcStatsRemoteBusies=llcCcStatsRemoteBusies, llcCcAdminDelayAckTimer=llcCcAdminDelayAckTimer, llcPortOperEntry=llcPortOperEntry, llcPortAdminBusyTimer=llcPortAdminBusyTimer)
