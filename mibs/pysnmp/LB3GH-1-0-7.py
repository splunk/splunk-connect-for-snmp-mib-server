#
# PySNMP MIB module LB3GH-1-0-7 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LB3GH-1-0-7
# Produced by pysmi-0.3.4 at Mon Apr 29 19:55:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter32, MibIdentifier, NotificationType, IpAddress, Unsigned32, Bits, enterprises, Integer32, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter32", "MibIdentifier", "NotificationType", "IpAddress", "Unsigned32", "Bits", "enterprises", "Integer32", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
lb3gh = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7))
lb3ghMib = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1))
chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 1))
slot = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 2))
smm = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 3))
fbcm = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 4))
fcm = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 5))
port = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 6))
elm = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 7))
elmFddiMAC = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 8))
elmEthernetPort = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 9))
elmMACAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 10))
lbSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 11))
lbSlot = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 12))
lbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 13))
lbEthernetPort = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 14))
lbFddiPort = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 15))
lbExpress = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 16))
lbExpressFddiPort = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 17))
lbExpressEthernetPort = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 18))
lbExpressEthernetPortAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 19))
lbPowerSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 20))
lbBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 21))
lbTrapEnterprise = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 22))
lbTrapDest = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 7, 1, 23))
chassisId = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisId.setStatus('deprecated')
chassisType = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("linkBuilder3GH", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisType.setStatus('deprecated')
chassisRevision = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisRevision.setStatus('deprecated')
chassisName = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisName.setStatus('deprecated')
chassisNameAbbrev = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisNameAbbrev.setStatus('deprecated')
chassisManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisManufacturer.setStatus('deprecated')
chassisSlotCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisSlotCount.setStatus('deprecated')
chassisBuildTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisBuildTime.setStatus('deprecated')
chassisSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisSoftwareRevision.setStatus('deprecated')
chassisControlPanelColumns = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisControlPanelColumns.setStatus('deprecated')
chassisControlPanelLines = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisControlPanelLines.setStatus('deprecated')
chassisControlPanelText = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chassisControlPanelText.setStatus('deprecated')
chassisAction = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chassisAction.setStatus('deprecated')
slotTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 2, 1), )
if mibBuilder.loadTexts: slotTable.setStatus('deprecated')
slotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 2, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "slotIndex"))
if mibBuilder.loadTexts: slotEntry.setStatus('deprecated')
slotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotIndex.setStatus('deprecated')
slotBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("emptySlot", 2), ("smm", 3), ("fbcm", 4), ("fcm", 5), ("elm", 6), ("esm", 7), ("fcm2", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardType.setStatus('deprecated')
slotBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardRevision.setStatus('deprecated')
slotBoardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notPresent", 1), ("testing", 2), ("offline", 3), ("online", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardStatus.setStatus('deprecated')
slotBoardName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardName.setStatus('deprecated')
slotBoardNameAbbrev = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotBoardNameAbbrev.setStatus('deprecated')
slotBoardAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("runDiagnostics", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slotBoardAction.setStatus('deprecated')
smmTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 3, 1), )
if mibBuilder.loadTexts: smmTable.setStatus('deprecated')
smmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 3, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "smmSlotIndex"))
if mibBuilder.loadTexts: smmEntry.setStatus('deprecated')
smmSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmSlotIndex.setStatus('deprecated')
smmEthernetPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmEthernetPortCount.setStatus('deprecated')
smmBaseEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smmBaseEthernetPortIndex.setStatus('deprecated')
fbcmTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 4, 1), )
if mibBuilder.loadTexts: fbcmTable.setStatus('deprecated')
fbcmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 4, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "fbcmSlotIndex"))
if mibBuilder.loadTexts: fbcmEntry.setStatus('deprecated')
fbcmSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fbcmSlotIndex.setStatus('deprecated')
fbcmMACCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fbcmMACCount.setStatus('deprecated')
fbcmBaseMACIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fbcmBaseMACIndex.setStatus('deprecated')
fbcmPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fbcmPortCount.setStatus('deprecated')
fbcmBasePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fbcmBasePortIndex.setStatus('deprecated')
fcmTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 5, 1), )
if mibBuilder.loadTexts: fcmTable.setStatus('deprecated')
fcmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 5, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "fcmSlotIndex"))
if mibBuilder.loadTexts: fcmEntry.setStatus('deprecated')
fcmSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcmSlotIndex.setStatus('deprecated')
fcmPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcmPortCount.setStatus('deprecated')
fcmBasePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcmBasePortIndex.setStatus('deprecated')
portTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 6, 1), )
if mibBuilder.loadTexts: portTable.setStatus('deprecated')
portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 6, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "portSlotIndex"), (0, "LB3GH-1-0-7", "portIndex"))
if mibBuilder.loadTexts: portEntry.setStatus('deprecated')
portSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSlotIndex.setStatus('deprecated')
portIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portIndex.setStatus('deprecated')
portLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 6, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portLabel.setStatus('deprecated')
elmTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 7, 1), )
if mibBuilder.loadTexts: elmTable.setStatus('deprecated')
elmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 7, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "elmSlotIndex"))
if mibBuilder.loadTexts: elmEntry.setStatus('deprecated')
elmSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmSlotIndex.setStatus('deprecated')
elmFddiMACCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmFddiMACCount.setStatus('deprecated')
elmBaseFddiMACIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmBaseFddiMACIndex.setStatus('deprecated')
elmEthernetPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmEthernetPortCount.setStatus('deprecated')
elmBaseEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmBaseEthernetPortIndex.setStatus('deprecated')
elmAddressThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 7, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmAddressThreshold.setStatus('deprecated')
elmFddiMACTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 8, 1), )
if mibBuilder.loadTexts: elmFddiMACTable.setStatus('deprecated')
elmFddiMACEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 8, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "elmFddiSlotIndex"), (0, "LB3GH-1-0-7", "elmFddiMACIndex"))
if mibBuilder.loadTexts: elmFddiMACEntry.setStatus('deprecated')
elmFddiSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmFddiSlotIndex.setStatus('deprecated')
elmFddiMACIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 8, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmFddiMACIndex.setStatus('deprecated')
elmFddiMACForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 8, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmFddiMACForwardedCts.setStatus('deprecated')
elmFddiMACDroppedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 8, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmFddiMACDroppedCts.setStatus('deprecated')
elmEthernetPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1), )
if mibBuilder.loadTexts: elmEthernetPortTable.setStatus('deprecated')
elmEthernetPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "elmEthernetPortSlotIndex"), (0, "LB3GH-1-0-7", "elmEthernetPortIndex"))
if mibBuilder.loadTexts: elmEthernetPortEntry.setStatus('deprecated')
elmEthernetPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmEthernetPortSlotIndex.setStatus('deprecated')
elmEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmEthernetPortIndex.setStatus('deprecated')
elmEthernetPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetPortLabel.setStatus('deprecated')
elmEthernetPortForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmEthernetPortForwardedCts.setStatus('deprecated')
elmEthernetPortDroppedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmEthernetPortDroppedCts.setStatus('deprecated')
elmEthernetPortUTurnCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: elmEthernetPortUTurnCts.setStatus('deprecated')
elmEthernetPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onlineActive", 1), ("onlineInactive", 2), ("offline", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetPortState.setStatus('deprecated')
elmEthernetPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("freezeAddress", 2), ("flushAddress", 3), ("flushDynamicAddress", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetPortAction.setStatus('deprecated')
elmEthernetMACAddressTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1), )
if mibBuilder.loadTexts: elmEthernetMACAddressTable.setStatus('deprecated')
elmEthernetMACAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "elmEthernetMACAddressSlotIndex"), (0, "LB3GH-1-0-7", "elmEthernetMACAddressPortIndex"), (0, "LB3GH-1-0-7", "elmEthernetMACAddressIndex"))
if mibBuilder.loadTexts: elmEthernetMACAddressEntry.setStatus('deprecated')
elmEthernetMACAddressSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetMACAddressSlotIndex.setStatus('deprecated')
elmEthernetMACAddressPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetMACAddressPortIndex.setStatus('deprecated')
elmEthernetMACAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetMACAddressIndex.setStatus('deprecated')
elmEthernetMACAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetMACAddressType.setStatus('deprecated')
elmEthernetMACAddressRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetMACAddressRemoteAddress.setStatus('deprecated')
elmEthernetMACAddressIsStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("isStatic", 1), ("isDynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetMACAddressIsStatic.setStatus('deprecated')
elmEthernetMACAddressStaticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetMACAddressStaticPort.setStatus('deprecated')
elmEthernetMACAddressAge = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 10, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: elmEthernetMACAddressAge.setStatus('deprecated')
lbSystemId = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemId.setStatus('mandatory')
lbSystemType = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("tweleveSlot", 2), ("fourSlot", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemType.setStatus('mandatory')
lbSystemName = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemName.setStatus('mandatory')
lbSystemManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemManufacturer.setStatus('mandatory')
lbSystemBackplaneRevision = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemBackplaneRevision.setStatus('mandatory')
lbSystemSlotCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemSlotCount.setStatus('mandatory')
lbSystemMemorySize = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemMemorySize.setStatus('mandatory')
lbSystemFlashMemorySize = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemFlashMemorySize.setStatus('mandatory')
lbSystemNvMemorySize = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemNvMemorySize.setStatus('mandatory')
lbSystemSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemSoftwareRevision.setStatus('mandatory')
lbSystemBuildTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemBuildTime.setStatus('mandatory')
lbSystemControlPanelHardwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemControlPanelHardwareRevision.setStatus('mandatory')
lbSystemControlPanelSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemControlPanelSoftwareRevision.setStatus('mandatory')
lbSystemControlPanelLines = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemControlPanelLines.setStatus('mandatory')
lbSystemControlPanelColumns = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemControlPanelColumns.setStatus('mandatory')
lbSystemControlPanelText = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemControlPanelText.setStatus('mandatory')
lbSystemFddiMacCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemFddiMacCount.setStatus('mandatory')
lbSystemFddiPortCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemFddiPortCount.setStatus('mandatory')
lbSystemEthernetPortCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemEthernetPortCount.setStatus('mandatory')
lbSystemExpressFunctionCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemExpressFunctionCount.setStatus('deprecated')
lbSystemExpressFddiPortCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemExpressFddiPortCount.setStatus('deprecated')
lbSystemExpressEthernetPortCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemExpressEthernetPortCount.setStatus('deprecated')
lbSystemPowerSupplyCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemPowerSupplyCount.setStatus('mandatory')
lbSystemAction = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbSystemAction.setStatus('mandatory')
lbSystemBridgeFunctionCount = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSystemBridgeFunctionCount.setStatus('mandatory')
lbSystemSmtProxyTimeoutBase = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbSystemSmtProxyTimeoutBase.setStatus('mandatory')
lbSystemSmtProxyEvents = MibScalar((1, 3, 6, 1, 4, 1, 43, 7, 1, 11, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbSystemSmtProxyEvents.setStatus('mandatory')
lbSlotTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1), )
if mibBuilder.loadTexts: lbSlotTable.setStatus('mandatory')
lbSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbSlotIndex"))
if mibBuilder.loadTexts: lbSlotEntry.setStatus('mandatory')
lbSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotIndex.setStatus('mandatory')
lbSlotBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("emptySlot", 2), ("spm", 3), ("feam", 4), ("fcm", 5), ("elm", 6), ("esm", 7), ("fcm2", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotBoardType.setStatus('mandatory')
lbSlotBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotBoardRevision.setStatus('mandatory')
lbSlotBoardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notPresent", 1), ("testing", 2), ("offline", 3), ("online", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotBoardStatus.setStatus('mandatory')
lbSlotBoardName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotBoardName.setStatus('mandatory')
lbSlotBoardNameAbbrev = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotBoardNameAbbrev.setStatus('mandatory')
lbSlotFddiMacCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotFddiMacCount.setStatus('mandatory')
lbSlotFddiMacBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotFddiMacBaseIndex.setStatus('mandatory')
lbSlotFddiPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotFddiPortCount.setStatus('mandatory')
lbSlotFddiPortBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotFddiPortBaseIndex.setStatus('mandatory')
lbSlotEthernetPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotEthernetPortCount.setStatus('mandatory')
lbSlotEthernetPortBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotEthernetPortBaseIndex.setStatus('mandatory')
lbSlotExpressFunctionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotExpressFunctionCount.setStatus('deprecated')
lbSlotExpressFunctionBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotExpressFunctionBaseIndex.setStatus('deprecated')
lbSlotExpressFddiPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotExpressFddiPortCount.setStatus('deprecated')
lbSlotExpressFddiPortBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotExpressFddiPortBaseIndex.setStatus('deprecated')
lbSlotExpressEthernetPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotExpressEthernetPortCount.setStatus('deprecated')
lbSlotExpressEthernetPortBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotExpressEthernetPortBaseIndex.setStatus('deprecated')
lbSlotBoardAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("runDiagnostics", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbSlotBoardAction.setStatus('mandatory')
lbSlotBridgeFunctionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotBridgeFunctionCount.setStatus('mandatory')
lbSlotBridgeFunctionBaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 12, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbSlotBridgeFunctionBaseIndex.setStatus('mandatory')
lbFddiMacTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1), )
if mibBuilder.loadTexts: lbFddiMacTable.setStatus('mandatory')
lbFddiMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbFddiMacIndex"))
if mibBuilder.loadTexts: lbFddiMacEntry.setStatus('mandatory')
lbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacIndex.setStatus('mandatory')
lbFddiMacSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacSlotIndex.setStatus('mandatory')
lbFddiMacLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacLocalIndex.setStatus('mandatory')
lbFddiMacByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacByteReceiveRate.setStatus('mandatory')
lbFddiMacPeakByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacPeakByteReceiveRate.setStatus('mandatory')
lbFddiMacFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacFrameReceiveRate.setStatus('mandatory')
lbFddiMacPeakFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacPeakFrameReceiveRate.setStatus('mandatory')
lbFddiMacByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacByteTransmitRate.setStatus('mandatory')
lbFddiMacPeakByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacPeakByteTransmitRate.setStatus('mandatory')
lbFddiMacFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacFrameTransmitRate.setStatus('mandatory')
lbFddiMacPeakFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacPeakFrameTransmitRate.setStatus('mandatory')
lbFddiMacReceiveMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbFddiMacReceiveMulticastThreshold.setStatus('mandatory')
lbFddiMacBeaconHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 13, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiMacBeaconHistory.setStatus('mandatory')
lbEthernetPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1), )
if mibBuilder.loadTexts: lbEthernetPortTable.setStatus('mandatory')
lbEthernetPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbEthernetPortIndex"))
if mibBuilder.loadTexts: lbEthernetPortEntry.setStatus('mandatory')
lbEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortIndex.setStatus('mandatory')
lbEthernetPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortSlotIndex.setStatus('mandatory')
lbEthernetPortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortLocalIndex.setStatus('mandatory')
lbEthernetPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbEthernetPortLabel.setStatus('mandatory')
lbEthernetPortChipsetType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("chipsetAMD79900", 2), ("chipsetIntel82586", 3), ("chipsetIntel82596", 4), ("chipsetSEEQ8003", 5), ("chipsetNational8390", 6), ("chipsetNationalSonic", 7), ("chipsetFujitsu86950", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortChipsetType.setStatus('mandatory')
lbEthernetPortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inActive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortLinkStatus.setStatus('mandatory')
lbEthernetPortByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortByteReceiveRate.setStatus('mandatory')
lbEthernetPortPeakByteReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortPeakByteReceiveRate.setStatus('mandatory')
lbEthernetPortFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortFrameReceiveRate.setStatus('mandatory')
lbEthernetPortPeakFrameReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortPeakFrameReceiveRate.setStatus('mandatory')
lbEthernetPortByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortByteTransmitRate.setStatus('mandatory')
lbEthernetPortPeakByteTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortPeakByteTransmitRate.setStatus('mandatory')
lbEthernetPortFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortFrameTransmitRate.setStatus('mandatory')
lbEthernetPortPeakFrameTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbEthernetPortPeakFrameTransmitRate.setStatus('mandatory')
lbEthernetPortReceiveMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbEthernetPortReceiveMulticastThreshold.setStatus('mandatory')
lbEthernetPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 14, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("telco10BaseT", 1), ("rj4510BaseT", 2), ("foirl", 3), ("aui", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbEthernetPortType.setStatus('mandatory')
lbFddiPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 15, 1), )
if mibBuilder.loadTexts: lbFddiPortTable.setStatus('mandatory')
lbFddiPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 15, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbFddiPortIndex"))
if mibBuilder.loadTexts: lbFddiPortEntry.setStatus('mandatory')
lbFddiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiPortIndex.setStatus('mandatory')
lbFddiPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 15, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiPortSlotIndex.setStatus('mandatory')
lbFddiPortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 15, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFddiPortLocalIndex.setStatus('mandatory')
lbFddiPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 15, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbFddiPortLabel.setStatus('mandatory')
lbExpressTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 16, 1), )
if mibBuilder.loadTexts: lbExpressTable.setStatus('deprecated')
lbExpressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 16, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbExpressIndex"))
if mibBuilder.loadTexts: lbExpressEntry.setStatus('deprecated')
lbExpressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressIndex.setStatus('deprecated')
lbExpressSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 16, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressSlotIndex.setStatus('deprecated')
lbExpressLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 16, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressLocalIndex.setStatus('deprecated')
lbExpressAddressThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 16, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressAddressThreshold.setStatus('deprecated')
lbExpressFddiPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 17, 1), )
if mibBuilder.loadTexts: lbExpressFddiPortTable.setStatus('deprecated')
lbExpressFddiPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 17, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbExpressFddiPortIndex"))
if mibBuilder.loadTexts: lbExpressFddiPortEntry.setStatus('deprecated')
lbExpressFddiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressFddiPortIndex.setStatus('deprecated')
lbExpressFddiPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 17, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressFddiPortSlotIndex.setStatus('deprecated')
lbExpressFddiPortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 17, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressFddiPortLocalIndex.setStatus('deprecated')
lbExpressFddiPortForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 17, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressFddiPortForwardedCts.setStatus('deprecated')
lbExpressFddiPortDroppedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 17, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressFddiPortDroppedCts.setStatus('deprecated')
lbExpressEthernetPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 18, 1), )
if mibBuilder.loadTexts: lbExpressEthernetPortTable.setStatus('deprecated')
lbExpressEthernetPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 18, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbExpressEthernetPortIndex"))
if mibBuilder.loadTexts: lbExpressEthernetPortEntry.setStatus('deprecated')
lbExpressEthernetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressEthernetPortIndex.setStatus('deprecated')
lbExpressEthernetPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 18, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressEthernetPortSlotIndex.setStatus('deprecated')
lbExpressEthernetPortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 18, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressEthernetPortLocalIndex.setStatus('deprecated')
lbExpressEthernetPortForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 18, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressEthernetPortForwardedCts.setStatus('deprecated')
lbExpressEthernetPortDroppedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 18, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressEthernetPortDroppedCts.setStatus('deprecated')
lbExpressEthernetPortUTurnCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 18, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbExpressEthernetPortUTurnCts.setStatus('deprecated')
lbExpressEthernetPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 18, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("freezeAddress", 2), ("flushAddress", 3), ("flushDynamicAddress", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressEthernetPortAction.setStatus('deprecated')
lbExpressEthernetPortAddressTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1), )
if mibBuilder.loadTexts: lbExpressEthernetPortAddressTable.setStatus('deprecated')
lbExpressEthernetPortAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbExpressEthernetPortAddressPortIndex"), (0, "LB3GH-1-0-7", "lbExpressEthernetPortAddressIndex"))
if mibBuilder.loadTexts: lbExpressEthernetPortAddressEntry.setStatus('deprecated')
lbExpressEthernetPortAddressPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressEthernetPortAddressPortIndex.setStatus('deprecated')
lbExpressEthernetPortAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressEthernetPortAddressIndex.setStatus('deprecated')
lbExpressEthernetPortAddressSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressEthernetPortAddressSlotIndex.setStatus('deprecated')
lbExpressEthernetPortAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressEthernetPortAddressType.setStatus('deprecated')
lbExpressEthernetPortAddressRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressEthernetPortAddressRemoteAddress.setStatus('deprecated')
lbExpressEthernetPortAddressIsStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("isStatic", 1), ("isDynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressEthernetPortAddressIsStatic.setStatus('deprecated')
lbExpressEthernetPortAddressStaticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressEthernetPortAddressStaticPort.setStatus('deprecated')
lbExpressEthernetPortAddressAge = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 19, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbExpressEthernetPortAddressAge.setStatus('deprecated')
lbPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 20, 1), )
if mibBuilder.loadTexts: lbPowerSupplyTable.setStatus('mandatory')
lbPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 20, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbPowerSupplyIndex"))
if mibBuilder.loadTexts: lbPowerSupplyEntry.setStatus('mandatory')
lbPowerSupplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 20, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbPowerSupplyIndex.setStatus('mandatory')
lbPowerSupplyLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 20, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbPowerSupplyLocation.setStatus('mandatory')
lbPowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 20, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbPowerSupplyStatus.setStatus('mandatory')
lbPowerSupplyFailureType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("systemAcFailure", 1), ("systemPlus5Failure", 2), ("systemPlus12Failure", 3), ("systemOverTemperatureFailure", 4))))
if mibBuilder.loadTexts: lbPowerSupplyFailureType.setStatus('deprecated')
lbPowerSupplyLastFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("systemAcFailure", 1), ("systemPlus5Failure", 2), ("systemPlus12Failure", 3), ("systemOverTemperatureFailure", 4), ("none", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbPowerSupplyLastFailure.setStatus('mandatory')
lbBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 1), )
if mibBuilder.loadTexts: lbBridgeTable.setStatus('mandatory')
lbBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbBridgeIndex"))
if mibBuilder.loadTexts: lbBridgeEntry.setStatus('mandatory')
lbBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgeIndex.setStatus('mandatory')
lbBridgeBaseSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgeBaseSlotIndex.setStatus('mandatory')
lbBridgePortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortCount.setStatus('mandatory')
lbBridgeAddressTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgeAddressTableSize.setStatus('mandatory')
lbBridgeAddressThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbBridgeAddressThreshold.setStatus('mandatory')
lbBridgeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("expressMode", 1), ("ieee8021dBridgeMode", 2), ("notSupported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbBridgeMode.setStatus('mandatory')
lbBridgeLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgeLocalIndex.setStatus('mandatory')
lbBridgePortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2), )
if mibBuilder.loadTexts: lbBridgePortTable.setStatus('mandatory')
lbBridgePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbBridgePortBridgeIndex"), (0, "LB3GH-1-0-7", "lbBridgePortIndex"))
if mibBuilder.loadTexts: lbBridgePortEntry.setStatus('mandatory')
lbBridgePortBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortBridgeIndex.setStatus('mandatory')
lbBridgePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortIndex.setStatus('mandatory')
lbBridgePortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortSlotIndex.setStatus('mandatory')
lbBridgePortLocalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortLocalIndex.setStatus('mandatory')
lbBridgePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ethernet", 1), ("fddi", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortType.setStatus('mandatory')
lbBridgePortIpFragmentationEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("notSupported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbBridgePortIpFragmentationEnabled.setStatus('mandatory')
lbBridgePortReceiveMulticastLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbBridgePortReceiveMulticastLimit.setStatus('mandatory')
lbBridgePortAddressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("freezeAddress", 2), ("flushAddress", 3), ("flushDynamicAddress", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbBridgePortAddressAction.setStatus('mandatory')
lbBridgePortTotalForwardedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortTotalForwardedCts.setStatus('mandatory')
lbBridgePortManagementFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortManagementFramesReceived.setStatus('mandatory')
lbBridgePortTotalDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortTotalDiscards.setStatus('mandatory')
lbBridgePortReceiveBlockedDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortReceiveBlockedDiscards.setStatus('mandatory')
lbBridgePortReceiveMulticastLimitExceededs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortReceiveMulticastLimitExceededs.setStatus('mandatory')
lbBridgePortReceiveSecurityDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortReceiveSecurityDiscards.setStatus('mandatory')
lbBridgePortReceiveUnknownDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortReceiveUnknownDiscards.setStatus('mandatory')
lbBridgePortReceiveOtherDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortReceiveOtherDiscards.setStatus('mandatory')
lbBridgePortReceiveErrorDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortReceiveErrorDiscards.setStatus('mandatory')
lbBridgePortSameSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortSameSegmentDiscards.setStatus('mandatory')
lbBridgePortTransmitBlockedDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortTransmitBlockedDiscards.setStatus('mandatory')
lbBridgePortTotalFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortTotalFiltered.setStatus('mandatory')
lbBridgePortReceiveUnicastFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortReceiveUnicastFiltered.setStatus('mandatory')
lbBridgePortReceiveMulticastFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortReceiveMulticastFiltered.setStatus('mandatory')
lbBridgePortTransmitUnicastFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortTransmitUnicastFiltered.setStatus('mandatory')
lbBridgePortTransmitMulticastFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortTransmitMulticastFiltered.setStatus('mandatory')
lbBridgePortReceiveMulticastLimitExceededCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortReceiveMulticastLimitExceededCount.setStatus('mandatory')
lbBridgePortForwardedToTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 3), )
if mibBuilder.loadTexts: lbBridgePortForwardedToTable.setStatus('mandatory')
lbBridgePortForwardedToEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 3, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbBridgePortForwardedToBridgeIndex"), (0, "LB3GH-1-0-7", "lbBridgePortForwardedToReceivePortIndex"), (0, "LB3GH-1-0-7", "lbBridgePortForwardedToDstPortIndex"))
if mibBuilder.loadTexts: lbBridgePortForwardedToEntry.setStatus('mandatory')
lbBridgePortForwardedToBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortForwardedToBridgeIndex.setStatus('mandatory')
lbBridgePortForwardedToReceivePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortForwardedToReceivePortIndex.setStatus('mandatory')
lbBridgePortForwardedToDstPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortForwardedToDstPortIndex.setStatus('mandatory')
lbBridgePortForwardedToCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortForwardedToCount.setStatus('mandatory')
lbBridgePortFilteredToTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 4), )
if mibBuilder.loadTexts: lbBridgePortFilteredToTable.setStatus('mandatory')
lbBridgePortFilteredToEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 4, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbBridgePortFilteredToBridgeIndex"), (0, "LB3GH-1-0-7", "lbBridgePortFilteredToReceivePortIndex"), (0, "LB3GH-1-0-7", "lbBridgePortFilteredToDstPortIndex"))
if mibBuilder.loadTexts: lbBridgePortFilteredToEntry.setStatus('mandatory')
lbBridgePortFilteredToBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortFilteredToBridgeIndex.setStatus('mandatory')
lbBridgePortFilteredToReceivePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortFilteredToReceivePortIndex.setStatus('mandatory')
lbBridgePortFilteredToDstPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortFilteredToDstPortIndex.setStatus('mandatory')
lbBridgePortFilteredToCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortFilteredToCount.setStatus('mandatory')
lbBridgePortAddressTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5), )
if mibBuilder.loadTexts: lbBridgePortAddressTable.setStatus('mandatory')
lbBridgePortAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbBridgePortAddressBridgeIndex"), (0, "LB3GH-1-0-7", "lbBridgePortAddressPortIndex"), (0, "LB3GH-1-0-7", "lbBridgePortAddressIndex"))
if mibBuilder.loadTexts: lbBridgePortAddressEntry.setStatus('mandatory')
lbBridgePortAddressBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortAddressBridgeIndex.setStatus('mandatory')
lbBridgePortAddressPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortAddressPortIndex.setStatus('mandatory')
lbBridgePortAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortAddressIndex.setStatus('mandatory')
lbBridgePortAddressRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbBridgePortAddressRemoteAddress.setStatus('mandatory')
lbBridgePortAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbBridgePortAddressType.setStatus('mandatory')
lbBridgePortAddressIsStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("isStatic", 1), ("isDynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbBridgePortAddressIsStatic.setStatus('mandatory')
lbBridgePortAddressStaticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortAddressStaticPort.setStatus('mandatory')
lbBridgePortAddressAge = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 21, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBridgePortAddressAge.setStatus('mandatory')
lbTrapEnterpriseTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 22, 1), )
if mibBuilder.loadTexts: lbTrapEnterpriseTable.setStatus('mandatory')
lbTrapEnterpriseTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 22, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbTrapEnterpriseIndex"))
if mibBuilder.loadTexts: lbTrapEnterpriseTableEntry.setStatus('mandatory')
lbTrapEnterpriseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 22, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTrapEnterpriseIndex.setStatus('mandatory')
lbTrapEnterpriseOID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 22, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTrapEnterpriseOID.setStatus('mandatory')
lbTrapDestTable = MibTable((1, 3, 6, 1, 4, 1, 43, 7, 1, 23, 1), )
if mibBuilder.loadTexts: lbTrapDestTable.setStatus('mandatory')
lbTrapDestTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 7, 1, 23, 1, 1), ).setIndexNames((0, "LB3GH-1-0-7", "lbTrapDestAddr"), (0, "LB3GH-1-0-7", "lbTrapDestEnterpriseIndex"), (0, "LB3GH-1-0-7", "lbTrapNumber"))
if mibBuilder.loadTexts: lbTrapDestTableEntry.setStatus('mandatory')
lbTrapDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 23, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTrapDestAddr.setStatus('mandatory')
lbTrapDestEnterpriseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 23, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTrapDestEnterpriseIndex.setStatus('mandatory')
lbTrapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 23, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTrapNumber.setStatus('mandatory')
lbTrapEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 7, 1, 23, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lbTrapEntryStatus.setStatus('mandatory')
lbSlotInsertEvent = NotificationType((1, 3, 6, 1, 4, 1, 43, 7, 1) + (0,1)).setObjects(("LB3GH-1-0-7", "lbSlotIndex"), ("LB3GH-1-0-7", "lbSlotBoardType"), ("LB3GH-1-0-7", "lbSlotBoardRevision"))
lbSlotExtractEvent = NotificationType((1, 3, 6, 1, 4, 1, 43, 7, 1) + (0,2)).setObjects(("LB3GH-1-0-7", "lbSlotIndex"))
lbBridgeAddressThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 43, 7, 1) + (0,3)).setObjects(("LB3GH-1-0-7", "lbBridgeIndex"), ("LB3GH-1-0-7", "lbBridgeBaseSlotIndex"))
lbSystemOverTemperatureEvent = NotificationType((1, 3, 6, 1, 4, 1, 43, 7, 1) + (0,6))
lbSlotOverTemperatureEvent = NotificationType((1, 3, 6, 1, 4, 1, 43, 7, 1) + (0,7)).setObjects(("LB3GH-1-0-7", "lbSlotIndex"), ("LB3GH-1-0-7", "lbSlotBoardType"), ("LB3GH-1-0-7", "lbSlotBoardRevision"), ("LB3GH-1-0-7", "lbSlotBoardStatus"))
lbPowerSupplyFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 43, 7, 1) + (0,8)).setObjects(("LB3GH-1-0-7", "lbPowerSupplyIndex"), ("LB3GH-1-0-7", "lbPowerSupplyLocation"), ("LB3GH-1-0-7", "lbPowerSupplyLastFailure"), ("LB3GH-1-0-7", "lbSystemPowerSupplyCount"))
mibBuilder.exportSymbols("LB3GH-1-0-7", lbPowerSupplyLastFailure=lbPowerSupplyLastFailure, lbBridgePortFilteredToReceivePortIndex=lbBridgePortFilteredToReceivePortIndex, fbcmMACCount=fbcmMACCount, fbcmBasePortIndex=fbcmBasePortIndex, lbBridgePortCount=lbBridgePortCount, lbBridgeIndex=lbBridgeIndex, elmEthernetPortSlotIndex=elmEthernetPortSlotIndex, elmEthernetMACAddressIndex=elmEthernetMACAddressIndex, lbExpressEntry=lbExpressEntry, lbSlotExpressFddiPortBaseIndex=lbSlotExpressFddiPortBaseIndex, slotIndex=slotIndex, lbBridgePortReceiveUnknownDiscards=lbBridgePortReceiveUnknownDiscards, lbBridgePortReceiveOtherDiscards=lbBridgePortReceiveOtherDiscards, lbEthernetPortSlotIndex=lbEthernetPortSlotIndex, lbBridgePortReceiveBlockedDiscards=lbBridgePortReceiveBlockedDiscards, lbBridge=lbBridge, elmEthernetPortEntry=elmEthernetPortEntry, lbPowerSupply=lbPowerSupply, lbExpressFddiPortSlotIndex=lbExpressFddiPortSlotIndex, lbSystemExpressEthernetPortCount=lbSystemExpressEthernetPortCount, portTable=portTable, lbBridgePortSlotIndex=lbBridgePortSlotIndex, lbSystemBridgeFunctionCount=lbSystemBridgeFunctionCount, lbFddiMacByteReceiveRate=lbFddiMacByteReceiveRate, elmFddiMACDroppedCts=elmFddiMACDroppedCts, lbFddiMacPeakByteTransmitRate=lbFddiMacPeakByteTransmitRate, lbSystemControlPanelLines=lbSystemControlPanelLines, lbBridgeAddressThreshold=lbBridgeAddressThreshold, elmEthernetPortCount=elmEthernetPortCount, lbExpressEthernetPortAddressStaticPort=lbExpressEthernetPortAddressStaticPort, lbEthernetPortChipsetType=lbEthernetPortChipsetType, lbBridgePortFilteredToCount=lbBridgePortFilteredToCount, lbExpressEthernetPortAddress=lbExpressEthernetPortAddress, lbFddiMacBeaconHistory=lbFddiMacBeaconHistory, elmEthernetMACAddressStaticPort=elmEthernetMACAddressStaticPort, lbBridgePortIndex=lbBridgePortIndex, elmFddiMAC=elmFddiMAC, lbExpressEthernetPortAction=lbExpressEthernetPortAction, lbTrapDestTableEntry=lbTrapDestTableEntry, lbBridgePortAddressAction=lbBridgePortAddressAction, lbSystemName=lbSystemName, lbExpressEthernetPortForwardedCts=lbExpressEthernetPortForwardedCts, lbEthernetPortPeakFrameTransmitRate=lbEthernetPortPeakFrameTransmitRate, lbPowerSupplyStatus=lbPowerSupplyStatus, lbSlotTable=lbSlotTable, elmFddiMACCount=elmFddiMACCount, slotBoardType=slotBoardType, slotBoardNameAbbrev=slotBoardNameAbbrev, fcmPortCount=fcmPortCount, lbSystemAction=lbSystemAction, lbSystemExpressFunctionCount=lbSystemExpressFunctionCount, elmFddiMACEntry=elmFddiMACEntry, lbSlotEthernetPortCount=lbSlotEthernetPortCount, lbEthernetPortPeakFrameReceiveRate=lbEthernetPortPeakFrameReceiveRate, lbBridgePortEntry=lbBridgePortEntry, lbBridgePortTransmitUnicastFiltered=lbBridgePortTransmitUnicastFiltered, lbBridgePortForwardedToCount=lbBridgePortForwardedToCount, lbFddiMacReceiveMulticastThreshold=lbFddiMacReceiveMulticastThreshold, lb3ghMib=lb3ghMib, lbBridgePortLocalIndex=lbBridgePortLocalIndex, elmEthernetMACAddressRemoteAddress=elmEthernetMACAddressRemoteAddress, chassisName=chassisName, lbFddiMacFrameReceiveRate=lbFddiMacFrameReceiveRate, lbBridgeBaseSlotIndex=lbBridgeBaseSlotIndex, lbBridgePortForwardedToReceivePortIndex=lbBridgePortForwardedToReceivePortIndex, lbBridgePortFilteredToEntry=lbBridgePortFilteredToEntry, lbExpressFddiPort=lbExpressFddiPort, lbBridgePortAddressAge=lbBridgePortAddressAge, lbFddiMacPeakFrameReceiveRate=lbFddiMacPeakFrameReceiveRate, lbBridgePortManagementFramesReceived=lbBridgePortManagementFramesReceived, chassisRevision=chassisRevision, lbFddiMacByteTransmitRate=lbFddiMacByteTransmitRate, lbBridgePortFilteredToBridgeIndex=lbBridgePortFilteredToBridgeIndex, lbSystemBuildTime=lbSystemBuildTime, lbBridgePortTransmitBlockedDiscards=lbBridgePortTransmitBlockedDiscards, lbEthernetPortPeakByteReceiveRate=lbEthernetPortPeakByteReceiveRate, lbEthernetPortPeakByteTransmitRate=lbEthernetPortPeakByteTransmitRate, lbSlotBoardAction=lbSlotBoardAction, lbBridgePortAddressStaticPort=lbBridgePortAddressStaticPort, smmEthernetPortCount=smmEthernetPortCount, lbExpressEthernetPortAddressAge=lbExpressEthernetPortAddressAge, lbSystemControlPanelHardwareRevision=lbSystemControlPanelHardwareRevision, lbTrapDestAddr=lbTrapDestAddr, elmEthernetPortTable=elmEthernetPortTable, lbSlotFddiPortCount=lbSlotFddiPortCount, lbExpressEthernetPortIndex=lbExpressEthernetPortIndex, lbExpressEthernetPortEntry=lbExpressEthernetPortEntry, lbSystemSmtProxyEvents=lbSystemSmtProxyEvents, lbFddiMacTable=lbFddiMacTable, chassisSlotCount=chassisSlotCount, lbSystemNvMemorySize=lbSystemNvMemorySize, lbBridgeLocalIndex=lbBridgeLocalIndex, chassisControlPanelLines=chassisControlPanelLines, lbEthernetPortType=lbEthernetPortType, lbFddiPortEntry=lbFddiPortEntry, lbExpressEthernetPortAddressTable=lbExpressEthernetPortAddressTable, lbPowerSupplyFailureEvent=lbPowerSupplyFailureEvent, lbSlotBoardType=lbSlotBoardType, lbExpressEthernetPortLocalIndex=lbExpressEthernetPortLocalIndex, lbBridgePortSameSegmentDiscards=lbBridgePortSameSegmentDiscards, elmEthernetMACAddressEntry=elmEthernetMACAddressEntry, lbSystemBackplaneRevision=lbSystemBackplaneRevision, elmBaseEthernetPortIndex=elmBaseEthernetPortIndex, lbSystemControlPanelSoftwareRevision=lbSystemControlPanelSoftwareRevision, lbSlotExpressEthernetPortBaseIndex=lbSlotExpressEthernetPortBaseIndex, lbEthernetPortReceiveMulticastThreshold=lbEthernetPortReceiveMulticastThreshold, lbSlotOverTemperatureEvent=lbSlotOverTemperatureEvent, lbEthernetPortLabel=lbEthernetPortLabel, lbExpressIndex=lbExpressIndex, lbSlotFddiPortBaseIndex=lbSlotFddiPortBaseIndex, lbSystemControlPanelText=lbSystemControlPanelText, lbBridgePortTransmitMulticastFiltered=lbBridgePortTransmitMulticastFiltered, chassisNameAbbrev=chassisNameAbbrev, smmSlotIndex=smmSlotIndex, elmEthernetPortDroppedCts=elmEthernetPortDroppedCts, elmAddressThreshold=elmAddressThreshold, lbExpressFddiPortDroppedCts=lbExpressFddiPortDroppedCts, portSlotIndex=portSlotIndex, elmEthernetMACAddressAge=elmEthernetMACAddressAge, elmEntry=elmEntry, lbSlotExpressFddiPortCount=lbSlotExpressFddiPortCount, lbBridgeTable=lbBridgeTable, lbBridgePortReceiveMulticastLimitExceededCount=lbBridgePortReceiveMulticastLimitExceededCount, lbBridgePortForwardedToBridgeIndex=lbBridgePortForwardedToBridgeIndex, fbcm=fbcm, lbBridgePortForwardedToTable=lbBridgePortForwardedToTable, lbExpressFddiPortIndex=lbExpressFddiPortIndex, lbFddiMacEntry=lbFddiMacEntry, lbSlotBridgeFunctionBaseIndex=lbSlotBridgeFunctionBaseIndex, lbFddiMacLocalIndex=lbFddiMacLocalIndex, lbPowerSupplyLocation=lbPowerSupplyLocation, lbBridgeAddressTableSize=lbBridgeAddressTableSize, lbBridgePortReceiveMulticastLimit=lbBridgePortReceiveMulticastLimit, elmEthernetPort=elmEthernetPort, chassisAction=chassisAction, lbSlotEthernetPortBaseIndex=lbSlotEthernetPortBaseIndex, lbBridgePortReceiveSecurityDiscards=lbBridgePortReceiveSecurityDiscards, lbBridgeMode=lbBridgeMode, elmEthernetPortUTurnCts=elmEthernetPortUTurnCts, lbExpressEthernetPortAddressSlotIndex=lbExpressEthernetPortAddressSlotIndex, lbSystemEthernetPortCount=lbSystemEthernetPortCount, lbSystemFlashMemorySize=lbSystemFlashMemorySize, lbBridgePortTotalFiltered=lbBridgePortTotalFiltered, elmEthernetMACAddressPortIndex=elmEthernetMACAddressPortIndex, lbSlot=lbSlot, lbExpressSlotIndex=lbExpressSlotIndex, lbFddiPortIndex=lbFddiPortIndex, lbBridgePortAddressIndex=lbBridgePortAddressIndex, elmEthernetPortIndex=elmEthernetPortIndex, lbExpress=lbExpress, slotBoardRevision=slotBoardRevision, lbSystemPowerSupplyCount=lbSystemPowerSupplyCount, lbSlotBridgeFunctionCount=lbSlotBridgeFunctionCount, fbcmSlotIndex=fbcmSlotIndex, lbBridgePortReceiveErrorDiscards=lbBridgePortReceiveErrorDiscards, lbSystemFddiPortCount=lbSystemFddiPortCount, lbTrapDestTable=lbTrapDestTable, fcmEntry=fcmEntry, lbTrapEntryStatus=lbTrapEntryStatus, lbSystemType=lbSystemType, lbSlotEntry=lbSlotEntry, lbTrapEnterpriseIndex=lbTrapEnterpriseIndex, slot=slot, fcmTable=fcmTable, lbBridgePortBridgeIndex=lbBridgePortBridgeIndex, lbExpressEthernetPortDroppedCts=lbExpressEthernetPortDroppedCts, lbEthernetPortIndex=lbEthernetPortIndex, lbExpressFddiPortForwardedCts=lbExpressFddiPortForwardedCts, lbSlotExtractEvent=lbSlotExtractEvent, lbExpressEthernetPortAddressIsStatic=lbExpressEthernetPortAddressIsStatic, lbSystemSmtProxyTimeoutBase=lbSystemSmtProxyTimeoutBase, lbExpressEthernetPortAddressType=lbExpressEthernetPortAddressType, lbExpressEthernetPortTable=lbExpressEthernetPortTable, lbTrapEnterpriseTable=lbTrapEnterpriseTable, lbSystem=lbSystem, elmFddiMACIndex=elmFddiMACIndex, lbExpressFddiPortLocalIndex=lbExpressFddiPortLocalIndex, lbEthernetPortTable=lbEthernetPortTable, lbEthernetPortEntry=lbEthernetPortEntry, lbBridgePortTotalForwardedCts=lbBridgePortTotalForwardedCts, lbSlotBoardStatus=lbSlotBoardStatus, lbSystemControlPanelColumns=lbSystemControlPanelColumns, lbSlotBoardRevision=lbSlotBoardRevision, lbBridgePortReceiveUnicastFiltered=lbBridgePortReceiveUnicastFiltered, lbFddiPort=lbFddiPort, lbFddiPortLocalIndex=lbFddiPortLocalIndex, lbSystemManufacturer=lbSystemManufacturer, lbFddiMacPeakFrameTransmitRate=lbFddiMacPeakFrameTransmitRate, elmSlotIndex=elmSlotIndex, elmEthernetMACAddressIsStatic=elmEthernetMACAddressIsStatic, lbSlotExpressEthernetPortCount=lbSlotExpressEthernetPortCount, chassisType=chassisType, lbSystemSlotCount=lbSystemSlotCount, lbSlotBoardName=lbSlotBoardName, lbEthernetPortFrameReceiveRate=lbEthernetPortFrameReceiveRate, lbExpressAddressThreshold=lbExpressAddressThreshold, lbExpressEthernetPortAddressPortIndex=lbExpressEthernetPortAddressPortIndex, lbBridgePortFilteredToTable=lbBridgePortFilteredToTable, fcmBasePortIndex=fcmBasePortIndex, elmEthernetPortForwardedCts=elmEthernetPortForwardedCts, elmEthernetMACAddressType=elmEthernetMACAddressType, lbBridgePortAddressIsStatic=lbBridgePortAddressIsStatic, lbExpressEthernetPort=lbExpressEthernetPort, slotBoardStatus=slotBoardStatus, elmEthernetPortLabel=elmEthernetPortLabel, elmEthernetMACAddressSlotIndex=elmEthernetMACAddressSlotIndex, lbExpressFddiPortTable=lbExpressFddiPortTable, lbBridgeAddressThresholdEvent=lbBridgeAddressThresholdEvent, lbFddiMacFrameTransmitRate=lbFddiMacFrameTransmitRate, lbPowerSupplyIndex=lbPowerSupplyIndex, elmEthernetPortState=elmEthernetPortState, lbEthernetPort=lbEthernetPort, lbBridgePortAddressPortIndex=lbBridgePortAddressPortIndex, lbBridgePortAddressRemoteAddress=lbBridgePortAddressRemoteAddress, slotBoardName=slotBoardName, elmFddiMACForwardedCts=elmFddiMACForwardedCts, lbFddiPortSlotIndex=lbFddiPortSlotIndex, lbExpressEthernetPortAddressEntry=lbExpressEthernetPortAddressEntry, lbBridgePortAddressEntry=lbBridgePortAddressEntry, lbBridgePortAddressBridgeIndex=lbBridgePortAddressBridgeIndex, lbPowerSupplyTable=lbPowerSupplyTable, fcmSlotIndex=fcmSlotIndex, lbBridgeEntry=lbBridgeEntry, lbBridgePortTable=lbBridgePortTable, smm=smm, smmBaseEthernetPortIndex=smmBaseEthernetPortIndex, portIndex=portIndex, chassisSoftwareRevision=chassisSoftwareRevision, lbEthernetPortLinkStatus=lbEthernetPortLinkStatus, lbBridgePortIpFragmentationEnabled=lbBridgePortIpFragmentationEnabled, lbTrapEnterpriseOID=lbTrapEnterpriseOID, lbTrapDestEnterpriseIndex=lbTrapDestEnterpriseIndex, lbFddiPortLabel=lbFddiPortLabel, lbBridgePortAddressTable=lbBridgePortAddressTable, lbSlotFddiMacBaseIndex=lbSlotFddiMacBaseIndex, lbExpressLocalIndex=lbExpressLocalIndex, lbBridgePortType=lbBridgePortType, lbExpressFddiPortEntry=lbExpressFddiPortEntry, elmBaseFddiMACIndex=elmBaseFddiMACIndex, lbSlotInsertEvent=lbSlotInsertEvent, fbcmPortCount=fbcmPortCount, lbTrapDest=lbTrapDest, fcm=fcm, elmFddiMACTable=elmFddiMACTable, lbBridgePortReceiveMulticastFiltered=lbBridgePortReceiveMulticastFiltered, lbExpressEthernetPortAddressIndex=lbExpressEthernetPortAddressIndex, lbFddiMac=lbFddiMac, elm=elm, elmMACAddress=elmMACAddress, chassisBuildTime=chassisBuildTime, elmTable=elmTable, chassisControlPanelColumns=chassisControlPanelColumns, lbFddiMacSlotIndex=lbFddiMacSlotIndex, chassisManufacturer=chassisManufacturer)
mibBuilder.exportSymbols("LB3GH-1-0-7", portLabel=portLabel, lbSystemId=lbSystemId, lbSlotBoardNameAbbrev=lbSlotBoardNameAbbrev, chassisControlPanelText=chassisControlPanelText, slotTable=slotTable, lbFddiPortTable=lbFddiPortTable, lbSystemMemorySize=lbSystemMemorySize, lbEthernetPortFrameTransmitRate=lbEthernetPortFrameTransmitRate, lbBridgePortFilteredToDstPortIndex=lbBridgePortFilteredToDstPortIndex, chassis=chassis, elmEthernetPortAction=elmEthernetPortAction, lbPowerSupplyFailureType=lbPowerSupplyFailureType, lbEthernetPortLocalIndex=lbEthernetPortLocalIndex, port=port, lbSystemExpressFddiPortCount=lbSystemExpressFddiPortCount, lbSlotIndex=lbSlotIndex, lbBridgePortAddressType=lbBridgePortAddressType, chassisId=chassisId, portEntry=portEntry, slotEntry=slotEntry, lbFddiMacPeakByteReceiveRate=lbFddiMacPeakByteReceiveRate, lbExpressTable=lbExpressTable, slotBoardAction=slotBoardAction, lbFddiMacIndex=lbFddiMacIndex, elmEthernetMACAddressTable=elmEthernetMACAddressTable, smmTable=smmTable, lbEthernetPortByteTransmitRate=lbEthernetPortByteTransmitRate, lbSlotFddiMacCount=lbSlotFddiMacCount, lbBridgePortForwardedToEntry=lbBridgePortForwardedToEntry, fbcmTable=fbcmTable, fbcmBaseMACIndex=fbcmBaseMACIndex, lbExpressEthernetPortSlotIndex=lbExpressEthernetPortSlotIndex, a3Com=a3Com, elmFddiSlotIndex=elmFddiSlotIndex, lbSlotExpressFunctionCount=lbSlotExpressFunctionCount, lb3gh=lb3gh, lbEthernetPortByteReceiveRate=lbEthernetPortByteReceiveRate, lbExpressEthernetPortUTurnCts=lbExpressEthernetPortUTurnCts, lbBridgePortReceiveMulticastLimitExceededs=lbBridgePortReceiveMulticastLimitExceededs, lbTrapNumber=lbTrapNumber, lbSystemSoftwareRevision=lbSystemSoftwareRevision, lbTrapEnterprise=lbTrapEnterprise, lbSystemFddiMacCount=lbSystemFddiMacCount, lbSlotExpressFunctionBaseIndex=lbSlotExpressFunctionBaseIndex, lbExpressEthernetPortAddressRemoteAddress=lbExpressEthernetPortAddressRemoteAddress, lbPowerSupplyEntry=lbPowerSupplyEntry, lbBridgePortForwardedToDstPortIndex=lbBridgePortForwardedToDstPortIndex, lbTrapEnterpriseTableEntry=lbTrapEnterpriseTableEntry, lbSystemOverTemperatureEvent=lbSystemOverTemperatureEvent, lbBridgePortTotalDiscards=lbBridgePortTotalDiscards, fbcmEntry=fbcmEntry, smmEntry=smmEntry)
