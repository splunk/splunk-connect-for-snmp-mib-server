#
# PySNMP MIB module SOCOMECUPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SOCOMECUPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, MibIdentifier, Bits, NotificationType, ObjectIdentity, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, Counter64, IpAddress, Counter32, NotificationType, ModuleIdentity, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Bits", "NotificationType", "ObjectIdentity", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "Counter64", "IpAddress", "Counter32", "NotificationType", "ModuleIdentity", "enterprises")
TextualConvention, DisplayString, TestAndIncr, TimeStamp, AutonomousType, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TestAndIncr", "TimeStamp", "AutonomousType", "TimeInterval")
class PositiveInteger(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class NonNegativeInteger(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

socomecSicon = MibIdentifier((1, 3, 6, 1, 4, 1, 4555))
software = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1))
network = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1))
netvision = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1))
upsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1))
upsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2))
upsIdent = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 1))
upsBattery = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 2))
upsInput = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3))
upsOutput = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4))
upsBypass = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 5))
upsAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6))
upsTest = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7))
upsControl = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8))
upsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9))
upsAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10))
emdStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 11))
upsIdentModel = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModel.setStatus('mandatory')
upsIdentUPSFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSFirmwareVersion.setStatus('mandatory')
upsIdentAgentSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersion.setStatus('mandatory')
upsIdentUpsSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUpsSerialNumber.setStatus('mandatory')
upsBatteryStatus = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4), ("batteryDischarging", 5), ("batteryFailure", 6), ("upsOff", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatus.setStatus('mandatory')
upsSecondsOnBattery = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBattery.setStatus('mandatory')
upsEstimatedMinutesRemaining = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemaining.setStatus('mandatory')
upsEstimatedChargeRemaining = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemaining.setStatus('mandatory')
upsBatteryVoltage = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltage.setStatus('mandatory')
upsBatteryTemperature = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperature.setStatus('mandatory')
upsInputNumLines = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLines.setStatus('mandatory')
upsInputFrequency = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequency.setStatus('mandatory')
upsInputTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3, 3), )
if mibBuilder.loadTexts: upsInputTable.setStatus('mandatory')
upsInputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3, 3, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "upsInputLineIndex"))
if mibBuilder.loadTexts: upsInputEntry.setStatus('mandatory')
upsInputLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineIndex.setStatus('mandatory')
upsInputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltage.setStatus('mandatory')
upsInputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrent.setStatus('mandatory')
upsInputVoltageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMax.setStatus('mandatory')
upsInputVoltageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 3, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMin.setStatus('mandatory')
upsOutputSource = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("onInverter", 2), ("onMains", 3), ("ecoMode", 4), ("onBypass", 5), ("standby", 6), ("onMaintenanceBypass", 7), ("upsOff", 8), ("normalMode", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSource.setStatus('mandatory')
upsOutputFrequency = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequency.setStatus('mandatory')
upsOutputNumLines = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLines.setStatus('mandatory')
upsOutputTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 4), )
if mibBuilder.loadTexts: upsOutputTable.setStatus('mandatory')
upsOutputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 4, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "upsOutputLineIndex"))
if mibBuilder.loadTexts: upsOutputEntry.setStatus('mandatory')
upsOutputLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputLineIndex.setStatus('mandatory')
upsOutputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltage.setStatus('mandatory')
upsOutputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrent.setStatus('mandatory')
upsOutputPercentLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoad.setStatus('mandatory')
upsOutputKva = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 4, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputKva.setStatus('mandatory')
upsBypassFrequency = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequency.setStatus('mandatory')
upsBypassNumLines = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLines.setStatus('mandatory')
upsBypassTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 5, 3), )
if mibBuilder.loadTexts: upsBypassTable.setStatus('mandatory')
upsBypassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 5, 3, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "upsBypassLineIndex"))
if mibBuilder.loadTexts: upsBypassEntry.setStatus('mandatory')
upsBypassLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassLineIndex.setStatus('mandatory')
upsBypassVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 5, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltage.setStatus('mandatory')
upsBypassCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 5, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrent.setStatus('mandatory')
upsAlarmsPresent = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresent.setStatus('mandatory')
upsAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 2), )
if mibBuilder.loadTexts: upsAlarmTable.setStatus('mandatory')
upsAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 2, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "upsAlarmId"))
if mibBuilder.loadTexts: upsAlarmEntry.setStatus('mandatory')
upsAlarmId = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 2, 1, 1), PositiveInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmId.setStatus('mandatory')
upsAlarmDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescr.setStatus('mandatory')
upsAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTime.setStatus('mandatory')
upsAlarmExtDes = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmExtDes.setStatus('mandatory')
upsWellKnownAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3))
upsAlarmBatteryBad = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBatteryBad.setStatus('mandatory')
upsAlarmOnBattery = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmOnBattery.setStatus('mandatory')
upsAlarmLowBattery = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmLowBattery.setStatus('mandatory')
upsAlarmDepletedBattery = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDepletedBattery.setStatus('mandatory')
upsAlarmTempBad = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTempBad.setStatus('mandatory')
upsAlarmInputBad = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmInputBad.setStatus('mandatory')
upsAlarmOutputBad = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmOutputBad.setStatus('mandatory')
upsAlarmOutputOverload = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmOutputOverload.setStatus('mandatory')
upsAlarmOnBypass = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmOnBypass.setStatus('mandatory')
upsAlarmBypassBad = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBypassBad.setStatus('mandatory')
upsAlarmOutputOffAsRequested = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequested.setStatus('mandatory')
upsAlarmUpsOffAsRequested = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequested.setStatus('mandatory')
upsAlarmChargerFailed = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmChargerFailed.setStatus('mandatory')
upsAlarmUpsOutputOff = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmUpsOutputOff.setStatus('mandatory')
upsAlarmUpsSystemOff = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmUpsSystemOff.setStatus('mandatory')
upsAlarmFanFailure = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmFanFailure.setStatus('mandatory')
upsAlarmFuseFailure = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmFuseFailure.setStatus('mandatory')
upsAlarmGeneralFault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmGeneralFault.setStatus('mandatory')
upsAlarmDiagnosticTestFailed = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailed.setStatus('mandatory')
upsAlarmCommunicationLost = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmCommunicationLost.setStatus('mandatory')
upsAlarmAwaitingPower = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmAwaitingPower.setStatus('mandatory')
upsAlarmShutdownPending = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmShutdownPending.setStatus('mandatory')
upsAlarmShutdownImminent = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmShutdownImminent.setStatus('mandatory')
upsAlarmTestInProgress = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTestInProgress.setStatus('mandatory')
upsAlarmPowerSupplyFault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmPowerSupplyFault.setStatus('mandatory')
upsAlarmAuxMainFail = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmAuxMainFail.setStatus('mandatory')
upsAlarmManualBypassClose = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmManualBypassClose.setStatus('mandatory')
upsAlarmShortCircuit = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmShortCircuit.setStatus('mandatory')
upsAlarmBatteryChargerFailure = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBatteryChargerFailure.setStatus('mandatory')
upsAlarmInverterOverCurrent = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmInverterOverCurrent.setStatus('mandatory')
upsAlarmInverterDistorsion = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmInverterDistorsion.setStatus('mandatory')
upsAlarmPrechargeVoltageFail = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmPrechargeVoltageFail.setStatus('mandatory')
upsAlarmBoostTooLow = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBoostTooLow.setStatus('mandatory')
upsAlarmBoostTooHigh = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBoostTooHigh.setStatus('mandatory')
upsAlarmBatteryTooHigh = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBatteryTooHigh.setStatus('mandatory')
upsAlarmImproperCondition = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmImproperCondition.setStatus('mandatory')
upsAlarmOverloadTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmOverloadTimeout.setStatus('mandatory')
upsAlarmControlSystemFailure = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmControlSystemFailure.setStatus('mandatory')
upsAlarmDataCorrupted = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDataCorrupted.setStatus('mandatory')
upsAlarmPllFault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmPllFault.setStatus('mandatory')
upsAlarmInputGeneralAlarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmInputGeneralAlarm.setStatus('mandatory')
upsAlarmRectifierGeneralAlarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmRectifierGeneralAlarm.setStatus('mandatory')
upsAlarmBoostGeneralAlarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBoostGeneralAlarm.setStatus('mandatory')
upsAlarmInverterGeneralAlarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmInverterGeneralAlarm.setStatus('mandatory')
upsAlarmBatteryGeneralAlarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBatteryGeneralAlarm.setStatus('mandatory')
upsAlarmOutputOver = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmOutputOver.setStatus('mandatory')
upsAlarmOutputUnder = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmOutputUnder.setStatus('mandatory')
upsAlarmBypassGeneralAlarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBypassGeneralAlarm.setStatus('mandatory')
upsAlarmStopForOverload = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmStopForOverload.setStatus('mandatory')
upsAlarmImminentStop = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmImminentStop.setStatus('mandatory')
upsAlarmModule1Alarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmModule1Alarm.setStatus('mandatory')
upsAlarmModule2Alarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmModule2Alarm.setStatus('mandatory')
upsAlarmModule3Alarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmModule3Alarm.setStatus('mandatory')
upsAlarmModule4Alarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmModule4Alarm.setStatus('mandatory')
upsAlarmModule5Alarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmModule5Alarm.setStatus('mandatory')
upsAlarmModule6Alarm = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmModule6Alarm.setStatus('mandatory')
upsAlarmExternalAlarm1 = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmExternalAlarm1.setStatus('mandatory')
upsAlarmExternalAlarm2 = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmExternalAlarm2.setStatus('mandatory')
upsAlarmExternalAlarm3 = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmExternalAlarm3.setStatus('mandatory')
upsAlarmExternalAlarm4 = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmExternalAlarm4.setStatus('mandatory')
upsAlarmEService = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmEService.setStatus('mandatory')
upsAlarmRedundancyLost = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmRedundancyLost.setStatus('mandatory')
upsAlarmPeriodicServiceCheck = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmPeriodicServiceCheck.setStatus('mandatory')
upsAlarmAllTransferDisabled = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmAllTransferDisabled.setStatus('mandatory')
upsAlarmAutoTransferDisabled = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmAutoTransferDisabled.setStatus('mandatory')
upsAlarmBatteryRoom = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBatteryRoom.setStatus('mandatory')
upsAlarmManualBypass = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmManualBypass.setStatus('mandatory')
upsAlarmBatteryDischarged = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBatteryDischarged.setStatus('mandatory')
upsAlarmInsufficientResources = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmInsufficientResources.setStatus('mandatory')
upsAlarmOptionalBoards = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmOptionalBoards.setStatus('mandatory')
upsAlarmRectifierFault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmRectifierFault.setStatus('mandatory')
upsAlarmBoostFault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBoostFault.setStatus('mandatory')
upsAlarmInverterFault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmInverterFault.setStatus('mandatory')
upsAlarmParallelModuleFault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmParallelModuleFault.setStatus('mandatory')
upsAlarmGenSetGeneral = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmGenSetGeneral.setStatus('mandatory')
upsAlarmGenSetFault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmGenSetFault.setStatus('mandatory')
upsAlarmEmergencyStopActive = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmEmergencyStopActive.setStatus('mandatory')
upsAlarmBatteryCircuitOpen = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmBatteryCircuitOpen.setStatus('mandatory')
upsAlarmFansFailure = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmFansFailure.setStatus('mandatory')
upsAlarmPhaseRotationFault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmPhaseRotationFault.setStatus('mandatory')
upsAlarmA62 = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmA62.setStatus('mandatory')
upsAlarmA63 = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 6, 3, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmA63.setStatus('mandatory')
upsTestId = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestId.setStatus('mandatory')
upsTestSpinLock = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLock.setStatus('mandatory')
upsTestResultsSummary = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notActive", 1), ("inProgress", 2), ("byPass", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummary.setStatus('mandatory')
upsTestResultsDetail = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetail.setStatus('mandatory')
upsTestStartTime = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTime.setStatus('mandatory')
upsTestElapsedTime = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTime.setStatus('mandatory')
upsWellKnownTests = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 7))
upsTestNoTestsInitiated = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestNoTestsInitiated.setStatus('mandatory')
upsTestAbortTestInProgress = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestAbortTestInProgress.setStatus('mandatory')
upsTestGeneralSystemsTest = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestGeneralSystemsTest.setStatus('mandatory')
upsTestQuickBatteryTest = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestQuickBatteryTest.setStatus('mandatory')
upsDeepBatteryCalibration = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 7, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDeepBatteryCalibration.setStatus('mandatory')
upsControlStatusControl = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("upsStandbyOn", 1), ("upsStandbyOff", 2), ("upsEcoMode", 3), ("upsNormalMode", 4), ("upsAlarmReset", 5), ("upsCommandReset", 6), ("upsBuzzerOff", 7), ("upsOnBypass", 8), ("upsOnInverter", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlStatusControl.setStatus('mandatory')
upsShutdownDelay = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownDelay.setStatus('mandatory')
upsTurnOffAfterShutdown = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTurnOffAfterShutdown.setStatus('mandatory')
upsControlShutdownParametersTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 4), )
if mibBuilder.loadTexts: upsControlShutdownParametersTable.setStatus('mandatory')
shutdownParametersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 4, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "upsControlEventDescr"))
if mibBuilder.loadTexts: shutdownParametersEntry.setStatus('mandatory')
upsControlEventDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsControlEventDescr.setStatus('mandatory')
upsControlEventStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlEventStatus.setStatus('mandatory')
upsControlDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlDelay.setStatus('mandatory')
upsControlFirstWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlFirstWarning.setStatus('mandatory')
upsControlWarningInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlWarningInterval.setStatus('mandatory')
upsControlSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlSeverity.setStatus('mandatory')
upsControlWeeklyScheduleTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 5), )
if mibBuilder.loadTexts: upsControlWeeklyScheduleTable.setStatus('mandatory')
upsControlWeeklyScheduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 5, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "upsControlWeeklyIndex"))
if mibBuilder.loadTexts: upsControlWeeklyScheduleEntry.setStatus('mandatory')
upsControlWeeklyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsControlWeeklyIndex.setStatus('mandatory')
upsControlWeeklyShutdownDay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7), ("none", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlWeeklyShutdownDay.setStatus('mandatory')
upsControlWeeklyShutdownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlWeeklyShutdownTime.setStatus('mandatory')
upsControlWeeklyRestartDay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7), ("none", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlWeeklyRestartDay.setStatus('mandatory')
upsControlWeeklyRestartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlWeeklyRestartTime.setStatus('mandatory')
upsControlSpecialScheduleTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 6), )
if mibBuilder.loadTexts: upsControlSpecialScheduleTable.setStatus('mandatory')
upsControlSpecialScheduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 6, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "upsControlSpecialIndex"))
if mibBuilder.loadTexts: upsControlSpecialScheduleEntry.setStatus('mandatory')
upsControlSpecialIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsControlSpecialIndex.setStatus('mandatory')
upsControlSpecialShutdownDay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlSpecialShutdownDay.setStatus('mandatory')
upsControlSpecialShutdownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlSpecialShutdownTime.setStatus('mandatory')
upsControlSpecialRestartDay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlSpecialRestartDay.setStatus('mandatory')
upsControlSpecialRestartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlSpecialRestartTime.setStatus('mandatory')
upsControlEcoModeScheduleTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 7), )
if mibBuilder.loadTexts: upsControlEcoModeScheduleTable.setStatus('mandatory')
upsControlEcoModeScheduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 7, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "upsControlEcoModeIndex"))
if mibBuilder.loadTexts: upsControlEcoModeScheduleEntry.setStatus('mandatory')
upsControlEcoModeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsControlEcoModeIndex.setStatus('mandatory')
upsControlEcoModeStartDay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7), ("none", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlEcoModeStartDay.setStatus('mandatory')
upsControlEcoModeStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlEcoModeStartTime.setStatus('mandatory')
upsControlEcoModeEndDay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7), ("none", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlEcoModeEndDay.setStatus('mandatory')
upsControlEcoModeEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 8, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsControlEcoModeEndTime.setStatus('mandatory')
upsConfigInputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigInputVoltage.setStatus('mandatory')
upsConfigInputFreq = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigInputFreq.setStatus('mandatory')
upsConfigOutputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVoltage.setStatus('mandatory')
upsConfigOutputFreq = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputFreq.setStatus('mandatory')
upsDevicesTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 5), )
if mibBuilder.loadTexts: upsDevicesTable.setStatus('mandatory')
upsDevicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 5, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "indexOfDevice"))
if mibBuilder.loadTexts: upsDevicesEntry.setStatus('mandatory')
indexOfDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: indexOfDevice.setStatus('mandatory')
addrOfDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addrOfDevice.setStatus('mandatory')
nameOfDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nameOfDevice.setStatus('mandatory')
timeOfConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeOfConnection.setStatus('mandatory')
statusOfConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: statusOfConnection.setStatus('mandatory')
severityOfConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 9, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: severityOfConnection.setStatus('mandatory')
upsAgentIpaddress = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentIpaddress.setStatus('mandatory')
upsAgentGateway = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentGateway.setStatus('mandatory')
upsAgentSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentSubnetMask.setStatus('mandatory')
upsAgentDate = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentDate.setStatus('mandatory')
upsAgentTime = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentTime.setStatus('mandatory')
upsAgentNtpTimeServer = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentNtpTimeServer.setStatus('mandatory')
upsAgentNtpTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77))).clone(namedValues=NamedValues(("gmt1200dateLineWest", 1), ("gmt1200kwajalein", 2), ("gmt1100samoa", 3), ("gmt1000hawaii", 4), ("gmt0900alaska", 5), ("gmt0800tijuana", 6), ("gmt0700arizona", 7), ("gmt0700chihuahua", 8), ("gmt0700mountain", 9), ("gmt0600camerica", 10), ("gmt0600ctime", 11), ("gmt0600guadalajara", 12), ("gmt0600saskatchewan", 13), ("gmt0500quito", 14), ("gmt0500etime", 15), ("gmt0500indiana", 16), ("gmt0400atime", 17), ("gmt0400caracas", 18), ("gmt0400santiago", 19), ("gmt0300newfoundland", 20), ("gmt0300brasilia", 21), ("gmt0300georgetown", 22), ("gmt0300greenland", 23), ("gmt0200atlantic", 24), ("gmt0100azores", 25), ("gmt0100cvi", 26), ("gmt0000monrovia", 27), ("gmt0000london", 28), ("gmt0100vienna", 29), ("gmt0100prague", 30), ("gmt0100paris", 31), ("gmt0100zagreb", 32), ("gmt0100wcafrica", 33), ("gmt0200minsk", 34), ("gmt0200bucharest", 35), ("gmt0200cairo", 36), ("gmt0200pretoria", 37), ("gmt0200vilnius", 38), ("gmt0200jerusalem", 39), ("gmt0300maghdad", 40), ("gmt0300riyadh", 41), ("gmt0300volgograd", 42), ("gmt0300nairobi", 43), ("gmt0300tehran", 44), ("gmt0400muscat", 45), ("gmt0400yerevan", 46), ("gmt0400kabul", 47), ("gmt0500ekaterinburg", 48), ("gmt0500tashkent", 49), ("gmt0500calcutta", 50), ("gmt0500mumbai", 51), ("gmt0500kathmandu", 52), ("gmt0600novosibirsk", 53), ("gmt0600dhaka", 54), ("gmt0600jayawardenepura", 55), ("gmt0600rangoon", 56), ("gmt0700bangkok", 57), ("gmt0700krasnoyarsk", 58), ("gmt0800beijing", 59), ("gmt0800irkutsk", 60), ("gmt0800singapore", 61), ("gmt0800perth", 62), ("gmt0800taipei", 63), ("gmt0900tokyo", 64), ("gmt0900seoul", 65), ("gmt0900yakutsk", 66), ("gmt0900adelaide", 67), ("gmt0900darwin", 68), ("gmt1000brisbane", 69), ("gmt1000canberra", 70), ("gmt1000guam", 71), ("gmt1000hobart", 72), ("gmt1000vladivostok", 73), ("gmt1100magadan", 74), ("gmt1200auckland", 75), ("gmt1200fiji", 76), ("gmt1300alofa", 77)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentNtpTimeZone.setStatus('mandatory')
upsAgentHistoryLogFrequency = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 21600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentHistoryLogFrequency.setStatus('mandatory')
upsAgentExtHistoryLogFrequency = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentExtHistoryLogFrequency.setStatus('mandatory')
upsAgentPollRate = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentPollRate.setStatus('mandatory')
upsAgentBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("br2400", 1), ("br9600", 2), ("br19200", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentBaudRate.setStatus('mandatory')
upsAgentDhcpStatus = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentDhcpStatus.setStatus('mandatory')
upsAgentTelnetStatus = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentTelnetStatus.setStatus('mandatory')
upsAgentTftpStatus = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentTftpStatus.setStatus('mandatory')
upsAgentResetToDefault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentResetToDefault.setStatus('mandatory')
upsAgentRestart = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("restart", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentRestart.setStatus('mandatory')
upsAgentClearAgentLog = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentClearAgentLog.setStatus('mandatory')
upsAgentClearEventLog = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentClearEventLog.setStatus('mandatory')
upsAgentClearExtHistoryLog = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentClearExtHistoryLog.setStatus('mandatory')
upsAgentClearHistoryLog = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAgentClearHistoryLog.setStatus('mandatory')
upsAgentTrapsReceiversTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 21), )
if mibBuilder.loadTexts: upsAgentTrapsReceiversTable.setStatus('mandatory')
upsAgentTrapsReceiversEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 21, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "trapsIndex"))
if mibBuilder.loadTexts: upsAgentTrapsReceiversEntry.setStatus('mandatory')
trapsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapsIndex.setStatus('mandatory')
trapsReceiverAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 21, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapsReceiverAddr.setStatus('mandatory')
receiverCommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 21, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverCommunityString.setStatus('mandatory')
receiverDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 21, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverDescription.setStatus('mandatory')
upsAgentAccessControlTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 22), )
if mibBuilder.loadTexts: upsAgentAccessControlTable.setStatus('mandatory')
upsAgentAccessControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 22, 1), ).setIndexNames((0, "SOCOMECUPS-MIB", "trapsIndex"))
if mibBuilder.loadTexts: upsAgentAccessControlEntry.setStatus('mandatory')
accessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 22, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: accessIndex.setStatus('mandatory')
accessControlAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 22, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessControlAddr.setStatus('mandatory')
accessCommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 22, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessCommunityString.setStatus('mandatory')
accessControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2), ("notAccess", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessControlMode.setStatus('mandatory')
upsAgentMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAgentMibVersion.setStatus('mandatory')
upsAgentTrapString = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 10, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAgentTrapString.setStatus('mandatory')
emdSatatusTemperature = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: emdSatatusTemperature.setStatus('mandatory')
emdSatatusHumidity = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 1, 11, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: emdSatatusHumidity.setStatus('mandatory')
upsTrapOnBattery = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,1)).setObjects(("SOCOMECUPS-MIB", "upsEstimatedMinutesRemaining"), ("SOCOMECUPS-MIB", "upsSecondsOnBattery"))
upsTrapTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,2)).setObjects(("SOCOMECUPS-MIB", "upsTestId"), ("SOCOMECUPS-MIB", "upsTestSpinLock"), ("SOCOMECUPS-MIB", "upsTestResultsSummary"), ("SOCOMECUPS-MIB", "upsTestResultsDetail"), ("SOCOMECUPS-MIB", "upsTestStartTime"), ("SOCOMECUPS-MIB", "upsTestElapsedTime"))
upsTrapAlarmEntryAdded = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,3)).setObjects(("SOCOMECUPS-MIB", "upsAlarmId"), ("SOCOMECUPS-MIB", "upsAlarmDescr"))
upsTrapAlarmEntryRemoved = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,4)).setObjects(("SOCOMECUPS-MIB", "upsAlarmId"), ("SOCOMECUPS-MIB", "upsAlarmDescr"))
upsTrapUpsNormal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,5)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapUpsBattTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,6)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapOnBatteryPower = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,7)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapBatteryLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,8)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapPowerRestored = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,9)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapImminentStop = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,10)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapTurnedOff = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,11)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapOverTemperature = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,12)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapOverload = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,13)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapOnMains = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,14)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapRedoundancyLost = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,15)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapEmdTempLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,16)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapEmdTempHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,17)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapEmdHumidityLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,18)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapEmdHumidityHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,19)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapEmdFirstInputActive = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,20)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapEmdFirstInputRestored = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,21)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapEmdSecondInputActive = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,22)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
upsTrapEmdSecondInputRestored = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 1, 2) + (0,23)).setObjects(("SOCOMECUPS-MIB", "upsAgentTrapString"))
mibBuilder.exportSymbols("SOCOMECUPS-MIB", upsIdentUpsSerialNumber=upsIdentUpsSerialNumber, upsAlarmOnBattery=upsAlarmOnBattery, upsControlWeeklyShutdownTime=upsControlWeeklyShutdownTime, upsTrapEmdFirstInputActive=upsTrapEmdFirstInputActive, upsTestId=upsTestId, upsTrapEmdSecondInputActive=upsTrapEmdSecondInputActive, upsAgentNtpTimeServer=upsAgentNtpTimeServer, upsAlarmPhaseRotationFault=upsAlarmPhaseRotationFault, receiverDescription=receiverDescription, upsAlarmInverterFault=upsAlarmInverterFault, upsAlarmPllFault=upsAlarmPllFault, upsAlarmBypassBad=upsAlarmBypassBad, upsInputTable=upsInputTable, upsAlarmOutputOffAsRequested=upsAlarmOutputOffAsRequested, upsIdentUPSFirmwareVersion=upsIdentUPSFirmwareVersion, upsAlarmShortCircuit=upsAlarmShortCircuit, upsAlarmModule2Alarm=upsAlarmModule2Alarm, upsAlarmExternalAlarm4=upsAlarmExternalAlarm4, software=software, upsTestGeneralSystemsTest=upsTestGeneralSystemsTest, upsWellKnownAlarms=upsWellKnownAlarms, upsAgentNtpTimeZone=upsAgentNtpTimeZone, upsAlarmModule1Alarm=upsAlarmModule1Alarm, upsInputCurrent=upsInputCurrent, upsShutdownDelay=upsShutdownDelay, indexOfDevice=indexOfDevice, upsOutputKva=upsOutputKva, upsTrapTestCompleted=upsTrapTestCompleted, upsControlWeeklyScheduleEntry=upsControlWeeklyScheduleEntry, upsAlarmBoostGeneralAlarm=upsAlarmBoostGeneralAlarm, upsConfigInputFreq=upsConfigInputFreq, upsTrapTurnedOff=upsTrapTurnedOff, upsTrapOverload=upsTrapOverload, upsAlarmRectifierGeneralAlarm=upsAlarmRectifierGeneralAlarm, upsAlarmBatteryChargerFailure=upsAlarmBatteryChargerFailure, upsAlarmOptionalBoards=upsAlarmOptionalBoards, upsAlarmAutoTransferDisabled=upsAlarmAutoTransferDisabled, upsOutputCurrent=upsOutputCurrent, upsControlWeeklyRestartDay=upsControlWeeklyRestartDay, upsOutputFrequency=upsOutputFrequency, upsAlarmFansFailure=upsAlarmFansFailure, upsAlarmTestInProgress=upsAlarmTestInProgress, upsTestResultsDetail=upsTestResultsDetail, upsControlEcoModeScheduleEntry=upsControlEcoModeScheduleEntry, statusOfConnection=statusOfConnection, receiverCommunityString=receiverCommunityString, upsInputVoltage=upsInputVoltage, upsAlarmAllTransferDisabled=upsAlarmAllTransferDisabled, upsAlarmBatteryBad=upsAlarmBatteryBad, upsSecondsOnBattery=upsSecondsOnBattery, upsAlarmOutputOverload=upsAlarmOutputOverload, upsAlarmBypassGeneralAlarm=upsAlarmBypassGeneralAlarm, upsControlWarningInterval=upsControlWarningInterval, upsAlarmBatteryDischarged=upsAlarmBatteryDischarged, upsBypassVoltage=upsBypassVoltage, upsAlarmControlSystemFailure=upsAlarmControlSystemFailure, upsAlarmOutputBad=upsAlarmOutputBad, upsControlSeverity=upsControlSeverity, upsControlSpecialScheduleEntry=upsControlSpecialScheduleEntry, upsAgentDhcpStatus=upsAgentDhcpStatus, upsOutputVoltage=upsOutputVoltage, upsAlarmEService=upsAlarmEService, upsAgentClearAgentLog=upsAgentClearAgentLog, upsAlarmCommunicationLost=upsAlarmCommunicationLost, upsTestNoTestsInitiated=upsTestNoTestsInitiated, upsAlarmsPresent=upsAlarmsPresent, upsAlarm=upsAlarm, upsAlarmInsufficientResources=upsAlarmInsufficientResources, upsAlarmEmergencyStopActive=upsAlarmEmergencyStopActive, upsControlFirstWarning=upsControlFirstWarning, upsAlarmOverloadTimeout=upsAlarmOverloadTimeout, upsControlWeeklyScheduleTable=upsControlWeeklyScheduleTable, upsAlarmParallelModuleFault=upsAlarmParallelModuleFault, accessControlAddr=accessControlAddr, trapsReceiverAddr=trapsReceiverAddr, upsTrapOverTemperature=upsTrapOverTemperature, upsBypassCurrent=upsBypassCurrent, upsTurnOffAfterShutdown=upsTurnOffAfterShutdown, netvision=netvision, upsControl=upsControl, upsAgentIpaddress=upsAgentIpaddress, upsAlarmFanFailure=upsAlarmFanFailure, upsTestSpinLock=upsTestSpinLock, upsAlarmOutputUnder=upsAlarmOutputUnder, upsDevicesTable=upsDevicesTable, upsTrapPowerRestored=upsTrapPowerRestored, PositiveInteger=PositiveInteger, upsAgentTftpStatus=upsAgentTftpStatus, upsTrapOnMains=upsTrapOnMains, upsAlarmBoostFault=upsAlarmBoostFault, upsControlWeeklyIndex=upsControlWeeklyIndex, upsAlarmShutdownPending=upsAlarmShutdownPending, upsAlarmImproperCondition=upsAlarmImproperCondition, upsInputVoltageMax=upsInputVoltageMax, upsAlarmPeriodicServiceCheck=upsAlarmPeriodicServiceCheck, upsAgentExtHistoryLogFrequency=upsAgentExtHistoryLogFrequency, upsTrapEmdHumidityLow=upsTrapEmdHumidityLow, upsAlarmBatteryTooHigh=upsAlarmBatteryTooHigh, upsControlSpecialRestartDay=upsControlSpecialRestartDay, upsConfigInputVoltage=upsConfigInputVoltage, upsTrapOnBattery=upsTrapOnBattery, upsTrapAlarmEntryRemoved=upsTrapAlarmEntryRemoved, upsControlDelay=upsControlDelay, upsConfigOutputFreq=upsConfigOutputFreq, upsTrapUpsNormal=upsTrapUpsNormal, upsBypassLineIndex=upsBypassLineIndex, upsControlEventStatus=upsControlEventStatus, upsTrapAlarmEntryAdded=upsTrapAlarmEntryAdded, upsAlarmDescr=upsAlarmDescr, upsAlarmImminentStop=upsAlarmImminentStop, upsAlarmExternalAlarm1=upsAlarmExternalAlarm1, upsAgentPollRate=upsAgentPollRate, upsAlarmBatteryRoom=upsAlarmBatteryRoom, accessCommunityString=accessCommunityString, upsTrapOnBatteryPower=upsTrapOnBatteryPower, upsControlEcoModeStartDay=upsControlEcoModeStartDay, upsBypassTable=upsBypassTable, upsAlarmModule6Alarm=upsAlarmModule6Alarm, upsControlSpecialRestartTime=upsControlSpecialRestartTime, upsAlarmBatteryGeneralAlarm=upsAlarmBatteryGeneralAlarm, upsAlarmOutputOver=upsAlarmOutputOver, upsTrapEmdHumidityHigh=upsTrapEmdHumidityHigh, upsAgentGateway=upsAgentGateway, upsOutputLineIndex=upsOutputLineIndex, upsAlarmOnBypass=upsAlarmOnBypass, upsControlEcoModeStartTime=upsControlEcoModeStartTime, upsAlarmExternalAlarm3=upsAlarmExternalAlarm3, upsAgentRestart=upsAgentRestart, upsAlarmEntry=upsAlarmEntry, upsAlarmInputBad=upsAlarmInputBad, upsTestElapsedTime=upsTestElapsedTime, upsOutputPercentLoad=upsOutputPercentLoad, upsControlEcoModeEndDay=upsControlEcoModeEndDay, upsTrapImminentStop=upsTrapImminentStop, network=network, upsObjects=upsObjects, upsAlarmManualBypassClose=upsAlarmManualBypassClose, upsIdentModel=upsIdentModel, upsTestResultsSummary=upsTestResultsSummary, upsAlarmRectifierFault=upsAlarmRectifierFault, socomecSicon=socomecSicon, upsAlarmModule5Alarm=upsAlarmModule5Alarm, upsTestAbortTestInProgress=upsTestAbortTestInProgress, upsAlarmTime=upsAlarmTime, upsControlEcoModeEndTime=upsControlEcoModeEndTime, upsBatteryVoltage=upsBatteryVoltage, upsAlarmBoostTooLow=upsAlarmBoostTooLow, upsTrapEmdFirstInputRestored=upsTrapEmdFirstInputRestored, upsAlarmGenSetGeneral=upsAlarmGenSetGeneral, NonNegativeInteger=NonNegativeInteger, upsBatteryTemperature=upsBatteryTemperature, upsAgentTrapString=upsAgentTrapString, upsAlarmPowerSupplyFault=upsAlarmPowerSupplyFault, upsAlarmModule3Alarm=upsAlarmModule3Alarm, upsControlStatusControl=upsControlStatusControl, upsAlarmTable=upsAlarmTable, upsAgentTrapsReceiversTable=upsAgentTrapsReceiversTable, upsControlWeeklyRestartTime=upsControlWeeklyRestartTime, upsBatteryStatus=upsBatteryStatus, upsAlarmManualBypass=upsAlarmManualBypass, upsBypassFrequency=upsBypassFrequency, upsControlSpecialIndex=upsControlSpecialIndex, upsConfigOutputVoltage=upsConfigOutputVoltage, upsAgentClearHistoryLog=upsAgentClearHistoryLog, upsInput=upsInput, upsInputEntry=upsInputEntry, emdStatus=emdStatus, upsTrapRedoundancyLost=upsTrapRedoundancyLost, upsTrapEmdSecondInputRestored=upsTrapEmdSecondInputRestored, upsAgentAccessControlEntry=upsAgentAccessControlEntry, upsAlarmLowBattery=upsAlarmLowBattery, upsControlWeeklyShutdownDay=upsControlWeeklyShutdownDay, upsAlarmDiagnosticTestFailed=upsAlarmDiagnosticTestFailed, upsAlarmFuseFailure=upsAlarmFuseFailure, upsAlarmRedundancyLost=upsAlarmRedundancyLost, upsAlarmGenSetFault=upsAlarmGenSetFault, nameOfDevice=nameOfDevice, upsTrapUpsBattTestFailed=upsTrapUpsBattTestFailed, trapsIndex=trapsIndex, upsTrapEmdTempHigh=upsTrapEmdTempHigh, upsTrapEmdTempLow=upsTrapEmdTempLow, upsAlarmDataCorrupted=upsAlarmDataCorrupted, upsInputFrequency=upsInputFrequency, upsAlarmBatteryCircuitOpen=upsAlarmBatteryCircuitOpen, upsInputVoltageMin=upsInputVoltageMin, upsAlarmA63=upsAlarmA63, upsAgentMibVersion=upsAgentMibVersion, upsOutputTable=upsOutputTable, upsAlarmExternalAlarm2=upsAlarmExternalAlarm2, upsTestQuickBatteryTest=upsTestQuickBatteryTest, emdSatatusHumidity=emdSatatusHumidity, upsControlEventDescr=upsControlEventDescr, upsIdent=upsIdent, upsAgentSubnetMask=upsAgentSubnetMask, upsAgentTelnetStatus=upsAgentTelnetStatus, upsAgentTime=upsAgentTime, upsAlarmGeneralFault=upsAlarmGeneralFault, upsInputNumLines=upsInputNumLines, upsAgentTrapsReceiversEntry=upsAgentTrapsReceiversEntry, accessControlMode=accessControlMode, upsBattery=upsBattery, upsOutputSource=upsOutputSource, upsAlarmInputGeneralAlarm=upsAlarmInputGeneralAlarm, upsControlShutdownParametersTable=upsControlShutdownParametersTable, upsAlarmStopForOverload=upsAlarmStopForOverload, shutdownParametersEntry=shutdownParametersEntry, severityOfConnection=severityOfConnection, upsAgentBaudRate=upsAgentBaudRate, upsIdentAgentSoftwareVersion=upsIdentAgentSoftwareVersion, upsTestStartTime=upsTestStartTime, addrOfDevice=addrOfDevice, upsEstimatedMinutesRemaining=upsEstimatedMinutesRemaining, upsAlarmAuxMainFail=upsAlarmAuxMainFail, upsAgentAccessControlTable=upsAgentAccessControlTable, upsAgent=upsAgent, upsDevicesEntry=upsDevicesEntry, upsAlarmChargerFailed=upsAlarmChargerFailed, upsOutputNumLines=upsOutputNumLines, upsAlarmInverterOverCurrent=upsAlarmInverterOverCurrent, upsAlarmBoostTooHigh=upsAlarmBoostTooHigh, upsControlSpecialShutdownDay=upsControlSpecialShutdownDay, upsControlEcoModeIndex=upsControlEcoModeIndex, upsAlarmShutdownImminent=upsAlarmShutdownImminent, upsAgentClearEventLog=upsAgentClearEventLog, upsAgentDate=upsAgentDate, upsControlSpecialShutdownTime=upsControlSpecialShutdownTime, upsWellKnownTests=upsWellKnownTests, upsAgentResetToDefault=upsAgentResetToDefault, upsAlarmExtDes=upsAlarmExtDes, upsAlarmAwaitingPower=upsAlarmAwaitingPower, upsEstimatedChargeRemaining=upsEstimatedChargeRemaining, upsBypassNumLines=upsBypassNumLines, upsTest=upsTest, upsAgentHistoryLogFrequency=upsAgentHistoryLogFrequency, upsInputLineIndex=upsInputLineIndex, upsAlarmDepletedBattery=upsAlarmDepletedBattery, upsOutputEntry=upsOutputEntry, upsAlarmPrechargeVoltageFail=upsAlarmPrechargeVoltageFail, upsAlarmUpsSystemOff=upsAlarmUpsSystemOff, upsConfig=upsConfig, upsAlarmInverterGeneralAlarm=upsAlarmInverterGeneralAlarm, upsAlarmModule4Alarm=upsAlarmModule4Alarm, upsControlEcoModeScheduleTable=upsControlEcoModeScheduleTable, timeOfConnection=timeOfConnection, upsAgentClearExtHistoryLog=upsAgentClearExtHistoryLog, upsControlSpecialScheduleTable=upsControlSpecialScheduleTable, upsAlarmId=upsAlarmId, upsAlarmUpsOutputOff=upsAlarmUpsOutputOff, upsAlarmUpsOffAsRequested=upsAlarmUpsOffAsRequested, upsDeepBatteryCalibration=upsDeepBatteryCalibration, accessIndex=accessIndex, emdSatatusTemperature=emdSatatusTemperature, upsTraps=upsTraps, upsBypass=upsBypass)
mibBuilder.exportSymbols("SOCOMECUPS-MIB", upsAlarmA62=upsAlarmA62, upsAlarmInverterDistorsion=upsAlarmInverterDistorsion, upsBypassEntry=upsBypassEntry, upsOutput=upsOutput, upsTrapBatteryLow=upsTrapBatteryLow, upsAlarmTempBad=upsAlarmTempBad)
