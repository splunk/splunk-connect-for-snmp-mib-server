#
# PySNMP MIB module CISCO-IETF-IP-FORWARD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-IP-FORWARD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:43:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
IANAipRouteProtocol, = mibBuilder.importSymbols("IANA-RTPROTO-MIB", "IANAipRouteProtocol")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressPrefixLength, InetAddress, InetAddressType, InetAutonomousSystemNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddress", "InetAddressType", "InetAutonomousSystemNumber")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, iso, NotificationType, TimeTicks, Integer32, ModuleIdentity, MibIdentifier, Bits, Counter64, ObjectIdentity, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "NotificationType", "TimeTicks", "Integer32", "ModuleIdentity", "MibIdentifier", "Bits", "Counter64", "ObjectIdentity", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
ciscoIetfIpForward = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 85))
if mibBuilder.loadTexts: ciscoIetfIpForward.setLastUpdated('200201240000Z')
if mibBuilder.loadTexts: ciscoIetfIpForward.setOrganization('Cisco Systems, Inc.')
cInetCidrRouteNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 85, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cInetCidrRouteNumber.setStatus('current')
cInetCidrRouteDiscards = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 85, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cInetCidrRouteDiscards.setStatus('current')
cInetCidrRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 85, 7), )
if mibBuilder.loadTexts: cInetCidrRouteTable.setStatus('current')
cInetCidrRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1), ).setIndexNames((0, "CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteInstance"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteDestType"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteDest"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRoutePfxLen"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteNextHopType"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteNextHop"))
if mibBuilder.loadTexts: cInetCidrRouteEntry.setStatus('current')
cInetCidrRouteInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cInetCidrRouteInstance.setStatus('current')
cInetCidrRouteDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cInetCidrRouteDestType.setStatus('current')
cInetCidrRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 36)))
if mibBuilder.loadTexts: cInetCidrRouteDest.setStatus('current')
cInetCidrRoutePfxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 4), InetAddressPrefixLength())
if mibBuilder.loadTexts: cInetCidrRoutePfxLen.setStatus('current')
cInetCidrRouteNextHopType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 5), InetAddressType())
if mibBuilder.loadTexts: cInetCidrRouteNextHopType.setStatus('current')
cInetCidrRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 6), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 36)))
if mibBuilder.loadTexts: cInetCidrRouteNextHop.setStatus('current')
cInetCidrRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 7), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cInetCidrRouteIfIndex.setStatus('current')
cInetCidrRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("reject", 2), ("local", 3), ("remote", 4), ("blackhole", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cInetCidrRouteType.setStatus('current')
cInetCidrRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 9), IANAipRouteProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cInetCidrRouteProto.setStatus('current')
cInetCidrRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cInetCidrRouteAge.setStatus('current')
cInetCidrRouteNextHopAS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 11), InetAutonomousSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cInetCidrRouteNextHopAS.setStatus('current')
cInetCidrRouteMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cInetCidrRouteMetric1.setStatus('current')
cInetCidrRouteMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cInetCidrRouteMetric2.setStatus('current')
cInetCidrRouteMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cInetCidrRouteMetric3.setStatus('current')
cInetCidrRouteMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cInetCidrRouteMetric4.setStatus('current')
cInetCidrRouteMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cInetCidrRouteMetric5.setStatus('current')
cInetCidrRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 7, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cInetCidrRouteStatus.setStatus('current')
cIpForwardConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 85, 5))
cIpForwardGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 85, 5, 1))
cIpForwardCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 85, 5, 2))
cIpForwardCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 85, 5, 2, 3)).setObjects(("CISCO-IETF-IP-FORWARD-MIB", "cInetForwardCidrRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIpForwardCompliance2 = cIpForwardCompliance2.setStatus('current')
cInetForwardCidrRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 85, 5, 1, 4)).setObjects(("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteNumber"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteDiscards"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteIfIndex"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteType"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteProto"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteAge"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteNextHopAS"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteMetric1"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteMetric2"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteMetric3"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteMetric4"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteMetric5"), ("CISCO-IETF-IP-FORWARD-MIB", "cInetCidrRouteStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cInetForwardCidrRouteGroup = cInetForwardCidrRouteGroup.setStatus('current')
cIpCidrRouteNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 85, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpCidrRouteNumber.setStatus('deprecated')
cIpCidrRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 85, 4), )
if mibBuilder.loadTexts: cIpCidrRouteTable.setStatus('deprecated')
cIpCidrRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1), ).setIndexNames((0, "CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteDest"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteMask"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteTos"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteNextHop"))
if mibBuilder.loadTexts: cIpCidrRouteEntry.setStatus('deprecated')
cIpCidrRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpCidrRouteDest.setStatus('deprecated')
cIpCidrRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpCidrRouteMask.setStatus('deprecated')
cIpCidrRouteTos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpCidrRouteTos.setStatus('deprecated')
cIpCidrRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpCidrRouteNextHop.setStatus('deprecated')
cIpCidrRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteIfIndex.setStatus('deprecated')
cIpCidrRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("reject", 2), ("local", 3), ("remote", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteType.setStatus('deprecated')
cIpCidrRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("isIs", 9), ("esIs", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14), ("idpr", 15), ("ciscoEigrp", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpCidrRouteProto.setStatus('deprecated')
cIpCidrRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpCidrRouteAge.setStatus('deprecated')
cIpCidrRouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 9), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteInfo.setStatus('deprecated')
cIpCidrRouteNextHopAS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteNextHopAS.setStatus('deprecated')
cIpCidrRouteMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteMetric1.setStatus('deprecated')
cIpCidrRouteMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteMetric2.setStatus('deprecated')
cIpCidrRouteMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteMetric3.setStatus('deprecated')
cIpCidrRouteMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteMetric4.setStatus('deprecated')
cIpCidrRouteMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteMetric5.setStatus('deprecated')
cIpCidrRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 4, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpCidrRouteStatus.setStatus('deprecated')
cIpForwardCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 85, 5, 2, 1)).setObjects(("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardCidrRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIpForwardCompliance = cIpForwardCompliance.setStatus('deprecated')
cIpForwardCidrRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 85, 5, 1, 3)).setObjects(("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteNumber"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteDest"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteMask"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteTos"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteNextHop"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteIfIndex"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteType"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteProto"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteAge"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteInfo"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteNextHopAS"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteMetric1"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteMetric2"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteMetric3"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteMetric4"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteMetric5"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpCidrRouteStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIpForwardCidrRouteGroup = cIpForwardCidrRouteGroup.setStatus('deprecated')
cIpForwardNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 85, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpForwardNumber.setStatus('obsolete')
cIpForwardTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 85, 2), )
if mibBuilder.loadTexts: cIpForwardTable.setStatus('obsolete')
cIpForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1), ).setIndexNames((0, "CISCO-IETF-IP-FORWARD-MIB", "cIpForwardDest"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cIpForwardProto"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cIpForwardPolicy"), (0, "CISCO-IETF-IP-FORWARD-MIB", "cIpForwardNextHop"))
if mibBuilder.loadTexts: cIpForwardEntry.setStatus('obsolete')
cIpForwardDest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpForwardDest.setStatus('obsolete')
cIpForwardMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardMask.setStatus('obsolete')
cIpForwardPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpForwardPolicy.setStatus('obsolete')
cIpForwardNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpForwardNextHop.setStatus('obsolete')
cIpForwardIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardIfIndex.setStatus('obsolete')
cIpForwardType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("local", 3), ("remote", 4))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardType.setStatus('obsolete')
cIpForwardProto = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("is-is", 9), ("es-is", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14), ("idpr", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpForwardProto.setStatus('obsolete')
cIpForwardAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cIpForwardAge.setStatus('obsolete')
cIpForwardInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 9), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardInfo.setStatus('obsolete')
cIpForwardNextHopAS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardNextHopAS.setStatus('obsolete')
cIpForwardMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardMetric1.setStatus('obsolete')
cIpForwardMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardMetric2.setStatus('obsolete')
cIpForwardMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardMetric3.setStatus('obsolete')
cIpForwardMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardMetric4.setStatus('obsolete')
cIpForwardMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 85, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIpForwardMetric5.setStatus('obsolete')
cIpForwardOldCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 85, 5, 2, 2)).setObjects(("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardMultiPathGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIpForwardOldCompliance = cIpForwardOldCompliance.setStatus('obsolete')
cIpForwardMultiPathGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 85, 5, 1, 2)).setObjects(("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardNumber"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardDest"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardMask"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardPolicy"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardNextHop"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardIfIndex"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardType"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardProto"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardAge"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardInfo"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardNextHopAS"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardMetric1"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardMetric2"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardMetric3"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardMetric4"), ("CISCO-IETF-IP-FORWARD-MIB", "cIpForwardMetric5"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIpForwardMultiPathGroup = cIpForwardMultiPathGroup.setStatus('obsolete')
mibBuilder.exportSymbols("CISCO-IETF-IP-FORWARD-MIB", PYSNMP_MODULE_ID=ciscoIetfIpForward, cInetCidrRouteNextHop=cInetCidrRouteNextHop, cIpCidrRouteTos=cIpCidrRouteTos, cIpForwardEntry=cIpForwardEntry, cIpForwardNumber=cIpForwardNumber, cInetCidrRouteDestType=cInetCidrRouteDestType, cInetForwardCidrRouteGroup=cInetForwardCidrRouteGroup, cInetCidrRouteEntry=cInetCidrRouteEntry, cIpCidrRouteAge=cIpCidrRouteAge, cIpForwardNextHop=cIpForwardNextHop, cIpCidrRouteMetric4=cIpCidrRouteMetric4, cIpForwardInfo=cIpForwardInfo, cInetCidrRouteNextHopType=cInetCidrRouteNextHopType, cInetCidrRouteAge=cInetCidrRouteAge, cIpCidrRouteType=cIpCidrRouteType, cIpForwardCompliance=cIpForwardCompliance, cIpForwardTable=cIpForwardTable, cIpForwardDest=cIpForwardDest, cIpForwardType=cIpForwardType, cInetCidrRouteStatus=cInetCidrRouteStatus, cIpCidrRouteNextHop=cIpCidrRouteNextHop, cInetCidrRouteTable=cInetCidrRouteTable, cIpForwardCidrRouteGroup=cIpForwardCidrRouteGroup, cIpForwardMetric1=cIpForwardMetric1, cIpCidrRouteMetric5=cIpCidrRouteMetric5, cIpCidrRouteMetric3=cIpCidrRouteMetric3, cIpCidrRouteStatus=cIpCidrRouteStatus, cInetCidrRoutePfxLen=cInetCidrRoutePfxLen, cIpForwardMask=cIpForwardMask, cIpForwardProto=cIpForwardProto, cIpCidrRouteInfo=cIpCidrRouteInfo, cInetCidrRouteMetric3=cInetCidrRouteMetric3, cIpCidrRouteTable=cIpCidrRouteTable, ciscoIetfIpForward=ciscoIetfIpForward, cInetCidrRouteMetric1=cInetCidrRouteMetric1, cIpForwardOldCompliance=cIpForwardOldCompliance, cInetCidrRouteDiscards=cInetCidrRouteDiscards, cInetCidrRouteIfIndex=cInetCidrRouteIfIndex, cInetCidrRouteType=cInetCidrRouteType, cIpForwardPolicy=cIpForwardPolicy, cIpCidrRouteMask=cIpCidrRouteMask, cIpCidrRouteNextHopAS=cIpCidrRouteNextHopAS, cIpCidrRouteNumber=cIpCidrRouteNumber, cIpForwardNextHopAS=cIpForwardNextHopAS, cInetCidrRouteNumber=cInetCidrRouteNumber, cInetCidrRouteMetric4=cInetCidrRouteMetric4, cIpCidrRouteMetric2=cIpCidrRouteMetric2, cIpForwardCompliances=cIpForwardCompliances, cInetCidrRouteNextHopAS=cInetCidrRouteNextHopAS, cInetCidrRouteProto=cInetCidrRouteProto, cInetCidrRouteMetric5=cInetCidrRouteMetric5, cIpForwardAge=cIpForwardAge, cIpForwardConformance=cIpForwardConformance, cIpCidrRouteIfIndex=cIpCidrRouteIfIndex, cIpCidrRouteMetric1=cIpCidrRouteMetric1, cIpForwardMetric5=cIpForwardMetric5, cIpForwardGroups=cIpForwardGroups, cIpForwardMetric4=cIpForwardMetric4, cIpCidrRouteDest=cIpCidrRouteDest, cInetCidrRouteDest=cInetCidrRouteDest, cIpForwardCompliance2=cIpForwardCompliance2, cIpCidrRouteEntry=cIpCidrRouteEntry, cIpForwardMetric2=cIpForwardMetric2, cInetCidrRouteMetric2=cInetCidrRouteMetric2, cInetCidrRouteInstance=cInetCidrRouteInstance, cIpCidrRouteProto=cIpCidrRouteProto, cIpForwardIfIndex=cIpForwardIfIndex, cIpForwardMetric3=cIpForwardMetric3, cIpForwardMultiPathGroup=cIpForwardMultiPathGroup)
