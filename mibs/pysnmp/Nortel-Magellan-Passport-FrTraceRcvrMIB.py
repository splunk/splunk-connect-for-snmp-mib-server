#
# PySNMP MIB module Nortel-Magellan-Passport-FrTraceRcvrMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-FrTraceRcvrMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
StorageType, Integer32, DisplayString, RowStatus, RowPointer, Unsigned32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "StorageType", "Integer32", "DisplayString", "RowStatus", "RowPointer", "Unsigned32")
EnterpriseDateAndTime, DigitString, Hex, AsciiString, HexString, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "EnterpriseDateAndTime", "DigitString", "Hex", "AsciiString", "HexString", "NonReplicated")
traceRcvr, traceSessionIndex, traceIndex, traceSession, traceRcvrIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvr", "traceSessionIndex", "traceIndex", "traceSession", "traceRcvrIndex")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, MibIdentifier, Counter32, TimeTicks, Gauge32, Counter64, ObjectIdentity, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "MibIdentifier", "Counter32", "TimeTicks", "Gauge32", "Counter64", "ObjectIdentity", "IpAddress", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frTraceRcvrMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 139))
traceRcvrFr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3))
traceRcvrFrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 1), )
if mibBuilder.loadTexts: traceRcvrFrRowStatusTable.setStatus('mandatory')
traceRcvrFrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"))
if mibBuilder.loadTexts: traceRcvrFrRowStatusEntry.setStatus('mandatory')
traceRcvrFrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrRowStatus.setStatus('mandatory')
traceRcvrFrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrComponentName.setStatus('mandatory')
traceRcvrFrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrStorageType.setStatus('mandatory')
traceRcvrFrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: traceRcvrFrIndex.setStatus('mandatory')
traceRcvrFrDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2))
traceRcvrFrDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 1), )
if mibBuilder.loadTexts: traceRcvrFrDnaRowStatusTable.setStatus('mandatory')
traceRcvrFrDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDnaIndex"))
if mibBuilder.loadTexts: traceRcvrFrDnaRowStatusEntry.setStatus('mandatory')
traceRcvrFrDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaRowStatus.setStatus('mandatory')
traceRcvrFrDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaComponentName.setStatus('mandatory')
traceRcvrFrDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaStorageType.setStatus('mandatory')
traceRcvrFrDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: traceRcvrFrDnaIndex.setStatus('mandatory')
traceRcvrFrDnaAddressTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 10), )
if mibBuilder.loadTexts: traceRcvrFrDnaAddressTable.setStatus('mandatory')
traceRcvrFrDnaAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDnaIndex"))
if mibBuilder.loadTexts: traceRcvrFrDnaAddressEntry.setStatus('mandatory')
traceRcvrFrDnaNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDnaNumberingPlanIndicator.setStatus('mandatory')
traceRcvrFrDnaDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDnaDataNetworkAddress.setStatus('mandatory')
traceRcvrFrDnaOutgoingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 11), )
if mibBuilder.loadTexts: traceRcvrFrDnaOutgoingOptionsTable.setStatus('mandatory')
traceRcvrFrDnaOutgoingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDnaIndex"))
if mibBuilder.loadTexts: traceRcvrFrDnaOutgoingOptionsEntry.setStatus('mandatory')
traceRcvrFrDnaOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaOutCalls.setStatus('mandatory')
traceRcvrFrDnaOutDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1))).clone('high')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDnaOutDefaultPriority.setStatus('mandatory')
traceRcvrFrDnaOutIntl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaOutIntl.setStatus('mandatory')
traceRcvrFrDnaOutDefaultPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1))).clone('high')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaOutDefaultPathReliability.setStatus('mandatory')
traceRcvrFrDnaOutPathReliabilityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaOutPathReliabilityOverRide.setStatus('mandatory')
traceRcvrFrDnaOutPathReliabilitySignal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 11, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaOutPathReliabilitySignal.setStatus('mandatory')
traceRcvrFrDnaOutAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDnaOutAccess.setStatus('mandatory')
traceRcvrFrDnaIncomingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 12), )
if mibBuilder.loadTexts: traceRcvrFrDnaIncomingOptionsTable.setStatus('mandatory')
traceRcvrFrDnaIncomingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDnaIndex"))
if mibBuilder.loadTexts: traceRcvrFrDnaIncomingOptionsEntry.setStatus('mandatory')
traceRcvrFrDnaIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaIncCalls.setStatus('mandatory')
traceRcvrFrDnaCallOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 13), )
if mibBuilder.loadTexts: traceRcvrFrDnaCallOptionsTable.setStatus('mandatory')
traceRcvrFrDnaCallOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDnaIndex"))
if mibBuilder.loadTexts: traceRcvrFrDnaCallOptionsEntry.setStatus('mandatory')
traceRcvrFrDnaPacketSizes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 13, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="0100")).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaPacketSizes.setStatus('mandatory')
traceRcvrFrDnaDefaultRecvFrmNetworkPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("n16", 4), ("n32", 5), ("n64", 6), ("n128", 7), ("n256", 8), ("n512", 9), ("n1024", 10), ("n2048", 11), ("n4096", 12))).clone('n2048')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaDefaultRecvFrmNetworkPacketSize.setStatus('mandatory')
traceRcvrFrDnaDefaultSendToNetworkPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("n16", 4), ("n32", 5), ("n64", 6), ("n128", 7), ("n256", 8), ("n512", 9), ("n1024", 10), ("n2048", 11), ("n4096", 12))).clone('n2048')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaDefaultSendToNetworkPacketSize.setStatus('mandatory')
traceRcvrFrDnaCugFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("basic", 0), ("extended", 1))).clone('basic')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaCugFormat.setStatus('mandatory')
traceRcvrFrDnaCug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2))
traceRcvrFrDnaCugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 1), )
if mibBuilder.loadTexts: traceRcvrFrDnaCugRowStatusTable.setStatus('mandatory')
traceRcvrFrDnaCugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDnaIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDnaCugIndex"))
if mibBuilder.loadTexts: traceRcvrFrDnaCugRowStatusEntry.setStatus('mandatory')
traceRcvrFrDnaCugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDnaCugRowStatus.setStatus('mandatory')
traceRcvrFrDnaCugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaCugComponentName.setStatus('mandatory')
traceRcvrFrDnaCugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaCugStorageType.setStatus('mandatory')
traceRcvrFrDnaCugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: traceRcvrFrDnaCugIndex.setStatus('mandatory')
traceRcvrFrDnaCugCugOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 10), )
if mibBuilder.loadTexts: traceRcvrFrDnaCugCugOptionsTable.setStatus('mandatory')
traceRcvrFrDnaCugCugOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDnaIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDnaCugIndex"))
if mibBuilder.loadTexts: traceRcvrFrDnaCugCugOptionsEntry.setStatus('mandatory')
traceRcvrFrDnaCugType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("national", 0), ("international", 1))).clone('national')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDnaCugType.setStatus('mandatory')
traceRcvrFrDnaCugDnic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="30303030")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDnaCugDnic.setStatus('mandatory')
traceRcvrFrDnaCugInterlockCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDnaCugInterlockCode.setStatus('mandatory')
traceRcvrFrDnaCugPreferential = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaCugPreferential.setStatus('mandatory')
traceRcvrFrDnaCugOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaCugOutCalls.setStatus('mandatory')
traceRcvrFrDnaCugIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaCugIncCalls.setStatus('mandatory')
traceRcvrFrDnaCugPrivileged = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 2, 2, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDnaCugPrivileged.setStatus('mandatory')
traceRcvrFrDc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3))
traceRcvrFrDcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 1), )
if mibBuilder.loadTexts: traceRcvrFrDcRowStatusTable.setStatus('mandatory')
traceRcvrFrDcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDcIndex"))
if mibBuilder.loadTexts: traceRcvrFrDcRowStatusEntry.setStatus('mandatory')
traceRcvrFrDcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDcRowStatus.setStatus('mandatory')
traceRcvrFrDcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDcComponentName.setStatus('mandatory')
traceRcvrFrDcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDcStorageType.setStatus('mandatory')
traceRcvrFrDcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: traceRcvrFrDcIndex.setStatus('mandatory')
traceRcvrFrDcOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 10), )
if mibBuilder.loadTexts: traceRcvrFrDcOptionsTable.setStatus('mandatory')
traceRcvrFrDcOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceRcvrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceRcvrFrDcIndex"))
if mibBuilder.loadTexts: traceRcvrFrDcOptionsEntry.setStatus('mandatory')
traceRcvrFrDcRemoteNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDcRemoteNpi.setStatus('mandatory')
traceRcvrFrDcRemoteDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 10, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDcRemoteDna.setStatus('mandatory')
traceRcvrFrDcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("switched", 0), ("permanentMaster", 1), ("permanentSlave", 2), ("permanentBackupSlave", 3))).clone('switched')).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceRcvrFrDcType.setStatus('mandatory')
traceRcvrFrDcUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 2, 3, 3, 10, 1, 8), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceRcvrFrDcUserData.setStatus('mandatory')
traceSessionFr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3))
traceSessionFrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 1), )
if mibBuilder.loadTexts: traceSessionFrRowStatusTable.setStatus('mandatory')
traceSessionFrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceSessionIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrIndex"))
if mibBuilder.loadTexts: traceSessionFrRowStatusEntry.setStatus('mandatory')
traceSessionFrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrRowStatus.setStatus('mandatory')
traceSessionFrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrComponentName.setStatus('mandatory')
traceSessionFrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrStorageType.setStatus('mandatory')
traceSessionFrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: traceSessionFrIndex.setStatus('mandatory')
traceSessionFrVc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2))
traceSessionFrVcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 1), )
if mibBuilder.loadTexts: traceSessionFrVcRowStatusTable.setStatus('mandatory')
traceSessionFrVcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceSessionIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrVcIndex"))
if mibBuilder.loadTexts: traceSessionFrVcRowStatusEntry.setStatus('mandatory')
traceSessionFrVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcRowStatus.setStatus('mandatory')
traceSessionFrVcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcComponentName.setStatus('mandatory')
traceSessionFrVcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcStorageType.setStatus('mandatory')
traceSessionFrVcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: traceSessionFrVcIndex.setStatus('mandatory')
traceSessionFrVcCadTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10), )
if mibBuilder.loadTexts: traceSessionFrVcCadTable.setStatus('mandatory')
traceSessionFrVcCadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceSessionIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrVcIndex"))
if mibBuilder.loadTexts: traceSessionFrVcCadEntry.setStatus('mandatory')
traceSessionFrVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("svc", 0), ("pvc", 1), ("spvc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcType.setStatus('mandatory')
traceSessionFrVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcState.setStatus('mandatory')
traceSessionFrVcPreviousState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcPreviousState.setStatus('mandatory')
traceSessionFrVcDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcDiagnosticCode.setStatus('mandatory')
traceSessionFrVcPreviousDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcPreviousDiagnosticCode.setStatus('mandatory')
traceSessionFrVcCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcCalledNpi.setStatus('mandatory')
traceSessionFrVcCalledDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 7), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcCalledDna.setStatus('mandatory')
traceSessionFrVcCalledLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcCalledLcn.setStatus('mandatory')
traceSessionFrVcCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcCallingNpi.setStatus('mandatory')
traceSessionFrVcCallingDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcCallingDna.setStatus('mandatory')
traceSessionFrVcCallingLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcCallingLcn.setStatus('mandatory')
traceSessionFrVcAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcAccountingEnabled.setStatus('mandatory')
traceSessionFrVcFastSelectCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcFastSelectCall.setStatus('mandatory')
traceSessionFrVcPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcPathReliability.setStatus('mandatory')
traceSessionFrVcAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcAccountingEnd.setStatus('mandatory')
traceSessionFrVcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcPriority.setStatus('mandatory')
traceSessionFrVcSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcSegmentSize.setStatus('mandatory')
traceSessionFrVcMaxSubnetPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcMaxSubnetPktSize.setStatus('mandatory')
traceSessionFrVcRcosToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcRcosToNetwork.setStatus('mandatory')
traceSessionFrVcRcosFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcRcosFromNetwork.setStatus('mandatory')
traceSessionFrVcEmissionPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcEmissionPriorityToNetwork.setStatus('mandatory')
traceSessionFrVcEmissionPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcEmissionPriorityFromNetwork.setStatus('mandatory')
traceSessionFrVcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 10, 1, 32), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcDataPath.setStatus('mandatory')
traceSessionFrVcIntdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 11), )
if mibBuilder.loadTexts: traceSessionFrVcIntdTable.setStatus('mandatory')
traceSessionFrVcIntdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceSessionIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrVcIndex"))
if mibBuilder.loadTexts: traceSessionFrVcIntdEntry.setStatus('mandatory')
traceSessionFrVcCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 11, 1, 1), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcCallReferenceNumber.setStatus('mandatory')
traceSessionFrVcElapsedTimeTillNow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcElapsedTimeTillNow.setStatus('mandatory')
traceSessionFrVcSegmentsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcSegmentsRx.setStatus('mandatory')
traceSessionFrVcSegmentsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcSegmentsSent.setStatus('mandatory')
traceSessionFrVcStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcStartTime.setStatus('mandatory')
traceSessionFrVcFrdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12), )
if mibBuilder.loadTexts: traceSessionFrVcFrdTable.setStatus('mandatory')
traceSessionFrVcFrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceSessionIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrVcIndex"))
if mibBuilder.loadTexts: traceSessionFrVcFrdEntry.setStatus('mandatory')
traceSessionFrVcFrmCongestedToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcFrmCongestedToSubnet.setStatus('mandatory')
traceSessionFrVcCannotForwardToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcCannotForwardToSubnet.setStatus('mandatory')
traceSessionFrVcNotDataXferToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcNotDataXferToSubnet.setStatus('mandatory')
traceSessionFrVcOutOfRangeFrmFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcOutOfRangeFrmFromSubnet.setStatus('mandatory')
traceSessionFrVcCombErrorsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcCombErrorsFromSubnet.setStatus('mandatory')
traceSessionFrVcDuplicatesFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcDuplicatesFromSubnet.setStatus('mandatory')
traceSessionFrVcNotDataXferFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcNotDataXferFromSubnet.setStatus('mandatory')
traceSessionFrVcFrmLossTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcFrmLossTimeouts.setStatus('mandatory')
traceSessionFrVcOoSeqByteCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcOoSeqByteCntExceeded.setStatus('mandatory')
traceSessionFrVcPeakOoSeqPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcPeakOoSeqPktCount.setStatus('mandatory')
traceSessionFrVcPeakOoSeqFrmForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcPeakOoSeqFrmForwarded.setStatus('mandatory')
traceSessionFrVcSendSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcSendSequenceNumber.setStatus('mandatory')
traceSessionFrVcPktRetryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcPktRetryTimeouts.setStatus('mandatory')
traceSessionFrVcPeakRetryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcPeakRetryQueueSize.setStatus('mandatory')
traceSessionFrVcSubnetRecoveries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcSubnetRecoveries.setStatus('mandatory')
traceSessionFrVcOoSeqPktCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcOoSeqPktCntExceeded.setStatus('mandatory')
traceSessionFrVcPeakOoSeqByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 12, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcPeakOoSeqByteCount.setStatus('mandatory')
traceSessionFrVcDmepTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 417), )
if mibBuilder.loadTexts: traceSessionFrVcDmepTable.setStatus('mandatory')
traceSessionFrVcDmepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 417, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceIndex"), (0, "Nortel-Magellan-Passport-TraceBaseMIB", "traceSessionIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrVcIndex"), (0, "Nortel-Magellan-Passport-FrTraceRcvrMIB", "traceSessionFrVcDmepValue"))
if mibBuilder.loadTexts: traceSessionFrVcDmepEntry.setStatus('mandatory')
traceSessionFrVcDmepValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 106, 3, 3, 2, 417, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: traceSessionFrVcDmepValue.setStatus('mandatory')
frTraceRcvrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 139, 1))
frTraceRcvrGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 139, 1, 5))
frTraceRcvrGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 139, 1, 5, 2))
frTraceRcvrGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 139, 1, 5, 2, 2))
frTraceRcvrCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 139, 3))
frTraceRcvrCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 139, 3, 5))
frTraceRcvrCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 139, 3, 5, 2))
frTraceRcvrCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 139, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrTraceRcvrMIB", traceSessionFrVcPriority=traceSessionFrVcPriority, traceRcvrFrDnaCugPrivileged=traceRcvrFrDnaCugPrivileged, traceSessionFrVcCombErrorsFromSubnet=traceSessionFrVcCombErrorsFromSubnet, traceRcvrFrDnaIndex=traceRcvrFrDnaIndex, traceRcvrFrDnaCugInterlockCode=traceRcvrFrDnaCugInterlockCode, traceRcvrFr=traceRcvrFr, traceSessionFrVcCadEntry=traceSessionFrVcCadEntry, traceSessionFrVc=traceSessionFrVc, traceRcvrFrDnaOutPathReliabilityOverRide=traceRcvrFrDnaOutPathReliabilityOverRide, traceRcvrFrDnaCugComponentName=traceRcvrFrDnaCugComponentName, traceRcvrFrDnaCugIndex=traceRcvrFrDnaCugIndex, traceRcvrFrDcType=traceRcvrFrDcType, traceSessionFrVcPreviousDiagnosticCode=traceSessionFrVcPreviousDiagnosticCode, traceSessionFrVcAccountingEnabled=traceSessionFrVcAccountingEnabled, traceRcvrFrDcStorageType=traceRcvrFrDcStorageType, traceSessionFrVcIntdTable=traceSessionFrVcIntdTable, traceSessionFrVcSegmentsRx=traceSessionFrVcSegmentsRx, traceSessionFrVcDmepTable=traceSessionFrVcDmepTable, traceRcvrFrDnaStorageType=traceRcvrFrDnaStorageType, traceSessionFrVcOoSeqPktCntExceeded=traceSessionFrVcOoSeqPktCntExceeded, traceRcvrFrDcRowStatus=traceRcvrFrDcRowStatus, traceRcvrFrDnaIncCalls=traceRcvrFrDnaIncCalls, traceSessionFrComponentName=traceSessionFrComponentName, traceRcvrFrDnaPacketSizes=traceRcvrFrDnaPacketSizes, traceRcvrFrDcOptionsTable=traceRcvrFrDcOptionsTable, traceSessionFrVcDmepValue=traceSessionFrVcDmepValue, traceSessionFrVcCannotForwardToSubnet=traceSessionFrVcCannotForwardToSubnet, traceSessionFrVcPreviousState=traceSessionFrVcPreviousState, traceRcvrFrDnaCugStorageType=traceRcvrFrDnaCugStorageType, frTraceRcvrCapabilitiesBE01A=frTraceRcvrCapabilitiesBE01A, traceRcvrFrStorageType=traceRcvrFrStorageType, traceSessionFrVcDataPath=traceSessionFrVcDataPath, traceRcvrFrDnaOutPathReliabilitySignal=traceRcvrFrDnaOutPathReliabilitySignal, traceRcvrFrDnaOutgoingOptionsEntry=traceRcvrFrDnaOutgoingOptionsEntry, traceSessionFrVcRowStatusTable=traceSessionFrVcRowStatusTable, traceSessionFrVcNotDataXferFromSubnet=traceSessionFrVcNotDataXferFromSubnet, traceRcvrFrDnaRowStatus=traceRcvrFrDnaRowStatus, traceSessionFrVcType=traceSessionFrVcType, traceRcvrFrDnaRowStatusEntry=traceRcvrFrDnaRowStatusEntry, traceRcvrFrDnaCug=traceRcvrFrDnaCug, traceRcvrFrDnaOutDefaultPriority=traceRcvrFrDnaOutDefaultPriority, traceRcvrFrDnaOutCalls=traceRcvrFrDnaOutCalls, traceSessionFrVcEmissionPriorityFromNetwork=traceSessionFrVcEmissionPriorityFromNetwork, traceRcvrFrDnaOutAccess=traceRcvrFrDnaOutAccess, frTraceRcvrCapabilitiesBE=frTraceRcvrCapabilitiesBE, traceRcvrFrDnaRowStatusTable=traceRcvrFrDnaRowStatusTable, traceRcvrFrDnaNumberingPlanIndicator=traceRcvrFrDnaNumberingPlanIndicator, traceSessionFrVcStorageType=traceSessionFrVcStorageType, traceSessionFrVcOutOfRangeFrmFromSubnet=traceSessionFrVcOutOfRangeFrmFromSubnet, traceRcvrFrDnaCugRowStatusEntry=traceRcvrFrDnaCugRowStatusEntry, traceSessionFrVcPathReliability=traceSessionFrVcPathReliability, traceSessionFrStorageType=traceSessionFrStorageType, traceSessionFrVcRcosToNetwork=traceSessionFrVcRcosToNetwork, traceRcvrFrDnaCugCugOptionsEntry=traceRcvrFrDnaCugCugOptionsEntry, traceSessionFrVcCallReferenceNumber=traceSessionFrVcCallReferenceNumber, frTraceRcvrGroupBE=frTraceRcvrGroupBE, traceRcvrFrDnaAddressEntry=traceRcvrFrDnaAddressEntry, traceSessionFrVcDmepEntry=traceSessionFrVcDmepEntry, traceRcvrFrDnaCugPreferential=traceRcvrFrDnaCugPreferential, traceSessionFrVcNotDataXferToSubnet=traceSessionFrVcNotDataXferToSubnet, traceRcvrFrDcRemoteDna=traceRcvrFrDcRemoteDna, traceSessionFrVcSegmentsSent=traceSessionFrVcSegmentsSent, traceSessionFrVcFrmCongestedToSubnet=traceSessionFrVcFrmCongestedToSubnet, traceSessionFrVcPeakOoSeqPktCount=traceSessionFrVcPeakOoSeqPktCount, traceSessionFrVcIntdEntry=traceSessionFrVcIntdEntry, frTraceRcvrMIB=frTraceRcvrMIB, frTraceRcvrCapabilities=frTraceRcvrCapabilities, traceRcvrFrDnaDefaultSendToNetworkPacketSize=traceRcvrFrDnaDefaultSendToNetworkPacketSize, traceSessionFrVcElapsedTimeTillNow=traceSessionFrVcElapsedTimeTillNow, traceRcvrFrComponentName=traceRcvrFrComponentName, traceSessionFrVcOoSeqByteCntExceeded=traceSessionFrVcOoSeqByteCntExceeded, traceRcvrFrDnaDefaultRecvFrmNetworkPacketSize=traceRcvrFrDnaDefaultRecvFrmNetworkPacketSize, traceRcvrFrDcRemoteNpi=traceRcvrFrDcRemoteNpi, traceRcvrFrDnaOutgoingOptionsTable=traceRcvrFrDnaOutgoingOptionsTable, traceSessionFrVcAccountingEnd=traceSessionFrVcAccountingEnd, traceSessionFrVcFrdTable=traceSessionFrVcFrdTable, traceSessionFrVcPeakRetryQueueSize=traceSessionFrVcPeakRetryQueueSize, frTraceRcvrGroupBE01=frTraceRcvrGroupBE01, traceSessionFrVcPktRetryTimeouts=traceSessionFrVcPktRetryTimeouts, traceRcvrFrDnaCugDnic=traceRcvrFrDnaCugDnic, traceRcvrFrDnaDataNetworkAddress=traceRcvrFrDnaDataNetworkAddress, traceRcvrFrRowStatus=traceRcvrFrRowStatus, traceRcvrFrDna=traceRcvrFrDna, traceRcvrFrDnaCugRowStatus=traceRcvrFrDnaCugRowStatus, traceRcvrFrDnaCugOutCalls=traceRcvrFrDnaCugOutCalls, traceSessionFrVcCallingDna=traceSessionFrVcCallingDna, traceRcvrFrDnaCallOptionsTable=traceRcvrFrDnaCallOptionsTable, traceSessionFrVcDiagnosticCode=traceSessionFrVcDiagnosticCode, frTraceRcvrGroupBE01A=frTraceRcvrGroupBE01A, traceRcvrFrDcOptionsEntry=traceRcvrFrDcOptionsEntry, traceSessionFrVcEmissionPriorityToNetwork=traceSessionFrVcEmissionPriorityToNetwork, traceRcvrFrRowStatusTable=traceRcvrFrRowStatusTable, traceRcvrFrDnaCugCugOptionsTable=traceRcvrFrDnaCugCugOptionsTable, traceSessionFrVcFrmLossTimeouts=traceSessionFrVcFrmLossTimeouts, traceRcvrFrDc=traceRcvrFrDc, traceRcvrFrDnaCugFormat=traceRcvrFrDnaCugFormat, traceRcvrFrDcRowStatusTable=traceRcvrFrDcRowStatusTable, traceRcvrFrDnaCugRowStatusTable=traceRcvrFrDnaCugRowStatusTable, traceRcvrFrDnaCugIncCalls=traceRcvrFrDnaCugIncCalls, traceRcvrFrDcUserData=traceRcvrFrDcUserData, traceSessionFrVcRowStatus=traceSessionFrVcRowStatus, traceSessionFrVcSubnetRecoveries=traceSessionFrVcSubnetRecoveries, traceSessionFrVcState=traceSessionFrVcState, traceRcvrFrDnaCugType=traceRcvrFrDnaCugType, traceRcvrFrDnaIncomingOptionsTable=traceRcvrFrDnaIncomingOptionsTable, traceRcvrFrDnaIncomingOptionsEntry=traceRcvrFrDnaIncomingOptionsEntry, frTraceRcvrGroup=frTraceRcvrGroup, traceSessionFrVcMaxSubnetPktSize=traceSessionFrVcMaxSubnetPktSize, traceRcvrFrDcIndex=traceRcvrFrDcIndex, traceSessionFrVcDuplicatesFromSubnet=traceSessionFrVcDuplicatesFromSubnet, traceSessionFr=traceSessionFr, traceSessionFrVcSendSequenceNumber=traceSessionFrVcSendSequenceNumber, traceSessionFrVcCalledLcn=traceSessionFrVcCalledLcn, traceSessionFrVcPeakOoSeqByteCount=traceSessionFrVcPeakOoSeqByteCount, traceRcvrFrDnaCallOptionsEntry=traceRcvrFrDnaCallOptionsEntry, traceSessionFrVcCalledDna=traceSessionFrVcCalledDna, traceSessionFrVcStartTime=traceSessionFrVcStartTime, traceSessionFrVcCallingLcn=traceSessionFrVcCallingLcn, traceRcvrFrIndex=traceRcvrFrIndex, traceSessionFrRowStatusTable=traceSessionFrRowStatusTable, traceSessionFrVcRcosFromNetwork=traceSessionFrVcRcosFromNetwork, traceSessionFrVcFrdEntry=traceSessionFrVcFrdEntry, traceSessionFrRowStatusEntry=traceSessionFrRowStatusEntry, traceRcvrFrDnaComponentName=traceRcvrFrDnaComponentName, traceSessionFrIndex=traceSessionFrIndex, traceRcvrFrDnaAddressTable=traceRcvrFrDnaAddressTable, traceRcvrFrDnaOutDefaultPathReliability=traceRcvrFrDnaOutDefaultPathReliability, traceRcvrFrDcRowStatusEntry=traceRcvrFrDcRowStatusEntry, traceRcvrFrDnaOutIntl=traceRcvrFrDnaOutIntl, traceSessionFrRowStatus=traceSessionFrRowStatus, traceSessionFrVcIndex=traceSessionFrVcIndex, traceSessionFrVcCallingNpi=traceSessionFrVcCallingNpi, traceSessionFrVcRowStatusEntry=traceSessionFrVcRowStatusEntry, traceSessionFrVcPeakOoSeqFrmForwarded=traceSessionFrVcPeakOoSeqFrmForwarded, frTraceRcvrCapabilitiesBE01=frTraceRcvrCapabilitiesBE01, traceSessionFrVcSegmentSize=traceSessionFrVcSegmentSize, traceSessionFrVcComponentName=traceSessionFrVcComponentName, traceRcvrFrRowStatusEntry=traceRcvrFrRowStatusEntry, traceSessionFrVcCalledNpi=traceSessionFrVcCalledNpi, traceSessionFrVcFastSelectCall=traceSessionFrVcFastSelectCall, traceSessionFrVcCadTable=traceSessionFrVcCadTable, traceRcvrFrDcComponentName=traceRcvrFrDcComponentName)
