#
# PySNMP MIB module RADLAN-TRAPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-TRAPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:41:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
rldot1dStpTrapVrblVID, rldot1dStpTrapVrblifIndex = mibBuilder.importSymbols("RADLAN-BRIDGEMIBOBJECTS-MIB", "rldot1dStpTrapVrblVID", "rldot1dStpTrapVrblifIndex")
rndErrorDesc, rndErrorSeverity = mibBuilder.importSymbols("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc", "rndErrorSeverity")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Gauge32, IpAddress, Integer32, Unsigned32, Counter64, ModuleIdentity, MibIdentifier, ObjectIdentity, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "IpAddress", "Integer32", "Unsigned32", "Counter64", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rndNotifications = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 0))
rndNotifications.setRevisions(('2010-06-25 00:00',))
if mibBuilder.loadTexts: rndNotifications.setLastUpdated('201006250000Z')
if mibBuilder.loadTexts: rndNotifications.setOrganization('Marvell Semiconductor, Inc.')
rxOverflowHWFault = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 3)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rxOverflowHWFault.setStatus('current')
txOverflowHWFault = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 4)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: txOverflowHWFault.setStatus('current')
routeTableOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 5)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: routeTableOverflow.setStatus('current')
resetRequired = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 10)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: resetRequired.setStatus('current')
endTftp = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 12)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: endTftp.setStatus('current')
abortTftp = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 13)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: abortTftp.setStatus('current')
startTftp = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 14)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: startTftp.setStatus('current')
faultBackUp = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 23)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: faultBackUp.setStatus('current')
mainLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 24)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: mainLinkUp.setStatus('current')
ipxRipTblOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 36)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: ipxRipTblOverflow.setStatus('current')
ipxSapTblOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 37)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: ipxSapTblOverflow.setStatus('current')
facsAccessVoilation = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 49)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: facsAccessVoilation.setStatus('current')
autoConfigurationCompleted = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 50)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: autoConfigurationCompleted.setStatus('current')
forwardingTabOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 51)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: forwardingTabOverflow.setStatus('current')
framRelaySwitchConnectionUp = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 53)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: framRelaySwitchConnectionUp.setStatus('current')
framRelaySwitchConnectionDown = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 54)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: framRelaySwitchConnectionDown.setStatus('current')
errorsDuringInit = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 61)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: errorsDuringInit.setStatus('current')
vlanDynPortAdded = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 66)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: vlanDynPortAdded.setStatus('current')
vlanDynPortRemoved = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 67)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: vlanDynPortRemoved.setStatus('current')
rsSDclientsTableOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 68)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsSDclientsTableOverflow.setStatus('current')
rsSDinactiveServer = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 69)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsSDinactiveServer.setStatus('current')
rsIpZhrConnectionsTableOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 70)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsIpZhrConnectionsTableOverflow.setStatus('current')
rsIpZhrReqStaticConnNotAccepted = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 71)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsIpZhrReqStaticConnNotAccepted.setStatus('current')
rsIpZhrVirtualIpAsSource = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 72)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsIpZhrVirtualIpAsSource.setStatus('current')
rsIpZhrNotAllocVirtualIp = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 73)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsIpZhrNotAllocVirtualIp.setStatus('current')
rsSnmpSetRequestInSpecialCfgState = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 74)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsSnmpSetRequestInSpecialCfgState.setStatus('current')
rsPingCompletion = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 136)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsPingCompletion.setStatus('current')
pppSecurityViolation = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 137)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: pppSecurityViolation.setStatus('current')
frDLCIStatudChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 138)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: frDLCIStatudChange.setStatus('current')
papFailedCommunication = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 139)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: papFailedCommunication.setStatus('current')
chapFailedCommunication = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 140)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: chapFailedCommunication.setStatus('current')
rsWSDRedundancySwitch = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 141)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsWSDRedundancySwitch.setStatus('current')
rsDhcpAllocationFailure = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 142)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rsDhcpAllocationFailure.setStatus('current')
rlIpFftStnOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 145)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlIpFftStnOverflow.setStatus('current')
rlIpFftSubOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 146)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlIpFftSubOverflow.setStatus('current')
rlIpxFftStnOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 147)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlIpxFftStnOverflow.setStatus('current')
rlIpxFftSubOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 148)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlIpxFftSubOverflow.setStatus('current')
rlIpmFftOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 149)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlIpmFftOverflow.setStatus('current')
rlPhysicalDescriptionChanged = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 150)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlPhysicalDescriptionChanged.setStatus('current')
rldot1dStpPortStateForwarding = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 151)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"), ("RADLAN-BRIDGEMIBOBJECTS-MIB", "rldot1dStpTrapVrblifIndex"), ("RADLAN-BRIDGEMIBOBJECTS-MIB", "rldot1dStpTrapVrblVID"))
if mibBuilder.loadTexts: rldot1dStpPortStateForwarding.setStatus('current')
rldot1dStpPortStateNotForwarding = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 152)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"), ("RADLAN-BRIDGEMIBOBJECTS-MIB", "rldot1dStpTrapVrblifIndex"), ("RADLAN-BRIDGEMIBOBJECTS-MIB", "rldot1dStpTrapVrblVID"))
if mibBuilder.loadTexts: rldot1dStpPortStateNotForwarding.setStatus('current')
rlPolicyDropPacketTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 153)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlPolicyDropPacketTrap.setStatus('current')
rlPolicyForwardPacketTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 154)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlPolicyForwardPacketTrap.setStatus('current')
rlIgmpProxyTableOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 156)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlIgmpProxyTableOverflow.setStatus('current')
rlIgmpV1MsgReceived = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 157)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlIgmpV1MsgReceived.setStatus('current')
rlVrrpEntriesDeleted = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 158)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlVrrpEntriesDeleted.setStatus('current')
rlHotSwapTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 159)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlHotSwapTrap.setStatus('current')
rlTrunkPortAddedTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 160)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlTrunkPortAddedTrap.setStatus('current')
rlTrunkPortRemovedTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 161)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlTrunkPortRemovedTrap.setStatus('current')
rlTrunkPortNotCapableTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 162)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlTrunkPortNotCapableTrap.setStatus('current')
rlLockPortTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 170)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlLockPortTrap.setStatus('current')
vlanDynVlanAdded = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 171)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: vlanDynVlanAdded.setStatus('current')
vlanDynVlanRemoved = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 172)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: vlanDynVlanRemoved.setStatus('current')
vlanDynamicToStatic = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 173)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: vlanDynamicToStatic.setStatus('current')
vlanStaticToDynamic = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 174)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: vlanStaticToDynamic.setStatus('current')
dstrSysLog = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 175)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: dstrSysLog.setStatus('current')
rlEnvMonFanStateChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 176)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlEnvMonFanStateChange.setStatus('current')
rlEnvMonPowerSupplyStateChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 177)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlEnvMonPowerSupplyStateChange.setStatus('current')
rlStackStateChange = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 178)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlStackStateChange.setStatus('current')
rlEnvMonTemperatureRisingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 179)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlEnvMonTemperatureRisingAlarm.setStatus('current')
rlBrgMacAddFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 183)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlBrgMacAddFailedTrap.setStatus('current')
rldot1xPortStatusAuthorizedTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 184)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rldot1xPortStatusAuthorizedTrap.setStatus('current')
rldot1xPortStatusUnauthorizedTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 185)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rldot1xPortStatusUnauthorizedTrap.setStatus('current')
swIfTablePortLock = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 192)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: swIfTablePortLock.setStatus('current')
swIfTablePortUnLock = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 193)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: swIfTablePortUnLock.setStatus('current')
rlAAAUserLocked = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 194)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlAAAUserLocked.setStatus('current')
bpduGuardPortSuspended = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 202)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: bpduGuardPortSuspended.setStatus('current')
rldot1xSupplicantMacAuthorizedTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 203)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rldot1xSupplicantMacAuthorizedTrap.setStatus('current')
rldot1xSupplicantMacUnauthorizedTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 204)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rldot1xSupplicantMacUnauthorizedTrap.setStatus('current')
stpLoopbackDetection = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 205)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: stpLoopbackDetection.setStatus('current')
stpLoopbackDetectionResolved = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 206)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: stpLoopbackDetectionResolved.setStatus('current')
loopbackDetectionPortSuspended = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 207)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: loopbackDetectionPortSuspended.setStatus('current')
rlPortSuspended = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 213)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlPortSuspended.setStatus('current')
rlSpecialBpduDbOverflow = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 214)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlSpecialBpduDbOverflow.setStatus('current')
rldot1xSupplicantLoggedOutTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 215)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rldot1xSupplicantLoggedOutTrap.setStatus('current')
rldot1xPortControlModeNotAutoTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 216)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rldot1xPortControlModeNotAutoTrap.setStatus('current')
rlEeeLldpMultipleNeighbours = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 217)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlEeeLldpMultipleNeighbours.setStatus('current')
rlEeeLldpSingleNeighbour = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 218)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlEeeLldpSingleNeighbour.setStatus('current')
rldot1xSupplicantQuietPeriodTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 219)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rldot1xSupplicantQuietPeriodTrap.setStatus('current')
rlStackVersionUpgradeTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 222)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlStackVersionUpgradeTrap.setStatus('current')
rlStackVersionDowngradeTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 223)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlStackVersionDowngradeTrap.setStatus('current')
pseInrushPort = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 240)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: pseInrushPort.setStatus('current')
pseOverloadPort = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 241)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: pseOverloadPort.setStatus('current')
poePowerNegotiationInfo = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 242)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: poePowerNegotiationInfo.setStatus('current')
poePowerNegotiation4Wire = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 243)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: poePowerNegotiation4Wire.setStatus('current')
poePowerHWFail = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 244)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: poePowerHWFail.setStatus('current')
rlStormControlMinRateTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 246)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlStormControlMinRateTrap.setStatus('current')
rlApBackplanePortResolutionTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 247)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlApBackplanePortResolutionTrap.setStatus('current')
sfpPortPresent = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 248)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: sfpPortPresent.setStatus('current')
sfpPortNotPresent = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 249)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: sfpPortNotPresent.setStatus('current')
sfpPortLoss = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 250)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: sfpPortLoss.setStatus('current')
sfpPortNotLoss = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 251)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: sfpPortNotLoss.setStatus('current')
rlStormControlOccursTrap = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 252)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlStormControlOccursTrap.setStatus('current')
rlRadiusServTrapAcct = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 255)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlRadiusServTrapAcct.setStatus('current')
rlRadiusServTrapAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 256)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlRadiusServTrapAuthFailure.setStatus('current')
rlRadiusServTrapAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 89, 0, 257)).setObjects(("RADLAN-DEVICEPARAMS-MIB", "rndErrorDesc"), ("RADLAN-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlRadiusServTrapAuthSuccess.setStatus('current')
mibBuilder.exportSymbols("RADLAN-TRAPS-MIB", rlIgmpV1MsgReceived=rlIgmpV1MsgReceived, framRelaySwitchConnectionDown=framRelaySwitchConnectionDown, vlanDynPortRemoved=vlanDynPortRemoved, rlEeeLldpMultipleNeighbours=rlEeeLldpMultipleNeighbours, rlLockPortTrap=rlLockPortTrap, facsAccessVoilation=facsAccessVoilation, mainLinkUp=mainLinkUp, rsIpZhrConnectionsTableOverflow=rsIpZhrConnectionsTableOverflow, stpLoopbackDetectionResolved=stpLoopbackDetectionResolved, rsIpZhrNotAllocVirtualIp=rsIpZhrNotAllocVirtualIp, rlEnvMonTemperatureRisingAlarm=rlEnvMonTemperatureRisingAlarm, bpduGuardPortSuspended=bpduGuardPortSuspended, pseOverloadPort=pseOverloadPort, framRelaySwitchConnectionUp=framRelaySwitchConnectionUp, sfpPortNotLoss=sfpPortNotLoss, pppSecurityViolation=pppSecurityViolation, stpLoopbackDetection=stpLoopbackDetection, rlBrgMacAddFailedTrap=rlBrgMacAddFailedTrap, rlAAAUserLocked=rlAAAUserLocked, rndNotifications=rndNotifications, rlEeeLldpSingleNeighbour=rlEeeLldpSingleNeighbour, autoConfigurationCompleted=autoConfigurationCompleted, swIfTablePortUnLock=swIfTablePortUnLock, rlPhysicalDescriptionChanged=rlPhysicalDescriptionChanged, ipxSapTblOverflow=ipxSapTblOverflow, rlStackStateChange=rlStackStateChange, resetRequired=resetRequired, rlIpmFftOverflow=rlIpmFftOverflow, poePowerNegotiationInfo=poePowerNegotiationInfo, rsIpZhrReqStaticConnNotAccepted=rsIpZhrReqStaticConnNotAccepted, txOverflowHWFault=txOverflowHWFault, dstrSysLog=dstrSysLog, rsPingCompletion=rsPingCompletion, rlIpxFftStnOverflow=rlIpxFftStnOverflow, vlanDynamicToStatic=vlanDynamicToStatic, rlRadiusServTrapAuthSuccess=rlRadiusServTrapAuthSuccess, rxOverflowHWFault=rxOverflowHWFault, frDLCIStatudChange=frDLCIStatudChange, rlStackVersionDowngradeTrap=rlStackVersionDowngradeTrap, rldot1dStpPortStateForwarding=rldot1dStpPortStateForwarding, startTftp=startTftp, rldot1xSupplicantQuietPeriodTrap=rldot1xSupplicantQuietPeriodTrap, poePowerHWFail=poePowerHWFail, rlVrrpEntriesDeleted=rlVrrpEntriesDeleted, forwardingTabOverflow=forwardingTabOverflow, vlanDynPortAdded=vlanDynPortAdded, rsIpZhrVirtualIpAsSource=rsIpZhrVirtualIpAsSource, errorsDuringInit=errorsDuringInit, rlPolicyForwardPacketTrap=rlPolicyForwardPacketTrap, rldot1xPortStatusAuthorizedTrap=rldot1xPortStatusAuthorizedTrap, rlStackVersionUpgradeTrap=rlStackVersionUpgradeTrap, loopbackDetectionPortSuspended=loopbackDetectionPortSuspended, rlIpxFftSubOverflow=rlIpxFftSubOverflow, pseInrushPort=pseInrushPort, rldot1dStpPortStateNotForwarding=rldot1dStpPortStateNotForwarding, rlPolicyDropPacketTrap=rlPolicyDropPacketTrap, vlanDynVlanAdded=vlanDynVlanAdded, rldot1xSupplicantMacAuthorizedTrap=rldot1xSupplicantMacAuthorizedTrap, sfpPortLoss=sfpPortLoss, chapFailedCommunication=chapFailedCommunication, rsSDinactiveServer=rsSDinactiveServer, ipxRipTblOverflow=ipxRipTblOverflow, rlRadiusServTrapAcct=rlRadiusServTrapAcct, rlTrunkPortRemovedTrap=rlTrunkPortRemovedTrap, PYSNMP_MODULE_ID=rndNotifications, rlIgmpProxyTableOverflow=rlIgmpProxyTableOverflow, rlEnvMonFanStateChange=rlEnvMonFanStateChange, vlanDynVlanRemoved=vlanDynVlanRemoved, rsSnmpSetRequestInSpecialCfgState=rsSnmpSetRequestInSpecialCfgState, papFailedCommunication=papFailedCommunication, rlHotSwapTrap=rlHotSwapTrap, rlIpFftSubOverflow=rlIpFftSubOverflow, rlStormControlOccursTrap=rlStormControlOccursTrap, endTftp=endTftp, faultBackUp=faultBackUp, sfpPortNotPresent=sfpPortNotPresent, routeTableOverflow=routeTableOverflow, rlPortSuspended=rlPortSuspended, rlApBackplanePortResolutionTrap=rlApBackplanePortResolutionTrap, rlSpecialBpduDbOverflow=rlSpecialBpduDbOverflow, rsWSDRedundancySwitch=rsWSDRedundancySwitch, swIfTablePortLock=swIfTablePortLock, rldot1xSupplicantLoggedOutTrap=rldot1xSupplicantLoggedOutTrap, rlStormControlMinRateTrap=rlStormControlMinRateTrap, vlanStaticToDynamic=vlanStaticToDynamic, sfpPortPresent=sfpPortPresent, rlRadiusServTrapAuthFailure=rlRadiusServTrapAuthFailure, rldot1xPortStatusUnauthorizedTrap=rldot1xPortStatusUnauthorizedTrap, rsDhcpAllocationFailure=rsDhcpAllocationFailure, rlIpFftStnOverflow=rlIpFftStnOverflow, rsSDclientsTableOverflow=rsSDclientsTableOverflow, rldot1xPortControlModeNotAutoTrap=rldot1xPortControlModeNotAutoTrap, rldot1xSupplicantMacUnauthorizedTrap=rldot1xSupplicantMacUnauthorizedTrap, rlEnvMonPowerSupplyStateChange=rlEnvMonPowerSupplyStateChange, rlTrunkPortNotCapableTrap=rlTrunkPortNotCapableTrap, abortTftp=abortTftp, poePowerNegotiation4Wire=poePowerNegotiation4Wire, rlTrunkPortAddedTrap=rlTrunkPortAddedTrap)
