#
# PySNMP MIB module LC-ENTITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LC-ENTITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:55:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
lancastTraps, lancastMibModulesA = mibBuilder.importSymbols("LANCAST-MIB", "lancastTraps", "lancastMibModulesA")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, IpAddress, Integer32, ObjectIdentity, Counter64, Gauge32, Unsigned32, ModuleIdentity, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "Integer32", "ObjectIdentity", "Counter64", "Gauge32", "Unsigned32", "ModuleIdentity", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "NotificationType")
AutonomousType, TextualConvention, RowPointer, DisplayString, TAddress, TimeStamp, TDomain = mibBuilder.importSymbols("SNMPv2-TC", "AutonomousType", "TextualConvention", "RowPointer", "DisplayString", "TAddress", "TimeStamp", "TDomain")
entityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2745, 1, 5))
entityMIB.setRevisions(('1999-03-03 12:00',))
if mibBuilder.loadTexts: entityMIB.setLastUpdated('9903031200Z')
if mibBuilder.loadTexts: entityMIB.setOrganization('Lancast Inc')
entityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1))
entityPhysical = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1))
entityLogical = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 2))
entityMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3))
entityGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 4))
class PhysicalIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class PhysicalClass(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("chassis", 3), ("backplane", 4), ("container", 5), ("powerSupply", 6), ("fan", 7), ("sensor", 8), ("module", 9), ("port", 10))

entPhysicalTable = MibTable((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1, 1), )
if mibBuilder.loadTexts: entPhysicalTable.setStatus('current')
entPhysicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1, 1, 1), ).setIndexNames((0, "LC-ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: entPhysicalEntry.setStatus('current')
entPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1, 1, 1, 1), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entPhysicalIndex.setStatus('current')
entPhysicalDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entPhysicalDescr.setStatus('current')
entPhysicalVendorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1, 1, 1, 3), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entPhysicalVendorType.setStatus('current')
entPhysicalContainedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: entPhysicalContainedIn.setStatus('current')
entPhysicalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1, 1, 1, 5), PhysicalClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entPhysicalClass.setStatus('current')
entPhysicalParentRelPos = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: entPhysicalParentRelPos.setStatus('current')
entPhysicalName = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entPhysicalName.setStatus('current')
entLogicalTable = MibTable((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 2, 1), )
if mibBuilder.loadTexts: entLogicalTable.setStatus('current')
entLogicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 2, 1, 1), ).setIndexNames((0, "LC-ENTITY-MIB", "entLogicalIndex"))
if mibBuilder.loadTexts: entLogicalEntry.setStatus('current')
entLogicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: entLogicalIndex.setStatus('current')
entLogicalDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entLogicalDescr.setStatus('current')
entLogicalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 2, 1, 1, 3), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entLogicalType.setStatus('current')
entLogicalCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: entLogicalCommunity.setStatus('current')
entLogicalTAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 2, 1, 1, 5), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entLogicalTAddress.setStatus('current')
entLogicalTDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 2, 1, 1, 6), TDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entLogicalTDomain.setStatus('current')
entLPMappingTable = MibTable((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 1), )
if mibBuilder.loadTexts: entLPMappingTable.setStatus('current')
entLPMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 1, 1), ).setIndexNames((0, "LC-ENTITY-MIB", "entLogicalIndex"), (0, "LC-ENTITY-MIB", "entLPPhysicalIndex"))
if mibBuilder.loadTexts: entLPMappingEntry.setStatus('current')
entLPPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 1, 1, 1), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entLPPhysicalIndex.setStatus('current')
entAliasMappingTable = MibTable((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 2), )
if mibBuilder.loadTexts: entAliasMappingTable.setStatus('current')
entAliasMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 2, 1), ).setIndexNames((0, "LC-ENTITY-MIB", "entPhysicalIndex"), (0, "LC-ENTITY-MIB", "entAliasLogicalIndexOrZero"))
if mibBuilder.loadTexts: entAliasMappingEntry.setStatus('current')
entAliasLogicalIndexOrZero = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: entAliasLogicalIndexOrZero.setStatus('current')
entAliasMappingIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 2, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entAliasMappingIdentifier.setStatus('current')
entPhysicalContainsTable = MibTable((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 3), )
if mibBuilder.loadTexts: entPhysicalContainsTable.setStatus('current')
entPhysicalContainsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 3, 1), ).setIndexNames((0, "LC-ENTITY-MIB", "entPhysicalIndex"), (0, "LC-ENTITY-MIB", "entPhysicalChildIndex"))
if mibBuilder.loadTexts: entPhysicalContainsEntry.setStatus('current')
entPhysicalChildIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 3, 3, 1, 1), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entPhysicalChildIndex.setStatus('current')
entLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 5, 1, 4, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entLastChangeTime.setStatus('current')
entConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 2745, 1, 0, 10)).setObjects(("LC-ENTITY-MIB", "entLastChangeTime"))
if mibBuilder.loadTexts: entConfigChange.setStatus('current')
entityConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 5, 3))
entityCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 5, 3, 1))
entityGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 5, 3, 2))
entityCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2745, 1, 5, 3, 1, 1)).setObjects(("LC-ENTITY-MIB", "entityPhysicalGroup"), ("LC-ENTITY-MIB", "entityLogicalGroup"), ("LC-ENTITY-MIB", "entityMappingGroup"), ("LC-ENTITY-MIB", "entityGeneralGroup"), ("LC-ENTITY-MIB", "entityNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    entityCompliance = entityCompliance.setStatus('current')
entityPhysicalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2745, 1, 5, 3, 2, 1)).setObjects(("LC-ENTITY-MIB", "entPhysicalDescr"), ("LC-ENTITY-MIB", "entPhysicalVendorType"), ("LC-ENTITY-MIB", "entPhysicalContainedIn"), ("LC-ENTITY-MIB", "entPhysicalClass"), ("LC-ENTITY-MIB", "entPhysicalParentRelPos"), ("LC-ENTITY-MIB", "entPhysicalName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    entityPhysicalGroup = entityPhysicalGroup.setStatus('current')
entityLogicalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2745, 1, 5, 3, 2, 2)).setObjects(("LC-ENTITY-MIB", "entLogicalDescr"), ("LC-ENTITY-MIB", "entLogicalType"), ("LC-ENTITY-MIB", "entLogicalCommunity"), ("LC-ENTITY-MIB", "entLogicalTAddress"), ("LC-ENTITY-MIB", "entLogicalTDomain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    entityLogicalGroup = entityLogicalGroup.setStatus('current')
entityMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2745, 1, 5, 3, 2, 3)).setObjects(("LC-ENTITY-MIB", "entLPPhysicalIndex"), ("LC-ENTITY-MIB", "entAliasMappingIdentifier"), ("LC-ENTITY-MIB", "entPhysicalChildIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    entityMappingGroup = entityMappingGroup.setStatus('current')
entityGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2745, 1, 5, 3, 2, 4)).setObjects(("LC-ENTITY-MIB", "entLastChangeTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    entityGeneralGroup = entityGeneralGroup.setStatus('current')
entityNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2745, 1, 5, 3, 2, 5)).setObjects(("LC-ENTITY-MIB", "entConfigChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    entityNotificationsGroup = entityNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("LC-ENTITY-MIB", entLogicalTAddress=entLogicalTAddress, entLogicalTDomain=entLogicalTDomain, entPhysicalEntry=entPhysicalEntry, entityCompliance=entityCompliance, entAliasLogicalIndexOrZero=entAliasLogicalIndexOrZero, entPhysicalName=entPhysicalName, entityGroups=entityGroups, entityGeneral=entityGeneral, entAliasMappingEntry=entAliasMappingEntry, entPhysicalContainsTable=entPhysicalContainsTable, entPhysicalChildIndex=entPhysicalChildIndex, entityCompliances=entityCompliances, entAliasMappingTable=entAliasMappingTable, entLPPhysicalIndex=entLPPhysicalIndex, entAliasMappingIdentifier=entAliasMappingIdentifier, entPhysicalIndex=entPhysicalIndex, entPhysicalContainsEntry=entPhysicalContainsEntry, entPhysicalContainedIn=entPhysicalContainedIn, PYSNMP_MODULE_ID=entityMIB, entLogicalType=entLogicalType, PhysicalClass=PhysicalClass, entLPMappingTable=entLPMappingTable, entLogicalDescr=entLogicalDescr, entPhysicalClass=entPhysicalClass, entPhysicalParentRelPos=entPhysicalParentRelPos, entLogicalCommunity=entLogicalCommunity, entLogicalTable=entLogicalTable, entityGeneralGroup=entityGeneralGroup, entityMappingGroup=entityMappingGroup, entityLogical=entityLogical, PhysicalIndex=PhysicalIndex, entityPhysicalGroup=entityPhysicalGroup, entPhysicalVendorType=entPhysicalVendorType, entPhysicalTable=entPhysicalTable, entityMIBObjects=entityMIBObjects, entityMIB=entityMIB, entLPMappingEntry=entLPMappingEntry, entityConformance=entityConformance, entLogicalEntry=entLogicalEntry, entLogicalIndex=entLogicalIndex, entPhysicalDescr=entPhysicalDescr, entityPhysical=entityPhysical, entConfigChange=entConfigChange, entityLogicalGroup=entityLogicalGroup, entityNotificationsGroup=entityNotificationsGroup, entLastChangeTime=entLastChangeTime, entityMapping=entityMapping)
