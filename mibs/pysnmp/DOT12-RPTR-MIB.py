#
# PySNMP MIB module DOT12-RPTR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOT12-RPTR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:39:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Gauge32, mib_2, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, NotificationType, Integer32, ObjectIdentity, Unsigned32, Counter32, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Gauge32", "mib-2", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "NotificationType", "Integer32", "ObjectIdentity", "Unsigned32", "Counter32", "TimeTicks", "Counter64")
DisplayString, TextualConvention, MacAddress, TimeStamp, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress", "TimeStamp", "TruthValue")
vgRptrMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 53))
if mibBuilder.loadTexts: vgRptrMIB.setLastUpdated('9705192256Z')
if mibBuilder.loadTexts: vgRptrMIB.setOrganization('IETF 100VG-AnyLAN Working Group')
vgRptrObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1))
vgRptrBasic = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 1))
vgRptrBasicRptr = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 1, 1))
vgRptrInfoTable = MibTable((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1), )
if mibBuilder.loadTexts: vgRptrInfoTable.setStatus('current')
vgRptrInfoEntry = MibTableRow((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1), ).setIndexNames((0, "DOT12-RPTR-MIB", "vgRptrInfoIndex"))
if mibBuilder.loadTexts: vgRptrInfoEntry.setStatus('current')
vgRptrInfoIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vgRptrInfoIndex.setStatus('current')
vgRptrInfoMACAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrInfoMACAddress.setStatus('current')
vgRptrInfoCurrentFramingType = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("frameType88023", 1), ("frameType88025", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrInfoCurrentFramingType.setStatus('current')
vgRptrInfoDesiredFramingType = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("frameType88023", 1), ("frameType88025", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vgRptrInfoDesiredFramingType.setStatus('current')
vgRptrInfoFramingCapability = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("frameType88023", 1), ("frameType88025", 2), ("frameTypeEither", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrInfoFramingCapability.setStatus('current')
vgRptrInfoTrainingVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrInfoTrainingVersion.setStatus('current')
vgRptrInfoOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("generalFailure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrInfoOperStatus.setStatus('current')
vgRptrInfoReset = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noReset", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vgRptrInfoReset.setStatus('current')
vgRptrInfoLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 1, 1, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrInfoLastChange.setStatus('current')
vgRptrBasicGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 1, 2))
vgRptrBasicGroupTable = MibTable((1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1), )
if mibBuilder.loadTexts: vgRptrBasicGroupTable.setStatus('current')
vgRptrBasicGroupEntry = MibTableRow((1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1), ).setIndexNames((0, "DOT12-RPTR-MIB", "vgRptrGroupIndex"))
if mibBuilder.loadTexts: vgRptrBasicGroupEntry.setStatus('current')
vgRptrGroupIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2146483647)))
if mibBuilder.loadTexts: vgRptrGroupIndex.setStatus('current')
vgRptrGroupObjectID = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrGroupObjectID.setStatus('current')
vgRptrGroupOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("operational", 2), ("malfunctioning", 3), ("notPresent", 4), ("underTest", 5), ("resetInProgress", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrGroupOperStatus.setStatus('current')
vgRptrGroupPortCapacity = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2146483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrGroupPortCapacity.setStatus('current')
vgRptrGroupCablesBundled = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("someCablesBundled", 1), ("noCablesBundled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vgRptrGroupCablesBundled.setStatus('current')
vgRptrBasicPort = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 1, 3))
vgRptrBasicPortTable = MibTable((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1), )
if mibBuilder.loadTexts: vgRptrBasicPortTable.setStatus('current')
vgRptrBasicPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1), ).setIndexNames((0, "DOT12-RPTR-MIB", "vgRptrGroupIndex"), (0, "DOT12-RPTR-MIB", "vgRptrPortIndex"))
if mibBuilder.loadTexts: vgRptrBasicPortEntry.setStatus('current')
vgRptrPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vgRptrPortIndex.setStatus('current')
vgRptrPortType = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cascadeExternal", 1), ("cascadeInternal", 2), ("localExternal", 3), ("localInternal", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortType.setStatus('current')
vgRptrPortAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vgRptrPortAdminStatus.setStatus('current')
vgRptrPortOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("training", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortOperStatus.setStatus('current')
vgRptrPortSupportedPromiscMode = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("singleModeOnly", 1), ("singleOrPromiscMode", 2), ("promiscModeOnly", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortSupportedPromiscMode.setStatus('current')
vgRptrPortSupportedCascadeMode = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("endNodesOnly", 1), ("endNodesOrRepeaters", 2), ("cascadePort", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortSupportedCascadeMode.setStatus('current')
vgRptrPortAllowedTrainType = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("allowEndNodesOnly", 1), ("allowPromiscuousEndNodes", 2), ("allowEndNodesOrRepeaters", 3), ("allowAnything", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vgRptrPortAllowedTrainType.setStatus('current')
vgRptrPortLastTrainConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortLastTrainConfig.setStatus('current')
vgRptrPortTrainingResult = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortTrainingResult.setStatus('current')
vgRptrPortPriorityEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vgRptrPortPriorityEnable.setStatus('current')
vgRptrPortRptrInfoIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortRptrInfoIndex.setStatus('current')
vgRptrMonitor = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 2))
vgRptrMonRepeater = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 2, 1))
vgRptrMonitorTable = MibTable((1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1), )
if mibBuilder.loadTexts: vgRptrMonitorTable.setStatus('current')
vgRptrMonitorEntry = MibTableRow((1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1), ).setIndexNames((0, "DOT12-RPTR-MIB", "vgRptrInfoIndex"))
if mibBuilder.loadTexts: vgRptrMonitorEntry.setStatus('current')
vgRptrMonTotalReadableFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrMonTotalReadableFrames.setStatus('current')
vgRptrMonTotalReadableOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrMonTotalReadableOctets.setStatus('current')
vgRptrMonReadableOctetRollovers = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrMonReadableOctetRollovers.setStatus('current')
vgRptrMonHCTotalReadableOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrMonHCTotalReadableOctets.setStatus('current')
vgRptrMonTotalErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrMonTotalErrors.setStatus('current')
vgRptrMonGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 2, 2))
vgRptrMonPort = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 2, 3))
vgRptrMonPortTable = MibTable((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1), )
if mibBuilder.loadTexts: vgRptrMonPortTable.setStatus('current')
vgRptrMonPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1), ).setIndexNames((0, "DOT12-RPTR-MIB", "vgRptrGroupIndex"), (0, "DOT12-RPTR-MIB", "vgRptrPortIndex"))
if mibBuilder.loadTexts: vgRptrMonPortEntry.setStatus('current')
vgRptrPortReadableFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortReadableFrames.setStatus('current')
vgRptrPortReadableOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortReadableOctets.setStatus('current')
vgRptrPortReadOctetRollovers = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortReadOctetRollovers.setStatus('current')
vgRptrPortHCReadableOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortHCReadableOctets.setStatus('current')
vgRptrPortUnreadableOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortUnreadableOctets.setStatus('current')
vgRptrPortUnreadOctetRollovers = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortUnreadOctetRollovers.setStatus('current')
vgRptrPortHCUnreadableOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortHCUnreadableOctets.setStatus('current')
vgRptrPortHighPriorityFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortHighPriorityFrames.setStatus('current')
vgRptrPortHighPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortHighPriorityOctets.setStatus('current')
vgRptrPortHighPriOctetRollovers = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortHighPriOctetRollovers.setStatus('current')
vgRptrPortHCHighPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortHCHighPriorityOctets.setStatus('current')
vgRptrPortNormPriorityFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortNormPriorityFrames.setStatus('current')
vgRptrPortNormPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortNormPriorityOctets.setStatus('current')
vgRptrPortNormPriOctetRollovers = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortNormPriOctetRollovers.setStatus('current')
vgRptrPortHCNormPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortHCNormPriorityOctets.setStatus('current')
vgRptrPortBroadcastFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortBroadcastFrames.setStatus('current')
vgRptrPortMulticastFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortMulticastFrames.setStatus('current')
vgRptrPortNullAddressedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortNullAddressedFrames.setStatus('current')
vgRptrPortIPMFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortIPMFrames.setStatus('current')
vgRptrPortOversizeFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortOversizeFrames.setStatus('current')
vgRptrPortDataErrorFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortDataErrorFrames.setStatus('current')
vgRptrPortPriorityPromotions = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortPriorityPromotions.setStatus('current')
vgRptrPortTransitionToTrainings = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortTransitionToTrainings.setStatus('current')
vgRptrPortLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 2, 3, 1, 1, 24), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrPortLastChange.setStatus('current')
vgRptrAddrTrack = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 3))
vgRptrAddrTrackRptr = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 3, 1))
vgRptrAddrTrackGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 3, 2))
vgRptrAddrTrackPort = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 1, 3, 3))
vgRptrAddrTrackTable = MibTable((1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1), )
if mibBuilder.loadTexts: vgRptrAddrTrackTable.setStatus('current')
vgRptrAddrTrackEntry = MibTableRow((1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1), ).setIndexNames((0, "DOT12-RPTR-MIB", "vgRptrGroupIndex"), (0, "DOT12-RPTR-MIB", "vgRptrPortIndex"))
if mibBuilder.loadTexts: vgRptrAddrTrackEntry.setStatus('current')
vgRptrAddrLastTrainedAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrAddrLastTrainedAddress.setStatus('current')
vgRptrAddrTrainedAddrChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrAddrTrainedAddrChanges.setStatus('current')
vgRptrRptrDetectedDupAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgRptrRptrDetectedDupAddress.setStatus('current')
vgRptrMgrDetectedDupAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 53, 1, 3, 3, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vgRptrMgrDetectedDupAddress.setStatus('current')
vgRptrTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 2))
vgRptrTrapPrefix = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 2, 0))
vgRptrHealth = NotificationType((1, 3, 6, 1, 2, 1, 53, 2, 0, 1)).setObjects(("DOT12-RPTR-MIB", "vgRptrInfoOperStatus"))
if mibBuilder.loadTexts: vgRptrHealth.setStatus('current')
vgRptrResetEvent = NotificationType((1, 3, 6, 1, 2, 1, 53, 2, 0, 2)).setObjects(("DOT12-RPTR-MIB", "vgRptrInfoOperStatus"))
if mibBuilder.loadTexts: vgRptrResetEvent.setStatus('current')
vgRptrConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 3))
vgRptrCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 3, 1))
vgRptrGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 53, 3, 2))
vgRptrCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 53, 3, 1, 1)).setObjects(("DOT12-RPTR-MIB", "vgRptrConfigGroup"), ("DOT12-RPTR-MIB", "vgRptrStatsGroup"), ("DOT12-RPTR-MIB", "vgRptrAddrGroup"), ("DOT12-RPTR-MIB", "vgRptrNotificationsGroup"), ("DOT12-RPTR-MIB", "vgRptrStats64Group"), ("SNMP-REPEATER-MIB", "snmpRptrGrpRptrAddrSearch"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vgRptrCompliance = vgRptrCompliance.setStatus('current')
vgRptrConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 53, 3, 2, 1)).setObjects(("DOT12-RPTR-MIB", "vgRptrInfoMACAddress"), ("DOT12-RPTR-MIB", "vgRptrInfoCurrentFramingType"), ("DOT12-RPTR-MIB", "vgRptrInfoDesiredFramingType"), ("DOT12-RPTR-MIB", "vgRptrInfoFramingCapability"), ("DOT12-RPTR-MIB", "vgRptrInfoTrainingVersion"), ("DOT12-RPTR-MIB", "vgRptrInfoOperStatus"), ("DOT12-RPTR-MIB", "vgRptrInfoReset"), ("DOT12-RPTR-MIB", "vgRptrInfoLastChange"), ("DOT12-RPTR-MIB", "vgRptrGroupObjectID"), ("DOT12-RPTR-MIB", "vgRptrGroupOperStatus"), ("DOT12-RPTR-MIB", "vgRptrGroupPortCapacity"), ("DOT12-RPTR-MIB", "vgRptrGroupCablesBundled"), ("DOT12-RPTR-MIB", "vgRptrPortType"), ("DOT12-RPTR-MIB", "vgRptrPortAdminStatus"), ("DOT12-RPTR-MIB", "vgRptrPortOperStatus"), ("DOT12-RPTR-MIB", "vgRptrPortSupportedPromiscMode"), ("DOT12-RPTR-MIB", "vgRptrPortSupportedCascadeMode"), ("DOT12-RPTR-MIB", "vgRptrPortAllowedTrainType"), ("DOT12-RPTR-MIB", "vgRptrPortLastTrainConfig"), ("DOT12-RPTR-MIB", "vgRptrPortTrainingResult"), ("DOT12-RPTR-MIB", "vgRptrPortPriorityEnable"), ("DOT12-RPTR-MIB", "vgRptrPortRptrInfoIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vgRptrConfigGroup = vgRptrConfigGroup.setStatus('current')
vgRptrStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 53, 3, 2, 2)).setObjects(("DOT12-RPTR-MIB", "vgRptrMonTotalReadableFrames"), ("DOT12-RPTR-MIB", "vgRptrMonTotalReadableOctets"), ("DOT12-RPTR-MIB", "vgRptrMonReadableOctetRollovers"), ("DOT12-RPTR-MIB", "vgRptrMonTotalErrors"), ("DOT12-RPTR-MIB", "vgRptrPortReadableFrames"), ("DOT12-RPTR-MIB", "vgRptrPortReadableOctets"), ("DOT12-RPTR-MIB", "vgRptrPortReadOctetRollovers"), ("DOT12-RPTR-MIB", "vgRptrPortUnreadableOctets"), ("DOT12-RPTR-MIB", "vgRptrPortUnreadOctetRollovers"), ("DOT12-RPTR-MIB", "vgRptrPortHighPriorityFrames"), ("DOT12-RPTR-MIB", "vgRptrPortHighPriorityOctets"), ("DOT12-RPTR-MIB", "vgRptrPortHighPriOctetRollovers"), ("DOT12-RPTR-MIB", "vgRptrPortNormPriorityFrames"), ("DOT12-RPTR-MIB", "vgRptrPortNormPriorityOctets"), ("DOT12-RPTR-MIB", "vgRptrPortNormPriOctetRollovers"), ("DOT12-RPTR-MIB", "vgRptrPortBroadcastFrames"), ("DOT12-RPTR-MIB", "vgRptrPortMulticastFrames"), ("DOT12-RPTR-MIB", "vgRptrPortNullAddressedFrames"), ("DOT12-RPTR-MIB", "vgRptrPortIPMFrames"), ("DOT12-RPTR-MIB", "vgRptrPortOversizeFrames"), ("DOT12-RPTR-MIB", "vgRptrPortDataErrorFrames"), ("DOT12-RPTR-MIB", "vgRptrPortPriorityPromotions"), ("DOT12-RPTR-MIB", "vgRptrPortTransitionToTrainings"), ("DOT12-RPTR-MIB", "vgRptrPortLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vgRptrStatsGroup = vgRptrStatsGroup.setStatus('current')
vgRptrStats64Group = ObjectGroup((1, 3, 6, 1, 2, 1, 53, 3, 2, 3)).setObjects(("DOT12-RPTR-MIB", "vgRptrMonHCTotalReadableOctets"), ("DOT12-RPTR-MIB", "vgRptrPortHCReadableOctets"), ("DOT12-RPTR-MIB", "vgRptrPortHCUnreadableOctets"), ("DOT12-RPTR-MIB", "vgRptrPortHCHighPriorityOctets"), ("DOT12-RPTR-MIB", "vgRptrPortHCNormPriorityOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vgRptrStats64Group = vgRptrStats64Group.setStatus('current')
vgRptrAddrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 53, 3, 2, 4)).setObjects(("DOT12-RPTR-MIB", "vgRptrAddrLastTrainedAddress"), ("DOT12-RPTR-MIB", "vgRptrAddrTrainedAddrChanges"), ("DOT12-RPTR-MIB", "vgRptrRptrDetectedDupAddress"), ("DOT12-RPTR-MIB", "vgRptrMgrDetectedDupAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vgRptrAddrGroup = vgRptrAddrGroup.setStatus('current')
vgRptrNotificationsGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 53, 3, 2, 5)).setObjects(("DOT12-RPTR-MIB", "vgRptrHealth"), ("DOT12-RPTR-MIB", "vgRptrResetEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vgRptrNotificationsGroup = vgRptrNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("DOT12-RPTR-MIB", vgRptrMgrDetectedDupAddress=vgRptrMgrDetectedDupAddress, vgRptrInfoMACAddress=vgRptrInfoMACAddress, vgRptrPortRptrInfoIndex=vgRptrPortRptrInfoIndex, vgRptrPortUnreadOctetRollovers=vgRptrPortUnreadOctetRollovers, vgRptrStats64Group=vgRptrStats64Group, vgRptrMonitorTable=vgRptrMonitorTable, vgRptrPortReadOctetRollovers=vgRptrPortReadOctetRollovers, vgRptrPortNormPriorityOctets=vgRptrPortNormPriorityOctets, vgRptrInfoTrainingVersion=vgRptrInfoTrainingVersion, vgRptrRptrDetectedDupAddress=vgRptrRptrDetectedDupAddress, vgRptrMonHCTotalReadableOctets=vgRptrMonHCTotalReadableOctets, vgRptrInfoLastChange=vgRptrInfoLastChange, vgRptrPortLastTrainConfig=vgRptrPortLastTrainConfig, vgRptrAddrTrackGroup=vgRptrAddrTrackGroup, vgRptrBasicPort=vgRptrBasicPort, vgRptrPortDataErrorFrames=vgRptrPortDataErrorFrames, vgRptrBasic=vgRptrBasic, PYSNMP_MODULE_ID=vgRptrMIB, vgRptrPortUnreadableOctets=vgRptrPortUnreadableOctets, vgRptrPortHighPriorityFrames=vgRptrPortHighPriorityFrames, vgRptrInfoOperStatus=vgRptrInfoOperStatus, vgRptrPortHCReadableOctets=vgRptrPortHCReadableOctets, vgRptrMonPort=vgRptrMonPort, vgRptrInfoIndex=vgRptrInfoIndex, vgRptrPortAllowedTrainType=vgRptrPortAllowedTrainType, vgRptrPortSupportedPromiscMode=vgRptrPortSupportedPromiscMode, vgRptrMonReadableOctetRollovers=vgRptrMonReadableOctetRollovers, vgRptrBasicGroupTable=vgRptrBasicGroupTable, vgRptrPortHighPriOctetRollovers=vgRptrPortHighPriOctetRollovers, vgRptrInfoTable=vgRptrInfoTable, vgRptrPortNormPriOctetRollovers=vgRptrPortNormPriOctetRollovers, vgRptrResetEvent=vgRptrResetEvent, vgRptrAddrTrackEntry=vgRptrAddrTrackEntry, vgRptrCompliances=vgRptrCompliances, vgRptrMonTotalReadableFrames=vgRptrMonTotalReadableFrames, vgRptrInfoEntry=vgRptrInfoEntry, vgRptrMonTotalErrors=vgRptrMonTotalErrors, vgRptrConfigGroup=vgRptrConfigGroup, vgRptrMonitor=vgRptrMonitor, vgRptrPortMulticastFrames=vgRptrPortMulticastFrames, vgRptrHealth=vgRptrHealth, vgRptrObjects=vgRptrObjects, vgRptrPortNullAddressedFrames=vgRptrPortNullAddressedFrames, vgRptrInfoDesiredFramingType=vgRptrInfoDesiredFramingType, vgRptrPortIPMFrames=vgRptrPortIPMFrames, vgRptrPortType=vgRptrPortType, vgRptrGroupCablesBundled=vgRptrGroupCablesBundled, vgRptrInfoReset=vgRptrInfoReset, vgRptrGroupOperStatus=vgRptrGroupOperStatus, vgRptrPortOversizeFrames=vgRptrPortOversizeFrames, vgRptrGroupPortCapacity=vgRptrGroupPortCapacity, vgRptrMonPortTable=vgRptrMonPortTable, vgRptrBasicGroupEntry=vgRptrBasicGroupEntry, vgRptrPortHighPriorityOctets=vgRptrPortHighPriorityOctets, vgRptrMonRepeater=vgRptrMonRepeater, vgRptrAddrTrackRptr=vgRptrAddrTrackRptr, vgRptrInfoCurrentFramingType=vgRptrInfoCurrentFramingType, vgRptrAddrTrack=vgRptrAddrTrack, vgRptrBasicGroup=vgRptrBasicGroup, vgRptrMonPortEntry=vgRptrMonPortEntry, vgRptrPortIndex=vgRptrPortIndex, vgRptrPortPriorityPromotions=vgRptrPortPriorityPromotions, vgRptrMIB=vgRptrMIB, vgRptrGroupObjectID=vgRptrGroupObjectID, vgRptrAddrTrackTable=vgRptrAddrTrackTable, vgRptrStatsGroup=vgRptrStatsGroup, vgRptrAddrTrackPort=vgRptrAddrTrackPort, vgRptrPortTrainingResult=vgRptrPortTrainingResult, vgRptrTrapPrefix=vgRptrTrapPrefix, vgRptrBasicPortTable=vgRptrBasicPortTable, vgRptrMonTotalReadableOctets=vgRptrMonTotalReadableOctets, vgRptrPortNormPriorityFrames=vgRptrPortNormPriorityFrames, vgRptrGroups=vgRptrGroups, vgRptrPortTransitionToTrainings=vgRptrPortTransitionToTrainings, vgRptrMonGroup=vgRptrMonGroup, vgRptrBasicPortEntry=vgRptrBasicPortEntry, vgRptrAddrTrainedAddrChanges=vgRptrAddrTrainedAddrChanges, vgRptrPortAdminStatus=vgRptrPortAdminStatus, vgRptrPortHCHighPriorityOctets=vgRptrPortHCHighPriorityOctets, vgRptrPortLastChange=vgRptrPortLastChange, vgRptrPortPriorityEnable=vgRptrPortPriorityEnable, vgRptrGroupIndex=vgRptrGroupIndex, vgRptrPortSupportedCascadeMode=vgRptrPortSupportedCascadeMode, vgRptrBasicRptr=vgRptrBasicRptr, vgRptrPortOperStatus=vgRptrPortOperStatus, vgRptrMonitorEntry=vgRptrMonitorEntry, vgRptrPortReadableOctets=vgRptrPortReadableOctets, vgRptrConformance=vgRptrConformance, vgRptrPortHCNormPriorityOctets=vgRptrPortHCNormPriorityOctets, vgRptrInfoFramingCapability=vgRptrInfoFramingCapability, vgRptrTraps=vgRptrTraps, vgRptrNotificationsGroup=vgRptrNotificationsGroup, vgRptrPortReadableFrames=vgRptrPortReadableFrames, vgRptrCompliance=vgRptrCompliance, vgRptrPortHCUnreadableOctets=vgRptrPortHCUnreadableOctets, vgRptrAddrLastTrainedAddress=vgRptrAddrLastTrainedAddress, vgRptrPortBroadcastFrames=vgRptrPortBroadcastFrames, vgRptrAddrGroup=vgRptrAddrGroup)
