#
# PySNMP MIB module FASTPATH-RADIUS-AUTH-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FASTPATH-RADIUS-AUTH-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:58:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
fastPath, = mibBuilder.importSymbols("BROADCOM-REF-MIB", "fastPath")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, TimeTicks, Integer32, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, NotificationType, Unsigned32, Gauge32, Bits, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Integer32", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "NotificationType", "Unsigned32", "Gauge32", "Bits", "IpAddress", "MibIdentifier")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
fastPathRadius = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8))
fastPathRadius.setRevisions(('2007-05-23 00:00', '2003-11-21 00:00', '2003-05-07 00:00',))
if mibBuilder.loadTexts: fastPathRadius.setLastUpdated('200705230000Z')
if mibBuilder.loadTexts: fastPathRadius.setOrganization('Broadcom Corporation')
agentRadiusConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1))
agentRadiusRetransmit = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusRetransmit.setStatus('current')
agentRadiusTimeout = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusTimeout.setStatus('current')
agentRadiusDeadTime = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusDeadTime.setStatus('current')
agentRadiusServerKey = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerKey.setStatus('obsolete')
agentRadiusSourceIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusSourceIPAddr.setStatus('current')
agentRadiusServerIndexNextValid = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRadiusServerIndexNextValid.setStatus('current')
agentRadiusServerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7), )
if mibBuilder.loadTexts: agentRadiusServerConfigTable.setStatus('current')
agentRadiusServerConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1), ).setIndexNames((0, "FASTPATH-RADIUS-AUTH-CLIENT-MIB", "agentRadiusServerIndex"))
if mibBuilder.loadTexts: agentRadiusServerConfigEntry.setStatus('current')
agentRadiusServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: agentRadiusServerIndex.setStatus('current')
agentRadiusServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 2), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRadiusServerAddress.setStatus('obsolete')
agentRadiusServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1812)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerPort.setStatus('current')
agentRadiusServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerTimeout.setStatus('current')
agentRadiusServerRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerRetransmit.setStatus('current')
agentRadiusServerDeadtime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerDeadtime.setStatus('current')
agentRadiusServerSourceIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerSourceIPAddr.setStatus('current')
agentRadiusServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerSecret.setStatus('current')
agentRadiusServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerPriority.setStatus('current')
agentRadiusServerUsageType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("all", 1), ("login", 2), ("dot1x", 3))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerUsageType.setStatus('current')
agentRadiusServerAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRadiusServerAddressRowStatus.setStatus('current')
agentRadiusServerPrimaryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerPrimaryMode.setStatus('current')
agentRadiusServerCurrentMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRadiusServerCurrentMode.setStatus('current')
agentRadiusServerMsgAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusServerMsgAuth.setStatus('current')
agentRadiusServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRadiusServerName.setStatus('current')
agentRadiusServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 16), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRadiusServerInetAddress.setStatus('current')
agentRadiusServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 7, 1, 17), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRadiusServerAddressType.setStatus('current')
agentRadiusNasIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusNasIpAddress.setStatus('current')
agentAuthorizationNetworkRadiusMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthorizationNetworkRadiusMode.setStatus('current')
agentRadiusAccountingIndexNextValid = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRadiusAccountingIndexNextValid.setStatus('current')
agentRadiusAccountingConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 11), )
if mibBuilder.loadTexts: agentRadiusAccountingConfigTable.setStatus('current')
agentRadiusAccountingConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 11, 1), ).setIndexNames((0, "FASTPATH-RADIUS-AUTH-CLIENT-MIB", "agentRadiusAccountingServerIndex"))
if mibBuilder.loadTexts: agentRadiusAccountingConfigEntry.setStatus('current')
agentRadiusAccountingServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: agentRadiusAccountingServerIndex.setStatus('current')
agentRadiusAccountingServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 11, 1, 2), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRadiusAccountingServerAddress.setStatus('current')
agentRadiusAccountingServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 11, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRadiusAccountingServerAddressType.setStatus('current')
agentRadiusAccountingPort = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1813)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusAccountingPort.setStatus('current')
agentRadiusAccountingSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 11, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusAccountingSecret.setStatus('current')
agentRadiusAccountingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 11, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRadiusAccountingStatus.setStatus('current')
agentRadiusAccountingServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 11, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentRadiusAccountingServerName.setStatus('current')
agentRadiusAccountingMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusAccountingMode.setStatus('current')
agentRadiusStatsClear = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRadiusStatsClear.setStatus('current')
agentRadiusAuthenticationServers = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRadiusAuthenticationServers.setStatus('current')
agentRadiusAccountingServers = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRadiusAccountingServers.setStatus('current')
agentRadiusNamedAuthenticationServerGroups = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRadiusNamedAuthenticationServerGroups.setStatus('current')
agentRadiusNamedAccountingServerGroups = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 8, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRadiusNamedAccountingServerGroups.setStatus('current')
mibBuilder.exportSymbols("FASTPATH-RADIUS-AUTH-CLIENT-MIB", agentRadiusServerUsageType=agentRadiusServerUsageType, agentRadiusServerInetAddress=agentRadiusServerInetAddress, agentRadiusServerAddressRowStatus=agentRadiusServerAddressRowStatus, fastPathRadius=fastPathRadius, agentRadiusServerPrimaryMode=agentRadiusServerPrimaryMode, agentRadiusServerPort=agentRadiusServerPort, agentRadiusServerSecret=agentRadiusServerSecret, agentRadiusAccountingServerAddress=agentRadiusAccountingServerAddress, agentRadiusNamedAccountingServerGroups=agentRadiusNamedAccountingServerGroups, agentRadiusServerIndexNextValid=agentRadiusServerIndexNextValid, agentRadiusRetransmit=agentRadiusRetransmit, agentRadiusAccountingPort=agentRadiusAccountingPort, agentRadiusConfigGroup=agentRadiusConfigGroup, agentRadiusServerPriority=agentRadiusServerPriority, agentRadiusServerAddress=agentRadiusServerAddress, agentRadiusAccountingServers=agentRadiusAccountingServers, agentRadiusServerTimeout=agentRadiusServerTimeout, agentRadiusServerKey=agentRadiusServerKey, agentRadiusServerDeadtime=agentRadiusServerDeadtime, agentAuthorizationNetworkRadiusMode=agentAuthorizationNetworkRadiusMode, agentRadiusNamedAuthenticationServerGroups=agentRadiusNamedAuthenticationServerGroups, agentRadiusSourceIPAddr=agentRadiusSourceIPAddr, agentRadiusServerIndex=agentRadiusServerIndex, agentRadiusServerCurrentMode=agentRadiusServerCurrentMode, agentRadiusServerConfigTable=agentRadiusServerConfigTable, agentRadiusAuthenticationServers=agentRadiusAuthenticationServers, agentRadiusServerRetransmit=agentRadiusServerRetransmit, agentRadiusNasIpAddress=agentRadiusNasIpAddress, agentRadiusAccountingIndexNextValid=agentRadiusAccountingIndexNextValid, agentRadiusAccountingServerName=agentRadiusAccountingServerName, agentRadiusStatsClear=agentRadiusStatsClear, agentRadiusAccountingSecret=agentRadiusAccountingSecret, agentRadiusAccountingStatus=agentRadiusAccountingStatus, agentRadiusServerAddressType=agentRadiusServerAddressType, agentRadiusTimeout=agentRadiusTimeout, agentRadiusAccountingServerIndex=agentRadiusAccountingServerIndex, agentRadiusServerSourceIPAddr=agentRadiusServerSourceIPAddr, agentRadiusServerMsgAuth=agentRadiusServerMsgAuth, agentRadiusServerConfigEntry=agentRadiusServerConfigEntry, PYSNMP_MODULE_ID=fastPathRadius, agentRadiusAccountingServerAddressType=agentRadiusAccountingServerAddressType, agentRadiusAccountingConfigTable=agentRadiusAccountingConfigTable, agentRadiusAccountingMode=agentRadiusAccountingMode, agentRadiusDeadTime=agentRadiusDeadTime, agentRadiusAccountingConfigEntry=agentRadiusAccountingConfigEntry, agentRadiusServerName=agentRadiusServerName)
