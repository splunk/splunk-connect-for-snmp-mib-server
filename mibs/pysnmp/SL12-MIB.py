#
# PySNMP MIB module SL12-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SL12-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:57:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Integer32, iso, mgmt, Counter64, ModuleIdentity, Bits, NotificationType, IpAddress, TimeTicks, Gauge32, private, MibIdentifier, Unsigned32, enterprises, Counter32, NotificationType, internet, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "iso", "mgmt", "Counter64", "ModuleIdentity", "Bits", "NotificationType", "IpAddress", "TimeTicks", "Gauge32", "private", "MibIdentifier", "Unsigned32", "enterprises", "Counter32", "NotificationType", "internet", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
asentria = MibIdentifier((1, 3, 6, 1, 4, 1, 3052))
sl12 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41))
device = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 1))
contacts = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 2))
relays = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 3))
tempsensor = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 4))
humiditysensor = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 5))
passthrough = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 6))
ftp = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 7))
analog = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 8))
eventSensorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 10))
eventSensorConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 11))
techsupport = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 99))
mibend = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 100))
contact1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 2, 1))
contact2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 2, 2))
contact3 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 2, 3))
contact4 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 2, 4))
contact5 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 2, 5))
contact6 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 2, 6))
relay1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 3, 1))
relay2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 3, 2))
analog1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1))
analog2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2))
serialNumber = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialNumber.setStatus('mandatory')
firmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersion.setStatus('mandatory')
siteID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteID.setStatus('mandatory')
snmpManager = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpManager.setStatus('deprecated')
forceTraps = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: forceTraps.setStatus('mandatory')
thisTrapText = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thisTrapText.setStatus('mandatory')
alarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmStatus.setStatus('mandatory')
snmpManager1 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpManager1.setStatus('mandatory')
snmpManager2 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpManager2.setStatus('mandatory')
snmpManager3 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpManager3.setStatus('mandatory')
snmpManager4 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpManager4.setStatus('mandatory')
statusRepeatHours = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statusRepeatHours.setStatus('mandatory')
serialTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialTimeout.setStatus('mandatory')
powerupTrapsend = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: powerupTrapsend.setStatus('mandatory')
netlossTrapsend = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netlossTrapsend.setStatus('mandatory')
buildID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buildID.setStatus('mandatory')
contact1Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact1Name.setStatus('mandatory')
contact1State = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contact1State.setStatus('mandatory')
contact1AlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact1AlarmEnable.setStatus('mandatory')
contact1ActiveDirection = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact1ActiveDirection.setStatus('mandatory')
contact1Threshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact1Threshold.setStatus('mandatory')
contact1ReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact1ReturnNormalTrap.setStatus('mandatory')
contact1TrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact1TrapRepeat.setStatus('mandatory')
contact1Severity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact1Severity.setStatus('mandatory')
contact2Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact2Name.setStatus('mandatory')
contact2State = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contact2State.setStatus('mandatory')
contact2AlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact2AlarmEnable.setStatus('mandatory')
contact2ActiveDirection = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact2ActiveDirection.setStatus('mandatory')
contact2Threshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact2Threshold.setStatus('mandatory')
contact2ReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact2ReturnNormalTrap.setStatus('mandatory')
contact2TrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact2TrapRepeat.setStatus('mandatory')
contact2Severity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact2Severity.setStatus('mandatory')
contact3Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact3Name.setStatus('mandatory')
contact3State = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contact3State.setStatus('mandatory')
contact3AlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact3AlarmEnable.setStatus('mandatory')
contact3ActiveDirection = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact3ActiveDirection.setStatus('mandatory')
contact3Threshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact3Threshold.setStatus('mandatory')
contact3ReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 3, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact3ReturnNormalTrap.setStatus('mandatory')
contact3TrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 3, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact3TrapRepeat.setStatus('mandatory')
contact3Severity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 3, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact3Severity.setStatus('mandatory')
contact4Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact4Name.setStatus('mandatory')
contact4State = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contact4State.setStatus('mandatory')
contact4AlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact4AlarmEnable.setStatus('mandatory')
contact4ActiveDirection = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact4ActiveDirection.setStatus('mandatory')
contact4Threshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact4Threshold.setStatus('mandatory')
contact4ReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact4ReturnNormalTrap.setStatus('mandatory')
contact4TrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 4, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact4TrapRepeat.setStatus('mandatory')
contact4Severity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 4, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact4Severity.setStatus('mandatory')
contact5Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact5Name.setStatus('mandatory')
contact5State = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contact5State.setStatus('mandatory')
contact5AlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact5AlarmEnable.setStatus('mandatory')
contact5ActiveDirection = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact5ActiveDirection.setStatus('mandatory')
contact5Threshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact5Threshold.setStatus('mandatory')
contact5ReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 5, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact5ReturnNormalTrap.setStatus('mandatory')
contact5TrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 5, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact5TrapRepeat.setStatus('mandatory')
contact5Severity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 5, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact5Severity.setStatus('mandatory')
contact6Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact6Name.setStatus('mandatory')
contact6State = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contact6State.setStatus('mandatory')
contact6AlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact6AlarmEnable.setStatus('mandatory')
contact6ActiveDirection = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact6ActiveDirection.setStatus('mandatory')
contact6Threshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 6, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact6Threshold.setStatus('mandatory')
contact6ReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 6, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact6ReturnNormalTrap.setStatus('mandatory')
contact6TrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact6TrapRepeat.setStatus('mandatory')
contact6Severity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 2, 6, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contact6Severity.setStatus('mandatory')
relay1Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 3, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay1Name.setStatus('mandatory')
relay1CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay1CurrentState.setStatus('mandatory')
relay1PowerupState = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay1PowerupState.setStatus('mandatory')
relay2Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 3, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay2Name.setStatus('mandatory')
relay2CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 3, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay2CurrentState.setStatus('mandatory')
relay2PowerupState = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 3, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay2PowerupState.setStatus('mandatory')
tempValue = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempValue.setStatus('mandatory')
tempAlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempAlarmEnable.setStatus('mandatory')
tempHighLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempHighLevel.setStatus('mandatory')
tempVeryHighLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempVeryHighLevel.setStatus('mandatory')
tempLowLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempLowLevel.setStatus('mandatory')
tempVeryLowLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempVeryLowLevel.setStatus('mandatory')
tempAlarmThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempAlarmThreshold.setStatus('mandatory')
tempReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempReturnNormalTrap.setStatus('mandatory')
tempTrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempTrapRepeat.setStatus('mandatory')
tempMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempMode.setStatus('mandatory')
tempHighSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempHighSeverity.setStatus('mandatory')
tempVeryHighSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempVeryHighSeverity.setStatus('mandatory')
tempLowSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempLowSeverity.setStatus('mandatory')
tempVeryLowSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempVeryLowSeverity.setStatus('mandatory')
tempName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 4, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempName.setStatus('mandatory')
humidityValue = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: humidityValue.setStatus('mandatory')
humidityAlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityAlarmEnable.setStatus('mandatory')
humidityHighLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityHighLevel.setStatus('mandatory')
humidityVeryHighLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityVeryHighLevel.setStatus('mandatory')
humidityLowLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityLowLevel.setStatus('mandatory')
humidityVeryLowLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityVeryLowLevel.setStatus('mandatory')
humidityAlarmThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityAlarmThreshold.setStatus('mandatory')
humidityReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityReturnNormalTrap.setStatus('mandatory')
humidityTrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityTrapRepeat.setStatus('mandatory')
humidityHighSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityHighSeverity.setStatus('mandatory')
humidityVeryHighSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityVeryHighSeverity.setStatus('mandatory')
humidityLowSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityLowSeverity.setStatus('mandatory')
humidityVeryLowSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityVeryLowSeverity.setStatus('mandatory')
humidityName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 5, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityName.setStatus('mandatory')
ptNeedPassword = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptNeedPassword.setStatus('mandatory')
ptSayLoginText = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptSayLoginText.setStatus('mandatory')
ptLoginText = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptLoginText.setStatus('mandatory')
ptSaySiteID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptSaySiteID.setStatus('mandatory')
ptUsername = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptUsername.setStatus('mandatory')
ptPassword = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptPassword.setStatus('mandatory')
ptTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptTimeout.setStatus('mandatory')
ptEscChar = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptEscChar.setStatus('mandatory')
ptLfstripToPort = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptLfstripToPort.setStatus('mandatory')
ptLfstripFromPort = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptLfstripFromPort.setStatus('mandatory')
ptSerialBaudrate = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptSerialBaudrate.setStatus('mandatory')
ptSerialWordlength = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptSerialWordlength.setStatus('mandatory')
ptSerialParity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptSerialParity.setStatus('mandatory')
ptTCPPortnumber = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 6, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptTCPPortnumber.setStatus('mandatory')
ftpUsername = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpUsername.setStatus('mandatory')
ftpPassword = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 7, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPassword.setStatus('mandatory')
analog1Value = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analog1Value.setStatus('mandatory')
analog1AlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1AlarmEnable.setStatus('mandatory')
analog1HighLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1HighLevel.setStatus('mandatory')
analog1VeryHighLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1VeryHighLevel.setStatus('mandatory')
analog1LowLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1LowLevel.setStatus('mandatory')
analog1VeryLowLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1VeryLowLevel.setStatus('mandatory')
analog1AlarmThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1AlarmThreshold.setStatus('mandatory')
analog1ReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1ReturnNormalTrap.setStatus('mandatory')
analog1TrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1TrapRepeat.setStatus('mandatory')
analog1HighSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1HighSeverity.setStatus('mandatory')
analog1VeryHighSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1VeryHighSeverity.setStatus('mandatory')
analog1LowSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1LowSeverity.setStatus('mandatory')
analog1VeryLowSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1VeryLowSeverity.setStatus('mandatory')
analog1Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog1Name.setStatus('mandatory')
analog2Value = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analog2Value.setStatus('mandatory')
analog2AlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2AlarmEnable.setStatus('mandatory')
analog2HighLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2HighLevel.setStatus('mandatory')
analog2VeryHighLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2VeryHighLevel.setStatus('mandatory')
analog2LowLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2LowLevel.setStatus('mandatory')
analog2VeryLowLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2VeryLowLevel.setStatus('mandatory')
analog2AlarmThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2AlarmThreshold.setStatus('mandatory')
analog2ReturnNormalTrap = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2ReturnNormalTrap.setStatus('mandatory')
analog2TrapRepeat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2TrapRepeat.setStatus('mandatory')
analog2HighSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2HighSeverity.setStatus('mandatory')
analog2VeryHighSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2VeryHighSeverity.setStatus('mandatory')
analog2LowSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2LowSeverity.setStatus('mandatory')
analog2VeryLowSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2VeryLowSeverity.setStatus('mandatory')
analog2Name = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 8, 2, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analog2Name.setStatus('mandatory')
esPointTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 41, 10, 1), )
if mibBuilder.loadTexts: esPointTable.setStatus('mandatory')
esPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 41, 10, 1, 1), ).setIndexNames((0, "SL12-MIB", "esIndexES"), (0, "SL12-MIB", "esIndexPC"), (0, "SL12-MIB", "esIndexPoint"))
if mibBuilder.loadTexts: esPointEntry.setStatus('mandatory')
esIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndexES.setStatus('mandatory')
esIndexPC = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 10, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndexPC.setStatus('mandatory')
esIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 10, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndexPoint.setStatus('mandatory')
esPointName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 10, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: esPointName.setStatus('mandatory')
esPointInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 10, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: esPointInEventState.setStatus('mandatory')
esPointValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: esPointValueInt.setStatus('mandatory')
esPointValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 10, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointValueStr.setStatus('mandatory')
esNumberEventSensors = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberEventSensors.setStatus('mandatory')
esTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2), )
if mibBuilder.loadTexts: esTable.setStatus('mandatory')
esEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1), ).setIndexNames((0, "SL12-MIB", "esIndex"))
if mibBuilder.loadTexts: esEntry.setStatus('mandatory')
esIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndex.setStatus('mandatory')
esID = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esID.setStatus('mandatory')
esNumberTempSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberTempSensors.setStatus('mandatory')
esTempReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esTempReportingMode.setStatus('mandatory')
esNumberCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberCCs.setStatus('mandatory')
esCCReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCReportingMode.setStatus('mandatory')
esNumberHumidSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberHumidSensors.setStatus('mandatory')
esHumidReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esHumidReportingMode.setStatus('mandatory')
esNumberAnalog = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberAnalog.setStatus('mandatory')
esAnalogReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogReportingMode.setStatus('mandatory')
esNumberRelayOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberRelayOutputs.setStatus('mandatory')
esRelayReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 41, 11, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esRelayReportingMode.setStatus('mandatory')
techsupportIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 99, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: techsupportIPAddress.setStatus('mandatory')
techsupportNetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 99, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: techsupportNetMask.setStatus('mandatory')
techsupportRouter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 99, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: techsupportRouter.setStatus('mandatory')
techsupportRestart = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 99, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: techsupportRestart.setStatus('mandatory')
techsupportVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 99, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: techsupportVersionNumber.setStatus('mandatory')
mibendObject = MibScalar((1, 3, 6, 1, 4, 1, 3052, 41, 100, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibendObject.setStatus('mandatory')
contact1ActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20001)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact1Name"), ("SL12-MIB", "contact1State"))
contact2ActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20002)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact2Name"), ("SL12-MIB", "contact2State"))
contact3ActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20003)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact3Name"), ("SL12-MIB", "contact3State"))
contact4ActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20004)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact4Name"), ("SL12-MIB", "contact4State"))
contact5ActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20005)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact5Name"), ("SL12-MIB", "contact5State"))
contact6ActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20006)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact6Name"), ("SL12-MIB", "contact6State"))
tempHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20010)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "tempValue"))
tempVeryHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20011)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "tempValue"))
tempLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20012)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "tempValue"))
tempVeryLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20013)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "tempValue"))
humidityHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20020)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "humidityValue"))
humidityVeryHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20021)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "humidityValue"))
humidityLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20022)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "humidityValue"))
humidityVeryLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20023)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "humidityValue"))
analog1HighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20030)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog1Name"), ("SL12-MIB", "analog1Value"))
analog1VeryHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20031)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog1Name"), ("SL12-MIB", "analog1Value"))
analog1LowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20032)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog1Name"), ("SL12-MIB", "analog1Value"))
analog1VeryLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20033)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog1Name"), ("SL12-MIB", "analog1Value"))
analog2HighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20040)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog2Name"), ("SL12-MIB", "analog2Value"))
analog2VeryHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20041)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog2Name"), ("SL12-MIB", "analog2Value"))
analog2LowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20042)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog2Name"), ("SL12-MIB", "analog2Value"))
analog2VeryLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20043)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog2Name"), ("SL12-MIB", "analog2Value"))
contactESActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20101)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
tempESHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20110)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
tempESVeryHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20111)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
tempESLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20112)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
tempESVeryLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20113)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
humidityESHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20120)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
humidityESVeryHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20121)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
humidityESLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20122)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
humidityESVeryLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20123)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
voltageESHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20130)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
voltageESVeryHighTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20131)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
voltageESLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20132)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
voltageESVeryLowTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,20133)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
contact1NormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21001)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact1Name"), ("SL12-MIB", "contact1State"))
contact2NormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21002)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact2Name"), ("SL12-MIB", "contact2State"))
contact3NormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21003)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact3Name"), ("SL12-MIB", "contact3State"))
contact4NormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21004)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact4Name"), ("SL12-MIB", "contact4State"))
contact5NormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21005)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact5Name"), ("SL12-MIB", "contact5State"))
contact6NormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21006)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "contact6Name"), ("SL12-MIB", "contact6State"))
tempNormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21010)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "tempValue"))
humidityNormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21020)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "humidityValue"))
analog1NormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21030)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog1Name"), ("SL12-MIB", "analog1Value"))
analog2NormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21040)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "analog2Name"), ("SL12-MIB", "analog2Value"))
contactESNormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21101)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
tempESNormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21110)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
humidityESNormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21120)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
voltageESNormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,21130)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"), ("SL12-MIB", "esPointName"), ("SL12-MIB", "esPointValueInt"), ("SL12-MIB", "esIndexES"), ("SL12-MIB", "esIndexPoint"))
testTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 41) + (0,22000)).setObjects(("SL12-MIB", "thisTrapText"), ("SL12-MIB", "siteID"))
mibBuilder.exportSymbols("SL12-MIB", tempESLowTrap=tempESLowTrap, contact2NormalTrap=contact2NormalTrap, esPointValueInt=esPointValueInt, analog2VeryLowSeverity=analog2VeryLowSeverity, relay2PowerupState=relay2PowerupState, esNumberCCs=esNumberCCs, ftp=ftp, analog=analog, ptSaySiteID=ptSaySiteID, contact2TrapRepeat=contact2TrapRepeat, voltageESLowTrap=voltageESLowTrap, contact3TrapRepeat=contact3TrapRepeat, contact1Threshold=contact1Threshold, esIndex=esIndex, esPointEntry=esPointEntry, esTempReportingMode=esTempReportingMode, contact3ReturnNormalTrap=contact3ReturnNormalTrap, relay2CurrentState=relay2CurrentState, tempTrapRepeat=tempTrapRepeat, contact5Threshold=contact5Threshold, contact6AlarmEnable=contact6AlarmEnable, snmpManager4=snmpManager4, contact4AlarmEnable=contact4AlarmEnable, analog2HighSeverity=analog2HighSeverity, tempVeryLowSeverity=tempVeryLowSeverity, contact6Name=contact6Name, relay1=relay1, ptLfstripFromPort=ptLfstripFromPort, tempVeryHighSeverity=tempVeryHighSeverity, contact5NormalTrap=contact5NormalTrap, esCCReportingMode=esCCReportingMode, esRelayReportingMode=esRelayReportingMode, asentria=asentria, serialTimeout=serialTimeout, contact4ActiveDirection=contact4ActiveDirection, ftpPassword=ftpPassword, esNumberHumidSensors=esNumberHumidSensors, humidityESVeryHighTrap=humidityESVeryHighTrap, contact3ActiveDirection=contact3ActiveDirection, tempNormalTrap=tempNormalTrap, humidityESNormalTrap=humidityESNormalTrap, relay2Name=relay2Name, analog1TrapRepeat=analog1TrapRepeat, ptSerialParity=ptSerialParity, analog2ReturnNormalTrap=analog2ReturnNormalTrap, forceTraps=forceTraps, analog2TrapRepeat=analog2TrapRepeat, sl12=sl12, snmpManager2=snmpManager2, analog1AlarmEnable=analog1AlarmEnable, humidityHighLevel=humidityHighLevel, ptNeedPassword=ptNeedPassword, siteID=siteID, relays=relays, analog1VeryLowLevel=analog1VeryLowLevel, firmwareVersion=firmwareVersion, analog2=analog2, contact4Severity=contact4Severity, ptLfstripToPort=ptLfstripToPort, testTrap=testTrap, relay1Name=relay1Name, contact4=contact4, contact6Threshold=contact6Threshold, humidityName=humidityName, esIndexPC=esIndexPC, esAnalogReportingMode=esAnalogReportingMode, tempName=tempName, contact5ActiveDirection=contact5ActiveDirection, contact3State=contact3State, contact2Severity=contact2Severity, contact5State=contact5State, tempESNormalTrap=tempESNormalTrap, analog2LowLevel=analog2LowLevel, eventSensorConfig=eventSensorConfig, buildID=buildID, passthrough=passthrough, contact3Severity=contact3Severity, contact6ActiveTrap=contact6ActiveTrap, contact3Threshold=contact3Threshold, contact4Threshold=contact4Threshold, contact2AlarmEnable=contact2AlarmEnable, esNumberEventSensors=esNumberEventSensors, snmpManager=snmpManager, mibendObject=mibendObject, contact6ReturnNormalTrap=contact6ReturnNormalTrap, contact5AlarmEnable=contact5AlarmEnable, contact5TrapRepeat=contact5TrapRepeat, thisTrapText=thisTrapText, contact1State=contact1State, contact6=contact6, analog2AlarmEnable=analog2AlarmEnable, tempLowSeverity=tempLowSeverity, analog2Value=analog2Value, analog2HighLevel=analog2HighLevel, analog2Name=analog2Name, humidityVeryHighSeverity=humidityVeryHighSeverity, contact6ActiveDirection=contact6ActiveDirection, contactESNormalTrap=contactESNormalTrap, ptTCPPortnumber=ptTCPPortnumber, esIndexPoint=esIndexPoint, humidityReturnNormalTrap=humidityReturnNormalTrap, esEntry=esEntry, voltageESVeryLowTrap=voltageESVeryLowTrap, analog1LowTrap=analog1LowTrap, contact5ActiveTrap=contact5ActiveTrap, humidityAlarmEnable=humidityAlarmEnable, humidityESLowTrap=humidityESLowTrap, tempsensor=tempsensor, humiditysensor=humiditysensor, mibend=mibend, contact4TrapRepeat=contact4TrapRepeat, analog2LowSeverity=analog2LowSeverity, tempLowTrap=tempLowTrap, analog1Value=analog1Value, techsupportNetMask=techsupportNetMask, tempVeryHighLevel=tempVeryHighLevel, contact6TrapRepeat=contact6TrapRepeat, analog1HighTrap=analog1HighTrap, esNumberRelayOutputs=esNumberRelayOutputs, analog2HighTrap=analog2HighTrap, analog2VeryHighLevel=analog2VeryHighLevel, contact1Name=contact1Name, contact2ActiveTrap=contact2ActiveTrap, contact5=contact5, contact3ActiveTrap=contact3ActiveTrap, humidityVeryHighLevel=humidityVeryHighLevel, analog2VeryLowLevel=analog2VeryLowLevel, voltageESVeryHighTrap=voltageESVeryHighTrap, relay1PowerupState=relay1PowerupState, relay1CurrentState=relay1CurrentState, analog2AlarmThreshold=analog2AlarmThreshold, tempVeryLowTrap=tempVeryLowTrap, humidityESVeryLowTrap=humidityESVeryLowTrap, contact1Severity=contact1Severity, esPointName=esPointName, tempLowLevel=tempLowLevel, ftpUsername=ftpUsername, ptLoginText=ptLoginText, tempESVeryLowTrap=tempESVeryLowTrap, humidityVeryLowTrap=humidityVeryLowTrap, contact3=contact3, contact3NormalTrap=contact3NormalTrap, tempMode=tempMode, analog2NormalTrap=analog2NormalTrap, contact1AlarmEnable=contact1AlarmEnable, analog2VeryHighSeverity=analog2VeryHighSeverity, ptSerialWordlength=ptSerialWordlength, tempHighSeverity=tempHighSeverity, esIndexES=esIndexES, contact3Name=contact3Name, contactESActiveTrap=contactESActiveTrap, analog2VeryHighTrap=analog2VeryHighTrap, tempAlarmThreshold=tempAlarmThreshold, esPointTable=esPointTable, esID=esID, tempVeryLowLevel=tempVeryLowLevel, snmpManager1=snmpManager1, snmpManager3=snmpManager3, powerupTrapsend=powerupTrapsend, humidityLowTrap=humidityLowTrap, analog2LowTrap=analog2LowTrap, analog1HighLevel=analog1HighLevel, ptEscChar=ptEscChar, esHumidReportingMode=esHumidReportingMode, tempESHighTrap=tempESHighTrap, analog1VeryHighSeverity=analog1VeryHighSeverity, contact2=contact2, analog1LowSeverity=analog1LowSeverity, humidityLowLevel=humidityLowLevel, ptPassword=ptPassword, tempESVeryHighTrap=tempESVeryHighTrap, tempHighTrap=tempHighTrap, alarmStatus=alarmStatus, humidityLowSeverity=humidityLowSeverity, contact1ReturnNormalTrap=contact1ReturnNormalTrap, analog1ReturnNormalTrap=analog1ReturnNormalTrap, techsupportIPAddress=techsupportIPAddress, humidityValue=humidityValue, analog1Name=analog1Name, contact6State=contact6State, humidityHighTrap=humidityHighTrap, contact1=contact1, esNumberTempSensors=esNumberTempSensors, contact2ActiveDirection=contact2ActiveDirection, contact5Severity=contact5Severity, ptSayLoginText=ptSayLoginText, esNumberAnalog=esNumberAnalog, ptUsername=ptUsername, voltageESHighTrap=voltageESHighTrap, esPointInEventState=esPointInEventState, contact4State=contact4State, contact4NormalTrap=contact4NormalTrap, contact3AlarmEnable=contact3AlarmEnable, humidityNormalTrap=humidityNormalTrap, netlossTrapsend=netlossTrapsend, tempReturnNormalTrap=tempReturnNormalTrap, esTable=esTable, contact2State=contact2State, relay2=relay2, statusRepeatHours=statusRepeatHours, analog1HighSeverity=analog1HighSeverity, contact1ActiveTrap=contact1ActiveTrap, ptSerialBaudrate=ptSerialBaudrate, analog2VeryLowTrap=analog2VeryLowTrap, esPointValueStr=esPointValueStr, tempValue=tempValue, humidityESHighTrap=humidityESHighTrap, serialNumber=serialNumber, contact6Severity=contact6Severity, eventSensorStatus=eventSensorStatus, contact6NormalTrap=contact6NormalTrap, tempHighLevel=tempHighLevel, analog1VeryLowTrap=analog1VeryLowTrap, analog1NormalTrap=analog1NormalTrap, humidityAlarmThreshold=humidityAlarmThreshold, contact2Name=contact2Name, analog1VeryHighTrap=analog1VeryHighTrap, techsupportVersionNumber=techsupportVersionNumber, techsupport=techsupport, device=device, contacts=contacts, contact1ActiveDirection=contact1ActiveDirection, contact1TrapRepeat=contact1TrapRepeat, techsupportRestart=techsupportRestart, contact4ActiveTrap=contact4ActiveTrap, humidityVeryLowLevel=humidityVeryLowLevel, techsupportRouter=techsupportRouter, contact1NormalTrap=contact1NormalTrap, analog1VeryLowSeverity=analog1VeryLowSeverity, contact5ReturnNormalTrap=contact5ReturnNormalTrap, contact2Threshold=contact2Threshold, tempVeryHighTrap=tempVeryHighTrap, contact2ReturnNormalTrap=contact2ReturnNormalTrap, humidityHighSeverity=humidityHighSeverity, analog1VeryHighLevel=analog1VeryHighLevel, humidityVeryHighTrap=humidityVeryHighTrap, contact5Name=contact5Name, voltageESNormalTrap=voltageESNormalTrap, analog1LowLevel=analog1LowLevel, contact4Name=contact4Name, analog1AlarmThreshold=analog1AlarmThreshold, humidityVeryLowSeverity=humidityVeryLowSeverity, contact4ReturnNormalTrap=contact4ReturnNormalTrap, humidityTrapRepeat=humidityTrapRepeat, analog1=analog1, tempAlarmEnable=tempAlarmEnable, ptTimeout=ptTimeout)
