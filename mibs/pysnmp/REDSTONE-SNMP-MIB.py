#
# PySNMP MIB module REDSTONE-SNMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDSTONE-SNMP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:47:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
rsMgmt, = mibBuilder.importSymbols("REDSTONE-SMI", "rsMgmt")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, MibIdentifier, ObjectIdentity, ModuleIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32, NotificationType, Counter32, Integer32, Bits, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32", "NotificationType", "Counter32", "Integer32", "Bits", "TimeTicks", "Counter64")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
rsSnmpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2773, 2, 16))
rsSnmpMIB.setRevisions(('1999-07-27 00:00', '1998-01-01 00:00',))
if mibBuilder.loadTexts: rsSnmpMIB.setLastUpdated('9907270000Z')
if mibBuilder.loadTexts: rsSnmpMIB.setOrganization('Redstone Communications, Inc.')
class RsSnmpCommunityName(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(1, 31)

class RsSnmpTrapMask(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

rsSnmpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1))
rsSnmpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 16, 2))
rsSnmpGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 1))
rsSnmpCommunity = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 2))
rsSnmpTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3))
rsSnmpAuthFailId = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 4))
rsSnmpMaxPduSize = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(484, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsSnmpMaxPduSize.setStatus('current')
rsSnmpCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 2, 1), )
if mibBuilder.loadTexts: rsSnmpCommunityTable.setStatus('current')
rsSnmpCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 2, 1, 1), ).setIndexNames((1, "REDSTONE-SNMP-MIB", "rsSnmpCommunityName"))
if mibBuilder.loadTexts: rsSnmpCommunityEntry.setStatus('current')
rsSnmpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 2, 1, 1, 1), RsSnmpCommunityName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsSnmpCommunityName.setStatus('current')
rsSnmpCommunityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsSnmpCommunityRowStatus.setStatus('current')
rsSnmpCommunityPrivilege = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2), ("admin", 3))).clone('readOnly')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsSnmpCommunityPrivilege.setStatus('current')
rsSnmpCommunityAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsSnmpCommunityAccessList.setStatus('current')
rsSnmpTrapGlobalFilter = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 1), RsSnmpTrapMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsSnmpTrapGlobalFilter.setStatus('current')
rsSnmpTrapSource = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsSnmpTrapSource.setStatus('current')
rsSnmpTrapHostTable = MibTable((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 3), )
if mibBuilder.loadTexts: rsSnmpTrapHostTable.setStatus('current')
rsSnmpTrapHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 3, 1), ).setIndexNames((0, "REDSTONE-SNMP-MIB", "rsSnmpTrapHostIpAddress"))
if mibBuilder.loadTexts: rsSnmpTrapHostEntry.setStatus('current')
rsSnmpTrapHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsSnmpTrapHostIpAddress.setStatus('current')
rsSnmpTrapHostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsSnmpTrapHostRowStatus.setStatus('current')
rsSnmpTrapHostUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(162)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsSnmpTrapHostUdpPort.setStatus('current')
rsSnmpTrapHostCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 3, 1, 4), RsSnmpCommunityName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsSnmpTrapHostCommunity.setStatus('current')
rsSnmpTrapHostProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("v1", 0), ("v2c", 1))).clone('v1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsSnmpTrapHostProtocolVersion.setStatus('current')
rsSnmpTrapHostFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 3, 1, 6), RsSnmpTrapMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rsSnmpTrapHostFilter.setStatus('current')
rsSnmpTrapHostSends = MibTableColumn((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 3, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsSnmpTrapHostSends.setStatus('current')
rsSnmpAuthFailIdIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 4, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rsSnmpAuthFailIdIpAddress.setStatus('current')
rsSnmpAuthFailIdUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 4, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rsSnmpAuthFailIdUdpPort.setStatus('current')
rsSnmpAuthFailIdCommunity = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 4, 3), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rsSnmpAuthFailIdCommunity.setStatus('current')
rsSnmpAuthFailIdReason = MibScalar((1, 3, 6, 1, 4, 1, 2773, 2, 16, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("other", 0), ("badCommunityName", 1), ("badCommmunityUse", 2), ("hostDenied", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rsSnmpAuthFailIdReason.setStatus('current')
rsSnmpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 16, 2, 1))
rsSnmpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 2, 16, 2, 2))
rsSnmpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2773, 2, 16, 2, 1, 1)).setObjects(("REDSTONE-SNMP-MIB", "rsSnmpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsSnmpCompliance = rsSnmpCompliance.setStatus('current')
rsSnmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2773, 2, 16, 2, 2, 1)).setObjects(("REDSTONE-SNMP-MIB", "rsSnmpMaxPduSize"), ("REDSTONE-SNMP-MIB", "rsSnmpCommunityName"), ("REDSTONE-SNMP-MIB", "rsSnmpCommunityRowStatus"), ("REDSTONE-SNMP-MIB", "rsSnmpCommunityPrivilege"), ("REDSTONE-SNMP-MIB", "rsSnmpCommunityAccessList"), ("REDSTONE-SNMP-MIB", "rsSnmpTrapGlobalFilter"), ("REDSTONE-SNMP-MIB", "rsSnmpTrapSource"), ("REDSTONE-SNMP-MIB", "rsSnmpTrapHostRowStatus"), ("REDSTONE-SNMP-MIB", "rsSnmpTrapHostUdpPort"), ("REDSTONE-SNMP-MIB", "rsSnmpTrapHostCommunity"), ("REDSTONE-SNMP-MIB", "rsSnmpTrapHostProtocolVersion"), ("REDSTONE-SNMP-MIB", "rsSnmpTrapHostFilter"), ("REDSTONE-SNMP-MIB", "rsSnmpTrapHostSends"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsSnmpGroup = rsSnmpGroup.setStatus('current')
mibBuilder.exportSymbols("REDSTONE-SNMP-MIB", rsSnmpTrapHostSends=rsSnmpTrapHostSends, rsSnmpTrapHostTable=rsSnmpTrapHostTable, rsSnmpMIB=rsSnmpMIB, rsSnmpTrapHostRowStatus=rsSnmpTrapHostRowStatus, rsSnmpAuthFailIdCommunity=rsSnmpAuthFailIdCommunity, rsSnmpTrapHostFilter=rsSnmpTrapHostFilter, rsSnmpAuthFailIdReason=rsSnmpAuthFailIdReason, rsSnmpCommunityTable=rsSnmpCommunityTable, rsSnmpCommunityRowStatus=rsSnmpCommunityRowStatus, rsSnmpCommunityEntry=rsSnmpCommunityEntry, rsSnmpTrapHostCommunity=rsSnmpTrapHostCommunity, rsSnmpMaxPduSize=rsSnmpMaxPduSize, rsSnmpTrapHostIpAddress=rsSnmpTrapHostIpAddress, rsSnmpTrap=rsSnmpTrap, rsSnmpCompliances=rsSnmpCompliances, rsSnmpCommunityAccessList=rsSnmpCommunityAccessList, rsSnmpObjects=rsSnmpObjects, rsSnmpGroup=rsSnmpGroup, rsSnmpConformance=rsSnmpConformance, RsSnmpCommunityName=RsSnmpCommunityName, rsSnmpTrapHostUdpPort=rsSnmpTrapHostUdpPort, rsSnmpAuthFailIdIpAddress=rsSnmpAuthFailIdIpAddress, rsSnmpCommunityName=rsSnmpCommunityName, rsSnmpCommunityPrivilege=rsSnmpCommunityPrivilege, rsSnmpCompliance=rsSnmpCompliance, rsSnmpCommunity=rsSnmpCommunity, rsSnmpAuthFailIdUdpPort=rsSnmpAuthFailIdUdpPort, PYSNMP_MODULE_ID=rsSnmpMIB, rsSnmpTrapHostEntry=rsSnmpTrapHostEntry, rsSnmpTrapGlobalFilter=rsSnmpTrapGlobalFilter, rsSnmpTrapHostProtocolVersion=rsSnmpTrapHostProtocolVersion, rsSnmpGeneral=rsSnmpGeneral, rsSnmpTrapSource=rsSnmpTrapSource, RsSnmpTrapMask=RsSnmpTrapMask, rsSnmpGroups=rsSnmpGroups, rsSnmpAuthFailId=rsSnmpAuthFailId)
