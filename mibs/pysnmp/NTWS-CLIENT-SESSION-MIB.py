#
# PySNMP MIB module NTWS-CLIENT-SESSION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NTWS-CLIENT-SESSION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
NtwsAccessType, NtwsRadioNum, NtwsApSerialNum, NtwsRadioRate, NtwsRssi, NtwsApNum = mibBuilder.importSymbols("NTWS-AP-TC", "NtwsAccessType", "NtwsRadioNum", "NtwsApSerialNum", "NtwsRadioRate", "NtwsRssi", "NtwsApNum")
NtwsPhysPortNumberOrZero, = mibBuilder.importSymbols("NTWS-BASIC-TC", "NtwsPhysPortNumberOrZero")
NtwsUserAccessType, NtwsClientAuthenProtocolType, NtwsClientAccessMode, NtwsClientSessionState = mibBuilder.importSymbols("NTWS-CLIENT-SESSION-TC", "NtwsUserAccessType", "NtwsClientAuthenProtocolType", "NtwsClientAccessMode", "NtwsClientSessionState")
ntwsMibs, = mibBuilder.importSymbols("NTWS-ROOT-MIB", "ntwsMibs")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, ObjectIdentity, NotificationType, MibIdentifier, Counter32, Unsigned32, TimeTicks, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "ObjectIdentity", "NotificationType", "MibIdentifier", "Counter32", "Unsigned32", "TimeTicks", "ModuleIdentity", "Counter64")
TextualConvention, TimeStamp, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DisplayString", "MacAddress")
ntwsClientSessionMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4))
ntwsClientSessionMib.setRevisions(('2008-10-23 00:56', '2008-05-23 00:55', '2007-11-01 00:54', '2007-10-09 00:51', '2007-08-16 00:44', '2006-11-16 00:43', '2006-10-17 00:42', '2006-09-26 00:32', '2006-07-29 00:21', '2006-06-06 00:10', '2006-03-30 00:08',))
if mibBuilder.loadTexts: ntwsClientSessionMib.setLastUpdated('200810230056Z')
if mibBuilder.loadTexts: ntwsClientSessionMib.setOrganization('Nortel Networks')
class NtwsEncryptionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("none", 1), ("aesCcm", 2), ("aesOcb", 3), ("tkip", 4), ("wep104", 5), ("wep40", 6), ("staticWep", 7))

class NtwsAuthMethod(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 14, 18, 22, 26, 27, 34, 255))
    namedValues = NamedValues(("none", 1), ("identity", 2), ("notification", 3), ("nak", 4), ("md5", 5), ("otp", 6), ("tokenCard", 7), ("tls", 14), ("leap", 18), ("ttls", 22), ("peap", 26), ("msChapv2", 27), ("eapExt", 34), ("passThru", 255))

class NtwsSessState(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))
    namedValues = NamedValues(("invalid", 1), ("initializing", 2), ("assocReqAndAuth", 3), ("assocAndAuth", 4), ("wired", 5), ("webLoginPh1", 6), ("webLoginPh1B", 7), ("webLoginPh1F", 8), ("webLoginPh2", 9), ("webPortalLogin", 10), ("authorizing", 11), ("authorized", 12), ("active", 13), ("activePortal", 14), ("deassociated", 15), ("roamingAway", 16), ("updatedToRoam", 17), ("roamedAway", 18), ("killing", 19), ("free", 20), ("enforceSoda", 21))

ntwsClientSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1))
ntwsClientSessionDataObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1))
ntwsClSessClientSessionTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1), )
if mibBuilder.loadTexts: ntwsClSessClientSessionTable.setStatus('current')
ntwsClSessClientSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1), ).setIndexNames((0, "NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessMacAddress"))
if mibBuilder.loadTexts: ntwsClSessClientSessionEntry.setStatus('current')
ntwsClSessClientSessMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: ntwsClSessClientSessMacAddress.setStatus('current')
ntwsClSessClientSessSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessSessionId.setStatus('current')
ntwsClSessClientSessUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessUsername.setStatus('current')
ntwsClSessClientSessIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessIpAddress.setStatus('current')
ntwsClSessClientSessEncryptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 5), NtwsEncryptionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessEncryptionType.setStatus('current')
ntwsClSessClientSessVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessVlan.setStatus('current')
ntwsClSessClientSessApSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 7), NtwsApSerialNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessApSerialNum.setStatus('current')
ntwsClSessClientSessRadioNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 8), NtwsRadioNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessRadioNum.setStatus('current')
ntwsClSessClientSessAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 9), NtwsAccessType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessAccessType.setStatus('obsolete')
ntwsClSessClientSessAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 10), NtwsAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessAuthMethod.setStatus('deprecated')
ntwsClSessClientSessAuthServer = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessAuthServer.setStatus('current')
ntwsClSessClientSessPortOrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessPortOrNum.setStatus('obsolete')
ntwsClSessClientSessVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessVlanTag.setStatus('current')
ntwsClSessClientSessTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessTimeStamp.setStatus('current')
ntwsClSessClientSessSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessSsid.setStatus('current')
ntwsClSessClientSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 16), NtwsSessState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessState.setStatus('deprecated')
ntwsClSessClientSessLoginType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 17), NtwsUserAccessType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessLoginType.setStatus('current')
ntwsClSessClientSessDot1xAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 18), NtwsClientAuthenProtocolType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessDot1xAuthMethod.setStatus('current')
ntwsClSessClientSessSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 19), NtwsClientSessionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessSessionState.setStatus('current')
ntwsClSessClientSessAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 20), NtwsClientAccessMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessAccessMode.setStatus('current')
ntwsClSessClientSessApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 21), NtwsApNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessApNum.setStatus('current')
ntwsClSessClientSessPhysPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 1, 1, 22), NtwsPhysPortNumberOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessPhysPortNum.setStatus('current')
ntwsClSessRoamingHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2), )
if mibBuilder.loadTexts: ntwsClSessRoamingHistoryTable.setStatus('current')
ntwsClSessRoamingHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1), ).setIndexNames((0, "NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistMacAddress"), (0, "NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistIndex"))
if mibBuilder.loadTexts: ntwsClSessRoamingHistoryEntry.setStatus('current')
ntwsClSessRoamHistMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: ntwsClSessRoamHistMacAddress.setStatus('current')
ntwsClSessRoamHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: ntwsClSessRoamHistIndex.setStatus('current')
ntwsClSessRoamHistApSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 3), NtwsApSerialNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessRoamHistApSerialNum.setStatus('current')
ntwsClSessRoamHistRadioNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 4), NtwsRadioNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessRoamHistRadioNum.setStatus('current')
ntwsClSessRoamHistAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 5), NtwsAccessType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessRoamHistAccessType.setStatus('obsolete')
ntwsClSessRoamHistApNumOrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessRoamHistApNumOrPort.setStatus('obsolete')
ntwsClSessRoamHistIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessRoamHistIpAddress.setStatus('current')
ntwsClSessRoamHistTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessRoamHistTimeStamp.setStatus('current')
ntwsClSessRoamHistAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 9), NtwsClientAccessMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessRoamHistAccessMode.setStatus('current')
ntwsClSessRoamHistApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 10), NtwsApNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessRoamHistApNum.setStatus('current')
ntwsClSessRoamHistPhysPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 2, 1, 11), NtwsPhysPortNumberOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessRoamHistPhysPortNum.setStatus('current')
ntwsClSessClientSessionStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3), )
if mibBuilder.loadTexts: ntwsClSessClientSessionStatisticsTable.setStatus('current')
ntwsClSessClientSessionStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1), ).setIndexNames((0, "NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsMacAddress"))
if mibBuilder.loadTexts: ntwsClSessClientSessionStatisticsEntry.setStatus('current')
ntwsClSessClientSessStatsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: ntwsClSessClientSessStatsMacAddress.setStatus('current')
ntwsClSessClientSessStatsUniPktIn = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsUniPktIn.setStatus('current')
ntwsClSessClientSessStatsUniOctetIn = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsUniOctetIn.setStatus('current')
ntwsClSessClientSessStatsUniPktOut = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsUniPktOut.setStatus('current')
ntwsClSessClientSessStatsUniOctetOut = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsUniOctetOut.setStatus('current')
ntwsClSessClientSessStatsMultiPktIn = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsMultiPktIn.setStatus('current')
ntwsClSessClientSessStatsMultiOctetIn = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsMultiOctetIn.setStatus('current')
ntwsClSessClientSessStatsEncErrPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsEncErrPkt.setStatus('current')
ntwsClSessClientSessStatsEncErrOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsEncErrOctet.setStatus('current')
ntwsClSessClientSessStatsLastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 10), NtwsRadioRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsLastRate.setStatus('current')
ntwsClSessClientSessStatsLastRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 11), NtwsRssi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsLastRssi.setStatus('current')
ntwsClSessClientSessStatsLastSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessClientSessStatsLastSNR.setStatus('current')
ntwsClSessTotalSessions = MibScalar((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsClSessTotalSessions.setStatus('current')
ntwsClientSessionConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2))
ntwsClientSessionCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 1))
ntwsClientSessionGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 2))
ntwsClientSessionCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 1, 1)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClientSessionCommonGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessionCompliance = ntwsClientSessionCompliance.setStatus('obsolete')
ntwsClientSessionComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 1, 2)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClientSessScalarsGroup"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClientSessClientSessionTableGroup"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClientSessRoamingHistoryTableGroup"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClientSessClientSessionStatisticsTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessionComplianceRev2 = ntwsClientSessionComplianceRev2.setStatus('obsolete')
ntwsClientSessionComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 1, 3)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClientSessScalarsGroup"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClientSessClientSessionTableGroupRev2"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClientSessRoamingHistoryTableGroupRev2"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClientSessClientSessionStatisticsTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessionComplianceRev3 = ntwsClientSessionComplianceRev3.setStatus('current')
ntwsClientSessionCommonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 2, 1)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessSessionId"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessUsername"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessIpAddress"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessEncryptionType"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessVlan"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessApSerialNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessRadioNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessAccessType"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessAuthMethod"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessAuthServer"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessPortOrNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessVlanTag"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessTimeStamp"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessSsid"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessState"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistApSerialNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistRadioNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistAccessType"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistApNumOrPort"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistIpAddress"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistTimeStamp"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsUniPktIn"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsUniOctetIn"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsUniPktOut"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsUniOctetOut"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsMultiPktIn"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsMultiOctetIn"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsEncErrPkt"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsEncErrOctet"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsLastRate"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsLastRssi"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsLastSNR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessionCommonGroup = ntwsClientSessionCommonGroup.setStatus('obsolete')
ntwsClientSessScalarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 2, 2)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClSessTotalSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessScalarsGroup = ntwsClientSessScalarsGroup.setStatus('current')
ntwsClientSessClientSessionTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 2, 3)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessSessionId"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessUsername"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessIpAddress"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessEncryptionType"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessVlan"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessApSerialNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessRadioNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessAccessType"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessAuthServer"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessPortOrNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessVlanTag"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessTimeStamp"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessSsid"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessLoginType"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessDot1xAuthMethod"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessSessionState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessClientSessionTableGroup = ntwsClientSessClientSessionTableGroup.setStatus('obsolete')
ntwsClientSessRoamingHistoryTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 2, 4)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistApSerialNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistRadioNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistAccessType"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistApNumOrPort"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistIpAddress"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessRoamingHistoryTableGroup = ntwsClientSessRoamingHistoryTableGroup.setStatus('obsolete')
ntwsClientSessClientSessionStatisticsTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 2, 5)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsUniPktIn"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsUniOctetIn"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsUniPktOut"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsUniOctetOut"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsMultiPktIn"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsMultiOctetIn"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsEncErrPkt"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsEncErrOctet"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsLastRate"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsLastRssi"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessStatsLastSNR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessClientSessionStatisticsTableGroup = ntwsClientSessClientSessionStatisticsTableGroup.setStatus('current')
ntwsClientSessClientSessionTableGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 2, 6)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessSessionId"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessUsername"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessIpAddress"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessEncryptionType"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessVlan"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessApSerialNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessRadioNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessAuthServer"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessVlanTag"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessTimeStamp"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessSsid"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessLoginType"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessDot1xAuthMethod"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessSessionState"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessAccessMode"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessApNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessClientSessPhysPortNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessClientSessionTableGroupRev2 = ntwsClientSessClientSessionTableGroupRev2.setStatus('current')
ntwsClientSessRoamingHistoryTableGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 4, 1, 2, 2, 7)).setObjects(("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistApSerialNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistRadioNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistIpAddress"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistTimeStamp"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistAccessMode"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistApNum"), ("NTWS-CLIENT-SESSION-MIB", "ntwsClSessRoamHistPhysPortNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsClientSessRoamingHistoryTableGroupRev2 = ntwsClientSessRoamingHistoryTableGroupRev2.setStatus('current')
mibBuilder.exportSymbols("NTWS-CLIENT-SESSION-MIB", ntwsClientSessClientSessionTableGroupRev2=ntwsClientSessClientSessionTableGroupRev2, ntwsClSessClientSessAccessType=ntwsClSessClientSessAccessType, ntwsClSessClientSessStatsUniOctetIn=ntwsClSessClientSessStatsUniOctetIn, ntwsClSessClientSessMacAddress=ntwsClSessClientSessMacAddress, ntwsClSessClientSessDot1xAuthMethod=ntwsClSessClientSessDot1xAuthMethod, ntwsClSessClientSessionStatisticsTable=ntwsClSessClientSessionStatisticsTable, ntwsClSessClientSessVlan=ntwsClSessClientSessVlan, ntwsClSessClientSessAccessMode=ntwsClSessClientSessAccessMode, NtwsAuthMethod=NtwsAuthMethod, ntwsClSessClientSessVlanTag=ntwsClSessClientSessVlanTag, ntwsClSessClientSessTimeStamp=ntwsClSessClientSessTimeStamp, ntwsClSessRoamHistAccessMode=ntwsClSessRoamHistAccessMode, ntwsClSessClientSessStatsUniPktOut=ntwsClSessClientSessStatsUniPktOut, ntwsClSessClientSessPortOrNum=ntwsClSessClientSessPortOrNum, ntwsClSessClientSessLoginType=ntwsClSessClientSessLoginType, ntwsClSessClientSessStatsLastRate=ntwsClSessClientSessStatsLastRate, ntwsClSessClientSessApSerialNum=ntwsClSessClientSessApSerialNum, ntwsClSessClientSessApNum=ntwsClSessClientSessApNum, ntwsClSessClientSessStatsLastSNR=ntwsClSessClientSessStatsLastSNR, ntwsClientSessionCompliances=ntwsClientSessionCompliances, ntwsClientSessionComplianceRev2=ntwsClientSessionComplianceRev2, ntwsClientSessionDataObjects=ntwsClientSessionDataObjects, ntwsClSessClientSessUsername=ntwsClSessClientSessUsername, ntwsClSessClientSessAuthMethod=ntwsClSessClientSessAuthMethod, ntwsClSessRoamHistApNumOrPort=ntwsClSessRoamHistApNumOrPort, ntwsClSessRoamHistTimeStamp=ntwsClSessRoamHistTimeStamp, ntwsClSessRoamingHistoryTable=ntwsClSessRoamingHistoryTable, ntwsClientSessionGroups=ntwsClientSessionGroups, ntwsClSessClientSessSessionState=ntwsClSessClientSessSessionState, ntwsClSessClientSessStatsLastRssi=ntwsClSessClientSessStatsLastRssi, ntwsClSessRoamHistRadioNum=ntwsClSessRoamHistRadioNum, ntwsClSessClientSessPhysPortNum=ntwsClSessClientSessPhysPortNum, ntwsClSessClientSessRadioNum=ntwsClSessClientSessRadioNum, ntwsClSessClientSessStatsMacAddress=ntwsClSessClientSessStatsMacAddress, PYSNMP_MODULE_ID=ntwsClientSessionMib, ntwsClSessRoamHistAccessType=ntwsClSessRoamHistAccessType, ntwsClSessRoamHistApNum=ntwsClSessRoamHistApNum, ntwsClSessClientSessSessionId=ntwsClSessClientSessSessionId, ntwsClientSessionMib=ntwsClientSessionMib, ntwsClSessClientSessionStatisticsEntry=ntwsClSessClientSessionStatisticsEntry, ntwsClientSessionConformance=ntwsClientSessionConformance, ntwsClSessClientSessionEntry=ntwsClSessClientSessionEntry, ntwsClSessRoamHistApSerialNum=ntwsClSessRoamHistApSerialNum, ntwsClSessClientSessStatsMultiPktIn=ntwsClSessClientSessStatsMultiPktIn, ntwsClientSessClientSessionStatisticsTableGroup=ntwsClientSessClientSessionStatisticsTableGroup, ntwsClSessClientSessStatsMultiOctetIn=ntwsClSessClientSessStatsMultiOctetIn, ntwsClSessRoamHistIpAddress=ntwsClSessRoamHistIpAddress, ntwsClientSessionCompliance=ntwsClientSessionCompliance, NtwsSessState=NtwsSessState, ntwsClSessClientSessStatsEncErrOctet=ntwsClSessClientSessStatsEncErrOctet, ntwsClSessClientSessIpAddress=ntwsClSessClientSessIpAddress, ntwsClSessRoamHistMacAddress=ntwsClSessRoamHistMacAddress, ntwsClSessRoamingHistoryEntry=ntwsClSessRoamingHistoryEntry, ntwsClientSessionComplianceRev3=ntwsClientSessionComplianceRev3, NtwsEncryptionType=NtwsEncryptionType, ntwsClientSessClientSessionTableGroup=ntwsClientSessClientSessionTableGroup, ntwsClientSessScalarsGroup=ntwsClientSessScalarsGroup, ntwsClSessClientSessState=ntwsClSessClientSessState, ntwsClSessTotalSessions=ntwsClSessTotalSessions, ntwsClSessRoamHistPhysPortNum=ntwsClSessRoamHistPhysPortNum, ntwsClientSessionCommonGroup=ntwsClientSessionCommonGroup, ntwsClSessClientSessAuthServer=ntwsClSessClientSessAuthServer, ntwsClSessClientSessStatsUniOctetOut=ntwsClSessClientSessStatsUniOctetOut, ntwsClientSessionObjects=ntwsClientSessionObjects, ntwsClSessClientSessStatsEncErrPkt=ntwsClSessClientSessStatsEncErrPkt, ntwsClSessClientSessionTable=ntwsClSessClientSessionTable, ntwsClientSessRoamingHistoryTableGroupRev2=ntwsClientSessRoamingHistoryTableGroupRev2, ntwsClSessClientSessEncryptionType=ntwsClSessClientSessEncryptionType, ntwsClSessRoamHistIndex=ntwsClSessRoamHistIndex, ntwsClSessClientSessStatsUniPktIn=ntwsClSessClientSessStatsUniPktIn, ntwsClSessClientSessSsid=ntwsClSessClientSessSsid, ntwsClientSessRoamingHistoryTableGroup=ntwsClientSessRoamingHistoryTableGroup)
