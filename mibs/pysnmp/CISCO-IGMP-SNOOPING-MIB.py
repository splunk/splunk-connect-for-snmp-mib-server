#
# PySNMP MIB module CISCO-IGMP-SNOOPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IGMP-SNOOPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:44:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
VlanIndexOrZero, = mibBuilder.importSymbols("CISCO-PRIVATE-VLAN-MIB", "VlanIndexOrZero")
Percent, = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "Percent")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoPortList, CiscoPortListRange = mibBuilder.importSymbols("CISCO-TC", "CiscoPortList", "CiscoPortListRange")
VlanIndex, = mibBuilder.importSymbols("CISCO-VTP-MIB", "VlanIndex")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, Bits, TimeTicks, iso, Gauge32, Unsigned32, MibIdentifier, ModuleIdentity, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "Bits", "TimeTicks", "iso", "Gauge32", "Unsigned32", "MibIdentifier", "ModuleIdentity", "Counter64", "IpAddress")
StorageType, TimeStamp, RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TimeStamp", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
ciscoIgmpSnoopingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 263))
ciscoIgmpSnoopingMIB.setRevisions(('2010-06-08 00:00', '2007-11-08 00:00', '2004-04-02 00:00', '2003-03-24 00:00', '2002-05-05 00:00',))
if mibBuilder.loadTexts: ciscoIgmpSnoopingMIB.setLastUpdated('201006080000Z')
if mibBuilder.loadTexts: ciscoIgmpSnoopingMIB.setOrganization('Cisco System, Inc.')
class CisIgmpMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("auto", 1), ("igmpOnly", 2), ("igmpCgmp", 3))

class CisIgmpVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("version1", 1), ("version2", 2), ("version3", 3), ("unknown", 4))

ciscoIgmpSnoopingNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 0))
ciscoIgmpSnoopingMIBObject = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1))
cisSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1))
cisStatisticsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2))
cisRateLimitInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 3))
cisVlanConfigInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4))
cisIfConfigInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 5))
cisMulticastRouterInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6))
cisMulticastGroupInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7))
cisResourceLimitInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 8))
cisQuerierConfigInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9))
cisFilteringInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10))
cisExplicitTrackingInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 11))
cisIgmpSnoopingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpSnoopingEnabled.setStatus('current')
cisV3ProcessEnabledAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisV3ProcessEnabledAdminStatus.setStatus('current')
cisV3ProcessEnabledOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisV3ProcessEnabledOperStatus.setStatus('current')
cisFastLeaveEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisFastLeaveEnabled.setStatus('current')
cisFastBlockEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisFastBlockEnabled.setStatus('current')
cisAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 6), CisIgmpMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisAdminMode.setStatus('current')
cisOperMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 7), CisIgmpMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisOperMode.setStatus('current')
cisLeaveQueryType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("generalQuery", 1), ("macGenQuery", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisLeaveQueryType.setStatus('current')
cisAddressAliasingMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("fallback", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisAddressAliasingMode.setStatus('current')
cisFallbackTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisFallbackTime.setStatus('current')
cisReportSuppressionEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisReportSuppressionEnabled.setStatus('current')
cisTopoChangeFloodQueryCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisTopoChangeFloodQueryCount.setStatus('current')
cisTopoChangeQuerySolicitEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisTopoChangeQuerySolicitEnabled.setStatus('current')
cisSourceOnlyLearningEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisSourceOnlyLearningEnabled.setStatus('current')
cisSourceOnlyEntryAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2880))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisSourceOnlyEntryAgeTime.setStatus('deprecated')
cisV3SnoopingSupport = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisV3SnoopingSupport.setStatus('current')
cisSourceOnlyEntryAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 17), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisSourceOnlyEntryAgingTime.setStatus('current')
cisRobustnessVariable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisRobustnessVariable.setStatus('current')
cisLastMemberQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisLastMemberQueryInterval.setStatus('current')
cisLastMemberQueryCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisLastMemberQueryCount.setStatus('current')
cisTimeToLiveCheckEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 21), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisTimeToLiveCheckEnabled.setStatus('current')
cisRouterAlertCheckEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 1, 22), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisRouterAlertCheckEnabled.setStatus('current')
cisInterfaceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1), )
if mibBuilder.loadTexts: cisInterfaceStatsTable.setStatus('current')
cisInterfaceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cisInterfaceStatsEntry.setStatus('current')
cisTxGeneralQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisTxGeneralQueries.setStatus('current')
cisTxGroupSpecificQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisTxGroupSpecificQueries.setStatus('current')
cisTxReports = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisTxReports.setStatus('current')
cisTxLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisTxLeaves.setStatus('current')
cisRxGeneralQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisRxGeneralQueries.setStatus('current')
cisRxGroupSpecificQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisRxGroupSpecificQueries.setStatus('current')
cisRxReports = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisRxReports.setStatus('current')
cisRxLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisRxLeaves.setStatus('current')
cisRxValidPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisRxValidPackets.setStatus('current')
cisRxInvalidPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisRxInvalidPackets.setStatus('current')
cisRxOtherPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisRxOtherPackets.setStatus('current')
cisRxMACGeneralQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisRxMACGeneralQueries.setStatus('current')
cisRxTopoNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisRxTopoNotifications.setStatus('current')
cisV3Allows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisV3Allows.setStatus('current')
cisV3Blocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisV3Blocks.setStatus('current')
cisV3IsIncluded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisV3IsIncluded.setStatus('current')
cisV3IsExcluded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisV3IsExcluded.setStatus('current')
cisV3ToIncluded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisV3ToIncluded.setStatus('current')
cisV3ToExcluded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisV3ToExcluded.setStatus('current')
cisGeneralQueryRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 3, 1), Unsigned32()).setUnits('packets per 30 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisGeneralQueryRateLimit.setStatus('deprecated')
cisDvmrpRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 3, 2), Unsigned32()).setUnits('packets per 30 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisDvmrpRateLimit.setStatus('deprecated')
cisMospf1RateLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 3, 3), Unsigned32()).setUnits('packets per 30 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisMospf1RateLimit.setStatus('deprecated')
cisMospf2RateLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 3, 4), Unsigned32()).setUnits('packets per 30 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisMospf2RateLimit.setStatus('deprecated')
cisPimV2RateLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 3, 5), Unsigned32()).setUnits('packets per 30 seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisPimV2RateLimit.setStatus('deprecated')
cisRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 3, 6), Unsigned32()).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisRateLimit.setStatus('current')
cisVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1), )
if mibBuilder.loadTexts: cisVlanConfigTable.setStatus('current')
cisVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-IGMP-SNOOPING-MIB", "cisVlanIndex"))
if mibBuilder.loadTexts: cisVlanConfigEntry.setStatus('current')
cisVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cisVlanIndex.setStatus('current')
cisVlanIgmpSnoopingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanIgmpSnoopingEnabled.setStatus('current')
cisVlanFastLeaveEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanFastLeaveEnabled.setStatus('current')
cisVlanIgmpSnoopingOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 4), CisIgmpMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisVlanIgmpSnoopingOperMode.setStatus('current')
cisVlanIgmpSnoopingLearningMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pimDvmrp", 1), ("cgmp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanIgmpSnoopingLearningMode.setStatus('current')
cisVlanReportSuppressionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanReportSuppressionEnabled.setStatus('current')
cisVlanLeaveQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanLeaveQueryInterval.setStatus('current')
cisVlanLastMemberQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanLastMemberQueryCount.setStatus('current')
cisVlanRobustnessVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 7), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanRobustnessVariable.setStatus('current')
cisVlanTimeToLiveCheckEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanTimeToLiveCheckEnabled.setStatus('current')
cisVlanRouterAlertCheckEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanRouterAlertCheckEnabled.setStatus('current')
cisIgmpQuerierTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2), )
if mibBuilder.loadTexts: cisIgmpQuerierTable.setStatus('current')
cisIgmpQuerierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierVlanIndex"))
if mibBuilder.loadTexts: cisIgmpQuerierEntry.setStatus('current')
cisIgmpQuerierVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cisIgmpQuerierVlanIndex.setStatus('current')
cisIgmpQuerierEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpQuerierEnabled.setStatus('current')
cisIgmpQuerierState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("electing", 2), ("querier", 3), ("nonQuerier", 4), ("inactive", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisIgmpQuerierState.setStatus('current')
cisIgmpQuerierVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 4), CisIgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisIgmpQuerierVersion.setStatus('current')
cisIgmpQuerierAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisIgmpQuerierAddressType.setStatus('current')
cisIgmpQuerierAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisIgmpQuerierAddress.setStatus('current')
cisIgmpQuerierInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 7), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisIgmpQuerierInterface.setStatus('current')
cisIgmpQuerierTcnQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpQuerierTcnQueryCount.setStatus('current')
cisIgmpQuerierTcnQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpQuerierTcnQueryInterval.setStatus('current')
cisIgmpQuerierTimerExpiry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpQuerierTimerExpiry.setStatus('current')
cisIgmpQuerierMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpQuerierMaxResponseTime.setStatus('current')
cisIgmpQuerierQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpQuerierQueryInterval.setStatus('current')
cisIgmpQuerierAdminAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 13), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpQuerierAdminAddressType.setStatus('current')
cisIgmpQuerierAdminAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 14), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpQuerierAdminAddress.setStatus('current')
cisIgmpQuerierAdminVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 15), CisIgmpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIgmpQuerierAdminVersion.setStatus('current')
cisIgmpQuerierTcnQueryPending = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 4, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisIgmpQuerierTcnQueryPending.setStatus('current')
cisIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 5, 1), )
if mibBuilder.loadTexts: cisIfConfigTable.setStatus('current')
cisIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cisIfConfigEntry.setStatus('current')
cisIfTopoChangeFloodEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 5, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisIfTopoChangeFloodEnabled.setStatus('current')
cisMcastRouterCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 1), )
if mibBuilder.loadTexts: cisMcastRouterCfgTable.setStatus('deprecated')
cisMcastRouterCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMcastRouterVlanIndex"))
if mibBuilder.loadTexts: cisMcastRouterCfgEntry.setStatus('deprecated')
cisMcastRouterVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cisMcastRouterVlanIndex.setStatus('deprecated')
cisMcastRouterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMcastRouterType.setStatus('deprecated')
cisMcastRouterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisMcastRouterRowStatus.setStatus('deprecated')
cisMcastRouterConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 2), )
if mibBuilder.loadTexts: cisMcastRouterConfigTable.setStatus('current')
cisMcastRouterConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 2, 1), ).setIndexNames((0, "CISCO-IGMP-SNOOPING-MIB", "cisMcastRouterConfigVlanIndex"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cisMcastRouterConfigEntry.setStatus('current')
cisMcastRouterConfigVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cisMcastRouterConfigVlanIndex.setStatus('current')
cisMcastRouterConfigRouterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMcastRouterConfigRouterType.setStatus('current')
cisMcastRouterConfigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 2, 1, 3), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisMcastRouterConfigStorageType.setStatus('current')
cisMcastRouterConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 6, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisMcastRouterConfigRowStatus.setStatus('current')
cisMcastGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1), )
if mibBuilder.loadTexts: cisMcastGroupTable.setStatus('deprecated')
cisMcastGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupVlanIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupAddressType"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupAddress"))
if mibBuilder.loadTexts: cisMcastGroupEntry.setStatus('deprecated')
cisMcastGroupVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cisMcastGroupVlanIndex.setStatus('deprecated')
cisMcastGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cisMcastGroupAddressType.setStatus('deprecated')
cisMcastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cisMcastGroupAddress.setStatus('deprecated')
cisMcastGroupFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMcastGroupFilterMode.setStatus('deprecated')
cisMcastGroupIgmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1, 1, 5), CisIgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMcastGroupIgmpVersion.setStatus('deprecated')
cisMcastGroupIncludeHostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMcastGroupIncludeHostCount.setStatus('deprecated')
cisMcastGroupExcludeHostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMcastGroupExcludeHostCount.setStatus('deprecated')
cisMcastGroupPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 1, 1, 8), CiscoPortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMcastGroupPortList.setStatus('deprecated')
cisMulticastGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2), )
if mibBuilder.loadTexts: cisMulticastGroupTable.setStatus('current')
cisMulticastGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1), ).setIndexNames((0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupVlanIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupCeVlanIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupAddressType"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupAddress"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupSourceAddress"))
if mibBuilder.loadTexts: cisMulticastGroupEntry.setStatus('current')
cisMulticastGroupVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cisMulticastGroupVlanIndex.setStatus('current')
cisMulticastGroupCeVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 2), VlanIndex())
if mibBuilder.loadTexts: cisMulticastGroupCeVlanIndex.setStatus('current')
cisMulticastGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 3), InetAddressType())
if mibBuilder.loadTexts: cisMulticastGroupAddressType.setStatus('current')
cisMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 4), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: cisMulticastGroupAddress.setStatus('current')
cisMulticastGroupSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 5), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: cisMulticastGroupSourceAddress.setStatus('current')
cisMulticastGroupGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMulticastGroupGroupType.setStatus('current')
cisMulticastGroupIgmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 7), Bits().clone(namedValues=NamedValues(("igmpV1", 0), ("igmpV2", 1), ("igmpV3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMulticastGroupIgmpVersion.setStatus('current')
cisMulticastGroupSourceUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMulticastGroupSourceUpTime.setStatus('current')
cisMulticastGroupSourceExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMulticastGroupSourceExpires.setStatus('current')
cisMulticastGroupInclHostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMulticastGroupInclHostCount.setStatus('current')
cisMulticastGroupExclHostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMulticastGroupExclHostCount.setStatus('current')
cisMulticastGroupPortListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 3), )
if mibBuilder.loadTexts: cisMulticastGroupPortListTable.setStatus('current')
cisMulticastGroupPortListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 3, 1), ).setIndexNames((0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupVlanIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupCeVlanIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupAddressType"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupAddress"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupSourceAddress"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupPortRangeIndex"))
if mibBuilder.loadTexts: cisMulticastGroupPortListEntry.setStatus('current')
cisMulticastGroupPortRangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 3, 1, 1), CiscoPortListRange())
if mibBuilder.loadTexts: cisMulticastGroupPortRangeIndex.setStatus('current')
cisMulticastGroupPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 3, 1, 2), CiscoPortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisMulticastGroupPortList.setStatus('current')
cisMulticastGroupConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4), )
if mibBuilder.loadTexts: cisMulticastGroupConfigTable.setStatus('current')
cisMulticastGroupConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1), ).setIndexNames((0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfVlanIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfCeVlanIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfAddressType"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfAddress"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfSourceAddress"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfPortRange"))
if mibBuilder.loadTexts: cisMulticastGroupConfigEntry.setStatus('current')
cisMulticastGroupConfVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cisMulticastGroupConfVlanIndex.setStatus('current')
cisMulticastGroupConfCeVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1, 2), VlanIndex())
if mibBuilder.loadTexts: cisMulticastGroupConfCeVlanIndex.setStatus('current')
cisMulticastGroupConfAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1, 3), InetAddressType())
if mibBuilder.loadTexts: cisMulticastGroupConfAddressType.setStatus('current')
cisMulticastGroupConfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1, 4), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: cisMulticastGroupConfAddress.setStatus('current')
cisMulticastGroupConfSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1, 5), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: cisMulticastGroupConfSourceAddress.setStatus('current')
cisMulticastGroupConfPortRange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1, 6), CiscoPortListRange())
if mibBuilder.loadTexts: cisMulticastGroupConfPortRange.setStatus('current')
cisMulticastGroupConfPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1, 7), CiscoPortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisMulticastGroupConfPortList.setStatus('current')
cisMulticastGroupConfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1, 8), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisMulticastGroupConfStorageType.setStatus('current')
cisMulticastGroupConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 7, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisMulticastGroupConfRowStatus.setStatus('current')
cisL2EntryLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 8, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisL2EntryLimit.setStatus('current')
cisEntryTrackingLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 8, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisEntryTrackingLimit.setStatus('current')
cisSourceOnlyPercentageScanLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 8, 3), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisSourceOnlyPercentageScanLimit.setStatus('current')
cisSourceOnlyLearningLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 8, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisSourceOnlyLearningLimit.setStatus('current')
cisQuerierEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisQuerierEnabled.setStatus('current')
cisQuerierTcnQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisQuerierTcnQueryInterval.setStatus('current')
cisQuerierTimerExpiry = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisQuerierTimerExpiry.setStatus('current')
cisQuerierMaxResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9, 4), Unsigned32()).setUnits('one-tenth of second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisQuerierMaxResponseTime.setStatus('current')
cisQuerierQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisQuerierQueryInterval.setStatus('current')
cisQuerierAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9, 6), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisQuerierAddressType.setStatus('current')
cisQuerierAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9, 7), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisQuerierAddress.setStatus('current')
cisQuerierVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9, 8), CisIgmpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisQuerierVersion.setStatus('current')
cisQuerierTcnQueryCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 9, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisQuerierTcnQueryCount.setStatus('current')
cisIfLimitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 1), )
if mibBuilder.loadTexts: cisIfLimitTable.setStatus('current')
cisIfLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisIfLimitVlanNumber"))
if mibBuilder.loadTexts: cisIfLimitEntry.setStatus('current')
cisIfLimitVlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 1, 1, 1), VlanIndexOrZero())
if mibBuilder.loadTexts: cisIfLimitVlanNumber.setStatus('current')
cisIfLimitMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfLimitMax.setStatus('current')
cisIfLimitExcludeAccessGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 1, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfLimitExcludeAccessGrp.setStatus('current')
cisIfLimitStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 1, 1, 4), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfLimitStorageType.setStatus('current')
cisIfLimitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfLimitRowStatus.setStatus('current')
cisIfLimitTotalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 2), )
if mibBuilder.loadTexts: cisIfLimitTotalTable.setStatus('current')
cisIfLimitTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cisIfLimitTotalEntry.setStatus('current')
cisIfLimitTotalLimitMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfLimitTotalLimitMax.setStatus('current')
cisIfLimitTotalExcludeAccessGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 2, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfLimitTotalExcludeAccessGrp.setStatus('current')
cisIfLimitTotalStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 2, 1, 3), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfLimitTotalStorageType.setStatus('current')
cisIfLimitTotalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfLimitTotalRowStatus.setStatus('current')
cisIfAccessGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 3), )
if mibBuilder.loadTexts: cisIfAccessGroupTable.setStatus('current')
cisIfAccessGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisIfAccessGroupVlan"))
if mibBuilder.loadTexts: cisIfAccessGroupEntry.setStatus('current')
cisIfAccessGroupVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 3, 1, 1), VlanIndexOrZero())
if mibBuilder.loadTexts: cisIfAccessGroupVlan.setStatus('current')
cisIfAccessGroupsChannelsAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfAccessGroupsChannelsAllowed.setStatus('current')
cisIfAccessGroupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 3, 1, 3), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfAccessGroupStorageType.setStatus('current')
cisIfAccessGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cisIfAccessGroupRowStatus.setStatus('current')
cisVlanFilterConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 4), )
if mibBuilder.loadTexts: cisVlanFilterConfigTable.setStatus('current')
cisVlanFilterConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 4, 1), ).setIndexNames((0, "CISCO-IGMP-SNOOPING-MIB", "cisVlanIndex"))
if mibBuilder.loadTexts: cisVlanFilterConfigEntry.setStatus('current')
cisVlanFilterAccessGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 4, 1, 1), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanFilterAccessGroup.setStatus('current')
cisVlanFilterLimitMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 4, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanFilterLimitMax.setStatus('current')
cisVlanFilterLimitExclAccessGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 4, 1, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanFilterLimitExclAccessGrp.setStatus('current')
cisVlanFilterMinVersionAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 4, 1, 4), CisIgmpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanFilterMinVersionAllowed.setStatus('current')
cisFilterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 5), )
if mibBuilder.loadTexts: cisFilterStatsTable.setStatus('current')
cisFilterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IGMP-SNOOPING-MIB", "cisFilterStatsVlanNumber"))
if mibBuilder.loadTexts: cisFilterStatsEntry.setStatus('current')
cisFilterStatsVlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 5, 1, 1), VlanIndexOrZero())
if mibBuilder.loadTexts: cisFilterStatsVlanNumber.setStatus('current')
cisFilterAccessGroupDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisFilterAccessGroupDenied.setStatus('current')
cisFilterLimitDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisFilterLimitDenied.setStatus('current')
cisFilterTotalLimitDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisFilterTotalLimitDenied.setStatus('current')
cisFilterMinVersionDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 10, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cisFilterMinVersionDenied.setStatus('current')
cisVlanExplicitTrackingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 11, 1), )
if mibBuilder.loadTexts: cisVlanExplicitTrackingTable.setStatus('current')
cisVlanExplicitTrackingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 11, 1, 1), ).setIndexNames((0, "CISCO-IGMP-SNOOPING-MIB", "cisVlanIndex"))
if mibBuilder.loadTexts: cisVlanExplicitTrackingEntry.setStatus('current')
cisVlanExplicitTrackingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 11, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanExplicitTrackingEnabled.setStatus('current')
cisVlanExplicitTrackingLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 263, 1, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cisVlanExplicitTrackingLimit.setStatus('current')
cisMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 2))
cisMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 1))
cisMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2))
cisV2Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 1, 1)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisSystemGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisSystemV2Group"), ("CISCO-IGMP-SNOOPING-MIB", "cisStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisV2Compliance = cisV2Compliance.setStatus('deprecated')
cisV3Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 1, 2)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisSystemGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisSystemV2Group"), ("CISCO-IGMP-SNOOPING-MIB", "cisSystemV3Group"), ("CISCO-IGMP-SNOOPING-MIB", "cisStatsGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3StatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisV3Compliance = cisV3Compliance.setStatus('deprecated')
cisIgmpSnoopingMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 1, 3)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisBaseConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalTcnGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalSourceOnlyLearnGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalIgmpV3ConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalIgmpV3InfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisExtConfig1Group"), ("CISCO-IGMP-SNOOPING-MIB", "cisExtConfig2Group"), ("CISCO-IGMP-SNOOPING-MIB", "cisStatsGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3StatsGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisRateLimitGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierInfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastRouterConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupInfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIgmpSnoopingMIBCompliance = cisIgmpSnoopingMIBCompliance.setStatus('deprecated')
cisIgmpSnoopingMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 1, 4)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisBaseConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalTcnGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalIgmpV3ConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalIgmpV3InfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisExtConfig1Group"), ("CISCO-IGMP-SNOOPING-MIB", "cisExtConfig2Group"), ("CISCO-IGMP-SNOOPING-MIB", "cisStatsGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3StatsGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierInfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastRouterConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupInfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisL2EntryLimitGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisTrackingLimitGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyLimitGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisRateLimitGroup2"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanConfigGroup2"), ("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyAgeTimerInSecGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIgmpSnoopingMIBCompliance2 = cisIgmpSnoopingMIBCompliance2.setStatus('deprecated')
cisIgmpSnoopingMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 1, 5)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisBaseConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalTcnGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalIgmpV3ConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisGlobalIgmpV3InfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisExtConfig1Group"), ("CISCO-IGMP-SNOOPING-MIB", "cisExtConfig2Group"), ("CISCO-IGMP-SNOOPING-MIB", "cisStatsGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3StatsGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierInfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisL2EntryLimitGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisTrackingLimitGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyLimitGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisRateLimitGroup2"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanConfigGroup2"), ("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyAgeTimerInSecGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupInfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupPortInfoGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastRouterConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisLeaveQueryConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierGlobalConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierConfigExtGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanExplicitTrackingCfgGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisRobustnessConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisTimeToLiveConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisRouterAlertConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitTotalGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfAccessGroupGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanFilterConfigGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisFilterStatisticsGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierGlobalTcnQueryCountGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierTcnQueryPendingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIgmpSnoopingMIBCompliance3 = cisIgmpSnoopingMIBCompliance3.setStatus('current')
cisSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 1)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIgmpSnoopingEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisSystemGroup = cisSystemGroup.setStatus('deprecated')
cisSystemV2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 2)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisFastLeaveEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisSystemV2Group = cisSystemV2Group.setStatus('deprecated')
cisSystemV3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 3)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisV3ProcessEnabledAdminStatus"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3ProcessEnabledOperStatus"), ("CISCO-IGMP-SNOOPING-MIB", "cisFastBlockEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisSystemV3Group = cisSystemV3Group.setStatus('deprecated')
cisStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 4)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisTxGeneralQueries"), ("CISCO-IGMP-SNOOPING-MIB", "cisTxGroupSpecificQueries"), ("CISCO-IGMP-SNOOPING-MIB", "cisTxReports"), ("CISCO-IGMP-SNOOPING-MIB", "cisTxLeaves"), ("CISCO-IGMP-SNOOPING-MIB", "cisRxGeneralQueries"), ("CISCO-IGMP-SNOOPING-MIB", "cisRxGroupSpecificQueries"), ("CISCO-IGMP-SNOOPING-MIB", "cisRxReports"), ("CISCO-IGMP-SNOOPING-MIB", "cisRxLeaves"), ("CISCO-IGMP-SNOOPING-MIB", "cisRxValidPackets"), ("CISCO-IGMP-SNOOPING-MIB", "cisRxInvalidPackets"), ("CISCO-IGMP-SNOOPING-MIB", "cisRxOtherPackets"), ("CISCO-IGMP-SNOOPING-MIB", "cisRxMACGeneralQueries"), ("CISCO-IGMP-SNOOPING-MIB", "cisRxTopoNotifications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisStatsGroup = cisStatsGroup.setStatus('current')
cisV3StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 5)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisV3Allows"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3Blocks"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3IsIncluded"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3IsExcluded"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3ToIncluded"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3ToExcluded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisV3StatsGroup = cisV3StatsGroup.setStatus('current')
cisBaseConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 6)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIgmpSnoopingEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisBaseConfigGroup = cisBaseConfigGroup.setStatus('current')
cisGlobalIgmpV3ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 7)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisV3ProcessEnabledAdminStatus"), ("CISCO-IGMP-SNOOPING-MIB", "cisV3ProcessEnabledOperStatus"), ("CISCO-IGMP-SNOOPING-MIB", "cisFastBlockEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisGlobalIgmpV3ConfigGroup = cisGlobalIgmpV3ConfigGroup.setStatus('current')
cisGlobalIgmpV3InfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 8)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisV3SnoopingSupport"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisGlobalIgmpV3InfoGroup = cisGlobalIgmpV3InfoGroup.setStatus('current')
cisExtConfig1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 9)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisFastLeaveEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisAdminMode"), ("CISCO-IGMP-SNOOPING-MIB", "cisOperMode"), ("CISCO-IGMP-SNOOPING-MIB", "cisLeaveQueryType"), ("CISCO-IGMP-SNOOPING-MIB", "cisAddressAliasingMode"), ("CISCO-IGMP-SNOOPING-MIB", "cisFallbackTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisExtConfig1Group = cisExtConfig1Group.setStatus('current')
cisExtConfig2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 10)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisReportSuppressionEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisExtConfig2Group = cisExtConfig2Group.setStatus('current')
cisGlobalTcnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 11)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisTopoChangeFloodQueryCount"), ("CISCO-IGMP-SNOOPING-MIB", "cisTopoChangeQuerySolicitEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisGlobalTcnGroup = cisGlobalTcnGroup.setStatus('current')
cisGlobalSourceOnlyLearnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 12)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyLearningEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyEntryAgeTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisGlobalSourceOnlyLearnGroup = cisGlobalSourceOnlyLearnGroup.setStatus('deprecated')
cisRateLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 13)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisGeneralQueryRateLimit"), ("CISCO-IGMP-SNOOPING-MIB", "cisDvmrpRateLimit"), ("CISCO-IGMP-SNOOPING-MIB", "cisMospf1RateLimit"), ("CISCO-IGMP-SNOOPING-MIB", "cisMospf2RateLimit"), ("CISCO-IGMP-SNOOPING-MIB", "cisPimV2RateLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisRateLimitGroup = cisRateLimitGroup.setStatus('deprecated')
cisVlanConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 14)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisVlanIgmpSnoopingEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanFastLeaveEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanIgmpSnoopingOperMode"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanIgmpSnoopingLearningMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisVlanConfigGroup = cisVlanConfigGroup.setStatus('current')
cisIgmpQuerierConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 15)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIgmpQuerierConfigGroup = cisIgmpQuerierConfigGroup.setStatus('current')
cisIgmpQuerierInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 16)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierVersion"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierAddressType"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierAddress"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierInterface"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIgmpQuerierInfoGroup = cisIgmpQuerierInfoGroup.setStatus('current')
cisMcastRouterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 17)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisMcastRouterType"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastRouterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisMcastRouterConfigGroup = cisMcastRouterConfigGroup.setStatus('deprecated')
cisMcastGroupInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 18)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupFilterMode"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupIgmpVersion"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupIncludeHostCount"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupExcludeHostCount"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastGroupPortList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisMcastGroupInfoGroup = cisMcastGroupInfoGroup.setStatus('deprecated')
cisIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 19)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIfTopoChangeFloodEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIfConfigGroup = cisIfConfigGroup.setStatus('current')
cisL2EntryLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 20)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisL2EntryLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisL2EntryLimitGroup = cisL2EntryLimitGroup.setStatus('current')
cisTrackingLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 21)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisEntryTrackingLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisTrackingLimitGroup = cisTrackingLimitGroup.setStatus('current')
cisSourceOnlyLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 22)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyPercentageScanLimit"), ("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyLearningLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisSourceOnlyLimitGroup = cisSourceOnlyLimitGroup.setStatus('current')
cisRateLimitGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 23)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisRateLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisRateLimitGroup2 = cisRateLimitGroup2.setStatus('current')
cisVlanConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 24)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisVlanReportSuppressionEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanLeaveQueryInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisVlanConfigGroup2 = cisVlanConfigGroup2.setStatus('current')
cisSourceOnlyAgeTimerInSecGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 25)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyLearningEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisSourceOnlyEntryAgingTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisSourceOnlyAgeTimerInSecGroup = cisSourceOnlyAgeTimerInSecGroup.setStatus('current')
cisMulticastGroupInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 26)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupGroupType"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupIgmpVersion"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupSourceUpTime"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupSourceExpires"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupInclHostCount"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupExclHostCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisMulticastGroupInfoGroup = cisMulticastGroupInfoGroup.setStatus('current')
cisMulticastGroupPortInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 27)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupPortList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisMulticastGroupPortInfoGroup = cisMulticastGroupPortInfoGroup.setStatus('current')
cisMulticastGroupConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 28)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfPortList"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfStorageType"), ("CISCO-IGMP-SNOOPING-MIB", "cisMulticastGroupConfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisMulticastGroupConfigGroup = cisMulticastGroupConfigGroup.setStatus('current')
cisMulticastRouterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 29)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisMcastRouterConfigRouterType"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastRouterConfigStorageType"), ("CISCO-IGMP-SNOOPING-MIB", "cisMcastRouterConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisMulticastRouterConfigGroup = cisMulticastRouterConfigGroup.setStatus('current')
cisLeaveQueryConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 30)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisLastMemberQueryCount"), ("CISCO-IGMP-SNOOPING-MIB", "cisLastMemberQueryInterval"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanLastMemberQueryCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisLeaveQueryConfigGroup = cisLeaveQueryConfigGroup.setStatus('current')
cisQuerierGlobalConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 31)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisQuerierEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierTcnQueryInterval"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierTimerExpiry"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierMaxResponseTime"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierQueryInterval"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierAddressType"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierAddress"), ("CISCO-IGMP-SNOOPING-MIB", "cisQuerierVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisQuerierGlobalConfigGroup = cisQuerierGlobalConfigGroup.setStatus('current')
cisIgmpQuerierConfigExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 32)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierTcnQueryCount"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierTcnQueryInterval"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierTimerExpiry"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierMaxResponseTime"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierQueryInterval"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierAdminAddressType"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierAdminAddress"), ("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierAdminVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIgmpQuerierConfigExtGroup = cisIgmpQuerierConfigExtGroup.setStatus('current')
cisRobustnessConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 33)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisRobustnessVariable"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanRobustnessVariable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisRobustnessConfigGroup = cisRobustnessConfigGroup.setStatus('current')
cisTimeToLiveConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 34)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisTimeToLiveCheckEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanTimeToLiveCheckEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisTimeToLiveConfigGroup = cisTimeToLiveConfigGroup.setStatus('current')
cisRouterAlertConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 35)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisRouterAlertCheckEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanRouterAlertCheckEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisRouterAlertConfigGroup = cisRouterAlertConfigGroup.setStatus('current')
cisVlanExplicitTrackingCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 36)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisVlanExplicitTrackingEnabled"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanExplicitTrackingLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisVlanExplicitTrackingCfgGroup = cisVlanExplicitTrackingCfgGroup.setStatus('current')
cisIfLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 37)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitMax"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitExcludeAccessGrp"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitStorageType"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIfLimitGroup = cisIfLimitGroup.setStatus('current')
cisIfLimitTotalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 38)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitTotalLimitMax"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitTotalExcludeAccessGrp"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitTotalStorageType"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfLimitTotalRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIfLimitTotalGroup = cisIfLimitTotalGroup.setStatus('current')
cisIfAccessGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 39)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIfAccessGroupsChannelsAllowed"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfAccessGroupStorageType"), ("CISCO-IGMP-SNOOPING-MIB", "cisIfAccessGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisIfAccessGroupGroup = cisIfAccessGroupGroup.setStatus('current')
cisVlanFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 40)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisVlanFilterAccessGroup"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanFilterLimitMax"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanFilterLimitExclAccessGrp"), ("CISCO-IGMP-SNOOPING-MIB", "cisVlanFilterMinVersionAllowed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisVlanFilterConfigGroup = cisVlanFilterConfigGroup.setStatus('current')
cisFilterStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 41)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisFilterAccessGroupDenied"), ("CISCO-IGMP-SNOOPING-MIB", "cisFilterLimitDenied"), ("CISCO-IGMP-SNOOPING-MIB", "cisFilterTotalLimitDenied"), ("CISCO-IGMP-SNOOPING-MIB", "cisFilterMinVersionDenied"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisFilterStatisticsGroup = cisFilterStatisticsGroup.setStatus('current')
cisQuerierGlobalTcnQueryCountGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 42)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisQuerierTcnQueryCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisQuerierGlobalTcnQueryCountGroup = cisQuerierGlobalTcnQueryCountGroup.setStatus('current')
cisQuerierTcnQueryPendingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 263, 2, 2, 43)).setObjects(("CISCO-IGMP-SNOOPING-MIB", "cisIgmpQuerierTcnQueryPending"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cisQuerierTcnQueryPendingGroup = cisQuerierTcnQueryPendingGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IGMP-SNOOPING-MIB", cisIgmpQuerierConfigExtGroup=cisIgmpQuerierConfigExtGroup, cisV3ProcessEnabledAdminStatus=cisV3ProcessEnabledAdminStatus, cisQuerierGlobalConfigGroup=cisQuerierGlobalConfigGroup, cisInterfaceStatsEntry=cisInterfaceStatsEntry, cisQuerierTcnQueryCount=cisQuerierTcnQueryCount, cisQuerierEnabled=cisQuerierEnabled, cisIgmpQuerierAddressType=cisIgmpQuerierAddressType, ciscoIgmpSnoopingNotification=ciscoIgmpSnoopingNotification, cisFilterStatsEntry=cisFilterStatsEntry, cisMcastRouterConfigTable=cisMcastRouterConfigTable, cisIgmpSnoopingMIBCompliance3=cisIgmpSnoopingMIBCompliance3, cisV2Compliance=cisV2Compliance, cisIgmpQuerierTable=cisIgmpQuerierTable, cisV3StatsGroup=cisV3StatsGroup, cisMcastGroupPortList=cisMcastGroupPortList, cisMulticastGroupPortListEntry=cisMulticastGroupPortListEntry, cisTopoChangeFloodQueryCount=cisTopoChangeFloodQueryCount, cisIfLimitGroup=cisIfLimitGroup, cisVlanRobustnessVariable=cisVlanRobustnessVariable, cisV3Compliance=cisV3Compliance, cisIfLimitMax=cisIfLimitMax, cisLastMemberQueryCount=cisLastMemberQueryCount, cisIfLimitTotalLimitMax=cisIfLimitTotalLimitMax, cisVlanFilterMinVersionAllowed=cisVlanFilterMinVersionAllowed, cisPimV2RateLimit=cisPimV2RateLimit, cisRxReports=cisRxReports, cisV3SnoopingSupport=cisV3SnoopingSupport, cisIfConfigGroup=cisIfConfigGroup, cisRxGroupSpecificQueries=cisRxGroupSpecificQueries, cisMulticastGroupSourceAddress=cisMulticastGroupSourceAddress, cisVlanFilterLimitMax=cisVlanFilterLimitMax, cisVlanExplicitTrackingLimit=cisVlanExplicitTrackingLimit, cisIgmpQuerierEntry=cisIgmpQuerierEntry, cisIgmpQuerierInterface=cisIgmpQuerierInterface, cisTxGeneralQueries=cisTxGeneralQueries, cisVlanConfigInfo=cisVlanConfigInfo, cisMulticastGroupCeVlanIndex=cisMulticastGroupCeVlanIndex, cisMcastGroupIgmpVersion=cisMcastGroupIgmpVersion, cisMulticastGroupInfoGroup=cisMulticastGroupInfoGroup, cisTimeToLiveConfigGroup=cisTimeToLiveConfigGroup, cisIfLimitExcludeAccessGrp=cisIfLimitExcludeAccessGrp, cisFilterStatsTable=cisFilterStatsTable, cisAdminMode=cisAdminMode, cisFilterMinVersionDenied=cisFilterMinVersionDenied, cisV3ToIncluded=cisV3ToIncluded, cisIfAccessGroupEntry=cisIfAccessGroupEntry, cisMIBCompliances=cisMIBCompliances, cisV3ProcessEnabledOperStatus=cisV3ProcessEnabledOperStatus, cisLeaveQueryConfigGroup=cisLeaveQueryConfigGroup, cisQuerierQueryInterval=cisQuerierQueryInterval, cisVlanIgmpSnoopingEnabled=cisVlanIgmpSnoopingEnabled, cisIfLimitEntry=cisIfLimitEntry, cisFilterTotalLimitDenied=cisFilterTotalLimitDenied, cisIgmpQuerierMaxResponseTime=cisIgmpQuerierMaxResponseTime, cisMulticastGroupPortList=cisMulticastGroupPortList, cisEntryTrackingLimit=cisEntryTrackingLimit, cisVlanRouterAlertCheckEnabled=cisVlanRouterAlertCheckEnabled, cisVlanExplicitTrackingEntry=cisVlanExplicitTrackingEntry, cisVlanFilterConfigEntry=cisVlanFilterConfigEntry, cisIgmpQuerierEnabled=cisIgmpQuerierEnabled, PYSNMP_MODULE_ID=ciscoIgmpSnoopingMIB, cisMcastRouterVlanIndex=cisMcastRouterVlanIndex, cisL2EntryLimit=cisL2EntryLimit, cisVlanConfigGroup2=cisVlanConfigGroup2, cisExtConfig1Group=cisExtConfig1Group, cisReportSuppressionEnabled=cisReportSuppressionEnabled, cisRxInvalidPackets=cisRxInvalidPackets, cisSystemInfo=cisSystemInfo, cisMcastGroupIncludeHostCount=cisMcastGroupIncludeHostCount, cisMulticastGroupConfSourceAddress=cisMulticastGroupConfSourceAddress, cisMulticastGroupConfStorageType=cisMulticastGroupConfStorageType, cisMulticastGroupConfCeVlanIndex=cisMulticastGroupConfCeVlanIndex, cisIgmpSnoopingEnabled=cisIgmpSnoopingEnabled, cisVlanConfigTable=cisVlanConfigTable, cisMulticastGroupExclHostCount=cisMulticastGroupExclHostCount, cisVlanConfigEntry=cisVlanConfigEntry, cisSystemGroup=cisSystemGroup, cisMulticastGroupConfigEntry=cisMulticastGroupConfigEntry, cisMulticastGroupConfVlanIndex=cisMulticastGroupConfVlanIndex, ciscoIgmpSnoopingMIBObject=ciscoIgmpSnoopingMIBObject, cisIgmpQuerierVlanIndex=cisIgmpQuerierVlanIndex, cisIfConfigEntry=cisIfConfigEntry, cisQuerierTimerExpiry=cisQuerierTimerExpiry, cisMcastRouterRowStatus=cisMcastRouterRowStatus, cisIfLimitTotalStorageType=cisIfLimitTotalStorageType, cisQuerierAddress=cisQuerierAddress, cisMcastRouterType=cisMcastRouterType, cisMulticastGroupPortListTable=cisMulticastGroupPortListTable, cisExplicitTrackingInfo=cisExplicitTrackingInfo, cisTxReports=cisTxReports, cisV3IsExcluded=cisV3IsExcluded, cisSourceOnlyLearningEnabled=cisSourceOnlyLearningEnabled, cisMulticastGroupSourceExpires=cisMulticastGroupSourceExpires, cisIfAccessGroupVlan=cisIfAccessGroupVlan, cisIfAccessGroupStorageType=cisIfAccessGroupStorageType, cisMcastRouterCfgEntry=cisMcastRouterCfgEntry, cisIgmpQuerierState=cisIgmpQuerierState, cisIgmpQuerierTimerExpiry=cisIgmpQuerierTimerExpiry, cisMulticastGroupAddressType=cisMulticastGroupAddressType, cisIgmpQuerierInfoGroup=cisIgmpQuerierInfoGroup, cisQuerierAddressType=cisQuerierAddressType, cisSourceOnlyEntryAgeTime=cisSourceOnlyEntryAgeTime, cisIgmpQuerierConfigGroup=cisIgmpQuerierConfigGroup, cisMulticastRouterConfigGroup=cisMulticastRouterConfigGroup, cisMcastRouterCfgTable=cisMcastRouterCfgTable, cisOperMode=cisOperMode, cisFallbackTime=cisFallbackTime, cisIgmpQuerierAddress=cisIgmpQuerierAddress, cisSystemV2Group=cisSystemV2Group, cisIgmpQuerierAdminVersion=cisIgmpQuerierAdminVersion, CisIgmpVersion=CisIgmpVersion, cisMulticastGroupEntry=cisMulticastGroupEntry, cisRateLimitInfo=cisRateLimitInfo, cisMIBGroups=cisMIBGroups, cisGlobalSourceOnlyLearnGroup=cisGlobalSourceOnlyLearnGroup, cisMcastGroupFilterMode=cisMcastGroupFilterMode, cisVlanExplicitTrackingCfgGroup=cisVlanExplicitTrackingCfgGroup, cisIfLimitRowStatus=cisIfLimitRowStatus, cisRxMACGeneralQueries=cisRxMACGeneralQueries, cisMcastGroupVlanIndex=cisMcastGroupVlanIndex, cisMcastRouterConfigEntry=cisMcastRouterConfigEntry, cisIgmpSnoopingMIBCompliance=cisIgmpSnoopingMIBCompliance, cisRateLimitGroup2=cisRateLimitGroup2, cisVlanIgmpSnoopingLearningMode=cisVlanIgmpSnoopingLearningMode, cisDvmrpRateLimit=cisDvmrpRateLimit, cisSystemV3Group=cisSystemV3Group, cisRxOtherPackets=cisRxOtherPackets, cisFastLeaveEnabled=cisFastLeaveEnabled, cisSourceOnlyLimitGroup=cisSourceOnlyLimitGroup, cisMcastRouterConfigRouterType=cisMcastRouterConfigRouterType, cisIfLimitVlanNumber=cisIfLimitVlanNumber, cisStatisticsInfo=cisStatisticsInfo, cisMcastGroupAddressType=cisMcastGroupAddressType, cisRateLimitGroup=cisRateLimitGroup, cisRxLeaves=cisRxLeaves, cisFilteringInfo=cisFilteringInfo, cisIgmpQuerierQueryInterval=cisIgmpQuerierQueryInterval, cisMulticastGroupVlanIndex=cisMulticastGroupVlanIndex, cisQuerierConfigInfo=cisQuerierConfigInfo, cisMospf2RateLimit=cisMospf2RateLimit, cisRxTopoNotifications=cisRxTopoNotifications, cisIfLimitTotalRowStatus=cisIfLimitTotalRowStatus, cisStatsGroup=cisStatsGroup, cisMulticastGroupAddress=cisMulticastGroupAddress, cisMcastRouterConfigStorageType=cisMcastRouterConfigStorageType, cisMulticastGroupTable=cisMulticastGroupTable, cisAddressAliasingMode=cisAddressAliasingMode, cisVlanExplicitTrackingEnabled=cisVlanExplicitTrackingEnabled, cisVlanFilterConfigTable=cisVlanFilterConfigTable, cisQuerierTcnQueryInterval=cisQuerierTcnQueryInterval, cisTrackingLimitGroup=cisTrackingLimitGroup, cisVlanFilterAccessGroup=cisVlanFilterAccessGroup, CisIgmpMode=CisIgmpMode, cisMulticastRouterInfo=cisMulticastRouterInfo, cisMulticastGroupConfigGroup=cisMulticastGroupConfigGroup, cisQuerierTcnQueryPendingGroup=cisQuerierTcnQueryPendingGroup, cisVlanIgmpSnoopingOperMode=cisVlanIgmpSnoopingOperMode, cisMcastGroupEntry=cisMcastGroupEntry, cisRxGeneralQueries=cisRxGeneralQueries, cisIfLimitTotalTable=cisIfLimitTotalTable, cisTimeToLiveCheckEnabled=cisTimeToLiveCheckEnabled, cisRobustnessConfigGroup=cisRobustnessConfigGroup, cisMulticastGroupPortInfoGroup=cisMulticastGroupPortInfoGroup, cisRouterAlertCheckEnabled=cisRouterAlertCheckEnabled, cisMulticastGroupConfigTable=cisMulticastGroupConfigTable, cisRateLimit=cisRateLimit, cisMcastRouterConfigVlanIndex=cisMcastRouterConfigVlanIndex, cisTxGroupSpecificQueries=cisTxGroupSpecificQueries, cisRouterAlertConfigGroup=cisRouterAlertConfigGroup, cisMcastGroupAddress=cisMcastGroupAddress, ciscoIgmpSnoopingMIB=ciscoIgmpSnoopingMIB, cisV3IsIncluded=cisV3IsIncluded, cisMulticastGroupInfo=cisMulticastGroupInfo, cisMcastGroupInfoGroup=cisMcastGroupInfoGroup, cisTopoChangeQuerySolicitEnabled=cisTopoChangeQuerySolicitEnabled, cisMulticastGroupPortRangeIndex=cisMulticastGroupPortRangeIndex, cisResourceLimitInfo=cisResourceLimitInfo, cisVlanReportSuppressionEnabled=cisVlanReportSuppressionEnabled, cisV3ToExcluded=cisV3ToExcluded, cisRxValidPackets=cisRxValidPackets, cisMulticastGroupConfAddressType=cisMulticastGroupConfAddressType, cisVlanConfigGroup=cisVlanConfigGroup, cisQuerierGlobalTcnQueryCountGroup=cisQuerierGlobalTcnQueryCountGroup, cisBaseConfigGroup=cisBaseConfigGroup, cisQuerierMaxResponseTime=cisQuerierMaxResponseTime, cisRobustnessVariable=cisRobustnessVariable, cisIfLimitTotalExcludeAccessGrp=cisIfLimitTotalExcludeAccessGrp, cisVlanTimeToLiveCheckEnabled=cisVlanTimeToLiveCheckEnabled, cisIgmpQuerierTcnQueryCount=cisIgmpQuerierTcnQueryCount, cisIfTopoChangeFloodEnabled=cisIfTopoChangeFloodEnabled, cisFilterStatsVlanNumber=cisFilterStatsVlanNumber, cisExtConfig2Group=cisExtConfig2Group, cisIgmpQuerierTcnQueryInterval=cisIgmpQuerierTcnQueryInterval, cisFilterStatisticsGroup=cisFilterStatisticsGroup, cisMulticastGroupInclHostCount=cisMulticastGroupInclHostCount, cisGlobalIgmpV3InfoGroup=cisGlobalIgmpV3InfoGroup, cisMcastRouterConfigRowStatus=cisMcastRouterConfigRowStatus, cisIfAccessGroupRowStatus=cisIfAccessGroupRowStatus, cisIfAccessGroupGroup=cisIfAccessGroupGroup, cisVlanIndex=cisVlanIndex, cisLastMemberQueryInterval=cisLastMemberQueryInterval, cisL2EntryLimitGroup=cisL2EntryLimitGroup, cisGeneralQueryRateLimit=cisGeneralQueryRateLimit, cisTxLeaves=cisTxLeaves, cisMulticastGroupConfRowStatus=cisMulticastGroupConfRowStatus, cisGlobalIgmpV3ConfigGroup=cisGlobalIgmpV3ConfigGroup, cisIfLimitTable=cisIfLimitTable, cisIfAccessGroupsChannelsAllowed=cisIfAccessGroupsChannelsAllowed, cisIfConfigInfo=cisIfConfigInfo, cisMulticastGroupGroupType=cisMulticastGroupGroupType, cisMIBConformance=cisMIBConformance, cisLeaveQueryType=cisLeaveQueryType, cisSourceOnlyLearningLimit=cisSourceOnlyLearningLimit, cisMulticastGroupConfPortRange=cisMulticastGroupConfPortRange, cisMcastRouterConfigGroup=cisMcastRouterConfigGroup, cisIfAccessGroupTable=cisIfAccessGroupTable, cisIgmpQuerierVersion=cisIgmpQuerierVersion, cisFilterAccessGroupDenied=cisFilterAccessGroupDenied, cisIfLimitTotalGroup=cisIfLimitTotalGroup, cisVlanExplicitTrackingTable=cisVlanExplicitTrackingTable, cisVlanLastMemberQueryCount=cisVlanLastMemberQueryCount, cisIgmpQuerierAdminAddress=cisIgmpQuerierAdminAddress, cisSourceOnlyPercentageScanLimit=cisSourceOnlyPercentageScanLimit, cisIfLimitStorageType=cisIfLimitStorageType, cisIgmpQuerierTcnQueryPending=cisIgmpQuerierTcnQueryPending, cisVlanFilterConfigGroup=cisVlanFilterConfigGroup, cisFilterLimitDenied=cisFilterLimitDenied, cisFastBlockEnabled=cisFastBlockEnabled, cisVlanFastLeaveEnabled=cisVlanFastLeaveEnabled, cisMulticastGroupIgmpVersion=cisMulticastGroupIgmpVersion, cisMospf1RateLimit=cisMospf1RateLimit, cisMcastGroupExcludeHostCount=cisMcastGroupExcludeHostCount, cisQuerierVersion=cisQuerierVersion, cisMulticastGroupConfPortList=cisMulticastGroupConfPortList, cisV3Blocks=cisV3Blocks, cisSourceOnlyEntryAgingTime=cisSourceOnlyEntryAgingTime, cisIfLimitTotalEntry=cisIfLimitTotalEntry, cisVlanFilterLimitExclAccessGrp=cisVlanFilterLimitExclAccessGrp, cisIfConfigTable=cisIfConfigTable, cisIgmpSnoopingMIBCompliance2=cisIgmpSnoopingMIBCompliance2, cisGlobalTcnGroup=cisGlobalTcnGroup, cisV3Allows=cisV3Allows, cisMcastGroupTable=cisMcastGroupTable, cisInterfaceStatsTable=cisInterfaceStatsTable, cisVlanLeaveQueryInterval=cisVlanLeaveQueryInterval, cisIgmpQuerierAdminAddressType=cisIgmpQuerierAdminAddressType, cisMulticastGroupConfAddress=cisMulticastGroupConfAddress, cisMulticastGroupSourceUpTime=cisMulticastGroupSourceUpTime, cisSourceOnlyAgeTimerInSecGroup=cisSourceOnlyAgeTimerInSecGroup)
