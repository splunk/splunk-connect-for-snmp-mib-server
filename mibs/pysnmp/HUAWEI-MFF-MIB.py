#
# PySNMP MIB module HUAWEI-MFF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MFF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:34:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, Counter64, Integer32, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, Counter32, Gauge32, Bits, ModuleIdentity, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "Integer32", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "Counter32", "Gauge32", "Bits", "ModuleIdentity", "IpAddress", "ObjectIdentity")
RowStatus, TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "MacAddress", "DisplayString")
hwMffMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170))
hwMffMIB.setRevisions(('2008-07-02 18:00',))
if mibBuilder.loadTexts: hwMffMIB.setLastUpdated('200807021800Z')
if mibBuilder.loadTexts: hwMffMIB.setOrganization('Huawei Technologies co., Ltd.')
hwMffObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1))
hwMffGlobal = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMffGlobal.setStatus('current')
hwMffVlanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2), )
if mibBuilder.loadTexts: hwMffVlanCfgTable.setStatus('current')
hwMffVlanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffVlanIndex"))
if mibBuilder.loadTexts: hwMffVlanCfgEntry.setStatus('current')
hwMffVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1, 1), VlanId())
if mibBuilder.loadTexts: hwMffVlanIndex.setStatus('current')
hwMffStaticGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffStaticGatewayIpAddr.setStatus('current')
hwMffGatewayDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1, 3), EnabledStatus().clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffGatewayDetect.setStatus('current')
hwMffVlanCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 2, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffVlanCfgRowStatus.setStatus('current')
hwMffNetworkPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 3), )
if mibBuilder.loadTexts: hwMffNetworkPortTable.setStatus('current')
hwMffNetworkPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 3, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffPortIndex"))
if mibBuilder.loadTexts: hwMffNetworkPortEntry.setStatus('current')
hwMffPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwMffPortIndex.setStatus('current')
hwMffNetworkPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 3, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffNetworkPortRowStatus.setStatus('current')
hwMffServerCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4), )
if mibBuilder.loadTexts: hwMffServerCfgTable.setStatus('current')
hwMffServerCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffServerVlanIndex"), (0, "HUAWEI-MFF-MIB", "hwMffIpIndex"))
if mibBuilder.loadTexts: hwMffServerCfgEntry.setStatus('current')
hwMffServerVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: hwMffServerVlanIndex.setStatus('current')
hwMffIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwMffIpIndex.setStatus('current')
hwMffServerIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 4, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffServerIpRowStatus.setStatus('current')
hwMffUserGatewayTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5), )
if mibBuilder.loadTexts: hwMffUserGatewayTable.setStatus('current')
hwMffUserGatewayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffUserGatewayVlanIndex"), (0, "HUAWEI-MFF-MIB", "hwMffUserIpIndex"), (0, "HUAWEI-MFF-MIB", "hwMffGatewayIpIndex"))
if mibBuilder.loadTexts: hwMffUserGatewayEntry.setStatus('current')
hwMffUserGatewayVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 1), VlanId())
if mibBuilder.loadTexts: hwMffUserGatewayVlanIndex.setStatus('current')
hwMffUserIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwMffUserIpIndex.setStatus('current')
hwMffGatewayIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwMffGatewayIpIndex.setStatus('current')
hwMffUserMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 20), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMffUserMacAddr.setStatus('current')
hwMffGatewayMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 5, 1, 21), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMffGatewayMacAddr.setStatus('current')
hwMffModUserTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6), )
if mibBuilder.loadTexts: hwMffModUserTable.setStatus('current')
hwMffModUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1), ).setIndexNames((0, "HUAWEI-MFF-MIB", "hwMffModUserVlanIndex"), (0, "HUAWEI-MFF-MIB", "hwMffModUserIpAddrIndex"))
if mibBuilder.loadTexts: hwMffModUserEntry.setStatus('current')
hwMffModUserVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 1), VlanId())
if mibBuilder.loadTexts: hwMffModUserVlanIndex.setStatus('current')
hwMffModUserIpAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwMffModUserIpAddrIndex.setStatus('current')
hwMffModUserMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserMacAddr.setStatus('current')
hwMffModUserPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserPort.setStatus('current')
hwMffModUserGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserGatewayIp.setStatus('current')
hwMffModUserGatewayMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 6), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserGatewayMacAddr.setStatus('current')
hwMffModUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 1, 6, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMffModUserRowStatus.setStatus('current')
hwMffConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2))
hwMffCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 1))
hwMffCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 1, 1)).setObjects(("HUAWEI-MFF-MIB", "hwMffVlanCfgGroup"), ("HUAWEI-MFF-MIB", "hwMffNetworkPortGroup"), ("HUAWEI-MFF-MIB", "hwMffServerCfgGroup"), ("HUAWEI-MFF-MIB", "hwMffUserGatewayGroup"), ("HUAWEI-MFF-MIB", "hwMffModUserGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffCompliance = hwMffCompliance.setStatus('current')
hwMffMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2))
hwMffGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 1)).setObjects(("HUAWEI-MFF-MIB", "hwMffGlobal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffGlobalGroup = hwMffGlobalGroup.setStatus('current')
hwMffVlanCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 2)).setObjects(("HUAWEI-MFF-MIB", "hwMffStaticGatewayIpAddr"), ("HUAWEI-MFF-MIB", "hwMffGatewayDetect"), ("HUAWEI-MFF-MIB", "hwMffVlanCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffVlanCfgGroup = hwMffVlanCfgGroup.setStatus('current')
hwMffNetworkPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 3)).setObjects(("HUAWEI-MFF-MIB", "hwMffNetworkPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffNetworkPortGroup = hwMffNetworkPortGroup.setStatus('current')
hwMffServerCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 4)).setObjects(("HUAWEI-MFF-MIB", "hwMffServerIpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffServerCfgGroup = hwMffServerCfgGroup.setStatus('current')
hwMffUserGatewayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 5)).setObjects(("HUAWEI-MFF-MIB", "hwMffUserMacAddr"), ("HUAWEI-MFF-MIB", "hwMffGatewayMacAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffUserGatewayGroup = hwMffUserGatewayGroup.setStatus('current')
hwMffModUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 170, 2, 2, 6)).setObjects(("HUAWEI-MFF-MIB", "hwMffModUserMacAddr"), ("HUAWEI-MFF-MIB", "hwMffModUserPort"), ("HUAWEI-MFF-MIB", "hwMffModUserGatewayIp"), ("HUAWEI-MFF-MIB", "hwMffModUserGatewayMacAddr"), ("HUAWEI-MFF-MIB", "hwMffModUserRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMffModUserGroup = hwMffModUserGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-MFF-MIB", hwMffMIB=hwMffMIB, hwMffUserGatewayGroup=hwMffUserGatewayGroup, hwMffUserMacAddr=hwMffUserMacAddr, PYSNMP_MODULE_ID=hwMffMIB, hwMffModUserTable=hwMffModUserTable, hwMffModUserGroup=hwMffModUserGroup, hwMffUserGatewayVlanIndex=hwMffUserGatewayVlanIndex, hwMffModUserMacAddr=hwMffModUserMacAddr, hwMffServerVlanIndex=hwMffServerVlanIndex, hwMffVlanCfgEntry=hwMffVlanCfgEntry, hwMffModUserPort=hwMffModUserPort, hwMffCompliance=hwMffCompliance, hwMffServerCfgEntry=hwMffServerCfgEntry, hwMffIpIndex=hwMffIpIndex, hwMffModUserEntry=hwMffModUserEntry, hwMffStaticGatewayIpAddr=hwMffStaticGatewayIpAddr, hwMffUserGatewayEntry=hwMffUserGatewayEntry, hwMffGlobalGroup=hwMffGlobalGroup, hwMffCompliances=hwMffCompliances, hwMffVlanCfgRowStatus=hwMffVlanCfgRowStatus, hwMffNetworkPortRowStatus=hwMffNetworkPortRowStatus, hwMffObjects=hwMffObjects, hwMffServerCfgGroup=hwMffServerCfgGroup, hwMffVlanCfgGroup=hwMffVlanCfgGroup, hwMffModUserGatewayIp=hwMffModUserGatewayIp, hwMffModUserRowStatus=hwMffModUserRowStatus, hwMffGatewayIpIndex=hwMffGatewayIpIndex, hwMffNetworkPortTable=hwMffNetworkPortTable, hwMffGatewayMacAddr=hwMffGatewayMacAddr, hwMffVlanIndex=hwMffVlanIndex, hwMffGlobal=hwMffGlobal, hwMffMIBGroups=hwMffMIBGroups, hwMffUserGatewayTable=hwMffUserGatewayTable, hwMffServerIpRowStatus=hwMffServerIpRowStatus, hwMffNetworkPortEntry=hwMffNetworkPortEntry, hwMffGatewayDetect=hwMffGatewayDetect, hwMffModUserVlanIndex=hwMffModUserVlanIndex, hwMffConformance=hwMffConformance, hwMffNetworkPortGroup=hwMffNetworkPortGroup, hwMffUserIpIndex=hwMffUserIpIndex, hwMffModUserGatewayMacAddr=hwMffModUserGatewayMacAddr, hwMffServerCfgTable=hwMffServerCfgTable, hwMffModUserIpAddrIndex=hwMffModUserIpAddrIndex, hwMffVlanCfgTable=hwMffVlanCfgTable, hwMffPortIndex=hwMffPortIndex)
