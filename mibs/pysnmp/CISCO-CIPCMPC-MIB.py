#
# PySNMP MIB module CISCO-CIPCMPC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CIPCMPC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:35:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
cipCardEntryIndex, cipCardDtrBrdIndex, cipCardSubChannelIndex = mibBuilder.importSymbols("CISCO-CHANNEL-MIB", "cipCardEntryIndex", "cipCardDtrBrdIndex", "cipCardSubChannelIndex")
ChannelPath, ChannelDevice = mibBuilder.importSymbols("CISCO-CIPCSNA-MIB", "ChannelPath", "ChannelDevice")
ChannelTgName, = mibBuilder.importSymbols("CISCO-CIPTG-MIB", "ChannelTgName")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, Counter64, MibIdentifier, Bits, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, TimeTicks, Counter32, NotificationType, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "MibIdentifier", "Bits", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "TimeTicks", "Counter32", "NotificationType", "IpAddress", "ModuleIdentity")
DisplayString, TimeStamp, TDomain, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TDomain", "TextualConvention", "RowStatus")
ciscoCipCmpcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 72))
ciscoCipCmpcMIB.setRevisions(('1999-01-25 00:00', '1998-01-06 00:00', '1997-02-09 00:00',))
if mibBuilder.loadTexts: ciscoCipCmpcMIB.setLastUpdated('9901250000Z')
if mibBuilder.loadTexts: ciscoCipCmpcMIB.setOrganization('cisco IBU Engineering Working Group')
cipCmpcObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 72, 1))
cipCmpcSubChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1))
cipCmpcTg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2))
cipCmpcSubChannelAdminTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 1), )
if mibBuilder.loadTexts: cipCmpcSubChannelAdminTable.setStatus('current')
cipCmpcSubChannelAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-CHANNEL-MIB", "cipCardEntryIndex"), (0, "CISCO-CHANNEL-MIB", "cipCardDtrBrdIndex"), (0, "CISCO-CHANNEL-MIB", "cipCardSubChannelIndex"))
if mibBuilder.loadTexts: cipCmpcSubChannelAdminEntry.setStatus('current')
cipCmpcSubChannelAdminPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 1, 1, 1), ChannelPath()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipCmpcSubChannelAdminPath.setStatus('current')
cipCmpcSubChannelAdminDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 1, 1, 2), ChannelDevice()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipCmpcSubChannelAdminDevice.setStatus('current')
cipCmpcSubChannelAdminTgName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 1, 1, 3), ChannelTgName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipCmpcSubChannelAdminTgName.setStatus('current')
cipCmpcSubChannelAdminDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("read", 1), ("write", 2), ("readOrWrite", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipCmpcSubChannelAdminDirection.setStatus('current')
cipCmpcSubChannelAdminTgTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 1, 1, 5), TDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcSubChannelAdminTgTransport.setStatus('current')
cipCmpcSubChannelAdminRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipCmpcSubChannelAdminRowStatus.setStatus('current')
cipCmpcSubChannelOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 2), )
if mibBuilder.loadTexts: cipCmpcSubChannelOperTable.setStatus('current')
cipCmpcSubChannelOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 2, 1), )
cipCmpcSubChannelAdminEntry.registerAugmentions(("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelOperEntry"))
cipCmpcSubChannelOperEntry.setIndexNames(*cipCmpcSubChannelAdminEntry.getIndexNames())
if mibBuilder.loadTexts: cipCmpcSubChannelOperEntry.setStatus('current')
cipCmpcSubChannelOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("shutdown", 1), ("inactive", 2), ("xid2Pending", 3), ("active", 4), ("activePlus", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcSubChannelOperState.setStatus('current')
cipCmpcSubChannelOperMaxbfru = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcSubChannelOperMaxbfru.setStatus('current')
cipCmpcTgOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 1), )
if mibBuilder.loadTexts: cipCmpcTgOperTable.setStatus('current')
cipCmpcTgOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CIPCMPC-MIB", "cipCmpcTgOperName"))
if mibBuilder.loadTexts: cipCmpcTgOperEntry.setStatus('current')
cipCmpcTgOperName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 1, 1, 1), ChannelTgName())
if mibBuilder.loadTexts: cipCmpcTgOperName.setStatus('current')
cipCmpcTgOperLastSeqNumFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("blockSeqError", 2), ("sweepSeqError", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgOperLastSeqNumFailureCause.setStatus('current')
cipCmpcTgOperLastSeqNumFailureTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgOperLastSeqNumFailureTime.setStatus('current')
cipCmpcTgOperExpectedReceiveSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgOperExpectedReceiveSeqNum.setStatus('current')
cipCmpcTgOperLastSeqNumReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgOperLastSeqNumReceived.setStatus('current')
cipCmpcTgOperLastSeqNumSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgOperLastSeqNumSent.setStatus('current')
cipCmpcTgStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2), )
if mibBuilder.loadTexts: cipCmpcTgStatsTable.setStatus('current')
cipCmpcTgStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1), )
cipCmpcTgOperEntry.registerAugmentions(("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsEntry"))
cipCmpcTgStatsEntry.setIndexNames(*cipCmpcTgOperEntry.getIndexNames())
if mibBuilder.loadTexts: cipCmpcTgStatsEntry.setStatus('current')
cipCmpcTgStatsConnectReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsConnectReqs.setStatus('current')
cipCmpcTgStatsConnectInds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsConnectInds.setStatus('current')
cipCmpcTgStatsConnectRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsConnectRsps.setStatus('current')
cipCmpcTgStatsConnectCnfms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsConnectCnfms.setStatus('current')
cipCmpcTgStatsDiscReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsDiscReqs.setStatus('current')
cipCmpcTgStatsDiscInds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsDiscInds.setStatus('current')
cipCmpcTgStatsSweepReqsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsSweepReqsIn.setStatus('current')
cipCmpcTgStatsSweepReqsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsSweepReqsOut.setStatus('current')
cipCmpcTgStatsSweepRspsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsSweepRspsIn.setStatus('current')
cipCmpcTgStatsSweepRspsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsSweepRspsOut.setStatus('current')
cipCmpcTgStatsWraps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 72, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cipCmpcTgStatsWraps.setStatus('current')
cipCmpcNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 72, 2))
cipCmpcNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 72, 2, 0))
cipCmpcDirectionMismatch = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 72, 2, 0, 1)).setObjects(("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelAdminDirection"))
if mibBuilder.loadTexts: cipCmpcDirectionMismatch.setStatus('current')
cipCmpcSeqNumError = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 72, 2, 0, 2)).setObjects(("CISCO-CIPCMPC-MIB", "cipCmpcTgOperLastSeqNumFailureCause"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgOperExpectedReceiveSeqNum"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgOperLastSeqNumReceived"))
if mibBuilder.loadTexts: cipCmpcSeqNumError.setStatus('current')
ciscoCipCmpcMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 72, 3))
ciscoCipCmpcMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 72, 3, 1))
ciscoCipCmpcMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 72, 3, 2))
ciscoCipCmpcMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 72, 3, 1, 1)).setObjects(("CISCO-CIPCMPC-MIB", "ciscoCipCmpcSubChannelGroup"), ("CISCO-CIPCMPC-MIB", "ciscoCipCmpcTgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCipCmpcMibCompliance = ciscoCipCmpcMibCompliance.setStatus('current')
ciscoCipCmpcSubChannelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 72, 3, 2, 1)).setObjects(("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelAdminPath"), ("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelAdminDevice"), ("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelAdminTgName"), ("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelAdminDirection"), ("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelAdminTgTransport"), ("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelAdminRowStatus"), ("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelOperState"), ("CISCO-CIPCMPC-MIB", "cipCmpcSubChannelOperMaxbfru"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCipCmpcSubChannelGroup = ciscoCipCmpcSubChannelGroup.setStatus('current')
ciscoCipCmpcTgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 72, 3, 2, 2)).setObjects(("CISCO-CIPCMPC-MIB", "cipCmpcTgOperLastSeqNumFailureCause"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgOperLastSeqNumFailureTime"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgOperExpectedReceiveSeqNum"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgOperLastSeqNumReceived"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgOperLastSeqNumSent"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsConnectReqs"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsConnectInds"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsConnectRsps"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsConnectCnfms"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsDiscReqs"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsDiscInds"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsSweepReqsIn"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsSweepReqsOut"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsSweepRspsIn"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsSweepRspsOut"), ("CISCO-CIPCMPC-MIB", "cipCmpcTgStatsWraps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCipCmpcTgGroup = ciscoCipCmpcTgGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CIPCMPC-MIB", cipCmpcSubChannelAdminTable=cipCmpcSubChannelAdminTable, cipCmpcSeqNumError=cipCmpcSeqNumError, ciscoCipCmpcMIB=ciscoCipCmpcMIB, cipCmpcNotificationPrefix=cipCmpcNotificationPrefix, cipCmpcTgOperTable=cipCmpcTgOperTable, cipCmpcTgStatsConnectCnfms=cipCmpcTgStatsConnectCnfms, PYSNMP_MODULE_ID=ciscoCipCmpcMIB, ciscoCipCmpcMibConformance=ciscoCipCmpcMibConformance, ciscoCipCmpcTgGroup=ciscoCipCmpcTgGroup, cipCmpcSubChannelAdminTgName=cipCmpcSubChannelAdminTgName, cipCmpcTgStatsSweepRspsIn=cipCmpcTgStatsSweepRspsIn, cipCmpcSubChannelAdminDirection=cipCmpcSubChannelAdminDirection, cipCmpcSubChannelOperEntry=cipCmpcSubChannelOperEntry, cipCmpcTg=cipCmpcTg, cipCmpcTgOperExpectedReceiveSeqNum=cipCmpcTgOperExpectedReceiveSeqNum, cipCmpcSubChannelOperState=cipCmpcSubChannelOperState, cipCmpcTgOperName=cipCmpcTgOperName, cipCmpcTgStatsSweepRspsOut=cipCmpcTgStatsSweepRspsOut, cipCmpcObjects=cipCmpcObjects, ciscoCipCmpcSubChannelGroup=ciscoCipCmpcSubChannelGroup, cipCmpcTgOperLastSeqNumFailureTime=cipCmpcTgOperLastSeqNumFailureTime, cipCmpcTgStatsEntry=cipCmpcTgStatsEntry, cipCmpcTgStatsConnectReqs=cipCmpcTgStatsConnectReqs, cipCmpcSubChannelAdminPath=cipCmpcSubChannelAdminPath, cipCmpcSubChannelAdminDevice=cipCmpcSubChannelAdminDevice, cipCmpcTgOperLastSeqNumReceived=cipCmpcTgOperLastSeqNumReceived, ciscoCipCmpcMibCompliances=ciscoCipCmpcMibCompliances, ciscoCipCmpcMibCompliance=ciscoCipCmpcMibCompliance, cipCmpcTgStatsSweepReqsOut=cipCmpcTgStatsSweepReqsOut, cipCmpcTgStatsSweepReqsIn=cipCmpcTgStatsSweepReqsIn, cipCmpcSubChannel=cipCmpcSubChannel, cipCmpcTgStatsDiscReqs=cipCmpcTgStatsDiscReqs, cipCmpcTgStatsConnectInds=cipCmpcTgStatsConnectInds, cipCmpcTgOperLastSeqNumSent=cipCmpcTgOperLastSeqNumSent, cipCmpcNotifications=cipCmpcNotifications, cipCmpcTgOperLastSeqNumFailureCause=cipCmpcTgOperLastSeqNumFailureCause, cipCmpcTgStatsWraps=cipCmpcTgStatsWraps, cipCmpcDirectionMismatch=cipCmpcDirectionMismatch, cipCmpcTgOperEntry=cipCmpcTgOperEntry, cipCmpcSubChannelAdminEntry=cipCmpcSubChannelAdminEntry, cipCmpcTgStatsTable=cipCmpcTgStatsTable, cipCmpcTgStatsDiscInds=cipCmpcTgStatsDiscInds, cipCmpcSubChannelAdminRowStatus=cipCmpcSubChannelAdminRowStatus, cipCmpcSubChannelAdminTgTransport=cipCmpcSubChannelAdminTgTransport, cipCmpcSubChannelOperTable=cipCmpcSubChannelOperTable, cipCmpcSubChannelOperMaxbfru=cipCmpcSubChannelOperMaxbfru, cipCmpcTgStatsConnectRsps=cipCmpcTgStatsConnectRsps, ciscoCipCmpcMibGroups=ciscoCipCmpcMibGroups)
