#
# PySNMP MIB module DVB-RCS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DVB-RCS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:40:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
Dscp, DscpOrAny = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "Dscp", "DscpOrAny")
InetAddress, InetAddressPrefixLength, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetPortNumber", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, Counter64, Integer32, transmission, MibIdentifier, iso, TimeTicks, Counter32, ModuleIdentity, Bits, NotificationType, ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "Integer32", "transmission", "MibIdentifier", "iso", "TimeTicks", "Counter32", "ModuleIdentity", "Bits", "NotificationType", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
Uri, = mibBuilder.importSymbols("URI-TC-MIB", "Uri")
dvbRcsMib = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 239))
dvbRcsMib.setRevisions(('2009-07-20 12:00',))
if mibBuilder.loadTexts: dvbRcsMib.setLastUpdated('201002161200Z')
if mibBuilder.loadTexts: dvbRcsMib.setOrganization('The SatLabs Group')
class DvbRcsSatLabsProfileMap(TextualConvention, Bits):
    reference = 'SatLabs System Recommendations, available at www.satlabs.org.'
    status = 'current'
    namedValues = NamedValues(("dvbs", 0), ("dvbs2ccm", 1), ("dvbs2acm", 2), ("spare1", 3), ("spare2", 4), ("spare3", 5), ("spare4", 6), ("spare5", 7), ("spare6", 8), ("spare7", 9), ("spare8", 10), ("spare9", 11), ("spare10", 12), ("spare11", 13), ("spare12", 14), ("spare13", 15), ("spare14", 16), ("spare15", 17), ("spare16", 18), ("spare17", 19), ("spare18", 20), ("spare19", 21), ("spare20", 22), ("spare21", 23), ("spare22", 24), ("spare23", 25), ("spare24", 26), ("spare25", 27), ("spare26", 28), ("spare27", 29), ("spare28", 30), ("spare29", 31))

class DvbRcsSatLabsOptionMap(TextualConvention, Bits):
    reference = 'SatLabs System Recommendations, available at www.satlabs.org.'
    status = 'current'
    namedValues = NamedValues(("mpegTrf", 0), ("coarseSync", 1), ("wideHop", 2), ("fastHop", 3), ("dynamicMfTdma", 4), ("contentionSync", 5), ("qpskLow", 6), ("mod16Apsk", 7), ("mod32Apsk", 8), ("normalFec", 9), ("multiTs", 10), ("gsTs", 11), ("enhQoS", 12), ("pep", 13), ("http", 14), ("ftp", 15), ("dns", 16), ("chIdStrict", 17), ("nlid", 18), ("snmpMisc", 19), ("spare1", 20), ("spare2", 21), ("spare3", 22), ("spare4", 23), ("spare5", 24), ("spare6", 25), ("spare7", 26), ("spare8", 27), ("spare9", 28), ("spare10", 29), ("spare11", 30), ("spare12", 31))

class DvbRcsSatLabsFeatureMap(TextualConvention, Bits):
    reference = 'SatLabs System Recommendations, available at www.satlabs.org.'
    status = 'current'
    namedValues = NamedValues(("rcstPara", 0), ("installLog", 1), ("enhClassifier", 2), ("routeId", 3), ("oduList", 4), ("extNetwork", 5), ("extControl", 6), ("extConfig", 7), ("extStatus", 8), ("mpaf", 9), ("spare1", 10), ("spare2", 11), ("spare3", 12), ("spare4", 13), ("spare5", 14), ("spare6", 15), ("spare7", 16), ("spare8", 17), ("spare9", 18), ("spare10", 19), ("spare11", 20), ("spare12", 21), ("spare13", 22), ("spare14", 23), ("spare15", 24), ("spare16", 25), ("spare17", 26), ("spare18", 27), ("spare19", 28), ("spare20", 29), ("spare21", 30), ("spare22", 31))

dvbRcsMibObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1))
dvbRcsConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 2))
dvbRcsRcst = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1))
dvbRcsFwdLink = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 2))
dvbRcsRtnLink = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 3))
dvbRcsRcstSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1))
dvbRcsRcstNetwork = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2))
dvbRcsRcstInstall = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3))
dvbRcsRcstQos = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4))
dvbRcsRcstControl = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5))
dvbRcsRcstState = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6))
dvbRcsFwdConfig = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1))
dvbRcsFwdStatus = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2))
dvbRcsRtnConfig = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 3, 1))
dvbRcsRtnStatus = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 3, 2))
dvbRcsSystemMibRevision = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsSystemMibRevision.setStatus('current')
dvbRcsSystemSatLabsProfilesDeclaration = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 2), DvbRcsSatLabsProfileMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsSystemSatLabsProfilesDeclaration.setStatus('current')
dvbRcsSystemSatLabsOptionsDeclaration = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 3), DvbRcsSatLabsOptionMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsSystemSatLabsOptionsDeclaration.setStatus('current')
dvbRcsSystemSatLabsFeaturesDeclaration = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 4), DvbRcsSatLabsFeatureMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsSystemSatLabsFeaturesDeclaration.setStatus('current')
dvbRcsSystemLocation = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 5), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSystemLocation.setStatus('current')
dvbRcsSystemOduAntennaSize = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 6), Unsigned32()).setUnits('cm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSystemOduAntennaSize.setStatus('current')
dvbRcsSystemOduAntennaGain = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 7), Unsigned32()).setUnits('x0.1 dBi').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSystemOduAntennaGain.setStatus('current')
dvbRcsSystemOduSspa = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 8), Unsigned32()).setUnits('x0.1 W').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSystemOduSspa.setStatus('current')
dvbRcsSystemOduTxType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 9), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSystemOduTxType.setStatus('current')
dvbRcsSystemOduRxType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 10), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSystemOduRxType.setStatus('current')
dvbRcsSystemOduRxBand = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("oduHighRxBand", 0), ("oduLowRxBand", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSystemOduRxBand.setStatus('current')
dvbRcsSystemOduRxLO = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 12), Unsigned32()).setUnits('x100 Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSystemOduRxLO.setStatus('current')
dvbRcsSystemOduTxLO = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 13), Unsigned32()).setUnits('x100 Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSystemOduTxLO.setStatus('current')
dvbRcsSystemIduPep = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 14))
dvbRcsTcpPep = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsTcpPep.setStatus('current')
dvbRcsHttpPep = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsHttpPep.setStatus('current')
dvbRcsOduTx = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 15))
dvbRcsOduRx = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 16))
dvbRcsOduAntenna = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 17))
dvbRcsOduTxTypeTable = MibTable((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 15, 1), )
if mibBuilder.loadTexts: dvbRcsOduTxTypeTable.setStatus('current')
dvbRcsOduTxTypeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 15, 1, 1), ).setIndexNames((0, "DVB-RCS-MIB", "dvbRcsOduTxTypeIndex"))
if mibBuilder.loadTexts: dvbRcsOduTxTypeEntry.setStatus('current')
dvbRcsOduTxTypeIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 15, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: dvbRcsOduTxTypeIndex.setStatus('current')
dvbRcsOduTxTypeDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 15, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsOduTxTypeDescription.setStatus('current')
dvbRcsOduTxType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 15, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsOduTxType.setStatus('current')
dvbRcsOduRxTypeTable = MibTable((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 16, 1), )
if mibBuilder.loadTexts: dvbRcsOduRxTypeTable.setStatus('current')
dvbRcsOduRxTypeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 16, 1, 1), ).setIndexNames((0, "DVB-RCS-MIB", "dvbRcsOduRxTypeIndex"))
if mibBuilder.loadTexts: dvbRcsOduRxTypeEntry.setStatus('current')
dvbRcsOduRxTypeIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 16, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: dvbRcsOduRxTypeIndex.setStatus('current')
dvbRcsOduRxTypeDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 16, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsOduRxTypeDescription.setStatus('current')
dvbRcsOduRxType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 16, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsOduRxType.setStatus('current')
dvbRcsOduAntennaTypeTable = MibTable((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 17, 1), )
if mibBuilder.loadTexts: dvbRcsOduAntennaTypeTable.setStatus('current')
dvbRcsOduAntennaTypeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 17, 1, 1), ).setIndexNames((0, "DVB-RCS-MIB", "dvbRcsOduAntennaTypeIndex"))
if mibBuilder.loadTexts: dvbRcsOduAntennaTypeEntry.setStatus('current')
dvbRcsOduAntennaTypeIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 17, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: dvbRcsOduAntennaTypeIndex.setStatus('current')
dvbRcsOduAntennaTypeDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 17, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsOduAntennaTypeDescription.setStatus('current')
dvbRcsOduAntennaType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 1, 17, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsOduAntennaType.setStatus('current')
dvbRcsNetworkOamInetAddressType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkOamInetAddressType.setStatus('current')
dvbRcsNetworkOamInetAddress = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkOamInetAddress.setStatus('current')
dvbRcsNetworkOamInetAddressPrefixLength = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 3), InetAddressPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkOamInetAddressPrefixLength.setStatus('current')
dvbRcsNetworkOamInetAddressAssign = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oamInetAddressStatic", 1), ("oamInetAddressDynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkOamInetAddressAssign.setStatus('current')
dvbRcsNetworkLanInetAddressType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 5), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkLanInetAddressType.setStatus('current')
dvbRcsNetworkLanInetAddress = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 6), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkLanInetAddress.setStatus('current')
dvbRcsNetworkLanInetAddressPrefixLength = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 7), InetAddressPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkLanInetAddressPrefixLength.setStatus('current')
dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 8), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressType.setStatus('current')
dvbRcsNetworkAirInterfaceDefaultGatewayInetAddress = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkAirInterfaceDefaultGatewayInetAddress.setStatus('current')
dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressPrefixLength = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 10), InetAddressPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressPrefixLength.setStatus('current')
dvbRcsNetworkDnsServers = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 11))
dvbRcsPrimaryDnsServerInetAddressType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 11, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsPrimaryDnsServerInetAddressType.setStatus('current')
dvbRcsPrimaryDnsServerInetAddress = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 11, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsPrimaryDnsServerInetAddress.setStatus('current')
dvbRcsPrimaryDnsServerInetAddressPrefixLength = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 11, 3), InetAddressPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsPrimaryDnsServerInetAddressPrefixLength.setStatus('current')
dvbRcsSecondaryDnsServerInetAddressType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 11, 4), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSecondaryDnsServerInetAddressType.setStatus('current')
dvbRcsSecondaryDnsServerInetAddress = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 11, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSecondaryDnsServerInetAddress.setStatus('current')
dvbRcsSecondaryDnsServerInetAddressPrefixLength = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 11, 6), InetAddressPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsSecondaryDnsServerInetAddressPrefixLength.setStatus('current')
dvbRcsNetworkNccMgtInetAddressType = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 12), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkNccMgtInetAddressType.setStatus('current')
dvbRcsNetworkNccMgtInetAddress = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 13), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkNccMgtInetAddress.setStatus('current')
dvbRcsNetworkNccMgtInetAddressPrefixLength = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 14), InetAddressPrefixLength()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkNccMgtInetAddressPrefixLength.setStatus('current')
dvbRcsNetworkConfigFileDownloadUrl = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 15), Uri().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkConfigFileDownloadUrl.setStatus('current')
dvbRcsNetworkInstallLogFileDownloadUrl = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 16), Uri().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkInstallLogFileDownloadUrl.setStatus('current')
dvbRcsNetworkConfigFileUploadUrl = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 17), Uri().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkConfigFileUploadUrl.setStatus('current')
dvbRcsNetworkLogFileUploadUrl = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 18), Uri().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkLogFileUploadUrl.setStatus('current')
dvbRcsNetworkInstallLogFileUploadUrl = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 2, 19), Uri().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsNetworkInstallLogFileUploadUrl.setStatus('current')
dvbRcsInstallAntennaAlignmentState = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("antennaAlignmentStart", 1), ("antennaAlignmentDeny", 2), ("antennaAlignmentContinue", 3), ("antennaAlignmentStop", 4), ("antennaAlignmentSuccess", 5), ("antennaAlignmentFail", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallAntennaAlignmentState.setStatus('current')
dvbRcsInstallCwFrequency = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 2), Unsigned32()).setUnits('x100 Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallCwFrequency.setStatus('current')
dvbRcsInstallCwMaxDuration = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallCwMaxDuration.setStatus('current')
dvbRcsInstallCwPower = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 4), Integer32()).setUnits('x0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallCwPower.setStatus('current')
dvbRcsInstallCoPolReading = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 5), Unsigned32()).setUnits('x0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallCoPolReading.setStatus('current')
dvbRcsInstallXPolReading = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 6), Unsigned32()).setUnits('x0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallXPolReading.setStatus('current')
dvbRcsInstallCoPolTarget = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 7), Unsigned32()).setUnits('x0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallCoPolTarget.setStatus('current')
dvbRcsInstallXPolTarget = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 8), Unsigned32()).setUnits('x0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallXPolTarget.setStatus('current')
dvbRcsInstallStandByDuration = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallStandByDuration.setStatus('current')
dvbRcsInstallTargetEsN0 = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 3, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 315)).clone(70)).setUnits('x0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsInstallTargetEsN0.setStatus('current')
dvbRcsPktClassTable = MibTable((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1), )
if mibBuilder.loadTexts: dvbRcsPktClassTable.setStatus('current')
dvbRcsPktClassEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1), ).setIndexNames((0, "DVB-RCS-MIB", "dvbRcsPktClassIndex"))
if mibBuilder.loadTexts: dvbRcsPktClassEntry.setStatus('current')
dvbRcsPktClassIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: dvbRcsPktClassIndex.setStatus('current')
dvbRcsPktClassDscpLow = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 2), Dscp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassDscpLow.setStatus('current')
dvbRcsPktClassDscpHigh = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 3), Dscp().clone(63)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassDscpHigh.setStatus('current')
dvbRcsPktClassDscpMarkValue = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 4), DscpOrAny().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassDscpMarkValue.setStatus('current')
dvbRcsPktClassIpProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassIpProtocol.setStatus('current')
dvbRcsPktClassSrcInetAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassSrcInetAddressType.setStatus('current')
dvbRcsPktClassSrcInetAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassSrcInetAddress.setStatus('current')
dvbRcsPktClassSrcInetAddressPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 8), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassSrcInetAddressPrefixLength.setStatus('current')
dvbRcsPktClassDstInetAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 9), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassDstInetAddressType.setStatus('current')
dvbRcsPktClassDstInetAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 10), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassDstInetAddress.setStatus('current')
dvbRcsPktClassDstInetAddressPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 11), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassDstInetAddressPrefixLength.setStatus('current')
dvbRcsPktClassSrcPortLow = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 12), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassSrcPortLow.setStatus('current')
dvbRcsPktClassSrcPortHigh = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 13), InetPortNumber().clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassSrcPortHigh.setStatus('current')
dvbRcsPktClassDstPortLow = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 14), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassDstPortLow.setStatus('current')
dvbRcsPktClassDstPortHigh = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 15), InetPortNumber().clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassDstPortHigh.setStatus('current')
dvbRcsPktClassVlanUserPri = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassVlanUserPri.setStatus('current')
dvbRcsPktClassPhbAssociation = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassPhbAssociation.setStatus('current')
dvbRcsPktClassRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 1, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPktClassRowStatus.setStatus('current')
dvbRcsPhbMappingTable = MibTable((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 2), )
if mibBuilder.loadTexts: dvbRcsPhbMappingTable.setStatus('current')
dvbRcsPhbMappingEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 2, 1), ).setIndexNames((0, "DVB-RCS-MIB", "dvbRcsPhbIdentifier"))
if mibBuilder.loadTexts: dvbRcsPhbMappingEntry.setStatus('current')
dvbRcsPhbIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: dvbRcsPhbIdentifier.setStatus('current')
dvbRcsPhbName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 2, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPhbName.setStatus('current')
dvbRcsPhbRequestClassAssociation = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPhbRequestClassAssociation.setStatus('current')
dvbRcsPhbMappingRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 2, 1, 4), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPhbMappingRowStatus.setStatus('current')
dvbRcsRequestClassTable = MibTable((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3), )
if mibBuilder.loadTexts: dvbRcsRequestClassTable.setStatus('current')
dvbRcsRequestClassEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1), ).setIndexNames((0, "DVB-RCS-MIB", "dvbRcsRequestClassIndex"))
if mibBuilder.loadTexts: dvbRcsRequestClassEntry.setStatus('current')
dvbRcsRequestClassIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: dvbRcsRequestClassIndex.setStatus('current')
dvbRcsRequestClassName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassName.setStatus('current')
dvbRcsRequestClassChanId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassChanId.setStatus('current')
dvbRcsRequestClassVccVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassVccVpi.setStatus('current')
dvbRcsRequestClassVccVci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassVccVci.setStatus('current')
dvbRcsRequestClassPidPoolReference = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassPidPoolReference.setStatus('current')
dvbRcsRequestClassCra = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 7), Unsigned32()).setUnits('bit/s').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassCra.setStatus('current')
dvbRcsRequestClassRbdcMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 8), Unsigned32()).setUnits('x2 kbit/s').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassRbdcMax.setStatus('current')
dvbRcsRequestClassRbdcTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 9), Unsigned32()).setUnits('superframes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassRbdcTimeout.setStatus('current')
dvbRcsRequestClassVbdcMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 10), Unsigned32()).setUnits('ATM cells/MPEG packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassVbdcMax.setStatus('current')
dvbRcsRequestClassVbdcTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 11), Unsigned32()).setUnits('superframes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassVbdcTimeout.setStatus('current')
dvbRcsRequestClassVbdcMaxBackLog = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 12), Unsigned32()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassVbdcMaxBackLog.setStatus('current')
dvbRcsRequestClassRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsRequestClassRowStatus.setStatus('current')
dvbRcsPidPoolTable = MibTable((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 4), )
if mibBuilder.loadTexts: dvbRcsPidPoolTable.setStatus('current')
dvbRcsPidPoolEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 4, 1), ).setIndexNames((0, "DVB-RCS-MIB", "dvbRcsPidPoolIndex"), (0, "DVB-RCS-MIB", "dvbRcsPidIndex"))
if mibBuilder.loadTexts: dvbRcsPidPoolEntry.setStatus('current')
dvbRcsPidPoolIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: dvbRcsPidPoolIndex.setStatus('current')
dvbRcsPidIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: dvbRcsPidIndex.setStatus('current')
dvbRcsPidValue = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPidValue.setStatus('current')
dvbRcsPidPoolRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 4, 1, 4), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsPidPoolRowStatus.setStatus('current')
dvbRcsQosGlobalRbdcMax = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 5), Unsigned32()).setUnits('x2 kbit/s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsQosGlobalRbdcMax.setStatus('current')
dvbRcsQosGlobalVbdcMax = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 6), Unsigned32()).setUnits('ATM cells/MPEG packets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsQosGlobalVbdcMax.setStatus('current')
dvbRcsQosGlobalVbdcMaxBackLog = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 7), Unsigned32()).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsQosGlobalVbdcMaxBackLog.setStatus('current')
dvbRcsQosChannelIdStrictDispatching = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notStrict", 0), ("strict", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsQosChannelIdStrictDispatching.setStatus('current')
dvbRcsCtrlRebootCommand = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("normal", 2), ("alternate", 3))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlRebootCommand.setStatus('current')
dvbRcsCtrlRcstTxDisable = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("disable", 2))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlRcstTxDisable.setStatus('current')
dvbRcsCtrlUserTrafficDisable = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("disable", 2))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlUserTrafficDisable.setStatus('current')
dvbRcsCtrlCwEnable = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlCwEnable.setStatus('current')
dvbRcsCtrlOduTxReferenceEnable = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlOduTxReferenceEnable.setStatus('current')
dvbRcsCtrlOduTxDCEnable = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlOduTxDCEnable.setStatus('current')
dvbRcsCtrlOduRxDCEnable = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlOduRxDCEnable.setStatus('current')
dvbRcsCtrlDownloadFileCommand = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("config", 2), ("installationLog", 3))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlDownloadFileCommand.setStatus('current')
dvbRcsCtrlUploadFileCommand = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("config", 2), ("eventAlarm", 3), ("installationLog", 4))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlUploadFileCommand.setStatus('current')
dvbRcsCtrlActivateConfigFileCommand = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("activate", 2))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlActivateConfigFileCommand.setStatus('current')
dvbRcsCtrlRcstLogonCommand = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("logon", 2))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlRcstLogonCommand.setStatus('current')
dvbRcsCtrlRcstLogoffCommand = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("logoff", 2))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlRcstLogoffCommand.setStatus('current')
dvbRcsCtrlRcstRxReacquire = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 5, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("reacquireForwardLink", 2))).clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsCtrlRcstRxReacquire.setStatus('current')
dvbRcsRcstMode = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("installation", 0), ("operational", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsRcstMode.setStatus('current')
dvbRcsRcstFaultStatus = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nofault", 0), ("fault", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRcstFaultStatus.setStatus('current')
dvbRcsRcstFwdLinkStatus = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAcquired", 0), ("acquired", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRcstFwdLinkStatus.setStatus('current')
dvbRcsRcstRtnLinkStatus = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("loggedOff", 0), ("loggedOn", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRcstRtnLinkStatus.setStatus('current')
dvbRcsRcstLogUpdated = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noUpdate", 0), ("logfileUpdated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRcstLogUpdated.setStatus('current')
dvbRcsRcstCurrentSoftwareVersion = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRcstCurrentSoftwareVersion.setStatus('current')
dvbRcsRcstAlternateSoftwareVersion = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRcstAlternateSoftwareVersion.setStatus('current')
dvbRcsRcstActivatedConfigFileVersion = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRcstActivatedConfigFileVersion.setStatus('current')
dvbRcsRcstDownloadedConfigFileVersion = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 1, 6, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRcstDownloadedConfigFileVersion.setStatus('current')
dvbRcsFwdStartTable = MibTable((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1), )
if mibBuilder.loadTexts: dvbRcsFwdStartTable.setStatus('current')
dvbRcsFwdStartEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1), ).setIndexNames((0, "DVB-RCS-MIB", "dvbRcsFwdStartIndex"))
if mibBuilder.loadTexts: dvbRcsFwdStartEntry.setStatus('current')
dvbRcsFwdStartIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: dvbRcsFwdStartIndex.setStatus('current')
dvbRcsFwdStartPopId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsFwdStartPopId.setStatus('current')
dvbRcsFwdStartFrequency = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1, 3), Unsigned32()).setUnits('x100 kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsFwdStartFrequency.setStatus('current')
dvbRcsFwdStartPolar = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("linearHorizontal", 0), ("linearVertical", 1), ("circularLeft", 2), ("circularRight", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsFwdStartPolar.setStatus('current')
dvbRcsFwdStartFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("auto", -1), ("dvbs", 0), ("dvbs2ccm", 1), ("dvbs2acm", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsFwdStartFormat.setStatus('current')
dvbRcsFwdStartRolloff = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("autoRolloff", 0), ("rolloff020", 1), ("rolloff025", 2), ("rolloff035", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsFwdStartRolloff.setStatus('current')
dvbRcsFwdStartSymbolRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1, 7), Unsigned32()).setUnits('x100 symbols/s').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsFwdStartSymbolRate.setStatus('current')
dvbRcsFwdStartInnerFec = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("autoFec", -1), ("fecRate12", 0), ("fecRate23", 1), ("fecRate34", 2), ("fecRate56", 3), ("fecRate78", 4), ("fecRate89", 5), ("fecRate35", 6), ("fecRate45", 7), ("fecRate910", 8), ("fecRate25", 9), ("fecRate13", 10), ("fecRate14", 11), ("noInnerCode", 12)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsFwdStartInnerFec.setStatus('current')
dvbRcsFwdStartRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 1, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dvbRcsFwdStartRowStatus.setStatus('current')
dvbRcsFwdStatusPopId = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusPopId.setStatus('current')
dvbRcsFwdStatusTable = MibTable((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2), )
if mibBuilder.loadTexts: dvbRcsFwdStatusTable.setStatus('current')
dvbRcsFwdStatusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1), ).setIndexNames((0, "DVB-RCS-MIB", "dvbRcsFwdStatusIndex"))
if mibBuilder.loadTexts: dvbRcsFwdStatusEntry.setStatus('current')
dvbRcsFwdStatusIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: dvbRcsFwdStatusIndex.setStatus('current')
dvbRcsFwdStatusIfReference = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusIfReference.setStatus('current')
dvbRcsFwdStatusNetId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusNetId.setStatus('current')
dvbRcsFwdStatusNetName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusNetName.setStatus('current')
dvbRcsFwdStatusFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dvbs", 0), ("dvbs2ccm", 1), ("dvbs2acm", 2), ("reservedFormat", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusFormat.setStatus('current')
dvbRcsFwdStatusFrequency = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 6), Unsigned32()).setUnits('x100 kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusFrequency.setStatus('current')
dvbRcsFwdStatusPolar = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("linearHorizontal", 0), ("linearVertical", 1), ("circularLeft", 2), ("circularRight", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusPolar.setStatus('current')
dvbRcsFwdStatusInnerFec = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", -1), ("fecRate12", 0), ("fecRate23", 1), ("fecRate34", 2), ("fecRate56", 3), ("fecRate78", 4), ("fecRate89", 5), ("fecRate35", 6), ("fecRate45", 7), ("fecRate910", 8), ("fecRate25", 9), ("fecRate13", 10), ("fecRate14", 11), ("noInnerCode", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusInnerFec.setStatus('current')
dvbRcsFwdStatusSymbolRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 9), Unsigned32()).setUnits('x100 symbols/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusSymbolRate.setStatus('current')
dvbRcsFwdStatusRolloff = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undefRolloff", 0), ("rolloff020", 1), ("rolloff025", 2), ("rolloff035", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusRolloff.setStatus('current')
dvbRcsFwdStatusModulation = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("mBPSK", 1), ("mQPSK", 2), ("m8PSK", 3), ("m16APSK", 4), ("m32APSK", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusModulation.setStatus('current')
dvbRcsFwdStatusFecFrame = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("shortframe", 1), ("longframe", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusFecFrame.setStatus('current')
dvbRcsFwdStatusPilot = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("pilotNotused", 1), ("pilotUsed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusPilot.setStatus('current')
dvbRcsFwdStatusBer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 14), Integer32()).setUnits('exponent of 10').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusBer.setStatus('current')
dvbRcsFwdStatusCnr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 15), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusCnr.setStatus('current')
dvbRcsFwdStatusRxPower = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 239, 1, 2, 2, 2, 1, 16), Integer32().clone(-500)).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsFwdStatusRxPower.setStatus('current')
dvbRcsRtnConfigMaxEirp = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 3, 1, 1), Integer32()).setUnits('x0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsRtnConfigMaxEirp.setStatus('current')
dvbRcsRtnConfigDefIfLevel = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 3, 1, 2), Integer32()).setUnits('x0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbRcsRtnConfigDefIfLevel.setStatus('current')
dvbRcsRtnStatusEbN0 = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 3, 2, 1), Integer32()).setUnits('x0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRtnStatusEbN0.setStatus('current')
dvbRcsRtnStatusSFDuration = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 3, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(250, 7500))).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRtnStatusSFDuration.setStatus('current')
dvbRcsRtnStatusPayloadUnit = MibScalar((1, 3, 6, 1, 2, 1, 10, 239, 1, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unitATM", 0), ("unitMPEG", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbRcsRtnStatusPayloadUnit.setStatus('current')
dvbRcsRcstGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 2, 1))
dvbRcsRcstCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 239, 2, 2))
dvbRcsRcstCompliance1 = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 239, 2, 2, 1)).setObjects(("DVB-RCS-MIB", "dvbRcsRcstSystemGroup"), ("DVB-RCS-MIB", "dvbRcsRcstNetworkGroup"), ("DVB-RCS-MIB", "dvbRcsRcstInstallGroup"), ("DVB-RCS-MIB", "dvbRcsRcstQosGroup"), ("DVB-RCS-MIB", "dvbRcsRcstControlGroup"), ("DVB-RCS-MIB", "dvbRcsRcstStateGroup"), ("DVB-RCS-MIB", "dvbRcsFwdConfigGroup"), ("DVB-RCS-MIB", "dvbRcsFwdStatusGroup"), ("DVB-RCS-MIB", "dvbRcsRtnConfigGroup"), ("DVB-RCS-MIB", "dvbRcsRtnStatusGroup"), ("DVB-RCS-MIB", "dvbRcsRcstExtNetworkGroup"), ("DVB-RCS-MIB", "dvbRcsRcstDnsGroup"), ("DVB-RCS-MIB", "dvbRcsRcstExtInstallGroup"), ("DVB-RCS-MIB", "dvbRcsRcstEnhancedClassifierGroup"), ("DVB-RCS-MIB", "dvbRcsRcstMpegQosGroup"), ("DVB-RCS-MIB", "dvbRcsRcstGlobalQosGroup"), ("DVB-RCS-MIB", "dvbRcsRcstStrictQosGroup"), ("DVB-RCS-MIB", "dvbRcsRcstExtControlGroup"), ("DVB-RCS-MIB", "dvbRcsRtnExtConfigGroup"), ("DVB-RCS-MIB", "dvbRcsRtnExtStatusGroup"), ("DVB-RCS-MIB", "dvbRcsRcstOduListGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstCompliance1 = dvbRcsRcstCompliance1.setStatus('current')
dvbRcsRcstSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 1)).setObjects(("DVB-RCS-MIB", "dvbRcsSystemMibRevision"), ("DVB-RCS-MIB", "dvbRcsSystemSatLabsProfilesDeclaration"), ("DVB-RCS-MIB", "dvbRcsSystemSatLabsOptionsDeclaration"), ("DVB-RCS-MIB", "dvbRcsSystemSatLabsFeaturesDeclaration"), ("DVB-RCS-MIB", "dvbRcsSystemLocation"), ("DVB-RCS-MIB", "dvbRcsSystemOduAntennaSize"), ("DVB-RCS-MIB", "dvbRcsSystemOduAntennaGain"), ("DVB-RCS-MIB", "dvbRcsSystemOduSspa"), ("DVB-RCS-MIB", "dvbRcsSystemOduTxType"), ("DVB-RCS-MIB", "dvbRcsSystemOduRxType"), ("DVB-RCS-MIB", "dvbRcsSystemOduRxBand"), ("DVB-RCS-MIB", "dvbRcsSystemOduRxLO"), ("DVB-RCS-MIB", "dvbRcsSystemOduTxLO"), ("DVB-RCS-MIB", "dvbRcsTcpPep"), ("DVB-RCS-MIB", "dvbRcsHttpPep"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstSystemGroup = dvbRcsRcstSystemGroup.setStatus('current')
dvbRcsRcstNetworkGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 2)).setObjects(("DVB-RCS-MIB", "dvbRcsNetworkOamInetAddressType"), ("DVB-RCS-MIB", "dvbRcsNetworkOamInetAddress"), ("DVB-RCS-MIB", "dvbRcsNetworkOamInetAddressPrefixLength"), ("DVB-RCS-MIB", "dvbRcsNetworkLanInetAddressType"), ("DVB-RCS-MIB", "dvbRcsNetworkLanInetAddress"), ("DVB-RCS-MIB", "dvbRcsNetworkLanInetAddressPrefixLength"), ("DVB-RCS-MIB", "dvbRcsNetworkConfigFileDownloadUrl"), ("DVB-RCS-MIB", "dvbRcsNetworkConfigFileUploadUrl"), ("DVB-RCS-MIB", "dvbRcsNetworkLogFileUploadUrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstNetworkGroup = dvbRcsRcstNetworkGroup.setStatus('current')
dvbRcsRcstExtNetworkGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 3)).setObjects(("DVB-RCS-MIB", "dvbRcsNetworkOamInetAddressAssign"), ("DVB-RCS-MIB", "dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressType"), ("DVB-RCS-MIB", "dvbRcsNetworkAirInterfaceDefaultGatewayInetAddress"), ("DVB-RCS-MIB", "dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressPrefixLength"), ("DVB-RCS-MIB", "dvbRcsNetworkNccMgtInetAddressType"), ("DVB-RCS-MIB", "dvbRcsNetworkNccMgtInetAddress"), ("DVB-RCS-MIB", "dvbRcsNetworkNccMgtInetAddressPrefixLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstExtNetworkGroup = dvbRcsRcstExtNetworkGroup.setStatus('current')
dvbRcsRcstDnsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 4)).setObjects(("DVB-RCS-MIB", "dvbRcsPrimaryDnsServerInetAddressType"), ("DVB-RCS-MIB", "dvbRcsPrimaryDnsServerInetAddress"), ("DVB-RCS-MIB", "dvbRcsPrimaryDnsServerInetAddressPrefixLength"), ("DVB-RCS-MIB", "dvbRcsSecondaryDnsServerInetAddressType"), ("DVB-RCS-MIB", "dvbRcsSecondaryDnsServerInetAddress"), ("DVB-RCS-MIB", "dvbRcsSecondaryDnsServerInetAddressPrefixLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstDnsGroup = dvbRcsRcstDnsGroup.setStatus('current')
dvbRcsRcstInstallGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 5)).setObjects(("DVB-RCS-MIB", "dvbRcsInstallAntennaAlignmentState"), ("DVB-RCS-MIB", "dvbRcsInstallCwFrequency"), ("DVB-RCS-MIB", "dvbRcsInstallCwMaxDuration"), ("DVB-RCS-MIB", "dvbRcsInstallCwPower"), ("DVB-RCS-MIB", "dvbRcsInstallCoPolReading"), ("DVB-RCS-MIB", "dvbRcsInstallXPolReading"), ("DVB-RCS-MIB", "dvbRcsInstallCoPolTarget"), ("DVB-RCS-MIB", "dvbRcsInstallXPolTarget"), ("DVB-RCS-MIB", "dvbRcsInstallStandByDuration"), ("DVB-RCS-MIB", "dvbRcsInstallTargetEsN0"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstInstallGroup = dvbRcsRcstInstallGroup.setStatus('current')
dvbRcsRcstExtInstallGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 6)).setObjects(("DVB-RCS-MIB", "dvbRcsNetworkInstallLogFileDownloadUrl"), ("DVB-RCS-MIB", "dvbRcsNetworkInstallLogFileUploadUrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstExtInstallGroup = dvbRcsRcstExtInstallGroup.setStatus('current')
dvbRcsRcstQosGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 7)).setObjects(("DVB-RCS-MIB", "dvbRcsPktClassDscpLow"), ("DVB-RCS-MIB", "dvbRcsPktClassDscpHigh"), ("DVB-RCS-MIB", "dvbRcsPktClassDscpMarkValue"), ("DVB-RCS-MIB", "dvbRcsPktClassPhbAssociation"), ("DVB-RCS-MIB", "dvbRcsPktClassRowStatus"), ("DVB-RCS-MIB", "dvbRcsPhbName"), ("DVB-RCS-MIB", "dvbRcsPhbRequestClassAssociation"), ("DVB-RCS-MIB", "dvbRcsPhbMappingRowStatus"), ("DVB-RCS-MIB", "dvbRcsRequestClassName"), ("DVB-RCS-MIB", "dvbRcsRequestClassChanId"), ("DVB-RCS-MIB", "dvbRcsRequestClassVccVpi"), ("DVB-RCS-MIB", "dvbRcsRequestClassVccVci"), ("DVB-RCS-MIB", "dvbRcsRequestClassCra"), ("DVB-RCS-MIB", "dvbRcsRequestClassRbdcMax"), ("DVB-RCS-MIB", "dvbRcsRequestClassRbdcTimeout"), ("DVB-RCS-MIB", "dvbRcsRequestClassVbdcMax"), ("DVB-RCS-MIB", "dvbRcsRequestClassVbdcTimeout"), ("DVB-RCS-MIB", "dvbRcsRequestClassVbdcMaxBackLog"), ("DVB-RCS-MIB", "dvbRcsRequestClassRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstQosGroup = dvbRcsRcstQosGroup.setStatus('current')
dvbRcsRcstEnhancedClassifierGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 8)).setObjects(("DVB-RCS-MIB", "dvbRcsPktClassIpProtocol"), ("DVB-RCS-MIB", "dvbRcsPktClassSrcInetAddressType"), ("DVB-RCS-MIB", "dvbRcsPktClassSrcInetAddress"), ("DVB-RCS-MIB", "dvbRcsPktClassSrcInetAddressPrefixLength"), ("DVB-RCS-MIB", "dvbRcsPktClassDstInetAddressType"), ("DVB-RCS-MIB", "dvbRcsPktClassDstInetAddress"), ("DVB-RCS-MIB", "dvbRcsPktClassDstInetAddressPrefixLength"), ("DVB-RCS-MIB", "dvbRcsPktClassSrcPortLow"), ("DVB-RCS-MIB", "dvbRcsPktClassSrcPortHigh"), ("DVB-RCS-MIB", "dvbRcsPktClassDstPortLow"), ("DVB-RCS-MIB", "dvbRcsPktClassDstPortHigh"), ("DVB-RCS-MIB", "dvbRcsPktClassVlanUserPri"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstEnhancedClassifierGroup = dvbRcsRcstEnhancedClassifierGroup.setStatus('current')
dvbRcsRcstMpegQosGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 9)).setObjects(("DVB-RCS-MIB", "dvbRcsRequestClassPidPoolReference"), ("DVB-RCS-MIB", "dvbRcsPidValue"), ("DVB-RCS-MIB", "dvbRcsPidPoolRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstMpegQosGroup = dvbRcsRcstMpegQosGroup.setStatus('current')
dvbRcsRcstGlobalQosGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 10)).setObjects(("DVB-RCS-MIB", "dvbRcsQosGlobalRbdcMax"), ("DVB-RCS-MIB", "dvbRcsQosGlobalVbdcMax"), ("DVB-RCS-MIB", "dvbRcsQosGlobalVbdcMaxBackLog"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstGlobalQosGroup = dvbRcsRcstGlobalQosGroup.setStatus('current')
dvbRcsRcstStrictQosGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 11)).setObjects(("DVB-RCS-MIB", "dvbRcsQosChannelIdStrictDispatching"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstStrictQosGroup = dvbRcsRcstStrictQosGroup.setStatus('current')
dvbRcsRcstControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 12)).setObjects(("DVB-RCS-MIB", "dvbRcsCtrlRebootCommand"), ("DVB-RCS-MIB", "dvbRcsCtrlUserTrafficDisable"), ("DVB-RCS-MIB", "dvbRcsCtrlCwEnable"), ("DVB-RCS-MIB", "dvbRcsCtrlDownloadFileCommand"), ("DVB-RCS-MIB", "dvbRcsCtrlUploadFileCommand"), ("DVB-RCS-MIB", "dvbRcsCtrlActivateConfigFileCommand"), ("DVB-RCS-MIB", "dvbRcsCtrlRcstRxReacquire"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstControlGroup = dvbRcsRcstControlGroup.setStatus('current')
dvbRcsRcstExtControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 13)).setObjects(("DVB-RCS-MIB", "dvbRcsCtrlRcstTxDisable"), ("DVB-RCS-MIB", "dvbRcsCtrlOduTxReferenceEnable"), ("DVB-RCS-MIB", "dvbRcsCtrlOduTxDCEnable"), ("DVB-RCS-MIB", "dvbRcsCtrlOduRxDCEnable"), ("DVB-RCS-MIB", "dvbRcsCtrlRcstLogonCommand"), ("DVB-RCS-MIB", "dvbRcsCtrlRcstLogoffCommand"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstExtControlGroup = dvbRcsRcstExtControlGroup.setStatus('current')
dvbRcsRcstStateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 14)).setObjects(("DVB-RCS-MIB", "dvbRcsRcstMode"), ("DVB-RCS-MIB", "dvbRcsRcstFaultStatus"), ("DVB-RCS-MIB", "dvbRcsRcstFwdLinkStatus"), ("DVB-RCS-MIB", "dvbRcsRcstLogUpdated"), ("DVB-RCS-MIB", "dvbRcsRcstCurrentSoftwareVersion"), ("DVB-RCS-MIB", "dvbRcsRcstAlternateSoftwareVersion"), ("DVB-RCS-MIB", "dvbRcsRcstActivatedConfigFileVersion"), ("DVB-RCS-MIB", "dvbRcsRcstDownloadedConfigFileVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstStateGroup = dvbRcsRcstStateGroup.setStatus('current')
dvbRcsFwdConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 15)).setObjects(("DVB-RCS-MIB", "dvbRcsFwdStartPopId"), ("DVB-RCS-MIB", "dvbRcsFwdStartFrequency"), ("DVB-RCS-MIB", "dvbRcsFwdStartPolar"), ("DVB-RCS-MIB", "dvbRcsFwdStartFormat"), ("DVB-RCS-MIB", "dvbRcsFwdStartRolloff"), ("DVB-RCS-MIB", "dvbRcsFwdStartSymbolRate"), ("DVB-RCS-MIB", "dvbRcsFwdStartInnerFec"), ("DVB-RCS-MIB", "dvbRcsFwdStartRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsFwdConfigGroup = dvbRcsFwdConfigGroup.setStatus('current')
dvbRcsFwdStatusGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 16)).setObjects(("DVB-RCS-MIB", "dvbRcsFwdStatusPopId"), ("DVB-RCS-MIB", "dvbRcsFwdStatusIfReference"), ("DVB-RCS-MIB", "dvbRcsFwdStatusNetId"), ("DVB-RCS-MIB", "dvbRcsFwdStatusNetName"), ("DVB-RCS-MIB", "dvbRcsFwdStatusFormat"), ("DVB-RCS-MIB", "dvbRcsFwdStatusFrequency"), ("DVB-RCS-MIB", "dvbRcsFwdStatusPolar"), ("DVB-RCS-MIB", "dvbRcsFwdStatusInnerFec"), ("DVB-RCS-MIB", "dvbRcsFwdStatusSymbolRate"), ("DVB-RCS-MIB", "dvbRcsFwdStatusRolloff"), ("DVB-RCS-MIB", "dvbRcsFwdStatusModulation"), ("DVB-RCS-MIB", "dvbRcsFwdStatusFecFrame"), ("DVB-RCS-MIB", "dvbRcsFwdStatusPilot"), ("DVB-RCS-MIB", "dvbRcsFwdStatusBer"), ("DVB-RCS-MIB", "dvbRcsFwdStatusCnr"), ("DVB-RCS-MIB", "dvbRcsFwdStatusRxPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsFwdStatusGroup = dvbRcsFwdStatusGroup.setStatus('current')
dvbRcsRtnConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 17)).setObjects(("DVB-RCS-MIB", "dvbRcsRtnConfigDefIfLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRtnConfigGroup = dvbRcsRtnConfigGroup.setStatus('current')
dvbRcsRtnExtConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 18)).setObjects(("DVB-RCS-MIB", "dvbRcsRtnConfigMaxEirp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRtnExtConfigGroup = dvbRcsRtnExtConfigGroup.setStatus('current')
dvbRcsRtnStatusGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 19)).setObjects(("DVB-RCS-MIB", "dvbRcsRtnStatusPayloadUnit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRtnStatusGroup = dvbRcsRtnStatusGroup.setStatus('current')
dvbRcsRtnExtStatusGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 20)).setObjects(("DVB-RCS-MIB", "dvbRcsRcstRtnLinkStatus"), ("DVB-RCS-MIB", "dvbRcsRtnStatusEbN0"), ("DVB-RCS-MIB", "dvbRcsRtnStatusSFDuration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRtnExtStatusGroup = dvbRcsRtnExtStatusGroup.setStatus('current')
dvbRcsRcstOduListGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 239, 2, 1, 21)).setObjects(("DVB-RCS-MIB", "dvbRcsOduTxTypeDescription"), ("DVB-RCS-MIB", "dvbRcsOduTxType"), ("DVB-RCS-MIB", "dvbRcsOduRxTypeDescription"), ("DVB-RCS-MIB", "dvbRcsOduRxType"), ("DVB-RCS-MIB", "dvbRcsOduAntennaTypeDescription"), ("DVB-RCS-MIB", "dvbRcsOduAntennaType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbRcsRcstOduListGroup = dvbRcsRcstOduListGroup.setStatus('current')
mibBuilder.exportSymbols("DVB-RCS-MIB", dvbRcsRequestClassVbdcMaxBackLog=dvbRcsRequestClassVbdcMaxBackLog, dvbRcsPktClassDstInetAddress=dvbRcsPktClassDstInetAddress, dvbRcsSystemSatLabsFeaturesDeclaration=dvbRcsSystemSatLabsFeaturesDeclaration, dvbRcsNetworkAirInterfaceDefaultGatewayInetAddress=dvbRcsNetworkAirInterfaceDefaultGatewayInetAddress, dvbRcsInstallCwFrequency=dvbRcsInstallCwFrequency, dvbRcsFwdStartIndex=dvbRcsFwdStartIndex, dvbRcsRcstMpegQosGroup=dvbRcsRcstMpegQosGroup, dvbRcsNetworkInstallLogFileDownloadUrl=dvbRcsNetworkInstallLogFileDownloadUrl, dvbRcsPktClassSrcInetAddressType=dvbRcsPktClassSrcInetAddressType, dvbRcsNetworkNccMgtInetAddressType=dvbRcsNetworkNccMgtInetAddressType, dvbRcsRequestClassRbdcMax=dvbRcsRequestClassRbdcMax, dvbRcsInstallCoPolTarget=dvbRcsInstallCoPolTarget, dvbRcsRcstOduListGroup=dvbRcsRcstOduListGroup, dvbRcsFwdStartEntry=dvbRcsFwdStartEntry, dvbRcsSystemIduPep=dvbRcsSystemIduPep, dvbRcsPidPoolRowStatus=dvbRcsPidPoolRowStatus, dvbRcsInstallAntennaAlignmentState=dvbRcsInstallAntennaAlignmentState, dvbRcsSystemLocation=dvbRcsSystemLocation, dvbRcsPktClassSrcPortHigh=dvbRcsPktClassSrcPortHigh, dvbRcsRcstGlobalQosGroup=dvbRcsRcstGlobalQosGroup, dvbRcsOduTxTypeIndex=dvbRcsOduTxTypeIndex, dvbRcsPktClassDstInetAddressType=dvbRcsPktClassDstInetAddressType, dvbRcsFwdStatusIfReference=dvbRcsFwdStatusIfReference, dvbRcsNetworkConfigFileDownloadUrl=dvbRcsNetworkConfigFileDownloadUrl, dvbRcsRtnStatusGroup=dvbRcsRtnStatusGroup, dvbRcsFwdStatusBer=dvbRcsFwdStatusBer, dvbRcsRtnConfig=dvbRcsRtnConfig, dvbRcsNetworkConfigFileUploadUrl=dvbRcsNetworkConfigFileUploadUrl, dvbRcsOduAntennaTypeTable=dvbRcsOduAntennaTypeTable, dvbRcsRequestClassVbdcMax=dvbRcsRequestClassVbdcMax, dvbRcsNetworkOamInetAddressAssign=dvbRcsNetworkOamInetAddressAssign, dvbRcsFwdStartRowStatus=dvbRcsFwdStartRowStatus, dvbRcsSystemSatLabsOptionsDeclaration=dvbRcsSystemSatLabsOptionsDeclaration, dvbRcsFwdStatus=dvbRcsFwdStatus, dvbRcsPktClassSrcInetAddress=dvbRcsPktClassSrcInetAddress, dvbRcsPidPoolEntry=dvbRcsPidPoolEntry, dvbRcsInstallCwMaxDuration=dvbRcsInstallCwMaxDuration, dvbRcsNetworkOamInetAddress=dvbRcsNetworkOamInetAddress, dvbRcsFwdStartFrequency=dvbRcsFwdStartFrequency, dvbRcsQosGlobalRbdcMax=dvbRcsQosGlobalRbdcMax, dvbRcsFwdStatusCnr=dvbRcsFwdStatusCnr, dvbRcsRcstCompliance1=dvbRcsRcstCompliance1, dvbRcsRcstNetwork=dvbRcsRcstNetwork, dvbRcsNetworkLanInetAddressType=dvbRcsNetworkLanInetAddressType, dvbRcsPktClassDstPortLow=dvbRcsPktClassDstPortLow, dvbRcsPrimaryDnsServerInetAddress=dvbRcsPrimaryDnsServerInetAddress, dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressPrefixLength=dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressPrefixLength, dvbRcsRcstCurrentSoftwareVersion=dvbRcsRcstCurrentSoftwareVersion, dvbRcsRcstExtNetworkGroup=dvbRcsRcstExtNetworkGroup, dvbRcsNetworkOamInetAddressPrefixLength=dvbRcsNetworkOamInetAddressPrefixLength, dvbRcsNetworkLanInetAddress=dvbRcsNetworkLanInetAddress, dvbRcsInstallStandByDuration=dvbRcsInstallStandByDuration, dvbRcsRtnLink=dvbRcsRtnLink, dvbRcsSecondaryDnsServerInetAddressPrefixLength=dvbRcsSecondaryDnsServerInetAddressPrefixLength, dvbRcsFwdStatusRolloff=dvbRcsFwdStatusRolloff, dvbRcsPhbIdentifier=dvbRcsPhbIdentifier, dvbRcsFwdStartTable=dvbRcsFwdStartTable, dvbRcsPktClassTable=dvbRcsPktClassTable, dvbRcsPktClassPhbAssociation=dvbRcsPktClassPhbAssociation, dvbRcsRcstNetworkGroup=dvbRcsRcstNetworkGroup, dvbRcsRequestClassEntry=dvbRcsRequestClassEntry, DvbRcsSatLabsFeatureMap=DvbRcsSatLabsFeatureMap, dvbRcsMib=dvbRcsMib, dvbRcsRequestClassRowStatus=dvbRcsRequestClassRowStatus, dvbRcsSystemOduRxLO=dvbRcsSystemOduRxLO, dvbRcsSystemOduAntennaSize=dvbRcsSystemOduAntennaSize, dvbRcsCtrlOduTxReferenceEnable=dvbRcsCtrlOduTxReferenceEnable, dvbRcsNetworkDnsServers=dvbRcsNetworkDnsServers, dvbRcsPktClassIndex=dvbRcsPktClassIndex, dvbRcsPktClassDscpHigh=dvbRcsPktClassDscpHigh, dvbRcsCtrlCwEnable=dvbRcsCtrlCwEnable, dvbRcsOduAntennaTypeEntry=dvbRcsOduAntennaTypeEntry, dvbRcsPrimaryDnsServerInetAddressPrefixLength=dvbRcsPrimaryDnsServerInetAddressPrefixLength, dvbRcsRequestClassTable=dvbRcsRequestClassTable, dvbRcsRcstExtControlGroup=dvbRcsRcstExtControlGroup, dvbRcsQosGlobalVbdcMaxBackLog=dvbRcsQosGlobalVbdcMaxBackLog, dvbRcsRcstExtInstallGroup=dvbRcsRcstExtInstallGroup, dvbRcsRcstControlGroup=dvbRcsRcstControlGroup, dvbRcsPhbMappingEntry=dvbRcsPhbMappingEntry, dvbRcsRtnConfigDefIfLevel=dvbRcsRtnConfigDefIfLevel, dvbRcsFwdStartFormat=dvbRcsFwdStartFormat, dvbRcsPhbMappingRowStatus=dvbRcsPhbMappingRowStatus, dvbRcsRcstDnsGroup=dvbRcsRcstDnsGroup, dvbRcsRcstAlternateSoftwareVersion=dvbRcsRcstAlternateSoftwareVersion, dvbRcsRcstLogUpdated=dvbRcsRcstLogUpdated, dvbRcsRequestClassCra=dvbRcsRequestClassCra, dvbRcsRcstInstall=dvbRcsRcstInstall, dvbRcsOduRxType=dvbRcsOduRxType, dvbRcsCtrlUserTrafficDisable=dvbRcsCtrlUserTrafficDisable, dvbRcsRcstGroups=dvbRcsRcstGroups, dvbRcsPhbMappingTable=dvbRcsPhbMappingTable, dvbRcsHttpPep=dvbRcsHttpPep, dvbRcsFwdStatusRxPower=dvbRcsFwdStatusRxPower, dvbRcsNetworkNccMgtInetAddressPrefixLength=dvbRcsNetworkNccMgtInetAddressPrefixLength, dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressType=dvbRcsNetworkAirInterfaceDefaultGatewayInetAddressType, dvbRcsMibObjects=dvbRcsMibObjects, dvbRcsQosChannelIdStrictDispatching=dvbRcsQosChannelIdStrictDispatching, dvbRcsRcstFwdLinkStatus=dvbRcsRcstFwdLinkStatus, dvbRcsFwdStartInnerFec=dvbRcsFwdStartInnerFec, dvbRcsFwdStatusFormat=dvbRcsFwdStatusFormat, dvbRcsPidIndex=dvbRcsPidIndex, dvbRcsInstallXPolReading=dvbRcsInstallXPolReading, dvbRcsFwdStatusFrequency=dvbRcsFwdStatusFrequency, dvbRcsRcstInstallGroup=dvbRcsRcstInstallGroup, dvbRcsRtnStatus=dvbRcsRtnStatus, dvbRcsFwdLink=dvbRcsFwdLink, dvbRcsSecondaryDnsServerInetAddressType=dvbRcsSecondaryDnsServerInetAddressType, dvbRcsFwdStartPolar=dvbRcsFwdStartPolar, dvbRcsPktClassSrcPortLow=dvbRcsPktClassSrcPortLow, dvbRcsConformance=dvbRcsConformance, dvbRcsFwdStatusPolar=dvbRcsFwdStatusPolar, dvbRcsFwdStartPopId=dvbRcsFwdStartPopId, dvbRcsPktClassDscpMarkValue=dvbRcsPktClassDscpMarkValue, dvbRcsRtnStatusEbN0=dvbRcsRtnStatusEbN0, dvbRcsOduRx=dvbRcsOduRx, dvbRcsCtrlRcstLogoffCommand=dvbRcsCtrlRcstLogoffCommand, dvbRcsCtrlOduTxDCEnable=dvbRcsCtrlOduTxDCEnable, dvbRcsRcstRtnLinkStatus=dvbRcsRcstRtnLinkStatus, dvbRcsOduAntennaType=dvbRcsOduAntennaType, dvbRcsPidValue=dvbRcsPidValue, dvbRcsFwdStatusSymbolRate=dvbRcsFwdStatusSymbolRate, dvbRcsOduTxTypeEntry=dvbRcsOduTxTypeEntry, dvbRcsPktClassDscpLow=dvbRcsPktClassDscpLow, dvbRcsFwdStatusGroup=dvbRcsFwdStatusGroup, dvbRcsCtrlActivateConfigFileCommand=dvbRcsCtrlActivateConfigFileCommand, dvbRcsPidPoolTable=dvbRcsPidPoolTable, dvbRcsRcstDownloadedConfigFileVersion=dvbRcsRcstDownloadedConfigFileVersion, dvbRcsRcstSystemGroup=dvbRcsRcstSystemGroup, dvbRcsFwdStatusEntry=dvbRcsFwdStatusEntry, dvbRcsInstallTargetEsN0=dvbRcsInstallTargetEsN0, dvbRcsCtrlOduRxDCEnable=dvbRcsCtrlOduRxDCEnable, dvbRcsSystemOduRxBand=dvbRcsSystemOduRxBand, dvbRcsRcstFaultStatus=dvbRcsRcstFaultStatus, dvbRcsNetworkNccMgtInetAddress=dvbRcsNetworkNccMgtInetAddress, dvbRcsFwdStartRolloff=dvbRcsFwdStartRolloff, dvbRcsInstallCwPower=dvbRcsInstallCwPower, dvbRcsOduAntennaTypeIndex=dvbRcsOduAntennaTypeIndex, dvbRcsOduAntenna=dvbRcsOduAntenna, dvbRcsRequestClassPidPoolReference=dvbRcsRequestClassPidPoolReference, dvbRcsQosGlobalVbdcMax=dvbRcsQosGlobalVbdcMax, dvbRcsRcstStateGroup=dvbRcsRcstStateGroup, dvbRcsPrimaryDnsServerInetAddressType=dvbRcsPrimaryDnsServerInetAddressType, dvbRcsNetworkLogFileUploadUrl=dvbRcsNetworkLogFileUploadUrl, dvbRcsOduTx=dvbRcsOduTx, dvbRcsRequestClassChanId=dvbRcsRequestClassChanId, dvbRcsPidPoolIndex=dvbRcsPidPoolIndex, dvbRcsRequestClassName=dvbRcsRequestClassName, dvbRcsPktClassIpProtocol=dvbRcsPktClassIpProtocol, dvbRcsRtnExtConfigGroup=dvbRcsRtnExtConfigGroup, dvbRcsTcpPep=dvbRcsTcpPep, dvbRcsRtnConfigMaxEirp=dvbRcsRtnConfigMaxEirp, dvbRcsFwdStatusInnerFec=dvbRcsFwdStatusInnerFec, dvbRcsRequestClassVccVpi=dvbRcsRequestClassVccVpi, dvbRcsOduTxType=dvbRcsOduTxType, dvbRcsFwdStatusFecFrame=dvbRcsFwdStatusFecFrame, dvbRcsFwdStatusIndex=dvbRcsFwdStatusIndex, dvbRcsFwdStatusNetName=dvbRcsFwdStatusNetName, PYSNMP_MODULE_ID=dvbRcsMib, dvbRcsCtrlRebootCommand=dvbRcsCtrlRebootCommand, dvbRcsSystemMibRevision=dvbRcsSystemMibRevision, dvbRcsCtrlDownloadFileCommand=dvbRcsCtrlDownloadFileCommand, dvbRcsCtrlRcstLogonCommand=dvbRcsCtrlRcstLogonCommand, dvbRcsRcstQos=dvbRcsRcstQos, dvbRcsRcstActivatedConfigFileVersion=dvbRcsRcstActivatedConfigFileVersion, dvbRcsCtrlUploadFileCommand=dvbRcsCtrlUploadFileCommand, dvbRcsCtrlRcstRxReacquire=dvbRcsCtrlRcstRxReacquire, dvbRcsRcstMode=dvbRcsRcstMode, dvbRcsFwdConfig=dvbRcsFwdConfig, dvbRcsInstallCoPolReading=dvbRcsInstallCoPolReading, dvbRcsFwdStatusPopId=dvbRcsFwdStatusPopId, dvbRcsFwdStatusNetId=dvbRcsFwdStatusNetId, dvbRcsPktClassRowStatus=dvbRcsPktClassRowStatus, dvbRcsRcstCompliances=dvbRcsRcstCompliances, dvbRcsOduTxTypeDescription=dvbRcsOduTxTypeDescription, dvbRcsFwdConfigGroup=dvbRcsFwdConfigGroup, dvbRcsRequestClassVbdcTimeout=dvbRcsRequestClassVbdcTimeout, dvbRcsRequestClassVccVci=dvbRcsRequestClassVccVci, dvbRcsPhbRequestClassAssociation=dvbRcsPhbRequestClassAssociation, DvbRcsSatLabsProfileMap=DvbRcsSatLabsProfileMap, dvbRcsPktClassDstInetAddressPrefixLength=dvbRcsPktClassDstInetAddressPrefixLength, dvbRcsRtnStatusSFDuration=dvbRcsRtnStatusSFDuration, dvbRcsCtrlRcstTxDisable=dvbRcsCtrlRcstTxDisable, dvbRcsNetworkOamInetAddressType=dvbRcsNetworkOamInetAddressType, dvbRcsRtnConfigGroup=dvbRcsRtnConfigGroup, dvbRcsRcstEnhancedClassifierGroup=dvbRcsRcstEnhancedClassifierGroup, dvbRcsRcstStrictQosGroup=dvbRcsRcstStrictQosGroup, dvbRcsOduTxTypeTable=dvbRcsOduTxTypeTable, dvbRcsPktClassSrcInetAddressPrefixLength=dvbRcsPktClassSrcInetAddressPrefixLength, dvbRcsFwdStatusModulation=dvbRcsFwdStatusModulation, dvbRcsOduRxTypeDescription=dvbRcsOduRxTypeDescription, dvbRcsRcstState=dvbRcsRcstState, dvbRcsRtnStatusPayloadUnit=dvbRcsRtnStatusPayloadUnit, DvbRcsSatLabsOptionMap=DvbRcsSatLabsOptionMap, dvbRcsPktClassDstPortHigh=dvbRcsPktClassDstPortHigh, dvbRcsSystemSatLabsProfilesDeclaration=dvbRcsSystemSatLabsProfilesDeclaration, dvbRcsPktClassVlanUserPri=dvbRcsPktClassVlanUserPri, dvbRcsFwdStatusTable=dvbRcsFwdStatusTable, dvbRcsSystemOduTxType=dvbRcsSystemOduTxType, dvbRcsFwdStartSymbolRate=dvbRcsFwdStartSymbolRate, dvbRcsSystemOduRxType=dvbRcsSystemOduRxType, dvbRcsPhbName=dvbRcsPhbName, dvbRcsRcst=dvbRcsRcst, dvbRcsRcstSystem=dvbRcsRcstSystem, dvbRcsSystemOduTxLO=dvbRcsSystemOduTxLO, dvbRcsOduRxTypeTable=dvbRcsOduRxTypeTable, dvbRcsOduRxTypeEntry=dvbRcsOduRxTypeEntry, dvbRcsPktClassEntry=dvbRcsPktClassEntry, dvbRcsSystemOduAntennaGain=dvbRcsSystemOduAntennaGain, dvbRcsRtnExtStatusGroup=dvbRcsRtnExtStatusGroup, dvbRcsRcstQosGroup=dvbRcsRcstQosGroup, dvbRcsRequestClassIndex=dvbRcsRequestClassIndex, dvbRcsSystemOduSspa=dvbRcsSystemOduSspa, dvbRcsSecondaryDnsServerInetAddress=dvbRcsSecondaryDnsServerInetAddress, dvbRcsOduAntennaTypeDescription=dvbRcsOduAntennaTypeDescription, dvbRcsFwdStatusPilot=dvbRcsFwdStatusPilot, dvbRcsRequestClassRbdcTimeout=dvbRcsRequestClassRbdcTimeout, dvbRcsOduRxTypeIndex=dvbRcsOduRxTypeIndex, dvbRcsRcstControl=dvbRcsRcstControl, dvbRcsNetworkLanInetAddressPrefixLength=dvbRcsNetworkLanInetAddressPrefixLength, dvbRcsNetworkInstallLogFileUploadUrl=dvbRcsNetworkInstallLogFileUploadUrl, dvbRcsInstallXPolTarget=dvbRcsInstallXPolTarget)
