#
# PySNMP MIB module NETSCREEN-VR-RIPv2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VR-RIPv2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
netscreenVR, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVR")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Counter64, iso, Bits, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, IpAddress, MibIdentifier, ObjectIdentity, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "iso", "Bits", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "IpAddress", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
nsVrRip2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 18, 7))
if mibBuilder.loadTexts: nsVrRip2.setLastUpdated('200506202022Z')
if mibBuilder.loadTexts: nsVrRip2.setOrganization('Juniper Networks, Inc.')
class RouteTag(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

nsVrRip2GlobalsTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 7, 1), )
if mibBuilder.loadTexts: nsVrRip2GlobalsTable.setStatus('current')
nsVrRip2GlobalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 7, 1, 1), ).setIndexNames((0, "NETSCREEN-VR-RIPv2-MIB", "nsVrRip2GlobalVRID"))
if mibBuilder.loadTexts: nsVrRip2GlobalsEntry.setStatus('current')
nsVrRip2GlobalRouteChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2GlobalRouteChanges.setStatus('current')
nsVrRip2GlobalQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2GlobalQueries.setStatus('current')
nsVrRip2GlobalVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2GlobalVRID.setStatus('current')
nsVrRip2IfStatTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 7, 2), )
if mibBuilder.loadTexts: nsVrRip2IfStatTable.setStatus('current')
nsVrRip2IfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 7, 2, 1), ).setIndexNames((0, "NETSCREEN-VR-RIPv2-MIB", "nsVrRip2IfStatVRID"), (0, "NETSCREEN-VR-RIPv2-MIB", "nsVrRip2IfStatAddress"))
if mibBuilder.loadTexts: nsVrRip2IfStatEntry.setStatus('current')
nsVrRip2IfStatAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2IfStatAddress.setStatus('current')
nsVrRip2IfStatRcvBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2IfStatRcvBadPackets.setStatus('current')
nsVrRip2IfStatRcvBadRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2IfStatRcvBadRoutes.setStatus('current')
nsVrRip2IfStatSentUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2IfStatSentUpdates.setStatus('current')
nsVrRip2IfStatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrRip2IfStatStatus.setStatus('current')
nsVrRip2IfStatVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2IfStatVRID.setStatus('current')
nsVrRip2IfConfTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3), )
if mibBuilder.loadTexts: nsVrRip2IfConfTable.setStatus('current')
nsVrRip2IfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1), ).setIndexNames((0, "NETSCREEN-VR-RIPv2-MIB", "nsVrRip2IfConfVRID"), (0, "NETSCREEN-VR-RIPv2-MIB", "nsVrRip2IfConfAddress"))
if mibBuilder.loadTexts: nsVrRip2IfConfEntry.setStatus('current')
nsVrRip2IfConfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2IfConfAddress.setStatus('current')
nsVrRip2IfConfDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 2), RouteTag().clone(hexValue="0000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrRip2IfConfDomain.setStatus('obsolete')
nsVrRip2IfConfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuthentication", 1), ("simplePassword", 2), ("md5", 3))).clone('noAuthentication')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrRip2IfConfAuthType.setStatus('current')
nsVrRip2IfConfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrRip2IfConfAuthKey.setStatus('current')
nsVrRip2IfConfSend = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("doNotSend", 1), ("ripVersion1", 2), ("rip1Compatible", 3), ("ripVersion2", 4), ("ripV1Demand", 5), ("ripV2Demand", 6))).clone('rip1Compatible')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrRip2IfConfSend.setStatus('current')
nsVrRip2IfConfReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rip1", 1), ("rip2", 2), ("rip1OrRip2", 3), ("doNotRecieve", 4))).clone('rip1OrRip2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrRip2IfConfReceive.setStatus('current')
nsVrRip2IfConfDefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrRip2IfConfDefaultMetric.setStatus('current')
nsVrRip2IfConfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrRip2IfConfStatus.setStatus('current')
nsVrRip2IfConfSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrRip2IfConfSrcAddress.setStatus('current')
nsVrRip2IfConfVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2IfConfVRID.setStatus('current')
nsVrRip2PeerTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 7, 4), )
if mibBuilder.loadTexts: nsVrRip2PeerTable.setStatus('current')
nsVrRip2PeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 7, 4, 1), ).setIndexNames((0, "NETSCREEN-VR-RIPv2-MIB", "nsVrRip2PeerVRID"), (0, "NETSCREEN-VR-RIPv2-MIB", "nsVrRip2PeerAddress"), (0, "NETSCREEN-VR-RIPv2-MIB", "nsVrRip2PeerDomain"))
if mibBuilder.loadTexts: nsVrRip2PeerEntry.setStatus('current')
nsVrRip2PeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2PeerAddress.setStatus('current')
nsVrRip2PeerDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 4, 1, 2), RouteTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2PeerDomain.setStatus('current')
nsVrRip2PeerLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 4, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2PeerLastUpdate.setStatus('current')
nsVrRip2PeerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2PeerVersion.setStatus('current')
nsVrRip2PeerRcvBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2PeerRcvBadPackets.setStatus('current')
nsVrRip2PeerRcvBadRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2PeerRcvBadRoutes.setStatus('current')
nsVrRip2PeerVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 7, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrRip2PeerVRID.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-VR-RIPv2-MIB", nsVrRip2IfConfDefaultMetric=nsVrRip2IfConfDefaultMetric, nsVrRip2IfConfAuthType=nsVrRip2IfConfAuthType, nsVrRip2IfStatTable=nsVrRip2IfStatTable, nsVrRip2=nsVrRip2, nsVrRip2IfConfStatus=nsVrRip2IfConfStatus, nsVrRip2GlobalVRID=nsVrRip2GlobalVRID, nsVrRip2PeerVersion=nsVrRip2PeerVersion, nsVrRip2PeerDomain=nsVrRip2PeerDomain, nsVrRip2IfStatSentUpdates=nsVrRip2IfStatSentUpdates, nsVrRip2GlobalsEntry=nsVrRip2GlobalsEntry, nsVrRip2GlobalRouteChanges=nsVrRip2GlobalRouteChanges, nsVrRip2PeerVRID=nsVrRip2PeerVRID, nsVrRip2PeerRcvBadPackets=nsVrRip2PeerRcvBadPackets, nsVrRip2PeerLastUpdate=nsVrRip2PeerLastUpdate, nsVrRip2PeerAddress=nsVrRip2PeerAddress, RouteTag=RouteTag, nsVrRip2IfStatAddress=nsVrRip2IfStatAddress, nsVrRip2IfConfAuthKey=nsVrRip2IfConfAuthKey, nsVrRip2PeerRcvBadRoutes=nsVrRip2PeerRcvBadRoutes, nsVrRip2IfStatRcvBadRoutes=nsVrRip2IfStatRcvBadRoutes, nsVrRip2IfStatRcvBadPackets=nsVrRip2IfStatRcvBadPackets, nsVrRip2GlobalQueries=nsVrRip2GlobalQueries, PYSNMP_MODULE_ID=nsVrRip2, nsVrRip2IfConfSend=nsVrRip2IfConfSend, nsVrRip2IfConfReceive=nsVrRip2IfConfReceive, nsVrRip2IfStatEntry=nsVrRip2IfStatEntry, nsVrRip2IfConfAddress=nsVrRip2IfConfAddress, nsVrRip2IfConfSrcAddress=nsVrRip2IfConfSrcAddress, nsVrRip2IfConfVRID=nsVrRip2IfConfVRID, nsVrRip2IfStatStatus=nsVrRip2IfStatStatus, nsVrRip2IfConfDomain=nsVrRip2IfConfDomain, nsVrRip2GlobalsTable=nsVrRip2GlobalsTable, nsVrRip2IfConfEntry=nsVrRip2IfConfEntry, nsVrRip2PeerTable=nsVrRip2PeerTable, nsVrRip2IfConfTable=nsVrRip2IfConfTable, nsVrRip2IfStatVRID=nsVrRip2IfStatVRID, nsVrRip2PeerEntry=nsVrRip2PeerEntry)
