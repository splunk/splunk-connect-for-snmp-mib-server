#
# PySNMP MIB module MCAST-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MCAST-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:00:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, MibIdentifier, TimeTicks, Integer32, ModuleIdentity, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, iso, Gauge32, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "TimeTicks", "Integer32", "ModuleIdentity", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "iso", "Gauge32", "ObjectIdentity", "NotificationType")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
swMcastVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 64))
if mibBuilder.loadTexts: swMcastVlanMIB.setLastUpdated('1001110000Z')
if mibBuilder.loadTexts: swMcastVlanMIB.setOrganization('D-Link Corp.')
class PortList(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

swMcastVlanCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 64, 1))
swMcastVlanInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 64, 2))
swMcastVlanMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 64, 3))
swISMVlanGlobalState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 64, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanGlobalState.setStatus('current')
swMSMVlanGlobalState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 64, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanGlobalState.setStatus('current')
swISMVlanForwardUnmatchedState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 64, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanForwardUnmatchedState.setStatus('current')
swMSMVlanForwardUnmatchedState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 64, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanForwardUnmatchedState.setStatus('current')
swISMVlanTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1), )
if mibBuilder.loadTexts: swISMVlanTable.setStatus('current')
swISMVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1), ).setIndexNames((0, "MCAST-VLAN-MIB", "swISMVlanID"))
if mibBuilder.loadTexts: swISMVlanEntry.setStatus('current')
swISMVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swISMVlanID.setStatus('current')
swISMVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swISMVlanName.setStatus('current')
swISMVlanSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanSourcePort.setStatus('current')
swISMVlanMemberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanMemberPort.setStatus('current')
swISMVlanTagMemberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanTagMemberPort.setStatus('current')
swISMVlanUntagSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 6), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanUntagSourcePort.setStatus('current')
swISMVlanState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanState.setStatus('current')
swISMVlanRepSourceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 8), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanRepSourceAddrType.setStatus('current')
swISMVlanRepSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanRepSourceAddr.setStatus('current')
swISMVlanRemapPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 7), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swISMVlanRemapPriority.setStatus('current')
swISMVlanReplacePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swISMVlanReplacePriority.setStatus('current')
swISMVlanProfileIDList = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swISMVlanProfileIDList.setStatus('current')
swISMVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swISMVlanRowStatus.setStatus('current')
swISMVlanGroupProfTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 2), )
if mibBuilder.loadTexts: swISMVlanGroupProfTable.setStatus('current')
swISMVlanGroupProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 2, 1), ).setIndexNames((0, "MCAST-VLAN-MIB", "swISMVlanGroupProfName"))
if mibBuilder.loadTexts: swISMVlanGroupProfEntry.setStatus('current')
swISMVlanGroupProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swISMVlanGroupProfName.setStatus('current')
swISMVlanGroupProfID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swISMVlanGroupProfID.setStatus('current')
swISMVlanGroupProfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swISMVlanGroupProfStatus.setStatus('current')
swISMVlanGroupProfAddrTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 3), )
if mibBuilder.loadTexts: swISMVlanGroupProfAddrTable.setStatus('current')
swISMVlanGroupProfAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 3, 1), ).setIndexNames((0, "MCAST-VLAN-MIB", "swISMVlanGroupProfName"), (0, "MCAST-VLAN-MIB", "swISMVlanGroupProfAddrType"), (0, "MCAST-VLAN-MIB", "swISMVlanGroupProfAddrStart"), (0, "MCAST-VLAN-MIB", "swISMVlanGroupProfAddrEnd"))
if mibBuilder.loadTexts: swISMVlanGroupProfAddrEntry.setStatus('current')
swISMVlanGroupProfAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 3, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swISMVlanGroupProfAddrType.setStatus('current')
swISMVlanGroupProfAddrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 3, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swISMVlanGroupProfAddrStart.setStatus('current')
swISMVlanGroupProfAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 3, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swISMVlanGroupProfAddrEnd.setStatus('current')
swISMVlanGroupProfAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swISMVlanGroupProfAddrStatus.setStatus('current')
swMSMVlanTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4), )
if mibBuilder.loadTexts: swMSMVlanTable.setStatus('current')
swMSMVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1), ).setIndexNames((0, "MCAST-VLAN-MIB", "swMSMVlanID"))
if mibBuilder.loadTexts: swMSMVlanEntry.setStatus('current')
swMSMVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMSMVlanID.setStatus('current')
swMSMVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swMSMVlanName.setStatus('current')
swMSMVlanSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanSourcePort.setStatus('current')
swMSMVlanMemberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanMemberPort.setStatus('current')
swMSMVlanTagMemberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanTagMemberPort.setStatus('current')
swMSMVlanUntagSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 6), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanUntagSourcePort.setStatus('current')
swMSMVlanState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanState.setStatus('current')
swMSMVlanRepSourceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 8), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanRepSourceAddrType.setStatus('current')
swMSMVlanRepSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanRepSourceAddr.setStatus('current')
swMSMVlanRemapPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 7), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swMSMVlanRemapPriority.setStatus('current')
swMSMVlanReplacePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swMSMVlanReplacePriority.setStatus('current')
swMSMVlanProfileIDList = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMSMVlanProfileIDList.setStatus('current')
swMSMVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 4, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swMSMVlanRowStatus.setStatus('current')
swMSMVlanGroupProfTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 5), )
if mibBuilder.loadTexts: swMSMVlanGroupProfTable.setStatus('current')
swMSMVlanGroupProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 5, 1), ).setIndexNames((0, "MCAST-VLAN-MIB", "swMSMVlanGroupProfName"))
if mibBuilder.loadTexts: swMSMVlanGroupProfEntry.setStatus('current')
swMSMVlanGroupProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMSMVlanGroupProfName.setStatus('current')
swMSMVlanGroupProfID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMSMVlanGroupProfID.setStatus('current')
swMSMVlanGroupProfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swMSMVlanGroupProfStatus.setStatus('current')
swMSMVlanGroupProfAddrTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 6), )
if mibBuilder.loadTexts: swMSMVlanGroupProfAddrTable.setStatus('current')
swMSMVlanGroupProfAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 6, 1), ).setIndexNames((0, "MCAST-VLAN-MIB", "swMSMVlanGroupProfName"), (0, "MCAST-VLAN-MIB", "swMSMVlanGroupProfAddrType"), (0, "MCAST-VLAN-MIB", "swMSMVlanGroupProfAddrStart"), (0, "MCAST-VLAN-MIB", "swMSMVlanGroupProfAddrEnd"))
if mibBuilder.loadTexts: swMSMVlanGroupProfAddrEntry.setStatus('current')
swMSMVlanGroupProfAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 6, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMSMVlanGroupProfAddrType.setStatus('current')
swMSMVlanGroupProfAddrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 6, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMSMVlanGroupProfAddrStart.setStatus('current')
swMSMVlanGroupProfAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 6, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMSMVlanGroupProfAddrEnd.setStatus('current')
swMSMVlanGroupProfAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 64, 3, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swMSMVlanGroupProfAddrStatus.setStatus('current')
mibBuilder.exportSymbols("MCAST-VLAN-MIB", swMcastVlanCtrl=swMcastVlanCtrl, swMSMVlanEntry=swMSMVlanEntry, swMSMVlanGlobalState=swMSMVlanGlobalState, swISMVlanEntry=swISMVlanEntry, swISMVlanGroupProfAddrTable=swISMVlanGroupProfAddrTable, swISMVlanProfileIDList=swISMVlanProfileIDList, swISMVlanSourcePort=swISMVlanSourcePort, swISMVlanGroupProfEntry=swISMVlanGroupProfEntry, swISMVlanGroupProfStatus=swISMVlanGroupProfStatus, swISMVlanGroupProfAddrStart=swISMVlanGroupProfAddrStart, swMSMVlanProfileIDList=swMSMVlanProfileIDList, swMSMVlanRowStatus=swMSMVlanRowStatus, swISMVlanGroupProfTable=swISMVlanGroupProfTable, swISMVlanGroupProfName=swISMVlanGroupProfName, swMSMVlanGroupProfID=swMSMVlanGroupProfID, swMSMVlanName=swMSMVlanName, swISMVlanTagMemberPort=swISMVlanTagMemberPort, swMSMVlanTagMemberPort=swMSMVlanTagMemberPort, swISMVlanGroupProfID=swISMVlanGroupProfID, swMSMVlanForwardUnmatchedState=swMSMVlanForwardUnmatchedState, swISMVlanID=swISMVlanID, swISMVlanRepSourceAddrType=swISMVlanRepSourceAddrType, swISMVlanGroupProfAddrStatus=swISMVlanGroupProfAddrStatus, swMSMVlanUntagSourcePort=swMSMVlanUntagSourcePort, swMSMVlanGroupProfTable=swMSMVlanGroupProfTable, swMSMVlanGroupProfAddrEnd=swMSMVlanGroupProfAddrEnd, swMSMVlanRemapPriority=swMSMVlanRemapPriority, swISMVlanGroupProfAddrEnd=swISMVlanGroupProfAddrEnd, swMcastVlanMgmt=swMcastVlanMgmt, swISMVlanForwardUnmatchedState=swISMVlanForwardUnmatchedState, swMcastVlanInfo=swMcastVlanInfo, PortList=PortList, swISMVlanUntagSourcePort=swISMVlanUntagSourcePort, swMSMVlanTable=swMSMVlanTable, swMcastVlanMIB=swMcastVlanMIB, swMSMVlanID=swMSMVlanID, swMSMVlanState=swMSMVlanState, swMSMVlanRepSourceAddrType=swMSMVlanRepSourceAddrType, swISMVlanReplacePriority=swISMVlanReplacePriority, swMSMVlanGroupProfAddrType=swMSMVlanGroupProfAddrType, PYSNMP_MODULE_ID=swMcastVlanMIB, swISMVlanGlobalState=swISMVlanGlobalState, swMSMVlanGroupProfStatus=swMSMVlanGroupProfStatus, swISMVlanState=swISMVlanState, swMSMVlanGroupProfAddrTable=swMSMVlanGroupProfAddrTable, swMSMVlanSourcePort=swMSMVlanSourcePort, swMSMVlanGroupProfAddrEntry=swMSMVlanGroupProfAddrEntry, swISMVlanName=swISMVlanName, swISMVlanTable=swISMVlanTable, swMSMVlanReplacePriority=swMSMVlanReplacePriority, swISMVlanRemapPriority=swISMVlanRemapPriority, swMSMVlanGroupProfAddrStatus=swMSMVlanGroupProfAddrStatus, swMSMVlanGroupProfName=swMSMVlanGroupProfName, swISMVlanRepSourceAddr=swISMVlanRepSourceAddr, swMSMVlanRepSourceAddr=swMSMVlanRepSourceAddr, swISMVlanGroupProfAddrType=swISMVlanGroupProfAddrType, swMSMVlanGroupProfEntry=swMSMVlanGroupProfEntry, swISMVlanRowStatus=swISMVlanRowStatus, swMSMVlanMemberPort=swMSMVlanMemberPort, swMSMVlanGroupProfAddrStart=swMSMVlanGroupProfAddrStart, swISMVlanGroupProfAddrEntry=swISMVlanGroupProfAddrEntry, swISMVlanMemberPort=swISMVlanMemberPort)
