#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-IpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-IpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, RouterID, Unsigned32, RowPointer, PhysAddress, Integer32, Counter32, RowStatus, AreaID, DisplayString, StorageType, Gauge32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "InterfaceIndex", "RouterID", "Unsigned32", "RowPointer", "PhysAddress", "Integer32", "Counter32", "RowStatus", "AreaID", "DisplayString", "StorageType", "Gauge32")
AsciiString, Link, NonReplicated, HexString, DashedHexString, AsciiStringIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "AsciiString", "Link", "NonReplicated", "HexString", "DashedHexString", "AsciiStringIndex")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
mscVrPp, mscVrIndex, mscVrPpIndex, mscVr = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPp", "mscVrIndex", "mscVrPpIndex", "mscVr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ObjectIdentity, Counter64, Unsigned32, Bits, ModuleIdentity, TimeTicks, Integer32, Counter32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "Counter64", "Unsigned32", "Bits", "ModuleIdentity", "TimeTicks", "Integer32", "Counter32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ipMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 27))
mscVrPpIpPort = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5))
mscVrPpIpPortRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortRowStatusTable.setStatus('mandatory')
mscVrPpIpPortRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortRowStatus.setStatus('mandatory')
mscVrPpIpPortComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortComponentName.setStatus('mandatory')
mscVrPpIpPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortStorageType.setStatus('mandatory')
mscVrPpIpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpIpPortIndex.setStatus('mandatory')
mscVrPpIpPortProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10), )
if mibBuilder.loadTexts: mscVrPpIpPortProvTable.setStatus('mandatory')
mscVrPpIpPortProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortProvEntry.setStatus('mandatory')
mscVrPpIpPortMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 18944), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortMaxTxUnit.setStatus('mandatory')
mscVrPpIpPortArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortArpStatus.setStatus('mandatory')
mscVrPpIpPortProxyArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortProxyArpStatus.setStatus('mandatory')
mscVrPpIpPortArpNoLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortArpNoLearn.setStatus('mandatory')
mscVrPpIpPortSendRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortSendRedirect.setStatus('mandatory')
mscVrPpIpPortMulticastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortMulticastStatus.setStatus('mandatory')
mscVrPpIpPortRelayAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 8), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortRelayAddress.setStatus('mandatory')
mscVrPpIpPortRelayBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("auto", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortRelayBroadcast.setStatus('mandatory')
mscVrPpIpPortLinkModel = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localAreaNetwork", 1), ("pointToPoint", 2))).clone('localAreaNetwork')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLinkModel.setStatus('mandatory')
mscVrPpIpPortLanModel = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localAreaNetwork", 1), ("nonBroadcastMultipleAccess", 2))).clone('localAreaNetwork')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLanModel.setStatus('mandatory')
mscVrPpIpPortEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ieee8023", 1), ("ethernet", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortEncap.setStatus('mandatory')
mscVrPpIpPortIcmpMaskReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortIcmpMaskReply.setStatus('mandatory')
mscVrPpIpPortDirectedBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortDirectedBroadcast.setStatus('mandatory')
mscVrPpIpPortAssignedQos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortAssignedQos.setStatus('mandatory')
mscVrPpIpPortAllowMcastMacDest = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortAllowMcastMacDest.setStatus('mandatory')
mscVrPpIpPortCosPolicyAssignment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 10, 1, 17), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortCosPolicyAssignment.setStatus('mandatory')
mscVrPpIpPortSresProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 11), )
if mibBuilder.loadTexts: mscVrPpIpPortSresProvTable.setStatus('mandatory')
mscVrPpIpPortSresProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortSresProvEntry.setStatus('mandatory')
mscVrPpIpPortSourceRouteEndStationSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortSourceRouteEndStationSupport.setStatus('mandatory')
mscVrPpIpPortAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 12), )
if mibBuilder.loadTexts: mscVrPpIpPortAdminControlTable.setStatus('mandatory')
mscVrPpIpPortAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortAdminControlEntry.setStatus('mandatory')
mscVrPpIpPortSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortSnmpAdminStatus.setStatus('mandatory')
mscVrPpIpPortOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 13), )
if mibBuilder.loadTexts: mscVrPpIpPortOperTable.setStatus('mandatory')
mscVrPpIpPortOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortOperEntry.setStatus('mandatory')
mscVrPpIpPortMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("ethernet", 1), ("fddi", 2), ("tokenRing", 3), ("ppp", 4), ("vcpEther", 5), ("vcpToken", 6), ("vns", 7), ("x25", 8), ("frameRelay", 9), ("clusterBridge", 10), ("smds", 11), ("invalid", 12), ("atmMpeVcEncap", 13), ("atmMpeLlcEncap", 14), ("lecEther", 15), ("lecToken", 16), ("tunnel", 17), ("virtual", 18))).clone('invalid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortMediaType.setStatus('mandatory')
mscVrPpIpPortOperMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 18944), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortOperMtu.setStatus('mandatory')
mscVrPpIpPortOperArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortOperArpStatus.setStatus('mandatory')
mscVrPpIpPortOperMulticastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortOperMulticastStatus.setStatus('mandatory')
mscVrPpIpPortOperEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ieee8023", 1), ("ethernet", 2), ("notApplicable", 3))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortOperEncap.setStatus('mandatory')
mscVrPpIpPortOperCosPolicyAssignment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 13, 1, 433), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortOperCosPolicyAssignment.setStatus('mandatory')
mscVrPpIpPortRelayBcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 14), )
if mibBuilder.loadTexts: mscVrPpIpPortRelayBcOperTable.setStatus('mandatory')
mscVrPpIpPortRelayBcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortRelayBcOperEntry.setStatus('mandatory')
mscVrPpIpPortRelayAddressCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortRelayAddressCount.setStatus('mandatory')
mscVrPpIpPortRelayBcCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortRelayBcCount.setStatus('mandatory')
mscVrPpIpPortStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 15), )
if mibBuilder.loadTexts: mscVrPpIpPortStateTable.setStatus('mandatory')
mscVrPpIpPortStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortStateEntry.setStatus('mandatory')
mscVrPpIpPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortAdminState.setStatus('mandatory')
mscVrPpIpPortOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortOperationalState.setStatus('mandatory')
mscVrPpIpPortUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortUsageState.setStatus('mandatory')
mscVrPpIpPortOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 16), )
if mibBuilder.loadTexts: mscVrPpIpPortOperStatusTable.setStatus('mandatory')
mscVrPpIpPortOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortOperStatusEntry.setStatus('mandatory')
mscVrPpIpPortSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortSnmpOperStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2))
mscVrPpIpPortLogicalIfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRowStatusTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRowStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfComponentName.setStatus('mandatory')
mscVrPpIpPortLogicalIfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfStorageType.setStatus('mandatory')
mscVrPpIpPortLogicalIfAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfAddressIndex.setStatus('mandatory')
mscVrPpIpPortLogicalIfProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 10), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfProvTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfProvEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfNetMask.setStatus('mandatory')
mscVrPpIpPortLogicalIfBroadcastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 10, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfBroadcastAddress.setStatus('mandatory')
mscVrPpIpPortLogicalIfLinkDestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 10, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfLinkDestinationAddress.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2))
mscVrPpIpPortLogicalIfOspfIfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfRowStatusTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfRowStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfComponentName.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfStorageType.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfIndex.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfProvTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfProvEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 1), AreaID().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfAreaId.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("nbma", 2), ("pointToPoint", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfIfType.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfSnmpAdminStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfRtrPriority.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTransitDelay.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfRetransInterval.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfHelloInterval.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfRtrDeadInterval.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfPollInterval.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 10), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)).clone(hexValue="0000000000000000")).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfAuthKey.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfMulticastForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("blocked", 1))).clone('blocked')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfMulticastForwarding.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 11), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfOperTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfOperEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("pointToPoint", 4), ("designatedRouter", 5), ("backupDesignatedRouter", 6), ("otherDesignatedRouter", 7))).clone('designatedRouter')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfState.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfDesignatedRouter.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfBackupDesignatedRouter.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfEvents.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfMetricTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 12), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfMetricTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfMetricEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfMetric.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTOS = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2))
mscVrPpIpPortLogicalIfOspfIfTOSRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTOSRowStatusTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTOSRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfTOSMetricTosIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTOSRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTOSRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTOSRowStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTOSComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTOSComponentName.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTOSStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTOSStorageType.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTOSMetricTosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTOSMetricTosIndex.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTOSProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2, 10), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTOSProvTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTOSProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfTOSMetricTosIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTOSProvEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfTOSTosMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfTOSTosMetric.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3))
mscVrPpIpPortLogicalIfOspfIfNbrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrRowStatusTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfNbrAddressIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrRowStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrComponentName.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrStorageType.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrAddressIndex.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 10), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrProvTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfNbrAddressIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrProvEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrPriority.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 11), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrOperTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfOspfIfNbrAddressIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrOperEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 11, 1, 1), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrRtrId.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrOptions.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrState.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrEvents.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrLsRetransQlen = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 11, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrLsRetransQlen.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrExchangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrExchangeStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfOspfIfNbrPermanance = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 2, 3, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permanent", 1), ("dynamic", 2))).clone('permanent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfOspfIfNbrPermanance.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3))
mscVrPpIpPortLogicalIfRipIfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfRowStatusTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfRipIfIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfRowStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfComponentName.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfStorageType.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfIndex.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfProvTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfRipIfIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfProvEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfSnmpAdminStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfMetric.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfSilentFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfSilentFlag.setStatus('obsolete')
mscVrPpIpPortLogicalIfRipIfPoisonReverseFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfPoisonReverseFlag.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfFlashUpdateFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfFlashUpdateFlag.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfNetworkRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("naturalNetWithOutDefaultRoute", 1), ("naturalNetWithDefaultRoute", 2), ("defaultRouteOnly", 3), ("subnetsOnly", 4))).clone('naturalNetWithOutDefaultRoute')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfNetworkRouteStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfDefaultRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfDefaultRouteMetric.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfAcceptDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfAcceptDefault.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfIfConfSend = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("doNotSend", 1), ("ripVersion1", 2), ("rip1Compatible", 3), ("ripVersion2", 4))).clone('rip1Compatible')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfIfConfSend.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfIfConfReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rip1", 1), ("rip2", 2), ("rip1OrRip2", 3), ("doNotReceive", 4))).clone('rip1OrRip2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfIfConfReceive.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 11), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfStatTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfRipIfIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfStatEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfIfBadPacketRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfIfBadPacketRcv.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfIfBadRouteRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfIfBadRouteRcv.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfIfTriggeredUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfIfTriggeredUpdates.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 2))
mscVrPpIpPortLogicalIfRipIfNbrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 2, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfNbrRowStatusTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfNbrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfRipIfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfRipIfNbrIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfNbrRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfNbrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfNbrRowStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfNbrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfNbrComponentName.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfNbrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfNbrStorageType.setStatus('mandatory')
mscVrPpIpPortLogicalIfRipIfNbrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 3, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfRipIfNbrIndex.setStatus('mandatory')
mscVrPpIpPortNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3))
mscVrPpIpPortNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortNsRowStatusTable.setStatus('mandatory')
mscVrPpIpPortNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortNsIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortNsRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortNsRowStatus.setStatus('mandatory')
mscVrPpIpPortNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortNsComponentName.setStatus('mandatory')
mscVrPpIpPortNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortNsStorageType.setStatus('mandatory')
mscVrPpIpPortNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpIpPortNsIndex.setStatus('mandatory')
mscVrPpIpPortNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 10), )
if mibBuilder.loadTexts: mscVrPpIpPortNsProvTable.setStatus('mandatory')
mscVrPpIpPortNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortNsIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortNsProvEntry.setStatus('mandatory')
mscVrPpIpPortNsIncomingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortNsIncomingFilter.setStatus('mandatory')
mscVrPpIpPortNsOutgoingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 3, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortNsOutgoingFilter.setStatus('mandatory')
mscVrPpIpPortBootpP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4))
mscVrPpIpPortBootpPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortBootpPRowStatusTable.setStatus('mandatory')
mscVrPpIpPortBootpPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortBootpPIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortBootpPRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortBootpPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPRowStatus.setStatus('mandatory')
mscVrPpIpPortBootpPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPComponentName.setStatus('mandatory')
mscVrPpIpPortBootpPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPStorageType.setStatus('mandatory')
mscVrPpIpPortBootpPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpIpPortBootpPIndex.setStatus('mandatory')
mscVrPpIpPortBootpPProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 10), )
if mibBuilder.loadTexts: mscVrPpIpPortBootpPProvTable.setStatus('mandatory')
mscVrPpIpPortBootpPProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortBootpPIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortBootpPProvEntry.setStatus('mandatory')
mscVrPpIpPortBootpPRelayForwardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("auto", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPRelayForwardStatus.setStatus('mandatory')
mscVrPpIpPortBootpPBootpLogicalInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 10, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPBootpLogicalInterface.setStatus('mandatory')
mscVrPpIpPortBootpPAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 11), )
if mibBuilder.loadTexts: mscVrPpIpPortBootpPAdminControlTable.setStatus('mandatory')
mscVrPpIpPortBootpPAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortBootpPIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortBootpPAdminControlEntry.setStatus('mandatory')
mscVrPpIpPortBootpPSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPSnmpAdminStatus.setStatus('mandatory')
mscVrPpIpPortBootpPOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 12), )
if mibBuilder.loadTexts: mscVrPpIpPortBootpPOperStatusTable.setStatus('mandatory')
mscVrPpIpPortBootpPOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortBootpPIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortBootpPOperStatusEntry.setStatus('mandatory')
mscVrPpIpPortBootpPSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPSnmpOperStatus.setStatus('mandatory')
mscVrPpIpPortBootpPStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 13), )
if mibBuilder.loadTexts: mscVrPpIpPortBootpPStateTable.setStatus('mandatory')
mscVrPpIpPortBootpPStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortBootpPIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortBootpPStateEntry.setStatus('mandatory')
mscVrPpIpPortBootpPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPAdminState.setStatus('mandatory')
mscVrPpIpPortBootpPOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPOperationalState.setStatus('mandatory')
mscVrPpIpPortBootpPUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPUsageState.setStatus('mandatory')
mscVrPpIpPortBootpPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 14), )
if mibBuilder.loadTexts: mscVrPpIpPortBootpPStatsTable.setStatus('mandatory')
mscVrPpIpPortBootpPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortBootpPIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortBootpPStatsEntry.setStatus('mandatory')
mscVrPpIpPortBootpPInRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPInRequests.setStatus('mandatory')
mscVrPpIpPortBootpPInReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPInReplies.setStatus('mandatory')
mscVrPpIpPortBootpPOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPOutRequests.setStatus('mandatory')
mscVrPpIpPortBootpPOutReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPOutReplies.setStatus('mandatory')
mscVrPpIpPortBootpPInRequestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPInRequestErrors.setStatus('mandatory')
mscVrPpIpPortBootpPInReplyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPInReplyErrors.setStatus('mandatory')
mscVrPpIpPortBootpPAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 290), )
if mibBuilder.loadTexts: mscVrPpIpPortBootpPAddrTable.setStatus('mandatory')
mscVrPpIpPortBootpPAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 290, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortBootpPIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortBootpPAddrValue"))
if mibBuilder.loadTexts: mscVrPpIpPortBootpPAddrEntry.setStatus('mandatory')
mscVrPpIpPortBootpPAddrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 290, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPAddrValue.setStatus('mandatory')
mscVrPpIpPortBootpPAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 4, 290, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscVrPpIpPortBootpPAddrRowStatus.setStatus('mandatory')
mscVrIp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6))
mscVrIpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 1), )
if mibBuilder.loadTexts: mscVrIpRowStatusTable.setStatus('mandatory')
mscVrIpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"))
if mibBuilder.loadTexts: mscVrIpRowStatusEntry.setStatus('mandatory')
mscVrIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRowStatus.setStatus('mandatory')
mscVrIpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpComponentName.setStatus('mandatory')
mscVrIpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStorageType.setStatus('mandatory')
mscVrIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpIndex.setStatus('mandatory')
mscVrIpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 100), )
if mibBuilder.loadTexts: mscVrIpProvTable.setStatus('mandatory')
mscVrIpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"))
if mibBuilder.loadTexts: mscVrIpProvEntry.setStatus('mandatory')
mscVrIpForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 100, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("gateway", 1))).clone('gateway')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpForwarding.setStatus('mandatory')
mscVrIpDefaultTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 100, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(255, 255)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpDefaultTtl.setStatus('mandatory')
mscVrIpCosPolicyAssignment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 100, 1, 4), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpCosPolicyAssignment.setStatus('mandatory')
mscVrIpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101), )
if mibBuilder.loadTexts: mscVrIpStatsTable.setStatus('mandatory')
mscVrIpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"))
if mibBuilder.loadTexts: mscVrIpStatsEntry.setStatus('mandatory')
mscVrIpInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpInReceives.setStatus('mandatory')
mscVrIpInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpInHdrErrors.setStatus('mandatory')
mscVrIpInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpInAddrErrors.setStatus('mandatory')
mscVrIpForwDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpForwDatagrams.setStatus('mandatory')
mscVrIpInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpInUnknownProtos.setStatus('mandatory')
mscVrIpInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpInDiscards.setStatus('mandatory')
mscVrIpInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpInDelivers.setStatus('mandatory')
mscVrIpOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOutRequests.setStatus('mandatory')
mscVrIpOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOutDiscards.setStatus('mandatory')
mscVrIpOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOutNoRoutes.setStatus('mandatory')
mscVrIpReasmTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)).clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpReasmTimeOut.setStatus('mandatory')
mscVrIpReasmReqds = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpReasmReqds.setStatus('mandatory')
mscVrIpReasmOks = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpReasmOks.setStatus('mandatory')
mscVrIpReasmFails = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpReasmFails.setStatus('mandatory')
mscVrIpFragOks = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFragOks.setStatus('mandatory')
mscVrIpFragFails = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFragFails.setStatus('mandatory')
mscVrIpFragCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFragCreates.setStatus('mandatory')
mscVrIpRoutingDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 101, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRoutingDiscards.setStatus('mandatory')
mscVrIpAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 102), )
if mibBuilder.loadTexts: mscVrIpAdminControlTable.setStatus('mandatory')
mscVrIpAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 102, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"))
if mibBuilder.loadTexts: mscVrIpAdminControlEntry.setStatus('mandatory')
mscVrIpSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpSnmpAdminStatus.setStatus('mandatory')
mscVrIpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 104), )
if mibBuilder.loadTexts: mscVrIpStateTable.setStatus('mandatory')
mscVrIpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 104, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"))
if mibBuilder.loadTexts: mscVrIpStateEntry.setStatus('mandatory')
mscVrIpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 104, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpAdminState.setStatus('mandatory')
mscVrIpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 104, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOperationalState.setStatus('mandatory')
mscVrIpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 104, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUsageState.setStatus('mandatory')
mscVrIpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 107), )
if mibBuilder.loadTexts: mscVrIpOperStatusTable.setStatus('mandatory')
mscVrIpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 107, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"))
if mibBuilder.loadTexts: mscVrIpOperStatusEntry.setStatus('mandatory')
mscVrIpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 107, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpSnmpOperStatus.setStatus('mandatory')
mscVrIpCtsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 394), )
if mibBuilder.loadTexts: mscVrIpCtsTable.setStatus('mandatory')
mscVrIpCtsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 394, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpCtsIndex"))
if mibBuilder.loadTexts: mscVrIpCtsEntry.setStatus('mandatory')
mscVrIpCtsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 394, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscVrIpCtsIndex.setStatus('mandatory')
mscVrIpCtsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 394, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 8000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpCtsValue.setStatus('mandatory')
mscVrIpFwd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3))
mscVrIpFwdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 1), )
if mibBuilder.loadTexts: mscVrIpFwdRowStatusTable.setStatus('mandatory')
mscVrIpFwdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpFwdDestAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpFwdDestMaskIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpFwdTypeOfServiceIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpFwdGatewayIndex"))
if mibBuilder.loadTexts: mscVrIpFwdRowStatusEntry.setStatus('mandatory')
mscVrIpFwdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdRowStatus.setStatus('mandatory')
mscVrIpFwdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdComponentName.setStatus('mandatory')
mscVrIpFwdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdStorageType.setStatus('mandatory')
mscVrIpFwdDestAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpFwdDestAddressIndex.setStatus('mandatory')
mscVrIpFwdDestMaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 1, 1, 11), IpAddress())
if mibBuilder.loadTexts: mscVrIpFwdDestMaskIndex.setStatus('mandatory')
mscVrIpFwdTypeOfServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: mscVrIpFwdTypeOfServiceIndex.setStatus('mandatory')
mscVrIpFwdGatewayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 1, 1, 13), IpAddress())
if mibBuilder.loadTexts: mscVrIpFwdGatewayIndex.setStatus('mandatory')
mscVrIpFwdOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 10), )
if mibBuilder.loadTexts: mscVrIpFwdOperTable.setStatus('mandatory')
mscVrIpFwdOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpFwdDestAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpFwdDestMaskIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpFwdTypeOfServiceIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpFwdGatewayIndex"))
if mibBuilder.loadTexts: mscVrIpFwdOperEntry.setStatus('mandatory')
mscVrIpFwdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 10, 1, 1), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdIfIndex.setStatus('mandatory')
mscVrIpFwdType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notDefined", 1), ("invalid", 2), ("localInterface", 3), ("remoteDestination", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdType.setStatus('mandatory')
mscVrIpFwdProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("isIs", 9), ("esIs", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14), ("idpr", 15), ("mpls", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdProtocol.setStatus('mandatory')
mscVrIpFwdAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 10, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdAge.setStatus('mandatory')
mscVrIpFwdProtocolPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 10, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdProtocolPortName.setStatus('mandatory')
mscVrIpFwdNextHopAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 429467295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdNextHopAs.setStatus('mandatory')
mscVrIpFwdMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpFwdMetric.setStatus('mandatory')
mscVrIpRdb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4))
mscVrIpRdbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 1), )
if mibBuilder.loadTexts: mscVrIpRdbRowStatusTable.setStatus('mandatory')
mscVrIpRdbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRdbDestAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRdbDestMaskIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRdbProtocolIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRdbGatewayIndex"))
if mibBuilder.loadTexts: mscVrIpRdbRowStatusEntry.setStatus('mandatory')
mscVrIpRdbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRdbRowStatus.setStatus('mandatory')
mscVrIpRdbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRdbComponentName.setStatus('mandatory')
mscVrIpRdbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRdbStorageType.setStatus('mandatory')
mscVrIpRdbDestAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpRdbDestAddressIndex.setStatus('mandatory')
mscVrIpRdbDestMaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 1, 1, 11), IpAddress())
if mibBuilder.loadTexts: mscVrIpRdbDestMaskIndex.setStatus('mandatory')
mscVrIpRdbProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("bogus", 1), ("local", 2), ("remote", 3), ("special", 4), ("ospf", 5), ("ospfExternal", 6), ("ospfType3Discard", 7), ("ospfType7Discard", 8), ("rip", 9), ("ripDiscard", 10), ("egp", 11), ("bgpExternal", 12), ("bgpInternal", 13), ("bgpAggrDiscard", 14), ("redistrib", 15), ("mpls", 16))))
if mibBuilder.loadTexts: mscVrIpRdbProtocolIndex.setStatus('mandatory')
mscVrIpRdbGatewayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 1, 1, 13), IpAddress())
if mibBuilder.loadTexts: mscVrIpRdbGatewayIndex.setStatus('mandatory')
mscVrIpRdbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 10), )
if mibBuilder.loadTexts: mscVrIpRdbOperTable.setStatus('mandatory')
mscVrIpRdbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRdbDestAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRdbDestMaskIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRdbProtocolIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRdbGatewayIndex"))
if mibBuilder.loadTexts: mscVrIpRdbOperEntry.setStatus('mandatory')
mscVrIpRdbMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRdbMetric.setStatus('mandatory')
mscVrIpRdbPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRdbPreference.setStatus('mandatory')
mscVrIpRdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 4, 10, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRdbAge.setStatus('mandatory')
mscVrIpIf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5))
mscVrIpIfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 1), )
if mibBuilder.loadTexts: mscVrIpIfRowStatusTable.setStatus('mandatory')
mscVrIpIfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIfInterfaceAddressIndex"))
if mibBuilder.loadTexts: mscVrIpIfRowStatusEntry.setStatus('mandatory')
mscVrIpIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfRowStatus.setStatus('mandatory')
mscVrIpIfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfComponentName.setStatus('mandatory')
mscVrIpIfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfStorageType.setStatus('mandatory')
mscVrIpIfInterfaceAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpIfInterfaceAddressIndex.setStatus('mandatory')
mscVrIpIfOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10), )
if mibBuilder.loadTexts: mscVrIpIfOperTable.setStatus('mandatory')
mscVrIpIfOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIfInterfaceAddressIndex"))
if mibBuilder.loadTexts: mscVrIpIfOperEntry.setStatus('mandatory')
mscVrIpIfInterfaceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfInterfaceMask.setStatus('mandatory')
mscVrIpIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfStatus.setStatus('mandatory')
mscVrIpIfPPName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfPPName.setStatus('mandatory')
mscVrIpIfMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("none", 1), ("tokenRing", 2), ("ethernet", 3), ("fddi", 4), ("x25", 5), ("frameRelay", 6), ("ppp", 7), ("clusterBridge", 8), ("virtualLink", 9), ("vcpEther", 10), ("vcpToken", 11), ("vns", 12), ("smds", 13), ("atmMpeVcEncap", 14), ("atmMpeLlcEncap", 15), ("lecEther", 16), ("lecToken", 17), ("tunnel", 18), ("virtual", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfMediaType.setStatus('mandatory')
mscVrIpIfHardwareAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10, 1, 5), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfHardwareAddress.setStatus('mandatory')
mscVrIpIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 18944), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfMtu.setStatus('mandatory')
mscVrIpIfBroadcastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfBroadcastAddress.setStatus('mandatory')
mscVrIpIfNcHardwareAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 5, 10, 1, 8), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIfNcHardwareAddress.setStatus('mandatory')
mscVrIpEgp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6))
mscVrIpEgpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 1), )
if mibBuilder.loadTexts: mscVrIpEgpRowStatusTable.setStatus('mandatory')
mscVrIpEgpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"))
if mibBuilder.loadTexts: mscVrIpEgpRowStatusEntry.setStatus('mandatory')
mscVrIpEgpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpRowStatus.setStatus('mandatory')
mscVrIpEgpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpComponentName.setStatus('mandatory')
mscVrIpEgpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpStorageType.setStatus('mandatory')
mscVrIpEgpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpEgpIndex.setStatus('mandatory')
mscVrIpEgpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 10), )
if mibBuilder.loadTexts: mscVrIpEgpProvTable.setStatus('mandatory')
mscVrIpEgpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"))
if mibBuilder.loadTexts: mscVrIpEgpProvEntry.setStatus('mandatory')
mscVrIpEgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpAsId.setStatus('mandatory')
mscVrIpEgpDefaultHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 900)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpDefaultHelloInterval.setStatus('mandatory')
mscVrIpEgpDefaultPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(120, 3600)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpDefaultPollInterval.setStatus('mandatory')
mscVrIpEgpMaxNatNets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpMaxNatNets.setStatus('mandatory')
mscVrIpEgpMaxBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 16)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpMaxBufferSize.setStatus('mandatory')
mscVrIpEgpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 11), )
if mibBuilder.loadTexts: mscVrIpEgpStatsTable.setStatus('mandatory')
mscVrIpEgpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"))
if mibBuilder.loadTexts: mscVrIpEgpStatsEntry.setStatus('mandatory')
mscVrIpEgpInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpInMsgs.setStatus('mandatory')
mscVrIpEgpInErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpInErrorMsgs.setStatus('mandatory')
mscVrIpEgpOutErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpOutErrorMsgs.setStatus('mandatory')
mscVrIpEgpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpInErrors.setStatus('mandatory')
mscVrIpEgpOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpOutMsgs.setStatus('mandatory')
mscVrIpEgpOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpOutErrors.setStatus('mandatory')
mscVrIpEgpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 12), )
if mibBuilder.loadTexts: mscVrIpEgpStateTable.setStatus('mandatory')
mscVrIpEgpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"))
if mibBuilder.loadTexts: mscVrIpEgpStateEntry.setStatus('mandatory')
mscVrIpEgpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpAdminState.setStatus('mandatory')
mscVrIpEgpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpOperationalState.setStatus('mandatory')
mscVrIpEgpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpUsageState.setStatus('mandatory')
mscVrIpEgpAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 13), )
if mibBuilder.loadTexts: mscVrIpEgpAdminControlTable.setStatus('mandatory')
mscVrIpEgpAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"))
if mibBuilder.loadTexts: mscVrIpEgpAdminControlEntry.setStatus('mandatory')
mscVrIpEgpSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpSnmpAdminStatus.setStatus('mandatory')
mscVrIpEgpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 16), )
if mibBuilder.loadTexts: mscVrIpEgpOperStatusTable.setStatus('mandatory')
mscVrIpEgpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"))
if mibBuilder.loadTexts: mscVrIpEgpOperStatusEntry.setStatus('mandatory')
mscVrIpEgpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpSnmpOperStatus.setStatus('mandatory')
mscVrIpEgpNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2))
mscVrIpEgpNbrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 1), )
if mibBuilder.loadTexts: mscVrIpEgpNbrRowStatusTable.setStatus('mandatory')
mscVrIpEgpNbrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpNbrNeighborAddressIndex"))
if mibBuilder.loadTexts: mscVrIpEgpNbrRowStatusEntry.setStatus('mandatory')
mscVrIpEgpNbrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpNbrRowStatus.setStatus('mandatory')
mscVrIpEgpNbrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrComponentName.setStatus('mandatory')
mscVrIpEgpNbrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrStorageType.setStatus('mandatory')
mscVrIpEgpNbrNeighborAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpEgpNbrNeighborAddressIndex.setStatus('mandatory')
mscVrIpEgpNbrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 10), )
if mibBuilder.loadTexts: mscVrIpEgpNbrProvTable.setStatus('mandatory')
mscVrIpEgpNbrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpNbrNeighborAddressIndex"))
if mibBuilder.loadTexts: mscVrIpEgpNbrProvEntry.setStatus('mandatory')
mscVrIpEgpNbrAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpNbrAsId.setStatus('mandatory')
mscVrIpEgpNbrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpNbrMode.setStatus('mandatory')
mscVrIpEgpNbrGenerateDefaultRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpNbrGenerateDefaultRoute.setStatus('mandatory')
mscVrIpEgpNbrDefaultRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpNbrDefaultRouteMetric.setStatus('mandatory')
mscVrIpEgpNbrDefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpNbrDefaultMetric.setStatus('mandatory')
mscVrIpEgpNbrHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 120)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpNbrHelloInterval.setStatus('mandatory')
mscVrIpEgpNbrPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(120, 480)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpNbrPollInterval.setStatus('mandatory')
mscVrIpEgpNbrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11), )
if mibBuilder.loadTexts: mscVrIpEgpNbrOperTable.setStatus('mandatory')
mscVrIpEgpNbrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpNbrNeighborAddressIndex"))
if mibBuilder.loadTexts: mscVrIpEgpNbrOperEntry.setStatus('mandatory')
mscVrIpEgpNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 1), ("acquisition", 2), ("down", 3), ("up", 4), ("cease", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrState.setStatus('mandatory')
mscVrIpEgpNbrInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrInMsgs.setStatus('mandatory')
mscVrIpEgpNbrInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrInErrors.setStatus('mandatory')
mscVrIpEgpNbrOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrOutMsgs.setStatus('mandatory')
mscVrIpEgpNbrOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrOutErrors.setStatus('mandatory')
mscVrIpEgpNbrInErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrInErrorMsgs.setStatus('mandatory')
mscVrIpEgpNbrOutErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrOutErrorMsgs.setStatus('mandatory')
mscVrIpEgpNbrStateUps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrStateUps.setStatus('mandatory')
mscVrIpEgpNbrStateDowns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrStateDowns.setStatus('mandatory')
mscVrIpEgpNbrEventTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 2, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("stop", 2))).clone('start')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpNbrEventTrigger.setStatus('mandatory')
mscVrIpEgpImport = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3))
mscVrIpEgpImportRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 1), )
if mibBuilder.loadTexts: mscVrIpEgpImportRowStatusTable.setStatus('mandatory')
mscVrIpEgpImportRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpImportIndex"))
if mibBuilder.loadTexts: mscVrIpEgpImportRowStatusEntry.setStatus('mandatory')
mscVrIpEgpImportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpImportRowStatus.setStatus('mandatory')
mscVrIpEgpImportComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpImportComponentName.setStatus('mandatory')
mscVrIpEgpImportStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpImportStorageType.setStatus('mandatory')
mscVrIpEgpImportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpEgpImportIndex.setStatus('mandatory')
mscVrIpEgpImportProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 10), )
if mibBuilder.loadTexts: mscVrIpEgpImportProvTable.setStatus('mandatory')
mscVrIpEgpImportProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpImportIndex"))
if mibBuilder.loadTexts: mscVrIpEgpImportProvEntry.setStatus('mandatory')
mscVrIpEgpImportUsageFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use", 1), ("ignore", 2))).clone('use')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpImportUsageFlag.setStatus('mandatory')
mscVrIpEgpImportImportMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpImportImportMetric.setStatus('mandatory')
mscVrIpEgpImportNbrAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpImportNbrAsId.setStatus('mandatory')
mscVrIpEgpImportNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2))
mscVrIpEgpImportNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2, 1), )
if mibBuilder.loadTexts: mscVrIpEgpImportNetRowStatusTable.setStatus('mandatory')
mscVrIpEgpImportNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpImportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpImportNetIndex"))
if mibBuilder.loadTexts: mscVrIpEgpImportNetRowStatusEntry.setStatus('mandatory')
mscVrIpEgpImportNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpImportNetRowStatus.setStatus('mandatory')
mscVrIpEgpImportNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpImportNetComponentName.setStatus('mandatory')
mscVrIpEgpImportNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpImportNetStorageType.setStatus('mandatory')
mscVrIpEgpImportNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpEgpImportNetIndex.setStatus('mandatory')
mscVrIpEgpImportNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2, 10), )
if mibBuilder.loadTexts: mscVrIpEgpImportNetProvTable.setStatus('mandatory')
mscVrIpEgpImportNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpImportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpImportNetIndex"))
if mibBuilder.loadTexts: mscVrIpEgpImportNetProvEntry.setStatus('mandatory')
mscVrIpEgpImportNetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 3, 2, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpImportNetIpAddress.setStatus('mandatory')
mscVrIpEgpExport = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4))
mscVrIpEgpExportRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 1), )
if mibBuilder.loadTexts: mscVrIpEgpExportRowStatusTable.setStatus('mandatory')
mscVrIpEgpExportRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpExportIndex"))
if mibBuilder.loadTexts: mscVrIpEgpExportRowStatusEntry.setStatus('mandatory')
mscVrIpEgpExportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportRowStatus.setStatus('mandatory')
mscVrIpEgpExportComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpExportComponentName.setStatus('mandatory')
mscVrIpEgpExportStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpExportStorageType.setStatus('mandatory')
mscVrIpEgpExportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpEgpExportIndex.setStatus('mandatory')
mscVrIpEgpExportProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10), )
if mibBuilder.loadTexts: mscVrIpEgpExportProvTable.setStatus('mandatory')
mscVrIpEgpExportProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpExportIndex"))
if mibBuilder.loadTexts: mscVrIpEgpExportProvEntry.setStatus('mandatory')
mscVrIpEgpExportAdvertiseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("send", 1), ("block", 2))).clone('send')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportAdvertiseStatus.setStatus('mandatory')
mscVrIpEgpExportExportMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportExportMetric.setStatus('mandatory')
mscVrIpEgpExportProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("all", 1), ("egp", 2), ("rip", 3), ("ospfInternal", 4), ("ospfExternal", 5), ("staticLocal", 6), ("staticRemote", 7))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportProtocol.setStatus('mandatory')
mscVrIpEgpExportRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportRipInterface.setStatus('mandatory')
mscVrIpEgpExportRipNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10, 1, 5), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportRipNeighbor.setStatus('mandatory')
mscVrIpEgpExportInEgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportInEgpAsId.setStatus('mandatory')
mscVrIpEgpExportOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportOspfTag.setStatus('mandatory')
mscVrIpEgpExportOutAutonomousSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportOutAutonomousSystem.setStatus('mandatory')
mscVrIpEgpExportNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2))
mscVrIpEgpExportNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2, 1), )
if mibBuilder.loadTexts: mscVrIpEgpExportNetRowStatusTable.setStatus('mandatory')
mscVrIpEgpExportNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpExportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpExportNetIndex"))
if mibBuilder.loadTexts: mscVrIpEgpExportNetRowStatusEntry.setStatus('mandatory')
mscVrIpEgpExportNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportNetRowStatus.setStatus('mandatory')
mscVrIpEgpExportNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpExportNetComponentName.setStatus('mandatory')
mscVrIpEgpExportNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpEgpExportNetStorageType.setStatus('mandatory')
mscVrIpEgpExportNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpEgpExportNetIndex.setStatus('mandatory')
mscVrIpEgpExportNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2, 10), )
if mibBuilder.loadTexts: mscVrIpEgpExportNetProvTable.setStatus('mandatory')
mscVrIpEgpExportNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpExportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpEgpExportNetIndex"))
if mibBuilder.loadTexts: mscVrIpEgpExportNetProvEntry.setStatus('mandatory')
mscVrIpEgpExportNetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 6, 4, 2, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpEgpExportNetIpAddress.setStatus('mandatory')
mscVrIpOspf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7))
mscVrIpOspfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 1), )
if mibBuilder.loadTexts: mscVrIpOspfRowStatusTable.setStatus('mandatory')
mscVrIpOspfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"))
if mibBuilder.loadTexts: mscVrIpOspfRowStatusEntry.setStatus('mandatory')
mscVrIpOspfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfRowStatus.setStatus('mandatory')
mscVrIpOspfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfComponentName.setStatus('mandatory')
mscVrIpOspfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfStorageType.setStatus('mandatory')
mscVrIpOspfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpOspfIndex.setStatus('mandatory')
mscVrIpOspfProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100), )
if mibBuilder.loadTexts: mscVrIpOspfProvTable.setStatus('mandatory')
mscVrIpOspfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"))
if mibBuilder.loadTexts: mscVrIpOspfProvEntry.setStatus('mandatory')
mscVrIpOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1, 1), RouterID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfRouterId.setStatus('mandatory')
mscVrIpOspfSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfSnmpAdminStatus.setStatus('mandatory')
mscVrIpOspfAsBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfAsBdrRtrStatus.setStatus('mandatory')
mscVrIpOspfTosSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfTosSupport.setStatus('mandatory')
mscVrIpOspfExtLsdbLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbLimit.setStatus('mandatory')
mscVrIpOspfMulticastForward = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfMulticastForward.setStatus('mandatory')
mscVrIpOspfMigrateRip = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfMigrateRip.setStatus('mandatory')
mscVrIpOspfGenerateDefaultRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfGenerateDefaultRouteMetric.setStatus('mandatory')
mscVrIpOspfRedistributeIbgp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 100, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfRedistributeIbgp.setStatus('mandatory')
mscVrIpOspfOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 101), )
if mibBuilder.loadTexts: mscVrIpOspfOperTable.setStatus('mandatory')
mscVrIpOspfOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"))
if mibBuilder.loadTexts: mscVrIpOspfOperEntry.setStatus('mandatory')
mscVrIpOspfVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 101, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 2)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVersionNumber.setStatus('mandatory')
mscVrIpOspfAreaBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 101, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAreaBdrRtrStatus.setStatus('mandatory')
mscVrIpOspfExternLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 101, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExternLsaCount.setStatus('mandatory')
mscVrIpOspfExternLsaChecksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 101, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExternLsaChecksumSum.setStatus('mandatory')
mscVrIpOspfOriginateNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 101, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfOriginateNewLsas.setStatus('mandatory')
mscVrIpOspfRxNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 101, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfRxNewLsas.setStatus('mandatory')
mscVrIpOspfStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 102), )
if mibBuilder.loadTexts: mscVrIpOspfStateTable.setStatus('mandatory')
mscVrIpOspfStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 102, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"))
if mibBuilder.loadTexts: mscVrIpOspfStateEntry.setStatus('mandatory')
mscVrIpOspfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAdminState.setStatus('mandatory')
mscVrIpOspfOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 102, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfOperationalState.setStatus('mandatory')
mscVrIpOspfUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 102, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfUsageState.setStatus('mandatory')
mscVrIpOspfOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 105), )
if mibBuilder.loadTexts: mscVrIpOspfOperStatusTable.setStatus('mandatory')
mscVrIpOspfOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 105, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"))
if mibBuilder.loadTexts: mscVrIpOspfOperStatusEntry.setStatus('mandatory')
mscVrIpOspfSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 105, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfSnmpOperStatus.setStatus('mandatory')
mscVrIpOspfArea = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2))
mscVrIpOspfAreaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 1), )
if mibBuilder.loadTexts: mscVrIpOspfAreaRowStatusTable.setStatus('mandatory')
mscVrIpOspfAreaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAreaAreaIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfAreaRowStatusEntry.setStatus('mandatory')
mscVrIpOspfAreaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfAreaRowStatus.setStatus('mandatory')
mscVrIpOspfAreaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAreaComponentName.setStatus('mandatory')
mscVrIpOspfAreaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAreaStorageType.setStatus('mandatory')
mscVrIpOspfAreaAreaIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfAreaAreaIdIndex.setStatus('mandatory')
mscVrIpOspfAreaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 10), )
if mibBuilder.loadTexts: mscVrIpOspfAreaProvTable.setStatus('mandatory')
mscVrIpOspfAreaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAreaAreaIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfAreaProvEntry.setStatus('mandatory')
mscVrIpOspfAreaAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("simplePassword", 1))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfAreaAuthType.setStatus('mandatory')
mscVrIpOspfAreaImportAsExtern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("importExternal", 1), ("importNoExternal", 2), ("importNssa", 3))).clone('importExternal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfAreaImportAsExtern.setStatus('mandatory')
mscVrIpOspfAreaAreaSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAreaSummary", 1), ("sendAreaSummary", 2))).clone('noAreaSummary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfAreaAreaSummary.setStatus('mandatory')
mscVrIpOspfAreaOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 11), )
if mibBuilder.loadTexts: mscVrIpOspfAreaOperTable.setStatus('mandatory')
mscVrIpOspfAreaOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAreaAreaIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfAreaOperEntry.setStatus('mandatory')
mscVrIpOspfAreaSpfRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAreaSpfRuns.setStatus('mandatory')
mscVrIpOspfAreaAreaBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 11, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAreaAreaBdrRtrCount.setStatus('mandatory')
mscVrIpOspfAreaAsBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 11, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAreaAsBdrRtrCount.setStatus('mandatory')
mscVrIpOspfAreaLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 11, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAreaLsaCount.setStatus('mandatory')
mscVrIpOspfAreaAreaLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 2, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAreaAreaLsaCksumSum.setStatus('mandatory')
mscVrIpOspfStub = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3))
mscVrIpOspfStubRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 1), )
if mibBuilder.loadTexts: mscVrIpOspfStubRowStatusTable.setStatus('mandatory')
mscVrIpOspfStubRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfStubAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfStubTosIndex"))
if mibBuilder.loadTexts: mscVrIpOspfStubRowStatusEntry.setStatus('mandatory')
mscVrIpOspfStubRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfStubRowStatus.setStatus('mandatory')
mscVrIpOspfStubComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfStubComponentName.setStatus('mandatory')
mscVrIpOspfStubStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfStubStorageType.setStatus('mandatory')
mscVrIpOspfStubAreaIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfStubAreaIdIndex.setStatus('mandatory')
mscVrIpOspfStubTosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: mscVrIpOspfStubTosIndex.setStatus('mandatory')
mscVrIpOspfStubProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 10), )
if mibBuilder.loadTexts: mscVrIpOspfStubProvTable.setStatus('mandatory')
mscVrIpOspfStubProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfStubAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfStubTosIndex"))
if mibBuilder.loadTexts: mscVrIpOspfStubProvEntry.setStatus('mandatory')
mscVrIpOspfStubMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfStubMetric.setStatus('mandatory')
mscVrIpOspfStubMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ospfMetric", 1), ("comparableCost", 2), ("nonComparable", 3))).clone('ospfMetric')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfStubMetricType.setStatus('mandatory')
mscVrIpOspfStubAdvertiseDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfStubAdvertiseDefault.setStatus('mandatory')
mscVrIpOspfAggregate = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5))
mscVrIpOspfAggregateRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 1), )
if mibBuilder.loadTexts: mscVrIpOspfAggregateRowStatusTable.setStatus('mandatory')
mscVrIpOspfAggregateRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAggregateAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAggregateLsdbTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAggregateAggregateNetIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAggregateAggregateMaskIndex"))
if mibBuilder.loadTexts: mscVrIpOspfAggregateRowStatusEntry.setStatus('mandatory')
mscVrIpOspfAggregateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfAggregateRowStatus.setStatus('mandatory')
mscVrIpOspfAggregateComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAggregateComponentName.setStatus('mandatory')
mscVrIpOspfAggregateStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfAggregateStorageType.setStatus('mandatory')
mscVrIpOspfAggregateAreaIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfAggregateAreaIdIndex.setStatus('mandatory')
mscVrIpOspfAggregateLsdbTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 7))).clone(namedValues=NamedValues(("summaryLink", 3), ("nssaExternalLink", 7))))
if mibBuilder.loadTexts: mscVrIpOspfAggregateLsdbTypeIndex.setStatus('mandatory')
mscVrIpOspfAggregateAggregateNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfAggregateAggregateNetIndex.setStatus('mandatory')
mscVrIpOspfAggregateAggregateMaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 1, 1, 13), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfAggregateAggregateMaskIndex.setStatus('mandatory')
mscVrIpOspfAggregateProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 10), )
if mibBuilder.loadTexts: mscVrIpOspfAggregateProvTable.setStatus('mandatory')
mscVrIpOspfAggregateProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAggregateAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAggregateLsdbTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAggregateAggregateNetIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfAggregateAggregateMaskIndex"))
if mibBuilder.loadTexts: mscVrIpOspfAggregateProvEntry.setStatus('mandatory')
mscVrIpOspfAggregateEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("advertiseMatching", 1), ("doNotAdvertiseMatching", 2), ("invalid", 3))).clone('advertiseMatching')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfAggregateEffect.setStatus('mandatory')
mscVrIpOspfHost = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6))
mscVrIpOspfHostRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 1), )
if mibBuilder.loadTexts: mscVrIpOspfHostRowStatusTable.setStatus('mandatory')
mscVrIpOspfHostRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfHostAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfHostTosIndex"))
if mibBuilder.loadTexts: mscVrIpOspfHostRowStatusEntry.setStatus('mandatory')
mscVrIpOspfHostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfHostRowStatus.setStatus('mandatory')
mscVrIpOspfHostComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfHostComponentName.setStatus('mandatory')
mscVrIpOspfHostStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfHostStorageType.setStatus('mandatory')
mscVrIpOspfHostAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfHostAddressIndex.setStatus('mandatory')
mscVrIpOspfHostTosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: mscVrIpOspfHostTosIndex.setStatus('mandatory')
mscVrIpOspfHostProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 10), )
if mibBuilder.loadTexts: mscVrIpOspfHostProvTable.setStatus('mandatory')
mscVrIpOspfHostProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfHostAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfHostTosIndex"))
if mibBuilder.loadTexts: mscVrIpOspfHostProvEntry.setStatus('mandatory')
mscVrIpOspfHostAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 10, 1, 1), AreaID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfHostAreaId.setStatus('mandatory')
mscVrIpOspfHostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfHostMetric.setStatus('mandatory')
mscVrIpOspfVirtIf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7))
mscVrIpOspfVirtIfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 1), )
if mibBuilder.loadTexts: mscVrIpOspfVirtIfRowStatusTable.setStatus('mandatory')
mscVrIpOspfVirtIfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtIfAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtIfNbrRouterIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfVirtIfRowStatusEntry.setStatus('mandatory')
mscVrIpOspfVirtIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfRowStatus.setStatus('mandatory')
mscVrIpOspfVirtIfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfComponentName.setStatus('mandatory')
mscVrIpOspfVirtIfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfStorageType.setStatus('mandatory')
mscVrIpOspfVirtIfAreaIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfVirtIfAreaIdIndex.setStatus('mandatory')
mscVrIpOspfVirtIfNbrRouterIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 1, 1, 11), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfVirtIfNbrRouterIdIndex.setStatus('mandatory')
mscVrIpOspfVirtIfProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 10), )
if mibBuilder.loadTexts: mscVrIpOspfVirtIfProvTable.setStatus('mandatory')
mscVrIpOspfVirtIfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtIfAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtIfNbrRouterIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfVirtIfProvEntry.setStatus('mandatory')
mscVrIpOspfVirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfTransitDelay.setStatus('mandatory')
mscVrIpOspfVirtIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfRetransInterval.setStatus('mandatory')
mscVrIpOspfVirtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfHelloInterval.setStatus('mandatory')
mscVrIpOspfVirtIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfRtrDeadInterval.setStatus('mandatory')
mscVrIpOspfVirtIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 10, 1, 5), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)).clone(hexValue="0000000000000000")).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfAuthKey.setStatus('mandatory')
mscVrIpOspfVirtIfOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 11), )
if mibBuilder.loadTexts: mscVrIpOspfVirtIfOperTable.setStatus('mandatory')
mscVrIpOspfVirtIfOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtIfAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtIfNbrRouterIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfVirtIfOperEntry.setStatus('mandatory')
mscVrIpOspfVirtIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointToPoint", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfState.setStatus('mandatory')
mscVrIpOspfVirtIfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 7, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtIfEvents.setStatus('mandatory')
mscVrIpOspfExport = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8))
mscVrIpOspfExportRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 1), )
if mibBuilder.loadTexts: mscVrIpOspfExportRowStatusTable.setStatus('mandatory')
mscVrIpOspfExportRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExportIndex"))
if mibBuilder.loadTexts: mscVrIpOspfExportRowStatusEntry.setStatus('mandatory')
mscVrIpOspfExportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportRowStatus.setStatus('mandatory')
mscVrIpOspfExportComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExportComponentName.setStatus('mandatory')
mscVrIpOspfExportStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExportStorageType.setStatus('mandatory')
mscVrIpOspfExportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpOspfExportIndex.setStatus('mandatory')
mscVrIpOspfExportProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10), )
if mibBuilder.loadTexts: mscVrIpOspfExportProvTable.setStatus('mandatory')
mscVrIpOspfExportProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExportIndex"))
if mibBuilder.loadTexts: mscVrIpOspfExportProvEntry.setStatus('mandatory')
mscVrIpOspfExportAdvertiseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("send", 1), ("block", 2))).clone('send')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportAdvertiseStatus.setStatus('mandatory')
mscVrIpOspfExportMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 16777215)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportMetric.setStatus('mandatory')
mscVrIpOspfExportProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 8, 9))).clone(namedValues=NamedValues(("all", 1), ("egp", 2), ("rip", 3), ("staticLocal", 6), ("staticRemote", 7), ("bgpInternal", 8), ("bgpExternal", 9))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportProtocol.setStatus('mandatory')
mscVrIpOspfExportRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportRipInterface.setStatus('mandatory')
mscVrIpOspfExportRipNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 5), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportRipNeighbor.setStatus('mandatory')
mscVrIpOspfExportEgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportEgpAsId.setStatus('mandatory')
mscVrIpOspfExportTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportTag.setStatus('mandatory')
mscVrIpOspfExportExtLsaMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("useProtocolDefault", 0), ("type1", 1), ("type2", 2))).clone('useProtocolDefault')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportExtLsaMetricType.setStatus('mandatory')
mscVrIpOspfExportBgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportBgpAsId.setStatus('mandatory')
mscVrIpOspfExportBgpPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 10, 1, 10), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportBgpPeerIp.setStatus('mandatory')
mscVrIpOspfExportNetList = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2))
mscVrIpOspfExportNetListRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 1), )
if mibBuilder.loadTexts: mscVrIpOspfExportNetListRowStatusTable.setStatus('mandatory')
mscVrIpOspfExportNetListRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExportNetListIndex"))
if mibBuilder.loadTexts: mscVrIpOspfExportNetListRowStatusEntry.setStatus('mandatory')
mscVrIpOspfExportNetListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportNetListRowStatus.setStatus('mandatory')
mscVrIpOspfExportNetListComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExportNetListComponentName.setStatus('mandatory')
mscVrIpOspfExportNetListStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExportNetListStorageType.setStatus('mandatory')
mscVrIpOspfExportNetListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpOspfExportNetListIndex.setStatus('mandatory')
mscVrIpOspfExportNetListProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 10), )
if mibBuilder.loadTexts: mscVrIpOspfExportNetListProvTable.setStatus('mandatory')
mscVrIpOspfExportNetListProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExportNetListIndex"))
if mibBuilder.loadTexts: mscVrIpOspfExportNetListProvEntry.setStatus('mandatory')
mscVrIpOspfExportNetListIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportNetListIpAddress.setStatus('mandatory')
mscVrIpOspfExportNetListIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 8, 2, 10, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpOspfExportNetListIpMask.setStatus('mandatory')
mscVrIpOspfVirtNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9))
mscVrIpOspfVirtNbrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 1), )
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrRowStatusTable.setStatus('mandatory')
mscVrIpOspfVirtNbrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtNbrAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtNbrNbrRouterIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrRowStatusEntry.setStatus('mandatory')
mscVrIpOspfVirtNbrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrRowStatus.setStatus('mandatory')
mscVrIpOspfVirtNbrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrComponentName.setStatus('mandatory')
mscVrIpOspfVirtNbrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrStorageType.setStatus('mandatory')
mscVrIpOspfVirtNbrAreaIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrAreaIdIndex.setStatus('mandatory')
mscVrIpOspfVirtNbrNbrRouterIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 1, 1, 11), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrNbrRouterIdIndex.setStatus('mandatory')
mscVrIpOspfVirtNbrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 10), )
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrOperTable.setStatus('mandatory')
mscVrIpOspfVirtNbrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtNbrAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfVirtNbrNbrRouterIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrOperEntry.setStatus('mandatory')
mscVrIpOspfVirtNbrNbrIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrNbrIpAddress.setStatus('mandatory')
mscVrIpOspfVirtNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrOptions.setStatus('mandatory')
mscVrIpOspfVirtNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchange", 5), ("exchangeStatrt", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrState.setStatus('mandatory')
mscVrIpOspfVirtNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrEvents.setStatus('mandatory')
mscVrIpOspfVirtNbrLsRetransQlen = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 10, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrLsRetransQlen.setStatus('mandatory')
mscVrIpOspfVirtNbrExchangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 9, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfVirtNbrExchangeStatus.setStatus('mandatory')
mscVrIpOspfNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10))
mscVrIpOspfNbrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 1), )
if mibBuilder.loadTexts: mscVrIpOspfNbrRowStatusTable.setStatus('mandatory')
mscVrIpOspfNbrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfNbrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfNbrAddressLessIndex"))
if mibBuilder.loadTexts: mscVrIpOspfNbrRowStatusEntry.setStatus('mandatory')
mscVrIpOspfNbrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrRowStatus.setStatus('mandatory')
mscVrIpOspfNbrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrComponentName.setStatus('mandatory')
mscVrIpOspfNbrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrStorageType.setStatus('mandatory')
mscVrIpOspfNbrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfNbrAddressIndex.setStatus('mandatory')
mscVrIpOspfNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: mscVrIpOspfNbrAddressLessIndex.setStatus('mandatory')
mscVrIpOspfNbrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10), )
if mibBuilder.loadTexts: mscVrIpOspfNbrOperTable.setStatus('mandatory')
mscVrIpOspfNbrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfNbrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfNbrAddressLessIndex"))
if mibBuilder.loadTexts: mscVrIpOspfNbrOperEntry.setStatus('mandatory')
mscVrIpOspfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrRtrId.setStatus('mandatory')
mscVrIpOspfNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrOptions.setStatus('mandatory')
mscVrIpOspfNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrPriority.setStatus('mandatory')
mscVrIpOspfNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrState.setStatus('mandatory')
mscVrIpOspfNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrEvents.setStatus('mandatory')
mscVrIpOspfNbrLsRetransQlen = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrLsRetransQlen.setStatus('mandatory')
mscVrIpOspfNbrNbmaNbrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrNbmaNbrStatus.setStatus('mandatory')
mscVrIpOspfNbrExchangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrExchangeStatus.setStatus('mandatory')
mscVrIpOspfNbrPermanence = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 10, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("permanent", 2))).clone('dynamic')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfNbrPermanence.setStatus('mandatory')
mscVrIpOspfLsdb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11))
mscVrIpOspfLsdbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 1), )
if mibBuilder.loadTexts: mscVrIpOspfLsdbRowStatusTable.setStatus('mandatory')
mscVrIpOspfLsdbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfLsdbAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfLsdbLsdbTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfLsdbLsIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfLsdbRouterIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfLsdbRowStatusEntry.setStatus('mandatory')
mscVrIpOspfLsdbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfLsdbRowStatus.setStatus('mandatory')
mscVrIpOspfLsdbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfLsdbComponentName.setStatus('mandatory')
mscVrIpOspfLsdbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfLsdbStorageType.setStatus('mandatory')
mscVrIpOspfLsdbAreaIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfLsdbAreaIdIndex.setStatus('mandatory')
mscVrIpOspfLsdbLsdbTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: mscVrIpOspfLsdbLsdbTypeIndex.setStatus('mandatory')
mscVrIpOspfLsdbLsIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfLsdbLsIdIndex.setStatus('mandatory')
mscVrIpOspfLsdbRouterIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 1, 1, 13), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfLsdbRouterIdIndex.setStatus('mandatory')
mscVrIpOspfLsdbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 10), )
if mibBuilder.loadTexts: mscVrIpOspfLsdbOperTable.setStatus('mandatory')
mscVrIpOspfLsdbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfLsdbAreaIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfLsdbLsdbTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfLsdbLsIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfLsdbRouterIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfLsdbOperEntry.setStatus('mandatory')
mscVrIpOspfLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfLsdbSequence.setStatus('mandatory')
mscVrIpOspfLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfLsdbAge.setStatus('mandatory')
mscVrIpOspfLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfLsdbChecksum.setStatus('mandatory')
mscVrIpOspfLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 11, 10, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfLsdbAdvertisement.setStatus('mandatory')
mscVrIpOspfExtLsdb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12))
mscVrIpOspfExtLsdbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 1), )
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbRowStatusTable.setStatus('mandatory')
mscVrIpOspfExtLsdbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExtLsdbLsdbTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExtLsdbLsIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExtLsdbRouterIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbRowStatusEntry.setStatus('mandatory')
mscVrIpOspfExtLsdbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbRowStatus.setStatus('mandatory')
mscVrIpOspfExtLsdbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbComponentName.setStatus('mandatory')
mscVrIpOspfExtLsdbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbStorageType.setStatus('mandatory')
mscVrIpOspfExtLsdbLsdbTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbLsdbTypeIndex.setStatus('mandatory')
mscVrIpOspfExtLsdbLsIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 1, 1, 11), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbLsIdIndex.setStatus('mandatory')
mscVrIpOspfExtLsdbRouterIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbRouterIdIndex.setStatus('mandatory')
mscVrIpOspfExtLsdbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 10), )
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbOperTable.setStatus('mandatory')
mscVrIpOspfExtLsdbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExtLsdbLsdbTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExtLsdbLsIdIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpOspfExtLsdbRouterIdIndex"))
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbOperEntry.setStatus('mandatory')
mscVrIpOspfExtLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbSequence.setStatus('mandatory')
mscVrIpOspfExtLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbAge.setStatus('mandatory')
mscVrIpOspfExtLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbChecksum.setStatus('mandatory')
mscVrIpOspfExtLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 7, 12, 10, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 36))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpOspfExtLsdbAdvertisement.setStatus('mandatory')
mscVrIpRip = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8))
mscVrIpRipRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 1), )
if mibBuilder.loadTexts: mscVrIpRipRowStatusTable.setStatus('mandatory')
mscVrIpRipRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"))
if mibBuilder.loadTexts: mscVrIpRipRowStatusEntry.setStatus('mandatory')
mscVrIpRipRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipRowStatus.setStatus('mandatory')
mscVrIpRipComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipComponentName.setStatus('mandatory')
mscVrIpRipStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipStorageType.setStatus('mandatory')
mscVrIpRipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpRipIndex.setStatus('mandatory')
mscVrIpRipProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 10), )
if mibBuilder.loadTexts: mscVrIpRipProvTable.setStatus('mandatory')
mscVrIpRipProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"))
if mibBuilder.loadTexts: mscVrIpRipProvEntry.setStatus('mandatory')
mscVrIpRipMigrateRip = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipMigrateRip.setStatus('mandatory')
mscVrIpRipRfc1058MetricUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipRfc1058MetricUsage.setStatus('mandatory')
mscVrIpRipGenerateDiscardRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipGenerateDiscardRoute.setStatus('mandatory')
mscVrIpRipRedistributeIbgp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipRedistributeIbgp.setStatus('mandatory')
mscVrIpRipStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 11), )
if mibBuilder.loadTexts: mscVrIpRipStateTable.setStatus('mandatory')
mscVrIpRipStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"))
if mibBuilder.loadTexts: mscVrIpRipStateEntry.setStatus('mandatory')
mscVrIpRipAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipAdminState.setStatus('mandatory')
mscVrIpRipOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipOperationalState.setStatus('mandatory')
mscVrIpRipUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipUsageState.setStatus('mandatory')
mscVrIpRipAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 12), )
if mibBuilder.loadTexts: mscVrIpRipAdminControlTable.setStatus('mandatory')
mscVrIpRipAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"))
if mibBuilder.loadTexts: mscVrIpRipAdminControlEntry.setStatus('mandatory')
mscVrIpRipSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipSnmpAdminStatus.setStatus('mandatory')
mscVrIpRipOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 15), )
if mibBuilder.loadTexts: mscVrIpRipOperStatusTable.setStatus('mandatory')
mscVrIpRipOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"))
if mibBuilder.loadTexts: mscVrIpRipOperStatusEntry.setStatus('mandatory')
mscVrIpRipSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipSnmpOperStatus.setStatus('mandatory')
mscVrIpRipOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 16), )
if mibBuilder.loadTexts: mscVrIpRipOperTable.setStatus('mandatory')
mscVrIpRipOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"))
if mibBuilder.loadTexts: mscVrIpRipOperEntry.setStatus('mandatory')
mscVrIpRipRouteChangesMade = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 16, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipRouteChangesMade.setStatus('mandatory')
mscVrIpRipQueryResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipQueryResponses.setStatus('mandatory')
mscVrIpRipImport = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2))
mscVrIpRipImportRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 1), )
if mibBuilder.loadTexts: mscVrIpRipImportRowStatusTable.setStatus('mandatory')
mscVrIpRipImportRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipImportIndex"))
if mibBuilder.loadTexts: mscVrIpRipImportRowStatusEntry.setStatus('mandatory')
mscVrIpRipImportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipImportRowStatus.setStatus('mandatory')
mscVrIpRipImportComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipImportComponentName.setStatus('mandatory')
mscVrIpRipImportStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipImportStorageType.setStatus('mandatory')
mscVrIpRipImportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpRipImportIndex.setStatus('mandatory')
mscVrIpRipImportProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 10), )
if mibBuilder.loadTexts: mscVrIpRipImportProvTable.setStatus('mandatory')
mscVrIpRipImportProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipImportIndex"))
if mibBuilder.loadTexts: mscVrIpRipImportProvEntry.setStatus('mandatory')
mscVrIpRipImportUsageFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use", 1), ("ignore", 2))).clone('use')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipImportUsageFlag.setStatus('mandatory')
mscVrIpRipImportImportMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipImportImportMetric.setStatus('mandatory')
mscVrIpRipImportNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 10, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipImportNeighbor.setStatus('mandatory')
mscVrIpRipImportInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 10, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipImportInterface.setStatus('mandatory')
mscVrIpRipImportNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2))
mscVrIpRipImportNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 1), )
if mibBuilder.loadTexts: mscVrIpRipImportNetRowStatusTable.setStatus('mandatory')
mscVrIpRipImportNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipImportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipImportNetIndex"))
if mibBuilder.loadTexts: mscVrIpRipImportNetRowStatusEntry.setStatus('mandatory')
mscVrIpRipImportNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipImportNetRowStatus.setStatus('mandatory')
mscVrIpRipImportNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipImportNetComponentName.setStatus('mandatory')
mscVrIpRipImportNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipImportNetStorageType.setStatus('mandatory')
mscVrIpRipImportNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpRipImportNetIndex.setStatus('mandatory')
mscVrIpRipImportNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 10), )
if mibBuilder.loadTexts: mscVrIpRipImportNetProvTable.setStatus('mandatory')
mscVrIpRipImportNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipImportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipImportNetIndex"))
if mibBuilder.loadTexts: mscVrIpRipImportNetProvEntry.setStatus('mandatory')
mscVrIpRipImportNetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipImportNetIpAddress.setStatus('mandatory')
mscVrIpRipImportNetIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 2, 2, 10, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipImportNetIpMask.setStatus('mandatory')
mscVrIpRipExport = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3))
mscVrIpRipExportRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 1), )
if mibBuilder.loadTexts: mscVrIpRipExportRowStatusTable.setStatus('mandatory')
mscVrIpRipExportRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipExportIndex"))
if mibBuilder.loadTexts: mscVrIpRipExportRowStatusEntry.setStatus('mandatory')
mscVrIpRipExportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportRowStatus.setStatus('mandatory')
mscVrIpRipExportComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipExportComponentName.setStatus('mandatory')
mscVrIpRipExportStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipExportStorageType.setStatus('mandatory')
mscVrIpRipExportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpRipExportIndex.setStatus('mandatory')
mscVrIpRipExportProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10), )
if mibBuilder.loadTexts: mscVrIpRipExportProvTable.setStatus('mandatory')
mscVrIpRipExportProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipExportIndex"))
if mibBuilder.loadTexts: mscVrIpRipExportProvEntry.setStatus('mandatory')
mscVrIpRipExportAdvertiseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("send", 1), ("block", 2))).clone('send')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportAdvertiseStatus.setStatus('mandatory')
mscVrIpRipExportExportMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportExportMetric.setStatus('mandatory')
mscVrIpRipExportProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("all", 1), ("egp", 2), ("rip", 3), ("ospfInternal", 4), ("ospfExternal", 5), ("staticLocal", 6), ("staticRemote", 7), ("bgpInternal", 8), ("bgpExternal", 9))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportProtocol.setStatus('mandatory')
mscVrIpRipExportRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportRipInterface.setStatus('mandatory')
mscVrIpRipExportEgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportEgpAsId.setStatus('mandatory')
mscVrIpRipExportOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportOspfTag.setStatus('mandatory')
mscVrIpRipExportOutInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10, 1, 7), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportOutInterface.setStatus('mandatory')
mscVrIpRipExportBgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportBgpAsId.setStatus('mandatory')
mscVrIpRipExportNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2))
mscVrIpRipExportNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 1), )
if mibBuilder.loadTexts: mscVrIpRipExportNetRowStatusTable.setStatus('mandatory')
mscVrIpRipExportNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipExportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipExportNetIndex"))
if mibBuilder.loadTexts: mscVrIpRipExportNetRowStatusEntry.setStatus('mandatory')
mscVrIpRipExportNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportNetRowStatus.setStatus('mandatory')
mscVrIpRipExportNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipExportNetComponentName.setStatus('mandatory')
mscVrIpRipExportNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRipExportNetStorageType.setStatus('mandatory')
mscVrIpRipExportNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpRipExportNetIndex.setStatus('mandatory')
mscVrIpRipExportNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 10), )
if mibBuilder.loadTexts: mscVrIpRipExportNetProvTable.setStatus('mandatory')
mscVrIpRipExportNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipExportIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRipExportNetIndex"))
if mibBuilder.loadTexts: mscVrIpRipExportNetProvEntry.setStatus('mandatory')
mscVrIpRipExportNetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportNetIpAddress.setStatus('mandatory')
mscVrIpRipExportNetIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 8, 3, 2, 10, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRipExportNetIpMask.setStatus('mandatory')
mscVrIpStatic = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9))
mscVrIpStaticRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 1), )
if mibBuilder.loadTexts: mscVrIpStaticRowStatusTable.setStatus('mandatory')
mscVrIpStaticRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticIndex"))
if mibBuilder.loadTexts: mscVrIpStaticRowStatusEntry.setStatus('mandatory')
mscVrIpStaticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpStaticRowStatus.setStatus('mandatory')
mscVrIpStaticComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticComponentName.setStatus('mandatory')
mscVrIpStaticStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticStorageType.setStatus('mandatory')
mscVrIpStaticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpStaticIndex.setStatus('mandatory')
mscVrIpStaticStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 10), )
if mibBuilder.loadTexts: mscVrIpStaticStateTable.setStatus('mandatory')
mscVrIpStaticStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticIndex"))
if mibBuilder.loadTexts: mscVrIpStaticStateEntry.setStatus('mandatory')
mscVrIpStaticAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticAdminState.setStatus('mandatory')
mscVrIpStaticOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticOperationalState.setStatus('mandatory')
mscVrIpStaticUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticUsageState.setStatus('mandatory')
mscVrIpStaticRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2))
mscVrIpStaticRouteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 1), )
if mibBuilder.loadTexts: mscVrIpStaticRouteRowStatusTable.setStatus('mandatory')
mscVrIpStaticRouteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteDestAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteDestMaskIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteTypeOfServiceIndex"))
if mibBuilder.loadTexts: mscVrIpStaticRouteRowStatusEntry.setStatus('mandatory')
mscVrIpStaticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpStaticRouteRowStatus.setStatus('mandatory')
mscVrIpStaticRouteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticRouteComponentName.setStatus('mandatory')
mscVrIpStaticRouteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticRouteStorageType.setStatus('mandatory')
mscVrIpStaticRouteDestAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpStaticRouteDestAddressIndex.setStatus('mandatory')
mscVrIpStaticRouteDestMaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 1, 1, 11), IpAddress())
if mibBuilder.loadTexts: mscVrIpStaticRouteDestMaskIndex.setStatus('mandatory')
mscVrIpStaticRouteTypeOfServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: mscVrIpStaticRouteTypeOfServiceIndex.setStatus('mandatory')
mscVrIpStaticRouteProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 10), )
if mibBuilder.loadTexts: mscVrIpStaticRouteProvTable.setStatus('mandatory')
mscVrIpStaticRouteProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteDestAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteDestMaskIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteTypeOfServiceIndex"))
if mibBuilder.loadTexts: mscVrIpStaticRouteProvEntry.setStatus('mandatory')
mscVrIpStaticRoutePreferredOver = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 72))).clone(namedValues=NamedValues(("intOspf", 5), ("extOspf", 72))).clone('extOspf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpStaticRoutePreferredOver.setStatus('mandatory')
mscVrIpStaticRouteNh = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2))
mscVrIpStaticRouteNhRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2, 1), )
if mibBuilder.loadTexts: mscVrIpStaticRouteNhRowStatusTable.setStatus('mandatory')
mscVrIpStaticRouteNhRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteDestAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteDestMaskIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteTypeOfServiceIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteNhIndex"))
if mibBuilder.loadTexts: mscVrIpStaticRouteNhRowStatusEntry.setStatus('mandatory')
mscVrIpStaticRouteNhRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpStaticRouteNhRowStatus.setStatus('mandatory')
mscVrIpStaticRouteNhComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticRouteNhComponentName.setStatus('mandatory')
mscVrIpStaticRouteNhStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticRouteNhStorageType.setStatus('mandatory')
mscVrIpStaticRouteNhIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpStaticRouteNhIndex.setStatus('mandatory')
mscVrIpStaticRouteNhProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2, 10), )
if mibBuilder.loadTexts: mscVrIpStaticRouteNhProvTable.setStatus('mandatory')
mscVrIpStaticRouteNhProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteDestAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteDestMaskIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteTypeOfServiceIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticRouteNhIndex"))
if mibBuilder.loadTexts: mscVrIpStaticRouteNhProvEntry.setStatus('mandatory')
mscVrIpStaticRouteNhMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpStaticRouteNhMetric.setStatus('mandatory')
mscVrIpStaticDiscard = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 3))
mscVrIpStaticDiscardRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 3, 1), )
if mibBuilder.loadTexts: mscVrIpStaticDiscardRowStatusTable.setStatus('mandatory')
mscVrIpStaticDiscardRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticDiscardDestAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpStaticDiscardDestMaskIndex"))
if mibBuilder.loadTexts: mscVrIpStaticDiscardRowStatusEntry.setStatus('mandatory')
mscVrIpStaticDiscardRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpStaticDiscardRowStatus.setStatus('mandatory')
mscVrIpStaticDiscardComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticDiscardComponentName.setStatus('mandatory')
mscVrIpStaticDiscardStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpStaticDiscardStorageType.setStatus('mandatory')
mscVrIpStaticDiscardDestAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 3, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpStaticDiscardDestAddressIndex.setStatus('mandatory')
mscVrIpStaticDiscardDestMaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 9, 3, 1, 1, 11), IpAddress())
if mibBuilder.loadTexts: mscVrIpStaticDiscardDestMaskIndex.setStatus('mandatory')
mscVrIpNs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10))
mscVrIpNsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 1), )
if mibBuilder.loadTexts: mscVrIpNsRowStatusTable.setStatus('mandatory')
mscVrIpNsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpNsIndex"))
if mibBuilder.loadTexts: mscVrIpNsRowStatusEntry.setStatus('mandatory')
mscVrIpNsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsRowStatus.setStatus('mandatory')
mscVrIpNsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNsComponentName.setStatus('mandatory')
mscVrIpNsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNsStorageType.setStatus('mandatory')
mscVrIpNsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpNsIndex.setStatus('mandatory')
mscVrIpNsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 10), )
if mibBuilder.loadTexts: mscVrIpNsProvTable.setStatus('mandatory')
mscVrIpNsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpNsIndex"))
if mibBuilder.loadTexts: mscVrIpNsProvEntry.setStatus('mandatory')
mscVrIpNsFirstFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsFirstFilter.setStatus('mandatory')
mscVrIpNsLocalInFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsLocalInFilter.setStatus('mandatory')
mscVrIpNsLocalOutFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsLocalOutFilter.setStatus('mandatory')
mscVrIpNsLastFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 10, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsLastFilter.setStatus('mandatory')
mscVrIpNsApply = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2))
mscVrIpNsApplyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 1), )
if mibBuilder.loadTexts: mscVrIpNsApplyRowStatusTable.setStatus('mandatory')
mscVrIpNsApplyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpNsIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpNsApplyIndex"))
if mibBuilder.loadTexts: mscVrIpNsApplyRowStatusEntry.setStatus('mandatory')
mscVrIpNsApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsApplyRowStatus.setStatus('mandatory')
mscVrIpNsApplyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNsApplyComponentName.setStatus('mandatory')
mscVrIpNsApplyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNsApplyStorageType.setStatus('mandatory')
mscVrIpNsApplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscVrIpNsApplyIndex.setStatus('mandatory')
mscVrIpNsApplyProvisionedTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 10), )
if mibBuilder.loadTexts: mscVrIpNsApplyProvisionedTable.setStatus('mandatory')
mscVrIpNsApplyProvisionedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpNsIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpNsApplyIndex"))
if mibBuilder.loadTexts: mscVrIpNsApplyProvisionedEntry.setStatus('mandatory')
mscVrIpNsApplyFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsApplyFilter.setStatus('mandatory')
mscVrIpNsApplyIpAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 10, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsApplyIpAddress1.setStatus('mandatory')
mscVrIpNsApplyIpMask1 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 10, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsApplyIpMask1.setStatus('mandatory')
mscVrIpNsApplyIpAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 10, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsApplyIpAddress2.setStatus('mandatory')
mscVrIpNsApplyIpMask2 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 10, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsApplyIpMask2.setStatus('mandatory')
mscVrIpNsApplyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 10, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("to", 1), ("from", 2), ("tofrom", 3))).clone('tofrom')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNsApplyDirection.setStatus('mandatory')
mscVrIpArp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11))
mscVrIpArpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 1), )
if mibBuilder.loadTexts: mscVrIpArpRowStatusTable.setStatus('mandatory')
mscVrIpArpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpIndex"))
if mibBuilder.loadTexts: mscVrIpArpRowStatusEntry.setStatus('mandatory')
mscVrIpArpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpRowStatus.setStatus('mandatory')
mscVrIpArpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpComponentName.setStatus('mandatory')
mscVrIpArpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpStorageType.setStatus('mandatory')
mscVrIpArpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpArpIndex.setStatus('mandatory')
mscVrIpArpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 10), )
if mibBuilder.loadTexts: mscVrIpArpProvTable.setStatus('mandatory')
mscVrIpArpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpIndex"))
if mibBuilder.loadTexts: mscVrIpArpProvEntry.setStatus('mandatory')
mscVrIpArpAutoRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpArpAutoRefresh.setStatus('mandatory')
mscVrIpArpAutoRefreshTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpArpAutoRefreshTimeout.setStatus('mandatory')
mscVrIpArpHost = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2))
mscVrIpArpHostRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 1), )
if mibBuilder.loadTexts: mscVrIpArpHostRowStatusTable.setStatus('mandatory')
mscVrIpArpHostRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpHostHostAddressIndex"))
if mibBuilder.loadTexts: mscVrIpArpHostRowStatusEntry.setStatus('mandatory')
mscVrIpArpHostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpArpHostRowStatus.setStatus('mandatory')
mscVrIpArpHostComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpHostComponentName.setStatus('mandatory')
mscVrIpArpHostStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpHostStorageType.setStatus('mandatory')
mscVrIpArpHostHostAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpArpHostHostAddressIndex.setStatus('mandatory')
mscVrIpArpHostProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 10), )
if mibBuilder.loadTexts: mscVrIpArpHostProvTable.setStatus('mandatory')
mscVrIpArpHostProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpHostHostAddressIndex"))
if mibBuilder.loadTexts: mscVrIpArpHostProvEntry.setStatus('mandatory')
mscVrIpArpHostPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 10, 1, 1), PhysAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 8)).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpArpHostPhysAddress.setStatus('mandatory')
mscVrIpArpHostMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 18944), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpArpHostMaxTxUnit.setStatus('mandatory')
mscVrIpArpHostPermanentVirtualCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpArpHostPermanentVirtualCircuitNumber.setStatus('mandatory')
mscVrIpArpHostTunnelDestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 10, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpArpHostTunnelDestinationAddress.setStatus('mandatory')
mscVrIpArpHostEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ieee8023", 1), ("ethernet", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpArpHostEncap.setStatus('mandatory')
mscVrIpArpHostOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 11), )
if mibBuilder.loadTexts: mscVrIpArpHostOperTable.setStatus('mandatory')
mscVrIpArpHostOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpHostHostAddressIndex"))
if mibBuilder.loadTexts: mscVrIpArpHostOperEntry.setStatus('mandatory')
mscVrIpArpHostOperMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 18944), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpHostOperMaxTxUnit.setStatus('mandatory')
mscVrIpArpHostOperEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ieee8023", 1), ("ethernet", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpHostOperEncap.setStatus('mandatory')
mscVrIpArpDynHost = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3))
mscVrIpArpDynHostRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 1), )
if mibBuilder.loadTexts: mscVrIpArpDynHostRowStatusTable.setStatus('mandatory')
mscVrIpArpDynHostRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpDynHostHostAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpDynHostCosIndex"))
if mibBuilder.loadTexts: mscVrIpArpDynHostRowStatusEntry.setStatus('mandatory')
mscVrIpArpDynHostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostRowStatus.setStatus('mandatory')
mscVrIpArpDynHostComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostComponentName.setStatus('mandatory')
mscVrIpArpDynHostStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostStorageType.setStatus('mandatory')
mscVrIpArpDynHostHostAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpArpDynHostHostAddressIndex.setStatus('mandatory')
mscVrIpArpDynHostCosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("notApplicable", 4))))
if mibBuilder.loadTexts: mscVrIpArpDynHostCosIndex.setStatus('mandatory')
mscVrIpArpDynHostOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10), )
if mibBuilder.loadTexts: mscVrIpArpDynHostOperTable.setStatus('mandatory')
mscVrIpArpDynHostOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpDynHostHostAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpArpDynHostCosIndex"))
if mibBuilder.loadTexts: mscVrIpArpDynHostOperEntry.setStatus('mandatory')
mscVrIpArpDynHostPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10, 1, 1), PhysAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostPhysAddress.setStatus('mandatory')
mscVrIpArpDynHostMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 18944), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostMaxTxUnit.setStatus('mandatory')
mscVrIpArpDynHostEncapsulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ieee8023", 1), ("ethernet", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostEncapsulationType.setStatus('mandatory')
mscVrIpArpDynHostPermanentVirtualCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostPermanentVirtualCircuitNumber.setStatus('mandatory')
mscVrIpArpDynHostIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10, 1, 6), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostIfIndex.setStatus('mandatory')
mscVrIpArpDynHostType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pending", 1), ("invalid", 2), ("dynamic", 3), ("static", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostType.setStatus('mandatory')
mscVrIpArpDynHostNcPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10, 1, 8), PhysAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostNcPhysAddress.setStatus('mandatory')
mscVrIpArpDynHostTunnelDestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 11, 3, 10, 1, 9), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpArpDynHostTunnelDestinationAddress.setStatus('mandatory')
mscVrIpIcmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12))
mscVrIpIcmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 1), )
if mibBuilder.loadTexts: mscVrIpIcmpRowStatusTable.setStatus('mandatory')
mscVrIpIcmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIcmpIndex"))
if mibBuilder.loadTexts: mscVrIpIcmpRowStatusEntry.setStatus('mandatory')
mscVrIpIcmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpRowStatus.setStatus('mandatory')
mscVrIpIcmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpComponentName.setStatus('mandatory')
mscVrIpIcmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpStorageType.setStatus('mandatory')
mscVrIpIcmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpIcmpIndex.setStatus('mandatory')
mscVrIpIcmpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 10), )
if mibBuilder.loadTexts: mscVrIpIcmpProvTable.setStatus('mandatory')
mscVrIpIcmpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIcmpIndex"))
if mibBuilder.loadTexts: mscVrIpIcmpProvEntry.setStatus('mandatory')
mscVrIpIcmpSendRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpIcmpSendRedirect.setStatus('obsolete')
mscVrIpIcmpSendHostUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpIcmpSendHostUnreachable.setStatus('obsolete')
mscVrIpIcmpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11), )
if mibBuilder.loadTexts: mscVrIpIcmpStatsTable.setStatus('mandatory')
mscVrIpIcmpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIcmpIndex"))
if mibBuilder.loadTexts: mscVrIpIcmpStatsEntry.setStatus('mandatory')
mscVrIpIcmpInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInMsgs.setStatus('mandatory')
mscVrIpIcmpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInErrors.setStatus('mandatory')
mscVrIpIcmpInDestUnreachs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInDestUnreachs.setStatus('mandatory')
mscVrIpIcmpInTimeExcds = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInTimeExcds.setStatus('mandatory')
mscVrIpIcmpInParmProbs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInParmProbs.setStatus('mandatory')
mscVrIpIcmpInSrcQuenchs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInSrcQuenchs.setStatus('mandatory')
mscVrIpIcmpInRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInRedirects.setStatus('mandatory')
mscVrIpIcmpInEchos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInEchos.setStatus('mandatory')
mscVrIpIcmpInEchoReps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInEchoReps.setStatus('mandatory')
mscVrIpIcmpInTimestamps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInTimestamps.setStatus('mandatory')
mscVrIpIcmpInTimestampReps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInTimestampReps.setStatus('mandatory')
mscVrIpIcmpInAddrMasks = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInAddrMasks.setStatus('mandatory')
mscVrIpIcmpInAddrMaskReps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInAddrMaskReps.setStatus('mandatory')
mscVrIpIcmpOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutMsgs.setStatus('mandatory')
mscVrIpIcmpOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutErrors.setStatus('mandatory')
mscVrIpIcmpOutDestUnreachs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutDestUnreachs.setStatus('mandatory')
mscVrIpIcmpOutTimeExcds = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutTimeExcds.setStatus('mandatory')
mscVrIpIcmpOutParmProbs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutParmProbs.setStatus('mandatory')
mscVrIpIcmpOutSrcQuenchs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutSrcQuenchs.setStatus('mandatory')
mscVrIpIcmpOutRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutRedirects.setStatus('mandatory')
mscVrIpIcmpOutEchos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutEchos.setStatus('mandatory')
mscVrIpIcmpOutEchoReps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutEchoReps.setStatus('mandatory')
mscVrIpIcmpOutTimestamps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutTimestamps.setStatus('mandatory')
mscVrIpIcmpOutTimestampReps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutTimestampReps.setStatus('mandatory')
mscVrIpIcmpOutAddrMasks = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutAddrMasks.setStatus('mandatory')
mscVrIpIcmpOutAddrMaskReps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutAddrMaskReps.setStatus('mandatory')
mscVrIpIcmpInRtrAdvs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInRtrAdvs.setStatus('mandatory')
mscVrIpIcmpInRtrSolicits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpInRtrSolicits.setStatus('mandatory')
mscVrIpIcmpOutRtrAdvs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutRtrAdvs.setStatus('mandatory')
mscVrIpIcmpOutRtrSolicits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 12, 11, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpIcmpOutRtrSolicits.setStatus('mandatory')
mscVrIpRelayBC = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13))
mscVrIpRelayBCRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 1), )
if mibBuilder.loadTexts: mscVrIpRelayBCRowStatusTable.setStatus('mandatory')
mscVrIpRelayBCRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRelayBCIndex"))
if mibBuilder.loadTexts: mscVrIpRelayBCRowStatusEntry.setStatus('mandatory')
mscVrIpRelayBCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRelayBCRowStatus.setStatus('mandatory')
mscVrIpRelayBCComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRelayBCComponentName.setStatus('mandatory')
mscVrIpRelayBCStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRelayBCStorageType.setStatus('mandatory')
mscVrIpRelayBCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpRelayBCIndex.setStatus('mandatory')
mscVrIpRelayBCProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 10), )
if mibBuilder.loadTexts: mscVrIpRelayBCProvTable.setStatus('mandatory')
mscVrIpRelayBCProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRelayBCIndex"))
if mibBuilder.loadTexts: mscVrIpRelayBCProvEntry.setStatus('mandatory')
mscVrIpRelayBCRelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRelayBCRelayStatus.setStatus('mandatory')
mscVrIpRelayBCRelayNdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRelayBCRelayNdStatus.setStatus('mandatory')
mscVrIpRelayBCOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 11), )
if mibBuilder.loadTexts: mscVrIpRelayBCOperTable.setStatus('mandatory')
mscVrIpRelayBCOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRelayBCIndex"))
if mibBuilder.loadTexts: mscVrIpRelayBCOperEntry.setStatus('mandatory')
mscVrIpRelayBCRelayNdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRelayBCRelayNdCount.setStatus('mandatory')
mscVrIpRelayBCPort = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2))
mscVrIpRelayBCPortRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2, 1), )
if mibBuilder.loadTexts: mscVrIpRelayBCPortRowStatusTable.setStatus('mandatory')
mscVrIpRelayBCPortRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRelayBCIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRelayBCPortPortNumIndex"))
if mibBuilder.loadTexts: mscVrIpRelayBCPortRowStatusEntry.setStatus('mandatory')
mscVrIpRelayBCPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpRelayBCPortRowStatus.setStatus('mandatory')
mscVrIpRelayBCPortComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRelayBCPortComponentName.setStatus('mandatory')
mscVrIpRelayBCPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRelayBCPortStorageType.setStatus('mandatory')
mscVrIpRelayBCPortPortNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435455)))
if mibBuilder.loadTexts: mscVrIpRelayBCPortPortNumIndex.setStatus('mandatory')
mscVrIpRelayBCPortOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2, 10), )
if mibBuilder.loadTexts: mscVrIpRelayBCPortOperTable.setStatus('mandatory')
mscVrIpRelayBCPortOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRelayBCIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpRelayBCPortPortNumIndex"))
if mibBuilder.loadTexts: mscVrIpRelayBCPortOperEntry.setStatus('mandatory')
mscVrIpRelayBCPortRelayBcUdpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 13, 2, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpRelayBCPortRelayBcUdpCount.setStatus('mandatory')
mscVrIpUdp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14))
mscVrIpUdpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 1), )
if mibBuilder.loadTexts: mscVrIpUdpRowStatusTable.setStatus('mandatory')
mscVrIpUdpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpUdpIndex"))
if mibBuilder.loadTexts: mscVrIpUdpRowStatusEntry.setStatus('mandatory')
mscVrIpUdpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpRowStatus.setStatus('mandatory')
mscVrIpUdpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpComponentName.setStatus('mandatory')
mscVrIpUdpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpStorageType.setStatus('mandatory')
mscVrIpUdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpUdpIndex.setStatus('mandatory')
mscVrIpUdpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 10), )
if mibBuilder.loadTexts: mscVrIpUdpStatsTable.setStatus('mandatory')
mscVrIpUdpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpUdpIndex"))
if mibBuilder.loadTexts: mscVrIpUdpStatsEntry.setStatus('mandatory')
mscVrIpUdpInDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpInDatagrams.setStatus('mandatory')
mscVrIpUdpNoPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpNoPorts.setStatus('mandatory')
mscVrIpUdpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpInErrors.setStatus('mandatory')
mscVrIpUdpOutDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpOutDatagrams.setStatus('mandatory')
mscVrIpUdpListenEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 2))
mscVrIpUdpListenEntryRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 2, 1), )
if mibBuilder.loadTexts: mscVrIpUdpListenEntryRowStatusTable.setStatus('mandatory')
mscVrIpUdpListenEntryRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpUdpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpUdpListenEntryLocalAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpUdpListenEntryLocalPortIndex"))
if mibBuilder.loadTexts: mscVrIpUdpListenEntryRowStatusEntry.setStatus('mandatory')
mscVrIpUdpListenEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpListenEntryRowStatus.setStatus('mandatory')
mscVrIpUdpListenEntryComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpListenEntryComponentName.setStatus('mandatory')
mscVrIpUdpListenEntryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpUdpListenEntryStorageType.setStatus('mandatory')
mscVrIpUdpListenEntryLocalAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpUdpListenEntryLocalAddressIndex.setStatus('mandatory')
mscVrIpUdpListenEntryLocalPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 14, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpUdpListenEntryLocalPortIndex.setStatus('mandatory')
mscVrIpTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15))
mscVrIpTcpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 1), )
if mibBuilder.loadTexts: mscVrIpTcpRowStatusTable.setStatus('mandatory')
mscVrIpTcpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpIndex"))
if mibBuilder.loadTexts: mscVrIpTcpRowStatusEntry.setStatus('mandatory')
mscVrIpTcpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpRowStatus.setStatus('mandatory')
mscVrIpTcpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpComponentName.setStatus('mandatory')
mscVrIpTcpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpStorageType.setStatus('mandatory')
mscVrIpTcpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpTcpIndex.setStatus('mandatory')
mscVrIpTcpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10), )
if mibBuilder.loadTexts: mscVrIpTcpStatsTable.setStatus('mandatory')
mscVrIpTcpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpIndex"))
if mibBuilder.loadTexts: mscVrIpTcpStatsEntry.setStatus('mandatory')
mscVrIpTcpRToAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("constant", 2), ("rsre", 3), ("vanJacobson", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpRToAlgorithm.setStatus('mandatory')
mscVrIpTcpRToMin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpRToMin.setStatus('mandatory')
mscVrIpTcpRToMax = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpRToMax.setStatus('mandatory')
mscVrIpTcpMaxConn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, -1)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpMaxConn.setStatus('mandatory')
mscVrIpTcpActiveOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpActiveOpens.setStatus('mandatory')
mscVrIpTcpPassiveOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpPassiveOpens.setStatus('mandatory')
mscVrIpTcpAttemptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpAttemptFails.setStatus('mandatory')
mscVrIpTcpEstabResets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpEstabResets.setStatus('mandatory')
mscVrIpTcpCurrEstab = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpCurrEstab.setStatus('mandatory')
mscVrIpTcpInSegs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpInSegs.setStatus('mandatory')
mscVrIpTcpOutSegs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpOutSegs.setStatus('mandatory')
mscVrIpTcpRetransSegs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpRetransSegs.setStatus('mandatory')
mscVrIpTcpInErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpInErrs.setStatus('mandatory')
mscVrIpTcpOutRsts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpOutRsts.setStatus('mandatory')
mscVrIpTcpTcpEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2))
mscVrIpTcpTcpEntryRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 1), )
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryRowStatusTable.setStatus('mandatory')
mscVrIpTcpTcpEntryRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpTcpEntryLocalAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpTcpEntryLocalPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpTcpEntryRemoteAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpTcpEntryRemotePortIndex"))
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryRowStatusEntry.setStatus('mandatory')
mscVrIpTcpTcpEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryRowStatus.setStatus('mandatory')
mscVrIpTcpTcpEntryComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryComponentName.setStatus('mandatory')
mscVrIpTcpTcpEntryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryStorageType.setStatus('mandatory')
mscVrIpTcpTcpEntryLocalAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryLocalAddressIndex.setStatus('mandatory')
mscVrIpTcpTcpEntryLocalPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryLocalPortIndex.setStatus('mandatory')
mscVrIpTcpTcpEntryRemoteAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryRemoteAddressIndex.setStatus('mandatory')
mscVrIpTcpTcpEntryRemotePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryRemotePortIndex.setStatus('mandatory')
mscVrIpTcpTcpEntryOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 10), )
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryOperTable.setStatus('mandatory')
mscVrIpTcpTcpEntryOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpTcpEntryLocalAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpTcpEntryLocalPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpTcpEntryRemoteAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTcpTcpEntryRemotePortIndex"))
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryOperEntry.setStatus('mandatory')
mscVrIpTcpTcpEntryState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 15, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("closed", 1), ("listen", 2), ("synSent", 3), ("synReceived", 4), ("established", 5), ("closeWait", 6), ("finWait1", 7), ("closing", 8), ("lastAck", 9), ("finWait2", 10), ("timeWait", 11), ("delete", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTcpTcpEntryState.setStatus('mandatory')
mscVrIpBootp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16))
mscVrIpBootpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 1), )
if mibBuilder.loadTexts: mscVrIpBootpRowStatusTable.setStatus('mandatory')
mscVrIpBootpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpIndex"))
if mibBuilder.loadTexts: mscVrIpBootpRowStatusEntry.setStatus('mandatory')
mscVrIpBootpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBootpRowStatus.setStatus('mandatory')
mscVrIpBootpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpComponentName.setStatus('mandatory')
mscVrIpBootpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpStorageType.setStatus('mandatory')
mscVrIpBootpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpBootpIndex.setStatus('mandatory')
mscVrIpBootpAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 10), )
if mibBuilder.loadTexts: mscVrIpBootpAdminControlTable.setStatus('mandatory')
mscVrIpBootpAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpIndex"))
if mibBuilder.loadTexts: mscVrIpBootpAdminControlEntry.setStatus('mandatory')
mscVrIpBootpSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBootpSnmpAdminStatus.setStatus('mandatory')
mscVrIpBootpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 11), )
if mibBuilder.loadTexts: mscVrIpBootpProvTable.setStatus('mandatory')
mscVrIpBootpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpIndex"))
if mibBuilder.loadTexts: mscVrIpBootpProvEntry.setStatus('mandatory')
mscVrIpBootpHopDiscardThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 16)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpBootpHopDiscardThreshold.setStatus('mandatory')
mscVrIpBootpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 12), )
if mibBuilder.loadTexts: mscVrIpBootpStateTable.setStatus('mandatory')
mscVrIpBootpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpIndex"))
if mibBuilder.loadTexts: mscVrIpBootpStateEntry.setStatus('mandatory')
mscVrIpBootpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpAdminState.setStatus('mandatory')
mscVrIpBootpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpOperationalState.setStatus('mandatory')
mscVrIpBootpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpUsageState.setStatus('mandatory')
mscVrIpBootpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 13), )
if mibBuilder.loadTexts: mscVrIpBootpOperStatusTable.setStatus('mandatory')
mscVrIpBootpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpIndex"))
if mibBuilder.loadTexts: mscVrIpBootpOperStatusEntry.setStatus('mandatory')
mscVrIpBootpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpSnmpOperStatus.setStatus('mandatory')
mscVrIpBootpPpE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2))
mscVrIpBootpPpERowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 1), )
if mibBuilder.loadTexts: mscVrIpBootpPpERowStatusTable.setStatus('mandatory')
mscVrIpBootpPpERowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpPpEIndex"))
if mibBuilder.loadTexts: mscVrIpBootpPpERowStatusEntry.setStatus('mandatory')
mscVrIpBootpPpERowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpERowStatus.setStatus('mandatory')
mscVrIpBootpPpEComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpEComponentName.setStatus('mandatory')
mscVrIpBootpPpEStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpEStorageType.setStatus('mandatory')
mscVrIpBootpPpEIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: mscVrIpBootpPpEIndex.setStatus('mandatory')
mscVrIpBootpPpEOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 10), )
if mibBuilder.loadTexts: mscVrIpBootpPpEOperTable.setStatus('mandatory')
mscVrIpBootpPpEOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpPpEIndex"))
if mibBuilder.loadTexts: mscVrIpBootpPpEOperEntry.setStatus('mandatory')
mscVrIpBootpPpEStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpEStatus.setStatus('mandatory')
mscVrIpBootpPpEStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 11), )
if mibBuilder.loadTexts: mscVrIpBootpPpEStatsTable.setStatus('mandatory')
mscVrIpBootpPpEStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpBootpPpEIndex"))
if mibBuilder.loadTexts: mscVrIpBootpPpEStatsEntry.setStatus('mandatory')
mscVrIpBootpPpEInRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpEInRequests.setStatus('mandatory')
mscVrIpBootpPpEInReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpEInReplies.setStatus('mandatory')
mscVrIpBootpPpEOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpEOutRequests.setStatus('mandatory')
mscVrIpBootpPpEOutReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpEOutReplies.setStatus('mandatory')
mscVrIpBootpPpEInRequestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpEInRequestErrors.setStatus('mandatory')
mscVrIpBootpPpEInReplyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 16, 2, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpBootpPpEInReplyErrors.setStatus('mandatory')
mscVrIpCache = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17))
mscVrIpCacheRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 1), )
if mibBuilder.loadTexts: mscVrIpCacheRowStatusTable.setStatus('mandatory')
mscVrIpCacheRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpCacheIndex"))
if mibBuilder.loadTexts: mscVrIpCacheRowStatusEntry.setStatus('mandatory')
mscVrIpCacheRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheRowStatus.setStatus('mandatory')
mscVrIpCacheComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheComponentName.setStatus('mandatory')
mscVrIpCacheStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheStorageType.setStatus('mandatory')
mscVrIpCacheIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscVrIpCacheIndex.setStatus('mandatory')
mscVrIpCacheStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 10), )
if mibBuilder.loadTexts: mscVrIpCacheStateTable.setStatus('mandatory')
mscVrIpCacheStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpCacheIndex"))
if mibBuilder.loadTexts: mscVrIpCacheStateEntry.setStatus('mandatory')
mscVrIpCacheAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheAdminState.setStatus('mandatory')
mscVrIpCacheOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheOperationalState.setStatus('mandatory')
mscVrIpCacheUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheUsageState.setStatus('mandatory')
mscVrIpCacheOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 11), )
if mibBuilder.loadTexts: mscVrIpCacheOperTable.setStatus('mandatory')
mscVrIpCacheOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpCacheIndex"))
if mibBuilder.loadTexts: mscVrIpCacheOperEntry.setStatus('mandatory')
mscVrIpCacheEntriesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheEntriesFree.setStatus('mandatory')
mscVrIpCacheTotalLookups = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheTotalLookups.setStatus('mandatory')
mscVrIpCacheLookupMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheLookupMisses.setStatus('mandatory')
mscVrIpCacheCacheTableMaxEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 17, 11, 1, 395), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpCacheCacheTableMaxEntries.setStatus('mandatory')
mscVrIpTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18))
mscVrIpTunnelRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 1), )
if mibBuilder.loadTexts: mscVrIpTunnelRowStatusTable.setStatus('mandatory')
mscVrIpTunnelRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelRowStatusEntry.setStatus('mandatory')
mscVrIpTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelRowStatus.setStatus('mandatory')
mscVrIpTunnelComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelComponentName.setStatus('mandatory')
mscVrIpTunnelStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelStorageType.setStatus('mandatory')
mscVrIpTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpTunnelIndex.setStatus('mandatory')
mscVrIpTunnelStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 12), )
if mibBuilder.loadTexts: mscVrIpTunnelStateTable.setStatus('mandatory')
mscVrIpTunnelStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelStateEntry.setStatus('mandatory')
mscVrIpTunnelAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelAdminState.setStatus('mandatory')
mscVrIpTunnelOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelOperationalState.setStatus('mandatory')
mscVrIpTunnelUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelUsageState.setStatus('mandatory')
mscVrIpTunnelSep = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10))
mscVrIpTunnelSepRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 1), )
if mibBuilder.loadTexts: mscVrIpTunnelSepRowStatusTable.setStatus('mandatory')
mscVrIpTunnelSepRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelSepIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelSepRowStatusEntry.setStatus('mandatory')
mscVrIpTunnelSepRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelSepRowStatus.setStatus('mandatory')
mscVrIpTunnelSepComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelSepComponentName.setStatus('mandatory')
mscVrIpTunnelSepStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelSepStorageType.setStatus('mandatory')
mscVrIpTunnelSepIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: mscVrIpTunnelSepIndex.setStatus('mandatory')
mscVrIpTunnelSepIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 10), )
if mibBuilder.loadTexts: mscVrIpTunnelSepIfEntryTable.setStatus('mandatory')
mscVrIpTunnelSepIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelSepIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelSepIfEntryEntry.setStatus('mandatory')
mscVrIpTunnelSepIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelSepIfAdminStatus.setStatus('mandatory')
mscVrIpTunnelSepIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 10, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelSepIfIndex.setStatus('mandatory')
mscVrIpTunnelSepMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 11), )
if mibBuilder.loadTexts: mscVrIpTunnelSepMpTable.setStatus('mandatory')
mscVrIpTunnelSepMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelSepIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelSepMpEntry.setStatus('mandatory')
mscVrIpTunnelSepLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 11, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelSepLinkToProtocolPort.setStatus('mandatory')
mscVrIpTunnelSepProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 12), )
if mibBuilder.loadTexts: mscVrIpTunnelSepProvTable.setStatus('mandatory')
mscVrIpTunnelSepProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelSepIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelSepProvEntry.setStatus('mandatory')
mscVrIpTunnelSepEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ipInIp", 0), ("greIp", 1))).clone('ipInIp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelSepEncapType.setStatus('mandatory')
mscVrIpTunnelSepSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 12, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelSepSourceAddress.setStatus('mandatory')
mscVrIpTunnelSepDestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 12, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelSepDestinationAddress.setStatus('mandatory')
mscVrIpTunnelSepOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 14), )
if mibBuilder.loadTexts: mscVrIpTunnelSepOperTable.setStatus('mandatory')
mscVrIpTunnelSepOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelSepIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelSepOperEntry.setStatus('mandatory')
mscVrIpTunnelSepDiscoveredPathMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 10, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 18944), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelSepDiscoveredPathMtu.setStatus('mandatory')
mscVrIpTunnelMsep = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11))
mscVrIpTunnelMsepRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 1), )
if mibBuilder.loadTexts: mscVrIpTunnelMsepRowStatusTable.setStatus('mandatory')
mscVrIpTunnelMsepRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelMsepIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelMsepRowStatusEntry.setStatus('mandatory')
mscVrIpTunnelMsepRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelMsepRowStatus.setStatus('mandatory')
mscVrIpTunnelMsepComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelMsepComponentName.setStatus('mandatory')
mscVrIpTunnelMsepStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelMsepStorageType.setStatus('mandatory')
mscVrIpTunnelMsepIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: mscVrIpTunnelMsepIndex.setStatus('mandatory')
mscVrIpTunnelMsepIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 10), )
if mibBuilder.loadTexts: mscVrIpTunnelMsepIfEntryTable.setStatus('mandatory')
mscVrIpTunnelMsepIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelMsepIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelMsepIfEntryEntry.setStatus('mandatory')
mscVrIpTunnelMsepIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelMsepIfAdminStatus.setStatus('mandatory')
mscVrIpTunnelMsepIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 10, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpTunnelMsepIfIndex.setStatus('mandatory')
mscVrIpTunnelMsepMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 11), )
if mibBuilder.loadTexts: mscVrIpTunnelMsepMpTable.setStatus('mandatory')
mscVrIpTunnelMsepMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelMsepIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelMsepMpEntry.setStatus('mandatory')
mscVrIpTunnelMsepLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 11, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelMsepLinkToProtocolPort.setStatus('mandatory')
mscVrIpTunnelMsepProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 12), )
if mibBuilder.loadTexts: mscVrIpTunnelMsepProvTable.setStatus('mandatory')
mscVrIpTunnelMsepProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelMsepIndex"))
if mibBuilder.loadTexts: mscVrIpTunnelMsepProvEntry.setStatus('mandatory')
mscVrIpTunnelMsepPathMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(576, 18944)).clone(1604)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelMsepPathMtu.setStatus('mandatory')
mscVrIpTunnelMsepEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("ipInIp", 0))).clone('ipInIp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelMsepEncapType.setStatus('mandatory')
mscVrIpTunnelMsepSharedDomainVirtualRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 12, 1, 3), RowPointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelMsepSharedDomainVirtualRouter.setStatus('mandatory')
mscVrIpTunnelMsepSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 12, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelMsepSourceAddress.setStatus('mandatory')
mscVrIpTunnelMsepDstTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 834), )
if mibBuilder.loadTexts: mscVrIpTunnelMsepDstTable.setStatus('mandatory')
mscVrIpTunnelMsepDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 834, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelMsepIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpTunnelMsepDstValue"))
if mibBuilder.loadTexts: mscVrIpTunnelMsepDstEntry.setStatus('mandatory')
mscVrIpTunnelMsepDstValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 834, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpTunnelMsepDstValue.setStatus('mandatory')
mscVrIpTunnelMsepDstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 18, 11, 834, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscVrIpTunnelMsepDstRowStatus.setStatus('mandatory')
ipGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 27, 1))
ipGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 27, 1, 1))
ipGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 27, 1, 1, 3))
ipGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 27, 1, 1, 3, 2))
ipCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 27, 3))
ipCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 27, 3, 1))
ipCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 27, 3, 1, 3))
ipCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 27, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-IpMIB", mscVrIpEgpRowStatusTable=mscVrIpEgpRowStatusTable, mscVrPpIpPortSnmpAdminStatus=mscVrPpIpPortSnmpAdminStatus, mscVrPpIpPortOperMtu=mscVrPpIpPortOperMtu, mscVrIpEgpRowStatus=mscVrIpEgpRowStatus, mscVrIpTunnelSepComponentName=mscVrIpTunnelSepComponentName, mscVrIpOspfExtLsdbComponentName=mscVrIpOspfExtLsdbComponentName, mscVrIpRipExportComponentName=mscVrIpRipExportComponentName, ipCapabilitiesCA02A=ipCapabilitiesCA02A, mscVrIpOspfExportNetListIpMask=mscVrIpOspfExportNetListIpMask, mscVrIpStaticDiscardDestMaskIndex=mscVrIpStaticDiscardDestMaskIndex, mscVrPpIpPortLogicalIfOspfIfNbrComponentName=mscVrPpIpPortLogicalIfOspfIfNbrComponentName, mscVrIpNsApplyProvisionedTable=mscVrIpNsApplyProvisionedTable, mscVrIpEgpStorageType=mscVrIpEgpStorageType, mscVrPpIpPortLogicalIfOspfIfTOSRowStatusTable=mscVrPpIpPortLogicalIfOspfIfTOSRowStatusTable, mscVrIpEgpOperationalState=mscVrIpEgpOperationalState, mscVrIpBootpPpEInReplies=mscVrIpBootpPpEInReplies, mscVrPpIpPortLogicalIfOspfIfTOSRowStatusEntry=mscVrPpIpPortLogicalIfOspfIfTOSRowStatusEntry, mscVrPpIpPortLogicalIfOspfIfNbrRowStatus=mscVrPpIpPortLogicalIfOspfIfNbrRowStatus, mscVrIpEgpAdminState=mscVrIpEgpAdminState, mscVrIpOspfMigrateRip=mscVrIpOspfMigrateRip, mscVrIpStaticRouteRowStatusEntry=mscVrIpStaticRouteRowStatusEntry, mscVrIpArpHostMaxTxUnit=mscVrIpArpHostMaxTxUnit, mscVrIpArpDynHostOperEntry=mscVrIpArpDynHostOperEntry, mscVrIpTunnelComponentName=mscVrIpTunnelComponentName, mscVrIpBootpPpEIndex=mscVrIpBootpPpEIndex, mscVrIpRipStateEntry=mscVrIpRipStateEntry, mscVrIpArp=mscVrIpArp, mscVrPpIpPortRelayBcOperEntry=mscVrPpIpPortRelayBcOperEntry, mscVrIpTunnelSepRowStatusTable=mscVrIpTunnelSepRowStatusTable, mscVrPpIpPortLogicalIfRipIfStatEntry=mscVrPpIpPortLogicalIfRipIfStatEntry, mscVrIpProvTable=mscVrIpProvTable, mscVrIpStaticRoute=mscVrIpStaticRoute, mscVrPpIpPortBootpPAddrTable=mscVrPpIpPortBootpPAddrTable, mscVrPpIpPortLogicalIfOspfIfRowStatusTable=mscVrPpIpPortLogicalIfOspfIfRowStatusTable, mscVrIpStorageType=mscVrIpStorageType, mscVrIpArpHostOperTable=mscVrIpArpHostOperTable, mscVrIpEgpImport=mscVrIpEgpImport, mscVrIpTcpTcpEntryOperTable=mscVrIpTcpTcpEntryOperTable, mscVrIpTcpOutRsts=mscVrIpTcpOutRsts, mscVrPpIpPortOperMulticastStatus=mscVrPpIpPortOperMulticastStatus, mscVrIpCacheTotalLookups=mscVrIpCacheTotalLookups, mscVrIpSnmpAdminStatus=mscVrIpSnmpAdminStatus, mscVrIpEgpImportNetStorageType=mscVrIpEgpImportNetStorageType, mscVrIpTcpOutSegs=mscVrIpTcpOutSegs, mscVrIpRipExportBgpAsId=mscVrIpRipExportBgpAsId, mscVrIpOspfAreaRowStatusEntry=mscVrIpOspfAreaRowStatusEntry, mscVrIpRipImportInterface=mscVrIpRipImportInterface, mscVrIpOspfComponentName=mscVrIpOspfComponentName, mscVrIpOspfAreaAreaBdrRtrCount=mscVrIpOspfAreaAreaBdrRtrCount, mscVrIpOspfVirtNbrEvents=mscVrIpOspfVirtNbrEvents, mscVrIpOspfLsdbRouterIdIndex=mscVrIpOspfLsdbRouterIdIndex, mscVrIpOperStatusTable=mscVrIpOperStatusTable, mscVrPpIpPortLogicalIfRipIfAcceptDefault=mscVrPpIpPortLogicalIfRipIfAcceptDefault, mscVrIpTcpTcpEntryComponentName=mscVrIpTcpTcpEntryComponentName, mscVrIpRdbProtocolIndex=mscVrIpRdbProtocolIndex, mscVrIpOspfExtLsdbSequence=mscVrIpOspfExtLsdbSequence, mscVrIpBootpSnmpOperStatus=mscVrIpBootpSnmpOperStatus, mscVrIpRelayBCPortComponentName=mscVrIpRelayBCPortComponentName, mscVrIpTunnelSepRowStatus=mscVrIpTunnelSepRowStatus, mscVrIpIcmpInParmProbs=mscVrIpIcmpInParmProbs, mscVrPpIpPortLogicalIfRowStatusEntry=mscVrPpIpPortLogicalIfRowStatusEntry, mscVrIpOspfLsdbRowStatusTable=mscVrIpOspfLsdbRowStatusTable, mscVrIpCacheCacheTableMaxEntries=mscVrIpCacheCacheTableMaxEntries, mscVrPpIpPortLogicalIfOspfIfRowStatus=mscVrPpIpPortLogicalIfOspfIfRowStatus, mscVrPpIpPortComponentName=mscVrPpIpPortComponentName, mscVrIpOspfExtLsdb=mscVrIpOspfExtLsdb, mscVrPpIpPortOperArpStatus=mscVrPpIpPortOperArpStatus, mscVrIpInUnknownProtos=mscVrIpInUnknownProtos, mscVrIpOspfAggregateRowStatusTable=mscVrIpOspfAggregateRowStatusTable, mscVrPpIpPortLogicalIfRipIfSilentFlag=mscVrPpIpPortLogicalIfRipIfSilentFlag, ipGroupCA02=ipGroupCA02, mscVrIpTcpTcpEntryRowStatusTable=mscVrIpTcpTcpEntryRowStatusTable, mscVrPpIpPortCosPolicyAssignment=mscVrPpIpPortCosPolicyAssignment, mscVrIpOspfVirtNbrAreaIdIndex=mscVrIpOspfVirtNbrAreaIdIndex, mscVrIpTunnelMsepIfEntryTable=mscVrIpTunnelMsepIfEntryTable, mscVrIpUdpIndex=mscVrIpUdpIndex, mscVrIpOspfLsdbStorageType=mscVrIpOspfLsdbStorageType, mscVrIpArpHostRowStatus=mscVrIpArpHostRowStatus, mscVrIpRipExportExportMetric=mscVrIpRipExportExportMetric, mscVrIpOspfNbrRowStatusEntry=mscVrIpOspfNbrRowStatusEntry, mscVrIpRelayBCRowStatusEntry=mscVrIpRelayBCRowStatusEntry, mscVrIpTunnelSepProvTable=mscVrIpTunnelSepProvTable, mscVrPpIpPortLogicalIfOspfIfNbrRowStatusTable=mscVrPpIpPortLogicalIfOspfIfNbrRowStatusTable, mscVrPpIpPortLogicalIfOspfIfNbrAddressIndex=mscVrPpIpPortLogicalIfOspfIfNbrAddressIndex, mscVrIpOspfExtLsdbChecksum=mscVrIpOspfExtLsdbChecksum, mscVrIpFwdRowStatusEntry=mscVrIpFwdRowStatusEntry, mscVrIpOspfExtLsdbRowStatus=mscVrIpOspfExtLsdbRowStatus, mscVrIpRipImportNetIpMask=mscVrIpRipImportNetIpMask, mscVrIpTunnelStateEntry=mscVrIpTunnelStateEntry, mscVrPpIpPortRelayBroadcast=mscVrPpIpPortRelayBroadcast, mscVrPpIpPortLogicalIfOspfIfTOSMetricTosIndex=mscVrPpIpPortLogicalIfOspfIfTOSMetricTosIndex, mscVrIpUdpStorageType=mscVrIpUdpStorageType, mscVrIpArpRowStatus=mscVrIpArpRowStatus, mscVrPpIpPortProvTable=mscVrPpIpPortProvTable, mscVrPpIpPortProxyArpStatus=mscVrPpIpPortProxyArpStatus, mscVrIpStaticRouteNhRowStatus=mscVrIpStaticRouteNhRowStatus, mscVrPpIpPortLogicalIfOspfIfTOSStorageType=mscVrPpIpPortLogicalIfOspfIfTOSStorageType, mscVrIpNsProvEntry=mscVrIpNsProvEntry, mscVrIpArpDynHostCosIndex=mscVrIpArpDynHostCosIndex, mscVrPpIpPortLogicalIfRipIfComponentName=mscVrPpIpPortLogicalIfRipIfComponentName, mscVrPpIpPortBootpPAddrValue=mscVrPpIpPortBootpPAddrValue, mscVrIpTunnelSepMpEntry=mscVrIpTunnelSepMpEntry, mscVrIpUdp=mscVrIpUdp, mscVrIpNsRowStatusTable=mscVrIpNsRowStatusTable, mscVrIpEgpNbrNeighborAddressIndex=mscVrIpEgpNbrNeighborAddressIndex, mscVrIpTunnelMsepMpEntry=mscVrIpTunnelMsepMpEntry, mscVrIpOspfGenerateDefaultRouteMetric=mscVrIpOspfGenerateDefaultRouteMetric, mscVrIpOspfExportBgpPeerIp=mscVrIpOspfExportBgpPeerIp, mscVrIpBootpAdminControlTable=mscVrIpBootpAdminControlTable, mscVrIpRipImportStorageType=mscVrIpRipImportStorageType, mscVrIpOspfNbrEvents=mscVrIpOspfNbrEvents, mscVrIpFwdDestMaskIndex=mscVrIpFwdDestMaskIndex, mscVrIpRipExportStorageType=mscVrIpRipExportStorageType, mscVrIpRipSnmpAdminStatus=mscVrIpRipSnmpAdminStatus, mscVrIpStaticRouteNhMetric=mscVrIpStaticRouteNhMetric, mscVrIpOspfProvEntry=mscVrIpOspfProvEntry, mscVrIpTunnelSepSourceAddress=mscVrIpTunnelSepSourceAddress, mscVrPpIpPortLogicalIfOspfIfNbrRtrId=mscVrPpIpPortLogicalIfOspfIfNbrRtrId, mscVrIpNsLastFilter=mscVrIpNsLastFilter, mscVrIpTunnelMsepRowStatusEntry=mscVrIpTunnelMsepRowStatusEntry, mscVrIpRipImportImportMetric=mscVrIpRipImportImportMetric, mscVrIpOspfAggregateProvEntry=mscVrIpOspfAggregateProvEntry, mscVrIpArpHost=mscVrIpArpHost, mscVrIpIcmpInAddrMaskReps=mscVrIpIcmpInAddrMaskReps, mscVrIpIcmpComponentName=mscVrIpIcmpComponentName, mscVrPpIpPortAllowMcastMacDest=mscVrPpIpPortAllowMcastMacDest, mscVrIpRipExportNetIpAddress=mscVrIpRipExportNetIpAddress, mscVrPpIpPortLogicalIfOspfIfComponentName=mscVrPpIpPortLogicalIfOspfIfComponentName, mscVrIpOspfExtLsdbRowStatusEntry=mscVrIpOspfExtLsdbRowStatusEntry, mscVrIpOspfAreaImportAsExtern=mscVrIpOspfAreaImportAsExtern, mscVrIpUdpListenEntry=mscVrIpUdpListenEntry, mscVrIpRelayBCPortRowStatusEntry=mscVrIpRelayBCPortRowStatusEntry, mscVrIpFwdProtocolPortName=mscVrIpFwdProtocolPortName, mscVrIpOspfHostTosIndex=mscVrIpOspfHostTosIndex, mscVrPpIpPortNsComponentName=mscVrPpIpPortNsComponentName, mscVrIpEgpExportProvEntry=mscVrIpEgpExportProvEntry, mscVrIpAdminControlEntry=mscVrIpAdminControlEntry, mscVrIpOspfStubRowStatusEntry=mscVrIpOspfStubRowStatusEntry, mscVrIpOspfNbrAddressLessIndex=mscVrIpOspfNbrAddressLessIndex, mscVrIpTunnelMsepSharedDomainVirtualRouter=mscVrIpTunnelMsepSharedDomainVirtualRouter, mscVrIpStaticRouteNhRowStatusTable=mscVrIpStaticRouteNhRowStatusTable, mscVrIpEgpNbrOperEntry=mscVrIpEgpNbrOperEntry, mscVrIpRipImportComponentName=mscVrIpRipImportComponentName, mscVrIpBootpProvTable=mscVrIpBootpProvTable, mscVrPpIpPortOperEntry=mscVrPpIpPortOperEntry, mscVrPpIpPortBootpPSnmpOperStatus=mscVrPpIpPortBootpPSnmpOperStatus, mscVrIpOspfExportNetListComponentName=mscVrIpOspfExportNetListComponentName, mscVrIpFwd=mscVrIpFwd, mscVrIpEgpImportNetRowStatusTable=mscVrIpEgpImportNetRowStatusTable, mscVrIpTcpTcpEntryState=mscVrIpTcpTcpEntryState, mscVrIpOspfExportNetList=mscVrIpOspfExportNetList, mscVrIpEgpStateEntry=mscVrIpEgpStateEntry, mscVrIpOspfHostAddressIndex=mscVrIpOspfHostAddressIndex, mscVrIpOspfVirtNbrRowStatusTable=mscVrIpOspfVirtNbrRowStatusTable, mscVrPpIpPortLogicalIfOspfIfTOSProvTable=mscVrPpIpPortLogicalIfOspfIfTOSProvTable, mscVrPpIpPortBootpPOperStatusEntry=mscVrPpIpPortBootpPOperStatusEntry, mscVrIpEgpNbrRowStatusEntry=mscVrIpEgpNbrRowStatusEntry, mscVrIpComponentName=mscVrIpComponentName, mscVrIpIcmpInMsgs=mscVrIpIcmpInMsgs, mscVrIpRelayBCOperEntry=mscVrIpRelayBCOperEntry, mscVrIpBootpIndex=mscVrIpBootpIndex, mscVrIpCacheComponentName=mscVrIpCacheComponentName, mscVrIpTunnelMsepLinkToProtocolPort=mscVrIpTunnelMsepLinkToProtocolPort, mscVrIpOspfNbrOptions=mscVrIpOspfNbrOptions, mscVrIpIcmpProvEntry=mscVrIpIcmpProvEntry, mscVrIpRipRouteChangesMade=mscVrIpRipRouteChangesMade, mscVrIpOspfStubMetric=mscVrIpOspfStubMetric, mscVrIpRelayBCRelayNdCount=mscVrIpRelayBCRelayNdCount, mscVrIpArpDynHostPermanentVirtualCircuitNumber=mscVrIpArpDynHostPermanentVirtualCircuitNumber, mscVrPpIpPortLogicalIfOspfIfTOSProvEntry=mscVrPpIpPortLogicalIfOspfIfTOSProvEntry, mscVrIpCtsEntry=mscVrIpCtsEntry, mscVrIpRipImportNetStorageType=mscVrIpRipImportNetStorageType, mscVrIpRdbOperEntry=mscVrIpRdbOperEntry, mscVrIpInDelivers=mscVrIpInDelivers, ipGroup=ipGroup, mscVrIpTcpIndex=mscVrIpTcpIndex, mscVrIpOspfRedistributeIbgp=mscVrIpOspfRedistributeIbgp, mscVrIpTunnelMsepStorageType=mscVrIpTunnelMsepStorageType, mscVrIpOspfStubTosIndex=mscVrIpOspfStubTosIndex, mscVrIpNsComponentName=mscVrIpNsComponentName, mscVrPpIpPortRowStatusEntry=mscVrPpIpPortRowStatusEntry, mscVrPpIpPortLogicalIfStorageType=mscVrPpIpPortLogicalIfStorageType, mscVrIpRdbOperTable=mscVrIpRdbOperTable, mscVrIpArpRowStatusEntry=mscVrIpArpRowStatusEntry, mscVrIpTunnelSepOperTable=mscVrIpTunnelSepOperTable, mscVrIpTcpActiveOpens=mscVrIpTcpActiveOpens, mscVrIpBootpAdminState=mscVrIpBootpAdminState, mscVrPpIpPortLogicalIfOspfIfDesignatedRouter=mscVrPpIpPortLogicalIfOspfIfDesignatedRouter, mscVrIpArpHostProvEntry=mscVrIpArpHostProvEntry, mscVrIpIfNcHardwareAddress=mscVrIpIfNcHardwareAddress, mscVrIpEgpAdminControlEntry=mscVrIpEgpAdminControlEntry, mscVrIpOspfVirtNbrRowStatusEntry=mscVrIpOspfVirtNbrRowStatusEntry, mscVrIpNsApplyRowStatus=mscVrIpNsApplyRowStatus, mscVrIpTcpTcpEntryLocalPortIndex=mscVrIpTcpTcpEntryLocalPortIndex, mscVrPpIpPortBootpPRowStatusTable=mscVrPpIpPortBootpPRowStatusTable, mscVrIpStaticRouteNhProvEntry=mscVrIpStaticRouteNhProvEntry, mscVrIpOspfAreaProvTable=mscVrIpOspfAreaProvTable, mscVrPpIpPortBootpPComponentName=mscVrPpIpPortBootpPComponentName, mscVrIpIcmpOutAddrMaskReps=mscVrIpIcmpOutAddrMaskReps, mscVrIpOspfAreaAreaIdIndex=mscVrIpOspfAreaAreaIdIndex, mscVrIpEgpNbrDefaultRouteMetric=mscVrIpEgpNbrDefaultRouteMetric, mscVrIpOspfVirtIfComponentName=mscVrIpOspfVirtIfComponentName, ipCapabilities=ipCapabilities, mscVrIpStaticDiscardRowStatus=mscVrIpStaticDiscardRowStatus, mscVrIpIcmpOutEchoReps=mscVrIpIcmpOutEchoReps, mscVrIpEgpImportRowStatusTable=mscVrIpEgpImportRowStatusTable, mscVrIpTunnelRowStatusEntry=mscVrIpTunnelRowStatusEntry, mscVrIpBootpStateEntry=mscVrIpBootpStateEntry, mscVrIpOspfOperationalState=mscVrIpOspfOperationalState, mscVrIpOspfAggregateAreaIdIndex=mscVrIpOspfAggregateAreaIdIndex, mscVrIpOspfTosSupport=mscVrIpOspfTosSupport, mscVrIpStaticRouteNhProvTable=mscVrIpStaticRouteNhProvTable, mscVrIpOutDiscards=mscVrIpOutDiscards, mscVrIpCacheStateEntry=mscVrIpCacheStateEntry, mscVrIpEgpExportRipNeighbor=mscVrIpEgpExportRipNeighbor, mscVrIpEgpExportRipInterface=mscVrIpEgpExportRipInterface, mscVrPpIpPortArpStatus=mscVrPpIpPortArpStatus, mscVrIpIcmpSendRedirect=mscVrIpIcmpSendRedirect, mscVrIpEgpNbrInMsgs=mscVrIpEgpNbrInMsgs, mscVrIpEgpExportAdvertiseStatus=mscVrIpEgpExportAdvertiseStatus, mscVrPpIpPortAdminControlTable=mscVrPpIpPortAdminControlTable, mscVrIpOspfLsdbAdvertisement=mscVrIpOspfLsdbAdvertisement, mscVrIpStaticAdminState=mscVrIpStaticAdminState, mscVrIpRdbComponentName=mscVrIpRdbComponentName, mscVrIpOspfLsdbLsIdIndex=mscVrIpOspfLsdbLsIdIndex, mscVrIpUdpRowStatus=mscVrIpUdpRowStatus, mscVrIpCacheRowStatus=mscVrIpCacheRowStatus, mscVrIpEgpDefaultHelloInterval=mscVrIpEgpDefaultHelloInterval, mscVrIpTcpCurrEstab=mscVrIpTcpCurrEstab, mscVrIpOspfNbr=mscVrIpOspfNbr, mscVrPpIpPortLogicalIfComponentName=mscVrPpIpPortLogicalIfComponentName, mscVrIpIcmpOutTimestampReps=mscVrIpIcmpOutTimestampReps, mscVrIpCacheOperationalState=mscVrIpCacheOperationalState, mscVrIpIndex=mscVrIpIndex, mscVrIpEgpImportProvEntry=mscVrIpEgpImportProvEntry, mscVrIpEgpImportNetProvEntry=mscVrIpEgpImportNetProvEntry, mscVrIpStaticRowStatusTable=mscVrIpStaticRowStatusTable, mscVrIpIcmpInRtrSolicits=mscVrIpIcmpInRtrSolicits, mscVrIpEgpImportNetIndex=mscVrIpEgpImportNetIndex, mscVrIpCacheUsageState=mscVrIpCacheUsageState, mscVrIpOspfVirtIfRtrDeadInterval=mscVrIpOspfVirtIfRtrDeadInterval, mscVrIpIfBroadcastAddress=mscVrIpIfBroadcastAddress, mscVrPpIpPortIcmpMaskReply=mscVrPpIpPortIcmpMaskReply, mscVrIpTunnelMsepIfAdminStatus=mscVrIpTunnelMsepIfAdminStatus, mscVrIpTcpAttemptFails=mscVrIpTcpAttemptFails, mscVrIpOspfExportTag=mscVrIpOspfExportTag, mscVrPpIpPortRelayAddressCount=mscVrPpIpPortRelayAddressCount, mscVrIpBootpRowStatusTable=mscVrIpBootpRowStatusTable, mscVrIpNsApplyComponentName=mscVrIpNsApplyComponentName, mscVrPpIpPortLanModel=mscVrPpIpPortLanModel, mscVrIpCosPolicyAssignment=mscVrIpCosPolicyAssignment, mscVrPpIpPortNsIndex=mscVrPpIpPortNsIndex, mscVrPpIpPortBootpPAdminControlEntry=mscVrPpIpPortBootpPAdminControlEntry, mscVrIpRowStatusTable=mscVrIpRowStatusTable)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-IpMIB", mscVrIpOspfExportEgpAsId=mscVrIpOspfExportEgpAsId, mscVrIpInHdrErrors=mscVrIpInHdrErrors, mscVrIpStaticRouteNhRowStatusEntry=mscVrIpStaticRouteNhRowStatusEntry, mscVrIp=mscVrIp, mscVrIpIcmpOutRtrSolicits=mscVrIpIcmpOutRtrSolicits, mscVrIpUdpListenEntryLocalAddressIndex=mscVrIpUdpListenEntryLocalAddressIndex, mscVrIpFwdNextHopAs=mscVrIpFwdNextHopAs, mscVrIpRdbDestAddressIndex=mscVrIpRdbDestAddressIndex, mscVrIpFwdComponentName=mscVrIpFwdComponentName, mscVrPpIpPortLogicalIfRowStatus=mscVrPpIpPortLogicalIfRowStatus, mscVrIpRdbMetric=mscVrIpRdbMetric, mscVrIpIfComponentName=mscVrIpIfComponentName, mscVrIpOspfRowStatusEntry=mscVrIpOspfRowStatusEntry, mscVrIpOspfAggregate=mscVrIpOspfAggregate, mscVrIpRelayBCStorageType=mscVrIpRelayBCStorageType, mscVrIpTunnelSepEncapType=mscVrIpTunnelSepEncapType, mscVrIpEgpExportNetComponentName=mscVrIpEgpExportNetComponentName, mscVrPpIpPortLogicalIfOspfIfNbrProvTable=mscVrPpIpPortLogicalIfOspfIfNbrProvTable, mscVrIpArpHostOperEncap=mscVrIpArpHostOperEncap, mscVrIpEgpMaxBufferSize=mscVrIpEgpMaxBufferSize, mscVrIpStaticRouteDestMaskIndex=mscVrIpStaticRouteDestMaskIndex, mscVrIpReasmOks=mscVrIpReasmOks, mscVrIpEgpComponentName=mscVrIpEgpComponentName, mscVrIpOspfAreaAreaSummary=mscVrIpOspfAreaAreaSummary, mscVrIpInReceives=mscVrIpInReceives, mscVrPpIpPortEncap=mscVrPpIpPortEncap, mscVrIpStaticDiscardRowStatusTable=mscVrIpStaticDiscardRowStatusTable, mscVrIpTcpTcpEntryLocalAddressIndex=mscVrIpTcpTcpEntryLocalAddressIndex, mscVrIpEgpNbrState=mscVrIpEgpNbrState, mscVrPpIpPortNs=mscVrPpIpPortNs, mscVrIpCacheEntriesFree=mscVrIpCacheEntriesFree, mscVrIpFwdAge=mscVrIpFwdAge, mscVrPpIpPortLogicalIfRipIfNbrRowStatusEntry=mscVrPpIpPortLogicalIfRipIfNbrRowStatusEntry, mscVrIpRipExportAdvertiseStatus=mscVrIpRipExportAdvertiseStatus, mscVrIpRelayBCPortStorageType=mscVrIpRelayBCPortStorageType, mscVrIpOspfStubAdvertiseDefault=mscVrIpOspfStubAdvertiseDefault, mscVrPpIpPortBootpPOperStatusTable=mscVrPpIpPortBootpPOperStatusTable, mscVrIpCacheStateTable=mscVrIpCacheStateTable, mscVrIpEgpImportNetIpAddress=mscVrIpEgpImportNetIpAddress, mscVrIpNsApplyIpAddress2=mscVrIpNsApplyIpAddress2, mscVrIpRelayBCPortOperTable=mscVrIpRelayBCPortOperTable, mscVrIpTunnelMsepDstTable=mscVrIpTunnelMsepDstTable, mscVrIpTunnel=mscVrIpTunnel, mscVrIpRipImportNetIpAddress=mscVrIpRipImportNetIpAddress, mscVrIpTunnelSepIfIndex=mscVrIpTunnelSepIfIndex, mscVrPpIpPortLogicalIfOspfIfState=mscVrPpIpPortLogicalIfOspfIfState, mscVrIpArpHostPermanentVirtualCircuitNumber=mscVrIpArpHostPermanentVirtualCircuitNumber, mscVrIpCtsValue=mscVrIpCtsValue, mscVrIpOspfExportNetListIndex=mscVrIpOspfExportNetListIndex, mscVrIpUdpStatsTable=mscVrIpUdpStatsTable, mscVrPpIpPortBootpPAdminState=mscVrPpIpPortBootpPAdminState, mscVrIpEgpOperStatusEntry=mscVrIpEgpOperStatusEntry, mscVrIpOspfStubRowStatus=mscVrIpOspfStubRowStatus, mscVrIpTunnelMsepDstValue=mscVrIpTunnelMsepDstValue, mscVrIpEgpImportRowStatus=mscVrIpEgpImportRowStatus, mscVrIpTunnelSepIfEntryTable=mscVrIpTunnelSepIfEntryTable, mscVrIpTunnelMsepIfIndex=mscVrIpTunnelMsepIfIndex, mscVrIpIcmpInRedirects=mscVrIpIcmpInRedirects, mscVrIpOspfExportNetListProvEntry=mscVrIpOspfExportNetListProvEntry, mscVrIpOspf=mscVrIpOspf, mscVrIpArpRowStatusTable=mscVrIpArpRowStatusTable, mscVrIpStaticOperationalState=mscVrIpStaticOperationalState, mscVrIpOspfExportBgpAsId=mscVrIpOspfExportBgpAsId, mscVrIpArpDynHostRowStatusEntry=mscVrIpArpDynHostRowStatusEntry, mscVrIpNs=mscVrIpNs, mscVrPpIpPortBootpPInRequests=mscVrPpIpPortBootpPInRequests, mscVrIpOspfIndex=mscVrIpOspfIndex, mscVrIpOperStatusEntry=mscVrIpOperStatusEntry, mscVrPpIpPortNsStorageType=mscVrPpIpPortNsStorageType, mscVrIpEgpNbrAsId=mscVrIpEgpNbrAsId, mscVrIpStaticStateEntry=mscVrIpStaticStateEntry, mscVrIpNsFirstFilter=mscVrIpNsFirstFilter, mscVrIpEgpExportNetIpAddress=mscVrIpEgpExportNetIpAddress, mscVrPpIpPortOperCosPolicyAssignment=mscVrPpIpPortOperCosPolicyAssignment, mscVrIpOspfNbrPriority=mscVrIpOspfNbrPriority, mscVrIpRipExportRipInterface=mscVrIpRipExportRipInterface, mscVrIpBootpRowStatusEntry=mscVrIpBootpRowStatusEntry, mscVrIpRipExportNetStorageType=mscVrIpRipExportNetStorageType, mscVrIpArpProvEntry=mscVrIpArpProvEntry, mscVrIpRipImportNet=mscVrIpRipImportNet, mscVrIpFragCreates=mscVrIpFragCreates, mscVrIpArpDynHostEncapsulationType=mscVrIpArpDynHostEncapsulationType, mscVrIpTcpTcpEntryRowStatus=mscVrIpTcpTcpEntryRowStatus, mscVrIpOspfExportNetListStorageType=mscVrIpOspfExportNetListStorageType, mscVrIpOspfLsdbAge=mscVrIpOspfLsdbAge, mscVrIpEgpExportNetRowStatusEntry=mscVrIpEgpExportNetRowStatusEntry, mscVrIpOspfLsdbChecksum=mscVrIpOspfLsdbChecksum, mscVrIpOspfAreaAuthType=mscVrIpOspfAreaAuthType, mscVrIpRipExportNetIpMask=mscVrIpRipExportNetIpMask, mscVrPpIpPortLogicalIfOspfIfMetric=mscVrPpIpPortLogicalIfOspfIfMetric, mscVrIpStaticRowStatus=mscVrIpStaticRowStatus, mscVrPpIpPortArpNoLearn=mscVrPpIpPortArpNoLearn, mscVrIpRipOperEntry=mscVrIpRipOperEntry, mscVrIpOspfAggregateStorageType=mscVrIpOspfAggregateStorageType, ipCapabilitiesCA02=ipCapabilitiesCA02, mscVrIpOspfAreaRowStatusTable=mscVrIpOspfAreaRowStatusTable, mscVrIpOspfExport=mscVrIpOspfExport, mscVrIpArpHostPhysAddress=mscVrIpArpHostPhysAddress, mscVrIpIcmpStatsEntry=mscVrIpIcmpStatsEntry, ipCapabilitiesCA=ipCapabilitiesCA, mscVrPpIpPortOperStatusEntry=mscVrPpIpPortOperStatusEntry, mscVrIpArpHostHostAddressIndex=mscVrIpArpHostHostAddressIndex, mscVrIpOspfExternLsaCount=mscVrIpOspfExternLsaCount, mscVrIpSnmpOperStatus=mscVrIpSnmpOperStatus, mscVrIpStaticRoutePreferredOver=mscVrIpStaticRoutePreferredOver, mscVrPpIpPortSnmpOperStatus=mscVrPpIpPortSnmpOperStatus, mscVrIpEgpExportRowStatus=mscVrIpEgpExportRowStatus, mscVrIpRdbDestMaskIndex=mscVrIpRdbDestMaskIndex, mscVrIpRelayBCPortPortNumIndex=mscVrIpRelayBCPortPortNumIndex, mscVrPpIpPortLogicalIfRipIfRowStatusEntry=mscVrPpIpPortLogicalIfRipIfRowStatusEntry, mscVrIpUdpInDatagrams=mscVrIpUdpInDatagrams, mscVrIpArpDynHostNcPhysAddress=mscVrIpArpDynHostNcPhysAddress, mscVrIpInAddrErrors=mscVrIpInAddrErrors, mscVrIpOspfVirtIfOperTable=mscVrIpOspfVirtIfOperTable, mscVrIpReasmReqds=mscVrIpReasmReqds, mscVrIpRipExportRowStatusTable=mscVrIpRipExportRowStatusTable, mscVrIpBootpPpEOutRequests=mscVrIpBootpPpEOutRequests, mscVrIpIfMediaType=mscVrIpIfMediaType, mscVrIpIcmpRowStatus=mscVrIpIcmpRowStatus, mscVrIpOspfExtLsdbLsIdIndex=mscVrIpOspfExtLsdbLsIdIndex, mscVrIpEgpImportProvTable=mscVrIpEgpImportProvTable, mscVrPpIpPortLogicalIfOspfIfNbrRowStatusEntry=mscVrPpIpPortLogicalIfOspfIfNbrRowStatusEntry, mscVrPpIpPortLogicalIfOspfIfNbrStorageType=mscVrPpIpPortLogicalIfOspfIfNbrStorageType, mscVrIpEgpInMsgs=mscVrIpEgpInMsgs, mscVrIpEgpExportIndex=mscVrIpEgpExportIndex, mscVrIpOspfExportNetListIpAddress=mscVrIpOspfExportNetListIpAddress, mscVrIpOspfAdminState=mscVrIpOspfAdminState, mscVrIpArpHostRowStatusTable=mscVrIpArpHostRowStatusTable, mscVrIpArpHostRowStatusEntry=mscVrIpArpHostRowStatusEntry, mscVrIpTunnelStateTable=mscVrIpTunnelStateTable, mscVrIpEgpImportRowStatusEntry=mscVrIpEgpImportRowStatusEntry, mscVrIpUdpComponentName=mscVrIpUdpComponentName, mscVrIpOspfVirtNbrOperTable=mscVrIpOspfVirtNbrOperTable, mscVrIpOspfHostRowStatusEntry=mscVrIpOspfHostRowStatusEntry, mscVrIpEgpOutErrorMsgs=mscVrIpEgpOutErrorMsgs, mscVrIpArpHostStorageType=mscVrIpArpHostStorageType, mscVrIpIcmpOutDestUnreachs=mscVrIpIcmpOutDestUnreachs, mscVrIpBootpAdminControlEntry=mscVrIpBootpAdminControlEntry, mscVrPpIpPort=mscVrPpIpPort, mscVrPpIpPortBootpPUsageState=mscVrPpIpPortBootpPUsageState, mscVrIpEgpNbrComponentName=mscVrIpEgpNbrComponentName, mscVrIpNsApplyRowStatusEntry=mscVrIpNsApplyRowStatusEntry, mscVrIpOspfOriginateNewLsas=mscVrIpOspfOriginateNewLsas, mscVrIpOspfHostRowStatus=mscVrIpOspfHostRowStatus, mscVrIpRipMigrateRip=mscVrIpRipMigrateRip, mscVrIpRipExportProvTable=mscVrIpRipExportProvTable, mscVrIpTunnelSepProvEntry=mscVrIpTunnelSepProvEntry, mscVrIpTunnelMsepDstRowStatus=mscVrIpTunnelMsepDstRowStatus, mscVrIpCtsTable=mscVrIpCtsTable, mscVrIpIcmpInEchos=mscVrIpIcmpInEchos, mscVrIpRipExportOspfTag=mscVrIpRipExportOspfTag, mscVrIpRipExportNetRowStatusTable=mscVrIpRipExportNetRowStatusTable, mscVrIpOspfStateEntry=mscVrIpOspfStateEntry, mscVrIpOspfStubComponentName=mscVrIpOspfStubComponentName, mscVrIpOspfVirtNbrNbrIpAddress=mscVrIpOspfVirtNbrNbrIpAddress, mscVrIpOspfVirtIfEvents=mscVrIpOspfVirtIfEvents, mscVrIpArpComponentName=mscVrIpArpComponentName, mscVrIpStaticDiscardStorageType=mscVrIpStaticDiscardStorageType, mscVrPpIpPortBootpPRelayForwardStatus=mscVrPpIpPortBootpPRelayForwardStatus, mscVrIpOspfLsdbSequence=mscVrIpOspfLsdbSequence, mscVrIpTunnelMsepRowStatus=mscVrIpTunnelMsepRowStatus, mscVrPpIpPortLogicalIfRipIfRowStatusTable=mscVrPpIpPortLogicalIfRipIfRowStatusTable, mscVrPpIpPortLogicalIfRipIfIndex=mscVrPpIpPortLogicalIfRipIfIndex, mscVrIpStaticRouteNh=mscVrIpStaticRouteNh, mscVrIpIcmpInTimestampReps=mscVrIpIcmpInTimestampReps, mscVrIpRipImportNetComponentName=mscVrIpRipImportNetComponentName, mscVrIpTcp=mscVrIpTcp, mscVrIpEgpDefaultPollInterval=mscVrIpEgpDefaultPollInterval, mscVrIpOspfVersionNumber=mscVrIpOspfVersionNumber, mscVrIpRdbAge=mscVrIpRdbAge, mscVrIpEgpNbrGenerateDefaultRoute=mscVrIpEgpNbrGenerateDefaultRoute, mscVrIpTcpRToMin=mscVrIpTcpRToMin, mscVrIpOspfLsdbLsdbTypeIndex=mscVrIpOspfLsdbLsdbTypeIndex, mscVrIpRipExportNet=mscVrIpRipExportNet, mscVrIpOspfAggregateRowStatusEntry=mscVrIpOspfAggregateRowStatusEntry, mscVrIpBootpSnmpAdminStatus=mscVrIpBootpSnmpAdminStatus, mscVrIpBootpPpERowStatusTable=mscVrIpBootpPpERowStatusTable, mscVrIpOspfAreaComponentName=mscVrIpOspfAreaComponentName, mscVrIpRipAdminState=mscVrIpRipAdminState, mscVrIpTunnelSepIfEntryEntry=mscVrIpTunnelSepIfEntryEntry, mscVrIpOspfAsBdrRtrStatus=mscVrIpOspfAsBdrRtrStatus, mscVrIpEgpOutMsgs=mscVrIpEgpOutMsgs, mscVrIpRipImportNetProvTable=mscVrIpRipImportNetProvTable, mscVrIpRdbStorageType=mscVrIpRdbStorageType, mscVrIpOspfHostProvTable=mscVrIpOspfHostProvTable, mscVrIpStaticRouteProvTable=mscVrIpStaticRouteProvTable, mscVrIpIcmpIndex=mscVrIpIcmpIndex, mscVrIpBootpPpEStorageType=mscVrIpBootpPpEStorageType, mscVrPpIpPortLogicalIfOspfIfOperEntry=mscVrPpIpPortLogicalIfOspfIfOperEntry, mscVrIpCacheIndex=mscVrIpCacheIndex, mscVrIpEgpProvTable=mscVrIpEgpProvTable, mscVrIpArpDynHostMaxTxUnit=mscVrIpArpDynHostMaxTxUnit, mscVrIpTcpTcpEntryRemotePortIndex=mscVrIpTcpTcpEntryRemotePortIndex, mscVrIpEgpOperStatusTable=mscVrIpEgpOperStatusTable, mscVrPpIpPortRowStatusTable=mscVrPpIpPortRowStatusTable, mscVrIpOspfSnmpOperStatus=mscVrIpOspfSnmpOperStatus, mscVrIpRipImportRowStatus=mscVrIpRipImportRowStatus, mscVrPpIpPortLogicalIf=mscVrPpIpPortLogicalIf, mscVrIpFwdIfIndex=mscVrIpFwdIfIndex, mscVrIpIcmpInRtrAdvs=mscVrIpIcmpInRtrAdvs, mscVrIpBootpPpEOperTable=mscVrIpBootpPpEOperTable, mscVrIpOspfExportIndex=mscVrIpOspfExportIndex, mscVrPpIpPortOperStatusTable=mscVrPpIpPortOperStatusTable, mscVrPpIpPortLogicalIfOspfIfMetricEntry=mscVrPpIpPortLogicalIfOspfIfMetricEntry, mscVrIpEgpExport=mscVrIpEgpExport, mscVrIpNsApplyFilter=mscVrIpNsApplyFilter, mscVrIpFwdDestAddressIndex=mscVrIpFwdDestAddressIndex, mscVrPpIpPortSourceRouteEndStationSupport=mscVrPpIpPortSourceRouteEndStationSupport, mscVrPpIpPortBootpPStatsTable=mscVrPpIpPortBootpPStatsTable, mscVrIpRipExportRowStatusEntry=mscVrIpRipExportRowStatusEntry, mscVrIpRipSnmpOperStatus=mscVrIpRipSnmpOperStatus, mscVrIpIcmpOutMsgs=mscVrIpIcmpOutMsgs, mscVrIpCacheAdminState=mscVrIpCacheAdminState, mscVrIpUdpStatsEntry=mscVrIpUdpStatsEntry, mscVrIpStaticRouteStorageType=mscVrIpStaticRouteStorageType, mscVrPpIpPortNsProvEntry=mscVrPpIpPortNsProvEntry, mscVrIpOspfVirtNbrExchangeStatus=mscVrIpOspfVirtNbrExchangeStatus, mscVrIpRipExportRowStatus=mscVrIpRipExportRowStatus, mscVrIpTcpTcpEntry=mscVrIpTcpTcpEntry, mscVrIpEgpSnmpOperStatus=mscVrIpEgpSnmpOperStatus, mscVrIpTunnelRowStatusTable=mscVrIpTunnelRowStatusTable, mscVrIpEgpExportInEgpAsId=mscVrIpEgpExportInEgpAsId, mscVrPpIpPortNsProvTable=mscVrPpIpPortNsProvTable, mscVrIpIfInterfaceAddressIndex=mscVrIpIfInterfaceAddressIndex, mscVrIpIfMtu=mscVrIpIfMtu, mscVrIpStaticStateTable=mscVrIpStaticStateTable, mscVrPpIpPortLogicalIfOspfIfNbrProvEntry=mscVrPpIpPortLogicalIfOspfIfNbrProvEntry, mscVrIpOspfExportRipInterface=mscVrIpOspfExportRipInterface, mscVrIpTunnelMsepMpTable=mscVrIpTunnelMsepMpTable, mscVrPpIpPortLogicalIfRipIfRowStatus=mscVrPpIpPortLogicalIfRipIfRowStatus, mscVrIpTunnelMsepProvEntry=mscVrIpTunnelMsepProvEntry, mscVrPpIpPortSresProvEntry=mscVrPpIpPortSresProvEntry, mscVrPpIpPortLogicalIfOspfIfNbrLsRetransQlen=mscVrPpIpPortLogicalIfOspfIfNbrLsRetransQlen, mscVrIpOspfAggregateRowStatus=mscVrIpOspfAggregateRowStatus, mscVrIpStaticRowStatusEntry=mscVrIpStaticRowStatusEntry, mscVrIpOspfVirtNbrRowStatus=mscVrIpOspfVirtNbrRowStatus, mscVrIpRelayBCRowStatus=mscVrIpRelayBCRowStatus, mscVrIpStaticDiscardComponentName=mscVrIpStaticDiscardComponentName, mscVrIpBootpPpEStatus=mscVrIpBootpPpEStatus, mscVrPpIpPortLogicalIfRipIfFlashUpdateFlag=mscVrPpIpPortLogicalIfRipIfFlashUpdateFlag, mscVrIpOspfAggregateEffect=mscVrIpOspfAggregateEffect, mscVrIpEgpImportStorageType=mscVrIpEgpImportStorageType, mscVrPpIpPortAssignedQos=mscVrPpIpPortAssignedQos, mscVrIpRowStatusEntry=mscVrIpRowStatusEntry, mscVrPpIpPortLogicalIfOspfIfBackupDesignatedRouter=mscVrPpIpPortLogicalIfOspfIfBackupDesignatedRouter, mscVrIpOspfExtLsdbRowStatusTable=mscVrIpOspfExtLsdbRowStatusTable, mscVrPpIpPortLogicalIfRipIfDefaultRouteMetric=mscVrPpIpPortLogicalIfRipIfDefaultRouteMetric, mscVrIpEgpImportNetComponentName=mscVrIpEgpImportNetComponentName, mscVrIpStaticRouteRowStatusTable=mscVrIpStaticRouteRowStatusTable, mscVrIpNsLocalInFilter=mscVrIpNsLocalInFilter, mscVrIpRipAdminControlEntry=mscVrIpRipAdminControlEntry, mscVrIpArpHostComponentName=mscVrIpArpHostComponentName, mscVrIpStaticRouteNhIndex=mscVrIpStaticRouteNhIndex, mscVrIpRipExportOutInterface=mscVrIpRipExportOutInterface)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-IpMIB", mscVrIpEgpNbrOutMsgs=mscVrIpEgpNbrOutMsgs, mscVrIpTcpRetransSegs=mscVrIpTcpRetransSegs, mscVrIpEgpMaxNatNets=mscVrIpEgpMaxNatNets, mscVrIpOspfExtLsdbLimit=mscVrIpOspfExtLsdbLimit, mscVrIpTunnelSepDiscoveredPathMtu=mscVrIpTunnelSepDiscoveredPathMtu, mscVrIpOspfExportProtocol=mscVrIpOspfExportProtocol, mscVrIpEgpNbrRowStatus=mscVrIpEgpNbrRowStatus, mscVrIpOspfStubStorageType=mscVrIpOspfStubStorageType, mscVrIpOspfExportProvEntry=mscVrIpOspfExportProvEntry, mscVrIpArpHostProvTable=mscVrIpArpHostProvTable, mscVrIpIf=mscVrIpIf, mscVrIpRelayBCProvTable=mscVrIpRelayBCProvTable, mscVrIpOspfHost=mscVrIpOspfHost, mscVrIpStaticDiscardDestAddressIndex=mscVrIpStaticDiscardDestAddressIndex, mscVrPpIpPortLogicalIfOspfIfNbrState=mscVrPpIpPortLogicalIfOspfIfNbrState, mscVrPpIpPortBootpPBootpLogicalInterface=mscVrPpIpPortBootpPBootpLogicalInterface, mscVrIpIfOperTable=mscVrIpIfOperTable, mscVrIpOspfExportRipNeighbor=mscVrIpOspfExportRipNeighbor, mscVrIpEgpExportNet=mscVrIpEgpExportNet, mscVrIpEgpImportNetRowStatusEntry=mscVrIpEgpImportNetRowStatusEntry, mscVrIpOspfNbrLsRetransQlen=mscVrIpOspfNbrLsRetransQlen, mscVrPpIpPortLogicalIfRowStatusTable=mscVrPpIpPortLogicalIfRowStatusTable, mscVrIpRipStateTable=mscVrIpRipStateTable, mscVrIpFwdTypeOfServiceIndex=mscVrIpFwdTypeOfServiceIndex, mscVrIpRipImportRowStatusEntry=mscVrIpRipImportRowStatusEntry, mscVrIpOspfOperEntry=mscVrIpOspfOperEntry, mscVrIpUdpRowStatusTable=mscVrIpUdpRowStatusTable, mscVrIpProvEntry=mscVrIpProvEntry, mscVrIpTcpComponentName=mscVrIpTcpComponentName, mscVrIpOspfRowStatus=mscVrIpOspfRowStatus, mscVrIpOspfRowStatusTable=mscVrIpOspfRowStatusTable, mscVrIpOspfAreaLsaCount=mscVrIpOspfAreaLsaCount, mscVrIpEgpImportComponentName=mscVrIpEgpImportComponentName, mscVrPpIpPortNsIncomingFilter=mscVrPpIpPortNsIncomingFilter, mscVrIpRipImportNetRowStatus=mscVrIpRipImportNetRowStatus, mscVrPpIpPortLogicalIfOspfIfMulticastForwarding=mscVrPpIpPortLogicalIfOspfIfMulticastForwarding, mscVrPpIpPortNsRowStatusTable=mscVrPpIpPortNsRowStatusTable, mscVrIpOspfProvTable=mscVrIpOspfProvTable, mscVrIpOspfExportNetListRowStatusEntry=mscVrIpOspfExportNetListRowStatusEntry, mscVrIpTunnelMsepComponentName=mscVrIpTunnelMsepComponentName, mscVrIpCacheRowStatusEntry=mscVrIpCacheRowStatusEntry, mscVrIpCacheRowStatusTable=mscVrIpCacheRowStatusTable, mscVrIpEgpExportComponentName=mscVrIpEgpExportComponentName, mscVrIpEgpNbrInErrorMsgs=mscVrIpEgpNbrInErrorMsgs, mscVrIpRipRfc1058MetricUsage=mscVrIpRipRfc1058MetricUsage, mscVrIpRipQueryResponses=mscVrIpRipQueryResponses, mscVrIpNsIndex=mscVrIpNsIndex, mscVrIpEgpNbrStateDowns=mscVrIpEgpNbrStateDowns, mscVrIpOspfMulticastForward=mscVrIpOspfMulticastForward, mscVrIpOspfExportRowStatus=mscVrIpOspfExportRowStatus, mscVrIpRipImport=mscVrIpRipImport, mscVrPpIpPortLogicalIfOspfIfRetransInterval=mscVrPpIpPortLogicalIfOspfIfRetransInterval, mscVrIpNsApplyStorageType=mscVrIpNsApplyStorageType, mscVrIpTunnelSepStorageType=mscVrIpTunnelSepStorageType, mscVrPpIpPortLogicalIfOspfIfRtrDeadInterval=mscVrPpIpPortLogicalIfOspfIfRtrDeadInterval, mscVrIpArpDynHostHostAddressIndex=mscVrIpArpDynHostHostAddressIndex, mscVrPpIpPortLogicalIfOspfIfNbrExchangeStatus=mscVrPpIpPortLogicalIfOspfIfNbrExchangeStatus, mscVrIpDefaultTtl=mscVrIpDefaultTtl, mscVrIpOspfAggregateProvTable=mscVrIpOspfAggregateProvTable, mscVrIpOspfVirtNbrNbrRouterIdIndex=mscVrIpOspfVirtNbrNbrRouterIdIndex, mscVrIpIfOperEntry=mscVrIpIfOperEntry, mscVrIpNsApplyDirection=mscVrIpNsApplyDirection, mscVrIpTcpStatsTable=mscVrIpTcpStatsTable, mscVrIpCacheOperTable=mscVrIpCacheOperTable, mscVrPpIpPortAdminControlEntry=mscVrPpIpPortAdminControlEntry, mscVrIpOspfVirtIfHelloInterval=mscVrIpOspfVirtIfHelloInterval, mscVrIpOspfVirtNbrComponentName=mscVrIpOspfVirtNbrComponentName, mscVrIpOspfNbrState=mscVrIpOspfNbrState, mscVrPpIpPortStateTable=mscVrPpIpPortStateTable, mscVrPpIpPortLogicalIfOspfIfNbrPriority=mscVrPpIpPortLogicalIfOspfIfNbrPriority, mscVrIpOspfExportNetListProvTable=mscVrIpOspfExportNetListProvTable, mscVrIpOspfOperStatusEntry=mscVrIpOspfOperStatusEntry, mscVrPpIpPortLogicalIfRipIfStorageType=mscVrPpIpPortLogicalIfRipIfStorageType, mscVrIpOspfNbrOperTable=mscVrIpOspfNbrOperTable, mscVrIpBootpOperStatusEntry=mscVrIpBootpOperStatusEntry, mscVrIpTunnelMsepIndex=mscVrIpTunnelMsepIndex, mscVrIpTcpRToMax=mscVrIpTcpRToMax, mscVrIpEgpNbrProvEntry=mscVrIpEgpNbrProvEntry, mscVrPpIpPortProvEntry=mscVrPpIpPortProvEntry, mscVrPpIpPortLogicalIfRipIfIfTriggeredUpdates=mscVrPpIpPortLogicalIfRipIfIfTriggeredUpdates, mscVrIpIfStorageType=mscVrIpIfStorageType, mscVrIpRipImportNeighbor=mscVrIpRipImportNeighbor, mscVrIpOspfVirtNbrOptions=mscVrIpOspfVirtNbrOptions, mscVrPpIpPortSendRedirect=mscVrPpIpPortSendRedirect, mscVrIpRipImportNetIndex=mscVrIpRipImportNetIndex, mscVrIpArpStorageType=mscVrIpArpStorageType, mscVrIpBootpStateTable=mscVrIpBootpStateTable, mscVrIpOspfStateTable=mscVrIpOspfStateTable, mscVrIpOspfStubMetricType=mscVrIpOspfStubMetricType, mscVrIpRipRedistributeIbgp=mscVrIpRipRedistributeIbgp, mscVrIpRipRowStatus=mscVrIpRipRowStatus, mscVrIpOspfNbrRowStatus=mscVrIpOspfNbrRowStatus, mscVrPpIpPortOperTable=mscVrPpIpPortOperTable, mscVrIpOutNoRoutes=mscVrIpOutNoRoutes, mscVrIpOspfExportAdvertiseStatus=mscVrIpOspfExportAdvertiseStatus, mscVrIpOspfStubAreaIdIndex=mscVrIpOspfStubAreaIdIndex, mscVrIpFwdOperEntry=mscVrIpFwdOperEntry, mscVrIpRipComponentName=mscVrIpRipComponentName, mscVrPpIpPortLogicalIfAddressIndex=mscVrPpIpPortLogicalIfAddressIndex, mscVrIpBootpOperStatusTable=mscVrIpBootpOperStatusTable, mscVrIpOspfExportComponentName=mscVrIpOspfExportComponentName, mscVrIpOspfVirtIfState=mscVrIpOspfVirtIfState, mscVrIpForwarding=mscVrIpForwarding, mscVrIpRipImportUsageFlag=mscVrIpRipImportUsageFlag, mscVrPpIpPortNsRowStatusEntry=mscVrPpIpPortNsRowStatusEntry, mscVrIpNsLocalOutFilter=mscVrIpNsLocalOutFilter, mscVrIpEgpNbrInErrors=mscVrIpEgpNbrInErrors, mscVrIpOspfHostStorageType=mscVrIpOspfHostStorageType, mscVrIpArpDynHostPhysAddress=mscVrIpArpDynHostPhysAddress, mscVrIpEgpSnmpAdminStatus=mscVrIpEgpSnmpAdminStatus, mscVrPpIpPortBootpPInRequestErrors=mscVrPpIpPortBootpPInRequestErrors, mscVrIpIcmpOutSrcQuenchs=mscVrIpIcmpOutSrcQuenchs, mscVrIpEgpExportRowStatusEntry=mscVrIpEgpExportRowStatusEntry, mscVrPpIpPortLogicalIfOspfIfNbrEvents=mscVrPpIpPortLogicalIfOspfIfNbrEvents, mscVrIpEgpIndex=mscVrIpEgpIndex, mscVrIpStaticUsageState=mscVrIpStaticUsageState, mscVrIpTcpStatsEntry=mscVrIpTcpStatsEntry, mscVrIpEgpNbrOperTable=mscVrIpEgpNbrOperTable, mscVrIpTcpTcpEntryRemoteAddressIndex=mscVrIpTcpTcpEntryRemoteAddressIndex, mscVrIpEgpExportProvTable=mscVrIpEgpExportProvTable, mscVrIpEgpExportRowStatusTable=mscVrIpEgpExportRowStatusTable, mscVrIpTunnelMsep=mscVrIpTunnelMsep, mscVrIpOspfAreaAreaLsaCksumSum=mscVrIpOspfAreaAreaLsaCksumSum, mscVrIpTunnelMsepIfEntryEntry=mscVrIpTunnelMsepIfEntryEntry, ipGroupCA02A=ipGroupCA02A, mscVrPpIpPortLogicalIfRipIfProvEntry=mscVrPpIpPortLogicalIfRipIfProvEntry, mscVrIpEgpImportNetProvTable=mscVrIpEgpImportNetProvTable, mscVrIpOspfExtLsdbOperEntry=mscVrIpOspfExtLsdbOperEntry, mscVrIpNsApplyIpMask1=mscVrIpNsApplyIpMask1, mscVrIpRelayBCRowStatusTable=mscVrIpRelayBCRowStatusTable, mscVrIpArpProvTable=mscVrIpArpProvTable, mscVrPpIpPortLogicalIfOspfIfNbr=mscVrPpIpPortLogicalIfOspfIfNbr, mscVrIpTunnelIndex=mscVrIpTunnelIndex, mscVrIpEgpNbrRowStatusTable=mscVrIpEgpNbrRowStatusTable, mscVrIpBootpPpEOperEntry=mscVrIpBootpPpEOperEntry, mscVrIpTunnelSepIfAdminStatus=mscVrIpTunnelSepIfAdminStatus, mscVrIpIcmpOutRtrAdvs=mscVrIpIcmpOutRtrAdvs, mscVrIpStaticRouteRowStatus=mscVrIpStaticRouteRowStatus, mscVrPpIpPortLogicalIfOspfIf=mscVrPpIpPortLogicalIfOspfIf, mscVrPpIpPortLogicalIfRipIfNetworkRouteStatus=mscVrPpIpPortLogicalIfRipIfNetworkRouteStatus, mscVrPpIpPortStateEntry=mscVrPpIpPortStateEntry, mscVrIpEgpNbrProvTable=mscVrIpEgpNbrProvTable, mscVrIpRipProvEntry=mscVrIpRipProvEntry, mscVrIpBootpUsageState=mscVrIpBootpUsageState, mscVrIpEgpAsId=mscVrIpEgpAsId, mscVrIpEgpOutErrors=mscVrIpEgpOutErrors, mscVrIpTcpMaxConn=mscVrIpTcpMaxConn, mscVrIpEgpImportNbrAsId=mscVrIpEgpImportNbrAsId, mscVrIpTunnelMsepPathMtu=mscVrIpTunnelMsepPathMtu, mscVrPpIpPortLogicalIfOspfIfStorageType=mscVrPpIpPortLogicalIfOspfIfStorageType, mscVrPpIpPortBootpPStateTable=mscVrPpIpPortBootpPStateTable, mscVrIpOspfLsdbComponentName=mscVrIpOspfLsdbComponentName, mscVrIpOspfNbrPermanence=mscVrIpOspfNbrPermanence, mscVrIpOspfVirtIfRowStatusEntry=mscVrIpOspfVirtIfRowStatusEntry, mscVrIpArpIndex=mscVrIpArpIndex, mscVrPpIpPortUsageState=mscVrPpIpPortUsageState, mscVrIpOspfExportMetric=mscVrIpOspfExportMetric, mscVrIpTcpPassiveOpens=mscVrIpTcpPassiveOpens, mscVrPpIpPortNsRowStatus=mscVrPpIpPortNsRowStatus, mscVrPpIpPortBootpPAddrRowStatus=mscVrPpIpPortBootpPAddrRowStatus, mscVrIpOspfAreaStorageType=mscVrIpOspfAreaStorageType, mscVrIpStateTable=mscVrIpStateTable, mscVrIpFwdRowStatusTable=mscVrIpFwdRowStatusTable, mscVrPpIpPortAdminState=mscVrPpIpPortAdminState, mscVrIpEgpExportNetStorageType=mscVrIpEgpExportNetStorageType, mscVrIpOspfVirtIfTransitDelay=mscVrIpOspfVirtIfTransitDelay, mscVrIpRipExportNetComponentName=mscVrIpRipExportNetComponentName, mscVrIpEgpNbrMode=mscVrIpEgpNbrMode, mscVrIpEgpNbrOutErrorMsgs=mscVrIpEgpNbrOutErrorMsgs, mscVrPpIpPortLogicalIfOspfIfTOSTosMetric=mscVrPpIpPortLogicalIfOspfIfTOSTosMetric, mscVrIpNsRowStatus=mscVrIpNsRowStatus, mscVrIpBootpComponentName=mscVrIpBootpComponentName, mscVrIpFwdRowStatus=mscVrIpFwdRowStatus, mscVrPpIpPortLogicalIfRipIfIfBadRouteRcv=mscVrPpIpPortLogicalIfRipIfIfBadRouteRcv, mscVrIpOspfVirtIfStorageType=mscVrIpOspfVirtIfStorageType, mscVrIpOspfVirtNbr=mscVrIpOspfVirtNbr, mscVrIpAdminState=mscVrIpAdminState, mscVrIpOspfLsdbRowStatusEntry=mscVrIpOspfLsdbRowStatusEntry, mscVrIpOspfExtLsdbStorageType=mscVrIpOspfExtLsdbStorageType, mscVrIpOspfExportExtLsaMetricType=mscVrIpOspfExportExtLsaMetricType, mscVrIpStaticRouteComponentName=mscVrIpStaticRouteComponentName, mscVrIpRelayBC=mscVrIpRelayBC, mscVrPpIpPortLogicalIfOspfIfRtrPriority=mscVrPpIpPortLogicalIfOspfIfRtrPriority, mscVrIpTunnelUsageState=mscVrIpTunnelUsageState, mscVrIpEgpExportProtocol=mscVrIpEgpExportProtocol, mscVrIpRipAdminControlTable=mscVrIpRipAdminControlTable, mscVrIpRipOperStatusTable=mscVrIpRipOperStatusTable, mscVrIpRipUsageState=mscVrIpRipUsageState, mscVrIpRelayBCPortRelayBcUdpCount=mscVrIpRelayBCPortRelayBcUdpCount, mscVrIpRipImportProvEntry=mscVrIpRipImportProvEntry, mscVrPpIpPortRelayAddress=mscVrPpIpPortRelayAddress, mscVrIpIcmpInTimestamps=mscVrIpIcmpInTimestamps, mscVrIpRipRowStatusEntry=mscVrIpRipRowStatusEntry, mscVrIpIfHardwareAddress=mscVrIpIfHardwareAddress, mscVrIpOspfExtLsdbRouterIdIndex=mscVrIpOspfExtLsdbRouterIdIndex, mscVrIpEgpInErrors=mscVrIpEgpInErrors, mscVrPpIpPortLogicalIfOspfIfAuthKey=mscVrPpIpPortLogicalIfOspfIfAuthKey, mscVrIpTunnelSepOperEntry=mscVrIpTunnelSepOperEntry, mscVrIpTunnelSepIndex=mscVrIpTunnelSepIndex, mscVrIpTcpRToAlgorithm=mscVrIpTcpRToAlgorithm, mscVrIpIfInterfaceMask=mscVrIpIfInterfaceMask, mscVrPpIpPortLogicalIfRipIfMetric=mscVrPpIpPortLogicalIfRipIfMetric, mscVrIpFwdProtocol=mscVrIpFwdProtocol, mscVrPpIpPortBootpPStateEntry=mscVrPpIpPortBootpPStateEntry, mscVrIpIcmpProvTable=mscVrIpIcmpProvTable, mscVrPpIpPortLogicalIfRipIfPoisonReverseFlag=mscVrPpIpPortLogicalIfRipIfPoisonReverseFlag, mscVrIpNsProvTable=mscVrIpNsProvTable, mscVrIpEgpExportOspfTag=mscVrIpEgpExportOspfTag, mscVrIpUdpNoPorts=mscVrIpUdpNoPorts, mscVrIpIcmpSendHostUnreachable=mscVrIpIcmpSendHostUnreachable, mscVrPpIpPortBootpPAdminControlTable=mscVrPpIpPortBootpPAdminControlTable, mscVrIpOperationalState=mscVrIpOperationalState, mscVrPpIpPortLogicalIfRipIfIfConfReceive=mscVrPpIpPortLogicalIfRipIfIfConfReceive, mscVrIpBootpOperationalState=mscVrIpBootpOperationalState, mscVrIpRip=mscVrIpRip, mscVrPpIpPortLogicalIfOspfIfTOS=mscVrPpIpPortLogicalIfOspfIfTOS, mscVrIpIfRowStatusTable=mscVrIpIfRowStatusTable, mscVrIpOspfAreaAsBdrRtrCount=mscVrIpOspfAreaAsBdrRtrCount, mscVrPpIpPortLogicalIfOspfIfAreaId=mscVrPpIpPortLogicalIfOspfIfAreaId, mscVrIpUdpRowStatusEntry=mscVrIpUdpRowStatusEntry, mscVrIpTunnelAdminState=mscVrIpTunnelAdminState, mscVrPpIpPortOperationalState=mscVrPpIpPortOperationalState, mscVrIpOspfExtLsdbAdvertisement=mscVrIpOspfExtLsdbAdvertisement, mscVrIpEgpNbrPollInterval=mscVrIpEgpNbrPollInterval, mscVrPpIpPortLogicalIfRipIfIfBadPacketRcv=mscVrPpIpPortLogicalIfRipIfIfBadPacketRcv, mscVrIpTunnelOperationalState=mscVrIpTunnelOperationalState, mscVrIpStaticDiscardRowStatusEntry=mscVrIpStaticDiscardRowStatusEntry, mscVrIpIcmpOutAddrMasks=mscVrIpIcmpOutAddrMasks, mscVrIpRdbRowStatusTable=mscVrIpRdbRowStatusTable, mscVrIpEgpNbrStorageType=mscVrIpEgpNbrStorageType, mscVrIpForwDatagrams=mscVrIpForwDatagrams, mscVrIpOspfNbrRowStatusTable=mscVrIpOspfNbrRowStatusTable, mscVrIpArpAutoRefresh=mscVrIpArpAutoRefresh, mscVrIpTcpRowStatus=mscVrIpTcpRowStatus, mscVrIpEgpNbrEventTrigger=mscVrIpEgpNbrEventTrigger, mscVrIpOspfVirtNbrLsRetransQlen=mscVrIpOspfVirtNbrLsRetransQlen, mscVrPpIpPortBootpPInReplies=mscVrPpIpPortBootpPInReplies, mscVrPpIpPortOperEncap=mscVrPpIpPortOperEncap, mscVrIpOspfArea=mscVrIpOspfArea, mscVrIpOspfHostComponentName=mscVrIpOspfHostComponentName, mscVrIpOspfExportNetListRowStatusTable=mscVrIpOspfExportNetListRowStatusTable, mscVrIpOspfLsdbAreaIdIndex=mscVrIpOspfLsdbAreaIdIndex, mscVrIpArpDynHostComponentName=mscVrIpArpDynHostComponentName, mscVrIpIcmpStatsTable=mscVrIpIcmpStatsTable, mscVrPpIpPortIndex=mscVrPpIpPortIndex, mscVrPpIpPortLogicalIfRipIfNbrStorageType=mscVrPpIpPortLogicalIfRipIfNbrStorageType, mscVrIpOspfNbrExchangeStatus=mscVrIpOspfNbrExchangeStatus, mscVrIpRipExportNetRowStatusEntry=mscVrIpRipExportNetRowStatusEntry, mscVrPpIpPortLogicalIfRipIf=mscVrPpIpPortLogicalIfRipIf, mscVrIpStaticStorageType=mscVrIpStaticStorageType, mscVrIpFwdGatewayIndex=mscVrIpFwdGatewayIndex, mscVrIpEgpImportUsageFlag=mscVrIpEgpImportUsageFlag, mscVrIpRipExportNetProvTable=mscVrIpRipExportNetProvTable, mscVrIpRelayBCIndex=mscVrIpRelayBCIndex)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-IpMIB", mscVrPpIpPortLogicalIfRipIfIfConfSend=mscVrPpIpPortLogicalIfRipIfIfConfSend, mscVrIpOspfExternLsaChecksumSum=mscVrIpOspfExternLsaChecksumSum, mscVrIpOspfStorageType=mscVrIpOspfStorageType, mscVrIpFwdOperTable=mscVrIpFwdOperTable, mscVrPpIpPortBootpPStatsEntry=mscVrPpIpPortBootpPStatsEntry, mscVrIpOspfLsdbOperTable=mscVrIpOspfLsdbOperTable, mscVrIpIcmpOutEchos=mscVrIpIcmpOutEchos, mscVrIpRdbPreference=mscVrIpRdbPreference, mscVrIpIcmpInEchoReps=mscVrIpIcmpInEchoReps, mscVrPpIpPortMulticastStatus=mscVrPpIpPortMulticastStatus, mscVrIpEgpExportNetProvEntry=mscVrIpEgpExportNetProvEntry, mscVrIpOspfVirtIfRetransInterval=mscVrIpOspfVirtIfRetransInterval, mscVrIpFwdType=mscVrIpFwdType, mscVrIpRelayBCComponentName=mscVrIpRelayBCComponentName, mscVrIpIcmpOutTimeExcds=mscVrIpIcmpOutTimeExcds, mscVrIpTunnelMsepDstEntry=mscVrIpTunnelMsepDstEntry, mscVrIpOspfRxNewLsas=mscVrIpOspfRxNewLsas, mscVrIpArpHostOperMaxTxUnit=mscVrIpArpHostOperMaxTxUnit, mscVrIpStatsEntry=mscVrIpStatsEntry, mscVrIpArpHostEncap=mscVrIpArpHostEncap, mscVrIpOspfExtLsdbAge=mscVrIpOspfExtLsdbAge, mscVrPpIpPortLogicalIfRipIfNbr=mscVrPpIpPortLogicalIfRipIfNbr, mscVrIpOspfLsdbRowStatus=mscVrIpOspfLsdbRowStatus, mscVrIpTcpEstabResets=mscVrIpTcpEstabResets, mscVrIpOspfNbrAddressIndex=mscVrIpOspfNbrAddressIndex, mscVrIpRipExport=mscVrIpRipExport, mscVrIpOspfLsdb=mscVrIpOspfLsdb, mscVrIpUdpListenEntryRowStatus=mscVrIpUdpListenEntryRowStatus, mscVrIpNsApplyIpAddress1=mscVrIpNsApplyIpAddress1, mscVrPpIpPortBootpPProvEntry=mscVrPpIpPortBootpPProvEntry, mscVrIpUdpOutDatagrams=mscVrIpUdpOutDatagrams, mscVrIpReasmTimeOut=mscVrIpReasmTimeOut, mscVrIpRdbRowStatus=mscVrIpRdbRowStatus, mscVrIpRelayBCRelayStatus=mscVrIpRelayBCRelayStatus, mscVrIpEgpExportNetRowStatusTable=mscVrIpEgpExportNetRowStatusTable, mscVrPpIpPortLogicalIfOspfIfRowStatusEntry=mscVrPpIpPortLogicalIfOspfIfRowStatusEntry, mscVrIpEgpNbrHelloInterval=mscVrIpEgpNbrHelloInterval, mscVrIpRipExportNetProvEntry=mscVrIpRipExportNetProvEntry, mscVrIpStaticDiscard=mscVrIpStaticDiscard, mscVrIpOspfVirtNbrState=mscVrIpOspfVirtNbrState, mscVrIpTcpStorageType=mscVrIpTcpStorageType, mscVrIpEgpExportStorageType=mscVrIpEgpExportStorageType, mscVrIpOspfNbrNbmaNbrStatus=mscVrIpOspfNbrNbmaNbrStatus, mscVrIpRelayBCRelayNdStatus=mscVrIpRelayBCRelayNdStatus, mscVrIpIcmpInDestUnreachs=mscVrIpIcmpInDestUnreachs, mscVrIpOspfOperStatusTable=mscVrIpOspfOperStatusTable, mscVrIpRipImportNetProvEntry=mscVrIpRipImportNetProvEntry, mscVrIpRelayBCPortRowStatus=mscVrIpRelayBCPortRowStatus, mscVrIpEgpImportNet=mscVrIpEgpImportNet, mscVrIpNsApplyIpMask2=mscVrIpNsApplyIpMask2, mscVrIpTunnelMsepSourceAddress=mscVrIpTunnelMsepSourceAddress, mscVrIpOspfVirtIfProvTable=mscVrIpOspfVirtIfProvTable, mscVrIpStaticComponentName=mscVrIpStaticComponentName, mscVrPpIpPortRelayBcCount=mscVrPpIpPortRelayBcCount, mscVrIpOspfExtLsdbLsdbTypeIndex=mscVrIpOspfExtLsdbLsdbTypeIndex, mscVrIpOspfHostRowStatusTable=mscVrIpOspfHostRowStatusTable, mscVrIpOspfVirtIfAreaIdIndex=mscVrIpOspfVirtIfAreaIdIndex, mscVrPpIpPortLinkModel=mscVrPpIpPortLinkModel, mscVrIpEgpUsageState=mscVrIpEgpUsageState, mscVrIpCacheLookupMisses=mscVrIpCacheLookupMisses, mscVrIpTunnelMsepProvTable=mscVrIpTunnelMsepProvTable, mscVrPpIpPortLogicalIfOspfIfIfType=mscVrPpIpPortLogicalIfOspfIfIfType, mscVrIpBootpPpEInRequests=mscVrIpBootpPpEInRequests, mscVrIpIfStatus=mscVrIpIfStatus, mscVrIpEgpNbrStateUps=mscVrIpEgpNbrStateUps, mscVrIpOspfAreaOperEntry=mscVrIpOspfAreaOperEntry, mscVrIpStaticRouteProvEntry=mscVrIpStaticRouteProvEntry, mscVrIpArpDynHostRowStatus=mscVrIpArpDynHostRowStatus, mscVrIpIcmpRowStatusEntry=mscVrIpIcmpRowStatusEntry, mscVrIpOspfLsdbOperEntry=mscVrIpOspfLsdbOperEntry, mscVrIpBootpPpEStatsEntry=mscVrIpBootpPpEStatsEntry, mscVrIpOspfAggregateAggregateMaskIndex=mscVrIpOspfAggregateAggregateMaskIndex, mscVrPpIpPortLogicalIfOspfIfNbrOperEntry=mscVrPpIpPortLogicalIfOspfIfNbrOperEntry, mscVrPpIpPortLogicalIfRipIfNbrRowStatusTable=mscVrPpIpPortLogicalIfRipIfNbrRowStatusTable, mscVrIpOspfVirtIfRowStatusTable=mscVrIpOspfVirtIfRowStatusTable, mscVrIpOspfExportProvTable=mscVrIpOspfExportProvTable, mscVrPpIpPortLogicalIfOspfIfHelloInterval=mscVrPpIpPortLogicalIfOspfIfHelloInterval, mscVrIpArpDynHostType=mscVrIpArpDynHostType, mscVrIpIcmpRowStatusTable=mscVrIpIcmpRowStatusTable, mscVrIpRelayBCPortOperEntry=mscVrIpRelayBCPortOperEntry, mscVrIpTunnelMsepEncapType=mscVrIpTunnelMsepEncapType, mscVrIpEgpExportNetRowStatus=mscVrIpEgpExportNetRowStatus, mscVrIpCache=mscVrIpCache, mscVrIpNsStorageType=mscVrIpNsStorageType, mscVrIpOspfSnmpAdminStatus=mscVrIpOspfSnmpAdminStatus, mscVrIpOspfAreaRowStatus=mscVrIpOspfAreaRowStatus, mscVrPpIpPortLogicalIfRipIfNbrComponentName=mscVrPpIpPortLogicalIfRipIfNbrComponentName, mscVrPpIpPortSresProvTable=mscVrPpIpPortSresProvTable, mscVrIpOspfHostAreaId=mscVrIpOspfHostAreaId, mscVrIpOspfExportNetListRowStatus=mscVrIpOspfExportNetListRowStatus, mscVrPpIpPortLogicalIfOspfIfIndex=mscVrPpIpPortLogicalIfOspfIfIndex, mscVrPpIpPortLogicalIfOspfIfProvTable=mscVrPpIpPortLogicalIfOspfIfProvTable, mscVrPpIpPortBootpP=mscVrPpIpPortBootpP, mscVrPpIpPortBootpPRowStatusEntry=mscVrPpIpPortBootpPRowStatusEntry, mscVrIpRdbRowStatusEntry=mscVrIpRdbRowStatusEntry, mscVrIpNsApply=mscVrIpNsApply, mscVrIpRelayBCPortRowStatusTable=mscVrIpRelayBCPortRowStatusTable, mscVrPpIpPortLogicalIfRipIfStatTable=mscVrPpIpPortLogicalIfRipIfStatTable, mscVrIpTcpInSegs=mscVrIpTcpInSegs, mscVrIpBootpPpERowStatusEntry=mscVrIpBootpPpERowStatusEntry, mscVrIpBootpPpEOutReplies=mscVrIpBootpPpEOutReplies, mscVrIpOspfUsageState=mscVrIpOspfUsageState, mscVrIpTunnelSepRowStatusEntry=mscVrIpTunnelSepRowStatusEntry, mscVrPpIpPortLogicalIfOspfIfTOSComponentName=mscVrPpIpPortLogicalIfOspfIfTOSComponentName, mscVrIpStateEntry=mscVrIpStateEntry, mscVrPpIpPortStorageType=mscVrPpIpPortStorageType, mscVrIpUdpListenEntryLocalPortIndex=mscVrIpUdpListenEntryLocalPortIndex, mscVrPpIpPortLogicalIfRipIfProvTable=mscVrPpIpPortLogicalIfRipIfProvTable, mscVrPpIpPortLogicalIfProvTable=mscVrPpIpPortLogicalIfProvTable, mscVrPpIpPortBootpPAddrEntry=mscVrPpIpPortBootpPAddrEntry, mscVrIpStaticRouteNhComponentName=mscVrIpStaticRouteNhComponentName, ipGroupCA=ipGroupCA, mscVrIpOspfRouterId=mscVrIpOspfRouterId, mscVrIpRipStorageType=mscVrIpRipStorageType, mscVrPpIpPortBootpPSnmpAdminStatus=mscVrPpIpPortBootpPSnmpAdminStatus, mscVrIpStaticRouteDestAddressIndex=mscVrIpStaticRouteDestAddressIndex, mscVrIpRipImportNetRowStatusEntry=mscVrIpRipImportNetRowStatusEntry, mscVrIpEgpImportImportMetric=mscVrIpEgpImportImportMetric, mscVrIpTcpRowStatusEntry=mscVrIpTcpRowStatusEntry, mscVrIpBootpPpEStatsTable=mscVrIpBootpPpEStatsTable, mscVrIpOspfStubProvTable=mscVrIpOspfStubProvTable, mscVrIpOspfVirtIfOperEntry=mscVrIpOspfVirtIfOperEntry, mscVrIpOspfExportRowStatusEntry=mscVrIpOspfExportRowStatusEntry, mscVrIpFragFails=mscVrIpFragFails, mscVrIpArpDynHostIfIndex=mscVrIpArpDynHostIfIndex, mscVrIpCtsIndex=mscVrIpCtsIndex, mscVrPpIpPortLogicalIfOspfIfNbrOperTable=mscVrPpIpPortLogicalIfOspfIfNbrOperTable, mscVrIpUdpListenEntryRowStatusTable=mscVrIpUdpListenEntryRowStatusTable, mscVrIpRipImportIndex=mscVrIpRipImportIndex, mscVrIpIfRowStatus=mscVrIpIfRowStatus, mscVrIpRipOperTable=mscVrIpRipOperTable, mscVrIpUdpListenEntryRowStatusEntry=mscVrIpUdpListenEntryRowStatusEntry, mscVrIpOspfNbrComponentName=mscVrIpOspfNbrComponentName, mscVrIpCacheOperEntry=mscVrIpCacheOperEntry, mscVrIpStaticRouteNhStorageType=mscVrIpStaticRouteNhStorageType, mscVrIpBootpPpEInRequestErrors=mscVrIpBootpPpEInRequestErrors, mscVrIpIcmpInSrcQuenchs=mscVrIpIcmpInSrcQuenchs, mscVrIpBootpHopDiscardThreshold=mscVrIpBootpHopDiscardThreshold, mscVrIpBootpPpEComponentName=mscVrIpBootpPpEComponentName, mscVrIpRipExportProtocol=mscVrIpRipExportProtocol, mscVrIpBootpPpERowStatus=mscVrIpBootpPpERowStatus, mscVrIpIcmp=mscVrIpIcmp, mscVrPpIpPortLogicalIfRipIfNbrIndex=mscVrPpIpPortLogicalIfRipIfNbrIndex, mscVrIpArpDynHostOperTable=mscVrIpArpDynHostOperTable, mscVrIpRelayBCPort=mscVrIpRelayBCPort, mscVrIpRipExportEgpAsId=mscVrIpRipExportEgpAsId, mscVrIpBootpPpEInReplyErrors=mscVrIpBootpPpEInReplyErrors, mscVrIpRipIndex=mscVrIpRipIndex, mscVrIpOspfExportRowStatusTable=mscVrIpOspfExportRowStatusTable, mscVrIpEgpImportIndex=mscVrIpEgpImportIndex, mscVrIpTunnelStorageType=mscVrIpTunnelStorageType, mscVrPpIpPortLogicalIfNetMask=mscVrPpIpPortLogicalIfNetMask, mscVrIpEgpExportExportMetric=mscVrIpEgpExportExportMetric, mscVrIpIcmpInAddrMasks=mscVrIpIcmpInAddrMasks, ipMIB=ipMIB, mscVrIpBootpPpE=mscVrIpBootpPpE, mscVrIpEgpAdminControlTable=mscVrIpEgpAdminControlTable, mscVrIpRdb=mscVrIpRdb, mscVrIpOspfAreaOperTable=mscVrIpOspfAreaOperTable, mscVrIpOspfHostMetric=mscVrIpOspfHostMetric, mscVrPpIpPortBootpPOperationalState=mscVrPpIpPortBootpPOperationalState, mscVrIpAdminControlTable=mscVrIpAdminControlTable, mscVrIpEgpImportNetRowStatus=mscVrIpEgpImportNetRowStatus, mscVrPpIpPortLogicalIfOspfIfSnmpAdminStatus=mscVrPpIpPortLogicalIfOspfIfSnmpAdminStatus, mscVrIpRipProvTable=mscVrIpRipProvTable, mscVrIpRipRowStatusTable=mscVrIpRipRowStatusTable, mscVrIpOspfStub=mscVrIpOspfStub, mscVrIpIcmpStorageType=mscVrIpIcmpStorageType, mscVrPpIpPortRelayBcOperTable=mscVrPpIpPortRelayBcOperTable, mscVrIpStatic=mscVrIpStatic, mscVrIpReasmFails=mscVrIpReasmFails, mscVrPpIpPortBootpPOutReplies=mscVrPpIpPortBootpPOutReplies, mscVrIpIcmpOutRedirects=mscVrIpIcmpOutRedirects, mscVrIpRipExportProvEntry=mscVrIpRipExportProvEntry, mscVrPpIpPortLogicalIfOspfIfNbrPermanance=mscVrPpIpPortLogicalIfOspfIfNbrPermanance, mscVrIpTcpTcpEntryRowStatusEntry=mscVrIpTcpTcpEntryRowStatusEntry, mscVrIpRipImportProvTable=mscVrIpRipImportProvTable, mscVrIpTcpTcpEntryStorageType=mscVrIpTcpTcpEntryStorageType, mscVrIpOspfAreaSpfRuns=mscVrIpOspfAreaSpfRuns, mscVrIpIcmpOutTimestamps=mscVrIpIcmpOutTimestamps, mscVrPpIpPortLogicalIfOspfIfOperTable=mscVrPpIpPortLogicalIfOspfIfOperTable, mscVrPpIpPortLogicalIfBroadcastAddress=mscVrPpIpPortLogicalIfBroadcastAddress, mscVrIpOspfHostProvEntry=mscVrIpOspfHostProvEntry, mscVrIpTcpTcpEntryOperEntry=mscVrIpTcpTcpEntryOperEntry, mscVrIpOspfVirtIfProvEntry=mscVrIpOspfVirtIfProvEntry, mscVrPpIpPortLogicalIfOspfIfEvents=mscVrPpIpPortLogicalIfOspfIfEvents, mscVrPpIpPortBootpPStorageType=mscVrPpIpPortBootpPStorageType, mscVrIpUdpInErrors=mscVrIpUdpInErrors, mscVrPpIpPortMaxTxUnit=mscVrPpIpPortMaxTxUnit, mscVrIpOspfVirtIfNbrRouterIdIndex=mscVrIpOspfVirtIfNbrRouterIdIndex, mscVrIpEgpStatsTable=mscVrIpEgpStatsTable, mscVrPpIpPortLogicalIfOspfIfNbrOptions=mscVrPpIpPortLogicalIfOspfIfNbrOptions, mscVrIpRipGenerateDiscardRoute=mscVrIpRipGenerateDiscardRoute, mscVrIpRipOperStatusEntry=mscVrIpRipOperStatusEntry, mscVrIpEgpNbrDefaultMetric=mscVrIpEgpNbrDefaultMetric, mscVrIpRelayBCOperTable=mscVrIpRelayBCOperTable, mscVrIpOspfNbrStorageType=mscVrIpOspfNbrStorageType, mscVrIpRipExportNetIndex=mscVrIpRipExportNetIndex, mscVrIpCacheStorageType=mscVrIpCacheStorageType, mscVrPpIpPortLogicalIfProvEntry=mscVrPpIpPortLogicalIfProvEntry, mscVrPpIpPortBootpPProvTable=mscVrPpIpPortBootpPProvTable, mscVrPpIpPortBootpPIndex=mscVrPpIpPortBootpPIndex, mscVrPpIpPortLogicalIfOspfIfMetricTable=mscVrPpIpPortLogicalIfOspfIfMetricTable, mscVrPpIpPortNsOutgoingFilter=mscVrPpIpPortNsOutgoingFilter, mscVrIpIfPPName=mscVrIpIfPPName, mscVrIpTunnelRowStatus=mscVrIpTunnelRowStatus, mscVrIpNsApplyIndex=mscVrIpNsApplyIndex, mscVrIpUsageState=mscVrIpUsageState, mscVrIpArpAutoRefreshTimeout=mscVrIpArpAutoRefreshTimeout, mscVrIpOspfNbrOperEntry=mscVrIpOspfNbrOperEntry, mscVrPpIpPortDirectedBroadcast=mscVrPpIpPortDirectedBroadcast, mscVrIpFwdMetric=mscVrIpFwdMetric, mscVrPpIpPortBootpPOutRequests=mscVrPpIpPortBootpPOutRequests, mscVrIpEgpProvEntry=mscVrIpEgpProvEntry, mscVrPpIpPortLogicalIfOspfIfPollInterval=mscVrPpIpPortLogicalIfOspfIfPollInterval, mscVrIpBootpStorageType=mscVrIpBootpStorageType, mscVrIpEgp=mscVrIpEgp, mscVrIpOspfNbrRtrId=mscVrIpOspfNbrRtrId, mscVrIpBootpProvEntry=mscVrIpBootpProvEntry, mscVrIpOspfAreaBdrRtrStatus=mscVrIpOspfAreaBdrRtrStatus, mscVrIpFwdStorageType=mscVrIpFwdStorageType, mscVrIpIcmpOutErrors=mscVrIpIcmpOutErrors, mscVrIpInDiscards=mscVrIpInDiscards, mscVrIpFragOks=mscVrIpFragOks, mscVrIpEgpStatsEntry=mscVrIpEgpStatsEntry, mscVrIpTunnelMsepRowStatusTable=mscVrIpTunnelMsepRowStatusTable, mscVrIpTunnelSepDestinationAddress=mscVrIpTunnelSepDestinationAddress, mscVrIpIfRowStatusEntry=mscVrIpIfRowStatusEntry, mscVrIpOspfVirtIfAuthKey=mscVrIpOspfVirtIfAuthKey, mscVrIpEgpStateTable=mscVrIpEgpStateTable, mscVrPpIpPortLogicalIfRipIfSnmpAdminStatus=mscVrPpIpPortLogicalIfRipIfSnmpAdminStatus, mscVrIpRoutingDiscards=mscVrIpRoutingDiscards, mscVrIpOspfAggregateLsdbTypeIndex=mscVrIpOspfAggregateLsdbTypeIndex, mscVrIpNsRowStatusEntry=mscVrIpNsRowStatusEntry, mscVrIpIcmpInErrors=mscVrIpIcmpInErrors, mscVrPpIpPortBootpPInReplyErrors=mscVrPpIpPortBootpPInReplyErrors, mscVrIpTcpRowStatusTable=mscVrIpTcpRowStatusTable, mscVrIpTcpInErrs=mscVrIpTcpInErrs, mscVrIpArpDynHost=mscVrIpArpDynHost, mscVrPpIpPortLogicalIfOspfIfProvEntry=mscVrPpIpPortLogicalIfOspfIfProvEntry, mscVrIpIcmpInTimeExcds=mscVrIpIcmpInTimeExcds, mscVrIpBootp=mscVrIpBootp, mscVrIpEgpExportNetIndex=mscVrIpEgpExportNetIndex, mscVrIpOspfExportStorageType=mscVrIpOspfExportStorageType, mscVrIpArpDynHostStorageType=mscVrIpArpDynHostStorageType, mscVrIpBootpRowStatus=mscVrIpBootpRowStatus, mscVrIpEgpRowStatusEntry=mscVrIpEgpRowStatusEntry, mscVrIpOspfStubProvEntry=mscVrIpOspfStubProvEntry, mscVrIpOspfStubRowStatusTable=mscVrIpOspfStubRowStatusTable, mscVrIpNsApplyRowStatusTable=mscVrIpNsApplyRowStatusTable, mscVrIpNsApplyProvisionedEntry=mscVrIpNsApplyProvisionedEntry, mscVrIpStaticIndex=mscVrIpStaticIndex, mscVrIpStatsTable=mscVrIpStatsTable, mscVrIpOspfAggregateComponentName=mscVrIpOspfAggregateComponentName)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-IpMIB", mscVrIpArpHostTunnelDestinationAddress=mscVrIpArpHostTunnelDestinationAddress, mscVrIpRipOperationalState=mscVrIpRipOperationalState, mscVrIpArpHostOperEntry=mscVrIpArpHostOperEntry, mscVrIpIcmpOutParmProbs=mscVrIpIcmpOutParmProbs, mscVrIpOspfVirtNbrOperEntry=mscVrIpOspfVirtNbrOperEntry, mscVrIpOspfExtLsdbOperTable=mscVrIpOspfExtLsdbOperTable, mscVrIpOutRequests=mscVrIpOutRequests, mscVrPpIpPortBootpPRowStatus=mscVrPpIpPortBootpPRowStatus, mscVrIpEgpNbr=mscVrIpEgpNbr, mscVrIpRipImportNetRowStatusTable=mscVrIpRipImportNetRowStatusTable, mscVrIpRowStatus=mscVrIpRowStatus, mscVrIpEgpExportOutAutonomousSystem=mscVrIpEgpExportOutAutonomousSystem, mscVrIpArpDynHostRowStatusTable=mscVrIpArpDynHostRowStatusTable, mscVrIpRipExportNetRowStatus=mscVrIpRipExportNetRowStatus, mscVrIpTunnelSep=mscVrIpTunnelSep, mscVrIpRipExportIndex=mscVrIpRipExportIndex, mscVrPpIpPortLogicalIfLinkDestinationAddress=mscVrPpIpPortLogicalIfLinkDestinationAddress, mscVrIpStaticRouteTypeOfServiceIndex=mscVrIpStaticRouteTypeOfServiceIndex, mscVrIpUdpListenEntryComponentName=mscVrIpUdpListenEntryComponentName, mscVrIpOspfVirtIfRowStatus=mscVrIpOspfVirtIfRowStatus, mscVrPpIpPortLogicalIfRipIfNbrRowStatus=mscVrPpIpPortLogicalIfRipIfNbrRowStatus, mscVrIpEgpExportNetProvTable=mscVrIpEgpExportNetProvTable, mscVrIpRdbGatewayIndex=mscVrIpRdbGatewayIndex, mscVrIpOspfAreaProvEntry=mscVrIpOspfAreaProvEntry, mscVrIpRipImportRowStatusTable=mscVrIpRipImportRowStatusTable, mscVrIpOspfOperTable=mscVrIpOspfOperTable, mscVrIpOspfAggregateAggregateNetIndex=mscVrIpOspfAggregateAggregateNetIndex, mscVrPpIpPortRowStatus=mscVrPpIpPortRowStatus, mscVrPpIpPortLogicalIfOspfIfTOSRowStatus=mscVrPpIpPortLogicalIfOspfIfTOSRowStatus, mscVrIpOspfVirtIf=mscVrIpOspfVirtIf, mscVrIpTunnelSepMpTable=mscVrIpTunnelSepMpTable, mscVrPpIpPortLogicalIfOspfIfTransitDelay=mscVrPpIpPortLogicalIfOspfIfTransitDelay, mscVrIpOspfVirtNbrStorageType=mscVrIpOspfVirtNbrStorageType, mscVrIpUdpListenEntryStorageType=mscVrIpUdpListenEntryStorageType, mscVrIpTunnelSepLinkToProtocolPort=mscVrIpTunnelSepLinkToProtocolPort, mscVrIpEgpInErrorMsgs=mscVrIpEgpInErrorMsgs, mscVrIpRelayBCProvEntry=mscVrIpRelayBCProvEntry, mscVrIpArpDynHostTunnelDestinationAddress=mscVrIpArpDynHostTunnelDestinationAddress, mscVrPpIpPortMediaType=mscVrPpIpPortMediaType, mscVrIpEgpNbrOutErrors=mscVrIpEgpNbrOutErrors)
