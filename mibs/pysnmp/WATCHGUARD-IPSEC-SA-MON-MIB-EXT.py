#
# PySNMP MIB module WATCHGUARD-IPSEC-SA-MON-MIB-EXT (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WATCHGUARD-IPSEC-SA-MON-MIB-EXT
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
IpsecDoiIpcompTransform, IpsecDoiAuthAlgorithm, IpsecDoiAhTransform, IpsecDoiIdentType, IpsecDoiEspTransform, IpsecDoiEncapsulationMode, IpsecDoiSecProtocolId = mibBuilder.importSymbols("IPSEC-ISAKMP-IKE-DOI-TC", "IpsecDoiIpcompTransform", "IpsecDoiAuthAlgorithm", "IpsecDoiAhTransform", "IpsecDoiIdentType", "IpsecDoiEspTransform", "IpsecDoiEncapsulationMode", "IpsecDoiSecProtocolId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Counter32, Integer32, enterprises, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, Bits, MibIdentifier, Unsigned32, TimeTicks, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "Integer32", "enterprises", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "Bits", "MibIdentifier", "Unsigned32", "TimeTicks", "ObjectIdentity", "NotificationType")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
watchguard, = mibBuilder.importSymbols("WATCHGUARD-MIB", "watchguard")
wgIpsecSaMonModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3097, 3))
wgIpsecSaMonModule.setRevisions(('2007-01-25 12:00',))
if mibBuilder.loadTexts: wgIpsecSaMonModule.setLastUpdated('200701251200Z')
if mibBuilder.loadTexts: wgIpsecSaMonModule.setOrganization('WatchGuard Technologies, Inc.')
class IpsecSaCreatorIdent(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("static", 1), ("ike", 2), ("other", 3))

class IpsecIpv6Address(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:2x:2x:2x:2x:2x:1d.1d.1d.1d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

wgIpsecSaMonitorMIB = ObjectIdentity((1, 3, 6, 1, 4, 1, 3097, 3, 1))
if mibBuilder.loadTexts: wgIpsecSaMonitorMIB.setStatus('current')
wgSaTables = ObjectIdentity((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1))
if mibBuilder.loadTexts: wgSaTables.setStatus('current')
wgSaStatistics = ObjectIdentity((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2))
if mibBuilder.loadTexts: wgSaStatistics.setStatus('current')
wgSaErrors = ObjectIdentity((1, 3, 6, 1, 4, 1, 3097, 3, 1, 3))
if mibBuilder.loadTexts: wgSaErrors.setStatus('current')
wgIpsecSaEspInTable = MibTable((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1), )
if mibBuilder.loadTexts: wgIpsecSaEspInTable.setStatus('current')
wgIpsecSaEspInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1), ).setIndexNames((0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaEspInAddress"), (0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaEspInSpi"))
if mibBuilder.loadTexts: wgIpsecSaEspInEntry.setStatus('current')
wgIpsecSaEspInAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInAddress.setStatus('current')
wgIpsecSaEspInSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInSpi.setStatus('current')
wgIpsecSaEspInDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInDestId.setStatus('current')
wgIpsecSaEspInDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInDestIdType.setStatus('current')
wgIpsecSaEspInSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInSourceId.setStatus('current')
wgIpsecSaEspInSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInSourceIdType.setStatus('current')
wgIpsecSaEspInProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInProtocol.setStatus('current')
wgIpsecSaEspInDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInDestPort.setStatus('current')
wgIpsecSaEspInSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInSourcePort.setStatus('current')
wgIpsecSaEspInCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInCreator.setStatus('current')
wgIpsecSaEspInEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInEncapsulation.setStatus('current')
wgIpsecSaEspInEncAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 12), IpsecDoiEspTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInEncAlg.setStatus('current')
wgIpsecSaEspInEncKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65531))).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInEncKeyLength.setStatus('current')
wgIpsecSaEspInAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 14), IpsecDoiAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInAuthAlg.setStatus('current')
wgIpsecSaEspInLimitSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 15), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInLimitSeconds.setStatus('current')
wgIpsecSaEspInLimitKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 16), Integer32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInLimitKbytes.setStatus('current')
wgIpsecSaEspInAccSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 17), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInAccSeconds.setStatus('current')
wgIpsecSaEspInAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 18), Counter32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInAccKbytes.setStatus('current')
wgIpsecSaEspInUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 19), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInUserOctets.setStatus('current')
wgIpsecSaEspInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInPackets.setStatus('current')
wgIpsecSaEspInDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInDecryptErrors.setStatus('current')
wgIpsecSaEspInAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInAuthErrors.setStatus('current')
wgIpsecSaEspInReplayErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInReplayErrors.setStatus('current')
wgIpsecSaEspInPolicyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInPolicyErrors.setStatus('current')
wgIpsecSaEspInPadErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInPadErrors.setStatus('current')
wgIpsecSaEspInOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspInOtherReceiveErrors.setStatus('current')
wgIpsecSaAhInTable = MibTable((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2), )
if mibBuilder.loadTexts: wgIpsecSaAhInTable.setStatus('current')
wgIpsecSaAhInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1), ).setIndexNames((0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaAhInAddress"), (0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaAhInSpi"))
if mibBuilder.loadTexts: wgIpsecSaAhInEntry.setStatus('current')
wgIpsecSaAhInAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInAddress.setStatus('current')
wgIpsecSaAhInSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInSpi.setStatus('current')
wgIpsecSaAhInDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInDestId.setStatus('current')
wgIpsecSaAhInDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInDestIdType.setStatus('current')
wgIpsecSaAhInSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInSourceId.setStatus('current')
wgIpsecSaAhInSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInSourceIdType.setStatus('current')
wgIpsecSaAhInProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInProtocol.setStatus('current')
wgIpsecSaAhInDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInDestPort.setStatus('current')
wgIpsecSaAhInSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInSourcePort.setStatus('current')
wgIpsecSaAhInCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInCreator.setStatus('current')
wgIpsecSaAhInEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInEncapsulation.setStatus('current')
wgIpsecSaAhInAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 12), IpsecDoiAhTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInAuthAlg.setStatus('current')
wgIpsecSaAhInLimitSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 13), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInLimitSeconds.setStatus('current')
wgIpsecSaAhInLimitKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 14), Integer32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInLimitKbytes.setStatus('current')
wgIpsecSaAhInAccSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 15), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInAccSeconds.setStatus('current')
wgIpsecSaAhInAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 16), Counter32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInAccKbytes.setStatus('current')
wgIpsecSaAhInUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 17), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInUserOctets.setStatus('current')
wgIpsecSaAhInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInPackets.setStatus('current')
wgIpsecSaAhInAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInAuthErrors.setStatus('current')
wgIpsecSaAhInReplayErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInReplayErrors.setStatus('current')
wgIpsecSaAhInPolicyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInPolicyErrors.setStatus('current')
wgIpsecSaAhInOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhInOtherReceiveErrors.setStatus('current')
wgIpsecSaIpcompInTable = MibTable((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3), )
if mibBuilder.loadTexts: wgIpsecSaIpcompInTable.setStatus('current')
wgIpsecSaIpcompInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1), ).setIndexNames((0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaIpcompInAddress"), (0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaIpcompInCpi"))
if mibBuilder.loadTexts: wgIpsecSaIpcompInEntry.setStatus('current')
wgIpsecSaIpcompInAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInAddress.setStatus('current')
wgIpsecSaIpcompInCpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 2), IpsecDoiIpcompTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInCpi.setStatus('current')
wgIpsecSaIpcompInDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInDestId.setStatus('current')
wgIpsecSaIpcompInDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInDestIdType.setStatus('current')
wgIpsecSaIpcompInSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInSourceId.setStatus('current')
wgIpsecSaIpcompInSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInSourceIdType.setStatus('current')
wgIpsecSaIpcompInProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInProtocol.setStatus('current')
wgIpsecSaIpcompInDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInDestPort.setStatus('current')
wgIpsecSaIpcompInSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInSourcePort.setStatus('current')
wgIpsecSaIpcompInCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInCreator.setStatus('current')
wgIpsecSaIpcompInEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInEncapsulation.setStatus('current')
wgIpsecSaIpcompInDecompAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 12), IpsecDoiIpcompTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInDecompAlg.setStatus('current')
wgIpsecSaIpcompInSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 13), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInSeconds.setStatus('current')
wgIpsecSaIpcompInUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 14), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInUserOctets.setStatus('current')
wgIpsecSaIpcompInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInPackets.setStatus('current')
wgIpsecSaIpcompInDecompErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInDecompErrors.setStatus('current')
wgIpsecSaIpcompInOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompInOtherReceiveErrors.setStatus('current')
wgIpsecSaEspOutTable = MibTable((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4), )
if mibBuilder.loadTexts: wgIpsecSaEspOutTable.setStatus('current')
wgIpsecSaEspOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1), ).setIndexNames((0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaEspOutAddress"), (0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaEspOutSpi"))
if mibBuilder.loadTexts: wgIpsecSaEspOutEntry.setStatus('current')
wgIpsecSaEspOutAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutAddress.setStatus('current')
wgIpsecSaEspOutSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutSpi.setStatus('current')
wgIpsecSaEspOutSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutSourceId.setStatus('current')
wgIpsecSaEspOutSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutSourceIdType.setStatus('current')
wgIpsecSaEspOutDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutDestId.setStatus('current')
wgIpsecSaEspOutDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutDestIdType.setStatus('current')
wgIpsecSaEspOutProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutProtocol.setStatus('current')
wgIpsecSaEspOutSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutSourcePort.setStatus('current')
wgIpsecSaEspOutDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutDestPort.setStatus('current')
wgIpsecSaEspOutCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutCreator.setStatus('current')
wgIpsecSaEspOutEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutEncapsulation.setStatus('current')
wgIpsecSaEspOutEncAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 12), IpsecDoiEspTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutEncAlg.setStatus('current')
wgIpsecSaEspOutEncKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65531))).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutEncKeyLength.setStatus('current')
wgIpsecSaEspOutAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 14), IpsecDoiAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutAuthAlg.setStatus('current')
wgIpsecSaEspOutLimitSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 15), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutLimitSeconds.setStatus('current')
wgIpsecSaEspOutLimitKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 16), Integer32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutLimitKbytes.setStatus('current')
wgIpsecSaEspOutAccSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 17), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutAccSeconds.setStatus('current')
wgIpsecSaEspOutAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 18), Counter32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutAccKbytes.setStatus('current')
wgIpsecSaEspOutUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 19), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutUserOctets.setStatus('current')
wgIpsecSaEspOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutPackets.setStatus('current')
wgIpsecSaEspOutSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaEspOutSendErrors.setStatus('current')
wgIpsecSaAhOutTable = MibTable((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5), )
if mibBuilder.loadTexts: wgIpsecSaAhOutTable.setStatus('current')
wgIpsecSaAhOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1), ).setIndexNames((0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaAhOutAddress"), (0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaAhOutSpi"))
if mibBuilder.loadTexts: wgIpsecSaAhOutEntry.setStatus('current')
wgIpsecSaAhOutAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutAddress.setStatus('current')
wgIpsecSaAhOutSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutSpi.setStatus('current')
wgIpsecSaAhOutSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutSourceId.setStatus('current')
wgIpsecSaAhOutSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutSourceIdType.setStatus('current')
wgIpsecSaAhOutDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutDestId.setStatus('current')
wgIpsecSaAhOutDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutDestIdType.setStatus('current')
wgIpsecSaAhOutProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutProtocol.setStatus('current')
wgIpsecSaAhOutSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutSourcePort.setStatus('current')
wgIpsecSaAhOutDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutDestPort.setStatus('current')
wgIpsecSaAhOutCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutCreator.setStatus('current')
wgIpsecSaAhOutEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutEncapsulation.setStatus('current')
wgIpsecSaAhOutAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 12), IpsecDoiAhTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutAuthAlg.setStatus('current')
wgIpsecSaAhOutLimitSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 13), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutLimitSeconds.setStatus('current')
wgIpsecSaAhOutLimitKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 14), Integer32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutLimitKbytes.setStatus('current')
wgIpsecSaAhOutAccSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 15), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutAccSeconds.setStatus('current')
wgIpsecSaAhOutAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 16), Counter32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutAccKbytes.setStatus('current')
wgIpsecSaAhOutUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 17), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutUserOctets.setStatus('current')
wgIpsecSaAhOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutPackets.setStatus('current')
wgIpsecSaAhOutSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaAhOutSendErrors.setStatus('current')
wgIpsecSaIpcompOutTable = MibTable((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6), )
if mibBuilder.loadTexts: wgIpsecSaIpcompOutTable.setStatus('current')
wgIpsecSaIpcompOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1), ).setIndexNames((0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaIpcompOutAddress"), (0, "WATCHGUARD-IPSEC-SA-MON-MIB-EXT", "wgIpsecSaIpcompOutCpi"))
if mibBuilder.loadTexts: wgIpsecSaIpcompOutEntry.setStatus('current')
wgIpsecSaIpcompOutAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutAddress.setStatus('current')
wgIpsecSaIpcompOutCpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 2), IpsecDoiIpcompTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutCpi.setStatus('current')
wgIpsecSaIpcompOutSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutSourceId.setStatus('current')
wgIpsecSaIpcompOutSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutSourceIdType.setStatus('current')
wgIpsecSaIpcompOutDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutDestId.setStatus('current')
wgIpsecSaIpcompOutDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutDestIdType.setStatus('current')
wgIpsecSaIpcompOutProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutProtocol.setStatus('current')
wgIpsecSaIpcompOutSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutSourcePort.setStatus('current')
wgIpsecSaIpcompOutDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutDestPort.setStatus('current')
wgIpsecSaIpcompOutCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutCreator.setStatus('current')
wgIpsecSaIpcompOutEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutEncapsulation.setStatus('current')
wgIpsecSaIpcompOutCompAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 12), IpsecDoiIpcompTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutCompAlg.setStatus('current')
wgIpsecSaIpcompOutSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 13), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutSeconds.setStatus('current')
wgIpsecSaIpcompOutUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 14), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutUserOctets.setStatus('current')
wgIpsecSaIpcompOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3097, 3, 1, 1, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSaIpcompOutPackets.setStatus('current')
wgIpsecEspCurrentInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecEspCurrentInboundSAs.setStatus('current')
wgIpsecEspTotalInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecEspTotalInboundSAs.setStatus('current')
wgIpsecEspCurrentOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecEspCurrentOutboundSAs.setStatus('current')
wgIpsecEspTotalOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecEspTotalOutboundSAs.setStatus('current')
wgIpsecAhCurrentInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecAhCurrentInboundSAs.setStatus('current')
wgIpsecAhTotalInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecAhTotalInboundSAs.setStatus('current')
wgIpsecAhCurrentOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecAhCurrentOutboundSAs.setStatus('current')
wgIpsecAhTotalOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecAhTotalOutboundSAs.setStatus('current')
wgIpsecIpcompCurrentInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecIpcompCurrentInboundSAs.setStatus('current')
wgIpsecIpcompTotalInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecIpcompTotalInboundSAs.setStatus('current')
wgIpsecIpcompCurrentOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecIpcompCurrentOutboundSAs.setStatus('current')
wgIpsecIpcompTotalOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecIpcompTotalOutboundSAs.setStatus('current')
wgIpsecDecryptionErrors = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecDecryptionErrors.setStatus('current')
wgIpsecAuthenticationErrors = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecAuthenticationErrors.setStatus('current')
wgIpsecReplayErrors = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecReplayErrors.setStatus('current')
wgIpsecPolicyErrors = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecPolicyErrors.setStatus('current')
wgIpsecOtherReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecOtherReceiveErrors.setStatus('current')
wgIpsecSendErrors = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecSendErrors.setStatus('current')
wgIpsecUnknownSpiErrors = MibScalar((1, 3, 6, 1, 4, 1, 3097, 3, 1, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wgIpsecUnknownSpiErrors.setStatus('current')
mibBuilder.exportSymbols("WATCHGUARD-IPSEC-SA-MON-MIB-EXT", wgIpsecSaEspOutSourceIdType=wgIpsecSaEspOutSourceIdType, wgIpsecSaAhInSourceId=wgIpsecSaAhInSourceId, wgIpsecSaAhOutSourcePort=wgIpsecSaAhOutSourcePort, wgIpsecSaEspOutAccSeconds=wgIpsecSaEspOutAccSeconds, wgIpsecSaEspInSourceId=wgIpsecSaEspInSourceId, wgIpsecSaEspInDestPort=wgIpsecSaEspInDestPort, wgIpsecSaIpcompOutSourceIdType=wgIpsecSaIpcompOutSourceIdType, wgIpsecSaAhInOtherReceiveErrors=wgIpsecSaAhInOtherReceiveErrors, wgIpsecSaIpcompInEntry=wgIpsecSaIpcompInEntry, wgIpsecSaEspOutSpi=wgIpsecSaEspOutSpi, wgIpsecSaAhOutAddress=wgIpsecSaAhOutAddress, wgIpsecSaIpcompInDestId=wgIpsecSaIpcompInDestId, wgIpsecSaEspOutUserOctets=wgIpsecSaEspOutUserOctets, wgIpsecSaEspInPadErrors=wgIpsecSaEspInPadErrors, wgIpsecSaEspInDestIdType=wgIpsecSaEspInDestIdType, wgIpsecSaEspInReplayErrors=wgIpsecSaEspInReplayErrors, wgIpsecSaAhInAuthAlg=wgIpsecSaAhInAuthAlg, wgIpsecSaEspInProtocol=wgIpsecSaEspInProtocol, wgIpsecSaAhInUserOctets=wgIpsecSaAhInUserOctets, wgIpsecSaIpcompInOtherReceiveErrors=wgIpsecSaIpcompInOtherReceiveErrors, wgIpsecAhCurrentInboundSAs=wgIpsecAhCurrentInboundSAs, wgIpsecDecryptionErrors=wgIpsecDecryptionErrors, wgIpsecSaIpcompInDestIdType=wgIpsecSaIpcompInDestIdType, wgIpsecSaAhInProtocol=wgIpsecSaAhInProtocol, wgIpsecSaAhInDestIdType=wgIpsecSaAhInDestIdType, wgIpsecSaIpcompInAddress=wgIpsecSaIpcompInAddress, wgIpsecSaEspInLimitSeconds=wgIpsecSaEspInLimitSeconds, wgIpsecSaEspInEncKeyLength=wgIpsecSaEspInEncKeyLength, wgIpsecSaIpcompOutDestPort=wgIpsecSaIpcompOutDestPort, wgIpsecSaEspInAddress=wgIpsecSaEspInAddress, wgIpsecSaEspOutSourcePort=wgIpsecSaEspOutSourcePort, wgIpsecSaAhOutUserOctets=wgIpsecSaAhOutUserOctets, wgIpsecSaEspOutEncapsulation=wgIpsecSaEspOutEncapsulation, wgIpsecSaAhOutTable=wgIpsecSaAhOutTable, wgIpsecSaAhInPackets=wgIpsecSaAhInPackets, wgIpsecSaEspInDestId=wgIpsecSaEspInDestId, wgIpsecSaIpcompOutDestId=wgIpsecSaIpcompOutDestId, wgIpsecIpcompTotalInboundSAs=wgIpsecIpcompTotalInboundSAs, wgSaTables=wgSaTables, wgIpsecSaEspInAuthAlg=wgIpsecSaEspInAuthAlg, wgIpsecSaEspInUserOctets=wgIpsecSaEspInUserOctets, wgIpsecSaEspInSpi=wgIpsecSaEspInSpi, wgIpsecSaEspInAuthErrors=wgIpsecSaEspInAuthErrors, wgIpsecSaAhOutLimitSeconds=wgIpsecSaAhOutLimitSeconds, wgIpsecSaEspOutDestId=wgIpsecSaEspOutDestId, wgIpsecSaEspOutLimitKbytes=wgIpsecSaEspOutLimitKbytes, wgIpsecSaEspOutSendErrors=wgIpsecSaEspOutSendErrors, wgIpsecSaEspInAccKbytes=wgIpsecSaEspInAccKbytes, wgIpsecSaEspInAccSeconds=wgIpsecSaEspInAccSeconds, wgIpsecSaIpcompInSourceIdType=wgIpsecSaIpcompInSourceIdType, wgIpsecSaEspOutEntry=wgIpsecSaEspOutEntry, wgIpsecSaAhInReplayErrors=wgIpsecSaAhInReplayErrors, wgIpsecSaAhInAccKbytes=wgIpsecSaAhInAccKbytes, wgIpsecSaIpcompOutProtocol=wgIpsecSaIpcompOutProtocol, wgIpsecIpcompCurrentInboundSAs=wgIpsecIpcompCurrentInboundSAs, wgIpsecReplayErrors=wgIpsecReplayErrors, wgIpsecSendErrors=wgIpsecSendErrors, wgIpsecSaAhInLimitSeconds=wgIpsecSaAhInLimitSeconds, wgIpsecSaAhOutEncapsulation=wgIpsecSaAhOutEncapsulation, wgSaStatistics=wgSaStatistics, wgIpsecSaMonModule=wgIpsecSaMonModule, wgIpsecSaMonitorMIB=wgIpsecSaMonitorMIB, wgIpsecSaAhInPolicyErrors=wgIpsecSaAhInPolicyErrors, wgIpsecSaEspOutLimitSeconds=wgIpsecSaEspOutLimitSeconds, wgIpsecSaAhOutSpi=wgIpsecSaAhOutSpi, wgIpsecSaIpcompOutAddress=wgIpsecSaIpcompOutAddress, wgIpsecUnknownSpiErrors=wgIpsecUnknownSpiErrors, IpsecIpv6Address=IpsecIpv6Address, wgIpsecSaAhOutAccKbytes=wgIpsecSaAhOutAccKbytes, wgIpsecSaIpcompOutCompAlg=wgIpsecSaIpcompOutCompAlg, wgIpsecSaAhOutCreator=wgIpsecSaAhOutCreator, wgIpsecSaEspOutAddress=wgIpsecSaEspOutAddress, PYSNMP_MODULE_ID=wgIpsecSaMonModule, wgIpsecSaIpcompInDecompErrors=wgIpsecSaIpcompInDecompErrors, wgIpsecSaEspOutProtocol=wgIpsecSaEspOutProtocol, wgIpsecSaEspOutEncAlg=wgIpsecSaEspOutEncAlg, wgIpsecIpcompTotalOutboundSAs=wgIpsecIpcompTotalOutboundSAs, wgIpsecSaAhOutLimitKbytes=wgIpsecSaAhOutLimitKbytes, wgIpsecSaAhOutAccSeconds=wgIpsecSaAhOutAccSeconds, wgIpsecSaIpcompOutSeconds=wgIpsecSaIpcompOutSeconds, wgIpsecEspCurrentOutboundSAs=wgIpsecEspCurrentOutboundSAs, wgIpsecSaAhInDestPort=wgIpsecSaAhInDestPort, wgIpsecSaEspInPolicyErrors=wgIpsecSaEspInPolicyErrors, wgIpsecSaEspOutEncKeyLength=wgIpsecSaEspOutEncKeyLength, wgIpsecSaAhInAuthErrors=wgIpsecSaAhInAuthErrors, wgIpsecSaAhInSpi=wgIpsecSaAhInSpi, wgIpsecSaIpcompOutCreator=wgIpsecSaIpcompOutCreator, wgIpsecSaAhInDestId=wgIpsecSaAhInDestId, wgIpsecSaAhInAddress=wgIpsecSaAhInAddress, wgIpsecSaIpcompInSourceId=wgIpsecSaIpcompInSourceId, wgIpsecSaEspInEncapsulation=wgIpsecSaEspInEncapsulation, wgIpsecSaAhInSourcePort=wgIpsecSaAhInSourcePort, wgIpsecSaEspInOtherReceiveErrors=wgIpsecSaEspInOtherReceiveErrors, wgIpsecSaAhOutPackets=wgIpsecSaAhOutPackets, wgIpsecIpcompCurrentOutboundSAs=wgIpsecIpcompCurrentOutboundSAs, wgIpsecEspTotalOutboundSAs=wgIpsecEspTotalOutboundSAs, wgIpsecSaEspInEntry=wgIpsecSaEspInEntry, wgIpsecSaIpcompInDestPort=wgIpsecSaIpcompInDestPort, wgIpsecSaIpcompOutPackets=wgIpsecSaIpcompOutPackets, wgIpsecSaEspOutPackets=wgIpsecSaEspOutPackets, wgIpsecSaIpcompInCreator=wgIpsecSaIpcompInCreator, wgIpsecSaAhInTable=wgIpsecSaAhInTable, wgIpsecOtherReceiveErrors=wgIpsecOtherReceiveErrors, wgIpsecSaIpcompInEncapsulation=wgIpsecSaIpcompInEncapsulation, wgIpsecSaAhInEntry=wgIpsecSaAhInEntry, wgIpsecSaAhOutSendErrors=wgIpsecSaAhOutSendErrors, wgIpsecSaAhOutProtocol=wgIpsecSaAhOutProtocol, wgIpsecSaEspOutTable=wgIpsecSaEspOutTable, wgIpsecSaAhInCreator=wgIpsecSaAhInCreator, wgIpsecSaIpcompOutUserOctets=wgIpsecSaIpcompOutUserOctets, wgIpsecSaEspInPackets=wgIpsecSaEspInPackets, wgIpsecSaEspOutCreator=wgIpsecSaEspOutCreator, wgIpsecSaIpcompOutSourceId=wgIpsecSaIpcompOutSourceId, wgIpsecSaEspInEncAlg=wgIpsecSaEspInEncAlg, wgIpsecSaEspInTable=wgIpsecSaEspInTable, wgIpsecSaIpcompOutEntry=wgIpsecSaIpcompOutEntry, wgIpsecSaIpcompOutCpi=wgIpsecSaIpcompOutCpi, wgIpsecSaAhInAccSeconds=wgIpsecSaAhInAccSeconds, wgSaErrors=wgSaErrors, wgIpsecSaIpcompInDecompAlg=wgIpsecSaIpcompInDecompAlg, wgIpsecSaIpcompOutSourcePort=wgIpsecSaIpcompOutSourcePort, wgIpsecSaIpcompInTable=wgIpsecSaIpcompInTable, wgIpsecSaIpcompOutTable=wgIpsecSaIpcompOutTable, wgIpsecSaEspInSourcePort=wgIpsecSaEspInSourcePort, wgIpsecSaEspOutDestPort=wgIpsecSaEspOutDestPort, wgIpsecSaEspOutAuthAlg=wgIpsecSaEspOutAuthAlg, wgIpsecSaAhOutDestId=wgIpsecSaAhOutDestId, wgIpsecSaEspInSourceIdType=wgIpsecSaEspInSourceIdType, wgIpsecSaIpcompOutDestIdType=wgIpsecSaIpcompOutDestIdType, wgIpsecSaIpcompInSeconds=wgIpsecSaIpcompInSeconds, wgIpsecSaAhOutEntry=wgIpsecSaAhOutEntry, wgIpsecSaIpcompInCpi=wgIpsecSaIpcompInCpi, wgIpsecSaAhOutDestIdType=wgIpsecSaAhOutDestIdType, wgIpsecSaIpcompInPackets=wgIpsecSaIpcompInPackets, wgIpsecSaIpcompInSourcePort=wgIpsecSaIpcompInSourcePort, wgIpsecAhTotalOutboundSAs=wgIpsecAhTotalOutboundSAs, wgIpsecSaIpcompInUserOctets=wgIpsecSaIpcompInUserOctets, wgIpsecAhTotalInboundSAs=wgIpsecAhTotalInboundSAs, wgIpsecEspCurrentInboundSAs=wgIpsecEspCurrentInboundSAs, wgIpsecSaIpcompInProtocol=wgIpsecSaIpcompInProtocol, wgIpsecSaIpcompOutEncapsulation=wgIpsecSaIpcompOutEncapsulation, wgIpsecSaEspOutAccKbytes=wgIpsecSaEspOutAccKbytes, wgIpsecSaEspInCreator=wgIpsecSaEspInCreator, wgIpsecSaEspOutDestIdType=wgIpsecSaEspOutDestIdType, wgIpsecSaAhOutAuthAlg=wgIpsecSaAhOutAuthAlg, wgIpsecSaEspInLimitKbytes=wgIpsecSaEspInLimitKbytes, wgIpsecPolicyErrors=wgIpsecPolicyErrors, wgIpsecSaEspOutSourceId=wgIpsecSaEspOutSourceId, wgIpsecSaAhInLimitKbytes=wgIpsecSaAhInLimitKbytes, wgIpsecSaAhOutSourceIdType=wgIpsecSaAhOutSourceIdType, wgIpsecSaAhOutDestPort=wgIpsecSaAhOutDestPort, wgIpsecSaAhOutSourceId=wgIpsecSaAhOutSourceId, wgIpsecSaEspInDecryptErrors=wgIpsecSaEspInDecryptErrors, wgIpsecSaAhInEncapsulation=wgIpsecSaAhInEncapsulation, wgIpsecAhCurrentOutboundSAs=wgIpsecAhCurrentOutboundSAs, IpsecSaCreatorIdent=IpsecSaCreatorIdent, wgIpsecEspTotalInboundSAs=wgIpsecEspTotalInboundSAs, wgIpsecSaAhInSourceIdType=wgIpsecSaAhInSourceIdType, wgIpsecAuthenticationErrors=wgIpsecAuthenticationErrors)
