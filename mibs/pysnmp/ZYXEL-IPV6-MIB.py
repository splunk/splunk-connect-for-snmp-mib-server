#
# PySNMP MIB module ZYXEL-IPV6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-IPV6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:44:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Bits, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso, Counter64, NotificationType, Integer32, Counter32, TimeTicks, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso", "Counter64", "NotificationType", "Integer32", "Counter32", "TimeTicks", "ModuleIdentity", "IpAddress")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelIpv6 = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34))
if mibBuilder.loadTexts: zyxelIpv6.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelIpv6.setOrganization('Enterprise Solution ZyXEL')
zyxelIpv6Setup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1))
zyIpv6HopLimit = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIpv6HopLimit.setStatus('current')
zyIpv6IcmpRateLimitErrorInterval = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIpv6IcmpRateLimitErrorInterval.setStatus('current')
zyIpv6IcmpRateLimitBucketSize = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIpv6IcmpRateLimitBucketSize.setStatus('current')
zyIpv6MaxNumberOfGlobalAddrresses = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIpv6MaxNumberOfGlobalAddrresses.setStatus('current')
zyxelIpv6Table = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 5), )
if mibBuilder.loadTexts: zyxelIpv6Table.setStatus('current')
zyxelIpv6Entry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 5, 1), ).setIndexNames((0, "ZYXEL-IPV6-MIB", "zyIpv6IfIndex"))
if mibBuilder.loadTexts: zyxelIpv6Entry.setStatus('current')
zyIpv6IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: zyIpv6IfIndex.setStatus('current')
zyIpv6State = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 5, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIpv6State.setStatus('current')
zyIpv6AddressAutoConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 5, 1, 3), EnabledStatus().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stateless", 1), ("stateful", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIpv6AddressAutoConfigState.setStatus('current')
zyIpv6LinkLocalIpAddrressType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 5, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIpv6LinkLocalIpAddrressType.setStatus('current')
zyIpv6LinkLocalIpAddrress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 5, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIpv6LinkLocalIpAddrress.setStatus('current')
zyIpv6DefaultGatewayType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 5, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIpv6DefaultGatewayType.setStatus('current')
zyIpv6DefaultGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 5, 1, 7), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIpv6DefaultGateway.setStatus('current')
zyxelIpv6GlobalAddressTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 6), )
if mibBuilder.loadTexts: zyxelIpv6GlobalAddressTable.setStatus('current')
zyxelIpv6GlobalAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 6, 1), ).setIndexNames((0, "ZYXEL-IPV6-MIB", "zyIpv6GlobalAddressIfIndex"), (0, "ZYXEL-IPV6-MIB", "zyIpv6GlobalAddressIpAddressType"), (0, "ZYXEL-IPV6-MIB", "zyIpv6GlobalAddressIpAddress"), (0, "ZYXEL-IPV6-MIB", "zyIpv6GlobalAddressPrefixLength"), (0, "ZYXEL-IPV6-MIB", "zyIpv6GlobalAddressEUI64State"))
if mibBuilder.loadTexts: zyxelIpv6GlobalAddressEntry.setStatus('current')
zyIpv6GlobalAddressIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: zyIpv6GlobalAddressIfIndex.setStatus('current')
zyIpv6GlobalAddressIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 6, 1, 2), InetAddressType())
if mibBuilder.loadTexts: zyIpv6GlobalAddressIpAddressType.setStatus('current')
zyIpv6GlobalAddressIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 6, 1, 3), InetAddress())
if mibBuilder.loadTexts: zyIpv6GlobalAddressIpAddress.setStatus('current')
zyIpv6GlobalAddressPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 6, 1, 4), Integer32())
if mibBuilder.loadTexts: zyIpv6GlobalAddressPrefixLength.setStatus('current')
zyIpv6GlobalAddressEUI64State = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 6, 1, 5), EnabledStatus())
if mibBuilder.loadTexts: zyIpv6GlobalAddressEUI64State.setStatus('current')
zyIpv6GlobalAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("preferred", 1), ("deprecated", 2), ("invalid", 3), ("inaccessible", 4), ("unknown", 5), ("tentative", 6), ("duplicate", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIpv6GlobalAddressStatus.setStatus('current')
zyIpv6GlobalAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 34, 1, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyIpv6GlobalAddressRowStatus.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-IPV6-MIB", zyIpv6GlobalAddressEUI64State=zyIpv6GlobalAddressEUI64State, zyIpv6GlobalAddressIfIndex=zyIpv6GlobalAddressIfIndex, zyIpv6State=zyIpv6State, zyIpv6DefaultGateway=zyIpv6DefaultGateway, zyIpv6IfIndex=zyIpv6IfIndex, zyIpv6LinkLocalIpAddrress=zyIpv6LinkLocalIpAddrress, zyIpv6GlobalAddressPrefixLength=zyIpv6GlobalAddressPrefixLength, zyIpv6HopLimit=zyIpv6HopLimit, zyIpv6IcmpRateLimitErrorInterval=zyIpv6IcmpRateLimitErrorInterval, zyIpv6GlobalAddressIpAddressType=zyIpv6GlobalAddressIpAddressType, zyxelIpv6Entry=zyxelIpv6Entry, zyIpv6MaxNumberOfGlobalAddrresses=zyIpv6MaxNumberOfGlobalAddrresses, zyIpv6GlobalAddressIpAddress=zyIpv6GlobalAddressIpAddress, PYSNMP_MODULE_ID=zyxelIpv6, zyIpv6GlobalAddressRowStatus=zyIpv6GlobalAddressRowStatus, zyIpv6DefaultGatewayType=zyIpv6DefaultGatewayType, zyxelIpv6Setup=zyxelIpv6Setup, zyxelIpv6=zyxelIpv6, zyIpv6IcmpRateLimitBucketSize=zyIpv6IcmpRateLimitBucketSize, zyxelIpv6GlobalAddressEntry=zyxelIpv6GlobalAddressEntry, zyIpv6LinkLocalIpAddrressType=zyIpv6LinkLocalIpAddrressType, zyxelIpv6Table=zyxelIpv6Table, zyxelIpv6GlobalAddressTable=zyxelIpv6GlobalAddressTable, zyIpv6AddressAutoConfigState=zyIpv6AddressAutoConfigState, zyIpv6GlobalAddressStatus=zyIpv6GlobalAddressStatus)
