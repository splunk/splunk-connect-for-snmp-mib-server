#
# PySNMP MIB module XYLAN-IP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-IP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, ObjectIdentity, Unsigned32, ModuleIdentity, MibIdentifier, iso, IpAddress, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "MibIdentifier", "iso", "IpAddress", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xylanIpArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanIpArch")
xylanIpFilterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 13, 1))
xylanIpMiscGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 13, 2))
xylanIpRipFilterTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1), )
if mibBuilder.loadTexts: xylanIpRipFilterTable.setStatus('mandatory')
xylanIpRipFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1), ).setIndexNames((0, "XYLAN-IP-MIB", "xylanIpRipFilterNum"))
if mibBuilder.loadTexts: xylanIpRipFilterEntry.setStatus('mandatory')
xylanIpRipFilterNum = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpRipFilterNum.setStatus('mandatory')
xylanIpRipFilterAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterAdminState.setStatus('mandatory')
xylanIpRipFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rip-output", 1), ("rip-input", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterType.setStatus('mandatory')
xylanIpRipFilterNet = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterNet.setStatus('mandatory')
xylanIpRipFilterNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterNetMask.setStatus('mandatory')
xylanIpRipFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("block", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterMode.setStatus('mandatory')
xylanIpRipFilterGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterGroupId.setStatus('mandatory')
xylanIpRipFilterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterVlanId.setStatus('mandatory')
xylanIpRipFilterWanType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("not-used", 1), ("frame-relay", 2), ("ppp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterWanType.setStatus('mandatory')
xylanIpRipFilterSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterSlot.setStatus('mandatory')
xylanIpRipFilterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterPort.setStatus('mandatory')
xylanIpRipFilterVc = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterVc.setStatus('mandatory')
xylanIpRipFilterPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 1, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpRipFilterPeerId.setStatus('mandatory')
xylanIpAssocMacTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 13, 2, 1), )
if mibBuilder.loadTexts: xylanIpAssocMacTable.setStatus('mandatory')
xylanIpAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 13, 2, 1, 1), ).setIndexNames((0, "XYLAN-IP-MIB", "xylanIpAssocAddr"))
if mibBuilder.loadTexts: xylanIpAssocEntry.setStatus('mandatory')
xylanIpAssocAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 2, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpAssocAddr.setStatus('mandatory')
xylanIpAssocMac = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 2, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpAssocMac.setStatus('mandatory')
xylanIpAssocSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpAssocSlot.setStatus('mandatory')
xylanIpAssocIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpAssocIntf.setStatus('mandatory')
xylanIpAssocDupMac = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 2, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpAssocDupMac.setStatus('mandatory')
xylanIpAssocDupSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpAssocDupSlot.setStatus('mandatory')
xylanIpAssocDupIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 13, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpAssocDupIntf.setStatus('mandatory')
mibBuilder.exportSymbols("XYLAN-IP-MIB", xylanIpAssocEntry=xylanIpAssocEntry, xylanIpRipFilterWanType=xylanIpRipFilterWanType, xylanIpAssocSlot=xylanIpAssocSlot, xylanIpRipFilterPort=xylanIpRipFilterPort, xylanIpRipFilterNum=xylanIpRipFilterNum, xylanIpRipFilterGroupId=xylanIpRipFilterGroupId, xylanIpRipFilterSlot=xylanIpRipFilterSlot, xylanIpRipFilterType=xylanIpRipFilterType, xylanIpRipFilterVc=xylanIpRipFilterVc, xylanIpAssocDupMac=xylanIpAssocDupMac, xylanIpAssocDupIntf=xylanIpAssocDupIntf, xylanIpAssocDupSlot=xylanIpAssocDupSlot, xylanIpRipFilterVlanId=xylanIpRipFilterVlanId, xylanIpFilterGroup=xylanIpFilterGroup, xylanIpRipFilterNetMask=xylanIpRipFilterNetMask, xylanIpRipFilterTable=xylanIpRipFilterTable, xylanIpAssocAddr=xylanIpAssocAddr, xylanIpRipFilterNet=xylanIpRipFilterNet, xylanIpAssocMacTable=xylanIpAssocMacTable, xylanIpAssocIntf=xylanIpAssocIntf, xylanIpRipFilterMode=xylanIpRipFilterMode, xylanIpAssocMac=xylanIpAssocMac, xylanIpRipFilterEntry=xylanIpRipFilterEntry, xylanIpRipFilterPeerId=xylanIpRipFilterPeerId, xylanIpMiscGroup=xylanIpMiscGroup, xylanIpRipFilterAdminState=xylanIpRipFilterAdminState)
