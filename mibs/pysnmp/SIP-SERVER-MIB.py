#
# PySNMP MIB module SIP-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SIP-SERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:56:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
applIndex, = mibBuilder.importSymbols("NETWORK-SERVICES-MIB", "applIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, Integer32, ModuleIdentity, ObjectIdentity, Counter32, TimeTicks, IpAddress, MibIdentifier, mib_2, Counter64, NotificationType, Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "ModuleIdentity", "ObjectIdentity", "Counter32", "TimeTicks", "IpAddress", "MibIdentifier", "mib-2", "Counter64", "NotificationType", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits")
TimeStamp, DisplayString, DateAndTime, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DisplayString", "DateAndTime", "TextualConvention", "TruthValue")
sipServerMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 151))
sipServerMIB.setRevisions(('2007-04-20 00:00',))
if mibBuilder.loadTexts: sipServerMIB.setLastUpdated('200704200000Z')
if mibBuilder.loadTexts: sipServerMIB.setOrganization('IETF Session Initiation Protocol Working Group')
sipServerMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 151, 1))
sipServerMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 151, 2))
sipServerCfg = MibIdentifier((1, 3, 6, 1, 2, 1, 151, 1, 1))
sipServerCfgTable = MibTable((1, 3, 6, 1, 2, 1, 151, 1, 1, 1), )
if mibBuilder.loadTexts: sipServerCfgTable.setStatus('current')
sipServerCfgEntry = MibTableRow((1, 3, 6, 1, 2, 1, 151, 1, 1, 1, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"))
if mibBuilder.loadTexts: sipServerCfgEntry.setStatus('current')
sipServerCfgHostAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 1, 1, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerCfgHostAddressType.setStatus('current')
sipServerCfgHostAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 1, 1, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerCfgHostAddress.setStatus('current')
sipServerProxyCfg = MibIdentifier((1, 3, 6, 1, 2, 1, 151, 1, 3))
sipServerProxyStats = MibIdentifier((1, 3, 6, 1, 2, 1, 151, 1, 4))
sipServerProxyCfgTable = MibTable((1, 3, 6, 1, 2, 1, 151, 1, 3, 1), )
if mibBuilder.loadTexts: sipServerProxyCfgTable.setStatus('current')
sipServerProxyCfgEntry = MibTableRow((1, 3, 6, 1, 2, 1, 151, 1, 3, 1, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"))
if mibBuilder.loadTexts: sipServerProxyCfgEntry.setStatus('current')
sipServerCfgProxyStatefulness = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stateless", 1), ("transactionStateful", 2), ("callStateful", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerCfgProxyStatefulness.setStatus('current')
sipServerCfgProxyRecursion = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerCfgProxyRecursion.setStatus('current')
sipServerCfgProxyRecordRoute = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 3, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerCfgProxyRecordRoute.setStatus('current')
sipServerCfgProxyAuthMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 3, 1, 1, 4), Bits().clone(namedValues=NamedValues(("none", 0), ("tls", 1), ("digest", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerCfgProxyAuthMethod.setStatus('current')
sipServerCfgProxyAuthDefaultRealm = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 3, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerCfgProxyAuthDefaultRealm.setStatus('current')
sipServerProxyStatsTable = MibTable((1, 3, 6, 1, 2, 1, 151, 1, 4, 1), )
if mibBuilder.loadTexts: sipServerProxyStatsTable.setStatus('current')
sipServerProxyStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 151, 1, 4, 1, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"))
if mibBuilder.loadTexts: sipServerProxyStatsEntry.setStatus('current')
sipServerProxyStatProxyReqFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerProxyStatProxyReqFailures.setStatus('current')
sipServerProxyStatsDisconTime = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 4, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerProxyStatsDisconTime.setStatus('current')
sipServerRegCfg = MibIdentifier((1, 3, 6, 1, 2, 1, 151, 1, 5))
sipServerRegStats = MibIdentifier((1, 3, 6, 1, 2, 1, 151, 1, 6))
sipServerRegCfgTable = MibTable((1, 3, 6, 1, 2, 1, 151, 1, 5, 1), )
if mibBuilder.loadTexts: sipServerRegCfgTable.setStatus('current')
sipServerRegCfgEntry = MibTableRow((1, 3, 6, 1, 2, 1, 151, 1, 5, 1, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"))
if mibBuilder.loadTexts: sipServerRegCfgEntry.setStatus('current')
sipServerRegMaxContactExpiryDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegMaxContactExpiryDuration.setStatus('current')
sipServerRegMaxUsers = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegMaxUsers.setStatus('current')
sipServerRegCurrentUsers = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 1, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegCurrentUsers.setStatus('current')
sipServerRegDfltRegActiveInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegDfltRegActiveInterval.setStatus('current')
sipServerRegUserTable = MibTable((1, 3, 6, 1, 2, 1, 151, 1, 5, 2), )
if mibBuilder.loadTexts: sipServerRegUserTable.setStatus('current')
sipServerRegUserEntry = MibTableRow((1, 3, 6, 1, 2, 1, 151, 1, 5, 2, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "SIP-SERVER-MIB", "sipServerRegUserIndex"))
if mibBuilder.loadTexts: sipServerRegUserEntry.setStatus('current')
sipServerRegUserIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sipServerRegUserIndex.setStatus('current')
sipServerRegUserUri = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegUserUri.setStatus('current')
sipServerRegUserAuthenticationFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegUserAuthenticationFailures.setStatus('current')
sipServerRegUserDisconTime = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 2, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegUserDisconTime.setStatus('current')
sipServerRegContactTable = MibTable((1, 3, 6, 1, 2, 1, 151, 1, 5, 3), )
if mibBuilder.loadTexts: sipServerRegContactTable.setStatus('current')
sipServerRegContactEntry = MibTableRow((1, 3, 6, 1, 2, 1, 151, 1, 5, 3, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "SIP-SERVER-MIB", "sipServerRegUserIndex"), (0, "SIP-SERVER-MIB", "sipServerRegContactIndex"))
if mibBuilder.loadTexts: sipServerRegContactEntry.setStatus('current')
sipServerRegContactIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sipServerRegContactIndex.setStatus('current')
sipServerRegContactDisplayName = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 3, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegContactDisplayName.setStatus('current')
sipServerRegContactURI = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 3, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegContactURI.setStatus('current')
sipServerRegContactLastUpdated = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegContactLastUpdated.setStatus('current')
sipServerRegContactExpiry = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegContactExpiry.setStatus('current')
sipServerRegContactPreference = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 5, 3, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegContactPreference.setStatus('current')
sipServerRegStatsTable = MibTable((1, 3, 6, 1, 2, 1, 151, 1, 6, 1), )
if mibBuilder.loadTexts: sipServerRegStatsTable.setStatus('current')
sipServerRegStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 151, 1, 6, 1, 1), ).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"))
if mibBuilder.loadTexts: sipServerRegStatsEntry.setStatus('current')
sipServerRegStatsAcceptedRegs = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 6, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegStatsAcceptedRegs.setStatus('current')
sipServerRegStatsRejectedRegs = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegStatsRejectedRegs.setStatus('current')
sipServerRegStatsDisconTime = MibTableColumn((1, 3, 6, 1, 2, 1, 151, 1, 6, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServerRegStatsDisconTime.setStatus('current')
sipServerMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 151, 2, 1))
sipServerMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 151, 2, 2))
sipServerProxyServerCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 151, 2, 1, 1)).setObjects(("SIP-SERVER-MIB", "sipServerConfigGroup"), ("SIP-SERVER-MIB", "sipServerProxyConfigGroup"), ("SIP-SERVER-MIB", "sipServerProxyStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipServerProxyServerCompliance = sipServerProxyServerCompliance.setStatus('current')
sipRedirectServerCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 151, 2, 1, 2)).setObjects(("SIP-SERVER-MIB", "sipServerConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipRedirectServerCompliance = sipRedirectServerCompliance.setStatus('current')
sipServerRegistrarServerCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 151, 2, 1, 3)).setObjects(("SIP-SERVER-MIB", "sipServerConfigGroup"), ("SIP-SERVER-MIB", "sipServerRegistrarConfigGroup"), ("SIP-SERVER-MIB", "sipServerRegistrarStatsGroup"), ("SIP-SERVER-MIB", "sipServerRegistrarUsersGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipServerRegistrarServerCompliance = sipServerRegistrarServerCompliance.setStatus('current')
sipServerConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 151, 2, 2, 1)).setObjects(("SIP-SERVER-MIB", "sipServerCfgHostAddressType"), ("SIP-SERVER-MIB", "sipServerCfgHostAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipServerConfigGroup = sipServerConfigGroup.setStatus('current')
sipServerProxyConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 151, 2, 2, 2)).setObjects(("SIP-SERVER-MIB", "sipServerCfgProxyStatefulness"), ("SIP-SERVER-MIB", "sipServerCfgProxyRecursion"), ("SIP-SERVER-MIB", "sipServerCfgProxyRecordRoute"), ("SIP-SERVER-MIB", "sipServerCfgProxyAuthMethod"), ("SIP-SERVER-MIB", "sipServerCfgProxyAuthDefaultRealm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipServerProxyConfigGroup = sipServerProxyConfigGroup.setStatus('current')
sipServerProxyStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 151, 2, 2, 3)).setObjects(("SIP-SERVER-MIB", "sipServerProxyStatProxyReqFailures"), ("SIP-SERVER-MIB", "sipServerProxyStatsDisconTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipServerProxyStatsGroup = sipServerProxyStatsGroup.setStatus('current')
sipServerRegistrarConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 151, 2, 2, 4)).setObjects(("SIP-SERVER-MIB", "sipServerRegMaxContactExpiryDuration"), ("SIP-SERVER-MIB", "sipServerRegMaxUsers"), ("SIP-SERVER-MIB", "sipServerRegCurrentUsers"), ("SIP-SERVER-MIB", "sipServerRegDfltRegActiveInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipServerRegistrarConfigGroup = sipServerRegistrarConfigGroup.setStatus('current')
sipServerRegistrarStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 151, 2, 2, 5)).setObjects(("SIP-SERVER-MIB", "sipServerRegStatsAcceptedRegs"), ("SIP-SERVER-MIB", "sipServerRegStatsRejectedRegs"), ("SIP-SERVER-MIB", "sipServerRegStatsDisconTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipServerRegistrarStatsGroup = sipServerRegistrarStatsGroup.setStatus('current')
sipServerRegistrarUsersGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 151, 2, 2, 6)).setObjects(("SIP-SERVER-MIB", "sipServerRegUserUri"), ("SIP-SERVER-MIB", "sipServerRegUserAuthenticationFailures"), ("SIP-SERVER-MIB", "sipServerRegUserDisconTime"), ("SIP-SERVER-MIB", "sipServerRegContactDisplayName"), ("SIP-SERVER-MIB", "sipServerRegContactURI"), ("SIP-SERVER-MIB", "sipServerRegContactLastUpdated"), ("SIP-SERVER-MIB", "sipServerRegContactExpiry"), ("SIP-SERVER-MIB", "sipServerRegContactPreference"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipServerRegistrarUsersGroup = sipServerRegistrarUsersGroup.setStatus('current')
mibBuilder.exportSymbols("SIP-SERVER-MIB", sipServerCfgProxyRecordRoute=sipServerCfgProxyRecordRoute, sipRedirectServerCompliance=sipRedirectServerCompliance, PYSNMP_MODULE_ID=sipServerMIB, sipServerRegUserIndex=sipServerRegUserIndex, sipServerRegCfgTable=sipServerRegCfgTable, sipServerMIBObjects=sipServerMIBObjects, sipServerRegMaxContactExpiryDuration=sipServerRegMaxContactExpiryDuration, sipServerRegUserDisconTime=sipServerRegUserDisconTime, sipServerRegContactExpiry=sipServerRegContactExpiry, sipServerRegStatsDisconTime=sipServerRegStatsDisconTime, sipServerProxyCfgEntry=sipServerProxyCfgEntry, sipServerCfg=sipServerCfg, sipServerProxyCfgTable=sipServerProxyCfgTable, sipServerRegCfg=sipServerRegCfg, sipServerCfgHostAddress=sipServerCfgHostAddress, sipServerRegistrarConfigGroup=sipServerRegistrarConfigGroup, sipServerProxyServerCompliance=sipServerProxyServerCompliance, sipServerProxyStatsDisconTime=sipServerProxyStatsDisconTime, sipServerRegContactTable=sipServerRegContactTable, sipServerRegContactEntry=sipServerRegContactEntry, sipServerRegContactPreference=sipServerRegContactPreference, sipServerRegStatsEntry=sipServerRegStatsEntry, sipServerProxyCfg=sipServerProxyCfg, sipServerProxyConfigGroup=sipServerProxyConfigGroup, sipServerCfgProxyRecursion=sipServerCfgProxyRecursion, sipServerProxyStatsGroup=sipServerProxyStatsGroup, sipServerRegistrarUsersGroup=sipServerRegistrarUsersGroup, sipServerRegContactLastUpdated=sipServerRegContactLastUpdated, sipServerRegUserTable=sipServerRegUserTable, sipServerConfigGroup=sipServerConfigGroup, sipServerRegUserAuthenticationFailures=sipServerRegUserAuthenticationFailures, sipServerRegStatsRejectedRegs=sipServerRegStatsRejectedRegs, sipServerRegCfgEntry=sipServerRegCfgEntry, sipServerRegStatsAcceptedRegs=sipServerRegStatsAcceptedRegs, sipServerCfgTable=sipServerCfgTable, sipServerCfgProxyStatefulness=sipServerCfgProxyStatefulness, sipServerRegContactDisplayName=sipServerRegContactDisplayName, sipServerRegStatsTable=sipServerRegStatsTable, sipServerRegContactURI=sipServerRegContactURI, sipServerMIBConformance=sipServerMIBConformance, sipServerCfgProxyAuthMethod=sipServerCfgProxyAuthMethod, sipServerProxyStats=sipServerProxyStats, sipServerRegCurrentUsers=sipServerRegCurrentUsers, sipServerMIB=sipServerMIB, sipServerRegUserUri=sipServerRegUserUri, sipServerMIBGroups=sipServerMIBGroups, sipServerCfgProxyAuthDefaultRealm=sipServerCfgProxyAuthDefaultRealm, sipServerRegStats=sipServerRegStats, sipServerProxyStatsEntry=sipServerProxyStatsEntry, sipServerRegMaxUsers=sipServerRegMaxUsers, sipServerRegistrarStatsGroup=sipServerRegistrarStatsGroup, sipServerProxyStatsTable=sipServerProxyStatsTable, sipServerRegDfltRegActiveInterval=sipServerRegDfltRegActiveInterval, sipServerProxyStatProxyReqFailures=sipServerProxyStatProxyReqFailures, sipServerRegistrarServerCompliance=sipServerRegistrarServerCompliance, sipServerRegUserEntry=sipServerRegUserEntry, sipServerMIBCompliances=sipServerMIBCompliances, sipServerCfgHostAddressType=sipServerCfgHostAddressType, sipServerRegContactIndex=sipServerRegContactIndex, sipServerCfgEntry=sipServerCfgEntry)
