#
# PySNMP MIB module HPN-ICF-FR-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-FR-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hpnicfQoS, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfQoS")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, NotificationType, Integer32, ObjectIdentity, MibIdentifier, ModuleIdentity, iso, Gauge32, Unsigned32, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "Integer32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "iso", "Gauge32", "Unsigned32", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
hpnicfFrQoSMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3))
if mibBuilder.loadTexts: hpnicfFrQoSMib.setLastUpdated('200407120000Z')
if mibBuilder.loadTexts: hpnicfFrQoSMib.setOrganization('')
class HpnicfCirAllowDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2), ("inboundAndOutbound", 3))

hpnicfFrQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1))
hpnicfFrClassObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1))
hpnicfFrClassIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFrClassIndexNext.setStatus('current')
hpnicfFrClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfFrClassCfgInfoTable.setStatus('current')
hpnicfFrClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfFrClassIndex"))
if mibBuilder.loadTexts: hpnicfFrClassCfgInfoEntry.setStatus('current')
hpnicfFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfFrClassIndex.setStatus('current')
hpnicfFrClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFrClassName.setStatus('current')
hpnicfFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFrClassRowStatus.setStatus('current')
hpnicfCirAllowCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3), )
if mibBuilder.loadTexts: hpnicfCirAllowCfgInfoTable.setStatus('current')
hpnicfCirAllowCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfCirAllowFrClassIndex"), (0, "HPN-ICF-FR-QOS-MIB", "hpnicfCirAllowDirection"))
if mibBuilder.loadTexts: hpnicfCirAllowCfgInfoEntry.setStatus('current')
hpnicfCirAllowFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfCirAllowFrClassIndex.setStatus('current')
hpnicfCirAllowDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1, 2), HpnicfCirAllowDirection())
if mibBuilder.loadTexts: hpnicfCirAllowDirection.setStatus('current')
hpnicfCirAllowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCirAllowValue.setStatus('current')
hpnicfCirAllowRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCirAllowRowStatus.setStatus('current')
hpnicfCirCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4), )
if mibBuilder.loadTexts: hpnicfCirCfgInfoTable.setStatus('current')
hpnicfCirCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfCirFrClassIndex"))
if mibBuilder.loadTexts: hpnicfCirCfgInfoEntry.setStatus('current')
hpnicfCirFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfCirFrClassIndex.setStatus('current')
hpnicfCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCirValue.setStatus('current')
hpnicfCirRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfCirRowStatus.setStatus('current')
hpnicfIfApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5), )
if mibBuilder.loadTexts: hpnicfIfApplyFrClassTable.setStatus('current')
hpnicfIfApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfIfApplyFrClassIfIndex"))
if mibBuilder.loadTexts: hpnicfIfApplyFrClassEntry.setStatus('current')
hpnicfIfApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfIfApplyFrClassIfIndex.setStatus('current')
hpnicfIfApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIfApplyFrClassIndex.setStatus('current')
hpnicfIfApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIfApplyFrClassRowStatus.setStatus('current')
hpnicfPvcApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6), )
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassTable.setStatus('current')
hpnicfPvcApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassIfIndex"), (0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassEntry.setStatus('current')
hpnicfPvcApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassIfIndex.setStatus('current')
hpnicfPvcApplyFrClassDlciNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassDlciNum.setStatus('current')
hpnicfPvcApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassIndex.setStatus('current')
hpnicfPvcApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPvcApplyFrClassRowStatus.setStatus('current')
hpnicfFrPvcBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 7), )
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthTable.setStatus('current')
hpnicfFrPvcBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 7, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassIfIndex"), (0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthEntry.setStatus('current')
hpnicfFrPvcBandwidthMaxReservedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthMaxReservedBW.setStatus('current')
hpnicfFrPvcBandwidthAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFrPvcBandwidthAvailable.setStatus('current')
hpnicfRTPQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2))
hpnicfRTPFrClassApplyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyTable.setStatus('current')
hpnicfRTPFrClassApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfRTPFrClassApplyFrClassIndex"))
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyEntry.setStatus('current')
hpnicfRTPFrClassApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyFrClassIndex.setStatus('current')
hpnicfRTPFrClassApplyStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyStartPort.setStatus('current')
hpnicfRTPFrClassApplyEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyEndPort.setStatus('current')
hpnicfRTPFrClassApplyBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyBandWidth.setStatus('current')
hpnicfRTPFrClassApplyCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 2000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyCbs.setStatus('current')
hpnicfRTPFrClassApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTPFrClassApplyRowStatus.setStatus('current')
hpnicfRTPFrPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueRunInfoTable.setStatus('current')
hpnicfRTPFrPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassIfIndex"), (0, "HPN-ICF-FR-QOS-MIB", "hpnicfPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueRunInfoEntry.setStatus('current')
hpnicfRTPFrPvcQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueSize.setStatus('current')
hpnicfRTPFrPvcQueueMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueMaxSize.setStatus('current')
hpnicfRTPFrPvcQueueOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueOutputs.setStatus('current')
hpnicfRTPFrPvcQueueDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 32, 3, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTPFrPvcQueueDiscards.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-FR-QOS-MIB", HpnicfCirAllowDirection=HpnicfCirAllowDirection, hpnicfFrClassRowStatus=hpnicfFrClassRowStatus, hpnicfPvcApplyFrClassRowStatus=hpnicfPvcApplyFrClassRowStatus, hpnicfFrPvcBandwidthTable=hpnicfFrPvcBandwidthTable, hpnicfRTPFrPvcQueueOutputs=hpnicfRTPFrPvcQueueOutputs, hpnicfFrClassIndex=hpnicfFrClassIndex, hpnicfPvcApplyFrClassIndex=hpnicfPvcApplyFrClassIndex, PYSNMP_MODULE_ID=hpnicfFrQoSMib, hpnicfIfApplyFrClassEntry=hpnicfIfApplyFrClassEntry, hpnicfRTPFrPvcQueueDiscards=hpnicfRTPFrPvcQueueDiscards, hpnicfIfApplyFrClassIfIndex=hpnicfIfApplyFrClassIfIndex, hpnicfIfApplyFrClassTable=hpnicfIfApplyFrClassTable, hpnicfCirAllowRowStatus=hpnicfCirAllowRowStatus, hpnicfIfApplyFrClassRowStatus=hpnicfIfApplyFrClassRowStatus, hpnicfRTPFrClassApplyBandWidth=hpnicfRTPFrClassApplyBandWidth, hpnicfCirAllowDirection=hpnicfCirAllowDirection, hpnicfFrPvcBandwidthMaxReservedBW=hpnicfFrPvcBandwidthMaxReservedBW, hpnicfPvcApplyFrClassIfIndex=hpnicfPvcApplyFrClassIfIndex, hpnicfRTPFrClassApplyEntry=hpnicfRTPFrClassApplyEntry, hpnicfRTPFrPvcQueueMaxSize=hpnicfRTPFrPvcQueueMaxSize, hpnicfRTPFrClassApplyCbs=hpnicfRTPFrClassApplyCbs, hpnicfPvcApplyFrClassTable=hpnicfPvcApplyFrClassTable, hpnicfRTPFrClassApplyTable=hpnicfRTPFrClassApplyTable, hpnicfRTPFrClassApplyStartPort=hpnicfRTPFrClassApplyStartPort, hpnicfFrClassCfgInfoEntry=hpnicfFrClassCfgInfoEntry, hpnicfFrPvcBandwidthAvailable=hpnicfFrPvcBandwidthAvailable, hpnicfRTPFrPvcQueueSize=hpnicfRTPFrPvcQueueSize, hpnicfRTPFrClassApplyEndPort=hpnicfRTPFrClassApplyEndPort, hpnicfRTPFrClassApplyFrClassIndex=hpnicfRTPFrClassApplyFrClassIndex, hpnicfFrClassCfgInfoTable=hpnicfFrClassCfgInfoTable, hpnicfCirAllowCfgInfoEntry=hpnicfCirAllowCfgInfoEntry, hpnicfIfApplyFrClassIndex=hpnicfIfApplyFrClassIndex, hpnicfCirRowStatus=hpnicfCirRowStatus, hpnicfFrQoSObjects=hpnicfFrQoSObjects, hpnicfRTPFrPvcQueueRunInfoTable=hpnicfRTPFrPvcQueueRunInfoTable, hpnicfCirAllowValue=hpnicfCirAllowValue, hpnicfFrQoSMib=hpnicfFrQoSMib, hpnicfCirCfgInfoEntry=hpnicfCirCfgInfoEntry, hpnicfCirAllowCfgInfoTable=hpnicfCirAllowCfgInfoTable, hpnicfCirFrClassIndex=hpnicfCirFrClassIndex, hpnicfRTPFrPvcQueueRunInfoEntry=hpnicfRTPFrPvcQueueRunInfoEntry, hpnicfFrClassIndexNext=hpnicfFrClassIndexNext, hpnicfFrPvcBandwidthEntry=hpnicfFrPvcBandwidthEntry, hpnicfPvcApplyFrClassEntry=hpnicfPvcApplyFrClassEntry, hpnicfFrClassObjects=hpnicfFrClassObjects, hpnicfCirAllowFrClassIndex=hpnicfCirAllowFrClassIndex, hpnicfRTPQoSObjects=hpnicfRTPQoSObjects, hpnicfRTPFrClassApplyRowStatus=hpnicfRTPFrClassApplyRowStatus, hpnicfCirCfgInfoTable=hpnicfCirCfgInfoTable, hpnicfCirValue=hpnicfCirValue, hpnicfPvcApplyFrClassDlciNum=hpnicfPvcApplyFrClassDlciNum, hpnicfFrClassName=hpnicfFrClassName)
