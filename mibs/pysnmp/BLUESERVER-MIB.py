#
# PySNMP MIB module BLUESERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BLUESERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:22:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, IpAddress, Integer32, Counter64, ModuleIdentity, NotificationType, TimeTicks, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, Bits, MibIdentifier, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "Integer32", "Counter64", "ModuleIdentity", "NotificationType", "TimeTicks", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "Bits", "MibIdentifier", "enterprises")
RowStatus, TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DateAndTime", "DisplayString")
blueSocket = ModuleIdentity((1, 3, 6, 1, 4, 1, 9967))
if mibBuilder.loadTexts: blueSocket.setLastUpdated('200303100000Z')
if mibBuilder.loadTexts: blueSocket.setOrganization('Bluesocket Inc.')
blueServer = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1))
blueNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2))
users = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 1))
destination = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 3))
service = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 4))
policy = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 5))
vpn = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 6))
configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7))
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 8))
replication = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 9))
connection = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 10))
roles = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 11))
serviceMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 12))
statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 13))
vlan = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 14))
schedule = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 15))
nativeUsers = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1))
adminUsers = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2))
ipsec = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1))
pptp = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2))
subnetVpn = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 6, 3))
certificate = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4))
l2tp = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 6, 5))
http = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1))
misc = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 2))
autoBackup = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 3))
time = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4))
mobility = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 5))
publicAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 6))
confLog = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7))
snmpConf = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8))
systemTracker = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 9))
authentication = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10))
failover = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 8, 3))
managed = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4))
protected = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5))
userSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 13, 1))
systemStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 13, 2))
confLogGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 1))
snmpTrapConf = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1))
exAuthServer = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1))
notifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 1))
blueTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 2))
blueConfigTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1))
blueFailureTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 2, 2))
blueThresholdTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 2, 3))
blueGeneralTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 2, 4))
class BlueIpAddress(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1d.1d.1d.1d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(7, 15)

class BlueMacAddress(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x:1x:1x:1x:1x:1x'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(17, 17)
    fixedLength = 17

class LocalDateAndTime(TextualConvention, OctetString):
    status = 'current'
    displayHint = ''
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

nativeUserTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1), )
if mibBuilder.loadTexts: nativeUserTable.setStatus('current')
nativeUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "nativeUserId"))
if mibBuilder.loadTexts: nativeUserEntry.setStatus('current')
nativeUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: nativeUserId.setStatus('current')
nativeUserAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nativeUserAccess.setStatus('current')
nativeUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nativeUserName.setStatus('current')
nativeUserRoleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nativeUserRoleId.setStatus('current')
nativeUserEmailId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nativeUserEmailId.setStatus('current')
nativeUserFixedIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 6), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nativeUserFixedIpAddr.setStatus('current')
nativeUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nativeUserPassword.setStatus('current')
nativeUserNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nativeUserNotes.setStatus('current')
nativeUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nativeUserRowStatus.setStatus('current')
nativeUserRadAcctServId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nativeUserRadAcctServId.setStatus('current')
adminUserTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1), )
if mibBuilder.loadTexts: adminUserTable.setStatus('current')
adminUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "adminUserId"))
if mibBuilder.loadTexts: adminUserEntry.setStatus('current')
adminUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: adminUserId.setStatus('current')
adminUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminUserStatus.setStatus('current')
adminUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminUserName.setStatus('current')
adminUserAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("full", 1), ("intermediate", 2), ("readOnly", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminUserAccess.setStatus('current')
adminUserEmailId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminUserEmailId.setStatus('current')
adminUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminUserPassword.setStatus('current')
adminUserNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminUserNotes.setStatus('current')
adminUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 2, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminUserRowStatus.setStatus('current')
adUsrAccessTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3), )
if mibBuilder.loadTexts: adUsrAccessTable.setStatus('current')
adUsrAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1), ).setIndexNames((0, "BLUESERVER-MIB", "adminUserId"))
if mibBuilder.loadTexts: adUsrAccessEntry.setStatus('current')
adUsrAccessAdminUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessAdminUser.setStatus('current')
adUsrAccessNativeUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessNativeUser.setStatus('current')
adUsrAccessExServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessExServer.setStatus('current')
adUsrAccessAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessAccounting.setStatus('current')
adUsrAccessRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessRoles.setStatus('current')
adUsrAccessDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessDestination.setStatus('current')
adUsrAccessServices = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessServices.setStatus('current')
adUsrAccessVpn = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessVpn.setStatus('current')
adUsrAccessConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessConfiguration.setStatus('current')
adUsrAccessNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessNetwork.setStatus('current')
adUsrAccessReplication = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessReplication.setStatus('current')
adUsrAccessMaintance = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessMaintance.setStatus('current')
adUsrAccessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessStatus.setStatus('current')
adUsrAccessVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessVlans.setStatus('current')
adUsrAccessSchedules = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessSchedules.setStatus('current')
adUsrAccessMacDev = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adUsrAccessMacDev.setStatus('current')
exRdAuthServTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2), )
if mibBuilder.loadTexts: exRdAuthServTable.setStatus('current')
exRdAuthServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1), ).setIndexNames((0, "BLUESERVER-MIB", "exRdAuthServId"))
if mibBuilder.loadTexts: exRdAuthServEntry.setStatus('current')
exRdAuthServId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: exRdAuthServId.setStatus('current')
exRdAuthServState = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServState.setStatus('current')
exRdAuthServName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServName.setStatus('current')
exRdAuthServDefRoleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServDefRoleId.setStatus('current')
exRdAuthServRdAccId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServRdAccId.setStatus('current')
exRdAuthServAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServAddr.setStatus('current')
exRdAuthServPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServPort.setStatus('current')
exRdAuthServSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServSecret.setStatus('current')
exRdAuthServPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServPrecedence.setStatus('current')
exRdAuthServNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServNotes.setStatus('current')
exRdAuthServRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAuthServRowStatus.setStatus('current')
exLdapServTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3), )
if mibBuilder.loadTexts: exLdapServTable.setStatus('current')
exLdapServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1), ).setIndexNames((0, "BLUESERVER-MIB", "exLdapServId"))
if mibBuilder.loadTexts: exLdapServEntry.setStatus('current')
exLdapServId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: exLdapServId.setStatus('current')
exLdapServState = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServState.setStatus('current')
exLdapServName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServName.setStatus('current')
exLdapServDefRoleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServDefRoleId.setStatus('current')
exLdapServRdAccState = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServRdAccState.setStatus('current')
exLdapServRdAccId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServRdAccId.setStatus('current')
exLdapServAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServAddr.setStatus('current')
exLdapServPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServPort.setStatus('current')
exLdapServBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServBase.setStatus('current')
exLdapServUniqueId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServUniqueId.setStatus('current')
exLdapServAccount = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServAccount.setStatus('current')
exLdapServFilters = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 12), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServFilters.setStatus('current')
exLdapServSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 13), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServSecret.setStatus('current')
exLdapServPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServPrecedence.setStatus('current')
exLdapServNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 15), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServNotes.setStatus('current')
exLdapServSsl = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServSsl.setStatus('current')
exLdapServSslServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 18), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServSslServer.setStatus('current')
exLdapServSslClient = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 19), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServSslClient.setStatus('current')
exLdapServRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 3, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exLdapServRowStatus.setStatus('current')
exNtlmServTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4), )
if mibBuilder.loadTexts: exNtlmServTable.setStatus('current')
exNtlmServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1), ).setIndexNames((0, "BLUESERVER-MIB", "exNtlmServId"))
if mibBuilder.loadTexts: exNtlmServEntry.setStatus('current')
exNtlmServId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: exNtlmServId.setStatus('current')
exNtlmServState = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServState.setStatus('current')
exNtlmServName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServName.setStatus('current')
exNtlmServRdAccState = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServRdAccState.setStatus('current')
exNtlmServRdAccId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServRdAccId.setStatus('current')
exNtlmServDefRoleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServDefRoleId.setStatus('current')
exNtlmServDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServDomainName.setStatus('current')
exNtlmServMsdc = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServMsdc.setStatus('current')
exNtlmServMsrpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServMsrpc.setStatus('current')
exNtlmServMsad = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServMsad.setStatus('current')
exNtlmServNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServNotes.setStatus('current')
exNtlmServRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 4, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exNtlmServRowStatus.setStatus('current')
exUserRuleTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5), )
if mibBuilder.loadTexts: exUserRuleTable.setStatus('current')
exUserRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5, 1), ).setIndexNames((0, "BLUESERVER-MIB", "exServId"), (0, "BLUESERVER-MIB", "exUserRuleId"))
if mibBuilder.loadTexts: exUserRuleEntry.setStatus('current')
exServId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: exServId.setStatus('current')
exUserRuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: exUserRuleId.setStatus('current')
exUserRuleAttribute = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exUserRuleAttribute.setStatus('current')
exUserRuleOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exUserRuleOperator.setStatus('current')
exUserRuleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exUserRuleValue.setStatus('current')
exUserRuleRoleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exUserRuleRoleId.setStatus('current')
exUserRuleSeqId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exUserRuleSeqId.setStatus('current')
exUserRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 5, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exUserRuleRowStatus.setStatus('current')
exRdAccServTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6), )
if mibBuilder.loadTexts: exRdAccServTable.setStatus('current')
exRdAccServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6, 1), ).setIndexNames((0, "BLUESERVER-MIB", "exRdAccServId"))
if mibBuilder.loadTexts: exRdAccServEntry.setStatus('current')
exRdAccServId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: exRdAccServId.setStatus('current')
exRdAccServState = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAccServState.setStatus('current')
exRdAccServName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAccServName.setStatus('current')
exRdAccServAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAccServAddr.setStatus('current')
exRdAccServPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAccServPort.setStatus('current')
exRdAccServSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAccServSecret.setStatus('current')
exRdAccServNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAccServNotes.setStatus('current')
exRdAccServRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 6, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: exRdAccServRowStatus.setStatus('current')
ex802AuthServTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7), )
if mibBuilder.loadTexts: ex802AuthServTable.setStatus('current')
ex802AuthServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7, 1), ).setIndexNames((0, "BLUESERVER-MIB", "ex802AuthServId"))
if mibBuilder.loadTexts: ex802AuthServEntry.setStatus('current')
ex802AuthServId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ex802AuthServId.setStatus('current')
ex802AuthServState = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ex802AuthServState.setStatus('current')
ex802AuthServName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ex802AuthServName.setStatus('current')
ex802AuthServAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ex802AuthServAddr.setStatus('current')
ex802AuthServPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ex802AuthServPort.setStatus('current')
ex802AuthServDefaultRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ex802AuthServDefaultRole.setStatus('current')
ex802AuthServNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ex802AuthServNotes.setStatus('current')
ex802AuthServRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 1, 7, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ex802AuthServRowStatus.setStatus('current')
macDevAuthTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 2), )
if mibBuilder.loadTexts: macDevAuthTable.setStatus('current')
macDevAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 2, 1), ).setIndexNames((0, "BLUESERVER-MIB", "macDevAuthId"))
if mibBuilder.loadTexts: macDevAuthEntry.setStatus('current')
macDevAuthId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: macDevAuthId.setStatus('current')
macDevAuthState = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macDevAuthState.setStatus('current')
macDevAuthName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macDevAuthName.setStatus('current')
macDevAuthMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 2, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macDevAuthMac.setStatus('current')
macDevAuthDefaultRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macDevAuthDefaultRole.setStatus('current')
macDevAuthNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 2, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macDevAuthNotes.setStatus('current')
macDevAuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 10, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macDevAuthRowStatus.setStatus('current')
hostTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1), )
if mibBuilder.loadTexts: hostTable.setStatus('current')
hostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "hostId"))
if mibBuilder.loadTexts: hostEntry.setStatus('current')
hostId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hostId.setStatus('current')
hostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostName.setStatus('current')
hostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1, 1, 3), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostAddress.setStatus('current')
hostNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1, 1, 4), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostNetmask.setStatus('current')
hostInvertDest = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostInvertDest.setStatus('current')
hostType = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostType.setStatus('current')
hostNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostNotes.setStatus('current')
hostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostRowStatus.setStatus('current')
hostGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 3, 2), )
if mibBuilder.loadTexts: hostGrpTable.setStatus('current')
hostGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 3, 2, 1), ).setIndexNames((0, "BLUESERVER-MIB", "hostGrpId"))
if mibBuilder.loadTexts: hostGrpEntry.setStatus('current')
hostGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hostGrpId.setStatus('current')
hostGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostGrpName.setStatus('current')
hostGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostGrpRowStatus.setStatus('current')
hostGrpMemTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 3, 3), )
if mibBuilder.loadTexts: hostGrpMemTable.setStatus('current')
hostGrpMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 3, 3, 1), ).setIndexNames((0, "BLUESERVER-MIB", "hostGrpId"), (0, "BLUESERVER-MIB", "hostGrpMemId"))
if mibBuilder.loadTexts: hostGrpMemEntry.setStatus('current')
hostGrpMemId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hostGrpMemId.setStatus('current')
hostGrpMemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 3, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostGrpMemRowStatus.setStatus('current')
serviceTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1), )
if mibBuilder.loadTexts: serviceTable.setStatus('current')
serviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "serviceId"))
if mibBuilder.loadTexts: serviceEntry.setStatus('current')
serviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: serviceId.setStatus('current')
serviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceName.setStatus('current')
servicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: servicePort.setStatus('current')
serviceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceProtocol.setStatus('current')
serviceCosPriorityIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceCosPriorityIn.setStatus('current')
serviceCosPriorityOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceCosPriorityOut.setStatus('current')
serviceCosDscpIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceCosDscpIn.setStatus('current')
serviceCosDscpOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceCosDscpOut.setStatus('current')
serviceNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceNotes.setStatus('current')
serviceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceRowStatus.setStatus('current')
serviceGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 4, 2), )
if mibBuilder.loadTexts: serviceGrpTable.setStatus('current')
serviceGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 4, 2, 1), ).setIndexNames((0, "BLUESERVER-MIB", "serviceGrpId"))
if mibBuilder.loadTexts: serviceGrpEntry.setStatus('current')
serviceGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: serviceGrpId.setStatus('current')
serviceGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceGrpName.setStatus('current')
serviceGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceGrpRowStatus.setStatus('current')
serviceGrpMemTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 4, 3), )
if mibBuilder.loadTexts: serviceGrpMemTable.setStatus('current')
serviceGrpMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 4, 3, 1), ).setIndexNames((0, "BLUESERVER-MIB", "serviceGrpId"), (0, "BLUESERVER-MIB", "serviceGrpMemId"))
if mibBuilder.loadTexts: serviceGrpMemEntry.setStatus('current')
serviceGrpMemId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: serviceGrpMemId.setStatus('current')
serviceGrpMemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 4, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceGrpMemRowStatus.setStatus('current')
policyTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1), )
if mibBuilder.loadTexts: policyTable.setStatus('current')
policyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "roleId"), (0, "BLUESERVER-MIB", "policyId"))
if mibBuilder.loadTexts: policyEntry.setStatus('current')
policyId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: policyId.setStatus('current')
policyServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: policyServiceId.setStatus('current')
policyHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: policyHostId.setStatus('current')
policyAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: policyAction.setStatus('current')
policyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: policyDirection.setStatus('current')
policySeqId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: policySeqId.setStatus('current')
policyVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: policyVlanId.setStatus('current')
policyScheduleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: policyScheduleId.setStatus('current')
policyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 5, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: policyRowStatus.setStatus('current')
exchangeMode = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aggressive", 1), ("main", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: exchangeMode.setStatus('current')
authenticationMethod = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("certificates", 1), ("sharedKeys", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authenticationMethod.setStatus('current')
idleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idleTimeout.setStatus('current')
maxLifeTimeInSecs = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxLifeTimeInSecs.setStatus('current')
maxLifeTimeInKbs = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxLifeTimeInKbs.setStatus('current')
refreshThresholdInSecs = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: refreshThresholdInSecs.setStatus('current')
refreshThresholdInKbs = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: refreshThresholdInKbs.setStatus('current')
minLifeTimeInSecs = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: minLifeTimeInSecs.setStatus('current')
minLifeTimeInKbs = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: minLifeTimeInKbs.setStatus('current')
exModeAggressive = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: exModeAggressive.setStatus('current')
exModeMain = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: exModeMain.setStatus('current')
authMethodCertificates = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authMethodCertificates.setStatus('current')
authMethodPreSharedKeys = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authMethodPreSharedKeys.setStatus('current')
ipsecConfTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14), )
if mibBuilder.loadTexts: ipsecConfTable.setStatus('current')
ipsecConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1), ).setIndexNames((0, "BLUESERVER-MIB", "ipsecConfId"))
if mibBuilder.loadTexts: ipsecConfEntry.setStatus('current')
ipsecConfId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ipsecConfId.setStatus('current')
ipsecConfEnableConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEnableConfiguration.setStatus('current')
ipsecConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfName.setStatus('current')
ipsecConfLocalAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfLocalAuth.setStatus('current')
ipsecConfEspTripleDESWithSHA1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEspTripleDESWithSHA1.setStatus('current')
ipsecConfEspTripleDESWithMD5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEspTripleDESWithMD5.setStatus('current')
ipsecConfEsp56BitDESWithMD5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEsp56BitDESWithMD5.setStatus('current')
ipsecConfEsp56BitDESWithSHA1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEsp56BitDESWithSHA1.setStatus('current')
ipsecConfEsp128BitAESWithMD5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEsp128BitAESWithMD5.setStatus('current')
ipsecConfEsp128BitAESWithSHA1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEsp128BitAESWithSHA1.setStatus('current')
ipsecConfEsp192BitAESWithMD5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEsp192BitAESWithMD5.setStatus('current')
ipsecConfEsp192BitAESWithSHA1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEsp192BitAESWithSHA1.setStatus('current')
ipsecConfEsp256BitAESWithMD5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEsp256BitAESWithMD5.setStatus('current')
ipsecConfEsp256BitAESWithSHA1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfEsp256BitAESWithSHA1.setStatus('current')
ipsecConfDiffieHellmanGrp1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfDiffieHellmanGrp1.setStatus('current')
ipsecConfDiffieHellmanGrp2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfDiffieHellmanGrp2.setStatus('current')
ipsecConfDiffieHellmanGrp5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfDiffieHellmanGrp5.setStatus('current')
ipsecConfPsfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfPsfMode.setStatus('current')
ipsecConfCompressionDeflate = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfCompressionDeflate.setStatus('current')
ipsecConfCompressionLZS = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfCompressionLZS.setStatus('current')
ipsecConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 1, 14, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsecConfRowStatus.setStatus('current')
pptpEnable = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpEnable.setStatus('current')
pptpRemoteIpStartAddr = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2, 2), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpRemoteIpStartAddr.setStatus('current')
pptpRemoteIpEndAddr = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2, 3), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpRemoteIpEndAddr.setStatus('current')
pptpLocalIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2, 4), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpLocalIpAddr.setStatus('current')
pptpEncryption40Bit = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpEncryption40Bit.setStatus('current')
pptpEncryption128Bit = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpEncryption128Bit.setStatus('current')
pptpIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpIdleTimeout.setStatus('current')
pptpLdapPwdAttrName = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpLdapPwdAttrName.setStatus('current')
pptpRoleId = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 2, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpRoleId.setStatus('current')
l2tpEnable = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpEnable.setStatus('current')
l2tpRemoteIpStartAddr = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 5, 2), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpRemoteIpStartAddr.setStatus('current')
l2tpRemoteIpEndAddr = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 5, 3), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpRemoteIpEndAddr.setStatus('current')
l2tpLocalIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 5, 4), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpLocalIpAddr.setStatus('current')
l2tpIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpIdleTimeout.setStatus('current')
l2tpLdapPwdAttrName = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 5, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpLdapPwdAttrName.setStatus('current')
l2tpRoleId = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 5, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpRoleId.setStatus('current')
subnetVpnMode = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subnetVpnMode.setStatus('current')
subnetVpnRtFirstIp = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 3, 2), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subnetVpnRtFirstIp.setStatus('current')
subnetVpnRtLastIp = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 3, 3), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subnetVpnRtLastIp.setStatus('current')
subnetVpnSharedSec = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subnetVpnSharedSec.setStatus('current')
subnetIpConfIdInUse = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 6, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subnetIpConfIdInUse.setStatus('current')
httpPort = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpPort.setStatus('current')
httpRedirect = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpRedirect.setStatus('current')
httpAutoRedirectStatus = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpAutoRedirectStatus.setStatus('current')
httpAutoPause = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpAutoPause.setStatus('current')
httpDefaultUrl = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpDefaultUrl.setStatus('current')
httpLogoutPopup = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpLogoutPopup.setStatus('current')
httpRootCaUrl = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpRootCaUrl.setStatus('current')
httpExServerChoice = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpExServerChoice.setStatus('current')
httpPasswdChangeChoice = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpPasswdChangeChoice.setStatus('current')
httpLangChangeChoice = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpLangChangeChoice.setStatus('current')
httpLoginHelpButton = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpLoginHelpButton.setStatus('current')
httpAttemptWait = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpAttemptWait.setStatus('current')
httpMaxNumOfActiveSess = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpMaxNumOfActiveSess.setStatus('current')
httpAdminACL = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpAdminACL.setStatus('current')
httpRedirectToHostName = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpRedirectToHostName.setStatus('current')
httpLoginAttempts = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpLoginAttempts.setStatus('current')
httpChainCertChangeChoice = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpChainCertChangeChoice.setStatus('current')
statusUpTime = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statusUpTime.setStatus('current')
connectionCheckTime = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionCheckTime.setStatus('current')
apCheckTime = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apCheckTime.setStatus('current')
statusRefreshTime = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statusRefreshTime.setStatus('current')
apSnmpCommunity = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpCommunity.setStatus('current')
autoBkupRate = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoBkupRate.setStatus('current')
autoBkupFtpServName = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoBkupFtpServName.setStatus('current')
autoBkupFtpDestDir = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoBkupFtpDestDir.setStatus('current')
autoBkupFtpServUser = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoBkupFtpServUser.setStatus('current')
autoBkupFtpServPasswd = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoBkupFtpServPasswd.setStatus('current')
tZone = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tZone.setStatus('current')
tMonth = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMonth.setStatus('current')
tDay = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tDay.setStatus('current')
tYear = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tYear.setStatus('current')
tHours = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tHours.setStatus('current')
tMinutes = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMinutes.setStatus('current')
tSeconds = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tSeconds.setStatus('current')
tNtpSync = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNtpSync.setStatus('current')
tNtpServers = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 4, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNtpServers.setStatus('current')
paFixedIpClientAccess = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paFixedIpClientAccess.setStatus('current')
paSMTPServerIp = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 6, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: paSMTPServerIp.setStatus('current')
logMaxLogEntries = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logMaxLogEntries.setStatus('current')
logNoOfDelLogEntries = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logNoOfDelLogEntries.setStatus('current')
logStorage = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("local", 0), ("remote", 1), ("both", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logStorage.setStatus('current')
remoteLog = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteLog.setStatus('current')
sysLogFacility = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogFacility.setStatus('current')
logMaxRemSysLogLevel = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logMaxRemSysLogLevel.setStatus('current')
appLogLevTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 3), )
if mibBuilder.loadTexts: appLogLevTable.setStatus('current')
appLogLevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 3, 1), ).setIndexNames((0, "BLUESERVER-MIB", "appLogLevId"))
if mibBuilder.loadTexts: appLogLevEntry.setStatus('current')
appLogLevId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: appLogLevId.setStatus('current')
appLogLevName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLogLevName.setStatus('current')
appLogLevLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 7, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appLogLevLevel.setStatus('current')
pIntTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1), )
if mibBuilder.loadTexts: pIntTable.setStatus('current')
pIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "pIntId"))
if mibBuilder.loadTexts: pIntEntry.setStatus('current')
pIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pIntId.setStatus('current')
pIntName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntName.setStatus('current')
pIntGetIpFromDhcp = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntGetIpFromDhcp.setStatus('current')
pIntDhcpTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntDhcpTimeout.setStatus('current')
pIntIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 5), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntIpAddress.setStatus('current')
pIntNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 6), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntNetmask.setStatus('current')
pIntGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 7), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntGateway.setStatus('current')
pIntPrimaryDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 8), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntPrimaryDNS.setStatus('current')
pIntSecondaryDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 9), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntSecondaryDNS.setStatus('current')
pIntDefaultDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntDefaultDomain.setStatus('current')
pIntHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntHostName.setStatus('current')
pIntEnableMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntEnableMulticast.setStatus('current')
pIntVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntVlanId.setStatus('current')
pIntVlanInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntVlanInterface.setStatus('current')
pIntProxyArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntProxyArpStatus.setStatus('current')
pIntRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 5, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pIntRowStatus.setStatus('current')
mIntTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1), )
if mibBuilder.loadTexts: mIntTable.setStatus('current')
mIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "mIntId"))
if mibBuilder.loadTexts: mIntEntry.setStatus('current')
mIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: mIntId.setStatus('current')
mIntName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntName.setStatus('current')
mIntEnableDhcpRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntEnableDhcpRelay.setStatus('current')
mIntIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 4), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntIpAddress.setStatus('current')
mIntNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 5), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntNetmask.setStatus('current')
mIntDhcpServerOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("stop", 0), ("start", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntDhcpServerOpt.setStatus('current')
mIntNatAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntNatAddresses.setStatus('current')
mIntMulticastOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntMulticastOpt.setStatus('current')
mIntDhcpStartIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 9), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mIntDhcpStartIpAddr.setStatus('current')
mIntDhcpEndIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 10), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntDhcpEndIpAddr.setStatus('current')
mIntNetbiosNameServ = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 11), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntNetbiosNameServ.setStatus('current')
mIntDnsDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntDnsDomainName.setStatus('current')
mIntDefaultLease = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntDefaultLease.setStatus('current')
mIntMaximumLease = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntMaximumLease.setStatus('current')
mIntDynamicDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("adHoc", 2), ("interim", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntDynamicDNS.setStatus('current')
mIntVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mIntVlanId.setStatus('current')
mIntVlanInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 17), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntVlanInterface.setStatus('current')
mIntProxyArpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntProxyArpStatus.setStatus('current')
mIntRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 1, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mIntRowStatus.setStatus('current')
fixedIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 2), )
if mibBuilder.loadTexts: fixedIpAddrTable.setStatus('current')
fixedIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 2, 1), ).setIndexNames((0, "BLUESERVER-MIB", "mIntId"), (0, "BLUESERVER-MIB", "fixedIpAddrId"))
if mibBuilder.loadTexts: fixedIpAddrEntry.setStatus('current')
fixedIpAddrId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: fixedIpAddrId.setStatus('current')
fixedIpAddrMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fixedIpAddrMac.setStatus('current')
fixedIpAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 2, 1, 3), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fixedIpAddrAddress.setStatus('current')
fixedIpAddrHost = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 2, 1, 4), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fixedIpAddrHost.setStatus('current')
fixedIpAddrRoleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fixedIpAddrRoleId.setStatus('current')
fixedIpAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fixedIpAddrRowStatus.setStatus('current')
natTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 3), )
if mibBuilder.loadTexts: natTable.setStatus('current')
natEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 3, 1), ).setIndexNames((0, "BLUESERVER-MIB", "mIntId"), (0, "BLUESERVER-MIB", "natId"))
if mibBuilder.loadTexts: natEntry.setStatus('current')
natId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: natId.setStatus('current')
natProtectedIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 3, 1, 2), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natProtectedIp.setStatus('current')
natManagedIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 3, 1, 3), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natManagedIp.setStatus('current')
natRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 8, 4, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natRowStatus.setStatus('current')
heartBeatInterval = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 8, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: heartBeatInterval.setStatus('current')
noOfFailedBeats = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 8, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: noOfFailedBeats.setStatus('current')
machineRole = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: machineRole.setStatus('current')
genSnapshot = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genSnapshot.setStatus('current')
mobilityMode = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mobilityMode.setStatus('current')
mobilityMeshKey = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 7, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mobilityMeshKey.setStatus('current')
slaveTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 9, 3), )
if mibBuilder.loadTexts: slaveTable.setStatus('current')
slaveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 9, 3, 1), ).setIndexNames((0, "BLUESERVER-MIB", "slaveId"))
if mibBuilder.loadTexts: slaveEntry.setStatus('current')
slaveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: slaveId.setStatus('current')
slaveEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slaveEnabled.setStatus('current')
slaveAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 9, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slaveAddress.setStatus('current')
slaveNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 9, 3, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slaveNotes.setStatus('current')
slaveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 9, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slaveRowStatus.setStatus('current')
slaveMobility = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 9, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slaveMobility.setStatus('current')
connectionTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1), )
if mibBuilder.loadTexts: connectionTable.setStatus('current')
connectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "connectionId"))
if mibBuilder.loadTexts: connectionEntry.setStatus('current')
connectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: connectionId.setStatus('current')
connectionName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionName.setStatus('current')
connectionIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 3), BlueIpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionIp.setStatus('current')
connectionMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionMac.setStatus('current')
connectionRoleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionRoleId.setStatus('current')
connectionUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionUserId.setStatus('current')
connectionLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 7), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionLoginTime.setStatus('current')
connectionChecked = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 8), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionChecked.setStatus('current')
connectionBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionBytes.setStatus('current')
connectionCurRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionCurRate.setStatus('current')
connectionExpiry = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionExpiry.setStatus('current')
connectionDev = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 11))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionDev.setStatus('current')
connectionHost = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionHost.setStatus('current')
connectionUnReg = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionUnReg.setStatus('current')
connectionAP = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionAP.setStatus('current')
connectionLoginAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionLoginAttempt.setStatus('current')
connectionLoginAttemptCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionLoginAttemptCnt.setStatus('current')
connectionRoamMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 10, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectionRoamMac.setStatus('current')
roleTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1), )
if mibBuilder.loadTexts: roleTable.setStatus('current')
roleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "roleId"))
if mibBuilder.loadTexts: roleEntry.setStatus('current')
roleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: roleId.setStatus('current')
roleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleName.setStatus('current')
roleType = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleType.setStatus('current')
roleQosRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosRate.setStatus('current')
roleQosQnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosQnt.setStatus('current')
roleVpn = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("pptp", 2), ("modarate", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleVpn.setStatus('current')
roleInherit = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleInherit.setStatus('current')
roleUnGuestLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleUnGuestLogin.setStatus('current')
roleUnUserLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleUnUserLogin.setStatus('current')
roleNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleNotes.setStatus('current')
roleQosUserIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosUserIn.setStatus('current')
roleQosUserOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosUserOut.setStatus('current')
roleQosPriorityIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosPriorityIn.setStatus('current')
roleQosPriorityOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosPriorityOut.setStatus('current')
roleQosPriInOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosPriInOverride.setStatus('current')
roleQosPriOutOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosPriOutOverride.setStatus('current')
roleQosDscpIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 18), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosDscpIn.setStatus('current')
roleQosDscpOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 19), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosDscpOut.setStatus('current')
roleQosDscpInOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosDscpInOverride.setStatus('current')
roleQosDscpOutOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosDscpOutOverride.setStatus('current')
roleQosRateOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 22), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosRateOut.setStatus('current')
roleQosRateQntOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleQosRateQntOut.setStatus('current')
roleVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 24), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleVlanId.setStatus('current')
roleRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleRedirect.setStatus('current')
roleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 11, 1, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: roleRowStatus.setStatus('current')
serviceMgmtTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 12, 1), )
if mibBuilder.loadTexts: serviceMgmtTable.setStatus('current')
serviceMgmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 12, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "serviceMgmtId"))
if mibBuilder.loadTexts: serviceMgmtEntry.setStatus('current')
serviceMgmtId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: serviceMgmtId.setStatus('current')
serviceMgmtName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 12, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceMgmtName.setStatus('current')
serviceMgmtOptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("start", 1), ("stop", 2), ("restart", 3), ("noopt", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serviceMgmtOptStatus.setStatus('current')
serviceMgmtDesr = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 12, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceMgmtDesr.setStatus('current')
userSumNoOfUsr = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userSumNoOfUsr.setStatus('current')
userSumNoOfLogdInUsr = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userSumNoOfLogdInUsr.setStatus('current')
userSumNoOfLogdVPNUsr = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userSumNoOfLogdVPNUsr.setStatus('current')
usmSumTtlBandWthInUse = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usmSumTtlBandWthInUse.setStatus('current')
sysStatCpuUtil = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStatCpuUtil.setStatus('current')
sysStatMemUtil = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStatMemUtil.setStatus('current')
sysStatTotalDiskSpace = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStatTotalDiskSpace.setStatus('current')
sysStatDiskSpaceUsed = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStatDiskSpaceUsed.setStatus('current')
sysStatDiskSpaceFree = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStatDiskSpaceFree.setStatus('current')
sysStatLOgSpaceUsed = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStatLOgSpaceUsed.setStatus('current')
sysStatNeedRestart = MibScalar((1, 3, 6, 1, 4, 1, 9967, 1, 13, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStatNeedRestart.setStatus('current')
certTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1), )
if mibBuilder.loadTexts: certTable.setStatus('current')
certEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "certId"))
if mibBuilder.loadTexts: certEntry.setStatus('current')
certId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: certId.setStatus('current')
certType = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certType.setStatus('current')
certSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certSubject.setStatus('current')
certStartDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certStartDate.setStatus('current')
certEndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certEndDate.setStatus('current')
certIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certIssuer.setStatus('current')
certName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certName.setStatus('current')
certOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certOrg.setStatus('current')
certContent = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certContent.setStatus('current')
certPkey = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certPkey.setStatus('current')
certPkeyAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 11), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certPkeyAlgo.setStatus('current')
certPkeySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certPkeySize.setStatus('current')
certSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 13), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certSerial.setStatus('current')
certSignAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 14), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certSignAlgo.setStatus('current')
certVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certVersion.setStatus('current')
certRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 6, 4, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: certRowStatus.setStatus('current')
vlanTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 14, 1), )
if mibBuilder.loadTexts: vlanTable.setStatus('current')
vlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 14, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "vlanRowId"))
if mibBuilder.loadTexts: vlanEntry.setStatus('current')
vlanRowId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vlanRowId.setStatus('current')
vlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanName.setStatus('current')
vlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanId.setStatus('current')
vlanNotes = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 1, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanNotes.setStatus('current')
vlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanRowStatus.setStatus('current')
vlanGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 14, 2), )
if mibBuilder.loadTexts: vlanGrpTable.setStatus('current')
vlanGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 14, 2, 1), ).setIndexNames((0, "BLUESERVER-MIB", "vlanGrpId"))
if mibBuilder.loadTexts: vlanGrpEntry.setStatus('current')
vlanGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vlanGrpId.setStatus('current')
vlanGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanGrpName.setStatus('current')
vlanGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanGrpRowStatus.setStatus('current')
vlanGrpMemTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 14, 3), )
if mibBuilder.loadTexts: vlanGrpMemTable.setStatus('current')
vlanGrpMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 14, 3, 1), ).setIndexNames((0, "BLUESERVER-MIB", "vlanGrpId"), (0, "BLUESERVER-MIB", "vlanGrpMemId"))
if mibBuilder.loadTexts: vlanGrpMemEntry.setStatus('current')
vlanGrpMemId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vlanGrpMemId.setStatus('current')
vlanGrpMemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 14, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanGrpMemRowStatus.setStatus('current')
schedTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1), )
if mibBuilder.loadTexts: schedTable.setStatus('current')
schedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "schedRowId"))
if mibBuilder.loadTexts: schedEntry.setStatus('current')
schedRowId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: schedRowId.setStatus('current')
schedName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedName.setStatus('current')
schedAllDay = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedAllDay.setStatus('current')
schedEveryDay = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedEveryDay.setStatus('current')
schedStartDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 5), LocalDateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedStartDateAndTime.setStatus('current')
schedEndDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 6), LocalDateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedEndDateAndTime.setStatus('current')
schedMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedMonth.setStatus('current')
schedWeekDay = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedWeekDay.setStatus('current')
schedDayOfMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedDayOfMonth.setStatus('current')
schedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedRowStatus.setStatus('current')
schedGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 15, 2), )
if mibBuilder.loadTexts: schedGrpTable.setStatus('current')
schedGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 15, 2, 1), ).setIndexNames((0, "BLUESERVER-MIB", "schedGrpId"))
if mibBuilder.loadTexts: schedGrpEntry.setStatus('current')
schedGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: schedGrpId.setStatus('current')
schedGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedGrpName.setStatus('current')
schedGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedGrpRowStatus.setStatus('current')
schedGrpMemTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 15, 3), )
if mibBuilder.loadTexts: schedGrpMemTable.setStatus('current')
schedGrpMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 15, 3, 1), ).setIndexNames((0, "BLUESERVER-MIB", "schedGrpId"), (0, "BLUESERVER-MIB", "schedGrpMemId"))
if mibBuilder.loadTexts: schedGrpMemEntry.setStatus('current')
schedGrpMemId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: schedGrpMemId.setStatus('current')
schedGrpMemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 15, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: schedGrpMemRowStatus.setStatus('current')
snmpTrapMgmtTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 1), )
if mibBuilder.loadTexts: snmpTrapMgmtTable.setStatus('current')
snmpTrapMgmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "snmpTrapMgmtId"))
if mibBuilder.loadTexts: snmpTrapMgmtEntry.setStatus('current')
snmpTrapMgmtId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: snmpTrapMgmtId.setStatus('current')
snmpTrapMgmtIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 1, 1, 2), BlueIpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpTrapMgmtIpAddress.setStatus('current')
snmpTrapMgmtCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpTrapMgmtCommunity.setStatus('current')
snmpTrapMgmtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpTrapMgmtRowStatus.setStatus('current')
blueEventTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 2), )
if mibBuilder.loadTexts: blueEventTable.setStatus('current')
blueEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 2, 1), ).setIndexNames((0, "BLUESERVER-MIB", "btId"))
if mibBuilder.loadTexts: blueEventEntry.setStatus('current')
btId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: btId.setStatus('current')
btName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btName.setStatus('current')
btEventOptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 8, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: btEventOptStatus.setStatus('current')
stThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 9967, 1, 7, 9, 1), )
if mibBuilder.loadTexts: stThresholdTable.setStatus('current')
stThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9967, 1, 7, 9, 1, 1), ).setIndexNames((0, "BLUESERVER-MIB", "stThresholdId"))
if mibBuilder.loadTexts: stThresholdEntry.setStatus('current')
stThresholdId = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: stThresholdId.setStatus('current')
stThresholdAttrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stThresholdAttrName.setStatus('current')
stThresholdToLogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 9, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stThresholdToLogMessage.setStatus('current')
stThresholdToSendTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 9, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stThresholdToSendTrap.setStatus('current')
stThresholdToFailover = MibTableColumn((1, 3, 6, 1, 4, 1, 9967, 1, 7, 9, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stThresholdToFailover.setStatus('current')
ntyobjLevel = MibScalar((1, 3, 6, 1, 4, 1, 9967, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ntyobjLevel.setStatus('current')
ntyobjName = MibScalar((1, 3, 6, 1, 4, 1, 9967, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ntyobjName.setStatus('current')
ntyobjDesc = MibScalar((1, 3, 6, 1, 4, 1, 9967, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ntyobjDesc.setStatus('current')
ntyobjOID = MibScalar((1, 3, 6, 1, 4, 1, 9967, 2, 1, 4), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ntyobjOID.setStatus('current')
ntyobjValue = MibScalar((1, 3, 6, 1, 4, 1, 9967, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ntyobjValue.setStatus('current')
blueGeneralTraps0 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 2, 4, 0))
btLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 4, 0, 1)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btLinkUp.setStatus('current')
btLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 4, 0, 2)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btLinkDown.setStatus('current')
btSystemGeneralTrap = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 4, 0, 3)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btSystemGeneralTrap.setStatus('current')
blueConfigTraps0 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0))
cctSystemConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 1)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctSystemConfChange.setStatus('current')
cctUserConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 2)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctUserConfChange.setStatus('current')
cctExternalServConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 3)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctExternalServConfChange.setStatus('current')
cctRoleConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 4)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctRoleConfChange.setStatus('current')
cctDestinationConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 5)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctDestinationConfChange.setStatus('current')
cctServiceConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 6)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctServiceConfChange.setStatus('current')
cctNetworkConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 7)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctNetworkConfChange.setStatus('current')
cctVpnConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 8)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctVpnConfChange.setStatus('current')
cctMobilityConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 9)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctMobilityConfChange.setStatus('current')
cctProcessConfChange = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 1, 0, 10)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: cctProcessConfChange.setStatus('current')
blueFailureTraps0 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 2, 2, 0))
btSysGeneralFailure = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 2, 0, 1)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btSysGeneralFailure.setStatus('current')
btUserLoginFailure = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 2, 0, 2)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btUserLoginFailure.setStatus('current')
btProcessFailure = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 2, 0, 3)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btProcessFailure.setStatus('current')
btAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 2, 0, 4)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btAuthFailure.setStatus('current')
btSystemFailover = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 2, 0, 5)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjName"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btSystemFailover.setStatus('current')
blueThresholdTraps0 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 2, 2, 3, 0))
btConditionalEvent = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 3, 0, 1)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjOID"), ("BLUESERVER-MIB", "ntyobjValue"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btConditionalEvent.setStatus('current')
btCpuLoadEvent = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 3, 0, 2)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjOID"), ("BLUESERVER-MIB", "ntyobjValue"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btCpuLoadEvent.setStatus('current')
btMemSwapUsageEvent = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 3, 0, 3)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjOID"), ("BLUESERVER-MIB", "ntyobjValue"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btMemSwapUsageEvent.setStatus('current')
btDiskUsageEvent = NotificationType((1, 3, 6, 1, 4, 1, 9967, 2, 2, 3, 0, 4)).setObjects(("BLUESERVER-MIB", "ntyobjLevel"), ("BLUESERVER-MIB", "ntyobjOID"), ("BLUESERVER-MIB", "ntyobjValue"), ("BLUESERVER-MIB", "ntyobjDesc"))
if mibBuilder.loadTexts: btDiskUsageEvent.setStatus('current')
mibBuilder.exportSymbols("BLUESERVER-MIB", l2tpIdleTimeout=l2tpIdleTimeout, nativeUserAccess=nativeUserAccess, mIntTable=mIntTable, tZone=tZone, mIntRowStatus=mIntRowStatus, ex802AuthServPort=ex802AuthServPort, mIntDhcpEndIpAddr=mIntDhcpEndIpAddr, paSMTPServerIp=paSMTPServerIp, appLogLevTable=appLogLevTable, vlanGrpTable=vlanGrpTable, l2tpRoleId=l2tpRoleId, hostInvertDest=hostInvertDest, certificate=certificate, exRdAuthServAddr=exRdAuthServAddr, ipsecConfCompressionLZS=ipsecConfCompressionLZS, pIntId=pIntId, stThresholdToFailover=stThresholdToFailover, serviceGrpMemEntry=serviceGrpMemEntry, noOfFailedBeats=noOfFailedBeats, pptpLocalIpAddr=pptpLocalIpAddr, exModeMain=exModeMain, mIntNatAddresses=mIntNatAddresses, exNtlmServMsdc=exNtlmServMsdc, certEntry=certEntry, ipsecConfEnableConfiguration=ipsecConfEnableConfiguration, service=service, time=time, failover=failover, roleQosDscpInOverride=roleQosDscpInOverride, certSubject=certSubject, adUsrAccessNativeUser=adUsrAccessNativeUser, cctServiceConfChange=cctServiceConfChange, serviceGrpMemRowStatus=serviceGrpMemRowStatus, ex802AuthServAddr=ex802AuthServAddr, serviceMgmtDesr=serviceMgmtDesr, LocalDateAndTime=LocalDateAndTime, exLdapServPrecedence=exLdapServPrecedence, exRdAccServSecret=exRdAccServSecret, httpAutoRedirectStatus=httpAutoRedirectStatus, exUserRuleSeqId=exUserRuleSeqId, ipsecConfEntry=ipsecConfEntry, sysStatMemUtil=sysStatMemUtil, connectionTable=connectionTable, statusRefreshTime=statusRefreshTime, btProcessFailure=btProcessFailure, BlueIpAddress=BlueIpAddress, roleId=roleId, tMonth=tMonth, slaveEnabled=slaveEnabled, roleNotes=roleNotes, blueNotification=blueNotification, exLdapServSslServer=exLdapServSslServer, cctRoleConfChange=cctRoleConfChange, schedEveryDay=schedEveryDay, certPkeyAlgo=certPkeyAlgo, btDiskUsageEvent=btDiskUsageEvent, ipsecConfId=ipsecConfId, exUserRuleRowStatus=exUserRuleRowStatus, serviceProtocol=serviceProtocol, exNtlmServDomainName=exNtlmServDomainName, cctExternalServConfChange=cctExternalServConfChange, serviceName=serviceName, certTable=certTable, nativeUserId=nativeUserId, fixedIpAddrHost=fixedIpAddrHost, heartBeatInterval=heartBeatInterval, pIntPrimaryDNS=pIntPrimaryDNS, nativeUserRowStatus=nativeUserRowStatus, stThresholdToLogMessage=stThresholdToLogMessage, macDevAuthName=macDevAuthName, adUsrAccessNetwork=adUsrAccessNetwork, httpLoginHelpButton=httpLoginHelpButton, ipsecConfDiffieHellmanGrp1=ipsecConfDiffieHellmanGrp1, exLdapServEntry=exLdapServEntry, vlanGrpRowStatus=vlanGrpRowStatus, vlanGrpMemEntry=vlanGrpMemEntry, roleQosPriorityOut=roleQosPriorityOut, exUserRuleOperator=exUserRuleOperator, pptp=pptp, exNtlmServEntry=exNtlmServEntry, ipsecConfEsp56BitDESWithMD5=ipsecConfEsp56BitDESWithMD5, adUsrAccessVpn=adUsrAccessVpn, ipsecConfEspTripleDESWithMD5=ipsecConfEspTripleDESWithMD5, roleEntry=roleEntry, schedRowId=schedRowId, httpChainCertChangeChoice=httpChainCertChangeChoice, authMethodPreSharedKeys=authMethodPreSharedKeys, fixedIpAddrTable=fixedIpAddrTable, exLdapServAddr=exLdapServAddr, statistics=statistics, misc=misc, sysStatTotalDiskSpace=sysStatTotalDiskSpace, hostNotes=hostNotes, exRdAccServName=exRdAccServName, ipsecConfRowStatus=ipsecConfRowStatus, userSumNoOfLogdVPNUsr=userSumNoOfLogdVPNUsr, certOrg=certOrg, pIntEntry=pIntEntry, exLdapServState=exLdapServState, users=users, exRdAccServNotes=exRdAccServNotes, pIntTable=pIntTable, pIntRowStatus=pIntRowStatus, tSeconds=tSeconds, exLdapServId=exLdapServId, mobility=mobility, fixedIpAddrRoleId=fixedIpAddrRoleId, exRdAuthServName=exRdAuthServName, policySeqId=policySeqId, httpLoginAttempts=httpLoginAttempts, natManagedIp=natManagedIp, roleQosUserIn=roleQosUserIn, mIntEntry=mIntEntry, adminUserName=adminUserName, exNtlmServDefRoleId=exNtlmServDefRoleId, blueGeneralTraps=blueGeneralTraps, userSummary=userSummary, serviceMgmtId=serviceMgmtId, userSumNoOfUsr=userSumNoOfUsr, genSnapshot=genSnapshot, nativeUserTable=nativeUserTable, connectionExpiry=connectionExpiry, schedWeekDay=schedWeekDay, serviceGrpMemTable=serviceGrpMemTable, minLifeTimeInSecs=minLifeTimeInSecs, snmpTrapMgmtEntry=snmpTrapMgmtEntry, hostGrpMemRowStatus=hostGrpMemRowStatus, hostGrpEntry=hostGrpEntry, authMethodCertificates=authMethodCertificates, exModeAggressive=exModeAggressive, schedGrpRowStatus=schedGrpRowStatus, exRdAccServState=exRdAccServState, mIntVlanInterface=mIntVlanInterface, connectionIp=connectionIp, tDay=tDay, tMinutes=tMinutes, natTable=natTable, connection=connection, stThresholdId=stThresholdId, exNtlmServState=exNtlmServState, cctProcessConfChange=cctProcessConfChange, exLdapServTable=exLdapServTable, certContent=certContent, policyTable=policyTable, pptpLdapPwdAttrName=pptpLdapPwdAttrName, roleQosDscpIn=roleQosDscpIn, snmpTrapMgmtTable=snmpTrapMgmtTable, exAuthServer=exAuthServer, vlanRowStatus=vlanRowStatus, l2tpRemoteIpEndAddr=l2tpRemoteIpEndAddr, ipsecConfEsp192BitAESWithSHA1=ipsecConfEsp192BitAESWithSHA1, roleType=roleType, remoteLog=remoteLog, certSerial=certSerial, exLdapServAccount=exLdapServAccount, exNtlmServName=exNtlmServName, ex802AuthServEntry=ex802AuthServEntry, ntyobjOID=ntyobjOID, btUserLoginFailure=btUserLoginFailure, policyScheduleId=policyScheduleId, pIntVlanInterface=pIntVlanInterface, schedGrpMemId=schedGrpMemId, macDevAuthMac=macDevAuthMac, blueConfigTraps0=blueConfigTraps0, exRdAccServPort=exRdAccServPort, pptpEncryption40Bit=pptpEncryption40Bit, snmpTrapConf=snmpTrapConf, exLdapServRdAccId=exLdapServRdAccId, btConditionalEvent=btConditionalEvent, subnetVpnRtFirstIp=subnetVpnRtFirstIp, exRdAuthServEntry=exRdAuthServEntry, serviceId=serviceId, certName=certName, snmpTrapMgmtId=snmpTrapMgmtId, roleQosDscpOut=roleQosDscpOut, roleQosPriorityIn=roleQosPriorityIn, exUserRuleRoleId=exUserRuleRoleId, sysStatDiskSpaceUsed=sysStatDiskSpaceUsed, serviceMgmt=serviceMgmt, roleQosUserOut=roleQosUserOut, mIntMaximumLease=mIntMaximumLease, vlan=vlan, macDevAuthDefaultRole=macDevAuthDefaultRole, pIntIpAddress=pIntIpAddress, connectionDev=connectionDev, policy=policy, httpExServerChoice=httpExServerChoice, exLdapServDefRoleId=exLdapServDefRoleId, roleQosPriOutOverride=roleQosPriOutOverride, maxLifeTimeInSecs=maxLifeTimeInSecs, exNtlmServRowStatus=exNtlmServRowStatus, btSystemGeneralTrap=btSystemGeneralTrap, hostGrpTable=hostGrpTable, hostEntry=hostEntry, connectionUserId=connectionUserId, exRdAccServRowStatus=exRdAccServRowStatus, exNtlmServRdAccId=exNtlmServRdAccId, mIntDhcpStartIpAddr=mIntDhcpStartIpAddr, connectionHost=connectionHost, hostGrpMemId=hostGrpMemId, mIntDynamicDNS=mIntDynamicDNS, sysStatLOgSpaceUsed=sysStatLOgSpaceUsed, vlanGrpId=vlanGrpId, blueThresholdTraps0=blueThresholdTraps0, adUsrAccessSchedules=adUsrAccessSchedules, adUsrAccessServices=adUsrAccessServices, roleName=roleName, adminUserEmailId=adminUserEmailId, httpLogoutPopup=httpLogoutPopup, slaveEntry=slaveEntry, userSumNoOfLogdInUsr=userSumNoOfLogdInUsr, adUsrAccessExServer=adUsrAccessExServer, snmpConf=snmpConf, serviceGrpRowStatus=serviceGrpRowStatus, ipsecConfEsp192BitAESWithMD5=ipsecConfEsp192BitAESWithMD5, blueEventTable=blueEventTable, macDevAuthNotes=macDevAuthNotes, nativeUserEmailId=nativeUserEmailId, vpn=vpn, exRdAuthServDefRoleId=exRdAuthServDefRoleId, serviceMgmtEntry=serviceMgmtEntry, exRdAuthServPort=exRdAuthServPort, exUserRuleValue=exUserRuleValue, mIntDnsDomainName=mIntDnsDomainName, policyId=policyId, ipsecConfEsp56BitDESWithSHA1=ipsecConfEsp56BitDESWithSHA1, pptpEncryption128Bit=pptpEncryption128Bit, blueServer=blueServer, ex802AuthServTable=ex802AuthServTable, configuration=configuration, blueGeneralTraps0=blueGeneralTraps0, adUsrAccessDestination=adUsrAccessDestination, certType=certType, servicePort=servicePort, connectionLoginAttemptCnt=connectionLoginAttemptCnt, cctUserConfChange=cctUserConfChange, ipsecConfLocalAuth=ipsecConfLocalAuth, exUserRuleAttribute=exUserRuleAttribute, stThresholdAttrName=stThresholdAttrName, connectionEntry=connectionEntry, ipsecConfCompressionDeflate=ipsecConfCompressionDeflate, snmpTrapMgmtCommunity=snmpTrapMgmtCommunity, btId=btId, exLdapServUniqueId=exLdapServUniqueId, exLdapServRdAccState=exLdapServRdAccState, hostTable=hostTable, btCpuLoadEvent=btCpuLoadEvent, nativeUserEntry=nativeUserEntry, ipsecConfEsp128BitAESWithSHA1=ipsecConfEsp128BitAESWithSHA1, serviceCosDscpOut=serviceCosDscpOut, httpMaxNumOfActiveSess=httpMaxNumOfActiveSess, logMaxRemSysLogLevel=logMaxRemSysLogLevel, exNtlmServId=exNtlmServId, slaveId=slaveId)
mibBuilder.exportSymbols("BLUESERVER-MIB", ipsecConfEsp256BitAESWithSHA1=ipsecConfEsp256BitAESWithSHA1, adUsrAccessVlans=adUsrAccessVlans, sysLogFacility=sysLogFacility, mobilityMode=mobilityMode, roleRowStatus=roleRowStatus, vlanGrpMemRowStatus=vlanGrpMemRowStatus, exRdAuthServId=exRdAuthServId, schedGrpMemTable=schedGrpMemTable, certStartDate=certStartDate, slaveTable=slaveTable, serviceMgmtOptStatus=serviceMgmtOptStatus, serviceCosPriorityIn=serviceCosPriorityIn, connectionChecked=connectionChecked, cctSystemConfChange=cctSystemConfChange, sysStatDiskSpaceFree=sysStatDiskSpaceFree, hostGrpMemEntry=hostGrpMemEntry, exRdAuthServPrecedence=exRdAuthServPrecedence, schedGrpTable=schedGrpTable, btMemSwapUsageEvent=btMemSwapUsageEvent, adUsrAccessEntry=adUsrAccessEntry, exRdAccServAddr=exRdAccServAddr, adUsrAccessReplication=adUsrAccessReplication, apCheckTime=apCheckTime, fixedIpAddrMac=fixedIpAddrMac, connectionCurRate=connectionCurRate, pptpRoleId=pptpRoleId, btLinkDown=btLinkDown, serviceCosDscpIn=serviceCosDscpIn, exLdapServSsl=exLdapServSsl, adminUserEntry=adminUserEntry, policyVlanId=policyVlanId, autoBkupRate=autoBkupRate, certPkeySize=certPkeySize, stThresholdEntry=stThresholdEntry, vlanGrpMemId=vlanGrpMemId, l2tpRemoteIpStartAddr=l2tpRemoteIpStartAddr, httpPasswdChangeChoice=httpPasswdChangeChoice, authentication=authentication, refreshThresholdInSecs=refreshThresholdInSecs, schedAllDay=schedAllDay, serviceGrpId=serviceGrpId, httpLangChangeChoice=httpLangChangeChoice, blueThresholdTraps=blueThresholdTraps, ntyobjDesc=ntyobjDesc, natRowStatus=natRowStatus, hostType=hostType, adUsrAccessMaintance=adUsrAccessMaintance, policyServiceId=policyServiceId, machineRole=machineRole, confLogGroup=confLogGroup, subnetVpn=subnetVpn, schedGrpId=schedGrpId, fixedIpAddrRowStatus=fixedIpAddrRowStatus, serviceMgmtTable=serviceMgmtTable, schedTable=schedTable, blueEventEntry=blueEventEntry, exRdAccServEntry=exRdAccServEntry, fixedIpAddrAddress=fixedIpAddrAddress, httpAdminACL=httpAdminACL, exRdAccServId=exRdAccServId, adminUserRowStatus=adminUserRowStatus, fixedIpAddrId=fixedIpAddrId, PYSNMP_MODULE_ID=blueSocket, BlueMacAddress=BlueMacAddress, btSysGeneralFailure=btSysGeneralFailure, serviceCosPriorityOut=serviceCosPriorityOut, schedName=schedName, nativeUserRadAcctServId=nativeUserRadAcctServId, macDevAuthEntry=macDevAuthEntry, exRdAuthServState=exRdAuthServState, serviceGrpName=serviceGrpName, btAuthFailure=btAuthFailure, logMaxLogEntries=logMaxLogEntries, snmpTrapMgmtIpAddress=snmpTrapMgmtIpAddress, tNtpSync=tNtpSync, certPkey=certPkey, mIntVlanId=mIntVlanId, certVersion=certVersion, exLdapServPort=exLdapServPort, sysStatCpuUtil=sysStatCpuUtil, pIntGetIpFromDhcp=pIntGetIpFromDhcp, mIntNetmask=mIntNetmask, slaveNotes=slaveNotes, managed=managed, maxLifeTimeInKbs=maxLifeTimeInKbs, httpRootCaUrl=httpRootCaUrl, serviceTable=serviceTable, ipsecConfEspTripleDESWithSHA1=ipsecConfEspTripleDESWithSHA1, mIntNetbiosNameServ=mIntNetbiosNameServ, nativeUserNotes=nativeUserNotes, ntyobjName=ntyobjName, httpAttemptWait=httpAttemptWait, stThresholdTable=stThresholdTable, ipsecConfTable=ipsecConfTable, certIssuer=certIssuer, ipsecConfEsp256BitAESWithMD5=ipsecConfEsp256BitAESWithMD5, blueFailureTraps=blueFailureTraps, appLogLevName=appLogLevName, connectionLoginAttempt=connectionLoginAttempt, blueTraps=blueTraps, exLdapServBase=exLdapServBase, exRdAuthServNotes=exRdAuthServNotes, sysStatNeedRestart=sysStatNeedRestart, appLogLevLevel=appLogLevLevel, macDevAuthId=macDevAuthId, exchangeMode=exchangeMode, cctNetworkConfChange=cctNetworkConfChange, mIntMulticastOpt=mIntMulticastOpt, roleInherit=roleInherit, hostRowStatus=hostRowStatus, mIntName=mIntName, l2tpLdapPwdAttrName=l2tpLdapPwdAttrName, slaveAddress=slaveAddress, httpPort=httpPort, statusUpTime=statusUpTime, connectionUnReg=connectionUnReg, exServId=exServId, exUserRuleTable=exUserRuleTable, mIntId=mIntId, roles=roles, publicAccess=publicAccess, ex802AuthServId=ex802AuthServId, usmSumTtlBandWthInUse=usmSumTtlBandWthInUse, slaveMobility=slaveMobility, vlanNotes=vlanNotes, exLdapServSslClient=exLdapServSslClient, vlanGrpMemTable=vlanGrpMemTable, adUsrAccessConfiguration=adUsrAccessConfiguration, ex802AuthServRowStatus=ex802AuthServRowStatus, mIntDhcpServerOpt=mIntDhcpServerOpt, systemStats=systemStats, roleQosRateQntOut=roleQosRateQntOut, ntyobjLevel=ntyobjLevel, logNoOfDelLogEntries=logNoOfDelLogEntries, certSignAlgo=certSignAlgo, certId=certId, notifyObjects=notifyObjects, adUsrAccessStatus=adUsrAccessStatus, vlanRowId=vlanRowId, exRdAuthServRdAccId=exRdAuthServRdAccId, cctVpnConfChange=cctVpnConfChange, pIntNetmask=pIntNetmask, pIntDefaultDomain=pIntDefaultDomain, protected=protected, destination=destination, connectionId=connectionId, roleTable=roleTable, roleRedirect=roleRedirect, adminUserAccess=adminUserAccess, fixedIpAddrEntry=fixedIpAddrEntry, mIntProxyArpStatus=mIntProxyArpStatus, pptpEnable=pptpEnable, exNtlmServNotes=exNtlmServNotes, policyAction=policyAction, autoBkupFtpDestDir=autoBkupFtpDestDir, pIntProxyArpStatus=pIntProxyArpStatus, nativeUserName=nativeUserName, vlanEntry=vlanEntry, vlanId=vlanId, adUsrAccessTable=adUsrAccessTable, connectionRoamMac=connectionRoamMac, roleQosQnt=roleQosQnt, schedRowStatus=schedRowStatus, natProtectedIp=natProtectedIp, ex802AuthServState=ex802AuthServState, adUsrAccessAdminUser=adUsrAccessAdminUser, schedGrpEntry=schedGrpEntry, adminUserPassword=adminUserPassword, subnetVpnSharedSec=subnetVpnSharedSec, schedGrpMemRowStatus=schedGrpMemRowStatus, blueConfigTraps=blueConfigTraps, pptpIdleTimeout=pptpIdleTimeout, hostGrpMemTable=hostGrpMemTable, schedStartDateAndTime=schedStartDateAndTime, pIntVlanId=pIntVlanId, serviceNotes=serviceNotes, serviceGrpMemId=serviceGrpMemId, roleQosRateOut=roleQosRateOut, policyHostId=policyHostId, logStorage=logStorage, hostGrpId=hostGrpId, ipsecConfDiffieHellmanGrp5=ipsecConfDiffieHellmanGrp5, subnetVpnMode=subnetVpnMode, mIntIpAddress=mIntIpAddress, macDevAuthTable=macDevAuthTable, apSnmpCommunity=apSnmpCommunity, roleUnUserLogin=roleUnUserLogin, macDevAuthState=macDevAuthState, refreshThresholdInKbs=refreshThresholdInKbs, subnetIpConfIdInUse=subnetIpConfIdInUse, pIntDhcpTimeout=pIntDhcpTimeout, roleQosDscpOutOverride=roleQosDscpOutOverride, policyRowStatus=policyRowStatus, httpAutoPause=httpAutoPause, httpRedirectToHostName=httpRedirectToHostName, autoBackup=autoBackup, mIntDefaultLease=mIntDefaultLease, snmpTrapMgmtRowStatus=snmpTrapMgmtRowStatus, mobilityMeshKey=mobilityMeshKey, macDevAuthRowStatus=macDevAuthRowStatus, exUserRuleId=exUserRuleId, hostName=hostName, pIntGateway=pIntGateway, adminUserStatus=adminUserStatus, ipsecConfEsp128BitAESWithMD5=ipsecConfEsp128BitAESWithMD5, policyDirection=policyDirection, roleUnGuestLogin=roleUnGuestLogin, schedGrpMemEntry=schedGrpMemEntry, autoBkupFtpServPasswd=autoBkupFtpServPasswd, natId=natId, pptpRemoteIpEndAddr=pptpRemoteIpEndAddr, minLifeTimeInKbs=minLifeTimeInKbs, hostId=hostId, pIntSecondaryDNS=pIntSecondaryDNS, exLdapServFilters=exLdapServFilters, exLdapServRowStatus=exLdapServRowStatus, vlanTable=vlanTable, connectionName=connectionName, stThresholdToSendTrap=stThresholdToSendTrap, cctDestinationConfChange=cctDestinationConfChange, tYear=tYear, schedule=schedule, schedGrpName=schedGrpName, exLdapServNotes=exLdapServNotes, exNtlmServRdAccState=exNtlmServRdAccState, autoBkupFtpServName=autoBkupFtpServName, adUsrAccessAccounting=adUsrAccessAccounting, vlanName=vlanName, exNtlmServTable=exNtlmServTable, exUserRuleEntry=exUserRuleEntry, btName=btName, adminUserTable=adminUserTable, l2tp=l2tp, certEndDate=certEndDate, appLogLevId=appLogLevId, certRowStatus=certRowStatus, exRdAuthServSecret=exRdAuthServSecret, hostNetmask=hostNetmask, schedEntry=schedEntry, schedEndDateAndTime=schedEndDateAndTime, connectionMac=connectionMac, exRdAuthServRowStatus=exRdAuthServRowStatus, nativeUserPassword=nativeUserPassword, exNtlmServMsrpc=exNtlmServMsrpc, httpRedirect=httpRedirect, interface=interface, pIntName=pIntName, roleQosRate=roleQosRate, vlanGrpEntry=vlanGrpEntry, ntyobjValue=ntyobjValue, serviceGrpTable=serviceGrpTable, adminUserId=adminUserId, nativeUserFixedIpAddr=nativeUserFixedIpAddr, hostGrpRowStatus=hostGrpRowStatus)
mibBuilder.exportSymbols("BLUESERVER-MIB", serviceGrpEntry=serviceGrpEntry, systemTracker=systemTracker, slaveRowStatus=slaveRowStatus, ipsecConfDiffieHellmanGrp2=ipsecConfDiffieHellmanGrp2, roleVpn=roleVpn, vlanGrpName=vlanGrpName, hostAddress=hostAddress, mIntEnableDhcpRelay=mIntEnableDhcpRelay, nativeUserRoleId=nativeUserRoleId, blueSocket=blueSocket, subnetVpnRtLastIp=subnetVpnRtLastIp, tNtpServers=tNtpServers, serviceEntry=serviceEntry, adUsrAccessRoles=adUsrAccessRoles, schedMonth=schedMonth, connectionCheckTime=connectionCheckTime, adUsrAccessMacDev=adUsrAccessMacDev, tHours=tHours, hostGrpName=hostGrpName, ipsecConfPsfMode=ipsecConfPsfMode, roleVlanId=roleVlanId, roleQosPriInOverride=roleQosPriInOverride, confLog=confLog, natEntry=natEntry, cctMobilityConfChange=cctMobilityConfChange, l2tpEnable=l2tpEnable, btEventOptStatus=btEventOptStatus, ex802AuthServNotes=ex802AuthServNotes, adminUsers=adminUsers, ipsecConfName=ipsecConfName, idleTimeout=idleTimeout, ex802AuthServName=ex802AuthServName, connectionBytes=connectionBytes, connectionAP=connectionAP, authenticationMethod=authenticationMethod, exLdapServName=exLdapServName, exLdapServSecret=exLdapServSecret, btSystemFailover=btSystemFailover, pIntEnableMulticast=pIntEnableMulticast, ex802AuthServDefaultRole=ex802AuthServDefaultRole, exRdAccServTable=exRdAccServTable, serviceRowStatus=serviceRowStatus, serviceMgmtName=serviceMgmtName, btLinkUp=btLinkUp, appLogLevEntry=appLogLevEntry, nativeUsers=nativeUsers, l2tpLocalIpAddr=l2tpLocalIpAddr, autoBkupFtpServUser=autoBkupFtpServUser, replication=replication, http=http, schedDayOfMonth=schedDayOfMonth, ipsec=ipsec, pIntHostName=pIntHostName, blueFailureTraps0=blueFailureTraps0, paFixedIpClientAccess=paFixedIpClientAccess, exRdAuthServTable=exRdAuthServTable, policyEntry=policyEntry, adminUserNotes=adminUserNotes, connectionRoleId=connectionRoleId, connectionLoginTime=connectionLoginTime, exNtlmServMsad=exNtlmServMsad, httpDefaultUrl=httpDefaultUrl, pptpRemoteIpStartAddr=pptpRemoteIpStartAddr)
